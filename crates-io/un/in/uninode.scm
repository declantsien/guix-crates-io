(define-module (crates-io un in uninode) #:use-module (crates-io))

(define-public crate-uninode-0.1.0 (c (n "uninode") (v "0.1.0") (d (list (d (n "log") (r "^0.4.14") (o #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive" "std"))) (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (o #t) (k 0)) (d (n "toml-rs") (r "^0.5.8") (o #t) (k 0) (p "toml")) (d (n "unicode-normalization") (r "^0.1.17") (o #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (o #t) (k 0)))) (h "1gc936wjlrs2kjqx1f8x2lvc2ckgx1swkp5l6lqhr4kh4s7d0233") (f (quote (("yaml" "loaders" "yaml-rust") ("toml" "loaders" "toml-rs") ("serialize" "serde" "serde_bytes") ("loaders" "once_cell" "log" "thiserror" "unicode-normalization") ("full" "serialize" "yaml" "toml") ("default"))))))

(define-public crate-uninode-0.1.1 (c (n "uninode") (v "0.1.1") (d (list (d (n "log") (r "^0.4.14") (o #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive" "std"))) (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (o #t) (k 0)) (d (n "toml-rs") (r "^0.5.8") (o #t) (k 0) (p "toml")) (d (n "unicode-normalization") (r "^0.1.17") (o #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (o #t) (k 0)))) (h "0wm3p8r1ayjapaiyvb5y57b1jp7nrzly5sqs73y36n4y8968xplf") (f (quote (("yaml" "loaders" "yaml-rust") ("toml" "loaders" "toml-rs") ("serialize" "serde" "serde_bytes") ("loaders" "once_cell" "log" "thiserror" "unicode-normalization") ("full" "serialize" "yaml" "toml") ("default"))))))

(define-public crate-uninode-0.1.2 (c (n "uninode") (v "0.1.2") (d (list (d (n "log") (r "^0.4.14") (o #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive" "std"))) (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (o #t) (k 0)) (d (n "toml-rs") (r "^0.5.8") (o #t) (k 0) (p "toml")) (d (n "unicode-normalization") (r "^0.1.17") (o #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (o #t) (k 0)))) (h "0d1f1z1kn9pn3lm8ac1z4j4v78c20yrvp0qylxmrmfldhc52pwc7") (f (quote (("yaml" "loaders" "yaml-rust") ("toml" "loaders" "toml-rs") ("serialize" "serde" "serde_bytes") ("loaders" "once_cell" "log" "thiserror" "unicode-normalization") ("full" "serialize" "yaml" "toml") ("default"))))))

(define-public crate-uninode-0.2.0 (c (n "uninode") (v "0.2.0") (d (list (d (n "log") (r "^0.4.14") (o #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive" "std"))) (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (o #t) (k 0)) (d (n "toml-rs") (r "^0.5.8") (o #t) (k 0) (p "toml")) (d (n "unicode-normalization") (r "^0.1.17") (o #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (o #t) (k 0)))) (h "1bk2h6zgv0gys02319fmgz6pgw42iw0h4b0l0fdc65r4p2gyql3w") (f (quote (("yaml" "loaders" "yaml-rust") ("toml" "loaders" "toml-rs") ("serialize" "serde" "serde_bytes") ("loaders" "once_cell" "log" "thiserror" "unicode-normalization") ("full" "serialize" "yaml" "toml") ("default"))))))

(define-public crate-uninode-0.3.0 (c (n "uninode") (v "0.3.0") (d (list (d (n "log") (r "^0.4.14") (o #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive" "std"))) (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (o #t) (k 0)) (d (n "toml-rs") (r "^0.5.8") (o #t) (k 0) (p "toml")) (d (n "unicode-normalization") (r "^0.1.17") (o #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (o #t) (k 0)))) (h "15yincghh7v6k530jnmax70dzwn5l55kfna78pwnngsfzkz7ws5j") (f (quote (("yaml" "loaders" "yaml-rust") ("toml" "loaders" "toml-rs") ("serialize" "serde" "serde_bytes") ("loaders" "once_cell" "log" "thiserror" "unicode-normalization") ("full" "serialize" "yaml" "toml") ("default"))))))

(define-public crate-uninode-0.4.0 (c (n "uninode") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0.53") (f (quote ("std"))) (o #t) (k 0)) (d (n "async-trait") (r "^0.1.52") (o #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive" "std"))) (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (k 0)) (d (n "toml-rs") (r "^0.5.8") (o #t) (k 0) (p "toml")) (d (n "yaml-rust") (r "^0.4.5") (o #t) (k 0)))) (h "03b3r38nh9zbrhr6hra1phk7nhpz7pvkz7dnfih88sjf2gynw991") (f (quote (("yaml" "loaders" "yaml-rust") ("toml" "loaders" "toml-rs") ("serialize" "serde" "serde_bytes") ("loaders" "thiserror" "anyhow" "once_cell" "async-trait") ("full" "serialize" "yaml" "toml") ("default"))))))

(define-public crate-uninode-0.4.1 (c (n "uninode") (v "0.4.1") (d (list (d (n "anyhow") (r "^1.0.53") (f (quote ("std"))) (o #t) (k 0)) (d (n "async-trait") (r "^0.1.52") (o #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive" "std"))) (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (k 0)) (d (n "toml-rs") (r "^0.5.8") (o #t) (k 0) (p "toml")) (d (n "yaml-rust") (r "^0.4.5") (o #t) (k 0)))) (h "0bbipvhnby7zcj8m02nin33k4nv6mw8z28a84xr0l4yz930d15sx") (f (quote (("yaml" "loaders" "yaml-rust") ("toml" "loaders" "toml-rs") ("serialize" "serde" "serde_bytes") ("loaders" "thiserror" "anyhow" "once_cell" "async-trait") ("full" "serialize" "yaml" "toml") ("default"))))))

(define-public crate-uninode-0.4.2 (c (n "uninode") (v "0.4.2") (d (list (d (n "anyhow") (r "^1.0.53") (f (quote ("std"))) (o #t) (k 0)) (d (n "async-trait") (r "^0.1.52") (o #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive" "std"))) (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (o #t) (k 0)) (d (n "toml-rs") (r "^0.5.8") (o #t) (k 0) (p "toml")) (d (n "yaml-rust") (r "^0.4.5") (o #t) (k 0)))) (h "1xdkifcms4z58215g6967hq3alpgklgv0l7l0dq9phzkrqa4317i") (f (quote (("yaml" "loaders" "yaml-rust") ("toml" "loaders" "toml-rs") ("serialize" "serde" "serde_bytes") ("loaders" "thiserror" "anyhow" "once_cell" "async-trait") ("full" "serialize" "yaml" "toml") ("default"))))))

