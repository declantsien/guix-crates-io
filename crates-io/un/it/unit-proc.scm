(define-module (crates-io un it unit-proc) #:use-module (crates-io))

(define-public crate-unit-proc-0.0.1 (c (n "unit-proc") (v "0.0.1") (d (list (d (n "const-frac") (r "^0.0") (f (quote ("tokenize"))) (d #t) (k 0)) (d (n "physical-quantity") (r "^0.0") (d #t) (k 0)) (d (n "physical-quantity") (r "^0.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "trybuild") (r "^1.0.49") (f (quote ("diff"))) (d #t) (k 2)) (d (n "typenum") (r "^1") (f (quote ("no_std"))) (k 2)))) (h "1spr4x3q3wxn2249jx5m094kysq0v6663xyc95smf2qr81bnm7pq")))

(define-public crate-unit-proc-0.0.2 (c (n "unit-proc") (v "0.0.2") (d (list (d (n "const-frac") (r "^0.0") (f (quote ("tokenize"))) (d #t) (k 0)) (d (n "physical-quantity") (r "^0.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "physical-quantity") (r "^0.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "trybuild") (r "^1.0.49") (f (quote ("diff"))) (d #t) (k 2)) (d (n "typenum") (r "^1") (f (quote ("no_std"))) (k 2)))) (h "032jqqh9lanzv170hy98n2kw4knc9ymqdc0f6bgcjkkcbh4zc1hl")))

(define-public crate-unit-proc-0.0.3 (c (n "unit-proc") (v "0.0.3") (d (list (d (n "const-frac") (r "^0.0") (f (quote ("tokenize"))) (d #t) (k 0)) (d (n "physical-quantity") (r "^0.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "physical-quantity") (r "^0.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "trybuild") (r "^1.0.49") (f (quote ("diff"))) (d #t) (k 2)) (d (n "typenum") (r "^1") (f (quote ("no_std"))) (k 2)))) (h "161y4d0103pk8vmf3vccs5g0jjpn0l3yyj30wq893wykc5w8mrvr")))

