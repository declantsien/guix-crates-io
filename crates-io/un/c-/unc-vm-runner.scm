(define-module (crates-io un c- unc-vm-runner) #:use-module (crates-io))

(define-public crate-unc-vm-runner-0.1.0 (c (n "unc-vm-runner") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.62") (o #t) (d #t) (k 0)) (d (n "arbitrary") (r "^1.2.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bn") (r "^0.5.11") (k 0) (p "zeropool-bn")) (d (n "bolero") (r "^0.10.0") (f (quote ("arbitrary"))) (d #t) (k 2)) (d (n "borsh") (r "^1.0.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1.0") (f (quote ("hazmat" "rand_core"))) (k 0)) (d (n "enum-map") (r "^2.1.0") (d #t) (k 0)) (d (n "expect-test") (r "^1.3.0") (d #t) (k 2)) (d (n "finite-wasm") (r "^0.5.0") (f (quote ("instrument"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (f (quote ("serde"))) (d #t) (k 2)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "memoffset") (r "^0.8") (d #t) (k 0)) (d (n "num-rational") (r "^0.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.13.1") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.42") (k 0)) (d (n "parity-wasm_41") (r "^0.41") (d #t) (k 0) (p "parity-wasm")) (d (n "prefix-sum-vec") (r "^0.1.2") (d #t) (k 0)) (d (n "pwasm-utils_12") (r "^0.12") (d #t) (k 0) (p "pwasm-utils")) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ripemd") (r "^0.1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("alloc" "derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_repr") (r "^0.1.8") (d #t) (k 0)) (d (n "serde_with") (r "^3.0") (f (quote ("base64"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "stdx") (r "^0.1.0") (d #t) (k 0) (p "unc-stdx")) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tracing") (r "^0.1.36") (f (quote ("std"))) (d #t) (k 0)) (d (n "unc-crypto") (r "^0.1.0") (d #t) (k 0)) (d (n "unc-parameters") (r "^0.1.0") (d #t) (k 0)) (d (n "unc-primitives-core") (r "^0.1.0") (d #t) (k 0)) (d (n "unc-vm-compiler") (r "^0.1.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "unc-vm-compiler-singlepass") (r "^0.1.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "unc-vm-engine") (r "^0.1.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "unc-vm-types") (r "^0.1.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "unc-vm-vm") (r "^0.1.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "wasm-encoder") (r "^0.27.0") (d #t) (k 0)) (d (n "wasm-smith") (r "^0.10") (d #t) (k 2)) (d (n "wasmer-compiler") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-compiler-near")) (d (n "wasmer-compiler-singlepass") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-compiler-singlepass-near")) (d (n "wasmer-engine") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-engine-near")) (d (n "wasmer-engine-universal") (r "=2.4.1") (f (quote ("compiler"))) (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-engine-universal-near")) (d (n "wasmer-runtime") (r "^0.18.0") (f (quote ("default-backend-singlepass"))) (o #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-runtime-near")) (d (n "wasmer-runtime-core") (r "^0.18.2") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-runtime-core-near")) (d (n "wasmer-types") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-types-near")) (d (n "wasmer-vm") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-vm-near")) (d (n "wasmparser") (r "^0.78") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2") (d #t) (k 2)) (d (n "wasmtime") (r "^14.0.4") (f (quote ("cranelift"))) (o #t) (k 0)) (d (n "wat") (r "^1.0.40") (d #t) (k 2)))) (h "1lavw08xiscn0zkq03b7gc42gk9plicsyv631a5rm88cs2d5hh3l") (f (quote (("wasmtime_vm" "wasmtime" "anyhow") ("wasmer2_vm" "wasmer-compiler" "wasmer-compiler-singlepass" "wasmer-engine" "wasmer-engine-universal" "wasmer-types" "wasmer-vm") ("wasmer0_vm" "wasmer-runtime" "wasmer-runtime-core") ("unc_vm" "unc-vm-compiler" "unc-vm-compiler-singlepass" "unc-vm-engine" "unc-vm-types" "unc-vm-vm") ("sandbox") ("protocol_feature_fix_contract_loading_cost" "unc-primitives-core/protocol_feature_fix_contract_loading_cost") ("no_cpu_compatibility_checks") ("no_cache") ("nightly_protocol" "unc-parameters/nightly_protocol" "unc-primitives-core/nightly_protocol") ("nightly" "nightly_protocol" "protocol_feature_fix_contract_loading_cost" "unc-parameters/nightly" "unc-primitives-core/nightly") ("io_trace") ("default" "wasmer0_vm" "wasmtime_vm" "wasmer2_vm" "unc_vm") ("costs_counting"))))))

(define-public crate-unc-vm-runner-0.2.0 (c (n "unc-vm-runner") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.62") (o #t) (d #t) (k 0)) (d (n "arbitrary") (r "^1.2.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bn") (r "^0.5.11") (k 0) (p "zeropool-bn")) (d (n "bolero") (r "^0.10.0") (f (quote ("arbitrary"))) (d #t) (k 2)) (d (n "borsh") (r "^1.0.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1.0") (f (quote ("hazmat" "rand_core"))) (k 0)) (d (n "enum-map") (r "^2.1.0") (d #t) (k 0)) (d (n "expect-test") (r "^1.3.0") (d #t) (k 2)) (d (n "finite-wasm") (r "^0.5.0") (f (quote ("instrument"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (f (quote ("serde"))) (d #t) (k 2)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "memoffset") (r "^0.8") (d #t) (k 0)) (d (n "num-rational") (r "^0.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.13.1") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.42") (k 0)) (d (n "parity-wasm_41") (r "^0.41") (d #t) (k 0) (p "parity-wasm")) (d (n "prefix-sum-vec") (r "^0.1.2") (d #t) (k 0)) (d (n "pwasm-utils_12") (r "^0.12") (d #t) (k 0) (p "pwasm-utils")) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ripemd") (r "^0.1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("alloc" "derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_repr") (r "^0.1.8") (d #t) (k 0)) (d (n "serde_with") (r "^3.0") (f (quote ("base64"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "stdx") (r "^0.1.0") (d #t) (k 0) (p "unc-stdx")) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tracing") (r "^0.1.36") (f (quote ("std"))) (d #t) (k 0)) (d (n "unc-crypto") (r "^0.1.0") (d #t) (k 0)) (d (n "unc-parameters") (r "^0.1.0") (d #t) (k 0)) (d (n "unc-primitives-core") (r "^0.1.0") (d #t) (k 0)) (d (n "unc-vm-compiler") (r "^0.1.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "unc-vm-compiler-singlepass") (r "^0.1.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "unc-vm-engine") (r "^0.1.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "unc-vm-types") (r "^0.1.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "unc-vm-vm") (r "^0.1.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "wasm-encoder") (r "^0.27.0") (d #t) (k 0)) (d (n "wasm-smith") (r "^0.10") (d #t) (k 2)) (d (n "wasmer-compiler") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-compiler-near")) (d (n "wasmer-compiler-singlepass") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-compiler-singlepass-near")) (d (n "wasmer-engine") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-engine-near")) (d (n "wasmer-engine-universal") (r "=2.4.1") (f (quote ("compiler"))) (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-engine-universal-near")) (d (n "wasmer-runtime") (r "^0.18.0") (f (quote ("default-backend-singlepass"))) (o #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-runtime-near")) (d (n "wasmer-runtime-core") (r "^0.18.2") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-runtime-core-near")) (d (n "wasmer-types") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-types-near")) (d (n "wasmer-vm") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-vm-near")) (d (n "wasmparser") (r "^0.78") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2") (d #t) (k 2)) (d (n "wasmtime") (r "^14.0.4") (f (quote ("cranelift"))) (o #t) (k 0)) (d (n "wat") (r "^1.0.40") (d #t) (k 2)))) (h "0pvqxjbkl0naz2mabjww6zqi3izfhcgxybv6xlfvics2w5fzd6ks") (f (quote (("wasmtime_vm" "wasmtime" "anyhow") ("wasmer2_vm" "wasmer-compiler" "wasmer-compiler-singlepass" "wasmer-engine" "wasmer-engine-universal" "wasmer-types" "wasmer-vm") ("wasmer0_vm" "wasmer-runtime" "wasmer-runtime-core") ("unc_vm" "unc-vm-compiler" "unc-vm-compiler-singlepass" "unc-vm-engine" "unc-vm-types" "unc-vm-vm") ("sandbox") ("protocol_feature_fix_contract_loading_cost" "unc-primitives-core/protocol_feature_fix_contract_loading_cost") ("no_cpu_compatibility_checks") ("no_cache") ("nightly_protocol" "unc-parameters/nightly_protocol" "unc-primitives-core/nightly_protocol") ("nightly" "nightly_protocol" "protocol_feature_fix_contract_loading_cost" "unc-parameters/nightly" "unc-primitives-core/nightly") ("io_trace") ("default" "wasmer0_vm" "wasmtime_vm" "wasmer2_vm" "unc_vm") ("costs_counting"))))))

(define-public crate-unc-vm-runner-0.5.1 (c (n "unc-vm-runner") (v "0.5.1") (d (list (d (n "anyhow") (r "^1.0.62") (o #t) (d #t) (k 0)) (d (n "arbitrary") (r "^1.2.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bn") (r "^0.5.11") (k 0) (p "zeropool-bn")) (d (n "bolero") (r "^0.10.0") (f (quote ("arbitrary"))) (d #t) (k 2)) (d (n "borsh") (r "^1.0.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1.0") (f (quote ("hazmat" "rand_core"))) (k 0)) (d (n "enum-map") (r "^2.1.0") (d #t) (k 0)) (d (n "expect-test") (r "^1.3.0") (d #t) (k 2)) (d (n "finite-wasm") (r "^0.5.0") (f (quote ("instrument"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (f (quote ("serde"))) (d #t) (k 2)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "memoffset") (r "^0.8") (d #t) (k 0)) (d (n "num-rational") (r "^0.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.13.1") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.42") (k 0)) (d (n "parity-wasm_41") (r "^0.41") (d #t) (k 0) (p "parity-wasm")) (d (n "prefix-sum-vec") (r "^0.1.2") (d #t) (k 0)) (d (n "pwasm-utils_12") (r "^0.12") (d #t) (k 0) (p "pwasm-utils")) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ripemd") (r "^0.1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("alloc" "derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_repr") (r "^0.1.8") (d #t) (k 0)) (d (n "serde_with") (r "^3.0") (f (quote ("base64"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "stdx") (r "^0.5.1") (d #t) (k 0) (p "unc-stdx")) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tracing") (r "^0.1.36") (f (quote ("std"))) (d #t) (k 0)) (d (n "unc-crypto") (r "^0.5.1") (d #t) (k 0)) (d (n "unc-parameters") (r "^0.5.1") (d #t) (k 0)) (d (n "unc-primitives-core") (r "^0.5.1") (d #t) (k 0)) (d (n "unc-vm-compiler") (r "^0.5.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "unc-vm-compiler-singlepass") (r "^0.5.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "unc-vm-engine") (r "^0.5.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "unc-vm-types") (r "^0.5.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "unc-vm-vm") (r "^0.5.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "wasm-encoder") (r "^0.27.0") (d #t) (k 0)) (d (n "wasm-smith") (r "^0.10") (d #t) (k 2)) (d (n "wasmer-compiler") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-compiler-near")) (d (n "wasmer-compiler-singlepass") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-compiler-singlepass-near")) (d (n "wasmer-engine") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-engine-near")) (d (n "wasmer-engine-universal") (r "=2.4.1") (f (quote ("compiler"))) (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-engine-universal-near")) (d (n "wasmer-runtime") (r "^0.18.0") (f (quote ("default-backend-singlepass"))) (o #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-runtime-near")) (d (n "wasmer-runtime-core") (r "^0.18.2") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-runtime-core-near")) (d (n "wasmer-types") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-types-near")) (d (n "wasmer-vm") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-vm-near")) (d (n "wasmparser") (r "^0.78") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2") (d #t) (k 2)) (d (n "wasmtime") (r "^14.0.4") (f (quote ("cranelift"))) (o #t) (k 0)) (d (n "wat") (r "^1.0.40") (d #t) (k 2)))) (h "1xzyhzz18m5i44671bwggibr2q4zcnprrw30s4ld1sblscbvhhr1") (f (quote (("wasmtime_vm" "wasmtime" "anyhow") ("wasmer2_vm" "wasmer-compiler" "wasmer-compiler-singlepass" "wasmer-engine" "wasmer-engine-universal" "wasmer-types" "wasmer-vm") ("wasmer0_vm" "wasmer-runtime" "wasmer-runtime-core") ("unc_vm" "unc-vm-compiler" "unc-vm-compiler-singlepass" "unc-vm-engine" "unc-vm-types" "unc-vm-vm") ("sandbox") ("protocol_feature_fix_contract_loading_cost" "unc-primitives-core/protocol_feature_fix_contract_loading_cost") ("no_cpu_compatibility_checks") ("no_cache") ("nightly_protocol" "unc-parameters/nightly_protocol" "unc-primitives-core/nightly_protocol") ("nightly" "nightly_protocol" "protocol_feature_fix_contract_loading_cost" "unc-parameters/nightly" "unc-primitives-core/nightly") ("io_trace") ("default" "wasmer0_vm" "wasmtime_vm" "wasmer2_vm" "unc_vm") ("costs_counting"))))))

(define-public crate-unc-vm-runner-0.5.2 (c (n "unc-vm-runner") (v "0.5.2") (d (list (d (n "anyhow") (r "^1.0.62") (o #t) (d #t) (k 0)) (d (n "arbitrary") (r "^1.2.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bn") (r "^0.5.11") (k 0) (p "zeropool-bn")) (d (n "bolero") (r "^0.10.0") (f (quote ("arbitrary"))) (d #t) (k 2)) (d (n "borsh") (r "^1.0.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1.0") (f (quote ("hazmat" "rand_core"))) (k 0)) (d (n "enum-map") (r "^2.1.0") (d #t) (k 0)) (d (n "expect-test") (r "^1.3.0") (d #t) (k 2)) (d (n "finite-wasm") (r "^0.5.0") (f (quote ("instrument"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (f (quote ("serde"))) (d #t) (k 2)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "memoffset") (r "^0.8") (d #t) (k 0)) (d (n "num-rational") (r "^0.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.13.1") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.42") (k 0)) (d (n "parity-wasm_41") (r "^0.41") (d #t) (k 0) (p "parity-wasm")) (d (n "prefix-sum-vec") (r "^0.1.2") (d #t) (k 0)) (d (n "pwasm-utils_12") (r "^0.12") (d #t) (k 0) (p "pwasm-utils")) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ripemd") (r "^0.1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("alloc" "derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_repr") (r "^0.1.8") (d #t) (k 0)) (d (n "serde_with") (r "^3.0") (f (quote ("base64"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "stdx") (r "^0.5.1") (d #t) (k 0) (p "unc-stdx")) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tracing") (r "^0.1.36") (f (quote ("std"))) (d #t) (k 0)) (d (n "unc-crypto") (r "^0.5.1") (d #t) (k 0)) (d (n "unc-parameters") (r "^0.5.1") (d #t) (k 0)) (d (n "unc-primitives-core") (r "^0.5.1") (d #t) (k 0)) (d (n "unc-vm-compiler") (r "^0.5.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "unc-vm-compiler-singlepass") (r "^0.5.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "unc-vm-engine") (r "^0.5.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "unc-vm-types") (r "^0.5.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "unc-vm-vm") (r "^0.5.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "wasm-encoder") (r "^0.27.0") (d #t) (k 0)) (d (n "wasm-smith") (r "^0.10") (d #t) (k 2)) (d (n "wasmer-compiler") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-compiler-near")) (d (n "wasmer-compiler-singlepass") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-compiler-singlepass-near")) (d (n "wasmer-engine") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-engine-near")) (d (n "wasmer-engine-universal") (r "=2.4.1") (f (quote ("compiler"))) (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-engine-universal-near")) (d (n "wasmer-runtime") (r "^0.18.0") (f (quote ("default-backend-singlepass"))) (o #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-runtime-near")) (d (n "wasmer-runtime-core") (r "^0.18.2") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-runtime-core-near")) (d (n "wasmer-types") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-types-near")) (d (n "wasmer-vm") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-vm-near")) (d (n "wasmparser") (r "^0.78") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2") (d #t) (k 2)) (d (n "wasmtime") (r "^14.0.4") (f (quote ("cranelift"))) (o #t) (k 0)) (d (n "wat") (r "^1.0.40") (d #t) (k 2)))) (h "0gn2s6c3x2lznlriqr7kaqdm59f0y961sb8clmwwx9hwjg0bdz98") (f (quote (("wasmtime_vm" "wasmtime" "anyhow") ("wasmer2_vm" "wasmer-compiler" "wasmer-compiler-singlepass" "wasmer-engine" "wasmer-engine-universal" "wasmer-types" "wasmer-vm") ("wasmer0_vm" "wasmer-runtime" "wasmer-runtime-core") ("unc_vm" "unc-vm-compiler" "unc-vm-compiler-singlepass" "unc-vm-engine" "unc-vm-types" "unc-vm-vm") ("sandbox") ("protocol_feature_fix_contract_loading_cost" "unc-primitives-core/protocol_feature_fix_contract_loading_cost") ("no_cpu_compatibility_checks") ("no_cache") ("nightly_protocol" "unc-parameters/nightly_protocol" "unc-primitives-core/nightly_protocol") ("nightly" "nightly_protocol" "protocol_feature_fix_contract_loading_cost" "unc-parameters/nightly" "unc-primitives-core/nightly") ("io_trace") ("default" "wasmer0_vm" "wasmtime_vm" "wasmer2_vm" "unc_vm") ("costs_counting"))))))

(define-public crate-unc-vm-runner-0.6.0 (c (n "unc-vm-runner") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0.62") (o #t) (d #t) (k 0)) (d (n "arbitrary") (r "^1.2.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bn") (r "^0.5.11") (k 0) (p "zeropool-bn")) (d (n "bolero") (r "^0.10.0") (f (quote ("arbitrary"))) (d #t) (k 2)) (d (n "borsh") (r "^1.0.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1.0") (f (quote ("hazmat" "rand_core"))) (k 0)) (d (n "enum-map") (r "^2.1.0") (d #t) (k 0)) (d (n "expect-test") (r "^1.3.0") (d #t) (k 2)) (d (n "finite-wasm") (r "^0.5.0") (f (quote ("instrument"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (f (quote ("serde"))) (d #t) (k 2)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "memoffset") (r "^0.8") (d #t) (k 0)) (d (n "num-rational") (r "^0.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.13.1") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.42") (k 0)) (d (n "parity-wasm_41") (r "^0.41") (d #t) (k 0) (p "parity-wasm")) (d (n "prefix-sum-vec") (r "^0.1.2") (d #t) (k 0)) (d (n "pwasm-utils_12") (r "^0.12") (d #t) (k 0) (p "pwasm-utils")) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ripemd") (r "^0.1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("alloc" "derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_repr") (r "^0.1.8") (d #t) (k 0)) (d (n "serde_with") (r "^3.0") (f (quote ("base64"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "stdx") (r "^0.6.0") (d #t) (k 0) (p "unc-stdx")) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tracing") (r "^0.1.36") (f (quote ("std"))) (d #t) (k 0)) (d (n "unc-crypto") (r "^0.6.0") (d #t) (k 0)) (d (n "unc-parameters") (r "^0.6.0") (d #t) (k 0)) (d (n "unc-primitives-core") (r "^0.6.0") (d #t) (k 0)) (d (n "unc-vm-compiler") (r "^0.6.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "unc-vm-compiler-singlepass") (r "^0.6.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "unc-vm-engine") (r "^0.6.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "unc-vm-types") (r "^0.6.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "unc-vm-vm") (r "^0.6.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "wasm-encoder") (r "^0.27.0") (d #t) (k 0)) (d (n "wasm-smith") (r "^0.10") (d #t) (k 2)) (d (n "wasmer-compiler") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-compiler-near")) (d (n "wasmer-compiler-singlepass") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-compiler-singlepass-near")) (d (n "wasmer-engine") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-engine-near")) (d (n "wasmer-engine-universal") (r "=2.4.1") (f (quote ("compiler"))) (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-engine-universal-near")) (d (n "wasmer-runtime") (r "^0.18.0") (f (quote ("default-backend-singlepass"))) (o #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-runtime-near")) (d (n "wasmer-runtime-core") (r "^0.18.2") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-runtime-core-near")) (d (n "wasmer-types") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-types-near")) (d (n "wasmer-vm") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-vm-near")) (d (n "wasmparser") (r "^0.78") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2") (d #t) (k 2)) (d (n "wasmtime") (r "^14.0.4") (f (quote ("cranelift"))) (o #t) (k 0)) (d (n "wat") (r "^1.0.40") (d #t) (k 2)))) (h "1y8ln1z591pdsb3x99l0r8w8i5p9kz7dpvdwrik31lgc27aiz27c") (f (quote (("wasmtime_vm" "wasmtime" "anyhow") ("wasmer2_vm" "wasmer-compiler" "wasmer-compiler-singlepass" "wasmer-engine" "wasmer-engine-universal" "wasmer-types" "wasmer-vm") ("wasmer0_vm" "wasmer-runtime" "wasmer-runtime-core") ("unc_vm" "unc-vm-compiler" "unc-vm-compiler-singlepass" "unc-vm-engine" "unc-vm-types" "unc-vm-vm") ("sandbox") ("protocol_feature_fix_contract_loading_cost" "unc-primitives-core/protocol_feature_fix_contract_loading_cost") ("no_cpu_compatibility_checks") ("no_cache") ("nightly_protocol" "unc-parameters/nightly_protocol" "unc-primitives-core/nightly_protocol") ("nightly" "nightly_protocol" "protocol_feature_fix_contract_loading_cost" "unc-parameters/nightly" "unc-primitives-core/nightly") ("io_trace") ("default" "wasmer0_vm" "wasmtime_vm" "wasmer2_vm" "unc_vm") ("costs_counting"))))))

(define-public crate-unc-vm-runner-0.6.1 (c (n "unc-vm-runner") (v "0.6.1") (d (list (d (n "anyhow") (r "^1.0.62") (o #t) (d #t) (k 0)) (d (n "arbitrary") (r "^1.2.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bn") (r "^0.5.11") (k 0) (p "zeropool-bn")) (d (n "bolero") (r "^0.10.0") (f (quote ("arbitrary"))) (d #t) (k 2)) (d (n "borsh") (r "^1.0.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1.0") (f (quote ("hazmat" "rand_core"))) (k 0)) (d (n "enum-map") (r "^2.1.0") (d #t) (k 0)) (d (n "expect-test") (r "^1.3.0") (d #t) (k 2)) (d (n "finite-wasm") (r "^0.5.0") (f (quote ("instrument"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (f (quote ("serde"))) (d #t) (k 2)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "memoffset") (r "^0.8") (d #t) (k 0)) (d (n "num-rational") (r "^0.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.13.1") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.42") (k 0)) (d (n "parity-wasm_41") (r "^0.41") (d #t) (k 0) (p "parity-wasm")) (d (n "prefix-sum-vec") (r "^0.1.2") (d #t) (k 0)) (d (n "pwasm-utils_12") (r "^0.12") (d #t) (k 0) (p "pwasm-utils")) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ripemd") (r "^0.1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("alloc" "derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_repr") (r "^0.1.8") (d #t) (k 0)) (d (n "serde_with") (r "^3.0") (f (quote ("base64"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "stdx") (r "^0.6.1") (d #t) (k 0) (p "unc-stdx")) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tracing") (r "^0.1.36") (f (quote ("std"))) (d #t) (k 0)) (d (n "unc-crypto") (r "^0.6.1") (d #t) (k 0)) (d (n "unc-parameters") (r "^0.6.1") (d #t) (k 0)) (d (n "unc-primitives-core") (r "^0.6.1") (d #t) (k 0)) (d (n "unc-vm-compiler") (r "^0.6.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "unc-vm-compiler-singlepass") (r "^0.6.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "unc-vm-engine") (r "^0.6.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "unc-vm-types") (r "^0.6.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "unc-vm-vm") (r "^0.6.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "wasm-encoder") (r "^0.27.0") (d #t) (k 0)) (d (n "wasm-smith") (r "^0.10") (d #t) (k 2)) (d (n "wasmer-compiler") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-compiler-near")) (d (n "wasmer-compiler-singlepass") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-compiler-singlepass-near")) (d (n "wasmer-engine") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-engine-near")) (d (n "wasmer-engine-universal") (r "=2.4.1") (f (quote ("compiler"))) (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-engine-universal-near")) (d (n "wasmer-runtime") (r "^0.18.0") (f (quote ("default-backend-singlepass"))) (o #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-runtime-near")) (d (n "wasmer-runtime-core") (r "^0.18.2") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-runtime-core-near")) (d (n "wasmer-types") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-types-near")) (d (n "wasmer-vm") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-vm-near")) (d (n "wasmparser") (r "^0.78") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2") (d #t) (k 2)) (d (n "wasmtime") (r "^14.0.4") (f (quote ("cranelift"))) (o #t) (k 0)) (d (n "wat") (r "^1.0.40") (d #t) (k 2)))) (h "17pivqpqa8m2i98nvqv4sd7rh7dxibnn05asnc5jmsncix2kvrc2") (f (quote (("wasmtime_vm" "wasmtime" "anyhow") ("wasmer2_vm" "wasmer-compiler" "wasmer-compiler-singlepass" "wasmer-engine" "wasmer-engine-universal" "wasmer-types" "wasmer-vm") ("wasmer0_vm" "wasmer-runtime" "wasmer-runtime-core") ("unc_vm" "unc-vm-compiler" "unc-vm-compiler-singlepass" "unc-vm-engine" "unc-vm-types" "unc-vm-vm") ("sandbox") ("protocol_feature_fix_contract_loading_cost" "unc-primitives-core/protocol_feature_fix_contract_loading_cost") ("no_cpu_compatibility_checks") ("no_cache") ("nightly_protocol" "unc-parameters/nightly_protocol" "unc-primitives-core/nightly_protocol") ("nightly" "nightly_protocol" "protocol_feature_fix_contract_loading_cost" "unc-parameters/nightly" "unc-primitives-core/nightly") ("io_trace") ("default" "wasmer0_vm" "wasmtime_vm" "wasmer2_vm" "unc_vm") ("costs_counting"))))))

(define-public crate-unc-vm-runner-0.7.0 (c (n "unc-vm-runner") (v "0.7.0") (d (list (d (n "anyhow") (r "^1.0.62") (o #t) (d #t) (k 0)) (d (n "arbitrary") (r "^1.2.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bn") (r "^0.5.11") (k 0) (p "zeropool-bn")) (d (n "bolero") (r "^0.10.0") (f (quote ("arbitrary"))) (d #t) (k 2)) (d (n "borsh") (r "^1.0.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1.0") (f (quote ("hazmat" "rand_core"))) (k 0)) (d (n "enum-map") (r "^2.1.0") (d #t) (k 0)) (d (n "expect-test") (r "^1.3.0") (d #t) (k 2)) (d (n "finite-wasm") (r "^0.5.0") (f (quote ("instrument"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (f (quote ("serde"))) (d #t) (k 2)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "memoffset") (r "^0.8") (d #t) (k 0)) (d (n "num-rational") (r "^0.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.13.1") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.42") (k 0)) (d (n "parity-wasm_41") (r "^0.41") (d #t) (k 0) (p "parity-wasm")) (d (n "prefix-sum-vec") (r "^0.1.2") (d #t) (k 0)) (d (n "pwasm-utils_12") (r "^0.12") (d #t) (k 0) (p "pwasm-utils")) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ripemd") (r "^0.1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("alloc" "derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_repr") (r "^0.1.8") (d #t) (k 0)) (d (n "serde_with") (r "^3.0") (f (quote ("base64"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "stdx") (r "^0.7.0") (d #t) (k 0) (p "unc-stdx")) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tracing") (r "^0.1.36") (f (quote ("std"))) (d #t) (k 0)) (d (n "unc-crypto") (r "^0.7.0") (d #t) (k 0)) (d (n "unc-parameters") (r "^0.7.0") (d #t) (k 0)) (d (n "unc-primitives-core") (r "^0.7.0") (d #t) (k 0)) (d (n "unc-vm-compiler") (r "^0.7.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "unc-vm-compiler-singlepass") (r "^0.7.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "unc-vm-engine") (r "^0.7.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "unc-vm-types") (r "^0.7.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "unc-vm-vm") (r "^0.7.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "wasm-encoder") (r "^0.27.0") (d #t) (k 0)) (d (n "wasm-smith") (r "^0.10") (d #t) (k 2)) (d (n "wasmer-compiler") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-compiler-near")) (d (n "wasmer-compiler-singlepass") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-compiler-singlepass-near")) (d (n "wasmer-engine") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-engine-near")) (d (n "wasmer-engine-universal") (r "=2.4.1") (f (quote ("compiler"))) (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-engine-universal-near")) (d (n "wasmer-runtime") (r "^0.18.0") (f (quote ("default-backend-singlepass"))) (o #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-runtime-near")) (d (n "wasmer-runtime-core") (r "^0.18.2") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-runtime-core-near")) (d (n "wasmer-types") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-types-near")) (d (n "wasmer-vm") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-vm-near")) (d (n "wasmparser") (r "^0.78") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2") (d #t) (k 2)) (d (n "wasmtime") (r "^14.0.4") (f (quote ("cranelift"))) (o #t) (k 0)) (d (n "wat") (r "^1.0.40") (d #t) (k 2)))) (h "0vb8cz8fvcfc7lg3s7hl86v2akbh2qd3jvkgi0l83gi8dwnbqdjr") (f (quote (("wasmtime_vm" "wasmtime" "anyhow") ("wasmer2_vm" "wasmer-compiler" "wasmer-compiler-singlepass" "wasmer-engine" "wasmer-engine-universal" "wasmer-types" "wasmer-vm") ("wasmer0_vm" "wasmer-runtime" "wasmer-runtime-core") ("unc_vm" "unc-vm-compiler" "unc-vm-compiler-singlepass" "unc-vm-engine" "unc-vm-types" "unc-vm-vm") ("sandbox") ("protocol_feature_fix_contract_loading_cost" "unc-primitives-core/protocol_feature_fix_contract_loading_cost") ("no_cpu_compatibility_checks") ("no_cache") ("nightly_protocol" "unc-parameters/nightly_protocol" "unc-primitives-core/nightly_protocol") ("nightly" "nightly_protocol" "protocol_feature_fix_contract_loading_cost" "unc-parameters/nightly" "unc-primitives-core/nightly") ("io_trace") ("default" "wasmer0_vm" "wasmtime_vm" "wasmer2_vm" "unc_vm") ("costs_counting"))))))

(define-public crate-unc-vm-runner-0.7.1 (c (n "unc-vm-runner") (v "0.7.1") (d (list (d (n "anyhow") (r "^1.0.62") (o #t) (d #t) (k 0)) (d (n "arbitrary") (r "^1.2.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bn") (r "^0.5.11") (k 0) (p "zeropool-bn")) (d (n "bolero") (r "^0.10.1") (f (quote ("arbitrary"))) (d #t) (k 2)) (d (n "borsh") (r "^1.0.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1.0") (f (quote ("hazmat" "rand_core"))) (k 0)) (d (n "enum-map") (r "^2.1.0") (d #t) (k 0)) (d (n "expect-test") (r "^1.3.0") (d #t) (k 2)) (d (n "finite-wasm") (r "^0.5.0") (f (quote ("instrument"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (f (quote ("serde"))) (d #t) (k 2)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "memoffset") (r "^0.8") (d #t) (k 0)) (d (n "num-rational") (r "^0.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.13.1") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.42") (k 0)) (d (n "parity-wasm_41") (r "^0.41") (d #t) (k 0) (p "parity-wasm")) (d (n "prefix-sum-vec") (r "^0.1.2") (d #t) (k 0)) (d (n "pwasm-utils_12") (r "^0.12") (d #t) (k 0) (p "pwasm-utils")) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ripemd") (r "^0.1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("alloc" "derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_repr") (r "^0.1.8") (d #t) (k 0)) (d (n "serde_with") (r "^3.0") (f (quote ("base64"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "stdx") (r "^0.7.1") (d #t) (k 0) (p "unc-stdx")) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tracing") (r "^0.1.36") (f (quote ("std"))) (d #t) (k 0)) (d (n "unc-crypto") (r "^0.7.1") (d #t) (k 0)) (d (n "unc-parameters") (r "^0.7.1") (d #t) (k 0)) (d (n "unc-primitives-core") (r "^0.7.1") (d #t) (k 0)) (d (n "unc-vm-compiler") (r "^0.7.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "unc-vm-compiler-singlepass") (r "^0.7.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "unc-vm-engine") (r "^0.7.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "unc-vm-types") (r "^0.7.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "unc-vm-vm") (r "^0.7.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "wasm-encoder") (r "^0.27.0") (d #t) (k 0)) (d (n "wasm-smith") (r "^0.10") (d #t) (k 2)) (d (n "wasmer-compiler") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-compiler-near")) (d (n "wasmer-compiler-singlepass") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-compiler-singlepass-near")) (d (n "wasmer-engine") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-engine-near")) (d (n "wasmer-engine-universal") (r "=2.4.1") (f (quote ("compiler"))) (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-engine-universal-near")) (d (n "wasmer-runtime") (r "^0.18.0") (f (quote ("default-backend-singlepass"))) (o #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-runtime-near")) (d (n "wasmer-runtime-core") (r "^0.18.2") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-runtime-core-near")) (d (n "wasmer-types") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-types-near")) (d (n "wasmer-vm") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-vm-near")) (d (n "wasmparser") (r "^0.99") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2") (d #t) (k 2)) (d (n "wasmtime") (r "^14.0.4") (f (quote ("cranelift"))) (o #t) (k 0)) (d (n "wat") (r "^1.0.40") (d #t) (k 2)))) (h "1wmwn2axsjxrykacpjh27grlpsc56yl618nh9g1fhxb8fmv7ahyc") (f (quote (("wasmtime_vm" "wasmtime" "anyhow") ("wasmer2_vm" "wasmer-compiler" "wasmer-compiler-singlepass" "wasmer-engine" "wasmer-engine-universal" "wasmer-types" "wasmer-vm") ("wasmer0_vm" "wasmer-runtime" "wasmer-runtime-core") ("unc_vm" "unc-vm-compiler" "unc-vm-compiler-singlepass" "unc-vm-engine" "unc-vm-types" "unc-vm-vm") ("sandbox") ("protocol_feature_fix_contract_loading_cost" "unc-primitives-core/protocol_feature_fix_contract_loading_cost") ("no_cpu_compatibility_checks") ("no_cache") ("nightly_protocol" "unc-parameters/nightly_protocol" "unc-primitives-core/nightly_protocol") ("nightly" "nightly_protocol" "protocol_feature_fix_contract_loading_cost" "unc-parameters/nightly" "unc-primitives-core/nightly") ("io_trace") ("default" "wasmer0_vm" "wasmtime_vm" "wasmer2_vm" "unc_vm") ("costs_counting"))))))

(define-public crate-unc-vm-runner-0.7.2 (c (n "unc-vm-runner") (v "0.7.2") (d (list (d (n "anyhow") (r "^1.0.62") (o #t) (d #t) (k 0)) (d (n "arbitrary") (r "^1.2.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bn") (r "^0.5.11") (k 0) (p "zeropool-bn")) (d (n "bolero") (r "^0.10.1") (f (quote ("arbitrary"))) (d #t) (k 2)) (d (n "borsh") (r "^1.0.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1.0") (f (quote ("hazmat" "rand_core"))) (k 0)) (d (n "enum-map") (r "^2.1.0") (d #t) (k 0)) (d (n "expect-test") (r "^1.3.0") (d #t) (k 2)) (d (n "finite-wasm") (r "^0.5.0") (f (quote ("instrument"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (f (quote ("serde"))) (d #t) (k 2)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "memoffset") (r "^0.8") (d #t) (k 0)) (d (n "num-rational") (r "^0.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.13.1") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.42") (k 0)) (d (n "parity-wasm_41") (r "^0.41") (d #t) (k 0) (p "parity-wasm")) (d (n "prefix-sum-vec") (r "^0.1.2") (d #t) (k 0)) (d (n "pwasm-utils_12") (r "^0.12") (d #t) (k 0) (p "pwasm-utils")) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ripemd") (r "^0.1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("alloc" "derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_repr") (r "^0.1.8") (d #t) (k 0)) (d (n "serde_with") (r "^3.0") (f (quote ("base64"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "stdx") (r "^0.7.2") (d #t) (k 0) (p "unc-stdx")) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tracing") (r "^0.1.36") (f (quote ("std"))) (d #t) (k 0)) (d (n "unc-crypto") (r "^0.7.2") (d #t) (k 0)) (d (n "unc-parameters") (r "^0.7.2") (d #t) (k 0)) (d (n "unc-primitives-core") (r "^0.7.2") (d #t) (k 0)) (d (n "unc-vm-compiler") (r "^0.7.2") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "unc-vm-compiler-singlepass") (r "^0.7.2") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "unc-vm-engine") (r "^0.7.2") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "unc-vm-types") (r "^0.7.2") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "unc-vm-vm") (r "^0.7.2") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "wasm-encoder") (r "^0.27.0") (d #t) (k 0)) (d (n "wasm-smith") (r "^0.10") (d #t) (k 2)) (d (n "wasmer-compiler") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-compiler-near")) (d (n "wasmer-compiler-singlepass") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-compiler-singlepass-near")) (d (n "wasmer-engine") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-engine-near")) (d (n "wasmer-engine-universal") (r "=2.4.1") (f (quote ("compiler"))) (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-engine-universal-near")) (d (n "wasmer-runtime") (r "^0.18.0") (f (quote ("default-backend-singlepass"))) (o #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-runtime-near")) (d (n "wasmer-runtime-core") (r "^0.18.2") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-runtime-core-near")) (d (n "wasmer-types") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-types-near")) (d (n "wasmer-vm") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-vm-near")) (d (n "wasmparser") (r "^0.99") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2") (d #t) (k 2)) (d (n "wasmtime") (r "^14.0.4") (f (quote ("cranelift"))) (o #t) (k 0)) (d (n "wat") (r "^1.0.40") (d #t) (k 2)))) (h "0a72bf9r0k478zprjj9hqg0jivlaq1g2xj250mpwc74dpp0yf2mv") (f (quote (("wasmtime_vm" "wasmtime" "anyhow") ("wasmer2_vm" "wasmer-compiler" "wasmer-compiler-singlepass" "wasmer-engine" "wasmer-engine-universal" "wasmer-types" "wasmer-vm") ("wasmer0_vm" "wasmer-runtime" "wasmer-runtime-core") ("unc_vm" "unc-vm-compiler" "unc-vm-compiler-singlepass" "unc-vm-engine" "unc-vm-types" "unc-vm-vm") ("sandbox") ("protocol_feature_fix_contract_loading_cost" "unc-primitives-core/protocol_feature_fix_contract_loading_cost") ("no_cpu_compatibility_checks") ("no_cache") ("nightly_protocol" "unc-parameters/nightly_protocol" "unc-primitives-core/nightly_protocol") ("nightly" "nightly_protocol" "protocol_feature_fix_contract_loading_cost" "unc-parameters/nightly" "unc-primitives-core/nightly") ("io_trace") ("default" "wasmer0_vm" "wasmtime_vm" "wasmer2_vm" "unc_vm") ("costs_counting"))))))

(define-public crate-unc-vm-runner-0.7.3 (c (n "unc-vm-runner") (v "0.7.3") (d (list (d (n "anyhow") (r "^1.0.62") (o #t) (d #t) (k 0)) (d (n "arbitrary") (r "^1.2.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bn") (r "^0.5.11") (k 0) (p "zeropool-bn")) (d (n "bolero") (r "^0.10.1") (f (quote ("arbitrary"))) (d #t) (k 2)) (d (n "borsh") (r "^1.0.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1.0") (f (quote ("hazmat" "rand_core"))) (k 0)) (d (n "enum-map") (r "^2.1.0") (d #t) (k 0)) (d (n "expect-test") (r "^1.3.0") (d #t) (k 2)) (d (n "finite-wasm") (r "^0.5.0") (f (quote ("instrument"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (f (quote ("serde"))) (d #t) (k 2)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "memoffset") (r "^0.8") (d #t) (k 0)) (d (n "num-rational") (r "^0.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.13.1") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.42") (k 0)) (d (n "parity-wasm_41") (r "^0.41") (d #t) (k 0) (p "parity-wasm")) (d (n "prefix-sum-vec") (r "^0.1.2") (d #t) (k 0)) (d (n "pwasm-utils_12") (r "^0.12") (d #t) (k 0) (p "pwasm-utils")) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ripemd") (r "^0.1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("alloc" "derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_repr") (r "^0.1.8") (d #t) (k 0)) (d (n "serde_with") (r "^3.0") (f (quote ("base64"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "stdx") (r "^0.7.3") (d #t) (k 0) (p "unc-stdx")) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tracing") (r "^0.1.36") (f (quote ("std"))) (d #t) (k 0)) (d (n "unc-crypto") (r "^0.7.3") (d #t) (k 0)) (d (n "unc-parameters") (r "^0.7.3") (d #t) (k 0)) (d (n "unc-primitives-core") (r "^0.7.3") (d #t) (k 0)) (d (n "unc-vm-compiler") (r "^0.7.3") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "unc-vm-compiler-singlepass") (r "^0.7.3") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "unc-vm-engine") (r "^0.7.3") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "unc-vm-types") (r "^0.7.3") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "unc-vm-vm") (r "^0.7.3") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "wasm-encoder") (r "^0.27.0") (d #t) (k 0)) (d (n "wasm-smith") (r "^0.10") (d #t) (k 2)) (d (n "wasmer-compiler") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-compiler-near")) (d (n "wasmer-compiler-singlepass") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-compiler-singlepass-near")) (d (n "wasmer-engine") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-engine-near")) (d (n "wasmer-engine-universal") (r "=2.4.1") (f (quote ("compiler"))) (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-engine-universal-near")) (d (n "wasmer-runtime") (r "^0.18.0") (f (quote ("default-backend-singlepass"))) (o #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-runtime-near")) (d (n "wasmer-runtime-core") (r "^0.18.2") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-runtime-core-near")) (d (n "wasmer-types") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-types-near")) (d (n "wasmer-vm") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-vm-near")) (d (n "wasmparser") (r "^0.99") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2") (d #t) (k 2)) (d (n "wasmtime") (r "^14.0.4") (f (quote ("cranelift"))) (o #t) (k 0)) (d (n "wat") (r "^1.0.40") (d #t) (k 2)))) (h "0k66mssrd9i2l2vc1175d26adgwhd2h4krkhas1a013s3cqpwph5") (f (quote (("wasmtime_vm" "wasmtime" "anyhow") ("wasmer2_vm" "wasmer-compiler" "wasmer-compiler-singlepass" "wasmer-engine" "wasmer-engine-universal" "wasmer-types" "wasmer-vm") ("wasmer0_vm" "wasmer-runtime" "wasmer-runtime-core") ("unc_vm" "unc-vm-compiler" "unc-vm-compiler-singlepass" "unc-vm-engine" "unc-vm-types" "unc-vm-vm") ("sandbox") ("protocol_feature_fix_contract_loading_cost" "unc-primitives-core/protocol_feature_fix_contract_loading_cost") ("no_cpu_compatibility_checks") ("no_cache") ("nightly_protocol" "unc-parameters/nightly_protocol" "unc-primitives-core/nightly_protocol") ("nightly" "nightly_protocol" "protocol_feature_fix_contract_loading_cost" "unc-parameters/nightly" "unc-primitives-core/nightly") ("io_trace") ("default" "wasmer0_vm" "wasmtime_vm" "wasmer2_vm" "unc_vm") ("costs_counting"))))))

(define-public crate-unc-vm-runner-0.10.0 (c (n "unc-vm-runner") (v "0.10.0") (d (list (d (n "anyhow") (r "^1.0.62") (o #t) (d #t) (k 0)) (d (n "arbitrary") (r "^1.2.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bn") (r "^0.5.11") (k 0) (p "zeropool-bn")) (d (n "bolero") (r "^0.10.1") (f (quote ("arbitrary"))) (d #t) (k 2)) (d (n "borsh") (r "^1.0.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1.0") (f (quote ("hazmat" "rand_core"))) (k 0)) (d (n "enum-map") (r "^2.1.0") (d #t) (k 0)) (d (n "expect-test") (r "^1.3.0") (d #t) (k 2)) (d (n "finite-wasm") (r "^0.5.0") (f (quote ("instrument"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (f (quote ("serde"))) (d #t) (k 2)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "memoffset") (r "^0.8") (d #t) (k 0)) (d (n "num-rational") (r "^0.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.13.1") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.42") (k 0)) (d (n "parity-wasm_41") (r "^0.41") (d #t) (k 0) (p "parity-wasm")) (d (n "prefix-sum-vec") (r "^0.1.2") (d #t) (k 0)) (d (n "pwasm-utils_12") (r "^0.12") (d #t) (k 0) (p "pwasm-utils")) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ripemd") (r "^0.1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("alloc" "derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_repr") (r "^0.1.8") (d #t) (k 0)) (d (n "serde_with") (r "^3.0") (f (quote ("base64"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "stdx") (r "^0.10.0") (d #t) (k 0) (p "unc-stdx")) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tracing") (r "^0.1.36") (f (quote ("std"))) (d #t) (k 0)) (d (n "unc-crypto") (r "^0.10.0") (d #t) (k 0)) (d (n "unc-parameters") (r "^0.10.0") (d #t) (k 0)) (d (n "unc-primitives-core") (r "^0.10.0") (d #t) (k 0)) (d (n "unc-vm-compiler") (r "^0.10.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "unc-vm-compiler-singlepass") (r "^0.10.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "unc-vm-engine") (r "^0.10.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "unc-vm-types") (r "^0.10.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "unc-vm-vm") (r "^0.10.0") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "wasm-encoder") (r "^0.27.0") (d #t) (k 0)) (d (n "wasm-smith") (r "^0.10") (d #t) (k 2)) (d (n "wasmer-compiler") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-compiler-x")) (d (n "wasmer-compiler-singlepass") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-compiler-singlepass-x")) (d (n "wasmer-engine") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-engine-x")) (d (n "wasmer-engine-universal") (r "=2.4.1") (f (quote ("compiler"))) (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-engine-universal-x")) (d (n "wasmer-runtime") (r "^0.18.0") (f (quote ("default-backend-singlepass"))) (o #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-runtime-x")) (d (n "wasmer-runtime-core") (r "^0.18.3") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-runtime-core-x")) (d (n "wasmer-types") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-types-x")) (d (n "wasmer-vm") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-vm-x")) (d (n "wasmparser") (r "^0.99") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2") (d #t) (k 2)) (d (n "wasmtime") (r "^14.0.4") (f (quote ("cranelift"))) (o #t) (k 0)) (d (n "wat") (r "^1.0.40") (d #t) (k 2)))) (h "14w5rv2bsy8jyw6rszgy17h2wv7pjaxxcnqqql01a0vbn8d6x2rh") (f (quote (("wasmtime_vm" "wasmtime" "anyhow") ("wasmer2_vm" "wasmer-compiler" "wasmer-compiler-singlepass" "wasmer-engine" "wasmer-engine-universal" "wasmer-types" "wasmer-vm") ("wasmer0_vm" "wasmer-runtime" "wasmer-runtime-core") ("unc_vm" "unc-vm-compiler" "unc-vm-compiler-singlepass" "unc-vm-engine" "unc-vm-types" "unc-vm-vm") ("sandbox") ("protocol_feature_fix_contract_loading_cost" "unc-primitives-core/protocol_feature_fix_contract_loading_cost") ("no_cpu_compatibility_checks") ("no_cache") ("nightly_protocol" "unc-parameters/nightly_protocol" "unc-primitives-core/nightly_protocol") ("nightly" "nightly_protocol" "protocol_feature_fix_contract_loading_cost" "unc-parameters/nightly" "unc-primitives-core/nightly") ("io_trace") ("default" "wasmer0_vm" "wasmtime_vm" "wasmer2_vm" "unc_vm") ("costs_counting"))))))

(define-public crate-unc-vm-runner-0.10.2 (c (n "unc-vm-runner") (v "0.10.2") (d (list (d (n "anyhow") (r "^1.0.62") (o #t) (d #t) (k 0)) (d (n "arbitrary") (r "^1.2.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bn") (r "^0.5.11") (k 0) (p "zeropool-bn")) (d (n "bolero") (r "^0.10.1") (f (quote ("arbitrary"))) (d #t) (k 2)) (d (n "borsh") (r "^1.0.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1.0") (f (quote ("hazmat" "rand_core"))) (k 0)) (d (n "enum-map") (r "^2.1.0") (d #t) (k 0)) (d (n "expect-test") (r "^1.3.0") (d #t) (k 2)) (d (n "finite-wasm") (r "^0.5.0") (f (quote ("instrument"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (f (quote ("serde"))) (d #t) (k 2)) (d (n "loupe") (r "^0.1") (d #t) (k 0)) (d (n "memoffset") (r "^0.8") (d #t) (k 0)) (d (n "num-rational") (r "^0.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.13.1") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.42") (k 0)) (d (n "parity-wasm_41") (r "^0.41") (d #t) (k 0) (p "parity-wasm")) (d (n "prefix-sum-vec") (r "^0.1.2") (d #t) (k 0)) (d (n "pwasm-utils_12") (r "^0.12") (d #t) (k 0) (p "pwasm-utils")) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ripemd") (r "^0.1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("alloc" "derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_repr") (r "^0.1.8") (d #t) (k 0)) (d (n "serde_with") (r "^3.0") (f (quote ("base64"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "stdx") (r "^0.10.2") (d #t) (k 0) (p "unc-stdx")) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tracing") (r "^0.1.36") (f (quote ("std"))) (d #t) (k 0)) (d (n "unc-crypto") (r "^0.10.2") (d #t) (k 0)) (d (n "unc-parameters") (r "^0.10.2") (d #t) (k 0)) (d (n "unc-primitives-core") (r "^0.10.2") (d #t) (k 0)) (d (n "unc-vm-compiler") (r "^0.10.2") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "unc-vm-compiler-singlepass") (r "^0.10.2") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "unc-vm-engine") (r "^0.10.2") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "unc-vm-types") (r "^0.10.2") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "unc-vm-vm") (r "^0.10.2") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "wasm-encoder") (r "^0.27.0") (d #t) (k 0)) (d (n "wasm-smith") (r "^0.10") (d #t) (k 2)) (d (n "wasmer-compiler") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-compiler-x")) (d (n "wasmer-compiler-singlepass") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-compiler-singlepass-x")) (d (n "wasmer-engine") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-engine-x")) (d (n "wasmer-engine-universal") (r "=2.4.1") (f (quote ("compiler"))) (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-engine-universal-x")) (d (n "wasmer-runtime") (r "^0.18.0") (f (quote ("default-backend-singlepass"))) (o #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-runtime-x")) (d (n "wasmer-runtime-core") (r "^0.18.3") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-runtime-core-x")) (d (n "wasmer-types") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-types-x")) (d (n "wasmer-vm") (r "=2.4.1") (o #t) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0) (p "wasmer-vm-x")) (d (n "wasmparser") (r "^0.99") (d #t) (k 0)) (d (n "wasmprinter") (r "^0.2") (d #t) (k 2)) (d (n "wasmtime") (r "^14.0.4") (f (quote ("cranelift"))) (o #t) (k 0)) (d (n "wat") (r "^1.0.40") (d #t) (k 2)))) (h "0sard7fgl2jvy4nxc4q1mxjw2njavblhn91y3ala4v7xdpsm9qqq") (f (quote (("wasmtime_vm" "wasmtime" "anyhow") ("wasmer2_vm" "wasmer-compiler" "wasmer-compiler-singlepass" "wasmer-engine" "wasmer-engine-universal" "wasmer-types" "wasmer-vm") ("wasmer0_vm" "wasmer-runtime" "wasmer-runtime-core") ("unc_vm" "unc-vm-compiler" "unc-vm-compiler-singlepass" "unc-vm-engine" "unc-vm-types" "unc-vm-vm") ("sandbox") ("protocol_feature_fix_contract_loading_cost" "unc-primitives-core/protocol_feature_fix_contract_loading_cost") ("no_cpu_compatibility_checks") ("no_cache") ("nightly_protocol" "unc-parameters/nightly_protocol" "unc-primitives-core/nightly_protocol") ("nightly" "nightly_protocol" "protocol_feature_fix_contract_loading_cost" "unc-parameters/nightly" "unc-primitives-core/nightly") ("io_trace") ("default" "wasmer0_vm" "wasmtime_vm" "wasmer2_vm" "unc_vm") ("costs_counting"))))))

