(define-module (crates-io z4 -e z4-engine) #:use-module (crates-io))

(define-public crate-z4-engine-0.0.1 (c (n "z4-engine") (v "0.0.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ark-bn254") (r "^0.4") (f (quote ("curve"))) (k 2) (p "ark-bn254-zypher")) (d (n "ark-ec") (r "^0.4") (k 0) (p "ark-ec-zypher")) (d (n "ark-ed-on-bn254") (r "^0.4") (k 0) (p "ark-ed-on-bn254-zypher")) (d (n "ark-ff") (r "^0.4") (f (quote ("asm"))) (k 0) (p "ark-ff-zypher")) (d (n "ark-serialize") (r "^0.4") (f (quote ("derive"))) (k 0) (p "ark-serialize-zypher")) (d (n "ark-std") (r "^0.4") (k 0) (p "ark-std-zypher")) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "ethereum-types") (r "^0.14") (d #t) (k 0)) (d (n "ethers") (r "^2.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("sink"))) (o #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tdn") (r "^0.10") (f (quote ("multiple"))) (k 0)) (d (n "tokio") (r "^1.35") (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)) (d (n "uzkge") (r "^0.1") (k 0)) (d (n "z4-types") (r "^0.0.1") (d #t) (k 0)))) (h "1j4v9gf1pswcc3pl8qizr2qrr5pzpknqgs4vvph1xnw1qzg6465r") (f (quote (("risc0") ("request" "tokio-tungstenite" "futures-util") ("default" "request"))))))

