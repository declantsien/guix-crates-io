(define-module (crates-io pf _s pf_sandbox_lib) #:use-module (crates-io))

(define-public crate-pf_sandbox_lib-0.1.0 (c (n "pf_sandbox_lib") (v "0.1.0") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dirs") (r "^1") (d #t) (k 0)) (d (n "enum_traits") (r "^0.3") (d #t) (k 0)) (d (n "enum_traits_macros") (r "^2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.5") (d #t) (k 0)) (d (n "gilrs") (r "^0.6") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "os_type") (r "^2") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.8") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.4") (d #t) (k 0)) (d (n "treeflection") (r "^0.1") (d #t) (k 0)) (d (n "treeflection_derive") (r "^0.3") (d #t) (k 0)) (d (n "uuid") (r "^0.6.0-beta") (f (quote ("v4" "serde"))) (d #t) (k 0)) (d (n "winit") (r "^0.17") (d #t) (k 0)) (d (n "zip") (r "^0.4") (d #t) (k 0)))) (h "056blqyqbxdy9alajmp2kry49bsvpr0ix4fv6nhvs24dk0hv3g6h")))

(define-public crate-pf_sandbox_lib-0.1.1 (c (n "pf_sandbox_lib") (v "0.1.1") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dirs") (r "^1") (d #t) (k 0)) (d (n "enum_traits") (r "^0.3") (d #t) (k 0)) (d (n "enum_traits_macros") (r "^2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.5") (d #t) (k 0)) (d (n "gilrs-core") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "os_type") (r "^2") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 0)) (d (n "toml") (r "^0.4") (d #t) (k 0)) (d (n "treeflection") (r "^0.1") (d #t) (k 0)) (d (n "treeflection_derive") (r "^0.3") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("v4" "serde"))) (d #t) (k 0)) (d (n "winit") (r "^0.17") (d #t) (k 0)) (d (n "winit_input_helper") (r "^0.1") (d #t) (k 0)) (d (n "zip") (r "^0.4") (d #t) (k 0)))) (h "1r4bdc93cdhgaligqsv4k0vla1bxsihyiygpn2m36hqx7c9d5r2f")))

(define-public crate-pf_sandbox_lib-0.2.0 (c (n "pf_sandbox_lib") (v "0.2.0") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dirs") (r "^1") (d #t) (k 0)) (d (n "enum_traits") (r "^0.3") (d #t) (k 0)) (d (n "enum_traits_macros") (r "^2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "gilrs-core") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "os_type") (r "^2") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 0)) (d (n "toml") (r "^0.4") (d #t) (k 0)) (d (n "treeflection") (r "^0.1") (d #t) (k 0)) (d (n "treeflection_derive") (r "^0.3") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("v4" "serde"))) (d #t) (k 0)) (d (n "winit") (r "^0.18") (d #t) (k 0)) (d (n "winit_input_helper") (r "^0.2") (d #t) (k 0)) (d (n "zip") (r "^0.4") (d #t) (k 0)))) (h "0b88ns3mdnsydi1q9494hzaq0q1ccxprbzbyjzp21wf9jn2r67lv")))

(define-public crate-pf_sandbox_lib-0.3.0 (c (n "pf_sandbox_lib") (v "0.3.0") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dirs") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "gilrs-core") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "os_type") (r "^2") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 0)) (d (n "strum") (r "^0.13") (d #t) (k 0)) (d (n "strum_macros") (r "^0.13") (d #t) (k 0)) (d (n "toml") (r "^0.4") (d #t) (k 0)) (d (n "treeflection") (r "^0.1") (d #t) (k 0)) (d (n "treeflection_derive") (r "^0.3") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("v4" "serde"))) (d #t) (k 0)) (d (n "winit") (r "^0.18") (d #t) (k 0)) (d (n "winit_input_helper") (r "^0.2") (d #t) (k 0)) (d (n "zip") (r "^0.5") (d #t) (k 0)))) (h "1pxg1qvlssa1m8s0i5bw5vqxl1bd22d1nm6193pyidpasja9hq87")))

(define-public crate-pf_sandbox_lib-0.3.1 (c (n "pf_sandbox_lib") (v "0.3.1") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dirs") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "gilrs-core") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "os_type") (r "^2") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 0)) (d (n "strum") (r "^0.13") (d #t) (k 0)) (d (n "strum_macros") (r "^0.13") (d #t) (k 0)) (d (n "toml") (r "^0.4") (d #t) (k 0)) (d (n "treeflection") (r "^0.1") (d #t) (k 0)) (d (n "treeflection_derive") (r "^0.3") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("v4" "serde"))) (d #t) (k 0)) (d (n "winit") (r "^0.18") (d #t) (k 0)) (d (n "winit_input_helper") (r "^0.2") (d #t) (k 0)) (d (n "zip") (r "^0.5") (d #t) (k 0)))) (h "0xwlw0mgn3ik2w1cja8spgv5mskrj76ng2l4fg0iragqpm42d6kp")))

