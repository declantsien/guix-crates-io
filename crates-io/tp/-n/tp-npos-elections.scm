(define-module (crates-io tp -n tp-npos-elections) #:use-module (crates-io))

(define-public crate-tp-npos-elections-2.0.1 (c (n "tp-npos-elections") (v "2.0.1") (d (list (d (n "arithmetic") (r "^2.0.1") (k 0)) (d (n "codec") (r "^2.0.1") (f (quote ("derive"))) (k 0) (p "tetsy-scale-codec")) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.101") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tet-core") (r "^2.0.1") (k 0)) (d (n "tetcore-std") (r "^2.0.1") (k 0)) (d (n "tp-npos-elections-compact") (r "^2.0.1") (d #t) (k 0)) (d (n "tp-runtime") (r "^2.0.1") (d #t) (k 2)))) (h "08azbbar4naifyl9h81xb7d7wkqlga15a6wqbivmjmifs23fwilq") (f (quote (("std" "codec/std" "serde" "tetcore-std/std" "arithmetic/std" "tet-core/std") ("default" "std") ("bench"))))))

(define-public crate-tp-npos-elections-2.0.2 (c (n "tp-npos-elections") (v "2.0.2") (d (list (d (n "arithmetic") (r "^2.0.2") (k 0)) (d (n "codec") (r "^2.0.1") (f (quote ("derive"))) (k 0) (p "tetsy-scale-codec")) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.101") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tet-core") (r "^2.0.2") (k 0)) (d (n "tetcore-std") (r "^2.0.2") (k 0)) (d (n "tp-npos-elections-compact") (r "^2.0.2") (d #t) (k 0)) (d (n "tp-runtime") (r "^2.0.2") (d #t) (k 2)))) (h "0zcbcqkr7fzdqjlxx38daav1gzhv3ck58bzcz5hmbvqrl5sk03wy") (f (quote (("std" "codec/std" "serde" "tetcore-std/std" "arithmetic/std" "tet-core/std") ("default" "std") ("bench"))))))

