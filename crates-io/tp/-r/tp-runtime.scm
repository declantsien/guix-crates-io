(define-module (crates-io tp -r tp-runtime) #:use-module (crates-io))

(define-public crate-tp-runtime-0.0.0 (c (n "tp-runtime") (v "0.0.0") (h "1q6pdp9axs0v5qy93kgmppbkqlphd2vsd0svwrjv04056zwr106w") (y #t)))

(define-public crate-tp-runtime-2.0.1 (c (n "tp-runtime") (v "2.0.1") (d (list (d (n "arithmetic") (r "^2.0.1") (k 0)) (d (n "codec") (r "^2.0.1") (f (quote ("derive"))) (k 0) (p "tetsy-scale-codec")) (d (n "either") (r "^1.5") (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "paste") (r "^0.1.6") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.101") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.41") (d #t) (k 2)) (d (n "tet-application-crypto") (r "^2.0.1") (k 0)) (d (n "tet-core") (r "^2.0.1") (k 0)) (d (n "tet-io") (r "^2.0.1") (k 0)) (d (n "tetcore-std") (r "^2.0.1") (k 0)) (d (n "tetsy-hash256-std-hasher") (r "^0.15.2") (k 0)) (d (n "tetsy-util-mem") (r "^0.9.0") (f (quote ("tetsy-primitive-types"))) (k 0)) (d (n "tp-state-machine") (r "^0.8.1") (d #t) (k 2)))) (h "1jz5ygnv920kybf6aikq7cld4ymmmz4s6iw7j14g6qkpmxyds925") (f (quote (("std" "tet-application-crypto/std" "arithmetic/std" "codec/std" "log" "tet-core/std" "rand" "tetcore-std/std" "tet-io/std" "serde" "tetsy-util-mem/std" "tetsy-hash256-std-hasher/std" "either/use_std") ("runtime-benchmarks") ("default" "std") ("bench"))))))

(define-public crate-tp-runtime-2.0.2 (c (n "tp-runtime") (v "2.0.2") (d (list (d (n "arithmetic") (r "^2.0.2") (k 0)) (d (n "codec") (r "^2.0.1") (f (quote ("derive"))) (k 0) (p "tetsy-scale-codec")) (d (n "either") (r "^1.5") (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "paste") (r "^0.1.6") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.101") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.41") (d #t) (k 2)) (d (n "tet-application-crypto") (r "^2.0.2") (k 0)) (d (n "tet-core") (r "^2.0.2") (k 0)) (d (n "tet-io") (r "^2.0.2") (k 0)) (d (n "tetcore-std") (r "^2.0.2") (k 0)) (d (n "tetsy-hash256-std-hasher") (r "^0.15.2") (k 0)) (d (n "tetsy-util-mem") (r "^0.9.0") (f (quote ("tetsy-primitive-types"))) (k 0)) (d (n "tp-state-machine") (r "^0.8.2") (d #t) (k 2)))) (h "0fhd82nfpvp8f0wkqsg75sm7bwq41d31ylgsw83ya9wr0lvphc1c") (f (quote (("std" "tet-application-crypto/std" "arithmetic/std" "codec/std" "log" "tet-core/std" "rand" "tetcore-std/std" "tet-io/std" "serde" "tetsy-util-mem/std" "tetsy-hash256-std-hasher/std" "either/use_std") ("runtime-benchmarks") ("default" "std") ("bench"))))))

(define-public crate-tp-runtime-2.1.2 (c (n "tp-runtime") (v "2.1.2") (d (list (d (n "arithmetic") (r "^2.1.2") (k 0)) (d (n "codec") (r "^2.0.1") (f (quote ("derive"))) (k 0) (p "tetsy-scale-codec")) (d (n "either") (r "^1.5") (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "paste") (r "^0.1.6") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.101") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.41") (d #t) (k 2)) (d (n "tet-application-crypto") (r "^2.1.2") (k 0)) (d (n "tet-core") (r "^2.1.2") (k 0)) (d (n "tet-io") (r "^2.1.2") (k 0)) (d (n "tetcore-std") (r "^2.1.2") (k 0)) (d (n "tetsy-hash256-std-hasher") (r "^0.15.2") (k 0)) (d (n "tetsy-util-mem") (r "^0.9.1") (f (quote ("tetsy-primitive-types"))) (k 0)) (d (n "tp-state-machine") (r "^2.1.2") (d #t) (k 2)))) (h "1c7s6f3ydwzl2d3ci1wmhp5kna8ac10x35yjl2f9ixdz6hxxqf1d") (f (quote (("std" "tet-application-crypto/std" "arithmetic/std" "codec/std" "log" "tet-core/std" "rand" "tetcore-std/std" "tet-io/std" "serde" "tetsy-util-mem/std" "tetsy-hash256-std-hasher/std" "either/use_std") ("runtime-benchmarks") ("default" "std") ("bench"))))))

