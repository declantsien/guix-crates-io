(define-module (crates-io tp -s tp-state-machine) #:use-module (crates-io))

(define-public crate-tp-state-machine-0.8.1 (c (n "tp-state-machine") (v "0.8.1") (d (list (d (n "codec") (r "^2.0.1") (k 0) (p "tetsy-scale-codec")) (d (n "externalities") (r "^0.8.0") (k 0)) (d (n "hex-literal") (r "^0.3.1") (d #t) (k 2)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "panic-handler") (r "^2.0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.4.1") (d #t) (k 0)) (d (n "tet-core") (r "^2.0.1") (k 0)) (d (n "tetcore-std") (r "^2.0.1") (k 0)) (d (n "tetsy-hash-db") (r "^0.15.2") (k 0)) (d (n "tetsy-trie-db") (r "^0.22.2") (k 0)) (d (n "tetsy-trie-root") (r "^0.16.0") (k 0)) (d (n "thiserror") (r "^1.0.21") (o #t) (d #t) (k 0)) (d (n "tp-trie") (r "^2.0.1") (k 0)))) (h "16ldwym7i2kdxzd7yva2smidh9c2qsxn5i2bp8gjavycw0licwhy") (f (quote (("std" "codec/std" "tetsy-hash-db/std" "num-traits/std" "tet-core/std" "externalities/std" "tetcore-std/std" "tp-trie/std" "tetsy-trie-db/std" "tetsy-trie-root/std" "log" "thiserror" "parking_lot" "rand" "panic-handler") ("default" "std"))))))

(define-public crate-tp-state-machine-0.8.2 (c (n "tp-state-machine") (v "0.8.2") (d (list (d (n "codec") (r "^2.0.1") (k 0) (p "tetsy-scale-codec")) (d (n "externalities") (r "^0.8.2") (k 0)) (d (n "hex-literal") (r "^0.3.1") (d #t) (k 2)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "panic-handler") (r "^2.0.2") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.4.1") (d #t) (k 0)) (d (n "tet-core") (r "^2.0.2") (k 0)) (d (n "tetcore-std") (r "^2.0.2") (k 0)) (d (n "tetsy-hash-db") (r "^0.15.2") (k 0)) (d (n "tetsy-trie-db") (r "^0.22.2") (k 0)) (d (n "tetsy-trie-root") (r "^0.16.0") (k 0)) (d (n "thiserror") (r "^1.0.21") (o #t) (d #t) (k 0)) (d (n "tp-trie") (r "^2.0.2") (k 0)))) (h "10fl1iync0hks5im8w2b3hvryxpq89acn94dmh529r55sjk4dfj0") (f (quote (("std" "codec/std" "tetsy-hash-db/std" "num-traits/std" "tet-core/std" "externalities/std" "tetcore-std/std" "tp-trie/std" "tetsy-trie-db/std" "tetsy-trie-root/std" "log" "thiserror" "parking_lot" "rand" "panic-handler") ("default" "std"))))))

(define-public crate-tp-state-machine-2.1.2 (c (n "tp-state-machine") (v "2.1.2") (d (list (d (n "codec") (r "^2.0.1") (k 0) (p "tetsy-scale-codec")) (d (n "externalities") (r "^2.1.2") (k 0)) (d (n "hex-literal") (r "^0.3.1") (d #t) (k 2)) (d (n "log") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "panic-handler") (r "^2.1.2") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.4.1") (d #t) (k 0)) (d (n "tet-core") (r "^2.1.2") (k 0)) (d (n "tetcore-std") (r "^2.1.2") (k 0)) (d (n "tetsy-hash-db") (r "^0.15.2") (k 0)) (d (n "tetsy-trie-db") (r "^0.22.2") (k 0)) (d (n "tetsy-trie-root") (r "^0.16.0") (k 0)) (d (n "thiserror") (r "^1.0.21") (o #t) (d #t) (k 0)) (d (n "tp-trie") (r "^2.1.2") (k 0)))) (h "0q0fh7hn8zv9wl72sr8ccahkwfigs9xycyw626gxy3qfihmzhwq1") (f (quote (("std" "codec/std" "tetsy-hash-db/std" "num-traits/std" "tet-core/std" "externalities/std" "tetcore-std/std" "tp-trie/std" "tetsy-trie-db/std" "tetsy-trie-root/std" "log" "thiserror" "parking_lot" "rand" "panic-handler") ("default" "std"))))))

