(define-module (crates-io ju li juliet) #:use-module (crates-io))

(define-public crate-juliet-0.1.0 (c (n "juliet") (v "0.1.0") (d (list (d (n "array-init") (r "^2.1.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "bimap") (r "^0.6.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "derive_more") (r "=1.0.0-beta.2") (f (quote ("debug"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "hex_fmt") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "proptest") (r "^1.1.0") (d #t) (k 2)) (d (n "proptest-attr-macro") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "strum") (r "^0.25.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("macros" "io-util" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("macros" "net" "rt-multi-thread" "time"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "0l83x03gln8v876ligg34ppj7diprxxqq01vc4vlg38hfzhshmi4")))

(define-public crate-juliet-0.1.1 (c (n "juliet") (v "0.1.1") (d (list (d (n "array-init") (r "^2.1.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "bimap") (r "^0.6.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "derive_more") (r "=1.0.0-beta.2") (f (quote ("debug"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "hex_fmt") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "proptest") (r "^1.1.0") (d #t) (k 2)) (d (n "proptest-attr-macro") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "strum") (r "^0.25.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("macros" "io-util" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("macros" "net" "rt-multi-thread" "time"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "1vf1fbdfkc8rqkcjsxjwjhky51gcmpxzk51ks71i1j8pv8dss86h")))

(define-public crate-juliet-0.1.2 (c (n "juliet") (v "0.1.2") (d (list (d (n "array-init") (r "^2.1.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "bimap") (r "^0.6.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "derive_more") (r "=1.0.0-beta.2") (f (quote ("debug"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "hex_fmt") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "proptest") (r "^1.1.0") (d #t) (k 2)) (d (n "proptest-attr-macro") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "strum") (r "^0.25.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("macros" "io-util" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("macros" "net" "rt-multi-thread" "time"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "11m3y4v8agkm7s5dpbv01gibscqdhclbmw60xikn8247gp0v5v8g")))

(define-public crate-juliet-0.2.0 (c (n "juliet") (v "0.2.0") (d (list (d (n "array-init") (r "^2.1.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "bimap") (r "^0.6.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "derive_more") (r "=1.0.0-beta.2") (f (quote ("debug"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "proptest") (r "^1.1.0") (d #t) (k 2)) (d (n "proptest-attr-macro") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "strum") (r "^0.25.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("macros" "io-util" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("macros" "net" "rt-multi-thread" "time"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "136qmh56hm9s38p4n1hgssyj3kkkgyklvf59h0x1vfadq3k00j4g")))

(define-public crate-juliet-0.2.1 (c (n "juliet") (v "0.2.1") (d (list (d (n "array-init") (r "^2.1.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "bimap") (r "^0.6.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "derive_more") (r "=1.0.0-beta.2") (f (quote ("debug"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "proptest") (r "^1.1.0") (d #t) (k 2)) (d (n "proptest-attr-macro") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "strum") (r "^0.25.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("macros" "io-util" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("macros" "net" "rt-multi-thread" "time"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "19chyr0yvp2nlghjc9jfb16pfplc4yry5b3v5fld6z581wlpfw03")))

(define-public crate-juliet-0.3.0 (c (n "juliet") (v "0.3.0") (d (list (d (n "array-init") (r "^2.1.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "bimap") (r "^0.6.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "derive_more") (r "=1.0.0-beta.2") (f (quote ("debug"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "proptest") (r "^1.1.0") (d #t) (k 2)) (d (n "proptest-attr-macro") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "strum") (r "^0.25.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("macros" "io-util" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("macros" "net" "rt-multi-thread" "time"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "07cmx74srz4i2zd1ngsvwk1s6nng4zh2pgblwypwm4w1wgas0dj3")))

