(define-module (crates-io ju ri jurisdiction) #:use-module (crates-io))

(define-public crate-jurisdiction-0.1.0 (c (n "jurisdiction") (v "0.1.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 1)) (d (n "quote") (r "^1") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1") (d #t) (k 1)) (d (n "serde_plain") (r "^0.3") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "126ikwc1q3qqz7vys8fn5pjvdb7zd74dlhbvg0y224pj1p380r84") (f (quote (("region") ("full" "region") ("default" "full"))))))

(define-public crate-jurisdiction-0.1.1 (c (n "jurisdiction") (v "0.1.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 1)) (d (n "quote") (r "^1") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1") (d #t) (k 1)) (d (n "serde_plain") (r "^0.3") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "0ppcnz79nhhs59aabb09p1ila6vpyw2ids07w7akmcjwi5pny93i") (f (quote (("region") ("full" "region") ("default" "full"))))))

