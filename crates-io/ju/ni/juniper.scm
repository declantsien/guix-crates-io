(define-module (crates-io ju ni juniper) #:use-module (crates-io))

(define-public crate-juniper-0.5.0 (c (n "juniper") (v "0.5.0") (d (list (d (n "iron") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "iron") (r "^0.4.0") (d #t) (k 2)) (d (n "iron-test") (r "^0.4.0") (d #t) (k 2)) (d (n "logger") (r "^0.1.0") (d #t) (k 2)) (d (n "mount") (r "^0.2.1") (d #t) (k 2)) (d (n "router") (r "^0.2.0") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3.19") (d #t) (k 0)))) (h "11cc28msrj7m8a1llf5rzj96xhf2h790a6fkrrgkwilvazzlqval") (f (quote (("nightly") ("iron-handlers" "iron") ("default"))))))

(define-public crate-juniper-0.5.1 (c (n "juniper") (v "0.5.1") (d (list (d (n "iron") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "iron") (r "^0.4.0") (d #t) (k 2)) (d (n "iron-test") (r "^0.4.0") (d #t) (k 2)) (d (n "logger") (r "^0.1.0") (d #t) (k 2)) (d (n "mount") (r "^0.2.1") (d #t) (k 2)) (d (n "router") (r "^0.2.0") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3.19") (d #t) (k 0)))) (h "16cn62mbc2gbva60v19f8mcwgpj0i93lnb3wgbbh8h0lg6vfcjys") (f (quote (("nightly") ("iron-handlers" "iron") ("default"))))))

(define-public crate-juniper-0.5.2 (c (n "juniper") (v "0.5.2") (d (list (d (n "iron") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "iron") (r "^0.4.0") (d #t) (k 2)) (d (n "iron-test") (r "^0.4.0") (d #t) (k 2)) (d (n "logger") (r "^0.1.0") (d #t) (k 2)) (d (n "mount") (r "^0.2.1") (d #t) (k 2)) (d (n "router") (r "^0.2.0") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3.19") (d #t) (k 0)))) (h "1spd4rfwgdv322vhpyzcxv9ki9g4xjajgmspk5g6ixq5akzp7xhr") (f (quote (("nightly") ("iron-handlers" "iron") ("expose-test-schema") ("default"))))))

(define-public crate-juniper-0.5.3 (c (n "juniper") (v "0.5.3") (d (list (d (n "iron") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "iron") (r "^0.4.0") (d #t) (k 2)) (d (n "iron-test") (r "^0.4.0") (d #t) (k 2)) (d (n "logger") (r "^0.1.0") (d #t) (k 2)) (d (n "mount") (r "^0.2.1") (d #t) (k 2)) (d (n "router") (r "^0.2.0") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3.19") (d #t) (k 0)))) (h "1q24l0xzxc4apx4jhd89v6syb8cwxg7855j8cmj2j2s0w75g5080") (f (quote (("nightly") ("iron-handlers" "iron") ("expose-test-schema") ("default"))))))

(define-public crate-juniper-0.6.0 (c (n "juniper") (v "0.6.0") (d (list (d (n "bencher") (r "^0.1.2") (d #t) (k 2)) (d (n "iron") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "iron") (r "^0.4.0") (d #t) (k 2)) (d (n "iron-test") (r "^0.4.0") (d #t) (k 2)) (d (n "logger") (r "^0.1.0") (d #t) (k 2)) (d (n "mount") (r "^0.2.1") (d #t) (k 2)) (d (n "router") (r "^0.2.0") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3.19") (d #t) (k 0)))) (h "01hf057vialg524clyirfxwrsgnpc101ngc84m0l8b6hgqfx977i") (f (quote (("nightly") ("iron-handlers" "iron") ("expose-test-schema") ("default"))))))

(define-public crate-juniper-0.6.1 (c (n "juniper") (v "0.6.1") (d (list (d (n "bencher") (r "^0.1.2") (d #t) (k 2)) (d (n "iron") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "iron") (r "^0.4.0") (d #t) (k 2)) (d (n "iron-test") (r "^0.4.0") (d #t) (k 2)) (d (n "logger") (r "^0.1.0") (d #t) (k 2)) (d (n "mount") (r "^0.2.1") (d #t) (k 2)) (d (n "router") (r "^0.2.0") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3.19") (d #t) (k 0)) (d (n "serde") (r "^0.8.21") (o #t) (d #t) (k 0)))) (h "06p8xl2qak4ysaf42p36xdixk5yxfwc23p25pd866kkb08jqmpz1") (f (quote (("nightly") ("iron-handlers" "iron") ("expose-test-schema") ("default"))))))

(define-public crate-juniper-0.6.2 (c (n "juniper") (v "0.6.2") (d (list (d (n "bencher") (r "^0.1.2") (d #t) (k 2)) (d (n "iron") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "iron") (r "^0.4.0") (d #t) (k 2)) (d (n "iron-test") (r "^0.4.0") (d #t) (k 2)) (d (n "logger") (r "^0.1.0") (d #t) (k 2)) (d (n "mount") (r "^0.2.1") (d #t) (k 2)) (d (n "router") (r "^0.2.0") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3.19") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.9.1") (o #t) (d #t) (k 0)))) (h "0hv2jsjig7bjip2rqw50ndfjdvkasx3rsfqszi2gc350iz4g1f4z") (f (quote (("nightly") ("iron-handlers" "iron" "rustc-serialize") ("expose-test-schema") ("default" "rustc-serialize"))))))

(define-public crate-juniper-0.6.3 (c (n "juniper") (v "0.6.3") (d (list (d (n "bencher") (r "^0.1.2") (d #t) (k 2)) (d (n "iron") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "iron") (r "^0.4.0") (d #t) (k 2)) (d (n "iron-test") (r "^0.4.0") (d #t) (k 2)) (d (n "logger") (r "^0.1.0") (d #t) (k 2)) (d (n "mount") (r "^0.2.1") (d #t) (k 2)) (d (n "router") (r "^0.2.0") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3.19") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.9.1") (o #t) (d #t) (k 0)))) (h "1236lacs23d58dary1xkv2krvn1xawd0rhzyni89li0n25422lcj") (f (quote (("nightly") ("iron-handlers" "iron" "rustc-serialize") ("expose-test-schema") ("default" "rustc-serialize"))))))

(define-public crate-juniper-0.7.0 (c (n "juniper") (v "0.7.0") (d (list (d (n "bencher") (r "^0.1.2") (d #t) (k 2)) (d (n "iron") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "iron") (r "^0.5.1") (d #t) (k 2)) (d (n "iron-test") (r "^0.5.0") (d #t) (k 2)) (d (n "logger") (r "^0.3.0") (d #t) (k 2)) (d (n "mount") (r "^0.3.0") (d #t) (k 2)) (d (n "router") (r "^0.5.0") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3.19") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.9.1") (o #t) (d #t) (k 0)))) (h "1gz606jpknwykhylri8hi03sqb15nw155dx2sdfl9sjc1c8xbyhn") (f (quote (("nightly") ("iron-handlers" "iron" "rustc-serialize") ("expose-test-schema") ("default" "rustc-serialize"))))))

(define-public crate-juniper-0.8.0 (c (n "juniper") (v "0.8.0") (d (list (d (n "bencher") (r "^0.1.2") (d #t) (k 2)) (d (n "iron") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "iron") (r "^0.5.1") (d #t) (k 2)) (d (n "iron-test") (r "^0.5.0") (d #t) (k 2)) (d (n "logger") (r "^0.3.0") (d #t) (k 2)) (d (n "mount") (r "^0.3.0") (d #t) (k 2)) (d (n "rocket") (r "^0.2.8") (o #t) (d #t) (k 0)) (d (n "rocket_codegen") (r "^0.2.8") (o #t) (d #t) (k 0)) (d (n "router") (r "^0.5.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.8") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.8") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "urlencoded") (r "^0.5.0") (o #t) (d #t) (k 0)))) (h "1ldpa1xc8xi77wc6y25j6b4knx2wg3kmkki82z18bvq2zvdp9rbw") (f (quote (("rocket-handlers" "rocket" "rocket_codegen" "serde_json") ("nightly") ("iron-handlers" "iron" "serde_json" "urlencoded") ("expose-test-schema"))))))

(define-public crate-juniper-0.8.1 (c (n "juniper") (v "0.8.1") (d (list (d (n "bencher") (r "^0.1.2") (d #t) (k 2)) (d (n "iron") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "iron") (r "^0.5.1") (d #t) (k 2)) (d (n "iron-test") (r "^0.5.0") (d #t) (k 2)) (d (n "logger") (r "^0.3.0") (d #t) (k 2)) (d (n "mount") (r "^0.3.0") (d #t) (k 2)) (d (n "rocket") (r "^0.2.8") (o #t) (d #t) (k 0)) (d (n "rocket_codegen") (r "^0.2.8") (o #t) (d #t) (k 0)) (d (n "router") (r "^0.5.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.8") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.8") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "urlencoded") (r "^0.5.0") (o #t) (d #t) (k 0)))) (h "0y5xysqzs28vdk6gvcbz5jjcz1s3nhhlp57i9j32wrp8vscjfg5g") (f (quote (("rocket-handlers" "rocket" "rocket_codegen" "serde_json") ("nightly") ("iron-handlers" "iron" "serde_json" "urlencoded") ("expose-test-schema"))))))

(define-public crate-juniper-0.9.0 (c (n "juniper") (v "0.9.0") (d (list (d (n "bencher") (r "^0.1.2") (d #t) (k 2)) (d (n "chrono") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.3") (d #t) (k 0)) (d (n "juniper_codegen") (r "^0.9.0") (d #t) (k 0)) (d (n "ordermap") (r "^0.2.11") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.8") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (d #t) (k 2)) (d (n "url") (r "^1.5.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.5.1") (o #t) (d #t) (k 0)))) (h "1w8jj1vjp28r4769cnxvk50s9w53dr6ff7v2n4l88qr2r282bqvl") (f (quote (("nightly") ("expose-test-schema") ("default" "chrono" "url" "uuid")))) (y #t)))

(define-public crate-juniper-0.9.1 (c (n "juniper") (v "0.9.1") (d (list (d (n "bencher") (r "^0.1.2") (d #t) (k 2)) (d (n "chrono") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.3") (d #t) (k 0)) (d (n "juniper_codegen") (r "^0.9.1") (d #t) (k 0)) (d (n "ordermap") (r "^0.2.11") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.8") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (d #t) (k 2)) (d (n "url") (r "^1.5.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.5.1") (o #t) (d #t) (k 0)))) (h "118dspjm1q1km1z6c2x7sl0x46x8axf2yni7308bzrj462dnh0fb") (f (quote (("nightly") ("expose-test-schema") ("default" "chrono" "url" "uuid"))))))

(define-public crate-juniper-0.9.2 (c (n "juniper") (v "0.9.2") (d (list (d (n "bencher") (r "^0.1.2") (d #t) (k 2)) (d (n "chrono") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.3") (d #t) (k 0)) (d (n "juniper_codegen") (r "^0.9.2") (d #t) (k 0)) (d (n "ordermap") (r "^0.2.11") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.8") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (d #t) (k 2)) (d (n "url") (r "^1.5.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.5.1") (o #t) (d #t) (k 0)))) (h "0cfxg700jml3gpglf7ps1v3an2pcxgb0mah3ml8icqnfxzjhllmw") (f (quote (("nightly") ("expose-test-schema") ("default" "chrono" "url" "uuid"))))))

(define-public crate-juniper-0.10.0 (c (n "juniper") (v "0.10.0") (d (list (d (n "bencher") (r "^0.1.2") (d #t) (k 2)) (d (n "chrono") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.0.0") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "juniper_codegen") (r "^0.10.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.8") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (d #t) (k 2)) (d (n "url") (r "^1.5.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "> 0.4, < 0.7") (o #t) (d #t) (k 0)))) (h "02lrpfn8a8znrw6blk90gd9zxysvc1yy0zgizw1mgzxa508jv5hk") (f (quote (("nightly") ("expose-test-schema") ("default" "chrono" "url" "uuid"))))))

(define-public crate-juniper-0.11.0 (c (n "juniper") (v "0.11.0") (d (list (d (n "bencher") (r "^0.1.2") (d #t) (k 2)) (d (n "chrono") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.0.0") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "juniper_codegen") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.8") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (d #t) (k 2)) (d (n "url") (r "^1.5.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.7") (o #t) (d #t) (k 0)))) (h "1r1kdhq8i0b4g5sw55w89xkh9vlirs884s7mlg93p2xhys548lqz") (f (quote (("nightly") ("expose-test-schema") ("default" "chrono" "url" "uuid"))))))

(define-public crate-juniper-0.11.1 (c (n "juniper") (v "0.11.1") (d (list (d (n "bencher") (r "^0.1.2") (d #t) (k 2)) (d (n "chrono") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.0.0") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "juniper_codegen") (r "^0.11.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.8") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (d #t) (k 2)) (d (n "url") (r "^1.5.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.7") (o #t) (d #t) (k 0)))) (h "0lgk0jgqjn4nxzc63hk47m576bjhj4vpn0a8im85zqf51fxylpfr") (f (quote (("nightly") ("expose-test-schema") ("default" "chrono" "url" "uuid"))))))

(define-public crate-juniper-0.12.0 (c (n "juniper") (v "0.12.0") (d (list (d (n "bencher") (r "^0.1.2") (d #t) (k 2)) (d (n "chrono") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.0.0") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "juniper_codegen") (r "^0.12.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.8") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (d #t) (k 2)) (d (n "url") (r "^1.5.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.7") (o #t) (d #t) (k 0)))) (h "0sx2s5578kjg0sgx9zraqzcn06ns8f7607mkzmi0l8dc28kwnr9k") (f (quote (("expose-test-schema") ("default" "chrono" "url" "uuid"))))))

(define-public crate-juniper-0.13.0 (c (n "juniper") (v "0.13.0") (d (list (d (n "bencher") (r "^0.1.2") (d #t) (k 2)) (d (n "chrono") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.0.0") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "juniper_codegen") (r "^0.13.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.8") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (d #t) (k 2)) (d (n "url") (r "^1.5.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.7") (o #t) (d #t) (k 0)))) (h "0wn33msmin590yfqp3y929xvqf4svnnhig3p1ik9rdpd5fijr55a") (f (quote (("expose-test-schema") ("default" "chrono" "url" "uuid"))))))

(define-public crate-juniper-0.13.1 (c (n "juniper") (v "0.13.1") (d (list (d (n "bencher") (r "^0.1.2") (d #t) (k 2)) (d (n "chrono") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.0.0") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "juniper_codegen") (r "^0.13.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.8") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (d #t) (k 2)) (d (n "url") (r "^1.5.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.7") (o #t) (d #t) (k 0)))) (h "0p776ix5yk7a2dld8lsrczr3jpjcy80x5qjvjs82adpaqly60w5m") (f (quote (("expose-test-schema") ("default" "chrono" "url" "uuid"))))))

(define-public crate-juniper-0.14.0 (c (n "juniper") (v "0.14.0") (d (list (d (n "bencher") (r "^0.1.2") (d #t) (k 2)) (d (n "chrono") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.0.0") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "juniper_codegen") (r "^0.14.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.8") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (d #t) (k 2)) (d (n "url") (r "^2") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.7") (o #t) (d #t) (k 0)))) (h "18ybkqgkz53l85grqfrmb1a2mnhsb8b7m1zyqb911yc3slwm042q") (f (quote (("expose-test-schema") ("default" "chrono" "url" "uuid"))))))

(define-public crate-juniper-0.14.1 (c (n "juniper") (v "0.14.1") (d (list (d (n "bencher") (r "^0.1.2") (d #t) (k 2)) (d (n "chrono") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.0.0") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "juniper_codegen") (r "^0.14.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.8") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (d #t) (k 2)) (d (n "url") (r "^2") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.7") (o #t) (d #t) (k 0)))) (h "1iycfrnpzms1fvpgkyz8jmazr0rvjg8hd1q9pf75ap9cfi5xwpjc") (f (quote (("expose-test-schema") ("default" "chrono" "url" "uuid"))))))

(define-public crate-juniper-0.14.2 (c (n "juniper") (v "0.14.2") (d (list (d (n "bencher") (r "^0.1.2") (d #t) (k 2)) (d (n "chrono") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.0.0") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "juniper_codegen") (r "^0.14.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.8") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (d #t) (k 2)) (d (n "url") (r "^2") (o #t) (d #t) (k 0)) (d (n "uuid") (r ">= 0.7, < 0.8") (o #t) (d #t) (k 0)))) (h "0s56rb31yddhvjynl5bk8jihcdln8h5yfsx63kfxdhzvw98vlqpn") (f (quote (("expose-test-schema") ("default" "chrono" "url" "uuid"))))))

(define-public crate-juniper-0.15.0 (c (n "juniper") (v "0.15.0") (d (list (d (n "anyhow") (r "^1.0.32") (o #t) (k 0)) (d (n "async-trait") (r "^0.1.39") (d #t) (k 0)) (d (n "bencher") (r "^0.1.2") (d #t) (k 2)) (d (n "bson") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "chrono-tz") (r "^0.5") (o #t) (k 0)) (d (n "fnv") (r "^1.0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (f (quote ("alloc"))) (k 0)) (d (n "futures-enum") (r "^0.1.12") (k 0)) (d (n "graphql-parser") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.0") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "juniper_codegen") (r "^0.15.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.8") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.2") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("macros" "rt-core" "time"))) (d #t) (k 2)) (d (n "url") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "0l0xnmqdn1kfa3d8bgl2dl9n1m40svw6ffda0fvxj5gy0w3v7lhq") (f (quote (("schema-language" "graphql-parser-integration") ("scalar-naivetime") ("graphql-parser-integration" "graphql-parser") ("expose-test-schema" "anyhow" "serde_json") ("default" "bson" "chrono" "schema-language" "url" "uuid"))))))

(define-public crate-juniper-0.15.1 (c (n "juniper") (v "0.15.1") (d (list (d (n "anyhow") (r "^1.0.32") (o #t) (k 0)) (d (n "async-trait") (r "^0.1.39") (d #t) (k 0)) (d (n "bencher") (r "^0.1.2") (d #t) (k 2)) (d (n "bson") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "chrono-tz") (r "^0.5") (o #t) (k 0)) (d (n "fnv") (r "^1.0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (f (quote ("alloc"))) (k 0)) (d (n "futures-enum") (r "^0.1.12") (k 0)) (d (n "graphql-parser") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.0") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "juniper_codegen") (r "^0.15.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.8") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.2") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("macros" "rt-core" "time"))) (d #t) (k 2)) (d (n "url") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "0p487nqifwpxcwkj4vmzcr47isa02wz6lc6zbsrmj39nznj9lc0r") (f (quote (("schema-language" "graphql-parser-integration") ("scalar-naivetime") ("graphql-parser-integration" "graphql-parser") ("expose-test-schema" "anyhow" "serde_json") ("default" "bson" "chrono" "schema-language" "url" "uuid"))))))

(define-public crate-juniper-0.15.2 (c (n "juniper") (v "0.15.2") (d (list (d (n "anyhow") (r "^1.0.32") (o #t) (k 0)) (d (n "async-trait") (r "^0.1.39") (d #t) (k 0)) (d (n "bencher") (r "^0.1.2") (d #t) (k 2)) (d (n "bson") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "chrono-tz") (r "^0.5") (o #t) (k 0)) (d (n "fnv") (r "^1.0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (f (quote ("alloc"))) (k 0)) (d (n "futures-enum") (r "^0.1.12") (k 0)) (d (n "graphql-parser") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.0") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "juniper_codegen") (r "^0.15.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.8") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.2") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("macros" "rt-core" "time"))) (d #t) (k 2)) (d (n "url") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "0s9838szi0z36py29cw3h1prdvcgszllav2mfqqkx45aysjbw64d") (f (quote (("schema-language" "graphql-parser-integration") ("scalar-naivetime") ("graphql-parser-integration" "graphql-parser") ("expose-test-schema" "anyhow" "serde_json") ("default" "bson" "chrono" "schema-language" "url" "uuid"))))))

(define-public crate-juniper-0.15.3 (c (n "juniper") (v "0.15.3") (d (list (d (n "anyhow") (r "^1.0.32") (o #t) (k 0)) (d (n "async-trait") (r "^0.1.39") (d #t) (k 0)) (d (n "bencher") (r "^0.1.2") (d #t) (k 2)) (d (n "bson") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "chrono-tz") (r "^0.5") (o #t) (k 0)) (d (n "fnv") (r "^1.0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (f (quote ("alloc"))) (k 0)) (d (n "futures-enum") (r "^0.1.12") (k 0)) (d (n "graphql-parser") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.0") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "juniper_codegen") (r "^0.15.3") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.8") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.2") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("macros" "rt-core" "time"))) (d #t) (k 2)) (d (n "url") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "05985k7jiv2ris8v28w9ggbmz2ii82sd4a7njdsww5qba8p15scw") (f (quote (("schema-language" "graphql-parser-integration") ("scalar-naivetime") ("graphql-parser-integration" "graphql-parser") ("expose-test-schema" "anyhow" "serde_json") ("default" "bson" "chrono" "schema-language" "url" "uuid"))))))

(define-public crate-juniper-0.15.4 (c (n "juniper") (v "0.15.4") (d (list (d (n "anyhow") (r "^1.0.32") (o #t) (k 0)) (d (n "async-trait") (r "^0.1.39") (d #t) (k 0)) (d (n "bencher") (r "^0.1.2") (d #t) (k 2)) (d (n "bson") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "chrono-tz") (r "^0.5") (o #t) (k 0)) (d (n "fnv") (r "^1.0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (f (quote ("alloc"))) (k 0)) (d (n "futures-enum") (r "^0.1.12") (k 0)) (d (n "graphql-parser") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.0") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "juniper_codegen") (r "^0.15.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.8") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.2") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (d #t) (k 2)) (d (n "smartstring") (r "^0.2.6") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("macros" "rt-core" "time"))) (d #t) (k 2)) (d (n "url") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "1g8dfvq752f2i14q770hfjjzya5sgy7p627xavi7vzmjnfs304sf") (f (quote (("schema-language" "graphql-parser-integration") ("scalar-naivetime") ("graphql-parser-integration" "graphql-parser") ("expose-test-schema" "anyhow" "serde_json") ("default" "bson" "chrono" "schema-language" "url" "uuid"))))))

(define-public crate-juniper-0.15.5 (c (n "juniper") (v "0.15.5") (d (list (d (n "anyhow") (r "^1.0.32") (o #t) (k 0)) (d (n "async-trait") (r "^0.1.39") (d #t) (k 0)) (d (n "bencher") (r "^0.1.2") (d #t) (k 2)) (d (n "bson") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "chrono-tz") (r "^0.5") (o #t) (k 0)) (d (n "fnv") (r "^1.0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (f (quote ("alloc"))) (k 0)) (d (n "futures-enum") (r "^0.1.12") (k 0)) (d (n "graphql-parser") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.0") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "juniper_codegen") (r "^0.15.5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.8") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.2") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (d #t) (k 2)) (d (n "smartstring") (r "^0.2.6") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("macros" "rt-core" "time"))) (d #t) (k 2)) (d (n "url") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "0ylwdg15mn10hn7gk1kg35dfc24ls3197dc667s1qb6dx4l142vs") (f (quote (("schema-language" "graphql-parser-integration") ("scalar-naivetime") ("graphql-parser-integration" "graphql-parser") ("expose-test-schema" "anyhow" "serde_json") ("default" "bson" "chrono" "schema-language" "url" "uuid"))))))

(define-public crate-juniper-0.15.6 (c (n "juniper") (v "0.15.6") (d (list (d (n "anyhow") (r "^1.0.32") (o #t) (k 0)) (d (n "async-trait") (r "^0.1.39") (d #t) (k 0)) (d (n "bencher") (r "^0.1.2") (d #t) (k 2)) (d (n "bson") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "chrono-tz") (r "^0.5") (o #t) (k 0)) (d (n "fnv") (r "^1.0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (f (quote ("alloc"))) (k 0)) (d (n "futures-enum") (r "^0.1.12") (k 0)) (d (n "graphql-parser") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.0") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "juniper_codegen") (r "^0.15.6") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.8") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.2") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (d #t) (k 2)) (d (n "smartstring") (r "^0.2.6") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("macros" "rt-core" "time"))) (d #t) (k 2)) (d (n "url") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "0k6jw1m11gmy0m0bf40gw972cxxcbyp5h5kpbili5iqhah8f0ldn") (f (quote (("schema-language" "graphql-parser-integration") ("scalar-naivetime") ("graphql-parser-integration" "graphql-parser") ("expose-test-schema" "anyhow" "serde_json") ("default" "bson" "chrono" "schema-language" "url" "uuid"))))))

(define-public crate-juniper-0.15.7 (c (n "juniper") (v "0.15.7") (d (list (d (n "anyhow") (r "^1.0.32") (o #t) (k 0)) (d (n "async-trait") (r "^0.1.39") (d #t) (k 0)) (d (n "bencher") (r "^0.1.2") (d #t) (k 2)) (d (n "bson") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "chrono-tz") (r "^0.5") (o #t) (k 0)) (d (n "fnv") (r "^1.0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (f (quote ("alloc"))) (k 0)) (d (n "futures-enum") (r "^0.1.12") (k 0)) (d (n "graphql-parser") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.0") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "juniper_codegen") (r "^0.15.7") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.8") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.2") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (d #t) (k 2)) (d (n "smartstring") (r "^0.2.6") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "time" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "1kyfnzn2slnhahpdhhi4v3f4m1j5y48y6j8l6g9sw1cain5glzv3") (f (quote (("schema-language" "graphql-parser-integration") ("scalar-naivetime") ("graphql-parser-integration" "graphql-parser") ("expose-test-schema" "anyhow" "serde_json") ("default" "bson" "chrono" "schema-language" "url" "uuid"))))))

(define-public crate-juniper-0.15.8 (c (n "juniper") (v "0.15.8") (d (list (d (n "anyhow") (r "^1.0.32") (o #t) (k 0)) (d (n "async-trait") (r "^0.1.39") (d #t) (k 0)) (d (n "bencher") (r "^0.1.2") (d #t) (k 2)) (d (n "bson") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "chrono-tz") (r "^0.5") (o #t) (k 0)) (d (n "fnv") (r "^1.0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (f (quote ("alloc"))) (k 0)) (d (n "futures-enum") (r "^0.1.12") (k 0)) (d (n "graphql-parser") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.0") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "juniper_codegen") (r "^0.15.8") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.8") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.2") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (d #t) (k 2)) (d (n "smartstring") (r "^0.2.6") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "time" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "0nps52jf859m1c542zd1y1yha21sd8x2g9z2w7aivy995iggjqw9") (f (quote (("schema-language" "graphql-parser-integration") ("scalar-naivetime") ("graphql-parser-integration" "graphql-parser") ("expose-test-schema" "anyhow" "serde_json") ("default" "bson" "chrono" "schema-language" "url" "uuid"))))))

(define-public crate-juniper-0.15.9 (c (n "juniper") (v "0.15.9") (d (list (d (n "anyhow") (r "^1.0.32") (o #t) (k 0)) (d (n "async-trait") (r "^0.1.39") (d #t) (k 0)) (d (n "bencher") (r "^0.1.2") (d #t) (k 2)) (d (n "bson") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "chrono-tz") (r "^0.5") (o #t) (k 0)) (d (n "fnv") (r "^1.0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (f (quote ("alloc"))) (k 0)) (d (n "futures-enum") (r "^0.1.12") (k 0)) (d (n "graphql-parser") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.0") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "juniper_codegen") (r "^0.15.9") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.8") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.2") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (d #t) (k 2)) (d (n "smartstring") (r "^0.2.6") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "time" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "1z397ggfazlnyvmwc4vlnrg0y8ncnwajp3np2pisf22d134mbb11") (f (quote (("schema-language" "graphql-parser-integration") ("scalar-naivetime") ("graphql-parser-integration" "graphql-parser") ("expose-test-schema" "anyhow" "serde_json") ("default" "bson" "chrono" "schema-language" "url" "uuid"))))))

(define-public crate-juniper-0.15.10 (c (n "juniper") (v "0.15.10") (d (list (d (n "anyhow") (r "^1.0.32") (o #t) (k 0)) (d (n "async-trait") (r "^0.1.39") (d #t) (k 0)) (d (n "bencher") (r "^0.1.2") (d #t) (k 2)) (d (n "bson") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "chrono-tz") (r "^0.5") (o #t) (k 0)) (d (n "fnv") (r "^1.0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (f (quote ("alloc"))) (k 0)) (d (n "futures-enum") (r "^0.1.12") (k 0)) (d (n "graphql-parser") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.0") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "juniper_codegen") (r "^0.15.9") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.8") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.2") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (d #t) (k 2)) (d (n "smartstring") (r "^0.2.6") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "time" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "1dm7j44rig5xnw39fkwkbfdsbq4g7f5hq9gk8br2zdcak8i8yisg") (f (quote (("schema-language" "graphql-parser-integration") ("scalar-naivetime") ("graphql-parser-integration" "graphql-parser") ("expose-test-schema" "anyhow" "serde_json") ("default" "bson" "chrono" "schema-language" "url" "uuid"))))))

(define-public crate-juniper-0.15.11 (c (n "juniper") (v "0.15.11") (d (list (d (n "anyhow") (r "^1.0.32") (o #t) (k 0)) (d (n "async-trait") (r "^0.1.39") (d #t) (k 0)) (d (n "bencher") (r "^0.1.2") (d #t) (k 2)) (d (n "bson") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "chrono-tz") (r "^0.5") (o #t) (k 0)) (d (n "fnv") (r "^1.0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (f (quote ("alloc"))) (k 0)) (d (n "futures-enum") (r "^0.1.12") (k 0)) (d (n "graphql-parser") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.0") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "juniper_codegen") (r "^0.15.9") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.8") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.2") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (d #t) (k 2)) (d (n "smartstring") (r "^1.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "time" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "1wg2ssb0ns8ib08gpywgap1cah9967cibb0zsgp2ddfh8dyz3baj") (f (quote (("schema-language" "graphql-parser-integration") ("scalar-naivetime") ("graphql-parser-integration" "graphql-parser") ("expose-test-schema" "anyhow" "serde_json") ("default" "bson" "chrono" "schema-language" "url" "uuid"))))))

(define-public crate-juniper-0.15.12 (c (n "juniper") (v "0.15.12") (d (list (d (n "anyhow") (r "^1.0.32") (o #t) (k 0)) (d (n "async-trait") (r "^0.1.39") (d #t) (k 0)) (d (n "bencher") (r "^0.1.2") (d #t) (k 2)) (d (n "bson") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "chrono-tz") (r "^0.5") (o #t) (k 0)) (d (n "fnv") (r "^1.0.5") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (f (quote ("alloc"))) (k 0)) (d (n "futures-enum") (r "^0.1.12") (k 0)) (d (n "graphql-parser") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.0") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "juniper_codegen") (r "^0.15.9") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.8") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.2") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (d #t) (k 2)) (d (n "smartstring") (r "^1.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "time" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "1dg1b5msr8k4kwmam2h0f64z7aamk4799vdh3cg55c881idclpc7") (f (quote (("schema-language" "graphql-parser-integration") ("scalar-naivetime") ("graphql-parser-integration" "graphql-parser") ("expose-test-schema" "anyhow" "serde_json") ("default" "bson" "chrono" "schema-language" "url" "uuid"))))))

(define-public crate-juniper-0.16.0 (c (n "juniper") (v "0.16.0") (d (list (d (n "anyhow") (r "^1.0.47") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.39") (d #t) (k 0)) (d (n "auto_enums") (r "^0.8") (d #t) (k 0)) (d (n "bencher") (r "^0.1.2") (d #t) (k 2)) (d (n "bigdecimal") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.4") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.30") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4.30") (f (quote ("alloc"))) (k 2)) (d (n "chrono-tz") (r "^0.8") (o #t) (k 0)) (d (n "fnv") (r "^1.0.5") (d #t) (k 0)) (d (n "futures") (r "^0.3.22") (f (quote ("alloc"))) (k 0)) (d (n "graphql-parser") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "juniper_codegen") (r "^0.16.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6") (f (quote ("std"))) (o #t) (k 0)) (d (n "rust_decimal") (r "^1.20") (o #t) (k 0)) (d (n "ryu") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.18") (f (quote ("std"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.18") (d #t) (k 2)) (d (n "serial_test") (r "^3.0") (d #t) (k 2)) (d (n "smartstring") (r "^1.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "macros" "parsing"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "time" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.3") (o #t) (k 0)) (d (n "void") (r "^1.0.2") (o #t) (d #t) (k 0)))) (h "1f3khggiijpn11cxk65kz3rc8m3nriy6czp1l8b1y1i3vcxdbv1x") (f (quote (("chrono-clock" "chrono" "chrono/clock")))) (s 2) (e (quote (("uuid" "dep:uuid") ("url" "dep:url") ("time" "dep:time") ("schema-language" "dep:graphql-parser" "dep:void") ("rust_decimal" "dep:rust_decimal") ("js" "chrono?/wasmbind" "time?/wasm-bindgen" "uuid?/js") ("expose-test-schema" "dep:anyhow" "dep:serde_json") ("chrono-tz" "dep:chrono-tz" "dep:regex") ("chrono" "dep:chrono") ("bson" "dep:bson" "dep:tap") ("bigdecimal" "dep:bigdecimal" "dep:num-bigint" "dep:ryu") ("backtrace" "anyhow?/backtrace") ("anyhow" "dep:anyhow")))) (r "1.73")))

(define-public crate-juniper-0.16.1 (c (n "juniper") (v "0.16.1") (d (list (d (n "anyhow") (r "^1.0.47") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.39") (d #t) (k 0)) (d (n "auto_enums") (r "^0.8") (d #t) (k 0)) (d (n "bencher") (r "^0.1.2") (d #t) (k 2)) (d (n "bigdecimal") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.4") (f (quote ("chrono-0_4"))) (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.30") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4.30") (f (quote ("alloc"))) (k 2)) (d (n "chrono-tz") (r "^0.8") (o #t) (k 0)) (d (n "fnv") (r "^1.0.5") (d #t) (k 0)) (d (n "futures") (r "^0.3.22") (f (quote ("alloc"))) (k 0)) (d (n "graphql-parser") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "juniper_codegen") (r "^0.16.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.6") (f (quote ("std"))) (o #t) (k 0)) (d (n "rust_decimal") (r "^1.20") (o #t) (k 0)) (d (n "ryu") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.18") (f (quote ("std"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.18") (d #t) (k 2)) (d (n "serial_test") (r "^3.0") (d #t) (k 2)) (d (n "smartstring") (r "^1.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "macros" "parsing"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "time" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.3") (o #t) (k 0)) (d (n "void") (r "^1.0.2") (o #t) (d #t) (k 0)))) (h "0b4ql1ys8l3xxfyg8zf1624dmx6ri31b1pzrgb906yhsbcqhccwl") (f (quote (("chrono-clock" "chrono" "chrono/clock")))) (s 2) (e (quote (("uuid" "dep:uuid") ("url" "dep:url") ("time" "dep:time") ("schema-language" "dep:graphql-parser" "dep:void") ("rust_decimal" "dep:rust_decimal") ("js" "chrono?/wasmbind" "time?/wasm-bindgen" "uuid?/js") ("expose-test-schema" "dep:anyhow" "dep:serde_json") ("chrono-tz" "dep:chrono-tz" "dep:regex") ("chrono" "dep:chrono") ("bson" "dep:bson" "dep:tap") ("bigdecimal" "dep:bigdecimal" "dep:num-bigint" "dep:ryu") ("backtrace" "anyhow?/backtrace") ("anyhow" "dep:anyhow")))) (r "1.73")))

