(define-module (crates-io er go ergo-chain-types) #:use-module (crates-io))

(define-public crate-ergo-chain-types-0.2.0 (c (n "ergo-chain-types") (v "0.2.0") (d (list (d (n "base16") (r "^0.2.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^1.9.1") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "sigma-ser") (r "^0.4.0") (d #t) (k 0)) (d (n "sigma-util") (r "^0.4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "0h4zf11w1v6hpwqmp9zf04c1q24rgqnl1dary5ygyv1p3j731894") (f (quote (("json" "serde" "serde_json" "serde_with") ("default" "json") ("arbitrary" "proptest" "proptest-derive"))))))

(define-public crate-ergo-chain-types-0.3.0 (c (n "ergo-chain-types") (v "0.3.0") (d (list (d (n "base16") (r "^0.2.1") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^1.9.1") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "sigma-ser") (r "^0.5.0") (d #t) (k 0)) (d (n "sigma-util") (r "^0.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "05i025q46z0ah70kyq85drs1h8vbb8n5cp2ik7vi0cga58v41k0j") (f (quote (("json" "serde" "serde_json" "serde_with") ("default" "json") ("arbitrary" "proptest" "proptest-derive"))))))

(define-public crate-ergo-chain-types-0.3.1 (c (n "ergo-chain-types") (v "0.3.1") (d (list (d (n "base16") (r "^0.2.1") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^1.9.1") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "sigma-ser") (r "^0.5.0") (d #t) (k 0)) (d (n "sigma-util") (r "^0.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "17wbc1czq3jffaqm40b753xzk4b2lncf1vzcxg148m5lgih5552b") (f (quote (("json" "serde" "serde_json" "serde_with") ("default" "json") ("arbitrary" "proptest" "proptest-derive"))))))

(define-public crate-ergo-chain-types-0.4.0 (c (n "ergo-chain-types") (v "0.4.0") (d (list (d (n "base16") (r "^0.2.1") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.11.6") (f (quote ("ff"))) (d #t) (k 0)) (d (n "k256") (r "^0.10.2") (f (quote ("arithmetic" "ecdsa"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^1.9.1") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "sigma-ser") (r "^0.6.0") (d #t) (k 0)) (d (n "sigma-util") (r "^0.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "0hl7yvrlma0x7n96cxzmmf039zmz78aa9pm5vdjn98df66apba5q") (f (quote (("json" "serde" "serde_json" "serde_with") ("default" "json") ("arbitrary" "proptest" "proptest-derive"))))))

(define-public crate-ergo-chain-types-0.5.0 (c (n "ergo-chain-types") (v "0.5.0") (d (list (d (n "base16") (r "^0.2.1") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.11.6") (f (quote ("ff"))) (d #t) (k 0)) (d (n "k256") (r "^0.10.2") (f (quote ("arithmetic" "ecdsa"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^1.9.1") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "sigma-ser") (r "^0.7.0") (d #t) (k 0)) (d (n "sigma-util") (r "^0.6.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "178iqmy7i64xamljwcn3hfbwn0df6vcsc3grax6dacf2kifibq2i") (f (quote (("json" "serde" "serde_json" "serde_with") ("default" "json") ("arbitrary" "proptest" "proptest-derive"))))))

(define-public crate-ergo-chain-types-0.6.0 (c (n "ergo-chain-types") (v "0.6.0") (d (list (d (n "base16") (r "^0.2.1") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.11.6") (f (quote ("ff"))) (d #t) (k 0)) (d (n "k256") (r "^0.10.2") (f (quote ("arithmetic" "ecdsa"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^1.9.1") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "sigma-ser") (r "^0.8.0") (d #t) (k 0)) (d (n "sigma-util") (r "^0.7.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1rfgw8abrc20i7r8bp8zmrdw3a94a6ixs672abw5mi0wa3lkl9x2") (f (quote (("json" "serde" "serde_json" "serde_with") ("default" "json") ("arbitrary" "proptest" "proptest-derive"))))))

(define-public crate-ergo-chain-types-0.7.0 (c (n "ergo-chain-types") (v "0.7.0") (d (list (d (n "base16") (r "^0.2.1") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.11.6") (f (quote ("ff"))) (d #t) (k 0)) (d (n "k256") (r "^0.10.2") (f (quote ("arithmetic" "ecdsa"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^1.9.1") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "sigma-ser") (r "^0.9.0") (d #t) (k 0)) (d (n "sigma-util") (r "^0.8.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1kl0kj7kcx8hjssvaixnspllh051954llazs6yx9yz0a1rhlwfn3") (f (quote (("json" "serde" "serde_json" "serde_with") ("default" "json") ("arbitrary" "proptest" "proptest-derive"))))))

(define-public crate-ergo-chain-types-0.8.0 (c (n "ergo-chain-types") (v "0.8.0") (d (list (d (n "base16") (r "^0.2.1") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.11.6") (f (quote ("ff"))) (d #t) (k 0)) (d (n "k256") (r "^0.10.2") (f (quote ("arithmetic" "ecdsa"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^1.9.1") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "sigma-ser") (r "^0.10.0") (d #t) (k 0)) (d (n "sigma-util") (r "^0.9.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "028c7zi46ajvywnvwrs5cg79vipaznb3b0mz1gddd0g8mqcanqdj") (f (quote (("json" "serde" "serde_json" "serde_with") ("default" "json") ("arbitrary" "proptest" "proptest-derive"))))))

(define-public crate-ergo-chain-types-0.8.1 (c (n "ergo-chain-types") (v "0.8.1") (d (list (d (n "base16") (r "^0.2.1") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.12") (f (quote ("ff"))) (d #t) (k 0)) (d (n "k256") (r "^0.11") (f (quote ("arithmetic" "ecdsa"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "proptest") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision"))) (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^1.9.1") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "sigma-ser") (r "^0.10.1") (d #t) (k 0)) (d (n "sigma-util") (r "^0.9.1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "0l99cam41j8s8ghfrhc38yh9lmflsryggz80d0mjh314a6p2w51d") (f (quote (("json" "serde" "serde_json" "serde_with") ("default" "json") ("arbitrary" "proptest" "proptest-derive"))))))

(define-public crate-ergo-chain-types-0.9.0 (c (n "ergo-chain-types") (v "0.9.0") (d (list (d (n "base16") (r "^0.2.1") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.12") (f (quote ("ff"))) (d #t) (k 0)) (d (n "k256") (r "^0.11") (f (quote ("arithmetic" "ecdsa"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "proptest") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision"))) (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^1.9.1") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "sigma-ser") (r "^0.11.0") (d #t) (k 0)) (d (n "sigma-util") (r "^0.10.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1s5d5v3xg81wjjbp859wf9x4bx8b4dr6si98z329pvm8j49h2ssy") (f (quote (("json" "serde" "serde_json" "serde_with") ("default" "json") ("arbitrary" "proptest" "proptest-derive"))))))

(define-public crate-ergo-chain-types-0.10.0 (c (n "ergo-chain-types") (v "0.10.0") (d (list (d (n "base16") (r "^0.2.1") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.12") (f (quote ("ff"))) (d #t) (k 0)) (d (n "k256") (r "^0.11") (f (quote ("arithmetic" "ecdsa"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "=1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision" "preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^1.9.1") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "sigma-ser") (r "^0.12.0") (d #t) (k 0)) (d (n "sigma-util") (r "^0.11.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "0nddngjb1w2w79db5n6bc420rqlprzphj8qd9c99nkjnrsiafdhj") (f (quote (("json" "serde" "serde_json" "serde_with") ("default" "json") ("arbitrary" "proptest" "proptest-derive"))))))

(define-public crate-ergo-chain-types-0.11.0 (c (n "ergo-chain-types") (v "0.11.0") (d (list (d (n "base16") (r "^0.2.1") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.12") (f (quote ("ff"))) (d #t) (k 0)) (d (n "k256") (r "^0.11") (f (quote ("arithmetic" "ecdsa"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "=1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision" "preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^1.9.1") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "sigma-ser") (r "^0.13.0") (d #t) (k 0)) (d (n "sigma-util") (r "^0.12.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "16ib5vf9x7hyjj2law3bp6z10n0nll0l5ap07w4x6gb0mpannbhf") (f (quote (("json" "serde" "serde_json" "serde_with") ("default" "json") ("arbitrary" "proptest" "proptest-derive"))))))

(define-public crate-ergo-chain-types-0.11.1 (c (n "ergo-chain-types") (v "0.11.1") (d (list (d (n "base16") (r "^0.2.1") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.12") (f (quote ("ff"))) (d #t) (k 0)) (d (n "k256") (r "^0.13.1") (f (quote ("arithmetic" "ecdsa"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "=1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision" "preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^1.9.1") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "sigma-ser") (r "^0.13.1") (d #t) (k 0)) (d (n "sigma-util") (r "^0.12.1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1jj51bwd74lxsjz8gn19psq46jbksh05kmim052jggk7wr3b6pyp") (f (quote (("json" "serde" "serde_json" "serde_with") ("default" "json") ("arbitrary" "proptest" "proptest-derive"))))))

(define-public crate-ergo-chain-types-0.12.0 (c (n "ergo-chain-types") (v "0.12.0") (d (list (d (n "base16") (r "^0.2.1") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.12") (f (quote ("ff"))) (d #t) (k 0)) (d (n "k256") (r "^0.13.1") (f (quote ("arithmetic" "ecdsa"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "=1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision" "preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^1.9.1") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "sigma-ser") (r "^0.14.0") (d #t) (k 0)) (d (n "sigma-util") (r "^0.13.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "0wgkisc0377zm1zfwc72hcp3l03v6z1dvyad6m1qi4yhj44sbhp8") (f (quote (("json" "serde" "serde_json" "serde_with") ("default" "json") ("arbitrary" "proptest" "proptest-derive"))))))

(define-public crate-ergo-chain-types-0.13.0 (c (n "ergo-chain-types") (v "0.13.0") (d (list (d (n "base16") (r "^0.2.1") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.12") (f (quote ("ff"))) (d #t) (k 0)) (d (n "k256") (r "^0.13.1") (f (quote ("arithmetic" "ecdsa"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "=1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision" "preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^1.9.1") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "sigma-ser") (r "^0.15.0") (d #t) (k 0)) (d (n "sigma-util") (r "^0.14.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "0zlii4kbqd3yiji1sxa4bfswwp3w823crsybb8mk6d6z3sryzhqi") (f (quote (("json" "serde" "serde_json" "serde_with") ("default" "json") ("arbitrary" "proptest" "proptest-derive"))))))

(define-public crate-ergo-chain-types-0.14.0 (c (n "ergo-chain-types") (v "0.14.0") (d (list (d (n "base16") (r "^0.2.1") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.12") (f (quote ("ff"))) (d #t) (k 0)) (d (n "k256") (r "^0.13.1") (f (quote ("arithmetic" "ecdsa"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "=1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision" "preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^1.9.1") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "sigma-ser") (r "^0.15.0") (d #t) (k 0)) (d (n "sigma-util") (r "^0.14.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1gdq3ayc4ll3nmbzf27czwpr0aq6y16yi00dfbfi6lkj43c07z2i") (f (quote (("json" "serde" "serde_json" "serde_with") ("default" "json") ("arbitrary" "proptest" "proptest-derive"))))))

(define-public crate-ergo-chain-types-0.14.1 (c (n "ergo-chain-types") (v "0.14.1") (d (list (d (n "base16") (r "^0.2.1") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.12") (f (quote ("ff"))) (d #t) (k 0)) (d (n "k256") (r "^0.13.1") (f (quote ("arithmetic" "ecdsa"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "=1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision" "preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^1.9.1") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "sigma-ser") (r "^0.15.0") (d #t) (k 0)) (d (n "sigma-util") (r "^0.14.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "11aq3ga7h7pvmikw6qdski8fpxi3x5259wid125jc9pklik0qmr7") (f (quote (("json" "serde" "serde_json" "serde_with") ("default" "json") ("arbitrary" "proptest" "proptest-derive"))))))

