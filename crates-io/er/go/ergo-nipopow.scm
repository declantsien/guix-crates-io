(define-module (crates-io er go ergo-nipopow) #:use-module (crates-io))

(define-public crate-ergo-nipopow-0.2.0 (c (n "ergo-nipopow") (v "0.2.0") (d (list (d (n "base16") (r "^0.2.1") (d #t) (k 0)) (d (n "bounded-integer") (r "^0.5") (f (quote ("types"))) (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ergo-chain-types") (r "^0.2.0") (d #t) (k 0)) (d (n "ergotree-ir") (r "^0.15.0") (f (quote ("json"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sigma-ser") (r "^0.4.0") (d #t) (k 0)) (d (n "sigma-util") (r "^0.4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1650mswny1r4lihnq47hcww12hwpsa6wq805cnllfcj8i2n21vad")))

(define-public crate-ergo-nipopow-0.3.0 (c (n "ergo-nipopow") (v "0.3.0") (d (list (d (n "base16") (r "^0.2.1") (d #t) (k 0)) (d (n "bounded-integer") (r "^0.5") (f (quote ("types"))) (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ergo-chain-types") (r "^0.3.0") (d #t) (k 0)) (d (n "ergo-merkle-tree") (r "^0.3.0") (d #t) (k 0)) (d (n "ergotree-ir") (r "^0.16.0") (f (quote ("json"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sigma-ser") (r "^0.5.0") (d #t) (k 0)) (d (n "sigma-util") (r "^0.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0fvsjb9pqf53383n4m7hc5fqg1bn7n0lgj1sgarrihi6cnzgwfa6") (f (quote (("default") ("arbitrary" "proptest" "proptest-derive" "ergo-chain-types/arbitrary" "ergotree-ir/arbitrary"))))))

(define-public crate-ergo-nipopow-0.3.1 (c (n "ergo-nipopow") (v "0.3.1") (d (list (d (n "base16") (r "^0.2.1") (d #t) (k 0)) (d (n "bounded-integer") (r "^0.5") (f (quote ("types"))) (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ergo-chain-types") (r "^0.3.0") (d #t) (k 0)) (d (n "ergo-merkle-tree") (r "^0.3.0") (d #t) (k 0)) (d (n "ergotree-ir") (r "^0.16.0") (f (quote ("json"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sigma-ser") (r "^0.5.0") (d #t) (k 0)) (d (n "sigma-util") (r "^0.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1kigdmzdkizpiys6f75x2q5x65mqjh00mz6jrxc9m4j4knyfkcrk") (f (quote (("default") ("arbitrary" "proptest" "proptest-derive" "ergo-chain-types/arbitrary" "ergotree-ir/arbitrary"))))))

(define-public crate-ergo-nipopow-0.4.0 (c (n "ergo-nipopow") (v "0.4.0") (d (list (d (n "base16") (r "^0.2.1") (d #t) (k 0)) (d (n "bounded-integer") (r "^0.5") (f (quote ("types"))) (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ergo-chain-types") (r "^0.4.0") (d #t) (k 0)) (d (n "ergo-merkle-tree") (r "^0.4.0") (d #t) (k 0)) (d (n "ergotree-ir") (r "^0.17.0") (f (quote ("json"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sigma-ser") (r "^0.6.0") (d #t) (k 0)) (d (n "sigma-util") (r "^0.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "11vcndwkfip8ynpf5xqink3fqs8yk08ahnbz69znfcjnpp4znyk3") (f (quote (("default") ("arbitrary" "proptest" "proptest-derive" "ergo-chain-types/arbitrary" "ergotree-ir/arbitrary"))))))

(define-public crate-ergo-nipopow-0.5.0 (c (n "ergo-nipopow") (v "0.5.0") (d (list (d (n "base16") (r "^0.2.1") (d #t) (k 0)) (d (n "bounded-integer") (r "^0.5") (f (quote ("types"))) (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ergo-chain-types") (r "^0.5.0") (d #t) (k 0)) (d (n "ergo-merkle-tree") (r "^0.5.0") (d #t) (k 0)) (d (n "ergotree-ir") (r "^0.18.0") (f (quote ("json"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sigma-ser") (r "^0.7.0") (d #t) (k 0)) (d (n "sigma-util") (r "^0.6.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1gb6ha4yixbklhpll63l2vyzk7hb80drsha4zwg168v5p45di7y3") (f (quote (("default") ("arbitrary" "proptest" "proptest-derive" "ergo-chain-types/arbitrary" "ergotree-ir/arbitrary"))))))

(define-public crate-ergo-nipopow-0.6.0 (c (n "ergo-nipopow") (v "0.6.0") (d (list (d (n "base16") (r "^0.2.1") (d #t) (k 0)) (d (n "bounded-integer") (r "^0.5") (f (quote ("types"))) (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ergo-chain-types") (r "^0.6.0") (d #t) (k 0)) (d (n "ergo-merkle-tree") (r "^0.6.0") (d #t) (k 0)) (d (n "ergotree-ir") (r "^0.19.0") (f (quote ("json"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sigma-ser") (r "^0.8.0") (d #t) (k 0)) (d (n "sigma-util") (r "^0.7.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1ml6kjkfs0pdq9hrqhzr9nawhzzl4yqpzfn6j4m1ys8l40g8lip9") (f (quote (("default") ("arbitrary" "proptest" "proptest-derive" "ergo-chain-types/arbitrary" "ergotree-ir/arbitrary"))))))

(define-public crate-ergo-nipopow-0.7.0 (c (n "ergo-nipopow") (v "0.7.0") (d (list (d (n "base16") (r "^0.2.1") (d #t) (k 0)) (d (n "bounded-integer") (r "^0.5") (f (quote ("types"))) (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ergo-chain-types") (r "^0.7.0") (d #t) (k 0)) (d (n "ergo-merkle-tree") (r "^0.7.0") (d #t) (k 0)) (d (n "ergotree-ir") (r "^0.20.0") (f (quote ("json"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sigma-ser") (r "^0.9.0") (d #t) (k 0)) (d (n "sigma-util") (r "^0.8.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0dg0jnyfffzcx58pyrcm69qg70sa0b0360hhbign3aypcsr7i2ph") (f (quote (("default") ("arbitrary" "proptest" "proptest-derive" "ergo-chain-types/arbitrary" "ergotree-ir/arbitrary"))))))

(define-public crate-ergo-nipopow-0.8.0 (c (n "ergo-nipopow") (v "0.8.0") (d (list (d (n "base16") (r "^0.2.1") (d #t) (k 0)) (d (n "bounded-integer") (r "^0.5") (f (quote ("types"))) (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ergo-chain-types") (r "^0.8.0") (d #t) (k 0)) (d (n "ergo-merkle-tree") (r "^0.8.0") (d #t) (k 0)) (d (n "ergotree-ir") (r "^0.21.0") (f (quote ("json"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sigma-ser") (r "^0.10.0") (d #t) (k 0)) (d (n "sigma-util") (r "^0.9.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0wcbb6yx3n5rkvpryhf1g10yzsf7ybkhixcy61ks14kw3isrbas6") (f (quote (("default") ("arbitrary" "proptest" "proptest-derive" "ergo-chain-types/arbitrary" "ergotree-ir/arbitrary"))))))

(define-public crate-ergo-nipopow-0.8.1 (c (n "ergo-nipopow") (v "0.8.1") (d (list (d (n "base16") (r "^0.2.1") (d #t) (k 0)) (d (n "bounded-integer") (r "^0.5") (f (quote ("types"))) (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ergo-chain-types") (r "^0.8.1") (d #t) (k 0)) (d (n "ergo-merkle-tree") (r "^0.8.1") (d #t) (k 0)) (d (n "ergotree-ir") (r "^0.21.1") (f (quote ("json"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "sigma-ser") (r "^0.10.1") (d #t) (k 0)) (d (n "sigma-util") (r "^0.9.1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0lh4ra8zva52j033f87kn97hgya6yngxvj2bhckiv33k1r6acxc6") (f (quote (("default") ("arbitrary" "proptest" "proptest-derive" "ergo-chain-types/arbitrary" "ergotree-ir/arbitrary"))))))

(define-public crate-ergo-nipopow-0.9.0 (c (n "ergo-nipopow") (v "0.9.0") (d (list (d (n "base16") (r "^0.2.1") (d #t) (k 0)) (d (n "bounded-integer") (r "^0.5") (f (quote ("types"))) (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ergo-chain-types") (r "^0.9.0") (d #t) (k 0)) (d (n "ergo-merkle-tree") (r "^0.9.0") (d #t) (k 0)) (d (n "ergotree-ir") (r "^0.22.0") (f (quote ("json"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "sigma-ser") (r "^0.11.0") (d #t) (k 0)) (d (n "sigma-util") (r "^0.10.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1sd71vl020y0q9y3m0358ylarsqyjdkixf819fv18bx6f6jm1jv2") (f (quote (("default") ("arbitrary" "proptest" "proptest-derive" "ergo-chain-types/arbitrary" "ergotree-ir/arbitrary"))))))

(define-public crate-ergo-nipopow-0.10.0 (c (n "ergo-nipopow") (v "0.10.0") (d (list (d (n "base16") (r "^0.2.1") (d #t) (k 0)) (d (n "bounded-integer") (r "^0.5") (f (quote ("types"))) (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ergo-chain-types") (r "^0.10.0") (d #t) (k 0)) (d (n "ergo-merkle-tree") (r "^0.10.0") (d #t) (k 0)) (d (n "ergotree-ir") (r "^0.23.0") (f (quote ("json"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "=1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision" "preserve_order"))) (d #t) (k 0)) (d (n "sigma-ser") (r "^0.12.0") (d #t) (k 0)) (d (n "sigma-util") (r "^0.11.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1lvjc2xlll23g11sbiiblc9mv08p3jhpiilphcy19gvaqh1i4p98") (f (quote (("default") ("arbitrary" "proptest" "proptest-derive" "ergo-chain-types/arbitrary" "ergotree-ir/arbitrary"))))))

(define-public crate-ergo-nipopow-0.11.0 (c (n "ergo-nipopow") (v "0.11.0") (d (list (d (n "base16") (r "^0.2.1") (d #t) (k 0)) (d (n "bounded-integer") (r "^0.5") (f (quote ("types"))) (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ergo-chain-types") (r "^0.11.0") (d #t) (k 0)) (d (n "ergo-merkle-tree") (r "^0.11.0") (d #t) (k 0)) (d (n "ergotree-ir") (r "^0.24.0") (f (quote ("json"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "=1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision" "preserve_order"))) (d #t) (k 0)) (d (n "sigma-ser") (r "^0.13.0") (d #t) (k 0)) (d (n "sigma-util") (r "^0.12.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "055m6kc9pd7w0r0h7x77gs0psc98jvcm25d4sc5nwi7jrqh3hwl0") (f (quote (("default") ("arbitrary" "proptest" "proptest-derive" "ergo-chain-types/arbitrary" "ergotree-ir/arbitrary"))))))

(define-public crate-ergo-nipopow-0.11.1 (c (n "ergo-nipopow") (v "0.11.1") (d (list (d (n "base16") (r "^0.2.1") (d #t) (k 0)) (d (n "bounded-integer") (r "^0.5") (f (quote ("types"))) (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ergo-chain-types") (r "^0.11.1") (d #t) (k 0)) (d (n "ergo-merkle-tree") (r "^0.11.1") (d #t) (k 0)) (d (n "ergotree-ir") (r "^0.24.1") (f (quote ("json"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "=1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision" "preserve_order"))) (d #t) (k 0)) (d (n "sigma-ser") (r "^0.13.1") (d #t) (k 0)) (d (n "sigma-util") (r "^0.12.1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0wi8mzdqw5qa2ys84dshywd5bsl0jnqa4c6xr21xrijn65bs110l") (f (quote (("default") ("arbitrary" "proptest" "proptest-derive" "ergo-chain-types/arbitrary" "ergotree-ir/arbitrary"))))))

(define-public crate-ergo-nipopow-0.12.0 (c (n "ergo-nipopow") (v "0.12.0") (d (list (d (n "base16") (r "^0.2.1") (d #t) (k 0)) (d (n "bounded-integer") (r "^0.5") (f (quote ("types"))) (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ergo-chain-types") (r "^0.12.0") (d #t) (k 0)) (d (n "ergo-merkle-tree") (r "^0.12.0") (d #t) (k 0)) (d (n "ergotree-ir") (r "^0.25.0") (f (quote ("json"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "=1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision" "preserve_order"))) (d #t) (k 0)) (d (n "sigma-ser") (r "^0.14.0") (d #t) (k 0)) (d (n "sigma-util") (r "^0.13.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "19c4fgmjv86w55x8s7wmpb4z4nfgzwjv1mrn038218hvcx4747mj") (f (quote (("default") ("arbitrary" "proptest" "proptest-derive" "ergo-chain-types/arbitrary" "ergotree-ir/arbitrary"))))))

(define-public crate-ergo-nipopow-0.13.0 (c (n "ergo-nipopow") (v "0.13.0") (d (list (d (n "base16") (r "^0.2.1") (d #t) (k 0)) (d (n "bounded-integer") (r "^0.5") (f (quote ("types"))) (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ergo-chain-types") (r "^0.13.0") (d #t) (k 0)) (d (n "ergo-merkle-tree") (r "^0.13.0") (d #t) (k 0)) (d (n "ergotree-ir") (r "^0.26.0") (f (quote ("json"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "=1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision" "preserve_order"))) (d #t) (k 0)) (d (n "sigma-ser") (r "^0.15.0") (d #t) (k 0)) (d (n "sigma-util") (r "^0.14.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0lxd5gzzjscbh4xq28kh5dh37v5pffmfvhb2kp86j8qi3y9j5vfb") (f (quote (("default") ("arbitrary" "proptest" "proptest-derive" "ergo-chain-types/arbitrary" "ergotree-ir/arbitrary"))))))

(define-public crate-ergo-nipopow-0.14.0 (c (n "ergo-nipopow") (v "0.14.0") (d (list (d (n "base16") (r "^0.2.1") (d #t) (k 0)) (d (n "bounded-integer") (r "^0.5") (f (quote ("types"))) (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ergo-chain-types") (r "^0.14.0") (d #t) (k 0)) (d (n "ergo-merkle-tree") (r "^0.14.0") (d #t) (k 0)) (d (n "ergotree-ir") (r "^0.27.0") (f (quote ("json"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "=1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision" "preserve_order"))) (d #t) (k 0)) (d (n "sigma-ser") (r "^0.15.0") (d #t) (k 0)) (d (n "sigma-util") (r "^0.14.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1y6j6g3z8mnb9h7c26b8k3f9jqgfdyzsvfjk4gqxlzg6xhvsa5jl") (f (quote (("default") ("arbitrary" "proptest" "proptest-derive" "ergo-chain-types/arbitrary" "ergotree-ir/arbitrary"))))))

(define-public crate-ergo-nipopow-0.14.1 (c (n "ergo-nipopow") (v "0.14.1") (d (list (d (n "base16") (r "^0.2.1") (d #t) (k 0)) (d (n "bounded-integer") (r "^0.5") (f (quote ("types"))) (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ergo-chain-types") (r "^0.14.1") (d #t) (k 0)) (d (n "ergo-merkle-tree") (r "^0.14.1") (d #t) (k 0)) (d (n "ergotree-ir") (r "^0.27.1") (f (quote ("json"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "proptest") (r "=1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision" "preserve_order"))) (d #t) (k 0)) (d (n "sigma-ser") (r "^0.15.0") (d #t) (k 0)) (d (n "sigma-util") (r "^0.14.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1c4vkzdjr0idjh0k3yppkpacrc714wyia0y9cbf6w66q2sfmhx2q") (f (quote (("default") ("arbitrary" "proptest" "proptest-derive" "ergo-chain-types/arbitrary" "ergotree-ir/arbitrary"))))))

