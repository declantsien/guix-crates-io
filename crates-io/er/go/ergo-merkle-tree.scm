(define-module (crates-io er go ergo-merkle-tree) #:use-module (crates-io))

(define-public crate-ergo-merkle-tree-0.2.0 (c (n "ergo-merkle-tree") (v "0.2.0") (d (list (d (n "base16") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)))) (h "0m98hpwc46x6w3ghbgg9232yh37f8ink8waij8v5b974svr3w6v4") (f (quote (("json" "serde" "serde_json" "serde_repr" "base16" "thiserror") ("default" "json"))))))

(define-public crate-ergo-merkle-tree-0.3.0 (c (n "ergo-merkle-tree") (v "0.3.0") (d (list (d (n "base16") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.9") (d #t) (k 0)) (d (n "ergo-chain-types") (r "^0.3.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "sigma-ser") (r "^0.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)))) (h "1d8fjadbgwagj1x3h0643lwg5iwjahwr1a8hr2min6wawjdv0vnk") (f (quote (("json" "serde" "serde_json" "serde_repr" "base16" "thiserror") ("default" "json") ("arbitrary" "proptest" "proptest-derive" "ergo-chain-types/arbitrary"))))))

(define-public crate-ergo-merkle-tree-0.3.1 (c (n "ergo-merkle-tree") (v "0.3.1") (d (list (d (n "base16") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.9") (d #t) (k 0)) (d (n "ergo-chain-types") (r "^0.3.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "sigma-ser") (r "^0.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)))) (h "1gr1fw6fyldlksgm980bkp1989r8wlq4qb4z70xph5gkjq9ns3iy") (f (quote (("json" "serde" "serde_json" "serde_repr" "base16" "thiserror") ("default" "json") ("arbitrary" "proptest" "proptest-derive" "ergo-chain-types/arbitrary"))))))

(define-public crate-ergo-merkle-tree-0.4.0 (c (n "ergo-merkle-tree") (v "0.4.0") (d (list (d (n "base16") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.9") (d #t) (k 0)) (d (n "ergo-chain-types") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "sigma-ser") (r "^0.6.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)))) (h "0l93djydfk4cn1q7xy6x9pca6jw42cd0wnj0sfrvi97vpfl00k5d") (f (quote (("json" "serde" "serde_json" "serde_repr" "base16" "thiserror") ("default" "json") ("arbitrary" "proptest" "proptest-derive" "ergo-chain-types/arbitrary"))))))

(define-public crate-ergo-merkle-tree-0.5.0 (c (n "ergo-merkle-tree") (v "0.5.0") (d (list (d (n "base16") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.9") (d #t) (k 0)) (d (n "ergo-chain-types") (r "^0.5.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "sigma-ser") (r "^0.7.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)))) (h "11r8izmih570n7qazjwmqvd3a8aq2zi3yf19kjql6r8x5v1bcwah") (f (quote (("json" "serde" "serde_json" "serde_repr" "base16" "thiserror") ("default" "json") ("arbitrary" "proptest" "proptest-derive" "ergo-chain-types/arbitrary"))))))

(define-public crate-ergo-merkle-tree-0.6.0 (c (n "ergo-merkle-tree") (v "0.6.0") (d (list (d (n "base16") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.9") (d #t) (k 0)) (d (n "ergo-chain-types") (r "^0.6.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "sigma-ser") (r "^0.8.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)))) (h "1hifr47mh4fqnwa5666pcpqksvbj0qj8vimd723qh5nn7v9p6i8g") (f (quote (("json" "serde" "serde_json" "serde_repr" "base16" "thiserror") ("default" "json") ("arbitrary" "proptest" "proptest-derive" "ergo-chain-types/arbitrary"))))))

(define-public crate-ergo-merkle-tree-0.7.0 (c (n "ergo-merkle-tree") (v "0.7.0") (d (list (d (n "base16") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.9") (d #t) (k 0)) (d (n "ergo-chain-types") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "sigma-ser") (r "^0.9.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)))) (h "0j3akxwjd80cgxaz1c2b3nn8gdw3i4289mjsd2k9wvk3my6ly1hs") (f (quote (("json" "serde" "serde_json" "serde_repr" "base16" "thiserror") ("default" "json") ("arbitrary" "proptest" "proptest-derive" "ergo-chain-types/arbitrary"))))))

(define-public crate-ergo-merkle-tree-0.8.0 (c (n "ergo-merkle-tree") (v "0.8.0") (d (list (d (n "base16") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.9") (d #t) (k 0)) (d (n "ergo-chain-types") (r "^0.8.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "sigma-ser") (r "^0.10.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)))) (h "194147ryydds3f189svbamwn0vw50vrvl054bp73pmw70r33ggz4") (f (quote (("json" "serde" "serde_json" "serde_repr" "base16" "thiserror") ("default" "json") ("arbitrary" "proptest" "proptest-derive" "ergo-chain-types/arbitrary"))))))

(define-public crate-ergo-merkle-tree-0.8.1 (c (n "ergo-merkle-tree") (v "0.8.1") (d (list (d (n "base16") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "ergo-chain-types") (r "^0.8.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "proptest") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision"))) (o #t) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "sigma-ser") (r "^0.10.1") (d #t) (k 0)) (d (n "sigma-util") (r "^0.9.1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)))) (h "022kdsily4xrzxdkfq1ixqmgnhq3dyxmn84nc7vqlnsy2xmjqi64") (f (quote (("json" "serde" "serde_json" "serde_repr" "base16" "thiserror") ("default" "json") ("arbitrary" "proptest" "proptest-derive" "ergo-chain-types/arbitrary"))))))

(define-public crate-ergo-merkle-tree-0.9.0 (c (n "ergo-merkle-tree") (v "0.9.0") (d (list (d (n "base16") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "ergo-chain-types") (r "^0.9.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "proptest") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision"))) (o #t) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "sigma-ser") (r "^0.11.0") (d #t) (k 0)) (d (n "sigma-util") (r "^0.10.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)))) (h "188j7m4z38dbdsapfw4kwjx5apwprl2vmkji1drl22gc8dvlsq29") (f (quote (("json" "serde" "serde_json" "serde_repr" "base16" "thiserror") ("default" "json") ("arbitrary" "proptest" "proptest-derive" "ergo-chain-types/arbitrary"))))))

(define-public crate-ergo-merkle-tree-0.10.0 (c (n "ergo-merkle-tree") (v "0.10.0") (d (list (d (n "base16") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "ergo-chain-types") (r "^0.10.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "proptest") (r "=1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision" "preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "sigma-ser") (r "^0.12.0") (d #t) (k 0)) (d (n "sigma-util") (r "^0.11.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)))) (h "1z2pxq8bjkdji0g6ahk8hbz8hc7dz2ijizssvgxl4a1xkzd29did") (f (quote (("json" "serde" "serde_json" "serde_repr" "base16" "thiserror") ("default" "json") ("arbitrary" "proptest" "proptest-derive" "ergo-chain-types/arbitrary"))))))

(define-public crate-ergo-merkle-tree-0.11.0 (c (n "ergo-merkle-tree") (v "0.11.0") (d (list (d (n "base16") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "ergo-chain-types") (r "^0.11.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "proptest") (r "=1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision" "preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "sigma-ser") (r "^0.13.0") (d #t) (k 0)) (d (n "sigma-util") (r "^0.12.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)))) (h "03cpd6rkmf280ln5cvjv218v7q9b6p1drjglp9z7709wwwmikp20") (f (quote (("json" "serde" "serde_json" "serde_repr" "base16" "thiserror") ("default" "json") ("arbitrary" "proptest" "proptest-derive" "ergo-chain-types/arbitrary"))))))

(define-public crate-ergo-merkle-tree-0.11.1 (c (n "ergo-merkle-tree") (v "0.11.1") (d (list (d (n "base16") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "ergo-chain-types") (r "^0.11.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "proptest") (r "=1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision" "preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "sigma-ser") (r "^0.13.1") (d #t) (k 0)) (d (n "sigma-util") (r "^0.12.1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)))) (h "13yhqz65q74j68vwmhdbyw74jk4yy0wf24ccg2h5jbv972ibwbr6") (f (quote (("json" "serde" "serde_json" "serde_repr" "base16" "thiserror") ("default" "json") ("arbitrary" "proptest" "proptest-derive" "ergo-chain-types/arbitrary"))))))

(define-public crate-ergo-merkle-tree-0.12.0 (c (n "ergo-merkle-tree") (v "0.12.0") (d (list (d (n "base16") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "ergo-chain-types") (r "^0.12.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "proptest") (r "=1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision" "preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "sigma-ser") (r "^0.14.0") (d #t) (k 0)) (d (n "sigma-util") (r "^0.13.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)))) (h "1jbgncvcca1rnzyhh4nc9435sxqkchvby25fylibxgqgw54gszm9") (f (quote (("json" "serde" "serde_json" "serde_repr" "base16" "thiserror") ("default" "json") ("arbitrary" "proptest" "proptest-derive" "ergo-chain-types/arbitrary"))))))

(define-public crate-ergo-merkle-tree-0.13.0 (c (n "ergo-merkle-tree") (v "0.13.0") (d (list (d (n "base16") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "ergo-chain-types") (r "^0.13.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "proptest") (r "=1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision" "preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "sigma-ser") (r "^0.15.0") (d #t) (k 0)) (d (n "sigma-util") (r "^0.14.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)))) (h "1pc54gfanhlbsl8kbw14y6mjy9dfrc50a8k9485p5xpg1wj8nb5d") (f (quote (("json" "serde" "serde_json" "serde_repr" "base16" "thiserror") ("default" "json") ("arbitrary" "proptest" "proptest-derive" "ergo-chain-types/arbitrary"))))))

(define-public crate-ergo-merkle-tree-0.14.0 (c (n "ergo-merkle-tree") (v "0.14.0") (d (list (d (n "base16") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "ergo-chain-types") (r "^0.14.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "proptest") (r "=1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision" "preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "sigma-ser") (r "^0.15.0") (d #t) (k 0)) (d (n "sigma-util") (r "^0.14.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)))) (h "133m5qgzczy955chd6pnryi6hml8cbqa33vy0i89xra02skfq7rv") (f (quote (("json" "serde" "serde_json" "serde_repr" "base16" "thiserror") ("default" "json") ("arbitrary" "proptest" "proptest-derive" "ergo-chain-types/arbitrary"))))))

(define-public crate-ergo-merkle-tree-0.14.1 (c (n "ergo-merkle-tree") (v "0.14.1") (d (list (d (n "base16") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "ergo-chain-types") (r "^0.14.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "proptest") (r "=1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest-derive") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision" "preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "sigma-ser") (r "^0.15.0") (d #t) (k 0)) (d (n "sigma-util") (r "^0.14.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)))) (h "0hkz94164vdf449l2j6354xfckrbgbmjnzq3phnq475hh0plvj0v") (f (quote (("json" "serde" "serde_json" "serde_repr" "base16" "thiserror") ("default" "json") ("arbitrary" "proptest" "proptest-derive" "ergo-chain-types/arbitrary"))))))

