(define-module (crates-io er ro error-stack) #:use-module (crates-io))

(define-public crate-error-stack-0.1.0 (c (n "error-stack") (v "0.1.0") (d (list (d (n "futures") (r "^0.3.21") (f (quote ("executor"))) (k 2)) (d (n "futures-core") (r "^0.3.21") (o #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^1.0.10") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2.3") (d #t) (k 1)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 2)) (d (n "tracing-error") (r "^0.2.0") (o #t) (d #t) (k 0)))) (h "1792n9hxlws2q00d0rghzn5nqsz166s525p22yxqyd00d9x06c71") (f (quote (("std") ("default" "std")))) (s 2) (e (quote (("spantrace" "dep:tracing-error") ("hooks" "dep:once_cell" "std") ("futures" "dep:pin-project")))) (r "1.61.0")))

(define-public crate-error-stack-0.1.1 (c (n "error-stack") (v "0.1.1") (d (list (d (n "futures") (r "^0.3.21") (f (quote ("executor"))) (k 2)) (d (n "futures-core") (r "^0.3.21") (o #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^1.0.10") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2.3") (d #t) (k 1)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 2)) (d (n "tracing-error") (r "^0.2.0") (o #t) (d #t) (k 0)))) (h "17kmsqwn5amgzic2dvph16l936k9x242z1l3y7rli0r1id4ayxar") (f (quote (("std") ("default" "std")))) (s 2) (e (quote (("spantrace" "dep:tracing-error") ("hooks" "dep:once_cell" "std") ("futures" "dep:pin-project")))) (r "1.61.0")))

(define-public crate-error-stack-0.2.0 (c (n "error-stack") (v "0.2.0") (d (list (d (n "ansi-to-html") (r "^0.1.0") (d #t) (k 2)) (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "expect-test") (r "^1.4.0") (d #t) (k 2)) (d (n "eyre") (r "^0.6") (o #t) (k 0)) (d (n "futures") (r "^0.3.21") (f (quote ("executor"))) (k 2)) (d (n "insta") (r "^1.18.0") (f (quote ("filters"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 2)) (d (n "owo-colors") (r "^3") (f (quote ("supports-colors"))) (o #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 2)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 2)) (d (n "tracing") (r "^0.1.35") (d #t) (k 2)) (d (n "tracing-error") (r "^0.2") (o #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.14") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.63") (d #t) (k 2)))) (h "1dnvanq2i9j80r2hakikxs0zy4f56iplwhnp27g77fzgzwr90jlp") (f (quote (("default" "std" "pretty-print")))) (s 2) (e (quote (("std" "anyhow?/std") ("spantrace" "dep:tracing-error" "std") ("pretty-print" "dep:owo-colors") ("eyre" "dep:eyre" "std")))) (r "1.63.0")))

(define-public crate-error-stack-0.2.1 (c (n "error-stack") (v "0.2.1") (d (list (d (n "ansi-to-html") (r "^0.1.0") (d #t) (k 2)) (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "expect-test") (r "^1.4.0") (d #t) (k 2)) (d (n "eyre") (r "^0.6") (o #t) (k 0)) (d (n "futures") (r "^0.3.21") (f (quote ("executor"))) (k 2)) (d (n "insta") (r "^1.18.0") (f (quote ("filters"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 2)) (d (n "owo-colors") (r "^3") (f (quote ("supports-colors"))) (o #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 2)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 2)) (d (n "tracing") (r "^0.1.35") (d #t) (k 2)) (d (n "tracing-error") (r "^0.2") (o #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.14") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.63") (d #t) (k 2)))) (h "1wk5zyxc38jm1qkmn1mh9iy1xp5w08qp00i2sf51g1bvhyf8f14w") (f (quote (("default" "std" "pretty-print")))) (s 2) (e (quote (("std" "anyhow?/std") ("spantrace" "dep:tracing-error" "std") ("pretty-print" "dep:owo-colors") ("eyre" "dep:eyre" "std")))) (r "1.63.0")))

(define-public crate-error-stack-0.2.2 (c (n "error-stack") (v "0.2.2") (d (list (d (n "ansi-to-html") (r "^0.1.0") (d #t) (k 2)) (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "expect-test") (r "^1.4.0") (d #t) (k 2)) (d (n "eyre") (r "^0.6") (o #t) (k 0)) (d (n "futures") (r "^0.3.21") (f (quote ("executor"))) (k 2)) (d (n "insta") (r "^1.18.0") (f (quote ("filters"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 2)) (d (n "owo-colors") (r "^3") (f (quote ("supports-colors"))) (o #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 2)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 2)) (d (n "tracing") (r "^0.1.35") (d #t) (k 2)) (d (n "tracing-error") (r "^0.2") (o #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.14") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.63") (d #t) (k 2)))) (h "0zsi7cbx57yd5vwlsfl4i69xj6dfaz03dq51vln9k6ysq4y30b3n") (f (quote (("default" "std" "pretty-print")))) (s 2) (e (quote (("std" "anyhow?/std") ("spantrace" "dep:tracing-error" "std") ("pretty-print" "dep:owo-colors") ("eyre" "dep:eyre" "std")))) (r "1.63.0")))

(define-public crate-error-stack-0.2.3 (c (n "error-stack") (v "0.2.3") (d (list (d (n "ansi-to-html") (r "^0.1.0") (d #t) (k 2)) (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "expect-test") (r "^1.4.0") (d #t) (k 2)) (d (n "eyre") (r "^0.6") (o #t) (k 0)) (d (n "futures") (r "^0.3.21") (f (quote ("executor"))) (k 2)) (d (n "insta") (r "^1.18.0") (f (quote ("filters"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 2)) (d (n "owo-colors") (r "^3") (f (quote ("supports-colors"))) (o #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 2)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 2)) (d (n "tracing") (r "^0.1.35") (d #t) (k 2)) (d (n "tracing-error") (r "^0.2") (o #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.14") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.63") (d #t) (k 2)))) (h "01km9w9k4z92z3y1xfjdi4n7yygz70hr6y82kc40g0awy2cwlr9c") (f (quote (("default" "std" "pretty-print")))) (s 2) (e (quote (("std" "anyhow?/std") ("spantrace" "dep:tracing-error" "std") ("pretty-print" "dep:owo-colors") ("eyre" "dep:eyre" "std")))) (r "1.63.0")))

(define-public crate-error-stack-0.2.4 (c (n "error-stack") (v "0.2.4") (d (list (d (n "ansi-to-html") (r "^0.1.0") (d #t) (k 2)) (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "expect-test") (r "^1.4.0") (d #t) (k 2)) (d (n "eyre") (r "^0.6") (o #t) (k 0)) (d (n "futures") (r "^0.3.21") (f (quote ("executor"))) (k 2)) (d (n "insta") (r "^1.18.0") (f (quote ("filters"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 2)) (d (n "owo-colors") (r "^3") (f (quote ("supports-colors"))) (o #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 2)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 2)) (d (n "tracing") (r "^0.1.35") (d #t) (k 2)) (d (n "tracing-error") (r "^0.2") (o #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.14") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.63") (d #t) (k 2)))) (h "1yb3v4g7p9ahcikcci3fhh9sbldqr7d7bqq89jbkvndj0i7257c5") (f (quote (("default" "std" "pretty-print")))) (s 2) (e (quote (("std" "anyhow?/std") ("spantrace" "dep:tracing-error" "std") ("pretty-print" "dep:owo-colors") ("eyre" "dep:eyre" "std")))) (r "1.63.0")))

(define-public crate-error-stack-0.3.0 (c (n "error-stack") (v "0.3.0") (d (list (d (n "ansi-to-html") (r "^0.1.2") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.65") (o #t) (k 0)) (d (n "expect-test") (r "^1.4.0") (d #t) (k 2)) (d (n "eyre") (r "^0.6") (o #t) (k 0)) (d (n "futures") (r "^0.3.25") (f (quote ("executor"))) (k 2)) (d (n "insta") (r "^1.23.0") (f (quote ("filters" "ron"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.17.0") (d #t) (k 2)) (d (n "owo-colors") (r "^3.5.0") (d #t) (k 2)) (d (n "regex") (r "^1.7.1") (d #t) (k 2)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 2)) (d (n "spin") (r "^0.9") (f (quote ("rwlock" "once"))) (o #t) (k 0)) (d (n "supports-color") (r "^2.0.0") (d #t) (k 2)) (d (n "supports-unicode") (r "^1.0.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 2)) (d (n "tracing-error") (r "^0.2") (o #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.76") (d #t) (k 2)))) (h "0h3vp6a539l0cqcz8x3jmf6mb4w0gfp2nshisccwyh20pyc2m38m") (f (quote (("default" "std")))) (s 2) (e (quote (("std" "anyhow?/std") ("spantrace" "dep:tracing-error" "std") ("serde" "dep:serde") ("hooks" "dep:spin") ("eyre" "dep:eyre" "std")))) (r "1.63.0")))

(define-public crate-error-stack-0.3.1 (c (n "error-stack") (v "0.3.1") (d (list (d (n "ansi-to-html") (r "^0.1.2") (d #t) (k 2)) (d (n "anyhow") (r "^1.0.65") (o #t) (k 0)) (d (n "expect-test") (r "^1.4.0") (d #t) (k 2)) (d (n "eyre") (r "^0.6") (o #t) (k 0)) (d (n "futures") (r "^0.3.25") (f (quote ("executor"))) (k 2)) (d (n "insta") (r "^1.23.0") (f (quote ("filters" "ron"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.17.0") (d #t) (k 2)) (d (n "owo-colors") (r "^3.5.0") (d #t) (k 2)) (d (n "regex") (r "^1.7.1") (d #t) (k 2)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 2)) (d (n "spin") (r "^0.9") (f (quote ("rwlock" "once"))) (o #t) (k 0)) (d (n "supports-color") (r "^2.0.0") (d #t) (k 2)) (d (n "supports-unicode") (r "^1.0.2") (d #t) (k 2)) (d (n "thread_local") (r "=1.1.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 2)) (d (n "tracing-error") (r "^0.2") (o #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.76") (d #t) (k 2)))) (h "11dc8rbgzcwh7jvwimy60gnrwlb3j6y2wlxqnmnp4zqw6dzl802z") (f (quote (("default" "std")))) (s 2) (e (quote (("std" "anyhow?/std") ("spantrace" "dep:tracing-error" "std") ("serde" "dep:serde") ("hooks" "dep:spin") ("eyre" "dep:eyre" "std")))) (r "1.63.0")))

(define-public crate-error-stack-0.4.0 (c (n "error-stack") (v "0.4.0") (d (list (d (n "ansi-to-html") (r "^0.1.3") (d #t) (k 2)) (d (n "anyhow") (r ">=1.0.73") (o #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "eyre") (r "^0.6") (o #t) (k 0)) (d (n "futures") (r "^0.3.28") (f (quote ("executor"))) (k 2)) (d (n "insta") (r "^1.31.0") (f (quote ("filters" "ron"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "owo-colors") (r "^3.5.0") (d #t) (k 2)) (d (n "regex") (r "^1.9.3") (d #t) (k 2)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "serde") (r "^1.0.185") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 2)) (d (n "spin") (r "^0.9") (f (quote ("rwlock" "once"))) (o #t) (k 0)) (d (n "supports-color") (r "^2.0.0") (d #t) (k 2)) (d (n "supports-unicode") (r "^2.0.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 2)) (d (n "tracing-error") (r "^0.2") (o #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.83") (d #t) (k 2)))) (h "1vgw738ylpqdkysg4pjfglddv36r0qlsakx2hwxzq15m0ps7x8z6") (f (quote (("default" "std")))) (s 2) (e (quote (("std" "anyhow?/std") ("spantrace" "dep:tracing-error" "std") ("serde" "dep:serde") ("hooks" "dep:spin") ("eyre" "dep:eyre" "std")))) (r "1.63.0")))

(define-public crate-error-stack-0.4.1 (c (n "error-stack") (v "0.4.1") (d (list (d (n "ansi-to-html") (r "^0.1.3") (d #t) (k 2)) (d (n "anyhow") (r ">=1.0.73") (o #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "eyre") (r "^0.6") (o #t) (k 0)) (d (n "futures") (r "^0.3.28") (f (quote ("executor"))) (k 2)) (d (n "insta") (r "^1.31.0") (f (quote ("filters" "ron"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "owo-colors") (r "^3.5.0") (d #t) (k 2)) (d (n "regex") (r "^1.9.5") (d #t) (k 2)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 2)) (d (n "spin") (r "^0.9") (f (quote ("rwlock" "once"))) (o #t) (k 0)) (d (n "supports-color") (r "^2.0.0") (d #t) (k 2)) (d (n "supports-unicode") (r "^2.0.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 2)) (d (n "tracing-error") (r "^0.2") (o #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.83") (d #t) (k 2)))) (h "0sx7n9k1s211hrl4441mf9h5v1cgxv2pp5j1w8nhwpkv4nm2p9r7") (f (quote (("default" "std")))) (s 2) (e (quote (("std" "anyhow?/std") ("spantrace" "dep:tracing-error" "std") ("serde" "dep:serde") ("hooks" "dep:spin") ("eyre" "dep:eyre" "std")))) (r "1.63.0")))

