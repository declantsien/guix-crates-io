(define-module (crates-io se i- sei-integration-tests) #:use-module (crates-io))

(define-public crate-sei-integration-tests-0.4.7 (c (n "sei-integration-tests") (v "0.4.7") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cosmwasm-std") (r "^1.0.0") (d #t) (k 0)) (d (n "cw-multi-test") (r "^0.14.0") (d #t) (k 0)) (d (n "cw20-base") (r "^0.13.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "sei-cosmwasm") (r "^0.4.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 0)))) (h "0r96n8k79a771sy4ql5xb9kfa7xvibxd9n4zccm5jasjg759i3gd")))

(define-public crate-sei-integration-tests-0.4.9 (c (n "sei-integration-tests") (v "0.4.9") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cosmwasm-std") (r "^1.0.0") (d #t) (k 0)) (d (n "cw-multi-test") (r "^0.14.0") (d #t) (k 0)) (d (n "cw20-base") (r "^0.13.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "sei-cosmwasm") (r "^0.4.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 0)))) (h "193fv93cgg3j4myv8nfnivmr130dc3qqg78mrj2bvhbwmnn0fac6")))

(define-public crate-sei-integration-tests-0.4.10 (c (n "sei-integration-tests") (v "0.4.10") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cosmwasm-std") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cw-multi-test") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cw20-base") (r "^0.13.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sei-cosmwasm") (r "^0.4.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0wspnqinz8ch9a61b8xwhm8snpxvq1r2fv5602rqpfnbaxqsm64r")))

(define-public crate-sei-integration-tests-0.4.11 (c (n "sei-integration-tests") (v "0.4.11") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "cosmwasm-std") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cw-multi-test") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cw20-base") (r "^0.13.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sei-cosmwasm") (r "^0.4.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0rlgqi3916k2nl0vfw76lbx0842rbaa18lyk4kxhs262idynv1dj")))

