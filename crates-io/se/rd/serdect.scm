(define-module (crates-io se rd serdect) #:use-module (crates-io))

(define-public crate-serdect-0.1.0 (c (n "serdect") (v "0.1.0") (d (list (d (n "base16ct") (r "^0.1.1") (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "ciborium") (r "^0.2") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde") (r "^1.0.119") (f (quote ("derive"))) (k 2)) (d (n "serde-json-core") (r "^0.4") (f (quote ("std"))) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "0b6krqs77vzwzdjcrcywlmlwd3msfpgmkkbxx8q9njypyhdwx3q3") (f (quote (("default" "alloc") ("alloc" "base16ct/alloc" "serde/alloc")))) (r "1.56")))

(define-public crate-serdect-0.2.0 (c (n "serdect") (v "0.2.0") (d (list (d (n "base16ct") (r "^0.2") (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "ciborium") (r "^0.2") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0.96") (k 0)) (d (n "serde") (r "^1.0.119") (f (quote ("derive"))) (k 2)) (d (n "serde-json-core") (r "^0.5") (f (quote ("std"))) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "0xw1b6acw6nd0jchzyxzr97f0s4shbcqh92iyjwln0cskshi8kx8") (f (quote (("default" "alloc") ("alloc" "base16ct/alloc" "serde/alloc")))) (r "1.60")))

(define-public crate-serdect-0.3.0-pre.0 (c (n "serdect") (v "0.3.0-pre.0") (d (list (d (n "base16ct") (r "^0.2") (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "ciborium") (r "^0.2") (d #t) (k 2)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rmp-serde") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0.184") (k 0)) (d (n "serde") (r "^1.0.184") (f (quote ("derive"))) (k 2)) (d (n "serde-json-core") (r "^0.5") (f (quote ("std"))) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "toml") (r "^0.8") (d #t) (k 2)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "02i4pwz5lwww9c3s3700mh8vfz716rlcbw63lllbx9mbpxjgj7kr") (f (quote (("default" "alloc") ("alloc" "base16ct/alloc" "serde/alloc")))) (r "1.70")))

