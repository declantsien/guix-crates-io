(define-module (crates-io se rd serde-fressian) #:use-module (crates-io))

(define-public crate-serde-fressian-0.1.0 (c (n "serde-fressian") (v "0.1.0") (d (list (d (n "byteorder") (r "^1.2.3") (d #t) (k 0)) (d (n "itertools") (r "^0.7.3") (d #t) (k 0)) (d (n "maplit") (r "^1.0.1") (d #t) (k 2)) (d (n "ordered-float") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.71") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10.4") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.70") (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.2.0") (d #t) (k 0)) (d (n "url") (r "^1.7.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.6") (o #t) (d #t) (k 0)))) (h "0yhbmmcb4m8075lr6zwzwg9lba2x3dic5x1jn1hddcvz3pixy1k3") (f (quote (("use_uuid_crate" "uuid") ("use_url_crate" "url") ("use_regex_crate" "regex") ("default"))))))

(define-public crate-serde-fressian-0.1.1 (c (n "serde-fressian") (v "0.1.1") (d (list (d (n "byteorder") (r "^1.2.3") (d #t) (k 0)) (d (n "itertools") (r "^0.7.3") (d #t) (k 0)) (d (n "maplit") (r "^1.0.1") (d #t) (k 2)) (d (n "ordered-float") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.71") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10.4") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.70") (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.2.0") (d #t) (k 0)) (d (n "url") (r "^1.7.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.6") (o #t) (d #t) (k 0)))) (h "1fvnasxax5r3d29hwi47v8ah33393fswkvzv432z228abcqxps59") (f (quote (("use_uuid_crate" "uuid") ("use_url_crate" "url") ("use_regex_crate" "regex") ("default"))))))

