(define-module (crates-io se rd serde_json) #:use-module (crates-io))

(define-public crate-serde_json-0.5.0 (c (n "serde_json") (v "0.5.0") (d (list (d (n "num") (r "*") (d #t) (k 0)) (d (n "serde") (r "*") (d #t) (k 0)))) (h "14qqsz7lh7pbl1ggza1wnwr4n49dva4lz4g6dcgw0m2mxcxa79j5")))

(define-public crate-serde_json-0.5.1 (c (n "serde_json") (v "0.5.1") (d (list (d (n "num") (r "*") (d #t) (k 0)) (d (n "serde") (r "*") (d #t) (k 0)))) (h "0d2v1afpyyjbxh6m967yl1lchwzqnbf5mg8y750pmnfvm9d84f8c")))

(define-public crate-serde_json-0.6.0 (c (n "serde_json") (v "0.6.0") (d (list (d (n "num") (r "*") (d #t) (k 0)) (d (n "serde") (r "*") (d #t) (k 0)))) (h "03g7hcn4wnc34z1680r47wvhxs3m38gd8kv79df637va9qyhcsaq")))

(define-public crate-serde_json-0.7.0 (c (n "serde_json") (v "0.7.0") (d (list (d (n "clippy") (r "0.*") (o #t) (d #t) (k 0)) (d (n "num") (r "~0.1.27") (k 0)) (d (n "serde") (r "^0.7.0") (d #t) (k 0)))) (h "1lwwhjd12vl2m7r6bgpwa7a20xrxy2wzqdvh035s1lw129y0hbmr") (f (quote (("nightly-testing" "clippy"))))))

(define-public crate-serde_json-0.6.1 (c (n "serde_json") (v "0.6.1") (d (list (d (n "num") (r "^0.1.27") (d #t) (k 0)) (d (n "serde") (r "^0.6.0") (d #t) (k 0)))) (h "0dnzrb6ngwl1qpa1mn3n1bp969gz7ybx7003sd99bgrqw13yxamm")))

(define-public crate-serde_json-0.7.1 (c (n "serde_json") (v "0.7.1") (d (list (d (n "clippy") (r "0.*") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "~0.1.32") (d #t) (k 0)) (d (n "serde") (r "^0.7.0") (d #t) (k 0)))) (h "1hd49ka8nal955zs9x9k7xjnnbpd8ga1r5zvb0001w58r98sg21c") (f (quote (("nightly-testing" "clippy"))))))

(define-public crate-serde_json-0.7.2 (c (n "serde_json") (v "0.7.2") (d (list (d (n "clippy") (r "0.*") (o #t) (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.0.11") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "~0.1.32") (d #t) (k 0)) (d (n "serde") (r "^0.7.0") (d #t) (k 0)))) (h "028qh58vnj1ysjhwhv3g7zx9rifv12v2f7q5y53rxr97xwpq1113") (f (quote (("preserve_order" "linked-hash-map" "linked-hash-map/serde_impl") ("nightly-testing" "clippy"))))))

(define-public crate-serde_json-0.7.3 (c (n "serde_json") (v "0.7.3") (d (list (d (n "clippy") (r "0.*") (o #t) (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.0.11") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "~0.1.32") (d #t) (k 0)) (d (n "serde") (r "^0.7.0") (d #t) (k 0)))) (h "0p34srsfzyd5rd9mn6wxgyl0cv9drx84fg1w577d4155lypdyjzk") (f (quote (("preserve_order" "linked-hash-map" "linked-hash-map/serde_impl") ("nightly-testing" "clippy"))))))

(define-public crate-serde_json-0.7.4 (c (n "serde_json") (v "0.7.4") (d (list (d (n "clippy") (r "0.*") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.1") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "~0.1.32") (d #t) (k 0)) (d (n "serde") (r "^0.7.0") (d #t) (k 0)))) (h "02swlgdpi5lbb5birxi4h4q3nmakn83xw9z007sv077kah2qlbmj") (f (quote (("preserve_order" "linked-hash-map" "linked-hash-map/serde_impl") ("nightly-testing" "clippy"))))))

(define-public crate-serde_json-0.8.0-rc1 (c (n "serde_json") (v "0.8.0-rc1") (d (list (d (n "clippy") (r "0.*") (o #t) (d #t) (k 0)) (d (n "dtoa") (r "^0.2") (d #t) (k 0)) (d (n "itoa") (r "^0.1") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "~0.1.32") (d #t) (k 0)) (d (n "serde") (r "^0.8.0-rc3") (d #t) (k 0)))) (h "0p8gc8vvljrl2xgc26xyn47v86g5rwj6y7ym2qzzv3vj23i78why") (f (quote (("unstable-testing" "clippy") ("preserve_order" "linked-hash-map" "linked-hash-map/serde_impl"))))))

(define-public crate-serde_json-0.8.0 (c (n "serde_json") (v "0.8.0") (d (list (d (n "clippy") (r "0.*") (o #t) (d #t) (k 0)) (d (n "dtoa") (r "^0.2") (d #t) (k 0)) (d (n "itoa") (r "^0.1") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "~0.1.32") (d #t) (k 0)) (d (n "serde") (r "^0.8.0") (d #t) (k 0)))) (h "0fwsy75imdrnmxcckr7i6cdqq0d5575hd555g9qc38lzf3k0hqy8") (f (quote (("unstable-testing" "clippy") ("preserve_order" "linked-hash-map" "linked-hash-map/serde_impl"))))))

(define-public crate-serde_json-0.8.1 (c (n "serde_json") (v "0.8.1") (d (list (d (n "clippy") (r "0.*") (o #t) (d #t) (k 0)) (d (n "dtoa") (r "^0.2") (d #t) (k 0)) (d (n "itoa") (r "^0.1") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "~0.1.32") (d #t) (k 0)) (d (n "serde") (r "^0.8.0") (d #t) (k 0)))) (h "1g5frcn4gybz6m601rqv1yar1zy80iglfrpg7dfwy1jbv6lzh40f") (f (quote (("unstable-testing" "clippy") ("preserve_order" "linked-hash-map" "linked-hash-map/serde_impl"))))))

(define-public crate-serde_json-0.8.2 (c (n "serde_json") (v "0.8.2") (d (list (d (n "clippy") (r "0.*") (o #t) (d #t) (k 0)) (d (n "dtoa") (r "^0.2") (d #t) (k 0)) (d (n "itoa") (r "^0.1") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "~0.1.32") (d #t) (k 0)) (d (n "serde") (r "^0.8.7") (d #t) (k 0)))) (h "0nvv9sy59f55fsf5jhl1gvhzkj0b16r3saw2l7w5s9j2z91bpcz5") (f (quote (("unstable-testing" "clippy") ("preserve_order" "linked-hash-map" "linked-hash-map/serde_impl"))))))

(define-public crate-serde_json-0.8.3 (c (n "serde_json") (v "0.8.3") (d (list (d (n "clippy") (r "0.*") (o #t) (d #t) (k 0)) (d (n "dtoa") (r "^0.2") (d #t) (k 0)) (d (n "itoa") (r "^0.1") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "~0.1.32") (d #t) (k 0)) (d (n "serde") (r "^0.8.13") (d #t) (k 0)))) (h "1z72fm3gzzaysrf7hxlkn93a8afp8fv30drl0ffmpxnrfjgb3dhw") (f (quote (("unstable-testing" "clippy") ("preserve_order" "linked-hash-map" "linked-hash-map/serde_impl"))))))

(define-public crate-serde_json-0.8.4 (c (n "serde_json") (v "0.8.4") (d (list (d (n "clippy") (r "0.*") (o #t) (d #t) (k 0)) (d (n "dtoa") (r "^0.2") (d #t) (k 0)) (d (n "itoa") (r "^0.1") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "~0.1.32") (d #t) (k 0)) (d (n "serde") (r "^0.8.13") (d #t) (k 0)))) (h "0nzxxkl4b5mp3rmb9chf1cawrnspipasfiibnfw1z01m9lc3qz9z") (f (quote (("unstable-testing" "clippy") ("preserve_order" "linked-hash-map" "linked-hash-map/serde_impl"))))))

(define-public crate-serde_json-0.8.5 (c (n "serde_json") (v "0.8.5") (d (list (d (n "clippy") (r "0.*") (o #t) (d #t) (k 0)) (d (n "dtoa") (r "^0.2") (d #t) (k 0)) (d (n "itoa") (r "^0.1") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "~0.1.32") (d #t) (k 0)) (d (n "serde") (r "^0.8.13") (d #t) (k 0)))) (h "04ckjcj29qj0c2pk8q1dqfs4jhc2dggdw9h2n3dj1nqd16ds4mb5") (f (quote (("unstable-testing" "clippy") ("preserve_order" "linked-hash-map" "linked-hash-map/serde_impl"))))))

(define-public crate-serde_json-0.8.6 (c (n "serde_json") (v "0.8.6") (d (list (d (n "clippy") (r "0.*") (o #t) (d #t) (k 0)) (d (n "dtoa") (r "^0.2") (d #t) (k 0)) (d (n "itoa") (r "^0.1") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "~0.1.32") (d #t) (k 0)) (d (n "serde") (r "^0.8.13") (d #t) (k 0)))) (h "0k3bclzbvzhiscjydqzym887i8mkh726xkf8isf3lln3xplx5xv7") (f (quote (("unstable-testing" "clippy") ("preserve_order" "linked-hash-map" "linked-hash-map/serde_impl"))))))

(define-public crate-serde_json-0.9.0-rc1 (c (n "serde_json") (v "0.9.0-rc1") (d (list (d (n "clippy") (r "0.*") (o #t) (d #t) (k 0)) (d (n "dtoa") (r "^0.2") (d #t) (k 0)) (d (n "itoa") (r "^0.1") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "~0.1.32") (d #t) (k 0)) (d (n "serde") (r "^0.9.0-rc2") (d #t) (k 0)))) (h "060n3yqqjn7vhg2flsiw2jyq0ls8c9019hqsapm5nr0v0akkv4f3") (f (quote (("unstable-testing" "clippy") ("preserve_order" "linked-hash-map"))))))

(define-public crate-serde_json-0.9.0-rc2 (c (n "serde_json") (v "0.9.0-rc2") (d (list (d (n "clippy") (r "0.*") (o #t) (d #t) (k 0)) (d (n "dtoa") (r "^0.3") (d #t) (k 0)) (d (n "itoa") (r "^0.2") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "~0.1.32") (d #t) (k 0)) (d (n "serde") (r "^0.9.0-rc3") (d #t) (k 0)))) (h "0i4lipr18wl9q42g782hm6fka5447jqssqx15slk4l2fjgfd7ykf") (f (quote (("unstable-testing" "clippy") ("preserve_order" "linked-hash-map"))))))

(define-public crate-serde_json-0.9.0-rc3 (c (n "serde_json") (v "0.9.0-rc3") (d (list (d (n "clippy") (r "0.*") (o #t) (d #t) (k 0)) (d (n "dtoa") (r "^0.3") (d #t) (k 0)) (d (n "itoa") (r "^0.2") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "~0.1.32") (d #t) (k 0)) (d (n "serde") (r "= 0.9.0-rc4") (d #t) (k 0)) (d (n "serde_derive") (r "^0.9.0-rc4") (d #t) (k 2)))) (h "0zpikl3af8y77j6ic96jblm02080gq4zjc06lk28qi293l7rpc5v") (f (quote (("unstable-testing" "clippy") ("preserve_order" "linked-hash-map"))))))

(define-public crate-serde_json-0.9.0 (c (n "serde_json") (v "0.9.0") (d (list (d (n "clippy") (r "0.*") (o #t) (d #t) (k 0)) (d (n "dtoa") (r "^0.3") (d #t) (k 0)) (d (n "itoa") (r "^0.2") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "~0.1.32") (d #t) (k 0)) (d (n "serde") (r "= 0.9.0") (d #t) (k 0)) (d (n "serde_derive") (r "^0.9.0") (d #t) (k 2)))) (h "13lzzk18wr8yrjy23s13acixfz23nn2n8nlmsnlb5vs7wcjw3hzf") (f (quote (("unstable-testing" "clippy") ("preserve_order" "linked-hash-map"))))))

(define-public crate-serde_json-0.9.1 (c (n "serde_json") (v "0.9.1") (d (list (d (n "clippy") (r "0.*") (o #t) (d #t) (k 0)) (d (n "dtoa") (r "^0.3") (d #t) (k 0)) (d (n "itoa") (r "^0.2") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.1.32") (d #t) (k 0)) (d (n "serde") (r "^0.9") (d #t) (k 0)) (d (n "serde_derive") (r "^0.9") (d #t) (k 2)))) (h "1cy48j4fd2739v27x59sffk0vlm505xxh3vx5v64wrmlhh9xkw8s") (f (quote (("unstable-testing" "clippy") ("preserve_order" "linked-hash-map"))))))

(define-public crate-serde_json-0.9.2 (c (n "serde_json") (v "0.9.2") (d (list (d (n "clippy") (r "0.*") (o #t) (d #t) (k 0)) (d (n "dtoa") (r "^0.3") (d #t) (k 0)) (d (n "itoa") (r "^0.2") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.1.32") (d #t) (k 0)) (d (n "serde") (r "^0.9") (d #t) (k 0)) (d (n "serde_derive") (r "^0.9") (d #t) (k 2)))) (h "1f0nrq6y7lfdjlggqqqmnyx1nf81vi7b6jyshyx549vbbcgd63fk") (f (quote (("unstable-testing" "clippy") ("preserve_order" "linked-hash-map"))))))

(define-public crate-serde_json-0.9.3 (c (n "serde_json") (v "0.9.3") (d (list (d (n "clippy") (r "0.*") (o #t) (d #t) (k 0)) (d (n "dtoa") (r "^0.4") (d #t) (k 0)) (d (n "itoa") (r "^0.3") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.1.32") (d #t) (k 0)) (d (n "serde") (r "^0.9.4") (d #t) (k 0)) (d (n "serde_derive") (r "^0.9") (d #t) (k 2)))) (h "0kvrlk43vvkrpz0invd2kdnks9zi90glj5qp9v0rn4cfw0ggr5j3") (f (quote (("unstable-testing" "clippy") ("preserve_order" "linked-hash-map"))))))

(define-public crate-serde_json-0.9.4 (c (n "serde_json") (v "0.9.4") (d (list (d (n "dtoa") (r "^0.4") (d #t) (k 0)) (d (n "itoa") (r "^0.3") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.1.32") (d #t) (k 0)) (d (n "serde") (r "^0.9.4") (d #t) (k 0)) (d (n "serde_derive") (r "^0.9") (d #t) (k 2)))) (h "1kgk2c71zdslyb2blxhs6rkd5l1xr4lbzlhzr3ij1rpl9m6qz97y") (f (quote (("preserve_order" "linked-hash-map"))))))

(define-public crate-serde_json-0.9.5 (c (n "serde_json") (v "0.9.5") (d (list (d (n "dtoa") (r "^0.4") (d #t) (k 0)) (d (n "itoa") (r "^0.3") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.1.32") (d #t) (k 0)) (d (n "serde") (r "^0.9.4") (d #t) (k 0)) (d (n "serde_derive") (r "^0.9") (d #t) (k 2)))) (h "05a5zjnmbh1y5nrb2cza161j5dml7am9lip6lm7qpsbp2s9wwdyg") (f (quote (("preserve_order" "linked-hash-map"))))))

(define-public crate-serde_json-0.9.6 (c (n "serde_json") (v "0.9.6") (d (list (d (n "dtoa") (r "^0.4") (d #t) (k 0)) (d (n "itoa") (r "^0.3") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.1.32") (d #t) (k 0)) (d (n "serde") (r "^0.9.4") (d #t) (k 0)) (d (n "serde_derive") (r "^0.9") (d #t) (k 2)))) (h "0fp1487d94zs3cxick7xipgn5nnxzx2xhfz991pvg0kk9vly95g0") (f (quote (("preserve_order" "linked-hash-map"))))))

(define-public crate-serde_json-0.9.7 (c (n "serde_json") (v "0.9.7") (d (list (d (n "dtoa") (r "^0.4") (d #t) (k 0)) (d (n "itoa") (r "^0.3") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.1.32") (d #t) (k 0)) (d (n "serde") (r "^0.9.4") (d #t) (k 0)) (d (n "serde_derive") (r "^0.9") (d #t) (k 2)))) (h "1a26yklhp1bv9w9x8gnwh6wpjvwb0xniflcgw19gryg6whq6vf9f") (f (quote (("preserve_order" "linked-hash-map")))) (y #t)))

(define-public crate-serde_json-0.9.8 (c (n "serde_json") (v "0.9.8") (d (list (d (n "dtoa") (r "^0.4") (d #t) (k 0)) (d (n "itoa") (r "^0.3") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.1.32") (d #t) (k 0)) (d (n "serde") (r "^0.9.4") (d #t) (k 0)) (d (n "serde_derive") (r "^0.9") (d #t) (k 2)))) (h "1a2plapkcxy9ip5r0ccfdy6zb86zish7kpvx7w1v3yblidpsq0b5") (f (quote (("preserve_order" "linked-hash-map"))))))

(define-public crate-serde_json-0.9.9 (c (n "serde_json") (v "0.9.9") (d (list (d (n "dtoa") (r "^0.4") (d #t) (k 0)) (d (n "itoa") (r "^0.3") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.1.32") (d #t) (k 0)) (d (n "serde") (r "^0.9.11") (d #t) (k 0)) (d (n "serde_derive") (r "^0.9") (d #t) (k 2)))) (h "0kl2h6snwinvg3wgfzxqxxc79y8fzp0l2b3sj23gpf1falwm9i6v") (f (quote (("preserve_order" "linked-hash-map"))))))

(define-public crate-serde_json-0.9.10 (c (n "serde_json") (v "0.9.10") (d (list (d (n "dtoa") (r "^0.4") (d #t) (k 0)) (d (n "itoa") (r "^0.3") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.1.32") (d #t) (k 0)) (d (n "serde") (r "^0.9.11") (d #t) (k 0)) (d (n "serde_derive") (r "^0.9") (d #t) (k 2)))) (h "188nbf56m7p6mnh3xd71rwqxd4g95lqh8gsl7mfy3lp7gd4cz2xd") (f (quote (("preserve_order" "linked-hash-map"))))))

(define-public crate-serde_json-1.0.0 (c (n "serde_json") (v "1.0.0") (d (list (d (n "compiletest_rs") (r "^0.2") (d #t) (k 2)) (d (n "dtoa") (r "^0.4") (d #t) (k 0)) (d (n "itoa") (r "^0.3") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.1.32") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)))) (h "0sllgpiixg1571dinasd6ga8wd9q1iahd090gsr298b9jj9yrcg9") (f (quote (("preserve_order" "linked-hash-map") ("default"))))))

(define-public crate-serde_json-1.0.1 (c (n "serde_json") (v "1.0.1") (d (list (d (n "compiletest_rs") (r "^0.2") (d #t) (k 2)) (d (n "dtoa") (r "^0.4") (d #t) (k 0)) (d (n "itoa") (r "^0.3") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.1.32") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)))) (h "1jzwb46sqds1nnwkbh8krc2lnzdyzpq61iyi6a6fvafhjdb12qhw") (f (quote (("preserve_order" "linked-hash-map") ("default"))))))

(define-public crate-serde_json-1.0.2 (c (n "serde_json") (v "1.0.2") (d (list (d (n "compiletest_rs") (r "^0.2") (d #t) (k 2)) (d (n "dtoa") (r "^0.4") (d #t) (k 0)) (d (n "itoa") (r "^0.3") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.1.32") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)))) (h "0ywslr0mxxgr9xahxwm7pc7a8mxxyrq56qf329r074ifamwlgc28") (f (quote (("preserve_order" "linked-hash-map") ("default"))))))

(define-public crate-serde_json-1.0.3 (c (n "serde_json") (v "1.0.3") (d (list (d (n "compiletest_rs") (r "^0.2") (d #t) (k 2)) (d (n "dtoa") (r "^0.4") (d #t) (k 0)) (d (n "itoa") (r "^0.3") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.1.32") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)))) (h "1b5pqrm8labrbxi6gqr5b1wdnh6k1x3lfqfk7jgc7ygr0r744hyj") (f (quote (("preserve_order" "linked-hash-map") ("default"))))))

(define-public crate-serde_json-1.0.4 (c (n "serde_json") (v "1.0.4") (d (list (d (n "compiletest_rs") (r "^0.2") (d #t) (k 2)) (d (n "dtoa") (r "^0.4") (d #t) (k 0)) (d (n "itoa") (r "^0.3") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.1.32") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)))) (h "0qmwsrp4mn6ag2wsr8sw439zpfjmbnwybabwfsdjaibp9bcw2a7f") (f (quote (("preserve_order" "linked-hash-map") ("default"))))))

(define-public crate-serde_json-1.0.5 (c (n "serde_json") (v "1.0.5") (d (list (d (n "compiletest_rs") (r "^0.2") (d #t) (k 2)) (d (n "dtoa") (r "^0.4") (d #t) (k 0)) (d (n "itoa") (r "^0.3") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.1.32") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)))) (h "0rzvagm05byzl06gw4j5p4xz5286n3a393jp9i4pxahd6b76f7mf") (f (quote (("preserve_order" "linked-hash-map") ("default"))))))

(define-public crate-serde_json-1.0.6 (c (n "serde_json") (v "1.0.6") (d (list (d (n "compiletest_rs") (r "^0.2") (d #t) (k 2)) (d (n "dtoa") (r "^0.4") (d #t) (k 0)) (d (n "itoa") (r "^0.3") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.1.32") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)))) (h "03mjr7bagcs3ip8x0j87qk82ivfhzzn335wi90606jlps536fn74") (f (quote (("preserve_order" "linked-hash-map") ("default"))))))

(define-public crate-serde_json-1.0.7 (c (n "serde_json") (v "1.0.7") (d (list (d (n "compiletest_rs") (r "^0.2") (d #t) (k 2)) (d (n "dtoa") (r "^0.4") (d #t) (k 0)) (d (n "itoa") (r "^0.3") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.1.32") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)))) (h "17zn3c6f48kbycivgc6jkxvgx3aahq4z4spckf8nhillr86fla7a") (f (quote (("preserve_order" "linked-hash-map") ("default"))))))

(define-public crate-serde_json-1.0.8 (c (n "serde_json") (v "1.0.8") (d (list (d (n "compiletest_rs") (r "^0.2") (d #t) (k 2)) (d (n "dtoa") (r "^0.4") (d #t) (k 0)) (d (n "itoa") (r "^0.3") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.1.32") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)))) (h "0ff8i628qairm0lfwy9b4zjgazjw4bhw46p0nznfw8mxnjsv1xbw") (f (quote (("preserve_order" "linked-hash-map") ("default"))))))

(define-public crate-serde_json-1.0.9 (c (n "serde_json") (v "1.0.9") (d (list (d (n "compiletest_rs") (r "^0.3") (d #t) (k 2)) (d (n "dtoa") (r "^0.4") (d #t) (k 0)) (d (n "itoa") (r "^0.3") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.1.32") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)))) (h "1jqbn6gh0fwk9wbln4nnpvqsqlfxrib9cwg8gx5lqfnnqxk75ny9") (f (quote (("preserve_order" "linked-hash-map") ("default"))))))

(define-public crate-serde_json-1.0.10 (c (n "serde_json") (v "1.0.10") (d (list (d (n "compiletest_rs") (r "^0.3") (d #t) (k 2)) (d (n "dtoa") (r "^0.4") (d #t) (k 0)) (d (n "itoa") (r "^0.3") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)))) (h "0fcbxd4rzhzvd4vhx43b6s6gw25lwflan1pk5gy45rxq8pc1wy2p") (f (quote (("preserve_order" "linked-hash-map") ("default"))))))

(define-public crate-serde_json-1.0.11 (c (n "serde_json") (v "1.0.11") (d (list (d (n "compiletest_rs") (r "^0.3") (d #t) (k 2)) (d (n "dtoa") (r "^0.4") (d #t) (k 0)) (d (n "itoa") (r "^0.3") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)))) (h "05zf8dk47my5gq29k615p870viycz3mkjpn8243qikzdbgbw9dps") (f (quote (("preserve_order" "linked-hash-map") ("default"))))))

(define-public crate-serde_json-1.0.12 (c (n "serde_json") (v "1.0.12") (d (list (d (n "compiletest_rs") (r "^0.3") (d #t) (k 2)) (d (n "dtoa") (r "^0.4") (d #t) (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)))) (h "1giixr04g8d87iriinbn4qh5wrfq1s55ijbncc1zlknhl4ln6m98") (f (quote (("preserve_order" "linked-hash-map") ("default"))))))

(define-public crate-serde_json-1.0.13 (c (n "serde_json") (v "1.0.13") (d (list (d (n "compiletest_rs") (r "^0.3") (d #t) (k 2)) (d (n "dtoa") (r "^0.4") (d #t) (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)))) (h "0x1y5f3m40addv297mwydsqzb8hhav2yw18mp4bg2gciv628al2w") (f (quote (("preserve_order" "linked-hash-map") ("default") ("arbitrary_precision"))))))

(define-public crate-serde_json-1.0.14 (c (n "serde_json") (v "1.0.14") (d (list (d (n "compiletest_rs") (r "^0.3") (d #t) (k 2)) (d (n "dtoa") (r "^0.4") (d #t) (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)))) (h "09xwxn56l86wlnb110w49f2z9jps7rq4sm27ydja1jk9p5viyvwg") (f (quote (("preserve_order" "linked-hash-map") ("default") ("arbitrary_precision"))))))

(define-public crate-serde_json-1.0.15 (c (n "serde_json") (v "1.0.15") (d (list (d (n "compiletest_rs") (r "^0.3") (d #t) (k 2)) (d (n "dtoa") (r "^0.4") (d #t) (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)))) (h "0xafw7ysszjgj2jq8g6a497m7nxkv7h8w0fb74vs2a3h72qwpwbv") (f (quote (("preserve_order" "linked-hash-map") ("default") ("arbitrary_precision"))))))

(define-public crate-serde_json-1.0.16 (c (n "serde_json") (v "1.0.16") (d (list (d (n "compiletest_rs") (r "^0.3") (d #t) (k 2)) (d (n "dtoa") (r "^0.4") (d #t) (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)))) (h "061izdwwyb8g2m2byvgcxrpkb5xzmhi5rn2b76gajmy6kl24wv4c") (f (quote (("preserve_order" "linked-hash-map") ("default") ("arbitrary_precision"))))))

(define-public crate-serde_json-1.0.17 (c (n "serde_json") (v "1.0.17") (d (list (d (n "compiletest_rs") (r "^0.3") (d #t) (k 2)) (d (n "dtoa") (r "^0.4") (d #t) (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)))) (h "1ccwrs79asvlci0fd843023hy1584kjc5lyy7p7pflbndra6vbgk") (f (quote (("preserve_order" "linked-hash-map") ("default") ("arbitrary_precision"))))))

(define-public crate-serde_json-1.0.18 (c (n "serde_json") (v "1.0.18") (d (list (d (n "compiletest_rs") (r "^0.3") (d #t) (k 2)) (d (n "dtoa") (r "^0.4") (d #t) (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.60") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)))) (h "1qxvs5385zb2cyxdp9da5b9y7av99hdgxshacchdgidb5xwjlf7f") (f (quote (("preserve_order" "linked-hash-map") ("default") ("arbitrary_precision"))))))

(define-public crate-serde_json-1.0.19 (c (n "serde_json") (v "1.0.19") (d (list (d (n "compiletest_rs") (r "^0.3") (d #t) (k 2)) (d (n "dtoa") (r "^0.4") (d #t) (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.60") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)))) (h "1xc08b32gkr7byzdp31hqy4y86fk5mwvqw98c0gfkpcjnr5y7blk") (f (quote (("preserve_order" "linked-hash-map") ("default") ("arbitrary_precision"))))))

(define-public crate-serde_json-1.0.20 (c (n "serde_json") (v "1.0.20") (d (list (d (n "compiletest_rs") (r "^0.3") (d #t) (k 2)) (d (n "dtoa") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.60") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)))) (h "0xf8b3jgmnwp2z9whj2r1xgxvw4fq1hdf9j0aa29kwsr576cr5zw") (f (quote (("preserve_order" "indexmap") ("default") ("arbitrary_precision"))))))

(define-public crate-serde_json-1.0.21 (c (n "serde_json") (v "1.0.21") (d (list (d (n "compiletest_rs") (r "^0.3") (d #t) (k 2)) (d (n "dtoa") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.60") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)))) (h "1rni4v2v75wp3yrr0nzrwpd2yww5zb72cdll6kmdf0kgfl660h7b") (f (quote (("preserve_order" "indexmap") ("default") ("arbitrary_precision"))))))

(define-public crate-serde_json-1.0.22 (c (n "serde_json") (v "1.0.22") (d (list (d (n "compiletest_rs") (r "^0.3") (d #t) (k 2)) (d (n "dtoa") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.60") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)))) (h "03irp9v14k5ljv5prpbfzybvrxnm0gzcb2pcmmw5icz9mdf07f44") (f (quote (("preserve_order" "indexmap") ("default") ("arbitrary_precision"))))))

(define-public crate-serde_json-1.0.23 (c (n "serde_json") (v "1.0.23") (d (list (d (n "compiletest_rs") (r "^0.3") (d #t) (k 2)) (d (n "dtoa") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.60") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)))) (h "1xvr72815z1hn8wvjhgcw4fgs9dd30irqhm3xzsj3vikkgki1992") (f (quote (("preserve_order" "indexmap") ("default") ("arbitrary_precision")))) (y #t)))

(define-public crate-serde_json-1.0.24 (c (n "serde_json") (v "1.0.24") (d (list (d (n "compiletest_rs") (r "^0.3") (d #t) (k 2)) (d (n "dtoa") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.60") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)))) (h "1qphkd0zsn8ljchx1qa51jrdvnwkvqs412imj32xcp4jgf691in3") (f (quote (("preserve_order" "indexmap") ("default") ("arbitrary_precision"))))))

(define-public crate-serde_json-1.0.25 (c (n "serde_json") (v "1.0.25") (d (list (d (n "compiletest_rs") (r "^0.3") (d #t) (k 2)) (d (n "dtoa") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.60") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)))) (h "0rz1s1aknw3yvfzk32r5r2i1rhyyzk9g4hg93mb6363n2brplngl") (f (quote (("preserve_order" "indexmap") ("default") ("arbitrary_precision"))))))

(define-public crate-serde_json-1.0.26 (c (n "serde_json") (v "1.0.26") (d (list (d (n "compiletest_rs") (r "^0.3") (d #t) (k 2)) (d (n "indexmap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "ryu") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.60") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)))) (h "1bj9vvf3darqlpkshpsp6qazsg5afzgybdwrz98p80vmwkyjrpa4") (f (quote (("preserve_order" "indexmap") ("default") ("arbitrary_precision"))))))

(define-public crate-serde_json-1.0.27 (c (n "serde_json") (v "1.0.27") (d (list (d (n "compiletest_rs") (r "^0.3") (d #t) (k 2)) (d (n "indexmap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "ryu") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.60") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)))) (h "074g4rgqr36n5afm8bj2f0gsa8yycqp3x480gw11cp8iqn80jyar") (f (quote (("preserve_order" "indexmap") ("default") ("arbitrary_precision"))))))

(define-public crate-serde_json-1.0.28 (c (n "serde_json") (v "1.0.28") (d (list (d (n "compiletest_rs") (r "^0.3") (d #t) (k 2)) (d (n "indexmap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4.3") (d #t) (k 0)) (d (n "ryu") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.60") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)))) (h "0zrvrbvfzvalv0dizz17zznid3c9q2lwg226sa2r4j13r55c63nk") (f (quote (("preserve_order" "indexmap") ("default") ("arbitrary_precision"))))))

(define-public crate-serde_json-1.0.29 (c (n "serde_json") (v "1.0.29") (d (list (d (n "compiletest_rs") (r "^0.3") (d #t) (k 2)) (d (n "indexmap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4.3") (d #t) (k 0)) (d (n "ryu") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.60") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)))) (h "1gnyad8kjwpjxdwh470p0by0ib52ajky72hs22s2mynjnbch2kdj") (f (quote (("raw_value") ("preserve_order" "indexmap") ("default") ("arbitrary_precision"))))))

(define-public crate-serde_json-1.0.30 (c (n "serde_json") (v "1.0.30") (d (list (d (n "compiletest_rs") (r "^0.3") (d #t) (k 2)) (d (n "indexmap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4.3") (d #t) (k 0)) (d (n "ryu") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.60") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)))) (h "1021isra9cfy52v0lnsjbib9wi9icmj3pa4spvdkwp6izsba4q3z") (f (quote (("raw_value") ("preserve_order" "indexmap") ("default") ("arbitrary_precision"))))))

(define-public crate-serde_json-1.0.31 (c (n "serde_json") (v "1.0.31") (d (list (d (n "compiletest_rs") (r "^0.3") (d #t) (k 2)) (d (n "indexmap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4.3") (d #t) (k 0)) (d (n "ryu") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.60") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)))) (h "06kv769hbi61nkwrh5z4bmshfx2aghaj3nypcqpj4823r3as6ixv") (f (quote (("raw_value") ("preserve_order" "indexmap") ("default") ("arbitrary_precision"))))))

(define-public crate-serde_json-1.0.32 (c (n "serde_json") (v "1.0.32") (d (list (d (n "compiletest_rs") (r "^0.3") (d #t) (k 2)) (d (n "indexmap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4.3") (d #t) (k 0)) (d (n "ryu") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.60") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)))) (h "1kiq598si8izqzlc07lblmm65sjbjssan34lqn0843axw1y4wd23") (f (quote (("raw_value") ("preserve_order" "indexmap") ("default") ("arbitrary_precision"))))))

(define-public crate-serde_json-1.0.33 (c (n "serde_json") (v "1.0.33") (d (list (d (n "compiletest_rs") (r "^0.3") (f (quote ("stable"))) (d #t) (k 2)) (d (n "indexmap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4.3") (d #t) (k 0)) (d (n "ryu") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.60") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)))) (h "04cqavghmbiv1rhf6fndsxab0cgbb33zfj78kr0xy7zdwdmwsz63") (f (quote (("raw_value") ("preserve_order" "indexmap") ("default") ("arbitrary_precision"))))))

(define-public crate-serde_json-1.0.34 (c (n "serde_json") (v "1.0.34") (d (list (d (n "compiletest_rs") (r "^0.3") (f (quote ("stable"))) (d #t) (k 2)) (d (n "indexmap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4.3") (d #t) (k 0)) (d (n "ryu") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.60") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)))) (h "0i852fk164qgqxvpj49h1jadlnj9vinpgx1i729dmrpy1hk41xdx") (f (quote (("raw_value") ("preserve_order" "indexmap") ("default") ("arbitrary_precision"))))))

(define-public crate-serde_json-1.0.35 (c (n "serde_json") (v "1.0.35") (d (list (d (n "compiletest_rs") (r "^0.3") (f (quote ("stable"))) (d #t) (k 2)) (d (n "indexmap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4.3") (d #t) (k 0)) (d (n "ryu") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.60") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)))) (h "1aiqkmcadn6h70fbzh1bbnspglj4swimv2qb7rcy8qq59myjgcfz") (f (quote (("raw_value") ("preserve_order" "indexmap") ("default") ("arbitrary_precision"))))))

(define-public crate-serde_json-1.0.36 (c (n "serde_json") (v "1.0.36") (d (list (d (n "compiletest_rs") (r "^0.3") (f (quote ("stable"))) (d #t) (k 2)) (d (n "indexmap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4.3") (d #t) (k 0)) (d (n "ryu") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.60") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)))) (h "1ixwmdkm4j2fp4s4dy1jjhal9rnmrcajlmjxpcdxzp6nazcphhsp") (f (quote (("raw_value") ("preserve_order" "indexmap") ("default") ("arbitrary_precision"))))))

(define-public crate-serde_json-1.0.37 (c (n "serde_json") (v "1.0.37") (d (list (d (n "compiletest_rs") (r "^0.3") (f (quote ("stable"))) (d #t) (k 2)) (d (n "indexmap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4.3") (d #t) (k 0)) (d (n "ryu") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.60") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)))) (h "03ljy523bdm2syma9893zf42k000rgqp0mn1w79mf7i1w7xsk42b") (f (quote (("raw_value") ("preserve_order" "indexmap") ("default") ("arbitrary_precision"))))))

(define-public crate-serde_json-1.0.38 (c (n "serde_json") (v "1.0.38") (d (list (d (n "compiletest_rs") (r "^0.3") (f (quote ("stable"))) (d #t) (k 2)) (d (n "indexmap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4.3") (d #t) (k 0)) (d (n "ryu") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.60") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)))) (h "1j8kkvgfskfjjh8wmajjais0p72984v422mgzkia0yj6wx4fip17") (f (quote (("unbounded_depth") ("raw_value") ("preserve_order" "indexmap") ("default") ("arbitrary_precision"))))))

(define-public crate-serde_json-1.0.39 (c (n "serde_json") (v "1.0.39") (d (list (d (n "automod") (r "^0.1") (d #t) (k 2)) (d (n "compiletest_rs") (r "^0.3") (f (quote ("stable"))) (d #t) (k 2)) (d (n "indexmap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4.3") (d #t) (k 0)) (d (n "ryu") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.60") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)))) (h "03fl9l680gij0hrsr2csfm8nm858igvfy05czbdkzm54siqsl8ss") (f (quote (("unbounded_depth") ("raw_value") ("preserve_order" "indexmap") ("default") ("arbitrary_precision"))))))

(define-public crate-serde_json-1.0.40 (c (n "serde_json") (v "1.0.40") (d (list (d (n "automod") (r "^0.1") (d #t) (k 2)) (d (n "indexmap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4.3") (d #t) (k 0)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "select-rustc") (r "^0.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.60") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)))) (h "010pa89zx07aqx1cwgw2a603wcp3q5n2iy0k71ppqbr8kwi4j705") (f (quote (("unbounded_depth") ("raw_value") ("preserve_order" "indexmap") ("default") ("arbitrary_precision"))))))

(define-public crate-serde_json-1.0.41 (c (n "serde_json") (v "1.0.41") (d (list (d (n "automod") (r "^0.1") (d #t) (k 2)) (d (n "indexmap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4.3") (d #t) (k 0)) (d (n "rustversion") (r "^0.1") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.60") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)))) (h "1hipk84x40454mf599752mi7l08wb8qakz8vd6d3zp57d0mfnwig") (f (quote (("unbounded_depth") ("raw_value") ("preserve_order" "indexmap") ("default") ("arbitrary_precision"))))))

(define-public crate-serde_json-1.0.42 (c (n "serde_json") (v "1.0.42") (d (list (d (n "automod") (r "^0.1") (d #t) (k 2)) (d (n "indexmap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4.3") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.60") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)))) (h "0hq0x0x0lbjcvfnml2s7zk7s9lca50gkqz5bj8n7w1hzpkf52cqs") (f (quote (("unbounded_depth") ("raw_value") ("preserve_order" "indexmap") ("default") ("arbitrary_precision"))))))

(define-public crate-serde_json-1.0.43 (c (n "serde_json") (v "1.0.43") (d (list (d (n "automod") (r "^0.1") (d #t) (k 2)) (d (n "indexmap") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4.3") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.60") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)))) (h "0yfhqzrszfw4vdkyimpxlv8y7xlxwpnhvf5b6bm36rkd7nglh1kl") (f (quote (("unbounded_depth") ("raw_value") ("preserve_order" "indexmap") ("default") ("arbitrary_precision"))))))

(define-public crate-serde_json-1.0.44 (c (n "serde_json") (v "1.0.44") (d (list (d (n "automod") (r "^0.1") (d #t) (k 2)) (d (n "indexmap") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4.3") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.60") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)))) (h "1mysl675nqhzzkbcrqy4x63cbbsrrx3gcc7k8ydx1gajrkh7bia8") (f (quote (("unbounded_depth") ("raw_value") ("preserve_order" "indexmap") ("default") ("arbitrary_precision"))))))

(define-public crate-serde_json-1.0.45 (c (n "serde_json") (v "1.0.45") (d (list (d (n "automod") (r "^0.1") (d #t) (k 2)) (d (n "indexmap") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4.3") (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.60") (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.19") (f (quote ("diff"))) (d #t) (k 2)))) (h "0aqrj5f1adjfv19hki2kxx8f7ayzy8i8l4hv9haimi6n2mgz3f7a") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc"))))))

(define-public crate-serde_json-1.0.46 (c (n "serde_json") (v "1.0.46") (d (list (d (n "automod") (r "^0.1") (d #t) (k 2)) (d (n "indexmap") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4.3") (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.60") (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.19") (f (quote ("diff"))) (d #t) (k 2)))) (h "0lqr4ak2pkkmq87k11d8zzb6zpsrz0fwycm6vh0qlq4809zivc11") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc"))))))

(define-public crate-serde_json-1.0.47 (c (n "serde_json") (v "1.0.47") (d (list (d (n "automod") (r "^0.1") (d #t) (k 2)) (d (n "indexmap") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4.3") (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.100") (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.19") (f (quote ("diff"))) (d #t) (k 2)))) (h "145z9ilww45kc6wjrks287rksand7wbd8bykmxafh2qynsaki48m") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc"))))))

(define-public crate-serde_json-1.0.48 (c (n "serde_json") (v "1.0.48") (d (list (d (n "automod") (r "^0.1") (d #t) (k 2)) (d (n "indexmap") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4.3") (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.100") (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.19") (f (quote ("diff"))) (d #t) (k 2)))) (h "09cwggp707hf0qswzrg00nffr09prx99f6qlajqnqbacbpksswck") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc"))))))

(define-public crate-serde_json-1.0.49 (c (n "serde_json") (v "1.0.49") (d (list (d (n "automod") (r "^0.1") (d #t) (k 2)) (d (n "indexmap") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4.3") (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.100") (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.19") (f (quote ("diff"))) (d #t) (k 2)))) (h "0mdcvdg2igqifsw91r3bpjmzxhnckln4vnxk4hbdcvw6j9m4l102") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc"))))))

(define-public crate-serde_json-1.0.50 (c (n "serde_json") (v "1.0.50") (d (list (d (n "automod") (r "^0.1") (d #t) (k 2)) (d (n "indexmap") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4.3") (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.100") (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.19") (f (quote ("diff"))) (d #t) (k 2)))) (h "0rs8rsk59kgkgsrw8hyyjrlhas9k1by2jwxxqcz3c2bq2qna39vq") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc"))))))

(define-public crate-serde_json-1.0.51 (c (n "serde_json") (v "1.0.51") (d (list (d (n "automod") (r "^0.1") (d #t) (k 2)) (d (n "indexmap") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4.3") (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.100") (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.19") (f (quote ("diff"))) (d #t) (k 2)))) (h "1acd43sc1g9w4hzfa2kfbahj44r61fxqh14s3qsnhcv2w9zba1ys") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc"))))))

(define-public crate-serde_json-1.0.52 (c (n "serde_json") (v "1.0.52") (d (list (d (n "automod") (r "^0.1") (d #t) (k 2)) (d (n "indexmap") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4.3") (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.100") (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.19") (f (quote ("diff"))) (d #t) (k 2)))) (h "1pcyg6xhca5giyh9hnxph201bly1vrgh4ygbk8kklyjvs274r2d7") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc"))))))

(define-public crate-serde_json-1.0.53 (c (n "serde_json") (v "1.0.53") (d (list (d (n "automod") (r "^0.1") (d #t) (k 2)) (d (n "indexmap") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4.3") (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.100") (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.19") (f (quote ("diff"))) (d #t) (k 2)))) (h "18nfckwa4zqaz27l7di0jwgw5bf6a3wjhx8snfli34hqbgklhfcr") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc"))))))

(define-public crate-serde_json-1.0.54 (c (n "serde_json") (v "1.0.54") (d (list (d (n "automod") (r "^0.1") (d #t) (k 2)) (d (n "indexmap") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4.3") (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.100") (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.19") (f (quote ("diff"))) (d #t) (k 2)))) (h "0pcn5v175yl7x0rvgam08bmf1f5q93kyk232khr2kg3x8bvc3r6g") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc"))))))

(define-public crate-serde_json-1.0.55 (c (n "serde_json") (v "1.0.55") (d (list (d (n "automod") (r "^0.1") (d #t) (k 2)) (d (n "indexmap") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4.3") (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.100") (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.19") (f (quote ("diff"))) (d #t) (k 2)))) (h "09l27n06a1k962hjdpy1c0f6fpyv3zb3j6iqfcz7mh4vfdz5sb7c") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc"))))))

(define-public crate-serde_json-1.0.56 (c (n "serde_json") (v "1.0.56") (d (list (d (n "automod") (r "^0.1") (d #t) (k 2)) (d (n "indexmap") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4.3") (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.100") (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.19") (f (quote ("diff"))) (d #t) (k 2)))) (h "1hra2v0my42jgrl99f5g3zggsd6gk54a1cpyx2syipaqlmwyhcrl") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc"))))))

(define-public crate-serde_json-1.0.57 (c (n "serde_json") (v "1.0.57") (d (list (d (n "automod") (r "^0.1") (d #t) (k 2)) (d (n "indexmap") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4.3") (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.100") (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.19") (f (quote ("diff"))) (d #t) (k 2)))) (h "0p371b4618w5fb7isji9xmjhsaxjslgxa2gv8lkyq4imn6ysqkhn") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc"))))))

(define-public crate-serde_json-1.0.58 (c (n "serde_json") (v "1.0.58") (d (list (d (n "automod") (r "^1.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4.3") (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.100") (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.19") (f (quote ("diff"))) (d #t) (k 2)))) (h "1m1bm0zx73a7iskxs4rdx40cs16bvmzfjvflm7p208na0y8ylc52") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc"))))))

(define-public crate-serde_json-1.0.59 (c (n "serde_json") (v "1.0.59") (d (list (d (n "automod") (r "^1.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4.3") (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.100") (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.19") (f (quote ("diff"))) (d #t) (k 2)))) (h "15bblpgzbr163sxfxx0h8kacchmiiskypfbah5zmxim1zzdhgb6w") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc"))))))

(define-public crate-serde_json-1.0.60 (c (n "serde_json") (v "1.0.60") (d (list (d (n "automod") (r "^1.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4.3") (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.100") (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.19") (f (quote ("diff"))) (d #t) (k 2)))) (h "0yapc7xxk8dx12691yj0l13008rgvknmc6krvk8jwj7y4x6yh00m") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc"))))))

(define-public crate-serde_json-1.0.61 (c (n "serde_json") (v "1.0.61") (d (list (d (n "automod") (r "^1.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4.3") (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.100") (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.19") (f (quote ("diff"))) (d #t) (k 2)))) (h "0nijvxvgcncvd1wbn73zx7q14bdxah0gf2789qd8kdjpa1cv5kjg") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc"))))))

(define-public crate-serde_json-1.0.62 (c (n "serde_json") (v "1.0.62") (d (list (d (n "automod") (r "^1.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4.3") (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.100") (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.19") (f (quote ("diff"))) (d #t) (k 2)))) (h "11hlwc4glh244sk6ncnvj3n01pi538iv2qygyxyfllj5g59n277a") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc"))))))

(define-public crate-serde_json-1.0.63 (c (n "serde_json") (v "1.0.63") (d (list (d (n "automod") (r "^1.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4.3") (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.100") (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.19") (f (quote ("diff"))) (d #t) (k 2)))) (h "1xhbc83n1pwiw02ddqf98gwynihscg69h2nfq0wajjvsfjwmsls3") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc"))))))

(define-public crate-serde_json-1.0.64 (c (n "serde_json") (v "1.0.64") (d (list (d (n "automod") (r "^1.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4.3") (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.100") (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.19") (f (quote ("diff"))) (d #t) (k 2)))) (h "0y9gk3yikncrc0zajmwc0pidr7zfwafawb4gidf6mqyskzf9g7kr") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc"))))))

(define-public crate-serde_json-1.0.65 (c (n "serde_json") (v "1.0.65") (d (list (d (n "automod") (r "^1.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4.3") (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.100") (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.19") (f (quote ("diff"))) (d #t) (k 2)))) (h "0abshb6daj7rjvs10hhs2ck46i448z46r7913566rd2088gfki98") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc"))))))

(define-public crate-serde_json-1.0.66 (c (n "serde_json") (v "1.0.66") (d (list (d (n "automod") (r "^1.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4.3") (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.100") (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.19") (f (quote ("diff"))) (d #t) (k 2)))) (h "09r1ld450g6hbx5xs2j7bcp40ibawayhx1wxnnad0am137d10srk") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc"))))))

(define-public crate-serde_json-1.0.67 (c (n "serde_json") (v "1.0.67") (d (list (d (n "automod") (r "^1.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4.3") (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.100") (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.19") (f (quote ("diff"))) (d #t) (k 2)))) (h "0l69qli7apsk2x5sm54lclk9v8ih9mp5ywjxpkl0qg3wqa8f7yd7") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc"))))))

(define-public crate-serde_json-1.0.68 (c (n "serde_json") (v "1.0.68") (d (list (d (n "automod") (r "^1.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4.3") (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.100") (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.19") (f (quote ("diff"))) (d #t) (k 2)))) (h "1n2jg9cf14lrxasj63rlrwxlw5v79m851gycw6zy20jnjx9hhs8g") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc"))))))

(define-public crate-serde_json-1.0.69 (c (n "serde_json") (v "1.0.69") (d (list (d (n "automod") (r "^1.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4.3") (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.100") (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.49") (f (quote ("diff"))) (d #t) (k 2)))) (h "1y22sfi9z3bkf9j6qnd036cqgraq0kr94ss7sghcfa8i8d78crp4") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc")))) (r "1.31")))

(define-public crate-serde_json-1.0.70 (c (n "serde_json") (v "1.0.70") (d (list (d (n "automod") (r "^1.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4.3") (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.100") (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.49") (f (quote ("diff"))) (d #t) (k 2)))) (h "1wsl1d09d3cblp36b6gm2kgiskcbarscb86hb0da1lbcmjaw8xz2") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc")))) (r "1.31")))

(define-public crate-serde_json-1.0.71 (c (n "serde_json") (v "1.0.71") (d (list (d (n "automod") (r "^1.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4.3") (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.100") (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.49") (f (quote ("diff"))) (d #t) (k 2)))) (h "06gv3gb3mr9jxdy62dxll5ysaq7f4jbh0j8a0hjaq4a0lrkg8fq6") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc")))) (r "1.31")))

(define-public crate-serde_json-1.0.72 (c (n "serde_json") (v "1.0.72") (d (list (d (n "automod") (r "^1.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^0.4.3") (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.100") (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.49") (f (quote ("diff"))) (d #t) (k 2)))) (h "09xmy9iycl8r8bkrgbbxbwbjwj5dii3bbhk812wnzyidgy1s1zyh") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc")))) (r "1.31")))

(define-public crate-serde_json-1.0.73 (c (n "serde_json") (v "1.0.73") (d (list (d (n "automod") (r "^1.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.100") (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.49") (f (quote ("diff"))) (d #t) (k 2)))) (h "1xbwmzc5j6r1nz62a20w6l9bkwbhzd11vwbdqmzbqcv5pi207gdw") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc")))) (r "1.36")))

(define-public crate-serde_json-1.0.74 (c (n "serde_json") (v "1.0.74") (d (list (d (n "automod") (r "^1.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.100") (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.49") (f (quote ("diff"))) (d #t) (k 2)))) (h "0hiixjnrnrvvpyh58av73ds924zgzi4wl0mv8p9nan0w0v6vjazf") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc")))) (r "1.36")))

(define-public crate-serde_json-1.0.75 (c (n "serde_json") (v "1.0.75") (d (list (d (n "automod") (r "^1.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.100") (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.49") (f (quote ("diff"))) (d #t) (k 2)))) (h "0ydgq6npsznqkjh0wzmg5nszwrfx683lyasb9dyhdh6591dw0nf0") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc")))) (r "1.36")))

(define-public crate-serde_json-1.0.76 (c (n "serde_json") (v "1.0.76") (d (list (d (n "automod") (r "^1.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.100") (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.49") (f (quote ("diff"))) (d #t) (k 2)))) (h "16haaqn8b86acz458x2haylv1ygylrymykh7vm372gfk3282dppd") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc")))) (r "1.36")))

(define-public crate-serde_json-1.0.77 (c (n "serde_json") (v "1.0.77") (d (list (d (n "automod") (r "^1.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.100") (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.49") (f (quote ("diff"))) (d #t) (k 2)))) (h "0gnaiihbpcl7cb56b0zhkh3h30smrakq9n8gpmk532ja0j4cl6v5") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc")))) (r "1.36")))

(define-public crate-serde_json-1.0.78 (c (n "serde_json") (v "1.0.78") (d (list (d (n "automod") (r "^1.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0") (d #t) (k 2)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.100") (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.49") (f (quote ("diff"))) (d #t) (k 2)))) (h "11c0fm7wb2wydlxmq9ziqfjwxl9j1cl0jxq16az49z8fryj1ng6j") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc")))) (r "1.36")))

(define-public crate-serde_json-1.0.79 (c (n "serde_json") (v "1.0.79") (d (list (d (n "automod") (r "^1.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0") (d #t) (k 2)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.100") (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.49") (f (quote ("diff"))) (d #t) (k 2)))) (h "158xd1swdvw6y59bx4avb8vdpj727n54r77xw5f7c15kqfjrz3cf") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc")))) (r "1.36")))

(define-public crate-serde_json-1.0.80 (c (n "serde_json") (v "1.0.80") (d (list (d (n "automod") (r "^1.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0") (d #t) (k 2)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.100") (k 0)) (d (n "serde") (r "^1.0.100") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.49") (f (quote ("diff"))) (d #t) (k 2)))) (h "0i4r7lb2qi6rl91s4xa1p69w447gsvhyp2dcdisc1xqmy264jwpr") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc")))) (r "1.36")))

(define-public crate-serde_json-1.0.81 (c (n "serde_json") (v "1.0.81") (d (list (d (n "automod") (r "^1.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.5.2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0") (d #t) (k 2)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.100") (k 0)) (d (n "serde") (r "^1.0.100") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.49") (f (quote ("diff"))) (d #t) (k 2)))) (h "0p7100hlvw4azgcalzf1vgray5cg6b6saqfwb32h7v8s5ary4z4v") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap" "std") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc")))) (r "1.36")))

(define-public crate-serde_json-1.0.82 (c (n "serde_json") (v "1.0.82") (d (list (d (n "automod") (r "^1.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.5.2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0") (d #t) (k 2)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.100") (k 0)) (d (n "serde") (r "^1.0.100") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.49") (f (quote ("diff"))) (d #t) (k 2)))) (h "19vz3xw0yfaz8al3fskwpngjxr15whv9lnrcanc10zc0rpyw3hl2") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap" "std") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc")))) (r "1.36")))

(define-public crate-serde_json-1.0.83 (c (n "serde_json") (v "1.0.83") (d (list (d (n "automod") (r "^1.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.5.2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0") (d #t) (k 2)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.100") (k 0)) (d (n "serde") (r "^1.0.100") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.49") (f (quote ("diff"))) (d #t) (k 2)))) (h "19ymnc0rvm7pacy22dq99ngxhnpyxg7bv7gj3srpb7i7r3ih9p9q") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap" "std") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc")))) (r "1.36")))

(define-public crate-serde_json-1.0.84 (c (n "serde_json") (v "1.0.84") (d (list (d (n "automod") (r "^1.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.5.2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0") (d #t) (k 2)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.100") (k 0)) (d (n "serde") (r "^1.0.100") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.49") (f (quote ("diff"))) (d #t) (k 2)))) (h "0pcgyia2hh7s2h332jldxxn2jwwld91wgydx328a4jgdklknpy6l") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap" "std") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc")))) (r "1.36")))

(define-public crate-serde_json-1.0.85 (c (n "serde_json") (v "1.0.85") (d (list (d (n "automod") (r "^1.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.5.2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0") (d #t) (k 2)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.100") (k 0)) (d (n "serde") (r "^1.0.100") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.49") (f (quote ("diff"))) (d #t) (k 2)))) (h "0i2akpn5js5jv0nm5vwrwk3xsm40pbdi82kda3h5r7ggmbijhnp5") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap" "std") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc")))) (r "1.36")))

(define-public crate-serde_json-1.0.86 (c (n "serde_json") (v "1.0.86") (d (list (d (n "automod") (r "^1.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.5.2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0") (d #t) (k 2)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.100") (k 0)) (d (n "serde") (r "^1.0.100") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.49") (f (quote ("diff"))) (d #t) (k 2)))) (h "0x7hjv027bkxfm23a9xmcz6h4rr7hak96dbsxh4wvwd6511fmzj1") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap" "std") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc")))) (r "1.36")))

(define-public crate-serde_json-1.0.87 (c (n "serde_json") (v "1.0.87") (d (list (d (n "automod") (r "^1.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.5.2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0") (d #t) (k 2)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.100") (k 0)) (d (n "serde") (r "^1.0.100") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.49") (f (quote ("diff"))) (d #t) (k 2)))) (h "0ibxrq43axvspv350wvx7w05l4s7b1gvaa0dysf6pmshn6vpgrvc") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap" "std") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc")))) (r "1.36")))

(define-public crate-serde_json-1.0.88 (c (n "serde_json") (v "1.0.88") (d (list (d (n "automod") (r "^1.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.5.2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0") (d #t) (k 2)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.100") (k 0)) (d (n "serde") (r "^1.0.100") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.49") (f (quote ("diff"))) (d #t) (k 2)))) (h "1mwb1rjqwnlzm3fs1bk7jy9kx0w6fmlzp1wn9lcfhqlj600ki2wf") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap" "std") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc")))) (r "1.36")))

(define-public crate-serde_json-1.0.89 (c (n "serde_json") (v "1.0.89") (d (list (d (n "automod") (r "^1.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.5.2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0") (d #t) (k 2)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.100") (k 0)) (d (n "serde") (r "^1.0.100") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.49") (f (quote ("diff"))) (d #t) (k 2)))) (h "1ny3izh9g9bfclqkdvgk093r7396lx0vnb8nrzwd6bjwflng43q2") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap" "std") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc")))) (r "1.36")))

(define-public crate-serde_json-1.0.90 (c (n "serde_json") (v "1.0.90") (d (list (d (n "automod") (r "^1.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.5.2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0") (d #t) (k 2)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.100") (k 0)) (d (n "serde") (r "^1.0.100") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.49") (f (quote ("diff"))) (d #t) (k 2)))) (h "1brzra052pxws8jr7k8nh4a0v9r0bbdvaf7cmdrgws49a85wqy47") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap" "std") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc")))) (r "1.36")))

(define-public crate-serde_json-1.0.91 (c (n "serde_json") (v "1.0.91") (d (list (d (n "automod") (r "^1.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.5.2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0") (d #t) (k 2)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.100") (k 0)) (d (n "serde") (r "^1.0.100") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.49") (f (quote ("diff"))) (d #t) (k 2)))) (h "10v8vb4959ayycw1zmqvxxi758djqkskchj6qal0fjbi6daj6z47") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap" "std") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc")))) (r "1.36")))

(define-public crate-serde_json-1.0.92 (c (n "serde_json") (v "1.0.92") (d (list (d (n "automod") (r "^1.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.5.2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "indoc") (r "^2.0") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0") (d #t) (k 2)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.100") (k 0)) (d (n "serde") (r "^1.0.100") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.49") (f (quote ("diff"))) (d #t) (k 2)))) (h "0sl95s1y54xrxxkb2vrg4g98818w2cnc5d4qm9l95mfbq46syd3l") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap" "std") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc")))) (r "1.36")))

(define-public crate-serde_json-1.0.93 (c (n "serde_json") (v "1.0.93") (d (list (d (n "automod") (r "^1.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.5.2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "indoc") (r "^2.0") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0") (d #t) (k 2)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.100") (k 0)) (d (n "serde") (r "^1.0.100") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.49") (f (quote ("diff"))) (d #t) (k 2)))) (h "0xmwq2838lvc50g849k8qsrwvj7nfaaw5wns0x8mp24ikjv0dm6a") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap" "std") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc")))) (r "1.36")))

(define-public crate-serde_json-1.0.94 (c (n "serde_json") (v "1.0.94") (d (list (d (n "automod") (r "^1.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.5.2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "indoc") (r "^2.0") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0") (d #t) (k 2)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.100") (k 0)) (d (n "serde") (r "^1.0.100") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.49") (f (quote ("diff"))) (d #t) (k 2)))) (h "1sh4bmv8964355080d4lzjwd2kazbvyz0cdbqq4kmafqr5ckllqw") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap" "std") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc")))) (r "1.36")))

(define-public crate-serde_json-1.0.95 (c (n "serde_json") (v "1.0.95") (d (list (d (n "automod") (r "^1.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.5.2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "indoc") (r "^2.0") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0") (d #t) (k 2)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.100") (k 0)) (d (n "serde") (r "^1.0.100") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.49") (f (quote ("diff"))) (d #t) (k 2)))) (h "0i273701q76j01rkcl962ky51n84h1y8f0dpfxvsl0n8galyq8fp") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap" "std") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc")))) (r "1.36")))

(define-public crate-serde_json-1.0.96 (c (n "serde_json") (v "1.0.96") (d (list (d (n "automod") (r "^1.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.5.2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "indoc") (r "^2.0") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0") (d #t) (k 2)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.100") (k 0)) (d (n "serde") (r "^1.0.100") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.49") (f (quote ("diff"))) (d #t) (k 2)))) (h "1waj3qwpa610vmksnzcmkll6vaw7nf7v3ckj4v0wlfs0a153jz85") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap" "std") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc")))) (r "1.36")))

(define-public crate-serde_json-1.0.97 (c (n "serde_json") (v "1.0.97") (d (list (d (n "automod") (r "^1.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.5.2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "indoc") (r "^2.0") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0") (d #t) (k 2)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.100") (k 0)) (d (n "serde") (r "^1.0.100") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.49") (f (quote ("diff"))) (d #t) (k 2)))) (h "0al48338iijhhywq4163q7djr13hw4i706cr3j1dbjia2j9vzwxx") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap" "std") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc")))) (r "1.36")))

(define-public crate-serde_json-1.0.98 (c (n "serde_json") (v "1.0.98") (d (list (d (n "automod") (r "^1.0") (d #t) (k 2)) (d (n "indexmap") (r "^2") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^2.0") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0") (d #t) (k 2)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.100") (k 0)) (d (n "serde") (r "^1.0.100") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.49") (f (quote ("diff"))) (d #t) (k 2)))) (h "1nj9210gl8gblpm79qzvvwxf45q7mcrhpxsgwap742845jkp1cd2") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap" "std") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc")))) (r "1.36")))

(define-public crate-serde_json-1.0.99 (c (n "serde_json") (v "1.0.99") (d (list (d (n "automod") (r "^1.0") (d #t) (k 2)) (d (n "indexmap") (r "^2") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^2.0") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0") (d #t) (k 2)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.100") (k 0)) (d (n "serde") (r "^1.0.100") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.49") (f (quote ("diff"))) (d #t) (k 2)))) (h "1qzal5a1wlfw587xqfwngly0nhrkzqi7d1rva27hp820q9qnh9j6") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap" "std") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc")))) (r "1.36")))

(define-public crate-serde_json-1.0.100 (c (n "serde_json") (v "1.0.100") (d (list (d (n "automod") (r "^1.0.11") (d #t) (k 2)) (d (n "indexmap") (r "^2") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^2.0.2") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0.18") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.13") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.166") (k 0)) (d (n "serde") (r "^1.0.166") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.166") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1.8") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.81") (f (quote ("diff"))) (d #t) (k 2)))) (h "0p0qnmhdkqd676m8xbh0lqlphlgqbgmwkgdxg15lrap7kgl187hg") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap" "std") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc")))) (r "1.36")))

(define-public crate-serde_json-1.0.101 (c (n "serde_json") (v "1.0.101") (d (list (d (n "automod") (r "^1.0.11") (d #t) (k 2)) (d (n "indexmap") (r "^2") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^2.0.2") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0.18") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.13") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.166") (k 0)) (d (n "serde") (r "^1.0.166") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.166") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1.8") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.81") (f (quote ("diff"))) (d #t) (k 2)))) (h "0qpn6iy6xlf42fiyzv8qhbwf0zm1s9j10fvlfpz4ijmfzfly334y") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap" "std") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc")))) (r "1.56")))

(define-public crate-serde_json-1.0.102 (c (n "serde_json") (v "1.0.102") (d (list (d (n "automod") (r "^1.0.11") (d #t) (k 2)) (d (n "indexmap") (r "^2") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^2.0.2") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0.18") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.13") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.166") (k 0)) (d (n "serde") (r "^1.0.166") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.166") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1.8") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.81") (f (quote ("diff"))) (d #t) (k 2)))) (h "1vfzj76zdn8yh5l08yzr6lf95whic3vrlkh6nq4266s8bncjl1mm") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap" "std") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc")))) (r "1.56")))

(define-public crate-serde_json-1.0.103 (c (n "serde_json") (v "1.0.103") (d (list (d (n "automod") (r "^1.0.11") (d #t) (k 2)) (d (n "indexmap") (r "^2") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^2.0.2") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0.18") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.13") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.166") (k 0)) (d (n "serde") (r "^1.0.166") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.166") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1.8") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.81") (f (quote ("diff"))) (d #t) (k 2)))) (h "06q3yhhwlr5d2bcb0x5hxjgvgy6pxmla56c4zq2483a5d4j42fyh") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap" "std") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc")))) (r "1.56")))

(define-public crate-serde_json-1.0.104 (c (n "serde_json") (v "1.0.104") (d (list (d (n "automod") (r "^1.0.11") (d #t) (k 2)) (d (n "indexmap") (r "^2") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^2.0.2") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0.18") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.13") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.166") (k 0)) (d (n "serde") (r "^1.0.166") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.166") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1.8") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.81") (f (quote ("diff"))) (d #t) (k 2)))) (h "0v4pdqhgi29w4dgagpv5xn5i1ziji1x84c9af9dsr3h7y72ncq07") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap" "std") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc")))) (r "1.56")))

(define-public crate-serde_json-1.0.105 (c (n "serde_json") (v "1.0.105") (d (list (d (n "automod") (r "^1.0.11") (d #t) (k 2)) (d (n "indexmap") (r "^2") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^2.0.2") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0.18") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.13") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.166") (k 0)) (d (n "serde") (r "^1.0.166") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.166") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1.8") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.81") (f (quote ("diff"))) (d #t) (k 2)))) (h "0q73miix7rmja8vss57s42dm7a2xpngyx7gcpinksmi7mkhm2cb9") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap" "std") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc")))) (r "1.56")))

(define-public crate-serde_json-1.0.106 (c (n "serde_json") (v "1.0.106") (d (list (d (n "automod") (r "^1.0.11") (d #t) (k 2)) (d (n "indexmap") (r "^2") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^2.0.2") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0.18") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.13") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.166") (k 0)) (d (n "serde") (r "^1.0.166") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.166") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1.8") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.81") (f (quote ("diff"))) (d #t) (k 2)))) (h "1hj22441vvws8v7kfdw1l7ggd22bm1ix0zdiyshgf2yqkrhnmiic") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap" "std") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc")))) (r "1.56")))

(define-public crate-serde_json-1.0.107 (c (n "serde_json") (v "1.0.107") (d (list (d (n "automod") (r "^1.0.11") (d #t) (k 2)) (d (n "indexmap") (r "^2") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^2.0.2") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0.18") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.13") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.166") (k 0)) (d (n "serde") (r "^1.0.166") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.166") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1.8") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.81") (f (quote ("diff"))) (d #t) (k 2)))) (h "0r8cyb8nh3afb15yfscp1h8sdjfv6pnnwg14kcp8igfqwgk0qhkb") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap" "std") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc")))) (r "1.56")))

(define-public crate-serde_json-1.0.108 (c (n "serde_json") (v "1.0.108") (d (list (d (n "automod") (r "^1.0.11") (d #t) (k 2)) (d (n "indexmap") (r "^2") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^2.0.2") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0.18") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.13") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.166") (k 0)) (d (n "serde") (r "^1.0.166") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.166") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1.8") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.81") (f (quote ("diff"))) (d #t) (k 2)))) (h "0ssj59s7lpzqh1m50kfzlnrip0p0jg9lmhn4098i33a0mhz7w71x") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap" "std") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc")))) (r "1.56")))

(define-public crate-serde_json-1.0.109 (c (n "serde_json") (v "1.0.109") (d (list (d (n "automod") (r "^1.0.11") (d #t) (k 2)) (d (n "indexmap") (r "^2") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^2.0.2") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0.18") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.13") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.166") (k 0)) (d (n "serde") (r "^1.0.166") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.166") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1.8") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.81") (f (quote ("diff"))) (d #t) (k 2)))) (h "1sdrsz5sldavrq55xmxnvy5zsshd6dly5k2kwfidfsjh6g2m41nb") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap" "std") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc")))) (r "1.56")))

(define-public crate-serde_json-1.0.110 (c (n "serde_json") (v "1.0.110") (d (list (d (n "automod") (r "^1.0.11") (d #t) (k 2)) (d (n "indexmap") (r "^2") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^2.0.2") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0.18") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.13") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.194") (k 0)) (d (n "serde") (r "^1.0.194") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.166") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1.8") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.81") (f (quote ("diff"))) (d #t) (k 2)))) (h "0mrjhgqrzl0gc4lnqp4d2lcs5vrfbhv0r3k1pg49knms6199ggbg") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap" "std") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc")))) (r "1.56")))

(define-public crate-serde_json-1.0.111 (c (n "serde_json") (v "1.0.111") (d (list (d (n "automod") (r "^1.0.11") (d #t) (k 2)) (d (n "indexmap") (r "^2") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^2.0.2") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0.18") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.13") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.194") (k 0)) (d (n "serde") (r "^1.0.194") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.166") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1.8") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.81") (f (quote ("diff"))) (d #t) (k 2)))) (h "1x441azvvdy6x8am4bvkxhswhzw5cr8ml0cqspnihvri8bx4cvhp") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap" "std") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc")))) (r "1.56")))

(define-public crate-serde_json-1.0.112 (c (n "serde_json") (v "1.0.112") (d (list (d (n "automod") (r "^1.0.11") (d #t) (k 2)) (d (n "indexmap") (r "^2") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^2.0.2") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0.18") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.13") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.194") (k 0)) (d (n "serde") (r "^1.0.194") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.166") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1.8") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.81") (f (quote ("diff"))) (d #t) (k 2)))) (h "1va8xk27124mx1x3x97blrd0vbsbxfb5z8p5hnzz6k1jw9yd66sd") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap" "std") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc")))) (r "1.56")))

(define-public crate-serde_json-1.0.113 (c (n "serde_json") (v "1.0.113") (d (list (d (n "automod") (r "^1.0.11") (d #t) (k 2)) (d (n "indexmap") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^2.0.2") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0.18") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.13") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.194") (k 0)) (d (n "serde") (r "^1.0.194") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.166") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1.8") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.81") (f (quote ("diff"))) (d #t) (k 2)))) (h "0ycaiff7ar4qx5sy9kvi1kv9rnnfl15kcfmhxiiwknn3n5q1p039") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap" "std") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc")))) (r "1.56")))

(define-public crate-serde_json-1.0.114 (c (n "serde_json") (v "1.0.114") (d (list (d (n "automod") (r "^1.0.11") (d #t) (k 2)) (d (n "indexmap") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^2.0.2") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0.18") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.13") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.194") (k 0)) (d (n "serde") (r "^1.0.194") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.166") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1.8") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.81") (f (quote ("diff"))) (d #t) (k 2)))) (h "1q4saigxwkf8bw4y5kp6k33dnavlvvwa2q4zmag59vrjsqdrpw65") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap" "std") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc")))) (r "1.56")))

(define-public crate-serde_json-1.0.115 (c (n "serde_json") (v "1.0.115") (d (list (d (n "automod") (r "^1.0.11") (d #t) (k 2)) (d (n "indexmap") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^2.0.2") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0.18") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.13") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.194") (k 0)) (d (n "serde") (r "^1.0.194") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.166") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1.8") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.81") (f (quote ("diff"))) (d #t) (k 2)))) (h "1pcpcik3jmfkw845irc61vd8f91zlpwnq6z7ypsgvsd8v935rp0j") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap" "std") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc")))) (r "1.56")))

(define-public crate-serde_json-1.0.116 (c (n "serde_json") (v "1.0.116") (d (list (d (n "automod") (r "^1.0.11") (d #t) (k 2)) (d (n "indexmap") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^2.0.2") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0.18") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.13") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.194") (k 0)) (d (n "serde") (r "^1.0.194") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.166") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1.8") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.81") (f (quote ("diff"))) (d #t) (k 2)))) (h "04r81f5myl41zrsyghnbmbl39c4n3azldb9zxfafnzyi4rqxn5ry") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap" "std") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc")))) (r "1.56")))

(define-public crate-serde_json-1.0.117 (c (n "serde_json") (v "1.0.117") (d (list (d (n "automod") (r "^1.0.11") (d #t) (k 2)) (d (n "indexmap") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^2.0.2") (d #t) (k 2)) (d (n "itoa") (r "^1.0") (d #t) (k 0)) (d (n "ref-cast") (r "^1.0.18") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.13") (d #t) (k 2)) (d (n "ryu") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.194") (k 0)) (d (n "serde") (r "^1.0.194") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11.10") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.166") (d #t) (k 2)) (d (n "serde_stacker") (r "^0.1.8") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.81") (f (quote ("diff"))) (d #t) (k 2)))) (h "1hxziifjlc0kn1cci9d4crmjc7qwnfi20lxwyj9lzca2c7m84la5") (f (quote (("unbounded_depth") ("std" "serde/std") ("raw_value") ("preserve_order" "indexmap" "std") ("float_roundtrip") ("default" "std") ("arbitrary_precision") ("alloc" "serde/alloc")))) (r "1.56")))

