(define-module (crates-io se rd serde_with) #:use-module (crates-io))

(define-public crate-serde_with-0.1.0 (c (n "serde_with") (v "0.1.0") (h "1azzkmv438rxbc7vgsslwk5yh92h5i975yd46my01g3yglb1pf6d")))

(define-public crate-serde_with-0.2.0 (c (n "serde_with") (v "0.2.0") (d (list (d (n "chrono") (r "^0.4.2") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.59") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.59") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.17") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.17") (d #t) (k 2)))) (h "1affily619ncszzg8sn56ylv3xrxwyyrpn06a2kpchv56vw6kl12") (f (quote (("json" "serde_json"))))))

(define-public crate-serde_with-0.2.1 (c (n "serde_with") (v "0.2.1") (d (list (d (n "chrono") (r "^0.4.2") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.65") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.65") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.17") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.17") (d #t) (k 2)))) (h "11ipmwfngxgj8qqn90qxmg4jknrngzqxi3nwfw9cga1pgnsrm7vg") (f (quote (("json" "serde_json"))))))

(define-public crate-serde_with-0.2.2 (c (n "serde_with") (v "0.2.2") (d (list (d (n "chrono") (r "^0.4.2") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5.1") (d #t) (k 2)) (d (n "ron") (r "^0.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.65") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.65") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.17") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.17") (d #t) (k 2)))) (h "09p090l0phkxgzcazf7b03kyfx6i6l32j2xmkhz2a61k2383famb") (f (quote (("json" "serde_json"))))))

(define-public crate-serde_with-0.2.3 (c (n "serde_with") (v "0.2.3") (d (list (d (n "chrono") (r "^0.4.1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5.1") (d #t) (k 2)) (d (n "ron") (r ">= 0.3.0, < 0.6") (d #t) (k 2)) (d (n "serde") (r "^1.0.75") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.75") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.1") (d #t) (k 2)))) (h "0akhrxj8za8c69y0z0nzdvaibk1bjx8d3pzi6l2r98bz0bl3s8bw") (f (quote (("json" "serde_json"))))))

(define-public crate-serde_with-0.2.4 (c (n "serde_with") (v "0.2.4") (d (list (d (n "chrono") (r "^0.4.1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5.1") (d #t) (k 2)) (d (n "ron") (r ">= 0.3.0, < 0.6") (d #t) (k 2)) (d (n "serde") (r "^1.0.75") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.75") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.1") (d #t) (k 2)))) (h "0z3g0cfjra37yigp0r8w7fmj4a6fy8ngk4r5q7farixgmdkh0h0s") (f (quote (("json" "serde_json"))))))

(define-public crate-serde_with-0.2.5 (c (n "serde_with") (v "0.2.5") (d (list (d (n "chrono") (r "^0.4.1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5.1") (d #t) (k 2)) (d (n "ron") (r ">= 0.3.0, < 0.6") (d #t) (k 2)) (d (n "serde") (r "^1.0.75") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.75") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.1") (d #t) (k 2)))) (h "15dr26dh5bq6rvgmyr65whxk0dwm3na5qvk3hkgmb9cjaph61hcp") (f (quote (("json" "serde_json"))))))

(define-public crate-serde_with-1.0.0 (c (n "serde_with") (v "1.0.0") (d (list (d (n "chrono") (r "^0.4.1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5.1") (d #t) (k 2)) (d (n "ron") (r ">= 0.3.0, < 0.6") (d #t) (k 2)) (d (n "serde") (r "^1.0.75") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.75") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.1") (d #t) (k 2)))) (h "16rphcb4l5zx1ncabyxd83cywybnzjf6sipqifd217ika21qkdzq") (f (quote (("json" "serde_json"))))))

(define-public crate-serde_with-1.1.0 (c (n "serde_with") (v "1.1.0") (d (list (d (n "chrono") (r "^0.4.1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.5.1") (d #t) (k 2)) (d (n "ron") (r ">= 0.3.0, < 0.6") (d #t) (k 2)) (d (n "serde") (r "^1.0.75") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.75") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.1") (d #t) (k 2)) (d (n "version-sync") (r "^0.7.0") (d #t) (k 2)))) (h "13hpnbxh4264symi4frhp0awm3ak3p7xybnbr8y2vrfvr06kk28h") (f (quote (("json" "serde_json"))))))

(define-public crate-serde_with-1.2.0 (c (n "serde_with") (v "1.2.0") (d (list (d (n "chrono") (r "^0.4.1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.5.1") (d #t) (k 2)) (d (n "ron") (r ">= 0.3.0, < 0.6") (d #t) (k 2)) (d (n "serde") (r "^1.0.75") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.75") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (d #t) (k 2)) (d (n "version-sync") (r "^0.7.0") (d #t) (k 2)))) (h "0iw07mr036l4y7arm6y8jlkpkz08r2kximcrvr83vqlw1gw431pj") (f (quote (("json" "serde_json"))))))

(define-public crate-serde_with-1.3.0 (c (n "serde_with") (v "1.3.0") (d (list (d (n "chrono") (r "^0.4.1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.5.1") (d #t) (k 2)) (d (n "ron") (r ">= 0.3.0, < 0.5") (d #t) (k 2)) (d (n "serde") (r "^1.0.75") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.75") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (d #t) (k 2)) (d (n "serde_with_macros") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "version-sync") (r "^0.7.0") (d #t) (k 2)))) (h "1a85lfs1bna0sjprlq3480b4d92s74p6cjxwm8jcpxskp57hiyvh") (f (quote (("macros" "serde_with_macros") ("json" "serde_json") ("default" "macros"))))))

(define-public crate-serde_with-1.3.1 (c (n "serde_with") (v "1.3.1") (d (list (d (n "chrono") (r "^0.4.1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.5.1") (d #t) (k 2)) (d (n "ron") (r ">= 0.3.0, < 0.5") (d #t) (k 2)) (d (n "serde") (r "^1.0.75") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.75") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (d #t) (k 2)) (d (n "serde_with_macros") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "version-sync") (r "^0.7.0") (d #t) (k 2)))) (h "1cfxrrqac11i5wy6q78q27ggygvizr3fy2w68v7nrc5l4vkngp1j") (f (quote (("macros" "serde_with_macros") ("json" "serde_json") ("default" "macros"))))))

(define-public crate-serde_with-1.4.0 (c (n "serde_with") (v "1.4.0") (d (list (d (n "chrono") (r "^0.4.1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "ron") (r ">= 0.3.0, < 0.6") (d #t) (k 2)) (d (n "serde") (r "^1.0.75") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.75") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (d #t) (k 2)) (d (n "serde_with_macros") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "version-sync") (r "^0.8.1") (d #t) (k 2)))) (h "0i54m1f3dxdcaqpyqwzkv6in52r9cfpdbxmpf2ybn821ssaxblw9") (f (quote (("macros" "serde_with_macros") ("json" "serde_json") ("default" "macros"))))))

(define-public crate-serde_with-1.5.0-alpha.1 (c (n "serde_with") (v "1.5.0-alpha.1") (d (list (d (n "chrono_crate") (r "^0.4.1") (f (quote ("serde"))) (o #t) (d #t) (k 0) (p "chrono")) (d (n "doc-comment") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "ron") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1.0.75") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.75") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_with_macros") (r "^1.2.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "version-sync") (r "^0.8.1") (d #t) (k 2)))) (h "17i0hnxgmywlqxfwgzygrjp4k5qj9a2hfihbg7ari7i7yp1jr4hl") (f (quote (("macros" "serde_with_macros") ("json" "serde_json") ("guide" "doc-comment" "macros") ("default" "macros") ("chrono" "chrono_crate"))))))

(define-public crate-serde_with-1.5.0-alpha.2 (c (n "serde_with") (v "1.5.0-alpha.2") (d (list (d (n "chrono_crate") (r "^0.4.1") (f (quote ("serde"))) (o #t) (d #t) (k 0) (p "chrono")) (d (n "doc-comment") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "regex") (r "^1.3.9") (f (quote ("std"))) (k 2)) (d (n "ron") (r "^0.6") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.75") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.75") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_with_macros") (r "^1.2.0-alpha.3") (o #t) (d #t) (k 0)) (d (n "version-sync") (r "^0.8.1") (d #t) (k 2)))) (h "0x3vannk17hxf3n4k356wjabvih1iri0zbx7x0mg4v4jlk8r5njn") (f (quote (("macros" "serde_with_macros") ("json" "serde_json") ("guide" "doc-comment" "macros") ("default" "macros") ("chrono" "chrono_crate"))))))

(define-public crate-serde_with-1.5.0 (c (n "serde_with") (v "1.5.0") (d (list (d (n "chrono_crate") (r "^0.4.1") (f (quote ("serde"))) (o #t) (d #t) (k 0) (p "chrono")) (d (n "doc-comment") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.0.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0.6") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "regex") (r "^1.3.9") (f (quote ("std"))) (k 2)) (d (n "ron") (r "^0.6") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.75") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.75") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_with_macros") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "version-sync") (r "^0.8.1") (d #t) (k 2)))) (h "0d07vla2h4v0azfa9ggr0hsfwhq2hnhv7zsz0p508r3lzl1z6zgq") (f (quote (("macros" "serde_with_macros") ("json" "serde_json") ("guide" "doc-comment" "macros") ("default" "macros") ("chrono" "chrono_crate"))))))

(define-public crate-serde_with-1.5.1 (c (n "serde_with") (v "1.5.1") (d (list (d (n "chrono_crate") (r "^0.4.1") (f (quote ("serde"))) (o #t) (d #t) (k 0) (p "chrono")) (d (n "doc-comment") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.0.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0.6") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "regex") (r "^1.3.9") (f (quote ("std"))) (k 2)) (d (n "ron") (r "^0.6") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.75") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.75") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_with_macros") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "version-sync") (r "^0.8.1") (d #t) (k 2)))) (h "1khbnl0ib1xmnznx72fhkf5vgn0qbjh2gjidhyc1wfzv50hjgb4b") (f (quote (("macros" "serde_with_macros") ("json" "serde_json") ("guide" "doc-comment" "macros") ("default" "macros") ("chrono" "chrono_crate"))))))

(define-public crate-serde_with-1.6.0 (c (n "serde_with") (v "1.6.0") (d (list (d (n "chrono_crate") (r ">=0.4.1, <0.5.0") (f (quote ("serde"))) (o #t) (d #t) (k 0) (p "chrono")) (d (n "doc-comment") (r ">=0.3.3, <0.4.0") (o #t) (d #t) (k 0)) (d (n "expect-test") (r ">=1.0.0, <2.0.0") (d #t) (k 2)) (d (n "fnv") (r ">=1.0.6, <2.0.0") (d #t) (k 2)) (d (n "glob") (r ">=0.3.0, <0.4.0") (d #t) (k 2)) (d (n "hex") (r ">=0.4.2, <0.5.0") (o #t) (d #t) (k 0)) (d (n "mime") (r ">=0.3.16, <0.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r ">=0.6.1, <0.7.0") (d #t) (k 2)) (d (n "regex") (r ">=1.3.9, <2.0.0") (f (quote ("std"))) (k 2)) (d (n "ron") (r ">=0.6.0, <0.7.0") (d #t) (k 2)) (d (n "rustversion") (r ">=1.0.0, <2.0.0") (d #t) (k 2)) (d (n "serde") (r ">=1.0.75, <2.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r ">=1.0.75, <2.0.0") (d #t) (k 2)) (d (n "serde_json") (r ">=1.0.1, <2.0.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r ">=1.0.25, <2.0.0") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_with_macros") (r ">=1.3.0, <2.0.0") (o #t) (d #t) (k 0)) (d (n "version-sync") (r ">=0.9.1, <0.10.0") (d #t) (k 2)))) (h "06m5g3j73yp8cg7hhj94pn05d5xycim76fimrqz5a1a70qg21xhm") (f (quote (("macros" "serde_with_macros") ("json" "serde_json") ("guide" "doc-comment" "macros") ("default" "macros") ("chrono" "chrono_crate"))))))

(define-public crate-serde_with-1.6.1 (c (n "serde_with") (v "1.6.1") (d (list (d (n "chrono_crate") (r "^0.4.1") (f (quote ("serde"))) (o #t) (d #t) (k 0) (p "chrono")) (d (n "doc-comment") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.0.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0.6") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "regex") (r "^1.3.9") (f (quote ("std"))) (k 2)) (d (n "ron") (r "^0.6") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.75") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.75") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_with_macros") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "version-sync") (r "^0.9.1") (d #t) (k 2)))) (h "1w19zcl1lf0j1wvr0svf06q9da7clhs4w474fpbsg2ria0biwb01") (f (quote (("macros" "serde_with_macros") ("json" "serde_json") ("guide" "doc-comment" "macros") ("default" "macros") ("chrono" "chrono_crate"))))))

(define-public crate-serde_with-1.6.2 (c (n "serde_with") (v "1.6.2") (d (list (d (n "chrono_crate") (r "^0.4.1") (f (quote ("serde"))) (o #t) (d #t) (k 0) (p "chrono")) (d (n "doc-comment") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.0.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0.6") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "regex") (r "^1.3.9") (f (quote ("std"))) (k 2)) (d (n "ron") (r "^0.6") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.75") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.4.1") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.75") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_with_macros") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "version-sync") (r "^0.9.1") (d #t) (k 2)))) (h "02791mh9x00356a8kzwpryvkx0v9qyg1zznqsmysmx8bvaq8zyj2") (f (quote (("macros" "serde_with_macros") ("json" "serde_json") ("guide" "doc-comment" "macros") ("default" "macros") ("chrono" "chrono_crate"))))))

(define-public crate-serde_with-1.6.3 (c (n "serde_with") (v "1.6.3") (d (list (d (n "chrono_crate") (r "^0.4.1") (f (quote ("serde"))) (o #t) (d #t) (k 0) (p "chrono")) (d (n "doc-comment") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.0.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0.6") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "regex") (r "^1.3.9") (f (quote ("std"))) (k 2)) (d (n "ron") (r "^0.6") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.75") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.4.1") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.75") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_with_macros") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "version-sync") (r "^0.9.1") (d #t) (k 2)))) (h "0iz0y3h34swmbmz4v1jlgz14f9qq6xk8ipz0jlr6qinf3faga6jr") (f (quote (("macros" "serde_with_macros") ("json" "serde_json") ("guide" "doc-comment" "macros") ("default" "macros") ("chrono" "chrono_crate"))))))

(define-public crate-serde_with-1.6.4 (c (n "serde_with") (v "1.6.4") (d (list (d (n "chrono_crate") (r "^0.4.1") (f (quote ("serde"))) (o #t) (d #t) (k 0) (p "chrono")) (d (n "doc-comment") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.0.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0.6") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "regex") (r "^1.3.9") (f (quote ("std"))) (k 2)) (d (n "ron") (r "^0.6") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.75") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.4.1") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.75") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_with_macros") (r "^1.4.1") (o #t) (d #t) (k 0)) (d (n "version-sync") (r "^0.9.1") (d #t) (k 2)))) (h "1r8vaszww19zz6l1b55fbfaxk4a95m6ag73wf0h08ji1gqifjjxl") (f (quote (("macros" "serde_with_macros") ("json" "serde_json") ("guide" "doc-comment" "macros") ("default" "macros") ("chrono" "chrono_crate"))))))

(define-public crate-serde_with-1.7.0 (c (n "serde_with") (v "1.7.0") (d (list (d (n "chrono_crate") (r "^0.4.1") (f (quote ("serde"))) (o #t) (d #t) (k 0) (p "chrono")) (d (n "doc-comment") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.0.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0.6") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.7.1") (d #t) (k 2)) (d (n "regex") (r "^1.3.9") (f (quote ("std"))) (k 2)) (d (n "ron") (r "^0.6") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.4.1") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.122") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_test") (r "^1.0.124") (d #t) (k 2)) (d (n "serde_with_macros") (r "^1.4.1") (o #t) (d #t) (k 0)) (d (n "version-sync") (r "^0.9.1") (d #t) (k 2)))) (h "1csslrcvhhag4mih13qcwb086pfp931abj138jg2bnr3y16vn8vz") (f (quote (("macros" "serde_with_macros") ("json" "serde_json") ("guide" "doc-comment" "macros") ("default" "macros") ("chrono" "chrono_crate"))))))

(define-public crate-serde_with-1.8.0 (c (n "serde_with") (v "1.8.0") (d (list (d (n "chrono_crate") (r "^0.4.1") (f (quote ("serde"))) (o #t) (d #t) (k 0) (p "chrono")) (d (n "doc-comment") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.0.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0.6") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.7.1") (d #t) (k 2)) (d (n "regex") (r "^1.3.9") (f (quote ("std"))) (k 2)) (d (n "ron") (r "^0.6") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.4.1") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.122") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_test") (r "^1.0.124") (d #t) (k 2)) (d (n "serde_with_macros") (r "^1.4.1") (o #t) (d #t) (k 0)) (d (n "version-sync") (r "^0.9.1") (d #t) (k 2)))) (h "16xvjlczdg2xgar59infqcxp0g15ach0h1zcb8mb6f7vmm8ccmz5") (f (quote (("macros" "serde_with_macros") ("json" "serde_json") ("guide" "doc-comment" "macros") ("default" "macros") ("chrono" "chrono_crate"))))))

(define-public crate-serde_with-1.8.1 (c (n "serde_with") (v "1.8.1") (d (list (d (n "chrono_crate") (r "^0.4.1") (f (quote ("serde"))) (o #t) (d #t) (k 0) (p "chrono")) (d (n "doc-comment") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.0.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0.6") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.7.1") (d #t) (k 2)) (d (n "regex") (r "^1.3.9") (f (quote ("std"))) (k 2)) (d (n "ron") (r "^0.6") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.4.1") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.122") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_test") (r "^1.0.124") (d #t) (k 2)) (d (n "serde_with_macros") (r "^1.4.1") (o #t) (d #t) (k 0)) (d (n "version-sync") (r "^0.9.1") (d #t) (k 2)))) (h "0hsv3fzniyyyl6w6125p3ppl45nfcnwlcp5zhdva8pckc67vkc16") (f (quote (("macros" "serde_with_macros") ("json" "serde_json") ("guide" "doc-comment" "macros") ("default" "macros") ("chrono" "chrono_crate"))))))

(define-public crate-serde_with-1.9.0 (c (n "serde_with") (v "1.9.0") (d (list (d (n "chrono_crate") (r "^0.4.1") (f (quote ("serde"))) (o #t) (d #t) (k 0) (p "chrono")) (d (n "doc-comment") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.0.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0.6") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.7.1") (d #t) (k 2)) (d (n "regex") (r "^1.3.9") (f (quote ("std"))) (k 2)) (d (n "ron") (r "^0.6") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.4.1") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.122") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_test") (r "^1.0.124") (d #t) (k 2)) (d (n "serde_with_macros") (r "^1.4.1") (o #t) (d #t) (k 0)) (d (n "version-sync") (r "^0.9.1") (d #t) (k 2)))) (h "02wnv1ywp74dgd9q0ml00a7zv09g7s6i5cybgvlqcgdhq6w4rl9k") (f (quote (("macros" "serde_with_macros") ("json" "serde_json") ("guide" "doc-comment" "macros") ("default" "macros") ("chrono" "chrono_crate"))))))

(define-public crate-serde_with-1.9.1 (c (n "serde_with") (v "1.9.1") (d (list (d (n "chrono_crate") (r "^0.4.1") (f (quote ("serde"))) (o #t) (d #t) (k 0) (p "chrono")) (d (n "doc-comment") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.0.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0.6") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.7.1") (d #t) (k 2)) (d (n "regex") (r "^1.3.9") (f (quote ("std"))) (k 2)) (d (n "ron") (r "^0.6") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.4.1") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.122") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_test") (r "^1.0.124") (d #t) (k 2)) (d (n "serde_with_macros") (r "^1.4.1") (o #t) (d #t) (k 0)) (d (n "version-sync") (r "^0.9.1") (d #t) (k 2)))) (h "1jng8kzfs39lqr63gdxlqiwpgjl04z2mscrsga9rn425ak6sxvpd") (f (quote (("macros" "serde_with_macros") ("json" "serde_json") ("guide" "doc-comment" "macros") ("default" "macros") ("chrono" "chrono_crate"))))))

(define-public crate-serde_with-1.9.2 (c (n "serde_with") (v "1.9.2") (d (list (d (n "chrono_crate") (r "^0.4.1") (f (quote ("serde"))) (o #t) (d #t) (k 0) (p "chrono")) (d (n "doc-comment") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.0.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0.6") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.7.1") (d #t) (k 2)) (d (n "regex") (r "^1.3.9") (f (quote ("std"))) (k 2)) (d (n "ron") (r "^0.6") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.4.1") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.122") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_test") (r "^1.0.124") (d #t) (k 2)) (d (n "serde_with_macros") (r "^1.4.2") (o #t) (d #t) (k 0)) (d (n "version-sync") (r "^0.9.1") (d #t) (k 2)))) (h "1xc75bvf74fxcdg6s5zkdmsvz3gks4x0h40vifn4mdyg06yk4c9y") (f (quote (("macros" "serde_with_macros") ("json" "serde_json") ("guide" "doc-comment" "macros") ("default" "macros") ("chrono" "chrono_crate"))))))

(define-public crate-serde_with-1.9.3 (c (n "serde_with") (v "1.9.3") (d (list (d (n "chrono_crate") (r "^0.4.1") (f (quote ("serde"))) (o #t) (d #t) (k 0) (p "chrono")) (d (n "doc-comment") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.0.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0.6") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.7.1") (d #t) (k 2)) (d (n "regex") (r "^1.3.9") (f (quote ("std"))) (k 2)) (d (n "ron") (r "^0.6") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.4.1") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.122") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_test") (r "^1.0.124") (d #t) (k 2)) (d (n "serde_with_macros") (r "^1.4.2") (o #t) (d #t) (k 0)) (d (n "version-sync") (r "^0.9.1") (d #t) (k 2)))) (h "0l68pzxkd2n929m6655y3gfzgipwp575is6gvhzmslgxljdkffva") (f (quote (("macros" "serde_with_macros") ("json" "serde_json") ("guide" "doc-comment" "macros") ("default" "macros") ("chrono" "chrono_crate"))))))

(define-public crate-serde_with-1.9.4 (c (n "serde_with") (v "1.9.4") (d (list (d (n "chrono_crate") (r "^0.4.1") (f (quote ("serde"))) (o #t) (d #t) (k 0) (p "chrono")) (d (n "doc-comment") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.0.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0.6") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.7.1") (d #t) (k 2)) (d (n "regex") (r "^1.3.9") (f (quote ("std"))) (k 2)) (d (n "ron") (r "^0.6") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.4.1") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.122") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_test") (r "^1.0.124") (d #t) (k 2)) (d (n "serde_with_macros") (r "^1.4.2") (o #t) (d #t) (k 0)) (d (n "version-sync") (r "^0.9.1") (d #t) (k 2)))) (h "0wmw2a67prb29gggihi6gllna2jgs3pjb33kvcb8kp5sd6xzvn8s") (f (quote (("macros" "serde_with_macros") ("json" "serde_json") ("guide" "doc-comment" "macros") ("default" "macros") ("chrono" "chrono_crate"))))))

(define-public crate-serde_with-1.10.0 (c (n "serde_with") (v "1.10.0") (d (list (d (n "chrono_crate") (r "^0.4.1") (f (quote ("serde"))) (o #t) (d #t) (k 0) (p "chrono")) (d (n "doc-comment") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.0.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0.6") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.7.1") (d #t) (k 2)) (d (n "regex") (r "^1.3.9") (f (quote ("std"))) (k 2)) (d (n "ron") (r "^0.6") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.5.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.122") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_test") (r "^1.0.124") (d #t) (k 2)) (d (n "serde_with_macros") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "version-sync") (r "^0.9.1") (d #t) (k 2)))) (h "0b4ffpaknwq0qb9vv5mx1vavzql3lpchxvzsmi7729lgbpj8faq6") (f (quote (("macros" "serde_with_macros") ("json" "serde_json") ("guide" "doc-comment" "macros") ("default" "macros") ("chrono" "chrono_crate"))))))

(define-public crate-serde_with-1.11.0 (c (n "serde_with") (v "1.11.0") (d (list (d (n "base64_crate") (r "^0.13.0") (o #t) (d #t) (k 0) (p "base64")) (d (n "chrono_crate") (r "^0.4.1") (f (quote ("clock" "serde" "std"))) (o #t) (k 0) (p "chrono")) (d (n "doc-comment") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.0.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0.6") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.3.9") (f (quote ("std"))) (k 2)) (d (n "ron") (r "^0.6") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.5.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.122") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_test") (r "^1.0.124") (d #t) (k 2)) (d (n "serde_with_macros") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "version-sync") (r "^0.9.1") (d #t) (k 2)))) (h "1cy4yx3z6nr09y4879lxr7nbm01k4bpms18g78zf9dk9rfs5cq5d") (f (quote (("macros" "serde_with_macros") ("json" "serde_json") ("guide" "doc-comment" "macros") ("default" "macros") ("chrono" "chrono_crate") ("base64" "base64_crate")))) (r "1.46")))

(define-public crate-serde_with-1.12.0 (c (n "serde_with") (v "1.12.0") (d (list (d (n "base64_crate") (r "^0.13.0") (o #t) (d #t) (k 0) (p "base64")) (d (n "chrono_crate") (r "^0.4.1") (f (quote ("clock" "serde" "std"))) (o #t) (k 0) (p "chrono")) (d (n "doc-comment") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.0.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0.6") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.3.9") (f (quote ("std"))) (k 2)) (d (n "rmp-serde") (r "^0.15.5") (d #t) (k 2)) (d (n "ron") (r "^0.7") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.5.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.122") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_test") (r "^1.0.124") (d #t) (k 2)) (d (n "serde_with_macros") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.21") (d #t) (k 2)) (d (n "version-sync") (r "^0.9.1") (d #t) (k 2)))) (h "1g7gkksb7i1ilw2acy30g90b3ws20wv0vb2fi4g5n3lmv326w7pc") (f (quote (("macros" "serde_with_macros") ("json" "serde_json") ("guide" "doc-comment" "macros") ("default" "macros") ("chrono" "chrono_crate") ("base64" "base64_crate")))) (r "1.46")))

(define-public crate-serde_with-1.12.1 (c (n "serde_with") (v "1.12.1") (d (list (d (n "base64_crate") (r "^0.13.0") (o #t) (d #t) (k 0) (p "base64")) (d (n "chrono_crate") (r "^0.4.1") (f (quote ("clock" "serde" "std"))) (o #t) (k 0) (p "chrono")) (d (n "doc-comment") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.0.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0.6") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.3.9") (f (quote ("std"))) (k 2)) (d (n "rmp-serde") (r "^0.15.5") (d #t) (k 2)) (d (n "ron") (r "^0.7") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.5.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.122") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_test") (r "^1.0.124") (d #t) (k 2)) (d (n "serde_with_macros") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.21") (d #t) (k 2)) (d (n "version-sync") (r "^0.9.1") (d #t) (k 2)))) (h "1drq04irh6dsl3fxcihbi7svvpdrmy81k0ab3y5gfgy4i95a0vwl") (f (quote (("macros" "serde_with_macros") ("json" "serde_json") ("guide" "doc-comment" "macros") ("default" "macros") ("chrono" "chrono_crate") ("base64" "base64_crate")))) (r "1.46")))

(define-public crate-serde_with-1.13.0 (c (n "serde_with") (v "1.13.0") (d (list (d (n "base64_crate") (r "^0.13.0") (o #t) (d #t) (k 0) (p "base64")) (d (n "chrono_crate") (r "^0.4.1") (f (quote ("clock" "serde" "std"))) (o #t) (k 0) (p "chrono")) (d (n "doc-comment") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.0.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0.6") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "indexmap_crate") (r "^1.8") (f (quote ("serde-1"))) (o #t) (d #t) (k 0) (p "indexmap")) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.3.9") (f (quote ("std"))) (k 2)) (d (n "rmp-serde") (r "^0.15.5") (d #t) (k 2)) (d (n "ron") (r "^0.7") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.122") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.5.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_test") (r "^1.0.124") (d #t) (k 2)) (d (n "serde_with_macros") (r "^1.5.2") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.21") (d #t) (k 2)) (d (n "version-sync") (r "^0.9.1") (d #t) (k 2)))) (h "0m7drkhcifjw5d5ixp0zrgyvv54if03g0djicsdg3wr4688z49xq") (f (quote (("macros" "serde_with_macros") ("json" "serde_json") ("indexmap" "indexmap_crate") ("guide" "doc-comment" "macros") ("default" "macros") ("chrono" "chrono_crate") ("base64" "base64_crate")))) (r "1.46")))

(define-public crate-serde_with-1.14.0 (c (n "serde_with") (v "1.14.0") (d (list (d (n "base64_crate") (r "^0.13.0") (o #t) (d #t) (k 0) (p "base64")) (d (n "chrono_crate") (r "^0.4.1") (f (quote ("clock" "serde" "std"))) (o #t) (k 0) (p "chrono")) (d (n "doc-comment") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.0.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0.6") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "indexmap_crate") (r "^1.8") (f (quote ("serde-1"))) (o #t) (d #t) (k 0) (p "indexmap")) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.3.9") (f (quote ("std"))) (k 2)) (d (n "rmp-serde") (r "^1.1.0") (d #t) (k 2)) (d (n "ron") (r "^0.7") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.122") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.5.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_test") (r "^1.0.124") (d #t) (k 2)) (d (n "serde_with_macros") (r "^1.5.2") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.21") (d #t) (k 2)) (d (n "time_0_3") (r "~0.3") (f (quote ("serde-well-known"))) (o #t) (d #t) (k 0) (p "time")) (d (n "version-sync") (r "^0.9.1") (d #t) (k 2)))) (h "1zqjlc9ypm8y0r9bcgdhh62zcdn2yzfxh31dsbn01gshkq35m2v7") (f (quote (("macros" "serde_with_macros") ("json" "serde_json") ("indexmap" "indexmap_crate") ("guide" "doc-comment" "macros") ("default" "macros") ("chrono" "chrono_crate") ("base64" "base64_crate")))) (r "1.53")))

(define-public crate-serde_with-2.0.0-rc.0 (c (n "serde_with") (v "2.0.0-rc.0") (d (list (d (n "base64") (r "^0.13.0") (o #t) (k 0)) (d (n "chrono_0_4") (r "^0.4.10") (f (quote ("serde"))) (o #t) (k 0) (p "chrono")) (d (n "doc-comment") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.3.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0.6") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (o #t) (k 0)) (d (n "indexmap_1") (r "^1.8") (f (quote ("serde-1"))) (o #t) (k 0) (p "indexmap")) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.6") (f (quote ("std"))) (k 2)) (d (n "rmp-serde") (r "^1.1.0") (d #t) (k 2)) (d (n "ron") (r "^0.7") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.122") (f (quote ("derive"))) (k 0)) (d (n "serde-xml-rs") (r "^0.5.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.45") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_test") (r "^1.0.124") (d #t) (k 2)) (d (n "serde_with_macros") (r "=2.0.0-rc.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.21") (d #t) (k 2)) (d (n "time_0_3") (r "~0.3") (o #t) (k 0) (p "time")) (d (n "version-sync") (r "^0.9.1") (d #t) (k 2)))) (h "1hq6n4mm5vnm4braa58d8jyksdhhm1fhhw98g7jw5gm722r9rc0l") (f (quote (("indexmap" "indexmap_1") ("default" "std" "macros") ("chrono" "chrono_0_4")))) (s 2) (e (quote (("time_0_3" "dep:time_0_3") ("std" "alloc" "serde/std" "chrono_0_4?/clock" "chrono_0_4?/std" "indexmap_1?/std" "time_0_3?/serde-well-known" "time_0_3?/std") ("macros" "dep:serde_with_macros") ("json" "dep:serde_json" "alloc") ("indexmap_1" "dep:indexmap_1" "alloc") ("hex" "dep:hex" "alloc") ("guide" "dep:doc-comment" "macros" "std") ("chrono_0_4" "dep:chrono_0_4") ("base64" "dep:base64" "alloc") ("alloc" "serde/alloc" "base64?/alloc" "chrono_0_4?/alloc" "hex?/alloc" "serde_json?/alloc" "time_0_3?/alloc")))) (r "1.60")))

(define-public crate-serde_with-2.0.0 (c (n "serde_with") (v "2.0.0") (d (list (d (n "base64") (r "^0.13.0") (o #t) (k 0)) (d (n "chrono_0_4") (r "^0.4.10") (f (quote ("serde"))) (o #t) (k 0) (p "chrono")) (d (n "doc-comment") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.3.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0.6") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (o #t) (k 0)) (d (n "indexmap_1") (r "^1.8") (f (quote ("serde-1"))) (o #t) (k 0) (p "indexmap")) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.6") (f (quote ("std"))) (k 2)) (d (n "rmp-serde") (r "^1.1.0") (d #t) (k 2)) (d (n "ron") (r "^0.7") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.122") (f (quote ("derive"))) (k 0)) (d (n "serde-xml-rs") (r "^0.5.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.45") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_test") (r "^1.0.124") (d #t) (k 2)) (d (n "serde_with_macros") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.21") (d #t) (k 2)) (d (n "time_0_3") (r "~0.3") (o #t) (k 0) (p "time")) (d (n "version-sync") (r "^0.9.1") (d #t) (k 2)))) (h "1a0frj8n82dbldzri43qi6dlvj0r51693fsgwk6a6wcka4k7mpw9") (f (quote (("indexmap" "indexmap_1") ("default" "std" "macros") ("chrono" "chrono_0_4")))) (s 2) (e (quote (("time_0_3" "dep:time_0_3") ("std" "alloc" "serde/std" "chrono_0_4?/clock" "chrono_0_4?/std" "indexmap_1?/std" "time_0_3?/serde-well-known" "time_0_3?/std") ("macros" "dep:serde_with_macros") ("json" "dep:serde_json" "alloc") ("indexmap_1" "dep:indexmap_1" "alloc") ("hex" "dep:hex" "alloc") ("guide" "dep:doc-comment" "macros" "std") ("chrono_0_4" "dep:chrono_0_4") ("base64" "dep:base64" "alloc") ("alloc" "serde/alloc" "base64?/alloc" "chrono_0_4?/alloc" "hex?/alloc" "serde_json?/alloc" "time_0_3?/alloc")))) (r "1.60")))

(define-public crate-serde_with-2.0.1 (c (n "serde_with") (v "2.0.1") (d (list (d (n "base64") (r "^0.13.0") (o #t) (k 0)) (d (n "chrono_0_4") (r "^0.4.20") (f (quote ("serde"))) (o #t) (k 0) (p "chrono")) (d (n "doc-comment") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.3.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0.6") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (o #t) (k 0)) (d (n "indexmap_1") (r "^1.8") (f (quote ("serde-1"))) (o #t) (k 0) (p "indexmap")) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.6") (f (quote ("std"))) (k 2)) (d (n "rmp-serde") (r "^1.1.0") (d #t) (k 2)) (d (n "ron") (r "^0.8") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.122") (f (quote ("derive"))) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.45") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_test") (r "^1.0.124") (d #t) (k 2)) (d (n "serde_with_macros") (r "^2.0.1") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.2") (d #t) (k 2)) (d (n "time_0_3") (r "~0.3.11") (o #t) (k 0) (p "time")) (d (n "version-sync") (r "^0.9.1") (d #t) (k 2)))) (h "19x9wvapx5nzkc1hbq9scvz3000y1mxnimnwhjd03sj9s1h2v3rn") (f (quote (("indexmap" "indexmap_1") ("default" "std" "macros") ("chrono" "chrono_0_4")))) (s 2) (e (quote (("time_0_3" "dep:time_0_3") ("std" "alloc" "serde/std" "chrono_0_4?/clock" "chrono_0_4?/std" "indexmap_1?/std" "time_0_3?/serde-well-known" "time_0_3?/std") ("macros" "dep:serde_with_macros") ("json" "dep:serde_json" "alloc") ("indexmap_1" "dep:indexmap_1" "alloc") ("hex" "dep:hex" "alloc") ("guide" "dep:doc-comment" "macros" "std") ("chrono_0_4" "dep:chrono_0_4") ("base64" "dep:base64" "alloc") ("alloc" "serde/alloc" "base64?/alloc" "chrono_0_4?/alloc" "hex?/alloc" "serde_json?/alloc" "time_0_3?/alloc")))) (r "1.60")))

(define-public crate-serde_with-2.1.0 (c (n "serde_with") (v "2.1.0") (d (list (d (n "base64") (r "^0.13.0") (o #t) (k 0)) (d (n "chrono_0_4") (r "^0.4.20") (f (quote ("serde"))) (o #t) (k 0) (p "chrono")) (d (n "doc-comment") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.3.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0.6") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (o #t) (k 0)) (d (n "indexmap_1") (r "^1.8") (f (quote ("serde-1"))) (o #t) (k 0) (p "indexmap")) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.6") (f (quote ("std"))) (k 2)) (d (n "rmp-serde") (r "^1.1.0") (d #t) (k 2)) (d (n "ron") (r "^0.8") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.122") (f (quote ("derive"))) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.45") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_test") (r "^1.0.124") (d #t) (k 2)) (d (n "serde_with_macros") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.2") (d #t) (k 2)) (d (n "time_0_3") (r "~0.3.11") (o #t) (k 0) (p "time")) (d (n "version-sync") (r "^0.9.1") (d #t) (k 2)))) (h "1vrfz0cjaq1mw2b1wivrqwr89yv08m6zmk6v2h8cs0j9h5d4mgr5") (f (quote (("indexmap" "indexmap_1") ("default" "std" "macros") ("chrono" "chrono_0_4")))) (s 2) (e (quote (("time_0_3" "dep:time_0_3") ("std" "alloc" "serde/std" "chrono_0_4?/clock" "chrono_0_4?/std" "indexmap_1?/std" "time_0_3?/serde-well-known" "time_0_3?/std") ("macros" "dep:serde_with_macros") ("json" "dep:serde_json" "alloc") ("indexmap_1" "dep:indexmap_1" "alloc") ("hex" "dep:hex" "alloc") ("guide" "dep:doc-comment" "macros" "std") ("chrono_0_4" "dep:chrono_0_4") ("base64" "dep:base64" "alloc") ("alloc" "serde/alloc" "base64?/alloc" "chrono_0_4?/alloc" "hex?/alloc" "serde_json?/alloc" "time_0_3?/alloc")))) (r "1.60")))

(define-public crate-serde_with-2.2.0 (c (n "serde_with") (v "2.2.0") (d (list (d (n "base64") (r "^0.13.0") (o #t) (k 0)) (d (n "chrono_0_4") (r "^0.4.20") (f (quote ("serde"))) (o #t) (k 0) (p "chrono")) (d (n "doc-comment") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.3.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0.6") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (o #t) (k 0)) (d (n "indexmap_1") (r "^1.8") (f (quote ("serde-1"))) (o #t) (k 0) (p "indexmap")) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.6") (f (quote ("std"))) (k 2)) (d (n "rmp-serde") (r "^1.1.0") (d #t) (k 2)) (d (n "ron") (r "^0.8") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.122") (f (quote ("derive"))) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.45") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_test") (r "^1.0.124") (d #t) (k 2)) (d (n "serde_with_macros") (r "=2.2.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.2") (d #t) (k 2)) (d (n "time_0_3") (r "~0.3.11") (o #t) (k 0) (p "time")) (d (n "version-sync") (r "^0.9.1") (d #t) (k 2)))) (h "174075pyhd9wkk5xm1xn5lav7129rbv3lgf9yhd3ipj6j4bh9n9h") (f (quote (("indexmap" "indexmap_1") ("default" "std" "macros") ("chrono" "chrono_0_4")))) (s 2) (e (quote (("time_0_3" "dep:time_0_3") ("std" "alloc" "serde/std" "chrono_0_4?/clock" "chrono_0_4?/std" "indexmap_1?/std" "time_0_3?/serde-well-known" "time_0_3?/std") ("macros" "dep:serde_with_macros") ("json" "dep:serde_json" "alloc") ("indexmap_1" "dep:indexmap_1" "alloc") ("hex" "dep:hex" "alloc") ("guide" "dep:doc-comment" "macros" "std") ("chrono_0_4" "dep:chrono_0_4") ("base64" "dep:base64" "alloc") ("alloc" "serde/alloc" "base64?/alloc" "chrono_0_4?/alloc" "hex?/alloc" "serde_json?/alloc" "time_0_3?/alloc")))) (r "1.60")))

(define-public crate-serde_with-2.3.0 (c (n "serde_with") (v "2.3.0") (d (list (d (n "base64") (r "^0.13.0") (o #t) (k 0)) (d (n "chrono_0_4") (r "^0.4.20") (f (quote ("serde"))) (o #t) (k 0) (p "chrono")) (d (n "doc-comment") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.3.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0.6") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (o #t) (k 0)) (d (n "indexmap_1") (r "^1.8") (f (quote ("serde-1"))) (o #t) (k 0) (p "indexmap")) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.6") (f (quote ("std"))) (k 2)) (d (n "rmp-serde") (r "^1.1.0") (d #t) (k 2)) (d (n "ron") (r "^0.8") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.122") (f (quote ("derive"))) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.45") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_test") (r "^1.0.124") (d #t) (k 2)) (d (n "serde_with_macros") (r "=2.3.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.2") (d #t) (k 2)) (d (n "time_0_3") (r "~0.3.11") (o #t) (k 0) (p "time")) (d (n "version-sync") (r "^0.9.1") (d #t) (k 2)))) (h "1dqs3mngdp2gniclm5lxmc1w64zm2gsrjmlh6mmj178n4yb8r93y") (f (quote (("indexmap" "indexmap_1") ("default" "std" "macros") ("chrono" "chrono_0_4")))) (s 2) (e (quote (("time_0_3" "dep:time_0_3") ("std" "alloc" "serde/std" "chrono_0_4?/clock" "chrono_0_4?/std" "indexmap_1?/std" "time_0_3?/serde-well-known" "time_0_3?/std") ("macros" "dep:serde_with_macros") ("json" "dep:serde_json" "alloc") ("indexmap_1" "dep:indexmap_1" "alloc") ("hex" "dep:hex" "alloc") ("guide" "dep:doc-comment" "macros" "std") ("chrono_0_4" "dep:chrono_0_4") ("base64" "dep:base64" "alloc") ("alloc" "serde/alloc" "base64?/alloc" "chrono_0_4?/alloc" "hex?/alloc" "serde_json?/alloc" "time_0_3?/alloc")))) (r "1.60")))

(define-public crate-serde_with-2.3.1 (c (n "serde_with") (v "2.3.1") (d (list (d (n "base64") (r "^0.13.0") (o #t) (k 0)) (d (n "chrono_0_4") (r "^0.4.20") (f (quote ("serde"))) (o #t) (k 0) (p "chrono")) (d (n "doc-comment") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.3.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0.6") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (o #t) (k 0)) (d (n "indexmap_1") (r "^1.8") (f (quote ("serde-1"))) (o #t) (k 0) (p "indexmap")) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.6") (f (quote ("std"))) (k 2)) (d (n "rmp-serde") (r "^1.1.0") (d #t) (k 2)) (d (n "ron") (r "^0.8") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.122") (f (quote ("derive"))) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.45") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_test") (r "^1.0.124") (d #t) (k 2)) (d (n "serde_with_macros") (r "=2.3.1") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.2") (d #t) (k 2)) (d (n "time_0_3") (r "~0.3.11") (o #t) (k 0) (p "time")) (d (n "version-sync") (r "^0.9.1") (d #t) (k 2)))) (h "1ksyi3i9xrhylai9bqgbd9v7q2mldzxz4r216ck8ip3jqpx6yic5") (f (quote (("indexmap" "indexmap_1") ("default" "std" "macros") ("chrono" "chrono_0_4")))) (s 2) (e (quote (("time_0_3" "dep:time_0_3") ("std" "alloc" "serde/std" "chrono_0_4?/clock" "chrono_0_4?/std" "indexmap_1?/std" "time_0_3?/serde-well-known" "time_0_3?/std") ("macros" "dep:serde_with_macros") ("json" "dep:serde_json" "alloc") ("indexmap_1" "dep:indexmap_1" "alloc") ("hex" "dep:hex" "alloc") ("guide" "dep:doc-comment" "macros" "std") ("chrono_0_4" "dep:chrono_0_4") ("base64" "dep:base64" "alloc") ("alloc" "serde/alloc" "base64?/alloc" "chrono_0_4?/alloc" "hex?/alloc" "serde_json?/alloc" "time_0_3?/alloc")))) (r "1.60")))

(define-public crate-serde_with-2.3.2 (c (n "serde_with") (v "2.3.2") (d (list (d (n "base64") (r "^0.13.0") (o #t) (k 0)) (d (n "chrono_0_4") (r "^0.4.20") (f (quote ("serde"))) (o #t) (k 0) (p "chrono")) (d (n "doc-comment") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.3.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0.6") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (o #t) (k 0)) (d (n "indexmap_1") (r "^1.8") (f (quote ("serde-1"))) (o #t) (k 0) (p "indexmap")) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.6") (f (quote ("std"))) (k 2)) (d (n "rmp-serde") (r "^1.1.0") (d #t) (k 2)) (d (n "ron") (r "^0.8") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.139") (f (quote ("derive"))) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.45") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_test") (r "^1.0.124") (d #t) (k 2)) (d (n "serde_with_macros") (r "=2.3.2") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.2") (d #t) (k 2)) (d (n "time_0_3") (r "~0.3.11") (o #t) (k 0) (p "time")) (d (n "version-sync") (r "^0.9.1") (d #t) (k 2)))) (h "1c6h1i4i9c78hhz114541ckpsgy1g1qg1v5bnxx4b4lvpz1vh6rk") (f (quote (("indexmap" "indexmap_1") ("default" "std" "macros") ("chrono" "chrono_0_4")))) (s 2) (e (quote (("time_0_3" "dep:time_0_3") ("std" "alloc" "serde/std" "chrono_0_4?/clock" "chrono_0_4?/std" "indexmap_1?/std" "time_0_3?/serde-well-known" "time_0_3?/std") ("macros" "dep:serde_with_macros") ("json" "dep:serde_json" "alloc") ("indexmap_1" "dep:indexmap_1" "alloc") ("hex" "dep:hex" "alloc") ("guide" "dep:doc-comment" "macros" "std") ("chrono_0_4" "dep:chrono_0_4") ("base64" "dep:base64" "alloc") ("alloc" "serde/alloc" "base64?/alloc" "chrono_0_4?/alloc" "hex?/alloc" "serde_json?/alloc" "time_0_3?/alloc")))) (r "1.60")))

(define-public crate-serde_with-2.3.3 (c (n "serde_with") (v "2.3.3") (d (list (d (n "base64") (r "^0.13.0") (o #t) (k 0)) (d (n "chrono_0_4") (r "^0.4.20") (f (quote ("serde"))) (o #t) (k 0) (p "chrono")) (d (n "doc-comment") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.3.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0.6") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (o #t) (k 0)) (d (n "indexmap_1") (r "^1.8") (f (quote ("serde-1"))) (o #t) (k 0) (p "indexmap")) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.8.1") (f (quote ("std"))) (k 2)) (d (n "rmp-serde") (r "^1.1.0") (d #t) (k 2)) (d (n "ron") (r "^0.8") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.157") (f (quote ("derive"))) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.45") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_test") (r "^1.0.124") (d #t) (k 2)) (d (n "serde_with_macros") (r "=2.3.3") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.2") (d #t) (k 2)) (d (n "time_0_3") (r "~0.3.11") (o #t) (k 0) (p "time")) (d (n "version-sync") (r "^0.9.1") (d #t) (k 2)))) (h "1gmgl2raxxnpvjgcvkrimgv55kbjywi5xbffc9rvb9s7q7973zq7") (f (quote (("indexmap" "indexmap_1") ("default" "std" "macros") ("chrono" "chrono_0_4")))) (s 2) (e (quote (("time_0_3" "dep:time_0_3") ("std" "alloc" "serde/std" "chrono_0_4?/clock" "chrono_0_4?/std" "indexmap_1?/std" "time_0_3?/serde-well-known" "time_0_3?/std") ("macros" "dep:serde_with_macros") ("json" "dep:serde_json" "alloc") ("indexmap_1" "dep:indexmap_1" "alloc") ("hex" "dep:hex" "alloc") ("guide" "dep:doc-comment" "macros" "std") ("chrono_0_4" "dep:chrono_0_4") ("base64" "dep:base64" "alloc") ("alloc" "serde/alloc" "base64?/alloc" "chrono_0_4?/alloc" "hex?/alloc" "serde_json?/alloc" "time_0_3?/alloc")))) (r "1.60")))

(define-public crate-serde_with-3.0.0 (c (n "serde_with") (v "3.0.0") (d (list (d (n "base64") (r "^0.21.0") (o #t) (k 0)) (d (n "chrono_0_4") (r "^0.4.20") (f (quote ("serde"))) (o #t) (k 0) (p "chrono")) (d (n "doc-comment") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.3.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0.6") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (o #t) (k 0)) (d (n "indexmap_1") (r "^1.8") (f (quote ("serde-1"))) (o #t) (k 0) (p "indexmap")) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.8.1") (f (quote ("std"))) (k 2)) (d (n "rmp-serde") (r "^1.1.0") (d #t) (k 2)) (d (n "ron") (r "^0.8") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.157") (f (quote ("derive"))) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.45") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_test") (r "^1.0.124") (d #t) (k 2)) (d (n "serde_with_macros") (r "=3.0.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.2") (d #t) (k 2)) (d (n "time_0_3") (r "~0.3.11") (o #t) (k 0) (p "time")) (d (n "version-sync") (r "^0.9.1") (d #t) (k 2)))) (h "04w5v0siychbb7l3anx57crvv9m3w866ckwjhkq5nf1wdsmdh0lz") (f (quote (("indexmap" "indexmap_1") ("default" "std" "macros") ("chrono" "chrono_0_4")))) (s 2) (e (quote (("time_0_3" "dep:time_0_3") ("std" "alloc" "serde/std" "chrono_0_4?/clock" "chrono_0_4?/std" "indexmap_1?/std" "time_0_3?/serde-well-known" "time_0_3?/std") ("macros" "dep:serde_with_macros") ("json" "dep:serde_json" "alloc") ("indexmap_1" "dep:indexmap_1" "alloc") ("hex" "dep:hex" "alloc") ("guide" "dep:doc-comment" "macros" "std") ("chrono_0_4" "dep:chrono_0_4") ("base64" "dep:base64" "alloc") ("alloc" "serde/alloc" "base64?/alloc" "chrono_0_4?/alloc" "hex?/alloc" "serde_json?/alloc" "time_0_3?/alloc")))) (r "1.60")))

(define-public crate-serde_with-3.1.0 (c (n "serde_with") (v "3.1.0") (d (list (d (n "base64") (r "^0.21.0") (o #t) (k 0)) (d (n "chrono_0_4") (r "^0.4.20") (f (quote ("serde"))) (o #t) (k 0) (p "chrono")) (d (n "doc-comment") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.3.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0.6") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (o #t) (k 0)) (d (n "indexmap_1") (r "^1.8") (f (quote ("serde-1"))) (o #t) (k 0) (p "indexmap")) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.9.1") (f (quote ("std"))) (k 2)) (d (n "rmp-serde") (r "^1.1.0") (d #t) (k 2)) (d (n "ron") (r "^0.8") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.157") (f (quote ("derive"))) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.45") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_test") (r "^1.0.124") (d #t) (k 2)) (d (n "serde_with_macros") (r "=3.1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.2") (d #t) (k 2)) (d (n "time_0_3") (r "~0.3.11") (o #t) (k 0) (p "time")) (d (n "version-sync") (r "^0.9.1") (d #t) (k 2)) (d (n "xml-rs") (r "=0.8.14") (d #t) (k 2)))) (h "1qw0w66arplr1h0dna7z31fnif8smn3l2kzqxjr37vc3pjapvr11") (f (quote (("indexmap" "indexmap_1") ("default" "std" "macros") ("chrono" "chrono_0_4")))) (s 2) (e (quote (("time_0_3" "dep:time_0_3") ("std" "alloc" "serde/std" "chrono_0_4?/clock" "chrono_0_4?/std" "indexmap_1?/std" "time_0_3?/serde-well-known" "time_0_3?/std") ("macros" "dep:serde_with_macros") ("json" "dep:serde_json" "alloc") ("indexmap_1" "dep:indexmap_1" "alloc") ("hex" "dep:hex" "alloc") ("guide" "dep:doc-comment" "macros" "std") ("chrono_0_4" "dep:chrono_0_4") ("base64" "dep:base64" "alloc") ("alloc" "serde/alloc" "base64?/alloc" "chrono_0_4?/alloc" "hex?/alloc" "serde_json?/alloc" "time_0_3?/alloc")))) (r "1.61")))

(define-public crate-serde_with-3.2.0 (c (n "serde_with") (v "3.2.0") (d (list (d (n "base64") (r "^0.21.0") (o #t) (k 0)) (d (n "chrono_0_4") (r "^0.4.20") (f (quote ("serde"))) (o #t) (k 0) (p "chrono")) (d (n "doc-comment") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.3.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0.6") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (o #t) (k 0)) (d (n "indexmap_1") (r "^1.8") (f (quote ("serde-1"))) (o #t) (k 0) (p "indexmap")) (d (n "indexmap_2") (r "^2.0") (f (quote ("serde"))) (o #t) (k 0) (p "indexmap")) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.9.1") (f (quote ("std"))) (k 2)) (d (n "rmp-serde") (r "^1.1.0") (d #t) (k 2)) (d (n "ron") (r "^0.8") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.157") (f (quote ("derive"))) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.45") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_test") (r "^1.0.124") (d #t) (k 2)) (d (n "serde_with_macros") (r "=3.2.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.2") (d #t) (k 2)) (d (n "time_0_3") (r "~0.3.11") (o #t) (k 0) (p "time")) (d (n "version-sync") (r "^0.9.1") (d #t) (k 2)) (d (n "xml-rs") (r "=0.8.14") (d #t) (k 2)))) (h "0jgxmhak3ksqp3p56dcqhxcfbk4aci7a5kn1f7z2x7ivk97za0hl") (f (quote (("indexmap" "indexmap_1") ("default" "std" "macros") ("chrono" "chrono_0_4")))) (s 2) (e (quote (("time_0_3" "dep:time_0_3") ("std" "alloc" "serde/std" "chrono_0_4?/clock" "chrono_0_4?/std" "indexmap_1?/std" "indexmap_2?/std" "time_0_3?/serde-well-known" "time_0_3?/std") ("macros" "dep:serde_with_macros") ("json" "dep:serde_json" "alloc") ("indexmap_2" "dep:indexmap_2" "alloc") ("indexmap_1" "dep:indexmap_1" "alloc") ("hex" "dep:hex" "alloc") ("guide" "dep:doc-comment" "macros" "std") ("chrono_0_4" "dep:chrono_0_4") ("base64" "dep:base64" "alloc") ("alloc" "serde/alloc" "base64?/alloc" "chrono_0_4?/alloc" "hex?/alloc" "serde_json?/alloc" "time_0_3?/alloc")))) (r "1.64")))

(define-public crate-serde_with-3.3.0 (c (n "serde_with") (v "3.3.0") (d (list (d (n "base64") (r "^0.21.0") (o #t) (k 0)) (d (n "chrono_0_4") (r "^0.4.20") (f (quote ("serde"))) (o #t) (k 0) (p "chrono")) (d (n "doc-comment") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "document-features") (r "^0.2.7") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.3.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0.6") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hashbrown_0_14") (r "^0.14.0") (f (quote ("serde"))) (o #t) (k 0) (p "hashbrown")) (d (n "hex") (r "^0.4.3") (o #t) (k 0)) (d (n "indexmap_1") (r "^1.8") (f (quote ("serde-1"))) (o #t) (k 0) (p "indexmap")) (d (n "indexmap_2") (r "^2.0") (f (quote ("serde"))) (o #t) (k 0) (p "indexmap")) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.9.1") (f (quote ("std"))) (k 2)) (d (n "rmp-serde") (r "^1.1.0") (d #t) (k 2)) (d (n "ron") (r "^0.8") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.157") (f (quote ("derive"))) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.45") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_test") (r "^1.0.124") (d #t) (k 2)) (d (n "serde_with_macros") (r "=3.3.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.2") (d #t) (k 2)) (d (n "time_0_3") (r "~0.3.11") (o #t) (k 0) (p "time")) (d (n "version-sync") (r "^0.9.1") (d #t) (k 2)) (d (n "xml-rs") (r "=0.8.14") (d #t) (k 2)))) (h "0dvjs3mbr2z3vz16k19m3azfmcsh6nlq0x1v6j7hii427mmb38qw") (f (quote (("indexmap" "indexmap_1") ("default" "std" "macros") ("chrono" "chrono_0_4")))) (s 2) (e (quote (("time_0_3" "dep:time_0_3") ("std" "alloc" "serde/std" "chrono_0_4?/clock" "chrono_0_4?/std" "indexmap_1?/std" "indexmap_2?/std" "time_0_3?/serde-well-known" "time_0_3?/std") ("macros" "dep:serde_with_macros") ("json" "dep:serde_json" "alloc") ("indexmap_2" "dep:indexmap_2" "alloc") ("indexmap_1" "dep:indexmap_1" "alloc") ("hex" "dep:hex" "alloc") ("hashbrown_0_14" "dep:hashbrown_0_14" "alloc") ("guide" "dep:doc-comment" "dep:document-features" "macros" "std") ("chrono_0_4" "dep:chrono_0_4") ("base64" "dep:base64" "alloc") ("alloc" "serde/alloc" "base64?/alloc" "chrono_0_4?/alloc" "hex?/alloc" "serde_json?/alloc" "time_0_3?/alloc")))) (r "1.64")))

(define-public crate-serde_with-3.4.0 (c (n "serde_with") (v "3.4.0") (d (list (d (n "base64") (r "^0.21.0") (o #t) (k 0)) (d (n "chrono_0_4") (r "^0.4.20") (f (quote ("serde"))) (o #t) (k 0) (p "chrono")) (d (n "doc-comment") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "document-features") (r "^0.2.7") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.3.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0.6") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hashbrown_0_14") (r "^0.14.0") (f (quote ("serde"))) (o #t) (k 0) (p "hashbrown")) (d (n "hex") (r "^0.4.3") (o #t) (k 0)) (d (n "indexmap_1") (r "^1.8") (f (quote ("serde-1"))) (o #t) (k 0) (p "indexmap")) (d (n "indexmap_2") (r "^2.0") (f (quote ("serde"))) (o #t) (k 0) (p "indexmap")) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.9.1") (f (quote ("std"))) (k 2)) (d (n "rmp-serde") (r "^1.1.0") (d #t) (k 2)) (d (n "ron") (r "^0.8") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.45") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_test") (r "^1.0.124") (d #t) (k 2)) (d (n "serde_with_macros") (r "=3.4.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.2") (d #t) (k 2)) (d (n "time_0_3") (r "~0.3.11") (o #t) (k 0) (p "time")) (d (n "version-sync") (r "^0.9.1") (d #t) (k 2)) (d (n "xml-rs") (r "=0.8.14") (d #t) (k 2)))) (h "08sw83b6hfwzylr0waf4mc29h6fxnb02g7vkwbkjjyhvrin27kb4") (f (quote (("indexmap" "indexmap_1") ("default" "std" "macros") ("chrono" "chrono_0_4")))) (s 2) (e (quote (("time_0_3" "dep:time_0_3") ("std" "alloc" "serde/std" "chrono_0_4?/clock" "chrono_0_4?/std" "indexmap_1?/std" "indexmap_2?/std" "time_0_3?/serde-well-known" "time_0_3?/std") ("macros" "dep:serde_with_macros") ("json" "dep:serde_json" "alloc") ("indexmap_2" "dep:indexmap_2" "alloc") ("indexmap_1" "dep:indexmap_1" "alloc") ("hex" "dep:hex" "alloc") ("hashbrown_0_14" "dep:hashbrown_0_14" "alloc") ("guide" "dep:doc-comment" "dep:document-features" "macros" "std") ("chrono_0_4" "dep:chrono_0_4") ("base64" "dep:base64" "alloc") ("alloc" "serde/alloc" "base64?/alloc" "chrono_0_4?/alloc" "hex?/alloc" "serde_json?/alloc" "time_0_3?/alloc")))) (r "1.64")))

(define-public crate-serde_with-3.5.0 (c (n "serde_with") (v "3.5.0") (d (list (d (n "base64") (r "^0.21.0") (o #t) (k 0)) (d (n "chrono_0_4") (r "^0.4.20") (f (quote ("serde"))) (o #t) (k 0) (p "chrono")) (d (n "doc-comment") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "document-features") (r "^0.2.7") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.3.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0.6") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hashbrown_0_14") (r "^0.14.0") (f (quote ("serde"))) (o #t) (k 0) (p "hashbrown")) (d (n "hex") (r "^0.4.3") (o #t) (k 0)) (d (n "indexmap_1") (r "^1.8") (f (quote ("serde-1"))) (o #t) (k 0) (p "indexmap")) (d (n "indexmap_2") (r "^2.0") (f (quote ("serde"))) (o #t) (k 0) (p "indexmap")) (d (n "jsonschema") (r "^0.17.1") (f (quote ("resolve-file"))) (k 2)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.9.1") (f (quote ("std"))) (k 2)) (d (n "rmp-serde") (r "^1.1.0") (d #t) (k 2)) (d (n "ron") (r "^0.8") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.0") (d #t) (k 2)) (d (n "schemars_0_8") (r "^0.8.16") (o #t) (k 0) (p "schemars")) (d (n "schemars_0_8") (r "^0.8.16") (d #t) (k 2) (p "schemars")) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.45") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_test") (r "^1.0.124") (d #t) (k 2)) (d (n "serde_with_macros") (r "=3.5.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.2") (d #t) (k 2)) (d (n "time_0_3") (r "~0.3.11") (o #t) (k 0) (p "time")) (d (n "version-sync") (r "^0.9.1") (d #t) (k 2)) (d (n "xml-rs") (r "=0.8.14") (d #t) (k 2)))) (h "0gyk12g3x501yikxmkffp19a5slmdky47srabg1633s17qdkm37m") (f (quote (("indexmap" "indexmap_1") ("default" "std" "macros") ("chrono" "chrono_0_4")))) (s 2) (e (quote (("time_0_3" "dep:time_0_3") ("std" "alloc" "serde/std" "chrono_0_4?/clock" "chrono_0_4?/std" "indexmap_1?/std" "indexmap_2?/std" "time_0_3?/serde-well-known" "time_0_3?/std") ("schemars_0_8" "dep:schemars_0_8" "std" "serde_with_macros?/schemars_0_8") ("macros" "dep:serde_with_macros") ("json" "dep:serde_json" "alloc") ("indexmap_2" "dep:indexmap_2" "alloc") ("indexmap_1" "dep:indexmap_1" "alloc") ("hex" "dep:hex" "alloc") ("hashbrown_0_14" "dep:hashbrown_0_14" "alloc") ("guide" "dep:doc-comment" "dep:document-features" "macros" "std") ("chrono_0_4" "dep:chrono_0_4") ("base64" "dep:base64" "alloc") ("alloc" "serde/alloc" "base64?/alloc" "chrono_0_4?/alloc" "hex?/alloc" "serde_json?/alloc" "time_0_3?/alloc")))) (r "1.64")))

(define-public crate-serde_with-3.5.1 (c (n "serde_with") (v "3.5.1") (d (list (d (n "base64") (r "^0.21.0") (o #t) (k 0)) (d (n "chrono_0_4") (r "^0.4.20") (f (quote ("serde"))) (o #t) (k 0) (p "chrono")) (d (n "doc-comment") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "document-features") (r "^0.2.7") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.3.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0.6") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hashbrown_0_14") (r "^0.14.0") (f (quote ("serde"))) (o #t) (k 0) (p "hashbrown")) (d (n "hex") (r "^0.4.3") (o #t) (k 0)) (d (n "indexmap_1") (r "^1.8") (f (quote ("serde-1"))) (o #t) (k 0) (p "indexmap")) (d (n "indexmap_2") (r "^2.0") (f (quote ("serde"))) (o #t) (k 0) (p "indexmap")) (d (n "jsonschema") (r "^0.17.1") (f (quote ("resolve-file"))) (k 2)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.9.1") (f (quote ("std"))) (k 2)) (d (n "rmp-serde") (r "^1.1.0") (d #t) (k 2)) (d (n "ron") (r "^0.8") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.0") (d #t) (k 2)) (d (n "schemars_0_8") (r "^0.8.16") (o #t) (k 0) (p "schemars")) (d (n "schemars_0_8") (r "^0.8.16") (d #t) (k 2) (p "schemars")) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.45") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_test") (r "^1.0.124") (d #t) (k 2)) (d (n "serde_with_macros") (r "=3.5.1") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.2") (d #t) (k 2)) (d (n "time_0_3") (r "~0.3.11") (o #t) (k 0) (p "time")) (d (n "version-sync") (r "^0.9.1") (d #t) (k 2)) (d (n "xml-rs") (r "=0.8.14") (d #t) (k 2)))) (h "030lwrqf57ib5vmzdiaw4rr3ndibzrw4pz9fn9srhj0an2vgvjgm") (f (quote (("indexmap" "indexmap_1") ("default" "std" "macros") ("chrono" "chrono_0_4")))) (s 2) (e (quote (("time_0_3" "dep:time_0_3") ("std" "alloc" "serde/std" "chrono_0_4?/clock" "chrono_0_4?/std" "indexmap_1?/std" "indexmap_2?/std" "time_0_3?/serde-well-known" "time_0_3?/std") ("schemars_0_8" "dep:schemars_0_8" "std" "serde_with_macros?/schemars_0_8") ("macros" "dep:serde_with_macros") ("json" "dep:serde_json" "alloc") ("indexmap_2" "dep:indexmap_2" "alloc") ("indexmap_1" "dep:indexmap_1" "alloc") ("hex" "dep:hex" "alloc") ("hashbrown_0_14" "dep:hashbrown_0_14" "alloc") ("guide" "dep:doc-comment" "dep:document-features" "macros" "std") ("chrono_0_4" "dep:chrono_0_4") ("base64" "dep:base64" "alloc") ("alloc" "serde/alloc" "base64?/alloc" "chrono_0_4?/alloc" "hex?/alloc" "serde_json?/alloc" "time_0_3?/alloc")))) (r "1.64")))

(define-public crate-serde_with-3.6.0 (c (n "serde_with") (v "3.6.0") (d (list (d (n "base64") (r "^0.21.0") (o #t) (k 0)) (d (n "chrono_0_4") (r "^0.4.20") (f (quote ("serde"))) (o #t) (k 0) (p "chrono")) (d (n "doc-comment") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "document-features") (r "^0.2.7") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.3.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0.6") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hashbrown_0_14") (r "^0.14.0") (f (quote ("serde"))) (o #t) (k 0) (p "hashbrown")) (d (n "hex") (r "^0.4.3") (o #t) (k 0)) (d (n "indexmap_1") (r "^1.8") (f (quote ("serde-1"))) (o #t) (k 0) (p "indexmap")) (d (n "indexmap_2") (r "^2.0") (f (quote ("serde"))) (o #t) (k 0) (p "indexmap")) (d (n "jsonschema") (r "^0.17.1") (f (quote ("resolve-file"))) (k 2)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (f (quote ("std"))) (k 2)) (d (n "rmp-serde") (r "^1.1.0") (d #t) (k 2)) (d (n "ron") (r "^0.8") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.0") (d #t) (k 2)) (d (n "schemars_0_8") (r "^0.8.16") (o #t) (k 0) (p "schemars")) (d (n "schemars_0_8") (r "^0.8.16") (d #t) (k 2) (p "schemars")) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.45") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_test") (r "^1.0.124") (d #t) (k 2)) (d (n "serde_with_macros") (r "=3.6.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.2") (d #t) (k 2)) (d (n "time_0_3") (r "~0.3.11") (o #t) (k 0) (p "time")) (d (n "version-sync") (r "^0.9.1") (d #t) (k 2)) (d (n "xml-rs") (r "=0.8.14") (d #t) (k 2)))) (h "10g9jnv1x5jw2q1nh207fbrsyd72n3g1hvdp8m7ncs2s5ikd23hv") (f (quote (("indexmap" "indexmap_1") ("default" "std" "macros") ("chrono" "chrono_0_4")))) (s 2) (e (quote (("time_0_3" "dep:time_0_3") ("std" "alloc" "serde/std" "chrono_0_4?/clock" "chrono_0_4?/std" "indexmap_1?/std" "indexmap_2?/std" "time_0_3?/serde-well-known" "time_0_3?/std") ("schemars_0_8" "dep:schemars_0_8" "std" "serde_with_macros?/schemars_0_8") ("macros" "dep:serde_with_macros") ("json" "dep:serde_json" "alloc") ("indexmap_2" "dep:indexmap_2" "alloc") ("indexmap_1" "dep:indexmap_1" "alloc") ("hex" "dep:hex" "alloc") ("hashbrown_0_14" "dep:hashbrown_0_14" "alloc") ("guide" "dep:doc-comment" "dep:document-features" "macros" "std") ("chrono_0_4" "dep:chrono_0_4") ("base64" "dep:base64" "alloc") ("alloc" "serde/alloc" "base64?/alloc" "chrono_0_4?/alloc" "hex?/alloc" "serde_json?/alloc" "time_0_3?/alloc")))) (r "1.65")))

(define-public crate-serde_with-3.6.1 (c (n "serde_with") (v "3.6.1") (d (list (d (n "base64") (r "^0.21.0") (o #t) (k 0)) (d (n "chrono_0_4") (r "^0.4.20") (f (quote ("serde"))) (o #t) (k 0) (p "chrono")) (d (n "doc-comment") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "document-features") (r "^0.2.7") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.3.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0.6") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hashbrown_0_14") (r "^0.14.0") (f (quote ("serde"))) (o #t) (k 0) (p "hashbrown")) (d (n "hex") (r "^0.4.3") (o #t) (k 0)) (d (n "indexmap_1") (r "^1.8") (f (quote ("serde-1"))) (o #t) (k 0) (p "indexmap")) (d (n "indexmap_2") (r "^2.0") (f (quote ("serde"))) (o #t) (k 0) (p "indexmap")) (d (n "jsonschema") (r "^0.17.1") (f (quote ("resolve-file"))) (k 2)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (f (quote ("std"))) (k 2)) (d (n "rmp-serde") (r "^1.1.0") (d #t) (k 2)) (d (n "ron") (r "^0.8") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.0") (d #t) (k 2)) (d (n "schemars_0_8") (r "^0.8.16") (o #t) (k 0) (p "schemars")) (d (n "schemars_0_8") (r "^0.8.16") (d #t) (k 2) (p "schemars")) (d (n "serde") (r "^1.0.152") (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (k 2)) (d (n "serde-xml-rs") (r "^0.6.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.152") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.45") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_test") (r "^1.0.124") (d #t) (k 2)) (d (n "serde_with_macros") (r "=3.6.1") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.2") (d #t) (k 2)) (d (n "time_0_3") (r "~0.3.11") (o #t) (k 0) (p "time")) (d (n "version-sync") (r "^0.9.1") (d #t) (k 2)) (d (n "xml-rs") (r "=0.8.14") (d #t) (k 2)))) (h "0w6j1ch2p9cwxaaiphx4rbkz4vb04q78wasv5wiyqhfqgfcngl8m") (f (quote (("indexmap" "indexmap_1") ("default" "std" "macros") ("chrono" "chrono_0_4")))) (s 2) (e (quote (("time_0_3" "dep:time_0_3") ("std" "alloc" "serde/std" "chrono_0_4?/clock" "chrono_0_4?/std" "indexmap_1?/std" "indexmap_2?/std" "time_0_3?/serde-well-known" "time_0_3?/std") ("schemars_0_8" "dep:schemars_0_8" "std" "serde_with_macros?/schemars_0_8") ("macros" "dep:serde_with_macros") ("json" "dep:serde_json" "alloc") ("indexmap_2" "dep:indexmap_2" "alloc") ("indexmap_1" "dep:indexmap_1" "alloc") ("hex" "dep:hex" "alloc") ("hashbrown_0_14" "dep:hashbrown_0_14" "alloc") ("guide" "dep:doc-comment" "dep:document-features" "macros" "std") ("chrono_0_4" "dep:chrono_0_4") ("base64" "dep:base64" "alloc") ("alloc" "serde/alloc" "base64?/alloc" "chrono_0_4?/alloc" "hex?/alloc" "serde_json?/alloc" "time_0_3?/alloc")))) (r "1.65")))

(define-public crate-serde_with-3.7.0 (c (n "serde_with") (v "3.7.0") (d (list (d (n "base64") (r "^0.21.0") (o #t) (k 0)) (d (n "chrono_0_4") (r "^0.4.20") (f (quote ("serde"))) (o #t) (k 0) (p "chrono")) (d (n "doc-comment") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "document-features") (r "^0.2.7") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.3.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0.6") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hashbrown_0_14") (r "^0.14.0") (f (quote ("serde"))) (o #t) (k 0) (p "hashbrown")) (d (n "hex") (r "^0.4.3") (o #t) (k 0)) (d (n "indexmap_1") (r "^1.8") (f (quote ("serde-1"))) (o #t) (k 0) (p "indexmap")) (d (n "indexmap_2") (r "^2.0") (f (quote ("serde"))) (o #t) (k 0) (p "indexmap")) (d (n "jsonschema") (r "^0.17.1") (f (quote ("resolve-file"))) (k 2)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (f (quote ("std"))) (k 2)) (d (n "rmp-serde") (r "^1.1.0") (d #t) (k 2)) (d (n "ron") (r "^0.8") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.0") (d #t) (k 2)) (d (n "schemars_0_8") (r "^0.8.16") (o #t) (k 0) (p "schemars")) (d (n "schemars_0_8") (r "^0.8.16") (d #t) (k 2) (p "schemars")) (d (n "serde") (r "^1.0.152") (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (k 2)) (d (n "serde-xml-rs") (r "^0.6.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.152") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.45") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_test") (r "^1.0.124") (d #t) (k 2)) (d (n "serde_with_macros") (r "=3.7.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.2") (d #t) (k 2)) (d (n "time_0_3") (r "~0.3.11") (o #t) (k 0) (p "time")) (d (n "version-sync") (r "^0.9.1") (d #t) (k 2)) (d (n "xml-rs") (r "=0.8.14") (d #t) (k 2)))) (h "16jn72cij27fxjafcsma1z5p587xkk8wqhp2yv98zy5vc7iv107f") (f (quote (("indexmap" "indexmap_1") ("default" "std" "macros") ("chrono" "chrono_0_4")))) (s 2) (e (quote (("time_0_3" "dep:time_0_3") ("std" "alloc" "serde/std" "chrono_0_4?/clock" "chrono_0_4?/std" "indexmap_1?/std" "indexmap_2?/std" "time_0_3?/serde-well-known" "time_0_3?/std") ("schemars_0_8" "dep:schemars_0_8" "std" "serde_with_macros?/schemars_0_8") ("macros" "dep:serde_with_macros") ("json" "dep:serde_json" "alloc") ("indexmap_2" "dep:indexmap_2" "alloc") ("indexmap_1" "dep:indexmap_1" "alloc") ("hex" "dep:hex" "alloc") ("hashbrown_0_14" "dep:hashbrown_0_14" "alloc") ("guide" "dep:doc-comment" "dep:document-features" "macros" "std") ("chrono_0_4" "dep:chrono_0_4") ("base64" "dep:base64" "alloc") ("alloc" "serde/alloc" "base64?/alloc" "chrono_0_4?/alloc" "hex?/alloc" "serde_json?/alloc" "time_0_3?/alloc")))) (r "1.65")))

(define-public crate-serde_with-3.8.0 (c (n "serde_with") (v "3.8.0") (d (list (d (n "base64") (r "^0.22.0") (o #t) (k 0)) (d (n "chrono_0_4") (r "^0.4.20") (f (quote ("serde"))) (o #t) (k 0) (p "chrono")) (d (n "doc-comment") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "document-features") (r "^0.2.7") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.5.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0.6") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hashbrown_0_14") (r "^0.14.0") (f (quote ("serde"))) (o #t) (k 0) (p "hashbrown")) (d (n "hex") (r "^0.4.3") (o #t) (k 0)) (d (n "indexmap_1") (r "^1.8") (f (quote ("serde-1"))) (o #t) (k 0) (p "indexmap")) (d (n "indexmap_2") (r "^2.0") (f (quote ("serde"))) (o #t) (k 0) (p "indexmap")) (d (n "jsonschema") (r "^0.17.1") (f (quote ("resolve-file"))) (k 2)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (f (quote ("std"))) (k 2)) (d (n "rmp-serde") (r "^1.1.0") (d #t) (k 2)) (d (n "ron") (r "^0.8") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.0") (d #t) (k 2)) (d (n "schemars_0_8") (r "^0.8.16") (o #t) (k 0) (p "schemars")) (d (n "schemars_0_8") (r "^0.8.16") (d #t) (k 2) (p "schemars")) (d (n "serde") (r "^1.0.152") (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (k 2)) (d (n "serde-xml-rs") (r "^0.6.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.152") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.45") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_test") (r "^1.0.124") (d #t) (k 2)) (d (n "serde_with_macros") (r "=3.8.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.2") (d #t) (k 2)) (d (n "time_0_3") (r "~0.3.11") (o #t) (k 0) (p "time")) (d (n "version-sync") (r "^0.9.1") (d #t) (k 2)))) (h "1c2731c50lcbxms2fah221aj41nbby4vvz386zqmfs0xdplzi19c") (f (quote (("indexmap" "indexmap_1") ("default" "std" "macros") ("chrono" "chrono_0_4")))) (s 2) (e (quote (("time_0_3" "dep:time_0_3") ("std" "alloc" "serde/std" "chrono_0_4?/clock" "chrono_0_4?/std" "indexmap_1?/std" "indexmap_2?/std" "time_0_3?/serde-well-known" "time_0_3?/std") ("schemars_0_8" "dep:schemars_0_8" "std" "serde_with_macros?/schemars_0_8") ("macros" "dep:serde_with_macros") ("json" "dep:serde_json" "alloc") ("indexmap_2" "dep:indexmap_2" "alloc") ("indexmap_1" "dep:indexmap_1" "alloc") ("hex" "dep:hex" "alloc") ("hashbrown_0_14" "dep:hashbrown_0_14" "alloc") ("guide" "dep:doc-comment" "dep:document-features" "macros" "std") ("chrono_0_4" "dep:chrono_0_4") ("base64" "dep:base64" "alloc") ("alloc" "serde/alloc" "base64?/alloc" "chrono_0_4?/alloc" "hex?/alloc" "serde_json?/alloc" "time_0_3?/alloc")))) (r "1.65")))

(define-public crate-serde_with-3.8.1 (c (n "serde_with") (v "3.8.1") (d (list (d (n "base64") (r "^0.22.0") (o #t) (k 0)) (d (n "chrono_0_4") (r "^0.4.20") (f (quote ("serde"))) (o #t) (k 0) (p "chrono")) (d (n "doc-comment") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "document-features") (r "^0.2.7") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.5.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0.6") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hashbrown_0_14") (r "^0.14.0") (f (quote ("serde"))) (o #t) (k 0) (p "hashbrown")) (d (n "hex") (r "^0.4.3") (o #t) (k 0)) (d (n "indexmap_1") (r "^1.8") (f (quote ("serde-1"))) (o #t) (k 0) (p "indexmap")) (d (n "indexmap_2") (r "^2.0") (f (quote ("serde"))) (o #t) (k 0) (p "indexmap")) (d (n "jsonschema") (r "^0.17.1") (f (quote ("resolve-file"))) (k 2)) (d (n "mime") (r "^0.3.16") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (f (quote ("std"))) (k 2)) (d (n "rmp-serde") (r "^1.1.0") (d #t) (k 2)) (d (n "ron") (r "^0.8") (d #t) (k 2)) (d (n "rustversion") (r "^1.0.0") (d #t) (k 2)) (d (n "schemars_0_8") (r "^0.8.16") (o #t) (k 0) (p "schemars")) (d (n "schemars_0_8") (r "^0.8.16") (d #t) (k 2) (p "schemars")) (d (n "serde") (r "^1.0.152") (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (k 2)) (d (n "serde-xml-rs") (r "^0.6.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.152") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.45") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde_test") (r "^1.0.124") (d #t) (k 2)) (d (n "serde_with_macros") (r "=3.8.1") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.2") (d #t) (k 2)) (d (n "time_0_3") (r "~0.3.11") (o #t) (k 0) (p "time")) (d (n "version-sync") (r "^0.9.1") (d #t) (k 2)))) (h "082a7j42h79rs2jzafw67lay0497hnip56fdxfjxaj81mg987m0a") (f (quote (("indexmap" "indexmap_1") ("default" "std" "macros") ("chrono" "chrono_0_4")))) (s 2) (e (quote (("time_0_3" "dep:time_0_3") ("std" "alloc" "serde/std" "chrono_0_4?/clock" "chrono_0_4?/std" "indexmap_1?/std" "indexmap_2?/std" "time_0_3?/serde-well-known" "time_0_3?/std") ("schemars_0_8" "dep:schemars_0_8" "std" "serde_with_macros?/schemars_0_8") ("macros" "dep:serde_with_macros") ("json" "dep:serde_json" "alloc") ("indexmap_2" "dep:indexmap_2" "alloc") ("indexmap_1" "dep:indexmap_1" "alloc") ("hex" "dep:hex" "alloc") ("hashbrown_0_14" "dep:hashbrown_0_14" "alloc") ("guide" "dep:doc-comment" "dep:document-features" "macros" "std") ("chrono_0_4" "dep:chrono_0_4") ("base64" "dep:base64" "alloc") ("alloc" "serde/alloc" "base64?/alloc" "chrono_0_4?/alloc" "hex?/alloc" "serde_json?/alloc" "time_0_3?/alloc")))) (r "1.65")))

