(define-module (crates-io se rd serde_qs_ext) #:use-module (crates-io))

(define-public crate-serde_qs_ext-0.12.0 (c (n "serde_qs_ext") (v "0.12.0") (d (list (d (n "actix-web2") (r "^2.0") (o #t) (k 0) (p "actix-web")) (d (n "actix-web3") (r "^3.3") (o #t) (k 0) (p "actix-web")) (d (n "actix-web4") (r "^4.0") (o #t) (k 0) (p "actix-web")) (d (n "axum-framework") (r "^0.6") (o #t) (k 0) (p "axum")) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "csv") (r "^1.1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 2)) (d (n "serde_with") (r "^2.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "warp-framework") (r "^0.3") (o #t) (k 0) (p "warp")))) (h "0n6fn0y6vmbbcwpfr5yv27cj8iri9457xz42208n8ryi18kxyddm") (f (quote (("warp" "futures" "tracing" "warp-framework") ("default") ("axum" "axum-framework" "futures") ("actix4" "actix-web4" "futures") ("actix3" "actix-web3" "futures") ("actix2" "actix-web2" "futures") ("actix")))) (r "1.36")))

