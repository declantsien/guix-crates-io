(define-module (crates-io se qr seqrepo) #:use-module (crates-io))

(define-public crate-seqrepo-0.1.2 (c (n "seqrepo") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.69") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "clap") (r "^4.1.4") (f (quote ("derive" "env"))) (o #t) (d #t) (k 0)) (d (n "clap-verbosity-flag") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "noodles") (r "^0.32.0") (f (quote ("bgzf" "fasta" "core"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rusqlite") (r "^0.28.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive" "strum_macros"))) (d #t) (k 0)) (d (n "textwrap") (r "^0.16.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (o #t) (d #t) (k 0)))) (h "1df5fb761rr7fy3anzcvfgshkgc14kh8wca6ardlcq004p2z5w8x") (f (quote (("full" "cli")))) (s 2) (e (quote (("cli" "dep:clap" "dep:clap-verbosity-flag" "dep:tracing-subscriber"))))))

(define-public crate-seqrepo-0.2.0 (c (n "seqrepo") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.69") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "clap") (r "^4.1.4") (f (quote ("derive" "env"))) (o #t) (d #t) (k 0)) (d (n "clap-verbosity-flag") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "noodles") (r "^0.32.0") (f (quote ("bgzf" "fasta" "core"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rusqlite") (r "^0.28.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive" "strum_macros"))) (d #t) (k 0)) (d (n "temp_testdir") (r "^0.2.3") (d #t) (k 2)) (d (n "textwrap") (r "^0.16.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (o #t) (d #t) (k 0)))) (h "0pgk3z6910711lyb9b0rkbh5rxmqi2a3d6z06mnj92819p1h3vbd") (f (quote (("full" "cli")))) (s 2) (e (quote (("cli" "dep:clap" "dep:clap-verbosity-flag" "dep:tracing-subscriber"))))))

(define-public crate-seqrepo-0.2.1 (c (n "seqrepo") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0.69") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "clap") (r "^4.1.4") (f (quote ("derive" "env"))) (o #t) (d #t) (k 0)) (d (n "clap-verbosity-flag") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "noodles") (r "^0.32.0") (f (quote ("bgzf" "fasta" "core"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rusqlite") (r "^0.28.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive" "strum_macros"))) (d #t) (k 0)) (d (n "temp_testdir") (r "^0.2.3") (d #t) (k 2)) (d (n "textwrap") (r "^0.16.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (o #t) (d #t) (k 0)))) (h "1r20n03hnhiksfgc5lgcx65vrz4hkpmhkqxcx36ydznpg2yn3p6s") (f (quote (("full" "cli")))) (s 2) (e (quote (("cli" "dep:clap" "dep:clap-verbosity-flag" "dep:tracing-subscriber"))))))

(define-public crate-seqrepo-0.2.2 (c (n "seqrepo") (v "0.2.2") (d (list (d (n "anyhow") (r "^1.0.69") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "clap") (r "^4.1.4") (f (quote ("derive" "env"))) (o #t) (d #t) (k 0)) (d (n "clap-verbosity-flag") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "noodles") (r "^0.32.0") (f (quote ("bgzf" "fasta" "core"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rusqlite") (r "^0.28.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive" "strum_macros"))) (d #t) (k 0)) (d (n "temp_testdir") (r "^0.2.3") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "textwrap") (r "^0.16.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (o #t) (d #t) (k 0)))) (h "06p54ilm03ks3p42afkfjzf67v1in0pdl5frqjirzzrwscr5fqpl") (f (quote (("full" "cli")))) (s 2) (e (quote (("cli" "dep:clap" "dep:clap-verbosity-flag" "dep:tracing-subscriber"))))))

(define-public crate-seqrepo-0.2.3 (c (n "seqrepo") (v "0.2.3") (d (list (d (n "anyhow") (r "^1.0.69") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "clap") (r "^4.1.4") (f (quote ("derive" "env"))) (o #t) (d #t) (k 0)) (d (n "clap-verbosity-flag") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "noodles") (r "^0.32.0") (f (quote ("bgzf" "fasta" "core"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rusqlite") (r "^0.28.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive" "strum_macros"))) (d #t) (k 0)) (d (n "temp_testdir") (r "^0.2.3") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "textwrap") (r "^0.16.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (o #t) (d #t) (k 0)))) (h "0bab41yqzmymkm43jqaf5jjmaqa8pjy2hi3i23w1lbkms4rbgj4p") (f (quote (("full" "cli")))) (s 2) (e (quote (("cli" "dep:clap" "dep:clap-verbosity-flag" "dep:tracing-subscriber"))))))

(define-public crate-seqrepo-0.3.0 (c (n "seqrepo") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.69") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "clap") (r "^4.1.4") (f (quote ("derive" "env"))) (d #t) (k 2)) (d (n "clap-verbosity-flag") (r "^2.0.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "noodles") (r "^0.32.0") (f (quote ("bgzf" "fasta" "core"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rusqlite") (r "^0.28.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive" "strum_macros"))) (d #t) (k 0)) (d (n "temp_testdir") (r "^0.2.3") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "textwrap") (r "^0.16.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 2)))) (h "10j2kk6w8wzsbs5z632f94l7dch2hjiz0xz5bhaf5zqps8y12937")))

(define-public crate-seqrepo-0.4.0 (c (n "seqrepo") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0.69") (d #t) (k 2)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "clap") (r "^4.1.4") (f (quote ("derive" "env"))) (d #t) (k 2)) (d (n "clap-verbosity-flag") (r "^2.0.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "noodles") (r "^0.35.0") (f (quote ("bgzf" "fasta" "core"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rusqlite") (r "^0.29.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive" "strum_macros"))) (d #t) (k 0)) (d (n "temp_testdir") (r "^0.2.3") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "textwrap") (r "^0.16.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 2)))) (h "16mqhcz3ch9lb86y734hk2xp5yq8q4mg28n72667qccdjxdyl03s")))

(define-public crate-seqrepo-0.5.0 (c (n "seqrepo") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env"))) (d #t) (k 2)) (d (n "clap-verbosity-flag") (r "^2.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "noodles") (r "^0.39") (f (quote ("bgzf" "fasta" "core"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive" "strum_macros"))) (d #t) (k 0)) (d (n "temp_testdir") (r "^0.2") (d #t) (k 2)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.16") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)))) (h "0ijspkbhd5cy7gxivcsrm87fnf3n1f1ipvdw5xbydm5iq9i257j0")))

(define-public crate-seqrepo-0.5.1 (c (n "seqrepo") (v "0.5.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env"))) (d #t) (k 2)) (d (n "clap-verbosity-flag") (r "^2.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "noodles-bgzf") (r "^0.22") (d #t) (k 0)) (d (n "noodles-core") (r "^0.11") (d #t) (k 0)) (d (n "noodles-fasta") (r "^0.23") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "temp_testdir") (r "^0.2") (d #t) (k 2)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.16") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)))) (h "171p5drq3s8hmgqbf6fs20ccjs8z18zdxr3v8sfhvfwv7vy2k7li")))

(define-public crate-seqrepo-0.6.0 (c (n "seqrepo") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env"))) (d #t) (k 2)) (d (n "clap-verbosity-flag") (r "^2.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "noodles-bgzf") (r "^0.22") (d #t) (k 0)) (d (n "noodles-core") (r "^0.11") (d #t) (k 0)) (d (n "noodles-fasta") (r "^0.24") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "temp_testdir") (r "^0.2") (d #t) (k 2)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.16") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)))) (h "18s93qlvbkndzzc327a3h6ix8ciswh4f9l0qwlzyrlgy34za55fc")))

(define-public crate-seqrepo-0.6.1 (c (n "seqrepo") (v "0.6.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env"))) (d #t) (k 2)) (d (n "clap-verbosity-flag") (r "^2.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "noodles-bgzf") (r "^0.22") (d #t) (k 0)) (d (n "noodles-core") (r "^0.12") (d #t) (k 0)) (d (n "noodles-fasta") (r "^0.25") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "temp_testdir") (r "^0.2") (d #t) (k 2)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.16") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)))) (h "1jhryx04ad9bbbm70k9gf4pqm43i4gxpki82a05l0d4xd1jmmnmw")))

(define-public crate-seqrepo-0.7.0 (c (n "seqrepo") (v "0.7.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env"))) (d #t) (k 2)) (d (n "clap-verbosity-flag") (r "^2.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "noodles-bgzf") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "noodles-core") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "noodles-fasta") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "temp_testdir") (r "^0.2") (d #t) (k 2)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.16") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)))) (h "1jc4fid0a67vps3xbxwglnr32ws243h1sg7b66mqkk21szjx9akf") (f (quote (("default" "impl") ("cached" "impl")))) (s 2) (e (quote (("impl" "dep:chrono" "dep:noodles-bgzf" "dep:noodles-core" "dep:noodles-fasta" "dep:rusqlite"))))))

(define-public crate-seqrepo-0.8.0 (c (n "seqrepo") (v "0.8.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env"))) (d #t) (k 2)) (d (n "clap-verbosity-flag") (r "^2.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "noodles-bgzf") (r "^0.24") (o #t) (d #t) (k 0)) (d (n "noodles-core") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "noodles-fasta") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "temp_testdir") (r "^0.2") (d #t) (k 2)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.16") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)))) (h "0m8lyfgxhjbdapmj7vzixv5w7vlzc999zywqcy9mx4fjzfg5gcwl") (f (quote (("default" "impl") ("cached" "impl")))) (s 2) (e (quote (("impl" "dep:chrono" "dep:noodles-bgzf" "dep:noodles-core" "dep:noodles-fasta" "dep:rusqlite"))))))

(define-public crate-seqrepo-0.9.0 (c (n "seqrepo") (v "0.9.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env"))) (d #t) (k 2)) (d (n "clap-verbosity-flag") (r "^2.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "noodles-bgzf") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "noodles-core") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "noodles-fasta") (r "^0.30") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "temp_testdir") (r "^0.2") (d #t) (k 2)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.16") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)))) (h "0rfxyq4wwd3w2ai7v0arxadf5g1vanlpm1gh4xqya1dda3p2m5gj") (f (quote (("default" "impl") ("cached" "impl")))) (s 2) (e (quote (("impl" "dep:chrono" "dep:noodles-bgzf" "dep:noodles-core" "dep:noodles-fasta" "dep:rusqlite"))))))

(define-public crate-seqrepo-0.10.0 (c (n "seqrepo") (v "0.10.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env"))) (d #t) (k 2)) (d (n "clap-verbosity-flag") (r "^2.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "noodles-bgzf") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "noodles-core") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "noodles-fasta") (r "^0.32") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rusqlite") (r "^0.30") (o #t) (d #t) (k 0)) (d (n "temp_testdir") (r "^0.2") (d #t) (k 2)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.16") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)))) (h "05sc5nv7d39g4n0864lj6ai6wdb7dlhav5f91m7la3dkjvh8zyc8") (f (quote (("default" "impl") ("cached" "impl")))) (s 2) (e (quote (("impl" "dep:chrono" "dep:noodles-bgzf" "dep:noodles-core" "dep:noodles-fasta" "dep:rusqlite"))))))

(define-public crate-seqrepo-0.10.1 (c (n "seqrepo") (v "0.10.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env"))) (d #t) (k 2)) (d (n "clap-verbosity-flag") (r "^2.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "noodles-bgzf") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "noodles-core") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "noodles-fasta") (r "^0.33") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rusqlite") (r "^0.31") (o #t) (d #t) (k 0)) (d (n "temp_testdir") (r "^0.2") (d #t) (k 2)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "textwrap") (r "^0.16") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)))) (h "04xxisgdv63zgl9h62z289v9ff9di048h1iqhj0h80y43n2l98if") (f (quote (("default" "impl") ("cached" "impl")))) (s 2) (e (quote (("impl" "dep:chrono" "dep:noodles-bgzf" "dep:noodles-core" "dep:noodles-fasta" "dep:rusqlite"))))))

