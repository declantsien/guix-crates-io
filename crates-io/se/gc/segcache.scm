(define-module (crates-io se gc segcache) #:use-module (crates-io))

(define-public crate-segcache-0.1.0 (c (n "segcache") (v "0.1.0") (d (list (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "clocksource") (r "^0.6.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "datatier") (r "^0.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "metriken") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng" "getrandom"))) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)))) (h "0vccx6xw07j2dlhdw71lrazsrk0wky371gqs4h92v94bwpzjafmk") (f (quote (("metrics" "metriken") ("magic") ("default" "metrics") ("debug" "magic"))))))

(define-public crate-segcache-0.1.1 (c (n "segcache") (v "0.1.1") (d (list (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "clocksource") (r "^0.6.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "datatier") (r "^0.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "metriken") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng" "getrandom"))) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)))) (h "05n221wal85qkslcz7w4rk6n1v21z8c6526dndvaad4ayl6vsjic") (f (quote (("metrics" "metriken") ("magic") ("default" "metrics") ("debug" "magic"))))))

