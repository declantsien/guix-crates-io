(define-module (crates-io se ns sensor-scd30) #:use-module (crates-io))

(define-public crate-sensor-scd30-0.1.0 (c (n "sensor-scd30") (v "0.1.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "color-backtrace") (r "^0.1.3") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.7.0") (d #t) (k 2)) (d (n "humantime") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "simplelog") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.2.15") (o #t) (d #t) (k 0)))) (h "00vsjdc354qqyw3ka88cfpjn6vv1hwr4hym0mxgz2y661iwc8xv3") (f (quote (("util" "structopt" "linux-embedded-hal" "simplelog" "humantime") ("default" "util"))))))

(define-public crate-sensor-scd30-0.2.0 (c (n "sensor-scd30") (v "0.2.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "color-backtrace") (r "^0.1.3") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.7.0") (d #t) (k 2)) (d (n "humantime") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "simplelog") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.2.15") (o #t) (d #t) (k 0)))) (h "077c2nz5j3s827x7fp1rj1gbgmcrxggd7ahzzwdb3crw89g1pb1w") (f (quote (("util" "structopt" "linux-embedded-hal" "simplelog" "humantime") ("default" "util"))))))

(define-public crate-sensor-scd30-0.3.0 (c (n "sensor-scd30") (v "0.3.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "color-backtrace") (r "^0.1.3") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.7.0") (d #t) (k 2)) (d (n "humantime") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "simplelog") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.2.15") (o #t) (d #t) (k 0)))) (h "1ab2l8sdb0v3sxv8fv88fg5wxvp404asrqklagq2wnbdyps8jzg8") (f (quote (("util" "structopt" "linux-embedded-hal" "simplelog" "humantime") ("default" "util"))))))

(define-public crate-sensor-scd30-0.4.0 (c (n "sensor-scd30") (v "0.4.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "color-backtrace") (r "^0.1.3") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.7.0") (d #t) (k 2)) (d (n "humantime") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "simplelog") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.2.15") (o #t) (d #t) (k 0)))) (h "172llbfarsqmpgpw7v5lx4lc13s0zra30kyc2pjlfkj55wrfl0d1") (f (quote (("util" "structopt" "linux-embedded-hal" "simplelog" "humantime") ("default" "util"))))))

