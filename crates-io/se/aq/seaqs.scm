(define-module (crates-io se aq seaqs) #:use-module (crates-io))

(define-public crate-seaqs-0.0.1 (c (n "seaqs") (v "0.0.1") (d (list (d (n "chrono") (r "^0.4.19") (f (quote ("serde"))) (d #t) (k 0)) (d (n "sea-query") (r "^0.28") (f (quote ("derive" "attr" "with-uuid" "with-chrono"))) (o #t) (k 0)) (d (n "sea-query") (r "^0") (f (quote ("derive" "attr" "with-uuid" "with-chrono" "backend-postgres"))) (k 2)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-querystring") (r "^0.1.0") (d #t) (k 2)) (d (n "serde_with") (r "^2.1") (f (quote ("macros" "alloc"))) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1yrl0pq6m79qjicmp3kwcpmbyz905927li7h2vlballawhq8fyya") (f (quote (("seaq" "sea-query") ("default" "seaq"))))))

(define-public crate-seaqs-0.0.2 (c (n "seaqs") (v "0.0.2") (d (list (d (n "chrono") (r "^0.4.19") (f (quote ("serde"))) (d #t) (k 0)) (d (n "sea-query") (r "^0.28") (f (quote ("derive" "attr" "with-uuid" "with-chrono"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_with") (r "^2.1") (f (quote ("macros" "alloc"))) (k 0)) (d (n "utoipa") (r "^3") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "sea-query") (r "^0") (f (quote ("derive" "attr" "with-uuid" "with-chrono" "backend-postgres"))) (k 2)) (d (n "serde-querystring") (r "^0.2.0") (d #t) (k 2)))) (h "1r0bcww4wxpprvyrd8249wpb23b1m9shivjfd9kfpvyqnkpj02qk") (f (quote (("seaq" "sea-query") ("openapi" "utoipa") ("default" "seaq" "openapi"))))))

(define-public crate-seaqs-0.0.3 (c (n "seaqs") (v "0.0.3") (d (list (d (n "chrono") (r "^0.4.19") (f (quote ("serde"))) (d #t) (k 0)) (d (n "sea-query") (r "^0.28") (f (quote ("derive" "attr" "with-uuid" "with-chrono"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_with") (r "^2.1") (f (quote ("macros" "alloc"))) (k 0)) (d (n "utoipa") (r "^3") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "sea-query") (r "^0") (f (quote ("derive" "attr" "with-uuid" "with-chrono" "backend-postgres"))) (k 2)) (d (n "serde-querystring") (r "^0.2.0") (d #t) (k 2)))) (h "0arf6xji55hs4nmx7s2pb3kzk01crbqrlifqssj6knzq03fr9yq2") (f (quote (("seaq" "sea-query") ("openapi" "utoipa") ("default" "seaq"))))))

