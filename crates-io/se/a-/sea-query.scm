(define-module (crates-io se a- sea-query) #:use-module (crates-io))

(define-public crate-sea-query-0.1.0 (c (n "sea-query") (v "0.1.0") (d (list (d (n "async-std") (r "^1.8") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sqlx") (r "^0.4.0-beta.1") (f (quote ("runtime-async-std" "macros" "any" "mysql" "sqlite" "postgres" "tls" "migrate" "decimal"))) (k 2)))) (h "0q5n9l8nnwmr70nvr3dd68rfvzmf9c23hdw66nmxk13j5y1akl5c")))

(define-public crate-sea-query-0.2.0 (c (n "sea-query") (v "0.2.0") (d (list (d (n "async-std") (r "^1.8") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sqlx") (r "^0.4.0") (f (quote ("runtime-async-std-native-tls" "macros" "any" "mysql" "postgres" "sqlite" "tls" "migrate" "decimal"))) (o #t) (k 0)) (d (n "sqlx") (r "^0.4.0") (f (quote ("runtime-async-std-native-tls" "macros" "any" "mysql" "postgres" "sqlite" "tls" "migrate" "decimal"))) (k 2)))) (h "14hnxiddazaqhxy2cbs0pdwr07mgsk24q0gyp4vi2l3nd8zvby8z") (f (quote (("sqlx-driver" "sqlx"))))))

(define-public crate-sea-query-0.3.0 (c (n "sea-query") (v "0.3.0") (d (list (d (n "async-std") (r "^1.8") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sqlx") (r "^0.4.0") (f (quote ("runtime-async-std-native-tls" "macros" "any" "mysql" "postgres" "sqlite" "tls" "migrate" "decimal"))) (k 2)))) (h "0b217lwxszbhdahzlr07qc07543f73ccas8pbbzkg07lmf88j6pg") (f (quote (("sqlx-driver"))))))

(define-public crate-sea-query-0.4.0 (c (n "sea-query") (v "0.4.0") (d (list (d (n "async-std") (r "^1.8") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sqlx") (r "^0.4.0") (f (quote ("runtime-async-std-native-tls" "macros" "any" "mysql" "postgres" "sqlite" "tls" "migrate" "decimal"))) (k 2)))) (h "03v39m7kr4kfk0d12p2akzz2j1zswpg60xx6arilrxqxl0vh318m") (f (quote (("sqlx-driver"))))))

(define-public crate-sea-query-0.5.0 (c (n "sea-query") (v "0.5.0") (d (list (d (n "async-std") (r "^1.8") (d #t) (k 2)) (d (n "sea-query-derive") (r "^0.1.0") (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sqlx") (r "^0.4.0") (f (quote ("runtime-async-std-native-tls" "macros" "any" "mysql" "postgres" "sqlite" "tls" "migrate" "decimal"))) (k 2)))) (h "1fxfy7ywg3kqdj8c9jylv7rds3c67lnzfni31272bpvqyc0l9s9r") (f (quote (("sqlx-driver") ("derive" "sea-query-derive") ("default" "derive"))))))

(define-public crate-sea-query-0.6.0 (c (n "sea-query") (v "0.6.0") (d (list (d (n "async-std") (r "^1.8") (d #t) (k 2)) (d (n "sea-query-derive") (r "^0.1.0") (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sqlx") (r "^0.4.0") (f (quote ("runtime-async-std-native-tls" "macros" "any" "mysql" "postgres" "sqlite" "tls" "migrate" "decimal"))) (k 2)))) (h "1rb280vxxjnavs7icnrv4cmvq1y8z4kxcffmhndzddgzgrxpkfva") (f (quote (("sqlx-driver") ("derive" "sea-query-derive") ("default" "derive"))))))

(define-public crate-sea-query-0.6.1 (c (n "sea-query") (v "0.6.1") (d (list (d (n "async-std") (r "^1.8") (d #t) (k 2)) (d (n "sea-query-derive") (r "^0.1.0") (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sqlx") (r "^0.4.0") (f (quote ("runtime-async-std-native-tls" "macros" "any" "mysql" "postgres" "sqlite" "tls" "migrate" "decimal"))) (k 2)))) (h "1hnz3xxzh4bc0f45kg8ah8r58asph205zxwkd9g98qn40cjpr777") (f (quote (("sqlx-driver") ("derive" "sea-query-derive") ("default" "derive"))))))

(define-public crate-sea-query-0.7.0 (c (n "sea-query") (v "0.7.0") (d (list (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.1.0") (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0b765flzb3cvis6qnisxqwivyy3368w7w1dkvqd0zzpnhx42s71h") (f (quote (("with-chrono" "chrono") ("sqlx-postgres" "sqlx-json") ("sqlx-mysql" "sqlx-json") ("sqlx-json") ("sqlx-chrono" "with-chrono") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres" "bytes" "postgres-types" "postgres-types/with-serde_json-1") ("derive" "sea-query-derive") ("default" "derive"))))))

(define-public crate-sea-query-0.7.1 (c (n "sea-query") (v "0.7.1") (d (list (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.1.0") (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0si2n4dnkn7pv0r7qr37vdjh78l00pfr3aa0yry8nsfgmfy0qqn1") (f (quote (("with-chrono" "chrono") ("sqlx-postgres" "sqlx-json") ("sqlx-mysql" "sqlx-json") ("sqlx-json") ("sqlx-chrono" "with-chrono") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres" "bytes" "postgres-types" "postgres-types/with-serde_json-1") ("derive" "sea-query-derive") ("default" "derive"))))))

(define-public crate-sea-query-0.8.0 (c (n "sea-query") (v "0.8.0") (d (list (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.1.0") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)))) (h "0565dgyrphzaj5f6c80wgk8xav1wg7vklmf5lqqp8mn0m460ikxh") (f (quote (("with-json" "serde_json") ("with-chrono" "chrono") ("sqlx-postgres") ("sqlx-mysql") ("sqlx-json" "with-json") ("sqlx-chrono" "with-chrono") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.8.1 (c (n "sea-query") (v "0.8.1") (d (list (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.1.0") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)))) (h "05y1h7l0hzs7c5jx7l50vxw0gdmdblhbzgrnf9frwnnfcpiqpxgm") (f (quote (("with-json" "serde_json") ("with-chrono" "chrono") ("sqlx-postgres") ("sqlx-mysql") ("sqlx-json" "with-json") ("sqlx-chrono" "with-chrono") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.8.2 (c (n "sea-query") (v "0.8.2") (d (list (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.1.0") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)))) (h "1qd8q2652n1h1dqq7apgizg4d5cb0n81xc96rmrhszqzmirh57h4") (f (quote (("with-json" "serde_json") ("with-chrono" "chrono") ("sqlx-postgres") ("sqlx-mysql") ("sqlx-json" "with-json") ("sqlx-chrono" "with-chrono") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.8.3 (c (n "sea-query") (v "0.8.3") (d (list (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.1.0") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)))) (h "0xdhgqfzx9y5l2mchhnx9fk17wfdz01k905ylyfwx0xb3wfgvphm") (f (quote (("with-json" "serde_json") ("with-chrono" "chrono") ("sqlx-postgres") ("sqlx-mysql") ("sqlx-json" "with-json") ("sqlx-chrono" "with-chrono") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.8.4 (c (n "sea-query") (v "0.8.4") (d (list (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.1.0") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)))) (h "0sf7x7dzy16n37bn2vz2d29lljf0i18f7zivvll8844igvkkfshp") (f (quote (("with-json" "serde_json") ("with-chrono" "chrono") ("sqlx-postgres") ("sqlx-mysql") ("sqlx-json" "with-json") ("sqlx-chrono" "with-chrono") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.8.5 (c (n "sea-query") (v "0.8.5") (d (list (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.1.0") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)))) (h "1ac6fjwm8kfxxl6rzp9lkri9phsr16gc6qpbq4m10cpkzdjksp6y") (f (quote (("with-json" "serde_json") ("with-chrono" "chrono") ("sqlx-postgres") ("sqlx-mysql") ("sqlx-json" "with-json") ("sqlx-chrono" "with-chrono") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.9.0 (c (n "sea-query") (v "0.9.0") (d (list (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.1.0") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)))) (h "0kkjkgmhwhxv10fdilz2kcg7xsfcgwkn9iba5jcvh90j8hgcmafg") (f (quote (("with-json" "serde_json") ("with-chrono" "chrono") ("sqlx-postgres") ("sqlx-mysql") ("sqlx-json" "with-json") ("sqlx-chrono" "with-chrono") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.9.1 (c (n "sea-query") (v "0.9.1") (d (list (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.1.1") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)))) (h "0cjgcx3y3q0p9a4wsg0d3wfnppflqdd8p7g6rz3knk24y7kn8p2n") (f (quote (("with-json" "serde_json") ("with-chrono" "chrono") ("sqlx-postgres") ("sqlx-mysql") ("sqlx-json" "with-json") ("sqlx-chrono" "with-chrono") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.9.2 (c (n "sea-query") (v "0.9.2") (d (list (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.1.1") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)))) (h "0qps19iqrgk0f89dwqiv69q6qmmj2f2jdp7va35j1lpxcain768y") (f (quote (("with-json" "serde_json") ("with-chrono" "chrono") ("sqlx-postgres") ("sqlx-mysql") ("sqlx-json" "with-json") ("sqlx-chrono" "with-chrono") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.9.3 (c (n "sea-query") (v "0.9.3") (d (list (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.1.2") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)))) (h "0lzcpzg2lbg2picyqkdl7xh5z9qp8gil8k2iacs3j1qx0g8xgwcn") (f (quote (("with-json" "serde_json") ("with-chrono" "chrono") ("sqlx-postgres") ("sqlx-mysql") ("sqlx-json" "with-json") ("sqlx-chrono" "with-chrono") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.9.4 (c (n "sea-query") (v "0.9.4") (d (list (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.1.2") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)))) (h "11dibsnhysma6snjnny8frh7lz7mcgbdczvwiirbslipipp5ds2f") (f (quote (("with-json" "serde_json") ("with-chrono" "chrono") ("sqlx-postgres") ("sqlx-mysql") ("sqlx-json" "with-json") ("sqlx-chrono" "with-chrono") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.9.5 (c (n "sea-query") (v "0.9.5") (d (list (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.1.2") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)))) (h "088vsk3zg7vwhlrfyc55dwikbqdprkfx9cc32axkaa3a67n1xfxh") (f (quote (("with-json" "serde_json") ("with-chrono" "chrono") ("sqlx-postgres") ("sqlx-mysql") ("sqlx-json" "with-json") ("sqlx-chrono" "with-chrono") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.9.6 (c (n "sea-query") (v "0.9.6") (d (list (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.1.2") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)))) (h "18k92m7hg5yq6l5lmym5ajxdj1fymiwrjw45mygar9a672jny9pk") (f (quote (("with-json" "serde_json") ("with-chrono" "chrono") ("sqlx-postgres") ("sqlx-mysql") ("sqlx-json" "with-json") ("sqlx-chrono" "with-chrono") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.10.0 (c (n "sea-query") (v "0.10.0") (d (list (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.1.2") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "106r6pg009ldlqr1lpkqpvmzdsr2h0xxgxhbckyhkiryzxhzxvab") (f (quote (("with-uuid" "uuid") ("with-json" "serde_json") ("with-chrono" "chrono") ("sqlx-postgres") ("sqlx-mysql") ("rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.10.1 (c (n "sea-query") (v "0.10.1") (d (list (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.1.2") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "1pjjcznhz5gzdlgmw862n8v4rnzmhf941kv57yvg32kq7ypp526c") (f (quote (("with-uuid" "uuid") ("with-json" "serde_json") ("with-chrono" "chrono") ("sqlx-postgres") ("sqlx-mysql") ("rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.10.2 (c (n "sea-query") (v "0.10.2") (d (list (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.1.2") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "13g8yqi5n55qrg1714iidfg18027mfa66vn72mmx6fviqfw01wjj") (f (quote (("with-uuid" "uuid") ("with-json" "serde_json") ("with-chrono" "chrono") ("sqlx-postgres") ("sqlx-mysql") ("rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.10.3 (c (n "sea-query") (v "0.10.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.1.2") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "1h98gcrjqz4a8fw4zl9xnzap11fnyywax83q63ap6dys5xxgmqvf") (f (quote (("with-uuid" "uuid") ("with-json" "serde_json") ("with-chrono" "chrono") ("sqlx-postgres") ("sqlx-mysql") ("rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.10.4 (c (n "sea-query") (v "0.10.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.1.2") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "1smyy35kaakka5k4al0k8fs0nalr4l1z9xy137d4xcy9wy09sqzb") (f (quote (("with-uuid" "uuid") ("with-json" "serde_json") ("with-chrono" "chrono") ("sqlx-postgres") ("sqlx-mysql") ("rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.10.5 (c (n "sea-query") (v "0.10.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.1.2") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "14ssr45kqm7g76qg80110mvdx27azv6nvpqsf2qv8yhc67ak4cd2") (f (quote (("with-uuid" "uuid") ("with-json" "serde_json") ("with-chrono" "chrono") ("sqlx-postgres") ("sqlx-mysql") ("rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.10.6 (c (n "sea-query") (v "0.10.6") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.1.2") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "08vmyqimbqm5dvh1xznd40knhjv7y357dgajsnli8j6w1pdxbib0") (f (quote (("with-uuid" "uuid") ("with-json" "serde_json") ("with-chrono" "chrono") ("sqlx-postgres") ("sqlx-mysql") ("rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.11.0 (c (n "sea-query") (v "0.11.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.1.2") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "16pdpl0b43a4avl4kzg9sqnjb53vvqixrjl13ldy3x3g6c0kgb29") (f (quote (("with-uuid" "uuid") ("with-json" "serde_json") ("with-chrono" "chrono") ("sqlx-postgres") ("sqlx-mysql") ("rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.11.1 (c (n "sea-query") (v "0.11.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.1.2") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "1nj2pzvnh1jvmzhvdp6f72m5535ywz8ywcv8b0d9n60zr69pfpbg") (f (quote (("with-uuid" "uuid") ("with-json" "serde_json") ("with-chrono" "chrono") ("sqlx-postgres") ("sqlx-mysql") ("rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.12.0 (c (n "sea-query") (v "0.12.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.1.2") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "06824355z0lsqv0dqygwpjkbrllk3dd9hzwbfc05sbxhbrl6wdmd") (f (quote (("with-uuid" "uuid") ("with-json" "serde_json") ("with-chrono" "chrono") ("sqlx-sqlite") ("sqlx-postgres") ("sqlx-mysql") ("rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.12.1 (c (n "sea-query") (v "0.12.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.1.2") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "14x3i5s5jksykym8jlf6i0q228681w45adh4jbc818scpjrki260") (f (quote (("with-uuid" "uuid") ("with-json" "serde_json") ("with-chrono" "chrono") ("sqlx-sqlite") ("sqlx-postgres") ("sqlx-mysql") ("rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.12.2 (c (n "sea-query") (v "0.12.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.1.2") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "0y04s04qbprf6w9bxly3h1fqcmnj8iqvwkvvzkqhavzyl3z1vxwi") (f (quote (("with-uuid" "uuid") ("with-json" "serde_json") ("with-chrono" "chrono") ("sqlx-sqlite") ("sqlx-postgres") ("sqlx-mysql") ("rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.12.3 (c (n "sea-query") (v "0.12.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.1.2") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "1sg2vchn91p992va4536n30c1y2ijqsd45ybwz9r2w5xgc5vvvky") (f (quote (("with-uuid" "uuid") ("with-json" "serde_json") ("with-chrono" "chrono") ("sqlx-sqlite") ("sqlx-postgres") ("sqlx-mysql") ("rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.12.5 (c (n "sea-query") (v "0.12.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.1.2") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "1n0gcgvj1fpq0kyl8q081x162m75ibs84mbmhv7znmpv4spv8npr") (f (quote (("with-uuid" "uuid") ("with-rust_decimal" "rust_decimal") ("with-json" "serde_json") ("with-chrono" "chrono") ("sqlx-sqlite") ("sqlx-postgres") ("sqlx-mysql") ("rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-rust_decimal" "with-rust_decimal" "rust_decimal/db-postgres") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql")))) (y #t)))

(define-public crate-sea-query-0.12.6 (c (n "sea-query") (v "0.12.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.1.2") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "0pvkg35xdjwfkfghwdwr4z44w1i8gv7bn6x4g3x7gckj12jl6h6v") (f (quote (("with-uuid" "uuid") ("with-rust_decimal" "rust_decimal") ("with-json" "serde_json") ("with-chrono" "chrono") ("sqlx-sqlite") ("sqlx-postgres") ("sqlx-mysql") ("rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-rust_decimal" "with-rust_decimal" "rust_decimal/db-postgres") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.12.7 (c (n "sea-query") (v "0.12.7") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.1.2") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "14nvq3rbq11i8xay9vz2qzxqcd1520pm4hfad9b0q7pw1qcpfhn8") (f (quote (("with-uuid" "uuid") ("with-rust_decimal" "rust_decimal") ("with-json" "serde_json") ("with-chrono" "chrono") ("sqlx-sqlite") ("sqlx-postgres") ("sqlx-mysql") ("rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-rust_decimal" "with-rust_decimal" "rust_decimal/db-postgres") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.12.8 (c (n "sea-query") (v "0.12.8") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.1.2") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "10mz0mw2x02nxbym80fcqidg1f0p53n3f15l78m6qlxg6xg0764w") (f (quote (("with-uuid" "uuid") ("with-rust_decimal" "rust_decimal") ("with-json" "serde_json") ("with-chrono" "chrono") ("sqlx-sqlite") ("sqlx-postgres") ("sqlx-mysql") ("rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-rust_decimal" "with-rust_decimal" "rust_decimal/db-postgres") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.12.9 (c (n "sea-query") (v "0.12.9") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.1.2") (o #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "0jyz2chjir092rqg2rxmmn6pydwilr55z9z0n16bwxww70z4bzc0") (f (quote (("with-uuid" "uuid") ("with-rust_decimal" "rust_decimal") ("with-json" "serde_json") ("with-chrono" "chrono") ("sqlx-sqlite") ("sqlx-postgres") ("sqlx-mysql") ("rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-rust_decimal" "with-rust_decimal" "rust_decimal/db-postgres") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.12.10 (c (n "sea-query") (v "0.12.10") (d (list (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "1zqqq2xaf20gc1q2q9agkxk0cishxdbprd45hwwjwlxqh02da9va") (f (quote (("with-uuid" "uuid") ("with-rust_decimal" "rust_decimal") ("with-json" "serde_json") ("with-chrono" "chrono") ("sqlx-sqlite") ("sqlx-postgres") ("sqlx-mysql") ("rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-rust_decimal" "with-rust_decimal" "rust_decimal/db-postgres") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.12.11 (c (n "sea-query") (v "0.12.11") (d (list (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "1nf49rmk02wgi1rg82vf9lrliaarf9930f57ydawmk70air198nb") (f (quote (("with-uuid" "uuid") ("with-rust_decimal" "rust_decimal") ("with-json" "serde_json") ("with-chrono" "chrono") ("sqlx-sqlite") ("sqlx-postgres") ("sqlx-mysql") ("rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-rust_decimal" "with-rust_decimal" "rust_decimal/db-postgres") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.12.12 (c (n "sea-query") (v "0.12.12") (d (list (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "04fslwdjzw0gai9q3q5hwimi4gnic6rsr8nfxyv879hlcdg4g72f") (f (quote (("with-uuid" "uuid") ("with-rust_decimal" "rust_decimal") ("with-json" "serde_json") ("with-chrono" "chrono") ("sqlx-sqlite") ("sqlx-postgres") ("sqlx-mysql") ("rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-rust_decimal" "with-rust_decimal" "rust_decimal/db-postgres") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.14.0 (c (n "sea-query") (v "0.14.0") (d (list (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "06dylrl9kqkms2j2qb258l85vjzl012zn79jxr60nvj9fqa53djy") (f (quote (("with-uuid" "uuid") ("with-rust_decimal" "rust_decimal") ("with-json" "serde_json") ("with-chrono" "chrono") ("thread-safe") ("sqlx-sqlite") ("sqlx-postgres") ("sqlx-mysql") ("rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-rust_decimal" "with-rust_decimal" "rust_decimal/db-postgres") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql")))) (y #t)))

(define-public crate-sea-query-0.14.1 (c (n "sea-query") (v "0.14.1") (d (list (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "1zn0mgqnaqc9c1wj68cpfyk2yplhrn7g7iclik08y1ww2d4im9bb") (f (quote (("with-uuid" "uuid") ("with-rust_decimal" "rust_decimal") ("with-json" "serde_json") ("with-chrono" "chrono") ("thread-safe") ("sqlx-sqlite") ("sqlx-postgres") ("sqlx-mysql") ("rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-rust_decimal" "with-rust_decimal" "rust_decimal/db-postgres") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.15.0 (c (n "sea-query") (v "0.15.0") (d (list (d (n "bigdecimal") (r "^0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "16an2am09pijw2hfq0rnmwhm4xy19i83v5hcwski2yld96g3ifyr") (f (quote (("with-uuid" "uuid") ("with-rust_decimal" "rust_decimal") ("with-json" "serde_json") ("with-chrono" "chrono") ("with-bigdecimal" "bigdecimal") ("thread-safe") ("sqlx-sqlite") ("sqlx-postgres") ("sqlx-mysql") ("rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-rust_decimal" "with-rust_decimal" "rust_decimal/db-postgres") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres-bigdecimal" "with-bigdecimal") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.14.2 (c (n "sea-query") (v "0.14.2") (d (list (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "07rgkzlmsffvh8c8b5jp3mlxnmb5d9j305f366sssjg4qsgd9i8y") (f (quote (("with-uuid" "uuid") ("with-rust_decimal" "rust_decimal") ("with-json" "serde_json") ("with-chrono" "chrono") ("thread-safe") ("sqlx-sqlite") ("sqlx-postgres") ("sqlx-mysql") ("rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-rust_decimal" "with-rust_decimal" "rust_decimal/db-postgres") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.16.0 (c (n "sea-query") (v "0.16.0") (d (list (d (n "bigdecimal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "0306an63m1g7zlya0n3z5xcd63rvinvrxgh6ggjwgf1svpvin34m") (f (quote (("with-uuid" "uuid") ("with-rust_decimal" "rust_decimal") ("with-json" "serde_json") ("with-chrono" "chrono") ("with-bigdecimal" "bigdecimal") ("thread-safe") ("sqlx-sqlite") ("sqlx-postgres") ("sqlx-mysql") ("rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-rust_decimal" "with-rust_decimal" "rust_decimal/db-postgres") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres-bigdecimal" "with-bigdecimal") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.16.1 (c (n "sea-query") (v "0.16.1") (d (list (d (n "bigdecimal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "1sarxksqkabgvzpqv0g0vmy07vvhf26n3501lfqh92hi1y90xfz9") (f (quote (("with-uuid" "uuid") ("with-rust_decimal" "rust_decimal") ("with-json" "serde_json") ("with-chrono" "chrono") ("with-bigdecimal" "bigdecimal") ("thread-safe") ("sqlx-sqlite") ("sqlx-postgres") ("sqlx-mysql") ("rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-rust_decimal" "with-rust_decimal" "rust_decimal/db-postgres") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres-bigdecimal" "with-bigdecimal") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.16.2 (c (n "sea-query") (v "0.16.2") (d (list (d (n "bigdecimal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "0j069yndqnprmnmj0wbhdg4c4ll2wm6n2kgz0350arcwc7j5vkw1") (f (quote (("with-uuid" "uuid") ("with-rust_decimal" "rust_decimal") ("with-json" "serde_json") ("with-chrono" "chrono") ("with-bigdecimal" "bigdecimal") ("thread-safe") ("sqlx-sqlite") ("sqlx-postgres") ("sqlx-mysql") ("rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-rust_decimal" "with-rust_decimal" "rust_decimal/db-postgres") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres-bigdecimal" "with-bigdecimal") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.16.3 (c (n "sea-query") (v "0.16.3") (d (list (d (n "bigdecimal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "1dcdqq57y7pw7ks15irvkwf37h498rm0zv5p1xxhd58vw7bgnxmg") (f (quote (("with-uuid" "uuid") ("with-rust_decimal" "rust_decimal") ("with-json" "serde_json") ("with-chrono" "chrono") ("with-bigdecimal" "bigdecimal") ("thread-safe") ("sqlx-sqlite") ("sqlx-postgres") ("sqlx-mysql") ("rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-rust_decimal" "with-rust_decimal" "rust_decimal/db-postgres") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres-bigdecimal" "with-bigdecimal") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.16.4 (c (n "sea-query") (v "0.16.4") (d (list (d (n "bigdecimal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "0qil0kgbbzi7zsavygxlsdnh8p2y747l84phpxlmh9z0h8gh2pw1") (f (quote (("with-uuid" "uuid") ("with-rust_decimal" "rust_decimal") ("with-json" "serde_json") ("with-chrono" "chrono") ("with-bigdecimal" "bigdecimal") ("thread-safe") ("sqlx-sqlite") ("sqlx-postgres") ("sqlx-mysql") ("rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-rust_decimal" "with-rust_decimal" "rust_decimal/db-postgres") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres-bigdecimal" "with-bigdecimal") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.16.5 (c (n "sea-query") (v "0.16.5") (d (list (d (n "bigdecimal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "1hp2dd6gvs1mh1apjdy00qci467v1kka15spcnppmdxrnwgs6p9n") (f (quote (("with-uuid" "uuid") ("with-rust_decimal" "rust_decimal") ("with-json" "serde_json") ("with-chrono" "chrono") ("with-bigdecimal" "bigdecimal") ("thread-safe") ("sqlx-sqlite") ("sqlx-postgres") ("sqlx-mysql") ("rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-rust_decimal" "with-rust_decimal" "rust_decimal/db-postgres") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres-bigdecimal" "with-bigdecimal") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.17.0 (c (n "sea-query") (v "0.17.0") (d (list (d (n "bigdecimal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "0afvlxxz1ia3632x34brn6jydh833gcxkv7hcf3g9r300xlnvny1") (f (quote (("with-uuid" "uuid") ("with-rust_decimal" "rust_decimal") ("with-json" "serde_json") ("with-chrono" "chrono") ("with-bigdecimal" "bigdecimal") ("thread-safe") ("sqlx-sqlite") ("sqlx-postgres") ("sqlx-mysql") ("rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-rust_decimal" "with-rust_decimal" "rust_decimal/db-postgres") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres-bigdecimal" "with-bigdecimal") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.17.1 (c (n "sea-query") (v "0.17.1") (d (list (d (n "bigdecimal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "1aiag91wl2s7xqxjfjv7qfy5bf2pp5sgplw4nqrvvlcm7qpgksi6") (f (quote (("with-uuid" "uuid") ("with-rust_decimal" "rust_decimal") ("with-json" "serde_json") ("with-chrono" "chrono") ("with-bigdecimal" "bigdecimal") ("thread-safe") ("sqlx-sqlite") ("sqlx-postgres") ("sqlx-mysql") ("rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-rust_decimal" "with-rust_decimal" "rust_decimal/db-postgres") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres-bigdecimal" "with-bigdecimal") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql")))) (y #t)))

(define-public crate-sea-query-0.17.2 (c (n "sea-query") (v "0.17.2") (d (list (d (n "bigdecimal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "11k5ak2px0xyavjjfbnc20j1qf6pm1dc5yzb6dfl7761kqb2w00p") (f (quote (("with-uuid" "uuid") ("with-rust_decimal" "rust_decimal") ("with-json" "serde_json") ("with-chrono" "chrono") ("with-bigdecimal" "bigdecimal") ("thread-safe") ("sqlx-sqlite") ("sqlx-postgres") ("sqlx-mysql") ("rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-rust_decimal" "with-rust_decimal" "rust_decimal/db-postgres") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres-bigdecimal" "with-bigdecimal") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.18.0 (c (n "sea-query") (v "0.18.0") (d (list (d (n "bigdecimal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "0pzyw04a7dhy29c3j5miv6ha46pdwzn0s1b78yvb97l94nwkiddb") (f (quote (("with-uuid" "uuid") ("with-rust_decimal" "rust_decimal") ("with-json" "serde_json") ("with-chrono" "chrono") ("with-bigdecimal" "bigdecimal") ("thread-safe") ("sqlx-sqlite") ("sqlx-postgres") ("sqlx-mysql") ("rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-rust_decimal" "with-rust_decimal" "rust_decimal/db-postgres") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres-bigdecimal" "with-bigdecimal") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.16.6 (c (n "sea-query") (v "0.16.6") (d (list (d (n "bigdecimal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "1aya8lmgqpcn6xbk2825l0lfk36yfahks7bdbkh764z2y2jzvrg1") (f (quote (("with-uuid" "uuid") ("with-rust_decimal" "rust_decimal") ("with-json" "serde_json") ("with-chrono" "chrono") ("with-bigdecimal" "bigdecimal") ("thread-safe") ("sqlx-sqlite") ("sqlx-postgres") ("sqlx-mysql") ("rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-rust_decimal" "with-rust_decimal" "rust_decimal/db-postgres") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres-bigdecimal" "with-bigdecimal") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.17.3 (c (n "sea-query") (v "0.17.3") (d (list (d (n "bigdecimal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "1ndjz4wjpspc28ycxm7ij1h00p1g0y3b4nvhz0fgd3my4477r2fs") (f (quote (("with-uuid" "uuid") ("with-rust_decimal" "rust_decimal") ("with-json" "serde_json") ("with-chrono" "chrono") ("with-bigdecimal" "bigdecimal") ("thread-safe") ("sqlx-sqlite") ("sqlx-postgres") ("sqlx-mysql") ("rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-rust_decimal" "with-rust_decimal" "rust_decimal/db-postgres") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres-bigdecimal" "with-bigdecimal") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.18.1 (c (n "sea-query") (v "0.18.1") (d (list (d (n "bigdecimal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "0a2h5a21qmg2smiisr7nqmrwf0qwnx3x7cpidzawdjg0mbj87jj2") (f (quote (("with-uuid" "uuid") ("with-rust_decimal" "rust_decimal") ("with-json" "serde_json") ("with-chrono" "chrono") ("with-bigdecimal" "bigdecimal") ("thread-safe") ("sqlx-sqlite") ("sqlx-postgres") ("sqlx-mysql") ("rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-rust_decimal" "with-rust_decimal" "rust_decimal/db-postgres") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres-bigdecimal" "with-bigdecimal") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.18.2 (c (n "sea-query") (v "0.18.2") (d (list (d (n "bigdecimal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "1msnh8xlbjl4c34fccjlw1vmxdsgarxr2720sslpcl29ghdcxq0a") (f (quote (("with-uuid" "uuid") ("with-rust_decimal" "rust_decimal") ("with-json" "serde_json") ("with-chrono" "chrono") ("with-bigdecimal" "bigdecimal") ("thread-safe") ("sqlx-sqlite") ("sqlx-postgres") ("sqlx-mysql") ("rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-rust_decimal" "with-rust_decimal" "rust_decimal/db-postgres") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres-bigdecimal" "with-bigdecimal") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.19.0 (c (n "sea-query") (v "0.19.0") (d (list (d (n "bigdecimal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "00f254a2izi0nsnb3any34bnhyijzx90c77hqnx0k48fc6hmlam0") (f (quote (("with-uuid" "uuid") ("with-rust_decimal" "rust_decimal") ("with-json" "serde_json") ("with-chrono" "chrono") ("with-bigdecimal" "bigdecimal") ("thread-safe") ("sqlx-sqlite") ("sqlx-postgres") ("sqlx-mysql") ("rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-rust_decimal" "with-rust_decimal" "rust_decimal/db-postgres") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres-bigdecimal" "with-bigdecimal") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.19.1 (c (n "sea-query") (v "0.19.1") (d (list (d (n "bigdecimal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "0pwdsrv21grcd7k35qs8hdh24ic89w7wz30wvh0bh4ap5lnz2hv1") (f (quote (("with-uuid" "uuid") ("with-rust_decimal" "rust_decimal") ("with-json" "serde_json") ("with-chrono" "chrono") ("with-bigdecimal" "bigdecimal") ("thread-safe") ("sqlx-sqlite") ("sqlx-postgres") ("sqlx-mysql") ("rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-rust_decimal" "with-rust_decimal" "rust_decimal/db-postgres") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres-bigdecimal" "with-bigdecimal") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.19.2 (c (n "sea-query") (v "0.19.2") (d (list (d (n "bigdecimal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "108wibq8yizs621ldrlysi2ihan3ipy7q0428acbsz9pda0489ad") (f (quote (("with-uuid" "uuid") ("with-rust_decimal" "rust_decimal") ("with-json" "serde_json") ("with-chrono" "chrono") ("with-bigdecimal" "bigdecimal") ("thread-safe") ("sqlx-sqlite") ("sqlx-postgres") ("sqlx-mysql") ("rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-rust_decimal" "with-rust_decimal" "rust_decimal/db-postgres") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres-bigdecimal" "with-bigdecimal") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.19.3 (c (n "sea-query") (v "0.19.3") (d (list (d (n "bigdecimal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "12y1f0bhc3gm2mxicv1ksr413ph54llrvwwwyrnrlzc90qamkn9f") (f (quote (("with-uuid" "uuid") ("with-rust_decimal" "rust_decimal") ("with-json" "serde_json") ("with-chrono" "chrono") ("with-bigdecimal" "bigdecimal") ("thread-safe") ("sqlx-sqlite") ("sqlx-postgres") ("sqlx-mysql") ("rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-rust_decimal" "with-rust_decimal" "rust_decimal/db-postgres") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres-bigdecimal" "with-bigdecimal") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql")))) (y #t)))

(define-public crate-sea-query-0.19.4 (c (n "sea-query") (v "0.19.4") (d (list (d (n "bigdecimal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "0bqh5zpqkj0pzzq12cwim5xx1zy613adxzli4rxy8qaahlykbijp") (f (quote (("with-uuid" "uuid") ("with-rust_decimal" "rust_decimal") ("with-json" "serde_json") ("with-chrono" "chrono") ("with-bigdecimal" "bigdecimal") ("thread-safe") ("sqlx-sqlite") ("sqlx-postgres") ("sqlx-mysql") ("rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-rust_decimal" "with-rust_decimal" "rust_decimal/db-postgres") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres-bigdecimal" "with-bigdecimal") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.20.0 (c (n "sea-query") (v "0.20.0") (d (list (d (n "bigdecimal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "1n6amavg34iibaimk1cshs3r90l81a6s4lx4dhfbcicmsw6llgnq") (f (quote (("with-uuid" "uuid") ("with-rust_decimal" "rust_decimal") ("with-json" "serde_json") ("with-chrono" "chrono") ("with-bigdecimal" "bigdecimal") ("thread-safe") ("sqlx-sqlite") ("sqlx-postgres") ("sqlx-mysql") ("rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-rust_decimal" "with-rust_decimal" "rust_decimal/db-postgres") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres-bigdecimal" "with-bigdecimal") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.21.0 (c (n "sea-query") (v "0.21.0") (d (list (d (n "bigdecimal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (o #t) (d #t) (k 0)) (d (n "quote") (r "^1") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "0068b21c9grrfgcgcfkp2l2v35wxvm7nanm8k1fsfq482nbgz24h") (f (quote (("with-uuid" "uuid") ("with-rust_decimal" "rust_decimal") ("with-json" "serde_json") ("with-chrono" "chrono") ("with-bigdecimal" "bigdecimal") ("thread-safe") ("sqlx-sqlite") ("sqlx-postgres") ("sqlx-mysql") ("rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-rust_decimal" "with-rust_decimal" "rust_decimal/db-postgres") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-interval" "proc-macro2" "quote") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres-bigdecimal" "with-bigdecimal") ("postgres-array" "postgres-types/array-impls") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.21.1 (c (n "sea-query") (v "0.21.1") (d (list (d (n "bigdecimal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (o #t) (d #t) (k 0)) (d (n "quote") (r "^1") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "1hd8lpkvdzcp6vwfww3hkv6vnblzqar4yqhrv1cvjx13cpsfmipm") (f (quote (("with-uuid" "uuid") ("with-rust_decimal" "rust_decimal") ("with-json" "serde_json") ("with-chrono" "chrono") ("with-bigdecimal" "bigdecimal") ("thread-safe") ("sqlx-sqlite") ("sqlx-postgres") ("sqlx-mysql") ("rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-rust_decimal" "with-rust_decimal" "rust_decimal/db-postgres") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-interval" "proc-macro2" "quote") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres-bigdecimal" "with-bigdecimal") ("postgres-array" "postgres-types/array-impls") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql")))) (y #t)))

(define-public crate-sea-query-0.21.2 (c (n "sea-query") (v "0.21.2") (d (list (d (n "bigdecimal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (o #t) (d #t) (k 0)) (d (n "quote") (r "^1") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "05ky69hxm0vvkl00v4k4svnny1yc83mia6jappb1k092h7v0sj3k") (f (quote (("with-uuid" "uuid") ("with-rust_decimal" "rust_decimal") ("with-json" "serde_json") ("with-chrono" "chrono") ("with-bigdecimal" "bigdecimal") ("thread-safe") ("sqlx-sqlite") ("sqlx-postgres") ("sqlx-mysql") ("rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-rust_decimal" "with-rust_decimal" "rust_decimal/db-postgres") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-interval" "proc-macro2" "quote") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres-bigdecimal" "with-bigdecimal") ("postgres-array" "postgres-types/array-impls") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql")))) (y #t)))

(define-public crate-sea-query-0.22.0 (c (n "sea-query") (v "0.22.0") (d (list (d (n "bigdecimal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (o #t) (d #t) (k 0)) (d (n "quote") (r "^1") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "1hx3wz22dylkcam6vqarsn5789jj65j7c8sx603xs7p6s7l90w3j") (f (quote (("with-uuid" "uuid") ("with-rust_decimal" "rust_decimal") ("with-json" "serde_json") ("with-chrono" "chrono") ("with-bigdecimal" "bigdecimal") ("thread-safe") ("sqlx-sqlite") ("sqlx-postgres") ("sqlx-mysql") ("rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-rust_decimal" "with-rust_decimal" "rust_decimal/db-postgres") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-interval" "proc-macro2" "quote") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres-bigdecimal" "with-bigdecimal") ("postgres-array" "postgres-types/array-impls") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.23.0 (c (n "sea-query") (v "0.23.0") (d (list (d (n "bigdecimal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (o #t) (d #t) (k 0)) (d (n "quote") (r "^1") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "0cb2w89kbai8n36s9bd51fq4mrbg8kkpr5acrpc0dqjr6b04zwib") (f (quote (("with-uuid" "uuid") ("with-time" "time") ("with-rust_decimal" "rust_decimal") ("with-json" "serde_json") ("with-chrono" "chrono") ("with-bigdecimal" "bigdecimal") ("thread-safe") ("sqlx-sqlite") ("sqlx-postgres") ("sqlx-mysql") ("rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-time" "with-time" "postgres-types/with-time-0_2") ("postgres-rust_decimal" "with-rust_decimal" "rust_decimal/db-postgres") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-interval" "proc-macro2" "quote") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres-bigdecimal" "with-bigdecimal") ("postgres-array" "postgres-types/array-impls") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.24.0 (c (n "sea-query") (v "0.24.0") (d (list (d (n "bigdecimal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1") (o #t) (d #t) (k 0)) (d (n "quote") (r "^1") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "sea-query-driver") (r "^0.1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "19dgiwx21sxyh4835vl7i1c04z7v96s6wlh1433w8cnd71cf4nik") (f (quote (("with-uuid" "uuid" "sea-query-driver/with-uuid") ("with-time" "time" "sea-query-driver/with-time") ("with-rust_decimal" "rust_decimal" "sea-query-driver/with-rust_decimal") ("with-json" "serde_json" "sea-query-driver/with-json") ("with-chrono" "chrono" "sea-query-driver/with-chrono") ("with-bigdecimal" "bigdecimal" "sea-query-driver/with-bigdecimal") ("thread-safe") ("sqlx-sqlite" "sea-query-driver/sqlx-sqlite") ("sqlx-postgres" "sea-query-driver/sqlx-postgres") ("sqlx-mysql" "sea-query-driver/sqlx-mysql") ("rusqlite" "sea-query-driver/rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-time" "with-time" "postgres-types/with-time-0_2") ("postgres-rust_decimal" "with-rust_decimal" "rust_decimal/db-postgres") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-interval" "proc-macro2" "quote") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres-bigdecimal" "with-bigdecimal") ("postgres-array" "postgres-types/array-impls" "sea-query-driver/postgres-array") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql")))) (y #t)))

(define-public crate-sea-query-0.24.1 (c (n "sea-query") (v "0.24.1") (d (list (d (n "bigdecimal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1") (o #t) (d #t) (k 0)) (d (n "quote") (r "^1") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "sea-query-driver") (r "^0.1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "0izj9vhmilg41j5cr3xlv5y2j29rs1pq9w72pjlcwjbba9chim02") (f (quote (("with-uuid" "uuid" "sea-query-driver/with-uuid") ("with-time" "time" "sea-query-driver/with-time") ("with-rust_decimal" "rust_decimal" "sea-query-driver/with-rust_decimal") ("with-json" "serde_json" "sea-query-driver/with-json") ("with-chrono" "chrono" "sea-query-driver/with-chrono") ("with-bigdecimal" "bigdecimal" "sea-query-driver/with-bigdecimal") ("thread-safe") ("sqlx-sqlite" "sea-query-driver/sqlx-sqlite") ("sqlx-postgres" "sea-query-driver/sqlx-postgres") ("sqlx-mysql" "sea-query-driver/sqlx-mysql") ("rusqlite" "sea-query-driver/rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-time" "with-time" "postgres-types/with-time-0_2") ("postgres-rust_decimal" "with-rust_decimal" "rust_decimal/db-postgres") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-interval" "proc-macro2" "quote") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres-bigdecimal" "with-bigdecimal") ("postgres-array" "postgres-types/array-impls" "sea-query-driver/postgres-array") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql")))) (y #t)))

(define-public crate-sea-query-0.24.2 (c (n "sea-query") (v "0.24.2") (d (list (d (n "bigdecimal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1") (o #t) (d #t) (k 0)) (d (n "quote") (r "^1") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "sea-query-driver") (r "^0.1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "06gysn5b1ihy4pcqb5xsp9zz9m31ygi4jn5aqcc2rz1n7k30xh4q") (f (quote (("with-uuid" "uuid" "sea-query-driver/with-uuid") ("with-time" "time" "sea-query-driver/with-time") ("with-rust_decimal" "rust_decimal" "sea-query-driver/with-rust_decimal") ("with-json" "serde_json" "sea-query-driver/with-json") ("with-chrono" "chrono" "sea-query-driver/with-chrono") ("with-bigdecimal" "bigdecimal" "sea-query-driver/with-bigdecimal") ("thread-safe") ("sqlx-sqlite" "sea-query-driver/sqlx-sqlite") ("sqlx-postgres" "sea-query-driver/sqlx-postgres") ("sqlx-mysql" "sea-query-driver/sqlx-mysql") ("rusqlite" "sea-query-driver/rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-time" "with-time" "postgres-types/with-time-0_2") ("postgres-rust_decimal" "with-rust_decimal" "rust_decimal/db-postgres") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-interval" "proc-macro2" "quote") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres-bigdecimal" "with-bigdecimal") ("postgres-array" "postgres-types/array-impls" "sea-query-driver/postgres-array") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.24.3 (c (n "sea-query") (v "0.24.3") (d (list (d (n "bigdecimal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1") (o #t) (d #t) (k 0)) (d (n "quote") (r "^1") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "sea-query-driver") (r "^0.1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "1yc8yb0bdzqz7ql8il31s23mknpy18bzylg1lf2fvn82mgh03lgi") (f (quote (("with-uuid" "uuid" "sea-query-driver/with-uuid") ("with-time" "time" "sea-query-driver/with-time") ("with-rust_decimal" "rust_decimal" "sea-query-driver/with-rust_decimal") ("with-json" "serde_json" "sea-query-driver/with-json") ("with-chrono" "chrono" "sea-query-driver/with-chrono") ("with-bigdecimal" "bigdecimal" "sea-query-driver/with-bigdecimal") ("thread-safe") ("sqlx-sqlite" "sea-query-driver/sqlx-sqlite") ("sqlx-postgres" "sea-query-driver/sqlx-postgres") ("sqlx-mysql" "sea-query-driver/sqlx-mysql") ("rusqlite" "sea-query-driver/rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-time" "with-time" "postgres-types/with-time-0_2") ("postgres-rust_decimal" "with-rust_decimal" "rust_decimal/db-postgres") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-interval" "proc-macro2" "quote") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres-bigdecimal" "with-bigdecimal") ("postgres-array" "postgres-types/array-impls" "sea-query-driver/postgres-array") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.24.4 (c (n "sea-query") (v "0.24.4") (d (list (d (n "bigdecimal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1") (o #t) (d #t) (k 0)) (d (n "quote") (r "^1") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "sea-query-driver") (r "^0.1.1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "15aacskgg59318zbdvr606mq6pxpmpgky74zlnzkd1lfgpnmw929") (f (quote (("with-uuid" "uuid" "sea-query-driver/with-uuid") ("with-time" "time" "sea-query-driver/with-time") ("with-rust_decimal" "rust_decimal" "sea-query-driver/with-rust_decimal") ("with-json" "serde_json" "sea-query-driver/with-json") ("with-chrono" "chrono" "sea-query-driver/with-chrono") ("with-bigdecimal" "bigdecimal" "sea-query-driver/with-bigdecimal") ("thread-safe") ("sqlx-sqlite" "sea-query-driver/sqlx-sqlite") ("sqlx-postgres" "sea-query-driver/sqlx-postgres") ("sqlx-mysql" "sea-query-driver/sqlx-mysql") ("rusqlite" "sea-query-driver/rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-time" "with-time" "postgres-types/with-time-0_2") ("postgres-rust_decimal" "with-rust_decimal" "rust_decimal/db-postgres") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-interval" "proc-macro2" "quote") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres-bigdecimal" "with-bigdecimal") ("postgres-array" "postgres-types/array-impls" "sea-query-driver/postgres-array") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.24.5 (c (n "sea-query") (v "0.24.5") (d (list (d (n "bigdecimal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1") (o #t) (d #t) (k 0)) (d (n "quote") (r "^1") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "sea-query-driver") (r "^0.1.1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "0s1sqxxdk0xp9x1zczg737kqjy5kq1q19qrd0smbdiqg3m4a4zqp") (f (quote (("with-uuid" "uuid" "sea-query-driver/with-uuid") ("with-time" "time" "sea-query-driver/with-time") ("with-rust_decimal" "rust_decimal" "sea-query-driver/with-rust_decimal") ("with-json" "serde_json" "sea-query-driver/with-json") ("with-chrono" "chrono" "sea-query-driver/with-chrono") ("with-bigdecimal" "bigdecimal" "sea-query-driver/with-bigdecimal") ("thread-safe") ("sqlx-sqlite" "sea-query-driver/sqlx-sqlite") ("sqlx-postgres" "sea-query-driver/sqlx-postgres") ("sqlx-mysql" "sea-query-driver/sqlx-mysql") ("rusqlite" "sea-query-driver/rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-time" "with-time" "postgres-types/with-time-0_2") ("postgres-rust_decimal" "with-rust_decimal" "rust_decimal/db-postgres") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-interval" "proc-macro2" "quote") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres-bigdecimal" "with-bigdecimal") ("postgres-array" "postgres-types/array-impls" "sea-query-driver/postgres-array") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.24.6 (c (n "sea-query") (v "0.24.6") (d (list (d (n "bigdecimal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1") (o #t) (d #t) (k 0)) (d (n "quote") (r "^1") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "sea-query-driver") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "0aps627v7xbr6xmk547dy4rkg72pkl60nnw03v3dycxfnlnsc3vb") (f (quote (("with-uuid" "uuid" "sea-query-driver/with-uuid") ("with-time" "time" "sea-query-driver/with-time") ("with-rust_decimal" "rust_decimal" "sea-query-driver/with-rust_decimal") ("with-json" "serde_json" "sea-query-driver/with-json") ("with-chrono" "chrono" "sea-query-driver/with-chrono") ("with-bigdecimal" "bigdecimal" "sea-query-driver/with-bigdecimal") ("thread-safe") ("sqlx-sqlite" "sea-query-driver/sqlx-sqlite") ("sqlx-postgres" "sea-query-driver/sqlx-postgres") ("sqlx-mysql" "sea-query-driver/sqlx-mysql") ("rusqlite" "sea-query-driver/rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-time" "with-time" "postgres-types/with-time-0_2") ("postgres-rust_decimal" "with-rust_decimal" "rust_decimal/db-postgres") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-interval" "proc-macro2" "quote") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres-bigdecimal" "with-bigdecimal") ("postgres-array" "postgres-types/array-impls" "sea-query-driver/postgres-array") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql"))))))

(define-public crate-sea-query-0.25.0 (c (n "sea-query") (v "0.25.0") (d (list (d (n "bigdecimal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1") (o #t) (d #t) (k 0)) (d (n "quote") (r "^1") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-attr") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "sea-query-driver") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "0hn57cgr65pfd40571716k8f64wcrawxk403lmmxhgxg6lhn1n8w") (f (quote (("thread-safe") ("sqlx-sqlite" "sea-query-driver/sqlx-sqlite") ("sqlx-postgres" "sea-query-driver/sqlx-postgres") ("sqlx-mysql" "sea-query-driver/sqlx-mysql") ("rusqlite" "sea-query-driver/rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-time" "with-time" "postgres-types/with-time-0_2") ("postgres-rust_decimal" "with-rust_decimal" "rust_decimal/db-postgres") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-interval" "proc-macro2" "quote") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres-bigdecimal" "with-bigdecimal") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql") ("attr" "sea-query-attr")))) (s 2) (e (quote (("with-uuid" "uuid" "sea-query-driver?/with-uuid") ("with-time" "time" "sea-query-driver?/with-time") ("with-rust_decimal" "rust_decimal" "sea-query-driver?/with-rust_decimal") ("with-json" "serde_json" "sea-query-driver?/with-json") ("with-chrono" "chrono" "sea-query-driver?/with-chrono") ("with-bigdecimal" "bigdecimal" "sea-query-driver?/with-bigdecimal") ("postgres-array" "postgres-types/array-impls" "sea-query-driver?/postgres-array"))))))

(define-public crate-sea-query-0.25.1 (c (n "sea-query") (v "0.25.1") (d (list (d (n "bigdecimal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1") (o #t) (d #t) (k 0)) (d (n "quote") (r "^1") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-attr") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "sea-query-driver") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "1jg34lrcfxaw2dsncadbnzsz0ddc070kb9aabc1hz70c9wimbn8y") (f (quote (("thread-safe") ("sqlx-sqlite" "sea-query-driver/sqlx-sqlite") ("sqlx-postgres" "sea-query-driver/sqlx-postgres") ("sqlx-mysql" "sea-query-driver/sqlx-mysql") ("rusqlite" "sea-query-driver/rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-time" "with-time" "postgres-types/with-time-0_2") ("postgres-rust_decimal" "with-rust_decimal" "rust_decimal/db-postgres") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-interval" "proc-macro2" "quote") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres-bigdecimal" "with-bigdecimal") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql") ("attr" "sea-query-attr")))) (s 2) (e (quote (("with-uuid" "uuid" "sea-query-driver?/with-uuid") ("with-time" "time" "sea-query-driver?/with-time") ("with-rust_decimal" "rust_decimal" "sea-query-driver?/with-rust_decimal") ("with-json" "serde_json" "sea-query-driver?/with-json") ("with-chrono" "chrono" "sea-query-driver?/with-chrono") ("with-bigdecimal" "bigdecimal" "sea-query-driver?/with-bigdecimal") ("postgres-array" "postgres-types/array-impls" "sea-query-driver?/postgres-array"))))))

(define-public crate-sea-query-0.25.2 (c (n "sea-query") (v "0.25.2") (d (list (d (n "bigdecimal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1") (o #t) (d #t) (k 0)) (d (n "quote") (r "^1") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-attr") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "sea-query-driver") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0") (o #t) (d #t) (k 0)))) (h "0knqiwjv1qb18qws7c1mwf1pfrn0my8rbg46fm5gsv4f67nb3bzn") (f (quote (("thread-safe") ("sqlx-sqlite" "sea-query-driver/sqlx-sqlite") ("sqlx-postgres" "sea-query-driver/sqlx-postgres") ("sqlx-mysql" "sea-query-driver/sqlx-mysql") ("rusqlite" "sea-query-driver/rusqlite") ("postgres-uuid" "with-uuid" "postgres-types/with-uuid-0_8") ("postgres-time" "with-time" "postgres-types/with-time-0_2") ("postgres-rust_decimal" "with-rust_decimal" "rust_decimal/db-postgres") ("postgres-json" "with-json" "postgres-types/with-serde_json-1") ("postgres-interval" "proc-macro2" "quote") ("postgres-chrono" "with-chrono" "postgres-types/with-chrono-0_4") ("postgres-bigdecimal" "with-bigdecimal") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql") ("attr" "sea-query-attr")))) (s 2) (e (quote (("with-uuid" "uuid" "sea-query-driver?/with-uuid") ("with-time" "time" "sea-query-driver?/with-time") ("with-rust_decimal" "rust_decimal" "sea-query-driver?/with-rust_decimal") ("with-json" "serde_json" "sea-query-driver?/with-json") ("with-chrono" "chrono" "sea-query-driver?/with-chrono") ("with-bigdecimal" "bigdecimal" "sea-query-driver?/with-bigdecimal") ("postgres-array" "postgres-types/array-impls" "sea-query-driver?/postgres-array"))))))

(define-public crate-sea-query-0.26.0 (c (n "sea-query") (v "0.26.0") (d (list (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "ipnetwork") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "mac_address") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1") (o #t) (d #t) (k 0)) (d (n "quote") (r "^1") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-attr") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "sea-query-driver") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "formatting"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "0ckqjfrl8g97cnc0ksf14rmm7xk1273178dv4gf9ni8259h33gzg") (f (quote (("thread-safe") ("sqlx-sqlite" "sea-query-driver/sqlx-sqlite") ("sqlx-postgres" "sea-query-driver/sqlx-postgres") ("sqlx-mysql" "sea-query-driver/sqlx-mysql") ("rusqlite" "sea-query-driver/rusqlite") ("postgres-rust_decimal" "with-rust_decimal" "rust_decimal/db-postgres") ("postgres-interval" "proc-macro2" "quote") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql") ("attr" "sea-query-attr")))) (s 2) (e (quote (("with-uuid" "uuid" "sea-query-driver?/with-uuid" "postgres-types?/with-uuid-1") ("with-time" "time" "sea-query-driver?/with-time" "postgres-types?/with-time-0_3") ("with-rust_decimal" "rust_decimal" "sea-query-driver?/with-rust_decimal") ("with-mac_address" "mac_address" "sea-query-driver?/with-mac_address") ("with-json" "serde_json" "sea-query-driver?/with-json" "postgres-types?/with-serde_json-1") ("with-ipnetwork" "ipnetwork" "sea-query-driver?/with-ipnetwork") ("with-chrono" "chrono" "sea-query-driver?/with-chrono" "postgres-types?/with-chrono-0_4") ("with-bigdecimal" "bigdecimal" "sea-query-driver?/with-bigdecimal") ("postgres-array" "postgres-types?/array-impls" "sea-query-driver?/postgres-array")))) (r "1.60")))

(define-public crate-sea-query-0.26.1 (c (n "sea-query") (v "0.26.1") (d (list (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "ipnetwork") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "mac_address") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1") (o #t) (d #t) (k 0)) (d (n "quote") (r "^1") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-attr") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "sea-query-driver") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "formatting"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "1vy1xhl17arid778l4q9h3c9pk3x0jynjk2fcn40gxgmykqj0fiz") (f (quote (("thread-safe") ("sqlx-sqlite" "sea-query-driver/sqlx-sqlite") ("sqlx-postgres" "sea-query-driver/sqlx-postgres") ("sqlx-mysql" "sea-query-driver/sqlx-mysql") ("rusqlite" "sea-query-driver/rusqlite") ("postgres-rust_decimal" "with-rust_decimal" "rust_decimal/db-postgres") ("postgres-interval" "proc-macro2" "quote") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql") ("attr" "sea-query-attr")))) (y #t) (s 2) (e (quote (("with-uuid" "uuid" "sea-query-driver?/with-uuid" "postgres-types?/with-uuid-1") ("with-time" "time" "sea-query-driver?/with-time" "postgres-types?/with-time-0_3") ("with-rust_decimal" "rust_decimal" "sea-query-driver?/with-rust_decimal") ("with-mac_address" "mac_address" "sea-query-driver?/with-mac_address") ("with-json" "serde_json" "sea-query-driver?/with-json" "postgres-types?/with-serde_json-1") ("with-ipnetwork" "ipnetwork" "sea-query-driver?/with-ipnetwork") ("with-chrono" "chrono" "sea-query-driver?/with-chrono" "postgres-types?/with-chrono-0_4") ("with-bigdecimal" "bigdecimal" "sea-query-driver?/with-bigdecimal") ("postgres-array" "postgres-types?/array-impls" "sea-query-driver?/postgres-array")))) (r "1.60")))

(define-public crate-sea-query-0.26.2 (c (n "sea-query") (v "0.26.2") (d (list (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "ipnetwork") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "mac_address") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1") (o #t) (d #t) (k 0)) (d (n "quote") (r "^1") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-attr") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "sea-query-driver") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "formatting"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "09rmlfbz58yscg0pzgkw0pw32jnvx8yi83l928igzh0lfvjs75r9") (f (quote (("thread-safe") ("sqlx-sqlite" "sea-query-driver/sqlx-sqlite") ("sqlx-postgres" "sea-query-driver/sqlx-postgres") ("sqlx-mysql" "sea-query-driver/sqlx-mysql") ("rusqlite" "sea-query-driver/rusqlite") ("postgres-rust_decimal" "with-rust_decimal" "rust_decimal/db-postgres") ("postgres-interval" "proc-macro2" "quote") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql") ("attr" "sea-query-attr")))) (s 2) (e (quote (("with-uuid" "uuid" "sea-query-driver?/with-uuid" "postgres-types?/with-uuid-1") ("with-time" "time" "sea-query-driver?/with-time" "postgres-types?/with-time-0_3") ("with-rust_decimal" "rust_decimal" "sea-query-driver?/with-rust_decimal") ("with-mac_address" "mac_address" "sea-query-driver?/with-mac_address") ("with-json" "serde_json" "sea-query-driver?/with-json" "postgres-types?/with-serde_json-1") ("with-ipnetwork" "ipnetwork" "sea-query-driver?/with-ipnetwork") ("with-chrono" "chrono" "sea-query-driver?/with-chrono" "postgres-types?/with-chrono-0_4") ("with-bigdecimal" "bigdecimal" "sea-query-driver?/with-bigdecimal") ("postgres-array" "postgres-types?/array-impls" "sea-query-driver?/postgres-array")))) (r "1.60")))

(define-public crate-sea-query-0.26.3 (c (n "sea-query") (v "0.26.3") (d (list (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (f (quote ("clock"))) (o #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "ipnetwork") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "mac_address") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1") (o #t) (d #t) (k 0)) (d (n "quote") (r "^1") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-attr") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "sea-query-driver") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "formatting"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "0w7x7gs9iqgi05016nlh7x0kfrwz7hy61l8vnmz5z29l0ffxx8d6") (f (quote (("thread-safe") ("sqlx-sqlite" "sea-query-driver/sqlx-sqlite") ("sqlx-postgres" "sea-query-driver/sqlx-postgres") ("sqlx-mysql" "sea-query-driver/sqlx-mysql") ("rusqlite" "sea-query-driver/rusqlite") ("postgres-rust_decimal" "with-rust_decimal" "rust_decimal/db-postgres") ("postgres-interval" "proc-macro2" "quote") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql") ("attr" "sea-query-attr")))) (s 2) (e (quote (("with-uuid" "uuid" "sea-query-driver?/with-uuid" "postgres-types?/with-uuid-1") ("with-time" "time" "sea-query-driver?/with-time" "postgres-types?/with-time-0_3") ("with-rust_decimal" "rust_decimal" "sea-query-driver?/with-rust_decimal") ("with-mac_address" "mac_address" "sea-query-driver?/with-mac_address") ("with-json" "serde_json" "sea-query-driver?/with-json" "postgres-types?/with-serde_json-1") ("with-ipnetwork" "ipnetwork" "sea-query-driver?/with-ipnetwork") ("with-chrono" "chrono" "sea-query-driver?/with-chrono" "postgres-types?/with-chrono-0_4") ("with-bigdecimal" "bigdecimal" "sea-query-driver?/with-bigdecimal") ("postgres-array" "postgres-types?/array-impls" "sea-query-driver?/postgres-array")))) (r "1.60")))

(define-public crate-sea-query-0.26.4 (c (n "sea-query") (v "0.26.4") (d (list (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0") (f (quote ("clock"))) (o #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "ipnetwork") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "mac_address") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1") (o #t) (d #t) (k 0)) (d (n "quote") (r "^1") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-attr") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "sea-query-driver") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "formatting"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "0dm5wyrzjg8cw87pfnwhc0i5d0ggwya0y8x55rflwjw5h2b6mqqm") (f (quote (("thread-safe") ("sqlx-sqlite" "sea-query-driver/sqlx-sqlite") ("sqlx-postgres" "sea-query-driver/sqlx-postgres") ("sqlx-mysql" "sea-query-driver/sqlx-mysql") ("rusqlite" "sea-query-driver/rusqlite") ("postgres-rust_decimal" "with-rust_decimal" "rust_decimal/db-postgres") ("postgres-interval" "proc-macro2" "quote") ("postgres" "bytes" "postgres-types") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql") ("attr" "sea-query-attr")))) (s 2) (e (quote (("with-uuid" "uuid" "sea-query-driver?/with-uuid" "postgres-types?/with-uuid-1") ("with-time" "time" "sea-query-driver?/with-time" "postgres-types?/with-time-0_3") ("with-rust_decimal" "rust_decimal" "sea-query-driver?/with-rust_decimal") ("with-mac_address" "mac_address" "sea-query-driver?/with-mac_address") ("with-json" "serde_json" "sea-query-driver?/with-json" "postgres-types?/with-serde_json-1") ("with-ipnetwork" "ipnetwork" "sea-query-driver?/with-ipnetwork") ("with-chrono" "chrono" "sea-query-driver?/with-chrono" "postgres-types?/with-chrono-0_4") ("with-bigdecimal" "bigdecimal" "sea-query-driver?/with-bigdecimal") ("postgres-array" "postgres-types?/array-impls" "sea-query-driver?/postgres-array")))) (r "1.60")))

(define-public crate-sea-query-0.27.0 (c (n "sea-query") (v "0.27.0") (d (list (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (o #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "ipnetwork") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "mac_address") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1") (o #t) (d #t) (k 0)) (d (n "quote") (r "^1") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-attr") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "formatting"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "0mk1qxbbjq0lrs4q19v993agh1whfa6q8gyjch3qc7qcibnz8jp1") (f (quote (("with-uuid" "uuid") ("with-time" "time") ("with-rust_decimal" "rust_decimal") ("with-mac_address" "mac_address") ("with-json" "serde_json") ("with-ipnetwork" "ipnetwork") ("with-chrono" "chrono") ("with-bigdecimal" "bigdecimal") ("thread-safe") ("postgres-interval" "proc-macro2" "quote") ("postgres-array") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql") ("attr" "sea-query-attr")))) (r "1.60")))

(define-public crate-sea-query-0.27.1 (c (n "sea-query") (v "0.27.1") (d (list (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (o #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "ipnetwork") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "mac_address") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1") (o #t) (d #t) (k 0)) (d (n "quote") (r "^1") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-attr") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "formatting"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "0zqqrvr378hb5vfn9fsajhm8m0jv20ap5g4cvhglvgn4a4wai5rl") (f (quote (("with-uuid" "uuid") ("with-time" "time") ("with-rust_decimal" "rust_decimal") ("with-mac_address" "mac_address") ("with-json" "serde_json") ("with-ipnetwork" "ipnetwork") ("with-chrono" "chrono") ("with-bigdecimal" "bigdecimal") ("thread-safe") ("postgres-interval" "proc-macro2" "quote") ("postgres-array") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql") ("attr" "sea-query-attr")))) (r "1.60")))

(define-public crate-sea-query-0.27.2 (c (n "sea-query") (v "0.27.2") (d (list (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (o #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "ipnetwork") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "mac_address") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1") (o #t) (d #t) (k 0)) (d (n "quote") (r "^1") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-attr") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "formatting"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "1vcjxkk9nr1jbrfhfy1pamcvq61a4lvd6s4sfcfdbqa4ir6zrw54") (f (quote (("with-uuid" "uuid") ("with-time" "time") ("with-rust_decimal" "rust_decimal") ("with-mac_address" "mac_address") ("with-json" "serde_json") ("with-ipnetwork" "ipnetwork") ("with-chrono" "chrono") ("with-bigdecimal" "bigdecimal") ("thread-safe") ("postgres-interval" "proc-macro2" "quote") ("postgres-array") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql") ("attr" "sea-query-attr")))) (r "1.60")))

(define-public crate-sea-query-0.28.0 (c (n "sea-query") (v "0.28.0") (d (list (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (o #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "ipnetwork") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "mac_address") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1") (o #t) (d #t) (k 0)) (d (n "quote") (r "^1") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-attr") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "formatting"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "19fy1jp4j34kkyrxz6dyb8yi92qq18jylis6hp1v2mq8qaci05d8") (f (quote (("with-uuid" "uuid") ("with-time" "time") ("with-rust_decimal" "rust_decimal") ("with-mac_address" "mac_address") ("with-json" "serde_json") ("with-ipnetwork" "ipnetwork") ("with-chrono" "chrono") ("with-bigdecimal" "bigdecimal") ("thread-safe") ("postgres-interval" "proc-macro2" "quote") ("postgres-array") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql") ("attr" "sea-query-attr")))) (r "1.62")))

(define-public crate-sea-query-0.28.1 (c (n "sea-query") (v "0.28.1") (d (list (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (o #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "ipnetwork") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "mac_address") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1") (o #t) (d #t) (k 0)) (d (n "quote") (r "^1") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-attr") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "formatting"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "12z8n5kbh3la69ld1lsi7pf9x8frdj4p8zw7m9jnv9b161mar6f6") (f (quote (("with-uuid" "uuid") ("with-time" "time") ("with-rust_decimal" "rust_decimal") ("with-mac_address" "mac_address") ("with-json" "serde_json") ("with-ipnetwork" "ipnetwork") ("with-chrono" "chrono") ("with-bigdecimal" "bigdecimal") ("thread-safe") ("postgres-interval" "proc-macro2" "quote") ("postgres-array") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql") ("attr" "sea-query-attr")))) (r "1.62")))

(define-public crate-sea-query-0.28.2 (c (n "sea-query") (v "0.28.2") (d (list (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (o #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "ipnetwork") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "mac_address") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1") (o #t) (d #t) (k 0)) (d (n "quote") (r "^1") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-attr") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "formatting"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "1rz6nkpcgbcryynhzjqm9gk98zr6ymg5jl52xi88y8gnasy6qhai") (f (quote (("with-uuid" "uuid") ("with-time" "time") ("with-rust_decimal" "rust_decimal") ("with-mac_address" "mac_address") ("with-json" "serde_json") ("with-ipnetwork" "ipnetwork") ("with-chrono" "chrono") ("with-bigdecimal" "bigdecimal") ("thread-safe") ("postgres-interval" "proc-macro2" "quote") ("postgres-array") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql") ("attr" "sea-query-attr")))) (r "1.62")))

(define-public crate-sea-query-0.28.3 (c (n "sea-query") (v "0.28.3") (d (list (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (o #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "ipnetwork") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "mac_address") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1") (o #t) (d #t) (k 0)) (d (n "quote") (r "^1") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-attr") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "formatting"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "00vgkpc5rj23lpykvfanqa5957i8nr7y3hbikn1di9ysvcay1yyj") (f (quote (("with-uuid" "uuid") ("with-time" "time") ("with-rust_decimal" "rust_decimal") ("with-mac_address" "mac_address") ("with-json" "serde_json") ("with-ipnetwork" "ipnetwork") ("with-chrono" "chrono") ("with-bigdecimal" "bigdecimal") ("thread-safe") ("postgres-interval" "proc-macro2" "quote") ("postgres-array") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql") ("attr" "sea-query-attr")))) (r "1.62")))

(define-public crate-sea-query-0.29.0-rc.1 (c (n "sea-query") (v "0.29.0-rc.1") (d (list (d (n "bigdecimal") (r "^0.3") (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derivative") (r "^2.2") (o #t) (k 0)) (d (n "inherent") (r "^1.0") (d #t) (k 0)) (d (n "ipnetwork") (r "^0.19") (o #t) (k 0)) (d (n "mac_address") (r "^1.1") (o #t) (k 0)) (d (n "ordered-float") (r "^3.4") (o #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1") (o #t) (k 0)) (d (n "quote") (r "^1") (o #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (k 0)) (d (n "sea-query-attr") (r "^0.1.1") (o #t) (k 0)) (d (n "sea-query-derive") (r "^0.3.0") (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "formatting"))) (o #t) (k 0)) (d (n "uuid") (r "^1") (o #t) (k 0)))) (h "0cbsli661i2q8k768y4cnj28p08wd2js8wj6l4kac7gw2bcfs3if") (f (quote (("with-uuid" "uuid") ("with-time" "time") ("with-rust_decimal" "rust_decimal") ("with-mac_address" "mac_address") ("with-json" "serde_json") ("with-ipnetwork" "ipnetwork") ("with-chrono" "chrono") ("with-bigdecimal" "bigdecimal") ("thread-safe") ("tests-cfg") ("postgres-interval" "proc-macro2" "quote") ("postgres-array") ("hashable-value" "derivative" "ordered-float") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql") ("attr" "sea-query-attr")))) (r "1.62")))

(define-public crate-sea-query-0.28.4 (c (n "sea-query") (v "0.28.4") (d (list (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (o #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "ipnetwork") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "mac_address") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1") (o #t) (d #t) (k 0)) (d (n "quote") (r "^1") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-attr") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "formatting"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "16xmbv5j21z9k5k0g44i6ibrram19gabs50l4dwyrsfxbzh4plsx") (f (quote (("with-uuid" "uuid") ("with-time" "time") ("with-rust_decimal" "rust_decimal") ("with-mac_address" "mac_address") ("with-json" "serde_json") ("with-ipnetwork" "ipnetwork") ("with-chrono" "chrono") ("with-bigdecimal" "bigdecimal") ("thread-safe") ("postgres-interval" "proc-macro2" "quote") ("postgres-array") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql") ("attr" "sea-query-attr")))) (r "1.62")))

(define-public crate-sea-query-0.28.5 (c (n "sea-query") (v "0.28.5") (d (list (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (o #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "ipnetwork") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "mac_address") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1") (o #t) (d #t) (k 0)) (d (n "quote") (r "^1") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query-attr") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "sea-query-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "formatting"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "06j09d9m2ny8i245xr66gj0accv3z66ypdspc5wbg2l7rnw9kaxv") (f (quote (("with-uuid" "uuid") ("with-time" "time") ("with-rust_decimal" "rust_decimal") ("with-mac_address" "mac_address") ("with-json" "serde_json") ("with-ipnetwork" "ipnetwork") ("with-chrono" "chrono") ("with-bigdecimal" "bigdecimal") ("thread-safe") ("postgres-interval" "proc-macro2" "quote") ("postgres-array") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql") ("attr" "sea-query-attr")))) (r "1.62")))

(define-public crate-sea-query-0.29.0-rc.2 (c (n "sea-query") (v "0.29.0-rc.2") (d (list (d (n "bigdecimal") (r "^0.3") (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derivative") (r "^2.2") (o #t) (k 0)) (d (n "inherent") (r "^1.0") (d #t) (k 0)) (d (n "ipnetwork") (r "^0.19") (o #t) (k 0)) (d (n "mac_address") (r "^1.1") (o #t) (k 0)) (d (n "ordered-float") (r "^3.4") (o #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1") (o #t) (k 0)) (d (n "quote") (r "^1") (o #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (k 0)) (d (n "sea-query-attr") (r "^0.1.1") (o #t) (k 0)) (d (n "sea-query-derive") (r "^0.3.0") (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "formatting"))) (o #t) (k 0)) (d (n "uuid") (r "^1") (o #t) (k 0)))) (h "1nymz74p7nqpyi774zfjm3s72s4nkn5pr1drl44rkk4wh24kgp85") (f (quote (("with-uuid" "uuid") ("with-time" "time") ("with-rust_decimal" "rust_decimal") ("with-mac_address" "mac_address") ("with-json" "serde_json") ("with-ipnetwork" "ipnetwork") ("with-chrono" "chrono") ("with-bigdecimal" "bigdecimal") ("thread-safe") ("tests-cfg") ("postgres-interval" "proc-macro2" "quote") ("postgres-array") ("hashable-value" "derivative" "ordered-float") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql") ("attr" "sea-query-attr")))) (r "1.62")))

(define-public crate-sea-query-0.29.0 (c (n "sea-query") (v "0.29.0") (d (list (d (n "bigdecimal") (r "^0.3") (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derivative") (r "^2.2") (o #t) (k 0)) (d (n "inherent") (r "^1.0") (d #t) (k 0)) (d (n "ipnetwork") (r "^0.19") (o #t) (k 0)) (d (n "mac_address") (r "^1.1") (o #t) (k 0)) (d (n "ordered-float") (r "^3.4") (o #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1") (o #t) (k 0)) (d (n "quote") (r "^1") (o #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (k 0)) (d (n "sea-query-attr") (r "^0.1.1") (o #t) (k 0)) (d (n "sea-query-derive") (r "^0.3.1") (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "formatting"))) (o #t) (k 0)) (d (n "uuid") (r "^1") (o #t) (k 0)))) (h "1xqh2mndficmp8dijjlly3hcyq70ifjmz0kg12zinsqgc62a5rlg") (f (quote (("with-uuid" "uuid") ("with-time" "time") ("with-rust_decimal" "rust_decimal") ("with-mac_address" "mac_address") ("with-json" "serde_json") ("with-ipnetwork" "ipnetwork") ("with-chrono" "chrono") ("with-bigdecimal" "bigdecimal") ("thread-safe") ("tests-cfg") ("postgres-interval" "proc-macro2" "quote") ("postgres-array") ("hashable-value" "derivative" "ordered-float") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql") ("attr" "sea-query-attr")))) (y #t) (r "1.62")))

(define-public crate-sea-query-0.29.1 (c (n "sea-query") (v "0.29.1") (d (list (d (n "bigdecimal") (r "^0.3") (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derivative") (r "^2.2") (o #t) (k 0)) (d (n "inherent") (r "^1.0") (d #t) (k 0)) (d (n "ipnetwork") (r "^0.19") (o #t) (k 0)) (d (n "mac_address") (r "^1.1") (o #t) (k 0)) (d (n "ordered-float") (r "^3.4") (o #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1") (o #t) (k 0)) (d (n "quote") (r "^1") (o #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (k 0)) (d (n "sea-query-attr") (r "^0.1.1") (o #t) (k 0)) (d (n "sea-query-derive") (r "^0.4.0") (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "formatting"))) (o #t) (k 0)) (d (n "uuid") (r "^1") (o #t) (k 0)))) (h "13l6cckcz721hd1q9jxfxjz2spy7hnr3ih7f9da1hlsm1jm7a8rk") (f (quote (("with-uuid" "uuid") ("with-time" "time") ("with-rust_decimal" "rust_decimal") ("with-mac_address" "mac_address") ("with-json" "serde_json") ("with-ipnetwork" "ipnetwork") ("with-chrono" "chrono") ("with-bigdecimal" "bigdecimal") ("thread-safe") ("tests-cfg") ("postgres-interval" "proc-macro2" "quote") ("postgres-array") ("hashable-value" "derivative" "ordered-float") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql") ("attr" "sea-query-attr")))) (r "1.62")))

(define-public crate-sea-query-0.30.0 (c (n "sea-query") (v "0.30.0") (d (list (d (n "bigdecimal") (r "^0.3") (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derivative") (r "^2.2") (o #t) (k 0)) (d (n "inherent") (r "^1.0") (d #t) (k 0)) (d (n "ipnetwork") (r "^0.20") (o #t) (k 0)) (d (n "mac_address") (r "^1.1") (o #t) (k 0)) (d (n "ordered-float") (r "^3.4") (o #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1") (o #t) (k 0)) (d (n "quote") (r "^1") (o #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (k 0)) (d (n "sea-query-attr") (r "^0.1.1") (o #t) (k 0)) (d (n "sea-query-derive") (r "^0.4.0") (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "formatting"))) (o #t) (k 0)) (d (n "uuid") (r "^1") (o #t) (k 0)))) (h "1yimpyk59hm4hd38mjjvhd7s10hvjm1bf1j34zkkhw6zcjcqksva") (f (quote (("with-uuid" "uuid") ("with-time" "time") ("with-rust_decimal" "rust_decimal") ("with-mac_address" "mac_address") ("with-json" "serde_json") ("with-ipnetwork" "ipnetwork") ("with-chrono" "chrono") ("with-bigdecimal" "bigdecimal") ("thread-safe") ("tests-cfg") ("postgres-interval" "proc-macro2" "quote") ("postgres-array") ("hashable-value" "derivative" "ordered-float") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql") ("attr" "sea-query-attr")))) (r "1.62")))

(define-public crate-sea-query-0.30.1 (c (n "sea-query") (v "0.30.1") (d (list (d (n "bigdecimal") (r "^0.3") (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derivative") (r "^2.2") (o #t) (k 0)) (d (n "inherent") (r "^1.0") (d #t) (k 0)) (d (n "ipnetwork") (r "^0.20") (o #t) (k 0)) (d (n "mac_address") (r "^1.1") (o #t) (k 0)) (d (n "ordered-float") (r "^3.4") (o #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1") (o #t) (k 0)) (d (n "quote") (r "^1") (o #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (k 0)) (d (n "sea-query-attr") (r "^0.1.1") (o #t) (k 0)) (d (n "sea-query-derive") (r "^0.4.0") (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "formatting"))) (o #t) (k 0)) (d (n "uuid") (r "^1") (o #t) (k 0)))) (h "0jr43sf5qsyjc0gvchy8dd4fbcd9bzlvp29l4nz38f20yrdmmh18") (f (quote (("with-uuid" "uuid") ("with-time" "time") ("with-rust_decimal" "rust_decimal") ("with-mac_address" "mac_address") ("with-json" "serde_json") ("with-ipnetwork" "ipnetwork") ("with-chrono" "chrono") ("with-bigdecimal" "bigdecimal") ("thread-safe") ("tests-cfg") ("postgres-interval" "proc-macro2" "quote") ("postgres-array") ("hashable-value" "derivative" "ordered-float") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql") ("attr" "sea-query-attr")))) (r "1.62")))

(define-public crate-sea-query-0.30.2 (c (n "sea-query") (v "0.30.2") (d (list (d (n "bigdecimal") (r "^0.3") (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derivative") (r "^2.2") (o #t) (k 0)) (d (n "inherent") (r "^1.0") (d #t) (k 0)) (d (n "ipnetwork") (r "^0.20") (o #t) (k 0)) (d (n "mac_address") (r "^1.1") (o #t) (k 0)) (d (n "ordered-float") (r "^3.4") (o #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1") (o #t) (k 0)) (d (n "quote") (r "^1") (o #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (k 0)) (d (n "sea-query-attr") (r "^0.1.1") (o #t) (k 0)) (d (n "sea-query-derive") (r "^0.4.0") (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "formatting"))) (o #t) (k 0)) (d (n "uuid") (r "^1") (o #t) (k 0)))) (h "0868vjywlcx16m3y8hni4zdkhall2j2c8ql7dij9ic9v2nx6ngpv") (f (quote (("with-uuid" "uuid") ("with-time" "time") ("with-rust_decimal" "rust_decimal") ("with-mac_address" "mac_address") ("with-json" "serde_json") ("with-ipnetwork" "ipnetwork") ("with-chrono" "chrono") ("with-bigdecimal" "bigdecimal") ("thread-safe") ("tests-cfg") ("postgres-interval" "proc-macro2" "quote") ("postgres-array") ("hashable-value" "derivative" "ordered-float") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql") ("attr" "sea-query-attr")))) (r "1.62")))

(define-public crate-sea-query-0.30.3 (c (n "sea-query") (v "0.30.3") (d (list (d (n "bigdecimal") (r "^0.3") (o #t) (k 0)) (d (n "chrono") (r "^0.4.27") (f (quote ("clock"))) (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derivative") (r "^2.2") (o #t) (k 0)) (d (n "inherent") (r "^1.0") (d #t) (k 0)) (d (n "ipnetwork") (r "^0.20") (o #t) (k 0)) (d (n "mac_address") (r "^1.1") (o #t) (k 0)) (d (n "ordered-float") (r "^3.4") (o #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (o #t) (k 0)) (d (n "sea-query-attr") (r "^0.1.1") (o #t) (k 0)) (d (n "sea-query-derive") (r "^0.4.0") (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "formatting"))) (o #t) (k 0)) (d (n "uuid") (r "^1") (o #t) (k 0)))) (h "0nmind2f4vw0380g0vpr6mzcvzasikw2minw0v9h6zrzm11y2wil") (f (quote (("with-uuid" "uuid") ("with-time" "time") ("with-rust_decimal" "rust_decimal") ("with-mac_address" "mac_address") ("with-json" "serde_json") ("with-ipnetwork" "ipnetwork") ("with-chrono" "chrono") ("with-bigdecimal" "bigdecimal") ("thread-safe") ("tests-cfg") ("postgres-interval") ("postgres-array") ("hashable-value" "derivative" "ordered-float") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql") ("attr" "sea-query-attr")))) (r "1.62")))

(define-public crate-sea-query-0.30.4 (c (n "sea-query") (v "0.30.4") (d (list (d (n "bigdecimal") (r "^0.3") (o #t) (k 0)) (d (n "chrono") (r "^0.4.27") (f (quote ("clock"))) (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derivative") (r "^2.2") (o #t) (k 0)) (d (n "inherent") (r "^1.0") (d #t) (k 0)) (d (n "ipnetwork") (r "^0.20") (o #t) (k 0)) (d (n "mac_address") (r "^1.1") (o #t) (k 0)) (d (n "ordered-float") (r "^3.4") (o #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (o #t) (k 0)) (d (n "sea-query-attr") (r "^0.1.1") (o #t) (k 0)) (d (n "sea-query-derive") (r "^0.4.0") (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "formatting"))) (o #t) (k 0)) (d (n "uuid") (r "^1") (o #t) (k 0)))) (h "0s4ahc4xf0bv0c401vn97x4ncfg25jf9s2xc5nap6kazpflqyma1") (f (quote (("with-uuid" "uuid") ("with-time" "time") ("with-rust_decimal" "rust_decimal") ("with-mac_address" "mac_address") ("with-json" "serde_json") ("with-ipnetwork" "ipnetwork") ("with-chrono" "chrono") ("with-bigdecimal" "bigdecimal") ("thread-safe") ("tests-cfg") ("postgres-interval") ("postgres-array") ("hashable-value" "derivative" "ordered-float") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql") ("attr" "sea-query-attr")))) (r "1.62")))

(define-public crate-sea-query-0.30.5 (c (n "sea-query") (v "0.30.5") (d (list (d (n "bigdecimal") (r "^0.3") (o #t) (k 0)) (d (n "chrono") (r "^0.4.27") (f (quote ("clock"))) (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derivative") (r "^2.2") (o #t) (k 0)) (d (n "inherent") (r "^1.0") (d #t) (k 0)) (d (n "ipnetwork") (r "^0.20") (o #t) (k 0)) (d (n "mac_address") (r "^1.1") (o #t) (k 0)) (d (n "ordered-float") (r "^3.4") (o #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (o #t) (k 0)) (d (n "sea-query-attr") (r "^0.1.1") (o #t) (k 0)) (d (n "sea-query-derive") (r "^0.4.0") (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "formatting"))) (o #t) (k 0)) (d (n "uuid") (r "^1") (o #t) (k 0)))) (h "1yacbs1bfin6lvxxzwbaxawp9iswl1i29xbm4f0c1kj8q3ilc174") (f (quote (("with-uuid" "uuid") ("with-time" "time") ("with-rust_decimal" "rust_decimal") ("with-mac_address" "mac_address") ("with-json" "serde_json") ("with-ipnetwork" "ipnetwork") ("with-chrono" "chrono") ("with-bigdecimal" "bigdecimal") ("thread-safe") ("tests-cfg") ("postgres-interval") ("postgres-array") ("option-sqlite-exact-column-type") ("option-more-parentheses") ("hashable-value" "derivative" "ordered-float") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql") ("attr" "sea-query-attr") ("all-types" "postgres-array" "postgres-interval" "with-chrono" "with-json" "with-rust_decimal" "with-bigdecimal" "with-uuid" "with-time" "with-ipnetwork" "with-mac_address") ("all-features" "backend-mysql" "backend-postgres" "backend-sqlite" "derive" "attr" "hashable-value" "thread-safe" "all-types")))) (r "1.62")))

(define-public crate-sea-query-0.30.6 (c (n "sea-query") (v "0.30.6") (d (list (d (n "bigdecimal") (r "^0.3") (o #t) (k 0)) (d (n "chrono") (r "^0.4.27") (f (quote ("clock"))) (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derivative") (r "^2.2") (o #t) (k 0)) (d (n "inherent") (r "^1.0") (d #t) (k 0)) (d (n "ipnetwork") (r "^0.20") (o #t) (k 0)) (d (n "mac_address") (r "^1.1") (o #t) (k 0)) (d (n "ordered-float") (r "^3.4") (o #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (o #t) (k 0)) (d (n "sea-query-attr") (r "^0.1.1") (o #t) (k 0)) (d (n "sea-query-derive") (r "^0.4.0") (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "formatting"))) (o #t) (k 0)) (d (n "uuid") (r "^1") (o #t) (k 0)))) (h "1gf2hk2anilvwk5kvcs21jj1avz6hhw2vcj9n3nyy0kclaqgx8d4") (f (quote (("with-uuid" "uuid") ("with-time" "time") ("with-rust_decimal" "rust_decimal") ("with-mac_address" "mac_address") ("with-json" "serde_json") ("with-ipnetwork" "ipnetwork") ("with-chrono" "chrono") ("with-bigdecimal" "bigdecimal") ("thread-safe") ("tests-cfg") ("postgres-interval") ("postgres-array") ("option-sqlite-exact-column-type") ("option-more-parentheses") ("hashable-value" "derivative" "ordered-float") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql") ("attr" "sea-query-attr") ("all-types" "postgres-array" "postgres-interval" "with-chrono" "with-json" "with-rust_decimal" "with-bigdecimal" "with-uuid" "with-time" "with-ipnetwork" "with-mac_address") ("all-features" "backend-mysql" "backend-postgres" "backend-sqlite" "derive" "attr" "hashable-value" "thread-safe" "all-types")))) (r "1.62")))

(define-public crate-sea-query-0.30.7 (c (n "sea-query") (v "0.30.7") (d (list (d (n "bigdecimal") (r "^0.3") (o #t) (k 0)) (d (n "chrono") (r "^0.4.27") (f (quote ("clock"))) (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derivative") (r "^2.2") (o #t) (k 0)) (d (n "inherent") (r "^1.0") (d #t) (k 0)) (d (n "ipnetwork") (r "^0.20") (o #t) (k 0)) (d (n "mac_address") (r "^1.1") (o #t) (k 0)) (d (n "ordered-float") (r "^3.4") (o #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (o #t) (k 0)) (d (n "sea-query-attr") (r "^0.1.1") (o #t) (k 0)) (d (n "sea-query-derive") (r "^0.4.0") (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "formatting"))) (o #t) (k 0)) (d (n "uuid") (r "^1") (o #t) (k 0)))) (h "16wrqhx8w95sy95ryp2bpsl5bbydl711f5pkj7f4cb99fbha2rj1") (f (quote (("with-uuid" "uuid") ("with-time" "time") ("with-rust_decimal" "rust_decimal") ("with-mac_address" "mac_address") ("with-json" "serde_json") ("with-ipnetwork" "ipnetwork") ("with-chrono" "chrono") ("with-bigdecimal" "bigdecimal") ("thread-safe") ("tests-cfg") ("postgres-interval") ("postgres-array") ("option-sqlite-exact-column-type") ("option-more-parentheses") ("hashable-value" "derivative" "ordered-float") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql") ("attr" "sea-query-attr") ("all-types" "postgres-array" "postgres-interval" "with-chrono" "with-json" "with-rust_decimal" "with-bigdecimal" "with-uuid" "with-time" "with-ipnetwork" "with-mac_address") ("all-features" "backend-mysql" "backend-postgres" "backend-sqlite" "derive" "attr" "hashable-value" "thread-safe" "all-types")))) (r "1.62")))

(define-public crate-sea-query-0.31.0-rc.1 (c (n "sea-query") (v "0.31.0-rc.1") (d (list (d (n "bigdecimal") (r "^0.3") (o #t) (k 0)) (d (n "chrono") (r "^0.4.27") (f (quote ("clock"))) (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derivative") (r "^2.2") (o #t) (k 0)) (d (n "inherent") (r "^1.0") (d #t) (k 0)) (d (n "ipnetwork") (r "^0.20") (o #t) (k 0)) (d (n "mac_address") (r "^1.1") (o #t) (k 0)) (d (n "ordered-float") (r "^3.4") (o #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (o #t) (k 0)) (d (n "sea-query-attr") (r "^0.1.1") (o #t) (k 0)) (d (n "sea-query-derive") (r "^0.4.0") (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "formatting"))) (o #t) (k 0)) (d (n "uuid") (r "^1") (o #t) (k 0)))) (h "0j4gxpn4yq8a0rwjgcwafkdr7yb69h6ifj8zxcfxg6g0qv9asdph") (f (quote (("with-uuid" "uuid") ("with-time" "time") ("with-rust_decimal" "rust_decimal") ("with-mac_address" "mac_address") ("with-json" "serde_json") ("with-ipnetwork" "ipnetwork") ("with-chrono" "chrono") ("with-bigdecimal" "bigdecimal") ("thread-safe") ("tests-cfg") ("postgres-interval") ("postgres-array") ("option-sqlite-exact-column-type") ("option-more-parentheses") ("hashable-value" "derivative" "ordered-float") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql") ("attr" "sea-query-attr") ("all-types" "postgres-array" "postgres-interval" "with-chrono" "with-json" "with-rust_decimal" "with-bigdecimal" "with-uuid" "with-time" "with-ipnetwork" "with-mac_address") ("all-features" "backend-mysql" "backend-postgres" "backend-sqlite" "derive" "attr" "hashable-value" "thread-safe" "all-types")))) (r "1.62")))

(define-public crate-sea-query-0.31.0-rc.2 (c (n "sea-query") (v "0.31.0-rc.2") (d (list (d (n "bigdecimal") (r "^0.3") (o #t) (k 0)) (d (n "chrono") (r "^0.4.27") (f (quote ("clock"))) (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derivative") (r "^2.2") (o #t) (k 0)) (d (n "inherent") (r "^1.0") (d #t) (k 0)) (d (n "ipnetwork") (r "^0.20") (o #t) (k 0)) (d (n "mac_address") (r "^1.1") (o #t) (k 0)) (d (n "ordered-float") (r "^3.4") (o #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (o #t) (k 0)) (d (n "sea-query-attr") (r "^0.1.1") (o #t) (k 0)) (d (n "sea-query-derive") (r "^0.4.0") (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "formatting"))) (o #t) (k 0)) (d (n "uuid") (r "^1") (o #t) (k 0)))) (h "02hqslwldccga3ki6dzpr4319q0fksrz0s8x229wz35hgjy3mq30") (f (quote (("with-uuid" "uuid") ("with-time" "time") ("with-rust_decimal" "rust_decimal") ("with-mac_address" "mac_address") ("with-json" "serde_json") ("with-ipnetwork" "ipnetwork") ("with-chrono" "chrono") ("with-bigdecimal" "bigdecimal") ("thread-safe") ("tests-cfg") ("postgres-interval") ("postgres-array") ("option-sqlite-exact-column-type") ("option-more-parentheses") ("hashable-value" "derivative" "ordered-float") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql") ("attr" "sea-query-attr") ("all-types" "postgres-array" "postgres-interval" "with-chrono" "with-json" "with-rust_decimal" "with-bigdecimal" "with-uuid" "with-time" "with-ipnetwork" "with-mac_address") ("all-features" "backend-mysql" "backend-postgres" "backend-sqlite" "derive" "attr" "hashable-value" "thread-safe" "all-types")))) (r "1.62")))

(define-public crate-sea-query-0.31.0-rc.3 (c (n "sea-query") (v "0.31.0-rc.3") (d (list (d (n "bigdecimal") (r "^0.3") (o #t) (k 0)) (d (n "chrono") (r "^0.4.27") (f (quote ("clock"))) (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derivative") (r "^2.2") (o #t) (k 0)) (d (n "inherent") (r "^1.0") (d #t) (k 0)) (d (n "ipnetwork") (r "^0.20") (o #t) (k 0)) (d (n "mac_address") (r "^1.1") (o #t) (k 0)) (d (n "ordered-float") (r "^3.4") (o #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (o #t) (k 0)) (d (n "sea-query-attr") (r "^0.1.1") (o #t) (k 0)) (d (n "sea-query-derive") (r "^0.4.0") (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "formatting"))) (o #t) (k 0)) (d (n "uuid") (r "^1") (o #t) (k 0)))) (h "0pqhkbc4jrfhkrdczqb0kgajm589jcjx5m005gdzqxhsr0ap1qn2") (f (quote (("with-uuid" "uuid") ("with-time" "time") ("with-rust_decimal" "rust_decimal") ("with-mac_address" "mac_address") ("with-json" "serde_json") ("with-ipnetwork" "ipnetwork") ("with-chrono" "chrono") ("with-bigdecimal" "bigdecimal") ("thread-safe") ("tests-cfg") ("postgres-interval") ("postgres-array") ("option-sqlite-exact-column-type") ("option-more-parentheses") ("hashable-value" "derivative" "ordered-float") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql") ("attr" "sea-query-attr") ("all-types" "postgres-array" "postgres-interval" "with-chrono" "with-json" "with-rust_decimal" "with-bigdecimal" "with-uuid" "with-time" "with-ipnetwork" "with-mac_address") ("all-features" "backend-mysql" "backend-postgres" "backend-sqlite" "derive" "attr" "hashable-value" "thread-safe" "all-types")))) (r "1.62")))

(define-public crate-sea-query-0.31.0-rc.4 (c (n "sea-query") (v "0.31.0-rc.4") (d (list (d (n "bigdecimal") (r "^0.3") (o #t) (k 0)) (d (n "chrono") (r "^0.4.27") (f (quote ("clock"))) (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derivative") (r "^2.2") (o #t) (k 0)) (d (n "inherent") (r "^1.0") (d #t) (k 0)) (d (n "ipnetwork") (r "^0.20") (o #t) (k 0)) (d (n "mac_address") (r "^1.1") (o #t) (k 0)) (d (n "ordered-float") (r "^3.4") (o #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (o #t) (k 0)) (d (n "sea-query-attr") (r "^0.1.1") (o #t) (k 0)) (d (n "sea-query-derive") (r "^0.4.0") (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "formatting"))) (o #t) (k 0)) (d (n "uuid") (r "^1") (o #t) (k 0)))) (h "12s7xwbb1qm23vbhb9nxc7ln2vxybqy28lb74q31wcszk174qg9a") (f (quote (("with-uuid" "uuid") ("with-time" "time") ("with-rust_decimal" "rust_decimal") ("with-mac_address" "mac_address") ("with-json" "serde_json") ("with-ipnetwork" "ipnetwork") ("with-chrono" "chrono") ("with-bigdecimal" "bigdecimal") ("thread-safe") ("tests-cfg") ("postgres-interval") ("postgres-array") ("option-sqlite-exact-column-type") ("option-more-parentheses") ("hashable-value" "derivative" "ordered-float") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql") ("attr" "sea-query-attr") ("all-types" "postgres-array" "postgres-interval" "with-chrono" "with-json" "with-rust_decimal" "with-bigdecimal" "with-uuid" "with-time" "with-ipnetwork" "with-mac_address") ("all-features" "backend-mysql" "backend-postgres" "backend-sqlite" "derive" "attr" "hashable-value" "thread-safe" "all-types")))) (r "1.62")))

(define-public crate-sea-query-0.31.0-rc.5 (c (n "sea-query") (v "0.31.0-rc.5") (d (list (d (n "bigdecimal") (r "^0.3") (o #t) (k 0)) (d (n "chrono") (r "^0.4.27") (f (quote ("clock"))) (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "educe") (r "^0.5.11") (f (quote ("Hash" "PartialEq" "Eq"))) (o #t) (k 0)) (d (n "inherent") (r "^1.0") (d #t) (k 0)) (d (n "ipnetwork") (r "^0.20") (o #t) (k 0)) (d (n "mac_address") (r "^1.1") (o #t) (k 0)) (d (n "ordered-float") (r "^3.4") (o #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (o #t) (k 0)) (d (n "sea-query-attr") (r "^0.1.1") (o #t) (k 0)) (d (n "sea-query-derive") (r "^0.4.0") (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "formatting"))) (o #t) (k 0)) (d (n "uuid") (r "^1") (o #t) (k 0)))) (h "1k4dpfnxlz1b02n2hsk65bsm9r6lavznkc39sqbjx2xpbc62j7hi") (f (quote (("with-uuid" "uuid") ("with-time" "time") ("with-rust_decimal" "rust_decimal") ("with-mac_address" "mac_address") ("with-json" "serde_json") ("with-ipnetwork" "ipnetwork") ("with-chrono" "chrono") ("with-bigdecimal" "bigdecimal") ("thread-safe") ("tests-cfg") ("postgres-interval") ("postgres-array") ("option-sqlite-exact-column-type") ("option-more-parentheses") ("hashable-value" "educe" "ordered-float") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql") ("attr" "sea-query-attr") ("all-types" "postgres-array" "postgres-interval" "with-chrono" "with-json" "with-rust_decimal" "with-bigdecimal" "with-uuid" "with-time" "with-ipnetwork" "with-mac_address") ("all-features" "backend-mysql" "backend-postgres" "backend-sqlite" "derive" "attr" "hashable-value" "thread-safe" "all-types")))) (r "1.62")))

(define-public crate-sea-query-0.31.0-rc.6 (c (n "sea-query") (v "0.31.0-rc.6") (d (list (d (n "bigdecimal") (r "^0.3") (o #t) (k 0)) (d (n "chrono") (r "^0.4.27") (f (quote ("clock"))) (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "educe") (r "^0.5.11") (f (quote ("Hash" "PartialEq" "Eq"))) (o #t) (k 0)) (d (n "inherent") (r "^1.0") (d #t) (k 0)) (d (n "ipnetwork") (r "^0.20") (o #t) (k 0)) (d (n "mac_address") (r "^1.1") (o #t) (k 0)) (d (n "ordered-float") (r "^3.4") (o #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (o #t) (k 0)) (d (n "sea-query-attr") (r "^0.1.1") (o #t) (k 0)) (d (n "sea-query-derive") (r "^0.4.0") (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "formatting"))) (o #t) (k 0)) (d (n "uuid") (r "^1") (o #t) (k 0)))) (h "1ll085jz05spc5zgbhkc2k2a6jirkspiyf971ac3cbl4ncl7y6yv") (f (quote (("with-uuid" "uuid") ("with-time" "time") ("with-rust_decimal" "rust_decimal") ("with-mac_address" "mac_address") ("with-json" "serde_json") ("with-ipnetwork" "ipnetwork") ("with-chrono" "chrono") ("with-bigdecimal" "bigdecimal") ("thread-safe") ("tests-cfg") ("postgres-interval") ("postgres-array") ("option-sqlite-exact-column-type") ("option-more-parentheses") ("hashable-value" "educe" "ordered-float") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql") ("attr" "sea-query-attr") ("all-types" "postgres-array" "postgres-interval" "with-chrono" "with-json" "with-rust_decimal" "with-bigdecimal" "with-uuid" "with-time" "with-ipnetwork" "with-mac_address") ("all-features" "backend-mysql" "backend-postgres" "backend-sqlite" "derive" "attr" "hashable-value" "thread-safe" "all-types")))) (r "1.62")))

(define-public crate-sea-query-0.31.0-rc.7 (c (n "sea-query") (v "0.31.0-rc.7") (d (list (d (n "bigdecimal") (r "^0.3") (o #t) (k 0)) (d (n "chrono") (r "^0.4.27") (f (quote ("clock"))) (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "educe") (r "=0.5.11") (f (quote ("Hash" "PartialEq" "Eq"))) (o #t) (k 0)) (d (n "inherent") (r "^1.0") (d #t) (k 0)) (d (n "ipnetwork") (r "^0.20") (o #t) (k 0)) (d (n "mac_address") (r "^1.1") (o #t) (k 0)) (d (n "ordered-float") (r "^3.4") (o #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (o #t) (k 0)) (d (n "sea-query-attr") (r "^0.1.1") (o #t) (k 0)) (d (n "sea-query-derive") (r "^0.4.0") (o #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "formatting"))) (o #t) (k 0)) (d (n "uuid") (r "^1") (o #t) (k 0)))) (h "0g2qpyr0djqp7ai7y2w4cgws0f288h36lyf7ak3wb2afhy0m3g2y") (f (quote (("with-uuid" "uuid") ("with-time" "time") ("with-rust_decimal" "rust_decimal") ("with-mac_address" "mac_address") ("with-json" "serde_json") ("with-ipnetwork" "ipnetwork") ("with-chrono" "chrono") ("with-bigdecimal" "bigdecimal") ("thread-safe") ("tests-cfg") ("postgres-interval") ("postgres-array") ("option-sqlite-exact-column-type") ("option-more-parentheses") ("hashable-value" "educe" "ordered-float") ("derive" "sea-query-derive") ("default" "derive" "backend-mysql" "backend-postgres" "backend-sqlite") ("backend-sqlite") ("backend-postgres") ("backend-mysql") ("attr" "sea-query-attr") ("all-types" "postgres-array" "postgres-interval" "with-chrono" "with-json" "with-rust_decimal" "with-bigdecimal" "with-uuid" "with-time" "with-ipnetwork" "with-mac_address") ("all-features" "backend-mysql" "backend-postgres" "backend-sqlite" "derive" "attr" "hashable-value" "thread-safe" "all-types")))) (r "1.62")))

