(define-module (crates-io se a- sea-query-binder) #:use-module (crates-io))

(define-public crate-sea-query-binder-0.1.0 (c (n "sea-query-binder") (v "0.1.0") (d (list (d (n "sea-query") (r "^0.25") (d #t) (k 0)) (d (n "sqlx") (r "^0.5.6") (o #t) (d #t) (k 0)))) (h "1acvqicqg9ds0paz9v3sf8rpbqj1ykpqaww6gwm9mdxkrpca5452") (f (quote (("with-uuid" "sqlx/uuid" "sea-query/with-uuid") ("with-time" "sqlx/time" "sea-query/with-time") ("with-rust_decimal" "sqlx/decimal" "sea-query/with-rust_decimal") ("with-json" "sqlx/json" "sea-query/with-json") ("with-chrono" "sqlx/chrono" "sea-query/with-chrono") ("with-bigdecimal" "sqlx/bigdecimal" "sea-query/with-bigdecimal") ("sqlx-sqlite" "sqlx/sqlite" "sea-query/sqlx-sqlite") ("sqlx-postgres" "sqlx/postgres" "sea-query/sqlx-postgres") ("sqlx-mysql" "sqlx/mysql" "sea-query/sqlx-mysql") ("sqlx-any" "sqlx/any") ("postgres-array" "sea-query/postgres-array"))))))

(define-public crate-sea-query-binder-0.2.0 (c (n "sea-query-binder") (v "0.2.0") (d (list (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (o #t) (k 0)) (d (n "ipnetwork") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "mac_address") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (o #t) (d #t) (k 0)) (d (n "quote") (r "^1") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query") (r "^0.27") (f (quote ("thread-safe"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "sqlx") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "formatting"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "1b5dk3kmhnd02y1wmj6jbf03k8b78glvm0qfa0cln3a11gxw7d50") (f (quote (("with-uuid" "sqlx/uuid" "sea-query/with-uuid" "uuid") ("with-time" "sqlx/time" "sea-query/with-time" "time") ("with-rust_decimal" "sqlx/decimal" "sea-query/with-rust_decimal" "rust_decimal") ("with-mac_address" "sqlx/mac_address" "sea-query/with-mac_address" "mac_address") ("with-json" "sqlx/json" "sea-query/with-json" "serde_json") ("with-ipnetwork" "sqlx/ipnetwork" "sea-query/with-ipnetwork" "ipnetwork") ("with-chrono" "sqlx/chrono" "sea-query/with-chrono" "chrono") ("with-bigdecimal" "sqlx/bigdecimal" "sea-query/with-bigdecimal" "bigdecimal") ("sqlx-sqlite" "sqlx/sqlite") ("sqlx-postgres" "sqlx/postgres") ("sqlx-mysql" "sqlx/mysql") ("sqlx-any" "sqlx/any") ("runtime-tokio-rustls" "sqlx/runtime-tokio-rustls") ("runtime-tokio-native-tls" "sqlx/runtime-tokio-native-tls") ("runtime-async-std-rustls" "sqlx/runtime-async-std-rustls") ("runtime-async-std-native-tls" "sqlx/runtime-async-std-native-tls") ("runtime-actix-rustls" "sqlx/runtime-actix-rustls") ("runtime-actix-native-tls" "sqlx/runtime-actix-native-tls") ("postgres-array" "sea-query/postgres-array")))) (r "1.60")))

(define-public crate-sea-query-binder-0.2.1 (c (n "sea-query-binder") (v "0.2.1") (d (list (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (o #t) (k 0)) (d (n "ipnetwork") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "mac_address") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (o #t) (d #t) (k 0)) (d (n "quote") (r "^1") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query") (r "^0.27") (f (quote ("thread-safe"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "sqlx") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "formatting"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "0ganacb9595zc2s9qbszqh0vh7jmjis3lk9pwfvn7g4vi31wbpbx") (f (quote (("with-uuid" "sqlx/uuid" "sea-query/with-uuid" "uuid") ("with-time" "sqlx/time" "sea-query/with-time" "time") ("with-rust_decimal" "sqlx/decimal" "sea-query/with-rust_decimal" "rust_decimal") ("with-mac_address" "sqlx/mac_address" "sea-query/with-mac_address" "mac_address") ("with-json" "sqlx/json" "sea-query/with-json" "serde_json") ("with-ipnetwork" "sqlx/ipnetwork" "sea-query/with-ipnetwork" "ipnetwork") ("with-chrono" "sqlx/chrono" "sea-query/with-chrono" "chrono") ("with-bigdecimal" "sqlx/bigdecimal" "sea-query/with-bigdecimal" "bigdecimal") ("sqlx-sqlite" "sqlx/sqlite") ("sqlx-postgres" "sqlx/postgres") ("sqlx-mysql" "sqlx/mysql") ("sqlx-any" "sqlx/any") ("runtime-tokio-rustls" "sqlx/runtime-tokio-rustls") ("runtime-tokio-native-tls" "sqlx/runtime-tokio-native-tls") ("runtime-async-std-rustls" "sqlx/runtime-async-std-rustls") ("runtime-async-std-native-tls" "sqlx/runtime-async-std-native-tls") ("runtime-actix-rustls" "sqlx/runtime-actix-rustls") ("runtime-actix-native-tls" "sqlx/runtime-actix-native-tls") ("postgres-array" "sea-query/postgres-array")))) (r "1.60")))

(define-public crate-sea-query-binder-0.2.2 (c (n "sea-query-binder") (v "0.2.2") (d (list (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (o #t) (k 0)) (d (n "ipnetwork") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "mac_address") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (o #t) (d #t) (k 0)) (d (n "quote") (r "^1") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query") (r "^0.27") (f (quote ("thread-safe"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "sqlx") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "formatting"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "0rc8pywg4nhqqviw909539n7fnq5pgkwk7zcw37zlp4qkjw8a9cw") (f (quote (("sqlx-sqlite" "sqlx/sqlite") ("sqlx-postgres" "sqlx/postgres") ("sqlx-mysql" "sqlx/mysql") ("sqlx-any" "sqlx/any") ("postgres-array" "sea-query/postgres-array")))) (s 2) (e (quote (("with-uuid" "sqlx?/uuid" "sea-query/with-uuid" "uuid") ("with-time" "sqlx?/time" "sea-query/with-time" "time") ("with-rust_decimal" "sqlx?/decimal" "sea-query/with-rust_decimal" "rust_decimal") ("with-mac_address" "sqlx?/mac_address" "sea-query/with-mac_address" "mac_address") ("with-json" "sqlx?/json" "sea-query/with-json" "serde_json") ("with-ipnetwork" "sqlx?/ipnetwork" "sea-query/with-ipnetwork" "ipnetwork") ("with-chrono" "sqlx?/chrono" "sea-query/with-chrono" "chrono") ("with-bigdecimal" "sqlx?/bigdecimal" "sea-query/with-bigdecimal" "bigdecimal") ("runtime-tokio-rustls" "sqlx?/runtime-tokio-rustls") ("runtime-tokio-native-tls" "sqlx?/runtime-tokio-native-tls") ("runtime-async-std-rustls" "sqlx?/runtime-async-std-rustls") ("runtime-async-std-native-tls" "sqlx?/runtime-async-std-native-tls") ("runtime-actix-rustls" "sqlx?/runtime-actix-rustls") ("runtime-actix-native-tls" "sqlx?/runtime-actix-native-tls")))) (r "1.60")))

(define-public crate-sea-query-binder-0.3.0 (c (n "sea-query-binder") (v "0.3.0") (d (list (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (o #t) (k 0)) (d (n "ipnetwork") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "mac_address") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (o #t) (d #t) (k 0)) (d (n "quote") (r "^1") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query") (r "^0.28") (f (quote ("thread-safe"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "sqlx") (r "^0.6.1") (o #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "formatting"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "0fr0lqnj7ksl86sp0x7jvs9grwnjc00kx4lhs57zsyn0mriqqm03") (f (quote (("sqlx-sqlite" "sqlx/sqlite") ("sqlx-postgres" "sqlx/postgres") ("sqlx-mysql" "sqlx/mysql") ("sqlx-any" "sqlx/any") ("postgres-array" "sea-query/postgres-array")))) (s 2) (e (quote (("with-uuid" "sqlx?/uuid" "sea-query/with-uuid" "uuid") ("with-time" "sqlx?/time" "sea-query/with-time" "time") ("with-rust_decimal" "sqlx?/decimal" "sea-query/with-rust_decimal" "rust_decimal") ("with-mac_address" "sqlx?/mac_address" "sea-query/with-mac_address" "mac_address") ("with-json" "sqlx?/json" "sea-query/with-json" "serde_json") ("with-ipnetwork" "sqlx?/ipnetwork" "sea-query/with-ipnetwork" "ipnetwork") ("with-chrono" "sqlx?/chrono" "sea-query/with-chrono" "chrono") ("with-bigdecimal" "sqlx?/bigdecimal" "sea-query/with-bigdecimal" "bigdecimal") ("runtime-tokio-rustls" "sqlx?/runtime-tokio-rustls") ("runtime-tokio-native-tls" "sqlx?/runtime-tokio-native-tls") ("runtime-async-std-rustls" "sqlx?/runtime-async-std-rustls") ("runtime-async-std-native-tls" "sqlx?/runtime-async-std-native-tls") ("runtime-actix-rustls" "sqlx?/runtime-actix-rustls") ("runtime-actix-native-tls" "sqlx?/runtime-actix-native-tls")))) (r "1.60")))

(define-public crate-sea-query-binder-0.4.0-rc.1 (c (n "sea-query-binder") (v "0.4.0-rc.1") (d (list (d (n "bigdecimal") (r "^0.3") (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (o #t) (k 0)) (d (n "ipnetwork") (r "^0.19") (o #t) (k 0)) (d (n "mac_address") (r "^1.1") (o #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (k 0)) (d (n "sea-query") (r "^0.29.0-rc.1") (f (quote ("thread-safe"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "sqlx") (r "^0.6.1") (o #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "formatting"))) (o #t) (k 0)) (d (n "uuid") (r "^1") (o #t) (k 0)))) (h "0z8xckhivy6rfmbcdd5gha3cb11pl7ndbf5fzp9q2wn7qrs6dh4s") (f (quote (("sqlx-sqlite" "sqlx/sqlite") ("sqlx-postgres" "sqlx/postgres") ("sqlx-mysql" "sqlx/mysql") ("sqlx-any" "sqlx/any") ("postgres-array" "sea-query/postgres-array")))) (s 2) (e (quote (("with-uuid" "sqlx?/uuid" "sea-query/with-uuid" "uuid") ("with-time" "sqlx?/time" "sea-query/with-time" "time") ("with-rust_decimal" "sqlx?/decimal" "sea-query/with-rust_decimal" "rust_decimal") ("with-mac_address" "sqlx?/mac_address" "sea-query/with-mac_address" "mac_address") ("with-json" "sqlx?/json" "sea-query/with-json" "serde_json") ("with-ipnetwork" "sqlx?/ipnetwork" "sea-query/with-ipnetwork" "ipnetwork") ("with-chrono" "sqlx?/chrono" "sea-query/with-chrono" "chrono") ("with-bigdecimal" "sqlx?/bigdecimal" "sea-query/with-bigdecimal" "bigdecimal") ("runtime-tokio-rustls" "sqlx?/runtime-tokio-rustls") ("runtime-tokio-native-tls" "sqlx?/runtime-tokio-native-tls") ("runtime-async-std-rustls" "sqlx?/runtime-async-std-rustls") ("runtime-async-std-native-tls" "sqlx?/runtime-async-std-native-tls") ("runtime-actix-rustls" "sqlx?/runtime-actix-rustls") ("runtime-actix-native-tls" "sqlx?/runtime-actix-native-tls")))) (r "1.60")))

(define-public crate-sea-query-binder-0.3.1 (c (n "sea-query-binder") (v "0.3.1") (d (list (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (o #t) (k 0)) (d (n "ipnetwork") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "mac_address") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (o #t) (d #t) (k 0)) (d (n "quote") (r "^1") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query") (r "^0.28") (f (quote ("thread-safe"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "sqlx") (r "^0.6.1") (o #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "formatting"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "1y9h3rgzzkd0l3hfirdlq6vlvh45x5gxh643y7xhvd45k418bsjc") (f (quote (("sqlx-sqlite" "sqlx/sqlite") ("sqlx-postgres" "sqlx/postgres") ("sqlx-mysql" "sqlx/mysql") ("sqlx-any" "sqlx/any") ("postgres-array" "sea-query/postgres-array")))) (s 2) (e (quote (("with-uuid" "sqlx?/uuid" "sea-query/with-uuid" "uuid") ("with-time" "sqlx?/time" "sea-query/with-time" "time") ("with-rust_decimal" "sqlx?/decimal" "sea-query/with-rust_decimal" "rust_decimal") ("with-mac_address" "sqlx?/mac_address" "sea-query/with-mac_address" "mac_address") ("with-json" "sqlx?/json" "sea-query/with-json" "serde_json") ("with-ipnetwork" "sqlx?/ipnetwork" "sea-query/with-ipnetwork" "ipnetwork") ("with-chrono" "sqlx?/chrono" "sea-query/with-chrono" "chrono") ("with-bigdecimal" "sqlx?/bigdecimal" "sea-query/with-bigdecimal" "bigdecimal") ("runtime-tokio-rustls" "sqlx?/runtime-tokio-rustls") ("runtime-tokio-native-tls" "sqlx?/runtime-tokio-native-tls") ("runtime-async-std-rustls" "sqlx?/runtime-async-std-rustls") ("runtime-async-std-native-tls" "sqlx?/runtime-async-std-native-tls") ("runtime-actix-rustls" "sqlx?/runtime-actix-rustls") ("runtime-actix-native-tls" "sqlx?/runtime-actix-native-tls")))) (r "1.60")))

(define-public crate-sea-query-binder-0.4.0-rc.2 (c (n "sea-query-binder") (v "0.4.0-rc.2") (d (list (d (n "bigdecimal") (r "^0.3") (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (o #t) (k 0)) (d (n "ipnetwork") (r "^0.19") (o #t) (k 0)) (d (n "mac_address") (r "^1.1") (o #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (k 0)) (d (n "sea-query") (r "^0.29.0-rc.2") (f (quote ("thread-safe"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "sqlx") (r "^0.6.1") (o #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "formatting"))) (o #t) (k 0)) (d (n "uuid") (r "^1") (o #t) (k 0)))) (h "1klmdvrkqs90f4zbrm77r6ha9mm80vjjcbrvf1acqd4pkzrwb88f") (f (quote (("sqlx-sqlite" "sqlx/sqlite") ("sqlx-postgres" "sqlx/postgres") ("sqlx-mysql" "sqlx/mysql") ("sqlx-any" "sqlx/any") ("postgres-array" "sea-query/postgres-array")))) (s 2) (e (quote (("with-uuid" "sqlx?/uuid" "sea-query/with-uuid" "uuid") ("with-time" "sqlx?/time" "sea-query/with-time" "time") ("with-rust_decimal" "sqlx?/decimal" "sea-query/with-rust_decimal" "rust_decimal") ("with-mac_address" "sqlx?/mac_address" "sea-query/with-mac_address" "mac_address") ("with-json" "sqlx?/json" "sea-query/with-json" "serde_json") ("with-ipnetwork" "sqlx?/ipnetwork" "sea-query/with-ipnetwork" "ipnetwork") ("with-chrono" "sqlx?/chrono" "sea-query/with-chrono" "chrono") ("with-bigdecimal" "sqlx?/bigdecimal" "sea-query/with-bigdecimal" "bigdecimal") ("runtime-tokio-rustls" "sqlx?/runtime-tokio-rustls") ("runtime-tokio-native-tls" "sqlx?/runtime-tokio-native-tls") ("runtime-async-std-rustls" "sqlx?/runtime-async-std-rustls") ("runtime-async-std-native-tls" "sqlx?/runtime-async-std-native-tls") ("runtime-actix-rustls" "sqlx?/runtime-actix-rustls") ("runtime-actix-native-tls" "sqlx?/runtime-actix-native-tls")))) (r "1.60")))

(define-public crate-sea-query-binder-0.4.0 (c (n "sea-query-binder") (v "0.4.0") (d (list (d (n "bigdecimal") (r "^0.3") (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (o #t) (k 0)) (d (n "ipnetwork") (r "^0.19") (o #t) (k 0)) (d (n "mac_address") (r "^1.1") (o #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (k 0)) (d (n "sea-query") (r "^0.29") (f (quote ("thread-safe"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "sqlx") (r "^0.6.1") (o #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "formatting"))) (o #t) (k 0)) (d (n "uuid") (r "^1") (o #t) (k 0)))) (h "18112sg26p98p07kl1i773nc4wamrqjljyxga5iwg9dq05rbj3j2") (f (quote (("sqlx-sqlite" "sqlx/sqlite") ("sqlx-postgres" "sqlx/postgres") ("sqlx-mysql" "sqlx/mysql") ("sqlx-any" "sqlx/any") ("postgres-array" "sea-query/postgres-array")))) (s 2) (e (quote (("with-uuid" "sqlx?/uuid" "sea-query/with-uuid" "uuid") ("with-time" "sqlx?/time" "sea-query/with-time" "time") ("with-rust_decimal" "sqlx?/decimal" "sea-query/with-rust_decimal" "rust_decimal") ("with-mac_address" "sqlx?/mac_address" "sea-query/with-mac_address" "mac_address") ("with-json" "sqlx?/json" "sea-query/with-json" "serde_json") ("with-ipnetwork" "sqlx?/ipnetwork" "sea-query/with-ipnetwork" "ipnetwork") ("with-chrono" "sqlx?/chrono" "sea-query/with-chrono" "chrono") ("with-bigdecimal" "sqlx?/bigdecimal" "sea-query/with-bigdecimal" "bigdecimal") ("runtime-tokio-rustls" "sqlx?/runtime-tokio-rustls") ("runtime-tokio-native-tls" "sqlx?/runtime-tokio-native-tls") ("runtime-async-std-rustls" "sqlx?/runtime-async-std-rustls") ("runtime-async-std-native-tls" "sqlx?/runtime-async-std-native-tls") ("runtime-actix-rustls" "sqlx?/runtime-actix-rustls") ("runtime-actix-native-tls" "sqlx?/runtime-actix-native-tls")))) (r "1.60")))

(define-public crate-sea-query-binder-0.5.0 (c (n "sea-query-binder") (v "0.5.0") (d (list (d (n "bigdecimal") (r "^0.3") (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (o #t) (k 0)) (d (n "ipnetwork") (r "^0.20") (o #t) (k 0)) (d (n "mac_address") (r "^1.1") (o #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (k 0)) (d (n "sea-query") (r "^0.30") (f (quote ("thread-safe"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "sqlx") (r "^0.7") (o #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "formatting"))) (o #t) (k 0)) (d (n "uuid") (r "^1") (o #t) (k 0)))) (h "1fdigbxansk2ykb4ssn3n8c5v2ycsnnb85zbb96hx0ifz66vdfrn") (f (quote (("sqlx-sqlite" "sqlx/sqlite") ("sqlx-postgres" "sqlx/postgres") ("sqlx-mysql" "sqlx/mysql") ("sqlx-any" "sqlx/any") ("postgres-array" "sea-query/postgres-array")))) (s 2) (e (quote (("with-uuid" "sqlx?/uuid" "sea-query/with-uuid" "uuid") ("with-time" "sqlx?/time" "sea-query/with-time" "time") ("with-rust_decimal" "sqlx?/rust_decimal" "sea-query/with-rust_decimal" "rust_decimal") ("with-mac_address" "sqlx?/mac_address" "sea-query/with-mac_address" "mac_address") ("with-json" "sqlx?/json" "sea-query/with-json" "serde_json") ("with-ipnetwork" "sqlx?/ipnetwork" "sea-query/with-ipnetwork" "ipnetwork") ("with-chrono" "sqlx?/chrono" "sea-query/with-chrono" "chrono") ("with-bigdecimal" "sqlx?/bigdecimal" "sea-query/with-bigdecimal" "bigdecimal") ("runtime-tokio-rustls" "sqlx?/runtime-tokio-rustls") ("runtime-tokio-native-tls" "sqlx?/runtime-tokio-native-tls") ("runtime-async-std-rustls" "sqlx?/runtime-async-std-rustls") ("runtime-async-std-native-tls" "sqlx?/runtime-async-std-native-tls") ("runtime-actix-rustls" "sqlx?/runtime-tokio-rustls") ("runtime-actix-native-tls" "sqlx?/runtime-tokio-native-tls")))) (r "1.60")))

(define-public crate-sea-query-binder-0.6.0-rc.1 (c (n "sea-query-binder") (v "0.6.0-rc.1") (d (list (d (n "bigdecimal") (r "^0.3") (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (o #t) (k 0)) (d (n "ipnetwork") (r "^0.20") (o #t) (k 0)) (d (n "mac_address") (r "^1.1") (o #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (k 0)) (d (n "sea-query") (r "^0.31.0-rc.1") (f (quote ("thread-safe"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "sqlx") (r "^0.7") (o #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "formatting"))) (o #t) (k 0)) (d (n "uuid") (r "^1") (o #t) (k 0)))) (h "015bnqgkxr6pkidqa6brz50ywna551wi0k761r8y0kkb1ssahfgf") (f (quote (("sqlx-sqlite" "sqlx/sqlite") ("sqlx-postgres" "sqlx/postgres") ("sqlx-mysql" "sqlx/mysql") ("sqlx-any" "sqlx/any") ("postgres-array" "sea-query/postgres-array")))) (s 2) (e (quote (("with-uuid" "sqlx?/uuid" "sea-query/with-uuid" "uuid") ("with-time" "sqlx?/time" "sea-query/with-time" "time") ("with-rust_decimal" "sqlx?/rust_decimal" "sea-query/with-rust_decimal" "rust_decimal") ("with-mac_address" "sqlx?/mac_address" "sea-query/with-mac_address" "mac_address") ("with-json" "sqlx?/json" "sea-query/with-json" "serde_json") ("with-ipnetwork" "sqlx?/ipnetwork" "sea-query/with-ipnetwork" "ipnetwork") ("with-chrono" "sqlx?/chrono" "sea-query/with-chrono" "chrono") ("with-bigdecimal" "sqlx?/bigdecimal" "sea-query/with-bigdecimal" "bigdecimal") ("runtime-tokio-rustls" "sqlx?/runtime-tokio-rustls") ("runtime-tokio-native-tls" "sqlx?/runtime-tokio-native-tls") ("runtime-async-std-rustls" "sqlx?/runtime-async-std-rustls") ("runtime-async-std-native-tls" "sqlx?/runtime-async-std-native-tls") ("runtime-actix-rustls" "sqlx?/runtime-tokio-rustls") ("runtime-actix-native-tls" "sqlx?/runtime-tokio-native-tls")))) (r "1.60")))

(define-public crate-sea-query-binder-0.6.0-rc.2 (c (n "sea-query-binder") (v "0.6.0-rc.2") (d (list (d (n "bigdecimal") (r "^0.3") (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (o #t) (k 0)) (d (n "ipnetwork") (r "^0.20") (o #t) (k 0)) (d (n "mac_address") (r "^1.1") (o #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (k 0)) (d (n "sea-query") (r "^0.31.0-rc.4") (f (quote ("thread-safe"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "sqlx") (r "<0.7.5") (o #t) (k 0)) (d (n "time") (r "<0.3.35") (f (quote ("macros" "formatting"))) (o #t) (k 0)) (d (n "uuid") (r "^1") (o #t) (k 0)))) (h "1aklqs60i0nvm7r9jrcjx9mbjdcw3b9l9icqfjs4asqb0njd2s63") (f (quote (("sqlx-sqlite" "sqlx/sqlite") ("sqlx-postgres" "sqlx/postgres") ("sqlx-mysql" "sqlx/mysql") ("sqlx-any" "sqlx/any") ("postgres-array" "sea-query/postgres-array")))) (s 2) (e (quote (("with-uuid" "sqlx?/uuid" "sea-query/with-uuid" "uuid") ("with-time" "sqlx?/time" "sea-query/with-time" "time") ("with-rust_decimal" "sqlx?/rust_decimal" "sea-query/with-rust_decimal" "rust_decimal") ("with-mac_address" "sqlx?/mac_address" "sea-query/with-mac_address" "mac_address") ("with-json" "sqlx?/json" "sea-query/with-json" "serde_json") ("with-ipnetwork" "sqlx?/ipnetwork" "sea-query/with-ipnetwork" "ipnetwork") ("with-chrono" "sqlx?/chrono" "sea-query/with-chrono" "chrono") ("with-bigdecimal" "sqlx?/bigdecimal" "sea-query/with-bigdecimal" "bigdecimal") ("runtime-tokio-rustls" "sqlx?/runtime-tokio-rustls") ("runtime-tokio-native-tls" "sqlx?/runtime-tokio-native-tls") ("runtime-async-std-rustls" "sqlx?/runtime-async-std-rustls") ("runtime-async-std-native-tls" "sqlx?/runtime-async-std-native-tls") ("runtime-actix-rustls" "sqlx?/runtime-tokio-rustls") ("runtime-actix-native-tls" "sqlx?/runtime-tokio-native-tls")))) (r "1.60")))

