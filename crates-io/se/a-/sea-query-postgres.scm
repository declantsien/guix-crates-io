(define-module (crates-io se a- sea-query-postgres) #:use-module (crates-io))

(define-public crate-sea-query-postgres-0.1.0 (c (n "sea-query-postgres") (v "0.1.0") (d (list (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "postgres-types") (r "^0.2") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query") (r "^0") (d #t) (k 0)))) (h "1i1yy4b4cli9b4j3fam190pzd111n0ljpk97bgl6wg1g1yqm03z4") (f (quote (("with-uuid" "postgres-types/with-uuid-1" "sea-query/with-uuid") ("with-time" "postgres-types/with-time-0_3" "sea-query/with-time") ("with-rust_decimal" "sea-query/with-rust_decimal" "rust_decimal/db-postgres") ("with-mac_address" "sea-query/with-mac_address") ("with-json" "postgres-types/with-serde_json-1" "sea-query/with-json") ("with-ipnetwork" "sea-query/with-ipnetwork") ("with-chrono" "postgres-types/with-chrono-0_4" "sea-query/with-chrono") ("with-bigdecimal" "sea-query/with-bigdecimal") ("postgres-array" "postgres-types/array-impls" "sea-query/postgres-array")))) (r "1.60")))

(define-public crate-sea-query-postgres-0.1.1 (c (n "sea-query-postgres") (v "0.1.1") (d (list (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "postgres-types") (r "^0.2") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query") (r "^0.27") (d #t) (k 0)))) (h "18xiv880g7r4bd6s02cpp7pji09v5mj4n6k7bhca17a794ynx2z3") (f (quote (("with-uuid" "postgres-types/with-uuid-1" "sea-query/with-uuid") ("with-time" "postgres-types/with-time-0_3" "sea-query/with-time") ("with-rust_decimal" "sea-query/with-rust_decimal" "rust_decimal/db-postgres") ("with-mac_address" "sea-query/with-mac_address") ("with-json" "postgres-types/with-serde_json-1" "sea-query/with-json") ("with-ipnetwork" "sea-query/with-ipnetwork") ("with-chrono" "postgres-types/with-chrono-0_4" "sea-query/with-chrono") ("with-bigdecimal" "sea-query/with-bigdecimal") ("postgres-array" "postgres-types/array-impls" "sea-query/postgres-array")))) (r "1.60")))

(define-public crate-sea-query-postgres-0.2.0 (c (n "sea-query-postgres") (v "0.2.0") (d (list (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cidr") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "eui48") (r "^1") (o #t) (d #t) (k 0)) (d (n "ipnetwork") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "mac_address") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0.2") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query") (r "^0.28") (d #t) (k 0)))) (h "0vapv49hzsgrvl63qv6fz30yd3i059v9gmkr062jx7d8qkhzy9yb") (f (quote (("with-uuid" "postgres-types/with-uuid-1" "sea-query/with-uuid") ("with-time" "postgres-types/with-time-0_3" "sea-query/with-time") ("with-rust_decimal" "sea-query/with-rust_decimal" "rust_decimal/db-postgres") ("with-mac_address" "postgres-types/with-eui48-1" "sea-query/with-mac_address" "mac_address" "eui48") ("with-json" "postgres-types/with-serde_json-1" "sea-query/with-json") ("with-ipnetwork" "postgres-types/with-cidr-0_2" "sea-query/with-ipnetwork" "ipnetwork" "cidr") ("with-chrono" "postgres-types/with-chrono-0_4" "sea-query/with-chrono") ("with-bigdecimal" "sea-query/with-bigdecimal" "bigdecimal") ("postgres-array" "postgres-types/array-impls" "sea-query/postgres-array")))) (r "1.60")))

(define-public crate-sea-query-postgres-0.2.1 (c (n "sea-query-postgres") (v "0.2.1") (d (list (d (n "bigdecimal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cidr") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "eui48") (r "^1") (o #t) (d #t) (k 0)) (d (n "ipnetwork") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "mac_address") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "postgres-types") (r "^0.2") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "sea-query") (r "^0.28") (d #t) (k 0)))) (h "1z22w8v14vflqg2vak8ndrcsmhas8gxqvl21s6637yjydndgwfz5") (f (quote (("with-uuid" "postgres-types/with-uuid-1" "sea-query/with-uuid") ("with-time" "postgres-types/with-time-0_3" "sea-query/with-time") ("with-rust_decimal" "sea-query/with-rust_decimal" "rust_decimal/db-postgres") ("with-mac_address" "postgres-types/with-eui48-1" "sea-query/with-mac_address" "mac_address" "eui48") ("with-json" "postgres-types/with-serde_json-1" "sea-query/with-json") ("with-ipnetwork" "postgres-types/with-cidr-0_2" "sea-query/with-ipnetwork" "ipnetwork" "cidr") ("with-chrono" "postgres-types/with-chrono-0_4" "sea-query/with-chrono") ("with-bigdecimal" "sea-query/with-bigdecimal" "bigdecimal") ("postgres-array" "postgres-types/array-impls" "sea-query/postgres-array")))) (r "1.60")))

(define-public crate-sea-query-postgres-0.3.0-rc.2 (c (n "sea-query-postgres") (v "0.3.0-rc.2") (d (list (d (n "bigdecimal") (r "^0.3") (o #t) (k 0)) (d (n "bytes") (r "^1") (k 0)) (d (n "cidr") (r "^0.2") (o #t) (k 0)) (d (n "eui48") (r "^1") (o #t) (k 0)) (d (n "ipnetwork") (r "^0.19") (o #t) (k 0)) (d (n "mac_address") (r "^1.1") (o #t) (k 0)) (d (n "postgres-types") (r "^0.2") (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (k 0)) (d (n "sea-query") (r "^0.29.0-rc.2") (k 0)))) (h "02893w5590xynm4wqig5f31s6sbv3lzyck8bmz0z0j9nw5dsrbz3") (f (quote (("with-uuid" "postgres-types/with-uuid-1" "sea-query/with-uuid") ("with-time" "postgres-types/with-time-0_3" "sea-query/with-time") ("with-rust_decimal" "sea-query/with-rust_decimal" "rust_decimal/db-postgres") ("with-mac_address" "postgres-types/with-eui48-1" "sea-query/with-mac_address" "mac_address" "eui48") ("with-json" "postgres-types/with-serde_json-1" "sea-query/with-json") ("with-ipnetwork" "postgres-types/with-cidr-0_2" "sea-query/with-ipnetwork" "ipnetwork" "cidr") ("with-chrono" "postgres-types/with-chrono-0_4" "sea-query/with-chrono") ("with-bigdecimal" "sea-query/with-bigdecimal" "bigdecimal") ("postgres-array" "postgres-types/array-impls" "sea-query/postgres-array")))) (r "1.60")))

(define-public crate-sea-query-postgres-0.3.0 (c (n "sea-query-postgres") (v "0.3.0") (d (list (d (n "bigdecimal") (r "^0.3") (o #t) (k 0)) (d (n "bytes") (r "^1") (k 0)) (d (n "cidr") (r "^0.2") (o #t) (k 0)) (d (n "eui48") (r "^1") (o #t) (k 0)) (d (n "ipnetwork") (r "^0.19") (o #t) (k 0)) (d (n "mac_address") (r "^1.1") (o #t) (k 0)) (d (n "postgres-types") (r "^0.2") (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (k 0)) (d (n "sea-query") (r "^0.29") (k 0)))) (h "13zxfsaiplgykmaam8mqrmlk5bffwaa8r509rhf832prykdm6brc") (f (quote (("with-uuid" "postgres-types/with-uuid-1" "sea-query/with-uuid") ("with-time" "postgres-types/with-time-0_3" "sea-query/with-time") ("with-rust_decimal" "sea-query/with-rust_decimal" "rust_decimal/db-postgres") ("with-mac_address" "postgres-types/with-eui48-1" "sea-query/with-mac_address" "mac_address" "eui48") ("with-json" "postgres-types/with-serde_json-1" "sea-query/with-json") ("with-ipnetwork" "postgres-types/with-cidr-0_2" "sea-query/with-ipnetwork" "ipnetwork" "cidr") ("with-chrono" "postgres-types/with-chrono-0_4" "sea-query/with-chrono") ("with-bigdecimal" "sea-query/with-bigdecimal" "bigdecimal") ("postgres-array" "postgres-types/array-impls" "sea-query/postgres-array")))) (r "1.60")))

(define-public crate-sea-query-postgres-0.4.0 (c (n "sea-query-postgres") (v "0.4.0") (d (list (d (n "bigdecimal") (r "^0.3") (o #t) (k 0)) (d (n "bytes") (r "^1") (k 0)) (d (n "cidr") (r "^0.2") (o #t) (k 0)) (d (n "eui48") (r "^1") (o #t) (k 0)) (d (n "ipnetwork") (r "^0.20") (o #t) (k 0)) (d (n "mac_address") (r "^1.1") (o #t) (k 0)) (d (n "postgres-types") (r "^0.2") (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (k 0)) (d (n "sea-query") (r "^0.30") (k 0)))) (h "1gw5hiyri42sd7pb0ldxwi1nn4cmxknnjhs2zsv9mxsfa79b7hq8") (f (quote (("with-uuid" "postgres-types/with-uuid-1" "sea-query/with-uuid") ("with-time" "postgres-types/with-time-0_3" "sea-query/with-time") ("with-rust_decimal" "sea-query/with-rust_decimal" "rust_decimal/db-postgres") ("with-mac_address" "postgres-types/with-eui48-1" "sea-query/with-mac_address" "mac_address" "eui48") ("with-json" "postgres-types/with-serde_json-1" "sea-query/with-json") ("with-ipnetwork" "postgres-types/with-cidr-0_2" "sea-query/with-ipnetwork" "ipnetwork" "cidr") ("with-chrono" "postgres-types/with-chrono-0_4" "sea-query/with-chrono") ("with-bigdecimal" "sea-query/with-bigdecimal" "bigdecimal") ("postgres-array" "postgres-types/array-impls" "sea-query/postgres-array")))) (r "1.60")))

