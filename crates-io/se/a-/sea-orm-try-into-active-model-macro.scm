(define-module (crates-io se a- sea-orm-try-into-active-model-macro) #:use-module (crates-io))

(define-public crate-sea-orm-try-into-active-model-macro-0.1.0 (c (n "sea-orm-try-into-active-model-macro") (v "0.1.0") (d (list (d (n "bae") (r "^0.1") (o #t) (k 0)) (d (n "heck") (r "^0.4") (k 0)) (d (n "proc-macro2") (r "^1") (k 0)) (d (n "quote") (r "^1") (k 0)) (d (n "sea-orm") (r "^0.12.1") (f (quote ("macros" "tests-cfg"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "syn") (r "^1") (f (quote ("parsing" "proc-macro" "derive" "printing"))) (k 0)) (d (n "unicode-ident") (r "^1") (d #t) (k 0)))) (h "035wki4m2q5rbgspw6iy1hp1np8c18izvqcvqi0482mwyk0i57r2") (f (quote (("strum") ("postgres-array") ("derive" "bae") ("default" "derive"))))))

(define-public crate-sea-orm-try-into-active-model-macro-0.2.0 (c (n "sea-orm-try-into-active-model-macro") (v "0.2.0") (d (list (d (n "bae") (r "^0.2") (o #t) (k 0) (p "sea-bae")) (d (n "heck") (r "^0.4") (k 0)) (d (n "proc-macro2") (r "^1") (k 0)) (d (n "quote") (r "^1") (k 0)) (d (n "sea-orm") (r "^0.12.1") (f (quote ("macros" "tests-cfg"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "syn") (r "^2") (f (quote ("parsing" "proc-macro" "derive" "printing"))) (k 0)) (d (n "unicode-ident") (r "^1") (d #t) (k 0)))) (h "13k1zahaaca23436bv6npqpvd031wxxifxw4iam5g8lmar83ajgq") (f (quote (("strum") ("postgres-array") ("derive" "bae") ("default" "derive"))))))

