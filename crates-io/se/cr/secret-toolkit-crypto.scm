(define-module (crates-io se cr secret-toolkit-crypto) #:use-module (crates-io))

(define-public crate-secret-toolkit-crypto-0.2.0 (c (n "secret-toolkit-crypto") (v "0.2.0") (d (list (d (n "cosmwasm-std") (r "^0.10") (d #t) (k 0) (p "secret-cosmwasm-std")) (d (n "libsecp256k1") (r "^0.3.5") (f (quote ("hmac"))) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (k 0)) (d (n "rand_core") (r "^0.5.1") (k 0)) (d (n "secp256k1-test") (r "^0.17") (f (quote ("rand-std" "recovery"))) (d #t) (k 2) (p "secp256k1")) (d (n "sha2") (r "^0.9.1") (k 0)))) (h "0aw47dlql7hvf941h60cw6ydrqc0h6g6y9lqgbsimi0ccr977248")))

(define-public crate-secret-toolkit-crypto-0.3.0 (c (n "secret-toolkit-crypto") (v "0.3.0") (d (list (d (n "cosmwasm-std") (r "^0.10") (d #t) (k 0) (p "secret-cosmwasm-std")) (d (n "rand_chacha") (r "^0.2.2") (o #t) (k 0)) (d (n "rand_core") (r "^0.5.1") (o #t) (k 0)) (d (n "secp256k1") (r "^0.21.3") (o #t) (d #t) (k 0)) (d (n "secp256k1-test") (r "^0.17") (f (quote ("rand-std" "recovery"))) (d #t) (k 2) (p "secp256k1")) (d (n "sha2") (r "^0.9.1") (o #t) (k 0)))) (h "1gn2l3r0jlqfwpr2dsl8v8w22hbaaixzklw42vnpzqwmypvkw382") (f (quote (("rand" "rand_chacha" "rand_core") ("hash" "sha2") ("ecc-secp256k1" "secp256k1"))))))

(define-public crate-secret-toolkit-crypto-0.6.0 (c (n "secret-toolkit-crypto") (v "0.6.0") (d (list (d (n "base64") (r "^0.11") (d #t) (k 2)) (d (n "cosmwasm-std") (r "^1.0.0") (d #t) (k 0) (p "secret-cosmwasm-std")) (d (n "rand_chacha") (r "^0.2.2") (o #t) (k 0)) (d (n "rand_core") (r "^0.5.1") (o #t) (k 0)) (d (n "secp256k1") (r "^0.21.3") (o #t) (d #t) (k 0)) (d (n "secp256k1-test") (r "^0.17") (f (quote ("rand-std" "recovery"))) (d #t) (k 2) (p "secp256k1")) (d (n "sha2") (r "^0.9.1") (o #t) (k 0)))) (h "12h6ms6f7cjpp5qanrky3c1l4mncvpl33674h29405gis2jybj13") (f (quote (("rand" "rand_chacha" "rand_core") ("hash" "sha2") ("ecc-secp256k1" "secp256k1"))))))

(define-public crate-secret-toolkit-crypto-0.7.0 (c (n "secret-toolkit-crypto") (v "0.7.0") (d (list (d (n "cosmwasm-std") (r "^1.0.0") (d #t) (k 0) (p "secret-cosmwasm-std")) (d (n "rand_chacha") (r "^0.3.1") (o #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (o #t) (k 0)) (d (n "secp256k1") (r "^0.24.1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "secp256k1") (r "^0.24.1") (f (quote ("alloc" "rand-std"))) (k 2)) (d (n "sha2") (r "^0.10.6") (o #t) (k 0)))) (h "0i4w95ygg3kva4sdkljjp8874yqrvzw10lpn0qm68l1dx321wk9w") (f (quote (("rand" "rand_chacha" "rand_core") ("hash" "sha2") ("ecc-secp256k1" "secp256k1"))))))

(define-public crate-secret-toolkit-crypto-0.9.0 (c (n "secret-toolkit-crypto") (v "0.9.0") (d (list (d (n "base64") (r "^0.21.0") (d #t) (k 2)) (d (n "cosmwasm-std") (r "^1.1.10") (f (quote ("random"))) (d #t) (k 0) (p "secret-cosmwasm-std")) (d (n "rand_chacha") (r "^0.3.1") (o #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (o #t) (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("alloc" "rand-std"))) (k 2)) (d (n "sha2") (r "^0.10.6") (o #t) (k 0)))) (h "1b8pm4drg39w67hg5s9w0b0fra0db3a6m3f5d10hnhw17iifv9df") (f (quote (("rand" "hash" "rand_chacha" "rand_core") ("hash" "sha2") ("ecc-secp256k1" "secp256k1") ("default" "hash" "ecc-secp256k1" "rand"))))))

(define-public crate-secret-toolkit-crypto-0.10.0 (c (n "secret-toolkit-crypto") (v "0.10.0") (d (list (d (n "base64") (r "^0.21.0") (d #t) (k 2)) (d (n "cosmwasm-std") (r "^1.1.11") (f (quote ("random"))) (d #t) (k 0) (p "secret-cosmwasm-std")) (d (n "rand_chacha") (r "^0.3.1") (o #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (o #t) (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("alloc" "rand-std"))) (k 2)) (d (n "sha2") (r "^0.10.6") (o #t) (k 0)))) (h "06g5ywdmkzgb63bw267y2qcm12isnxpgk67jnx024zy6f9bpsg80") (f (quote (("rand" "hash" "rand_chacha" "rand_core") ("hash" "sha2") ("ecc-secp256k1" "secp256k1") ("default" "hash" "ecc-secp256k1" "rand"))))))

