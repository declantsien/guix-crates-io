(define-module (crates-io se cr secret-vault-value) #:use-module (crates-io))

(define-public crate-secret-vault-value-0.1.0 (c (n "secret-vault-value") (v "0.1.0") (d (list (d (n "cargo-husky") (r "^1.5") (f (quote ("run-for-all" "prepush-hook" "run-cargo-fmt"))) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "prost") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "prost-types") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "zeroize") (r "^1.5") (f (quote ("std" "derive"))) (d #t) (k 0)))) (h "08ca06k4fdrzqcaxzqs832nchid0qd4a1rm74ggjgd2nk8d3fy49") (f (quote (("default")))) (s 2) (e (quote (("serde" "dep:serde") ("proto" "dep:prost" "dep:prost-types"))))))

(define-public crate-secret-vault-value-0.1.1 (c (n "secret-vault-value") (v "0.1.1") (d (list (d (n "cargo-husky") (r "^1.5") (f (quote ("run-for-all" "prepush-hook" "run-cargo-fmt"))) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "prost") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "prost-types") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "zeroize") (r "^1.5") (f (quote ("std" "derive"))) (d #t) (k 0)))) (h "16qbp1qx418g7x9h3car6vlbxvp9xpvz7r2zdj91s9c430glkkjh") (f (quote (("default")))) (s 2) (e (quote (("serde" "dep:serde") ("proto" "dep:prost" "dep:prost-types"))))))

(define-public crate-secret-vault-value-0.2.0 (c (n "secret-vault-value") (v "0.2.0") (d (list (d (n "cargo-husky") (r "^1.5") (f (quote ("run-for-all" "prepush-hook" "run-cargo-fmt"))) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "prost") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "prost-types") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "zeroize") (r "^1.5") (f (quote ("std" "derive"))) (d #t) (k 0)))) (h "0b23ayipmf3bi8lvcisjqgrfbyy24yia322ag7zidsqgsh89gj3m") (f (quote (("default")))) (s 2) (e (quote (("serde" "dep:serde") ("proto" "dep:prost" "dep:prost-types"))))))

(define-public crate-secret-vault-value-0.2.1 (c (n "secret-vault-value") (v "0.2.1") (d (list (d (n "cargo-husky") (r "^1.5") (f (quote ("run-for-all" "prepush-hook" "run-cargo-fmt"))) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "prost") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "prost-types") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "zeroize") (r "^1.5") (f (quote ("std" "derive"))) (d #t) (k 0)))) (h "0llwbwf9pgjcy14jagxrm9pr1j30cda5ygw694a384w4qzrpgz6c") (f (quote (("default")))) (s 2) (e (quote (("serde" "dep:serde") ("proto" "dep:prost" "dep:prost-types"))))))

(define-public crate-secret-vault-value-0.2.2 (c (n "secret-vault-value") (v "0.2.2") (d (list (d (n "cargo-husky") (r "^1.5") (f (quote ("run-for-all" "prepush-hook" "run-cargo-fmt"))) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "prost") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "prost-types") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "zeroize") (r "^1.5") (f (quote ("std" "derive"))) (d #t) (k 0)))) (h "0f4ynkipdzhha9dfzpd1xdak55q6pmfmwpq7dspf5rh4hrz9023w") (f (quote (("default")))) (s 2) (e (quote (("serde" "dep:serde") ("proto" "dep:prost" "dep:prost-types"))))))

(define-public crate-secret-vault-value-0.2.3 (c (n "secret-vault-value") (v "0.2.3") (d (list (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1.5") (f (quote ("run-for-all" "prepush-hook" "run-cargo-fmt"))) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "prost") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "prost-types") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "zeroize") (r "^1.5") (f (quote ("std" "derive"))) (d #t) (k 0)))) (h "07igl673arrai6zrry3lyfankrzd386q6yvi75zcaslygkaab4xb") (f (quote (("default")))) (s 2) (e (quote (("serde" "dep:serde") ("proto" "dep:prost" "dep:prost-types") ("bytes" "dep:bytes"))))))

(define-public crate-secret-vault-value-0.2.4 (c (n "secret-vault-value") (v "0.2.4") (d (list (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1.5") (f (quote ("run-for-all" "prepush-hook" "run-cargo-fmt"))) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "prost") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "prost-types") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "tokio") (r "^1.20") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "zeroize") (r "^1.5") (f (quote ("std" "derive"))) (d #t) (k 0)))) (h "1bg6y0h75gf15lkvyyxjpmwsla15xp41044aaddccgnylpwwkkja") (f (quote (("default")))) (s 2) (e (quote (("serde" "dep:serde") ("proto" "dep:prost" "dep:prost-types") ("bytes" "dep:bytes"))))))

(define-public crate-secret-vault-value-0.2.5 (c (n "secret-vault-value") (v "0.2.5") (d (list (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1.5") (f (quote ("run-for-all" "prepush-hook" "run-cargo-fmt"))) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "prost") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "prost-types") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "tokio") (r "^1.20") (d #t) (k 2)) (d (n "zeroize") (r "^1.5") (f (quote ("std" "derive"))) (d #t) (k 0)))) (h "1yp8r2285imvwg4sbnvgdw1cvfksgcqh152m7hrkvwbwsp9idarc") (f (quote (("default")))) (s 2) (e (quote (("serde" "dep:serde") ("proto" "dep:prost" "dep:prost-types") ("bytes" "dep:bytes"))))))

(define-public crate-secret-vault-value-0.3.0 (c (n "secret-vault-value") (v "0.3.0") (d (list (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1.5") (f (quote ("run-for-all" "prepush-hook" "run-cargo-fmt"))) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "prost-types") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "tokio") (r "^1.20") (d #t) (k 2)) (d (n "zeroize") (r "^1.5") (f (quote ("std" "derive"))) (d #t) (k 0)))) (h "0h0z44wczcgf7901v7lh0mn7lwvb0iwlvshndhwjfp8d6hvmknsx") (f (quote (("default")))) (s 2) (e (quote (("serde" "dep:serde") ("proto" "dep:prost" "dep:prost-types") ("bytes" "dep:bytes"))))))

(define-public crate-secret-vault-value-0.3.1 (c (n "secret-vault-value") (v "0.3.1") (d (list (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1.5") (f (quote ("run-for-all" "prepush-hook" "run-cargo-fmt"))) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "prost-types") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "zeroize") (r "^1.5") (f (quote ("std" "derive"))) (d #t) (k 0)))) (h "0qb7v5a1gf80xgzghfxvb48xb6wxxcryvnfm2dvmkc26cvaicx9z") (f (quote (("default")))) (s 2) (e (quote (("serde" "dep:serde") ("proto" "dep:prost" "dep:prost-types") ("bytes" "dep:bytes"))))))

(define-public crate-secret-vault-value-0.3.2 (c (n "secret-vault-value") (v "0.3.2") (d (list (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1.5") (f (quote ("run-for-all" "prepush-hook" "run-cargo-fmt"))) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "prost-types") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "zeroize") (r "^1.5") (f (quote ("std" "derive"))) (d #t) (k 0)))) (h "0gxfqi5bgs8npzjfacm4ns3048bfx6lvqyyfgvm70s9q7m7186ih") (f (quote (("default")))) (y #t) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_json") ("proto" "dep:prost" "dep:prost-types") ("bytes" "dep:bytes"))))))

(define-public crate-secret-vault-value-0.3.3 (c (n "secret-vault-value") (v "0.3.3") (d (list (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1.5") (f (quote ("run-for-all" "prepush-hook" "run-cargo-fmt"))) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "prost-types") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "zeroize") (r "^1.5") (f (quote ("std" "derive"))) (d #t) (k 0)))) (h "1rjb5lwjzbza8drfjcdb0kmkv3i8syhq0g0l29gk6rq1mpdizcx2") (f (quote (("default")))) (y #t) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_json") ("proto" "dep:prost" "dep:prost-types") ("bytes" "dep:bytes"))))))

(define-public crate-secret-vault-value-0.3.4 (c (n "secret-vault-value") (v "0.3.4") (d (list (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1.5") (f (quote ("run-for-all" "prepush-hook" "run-cargo-fmt"))) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "prost-types") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "zeroize") (r "^1.5") (f (quote ("std" "derive"))) (d #t) (k 0)))) (h "0bamnwzcxw46ayjs33xix7znp79d98ynf6ssp9imas4h5110xr0z") (f (quote (("default")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_json") ("proto" "dep:prost" "dep:prost-types") ("bytes" "dep:bytes"))))))

(define-public crate-secret-vault-value-0.3.5 (c (n "secret-vault-value") (v "0.3.5") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1.5") (f (quote ("run-for-all" "prepush-hook" "run-cargo-fmt"))) (k 2)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "prost-types") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "zeroize") (r "^1.5") (f (quote ("std" "derive"))) (d #t) (k 0)))) (h "137y7zvvxn8jjsblc885h0c5q4m2lnm6xrw5prspc85zj0q4scgd") (f (quote (("default")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_json") ("proto" "dep:prost" "dep:prost-types") ("hex" "dep:hex") ("bytes" "dep:bytes") ("base64" "dep:base64"))))))

(define-public crate-secret-vault-value-0.3.6 (c (n "secret-vault-value") (v "0.3.6") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1.5") (f (quote ("run-for-all" "prepush-hook" "run-cargo-fmt"))) (k 2)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "prost-types") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "zeroize") (r "^1.5") (f (quote ("std" "derive"))) (d #t) (k 0)))) (h "19pkvgjnlakvjlmbbivaazgyxjcwh1cjk17lq6k3gcba86kslwh4") (f (quote (("default")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_json") ("proto" "dep:prost" "dep:prost-types") ("hex" "dep:hex") ("bytes" "dep:bytes") ("base64" "dep:base64"))))))

(define-public crate-secret-vault-value-0.3.7 (c (n "secret-vault-value") (v "0.3.7") (d (list (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1.5") (f (quote ("run-for-all" "prepush-hook" "run-cargo-fmt"))) (k 2)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "prost-types") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "zeroize") (r "^1.5") (f (quote ("std" "derive"))) (d #t) (k 0)))) (h "1knydgz2wc2id1bzip8mf6dfzkj5q9g5fxffc8r6l0c23riz5npd") (f (quote (("default")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_json") ("proto" "dep:prost" "dep:prost-types") ("hex" "dep:hex") ("bytes" "dep:bytes") ("base64" "dep:base64"))))))

(define-public crate-secret-vault-value-0.3.8 (c (n "secret-vault-value") (v "0.3.8") (d (list (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1.5") (f (quote ("run-for-all" "prepush-hook" "run-cargo-fmt"))) (k 2)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.3") (d #t) (k 2)) (d (n "prost") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "prost-types") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "zeroize") (r "^1.6") (f (quote ("std" "derive"))) (d #t) (k 0)))) (h "1pj78cl081cxxbz1yv4lxkxhdx01yjcy8jgv9i5gc690dnwczy7m") (f (quote (("default")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_json") ("proto" "dep:prost" "dep:prost-types") ("hex" "dep:hex") ("bytes" "dep:bytes") ("base64" "dep:base64"))))))

