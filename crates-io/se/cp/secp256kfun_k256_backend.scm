(define-module (crates-io se cp secp256kfun_k256_backend) #:use-module (crates-io))

(define-public crate-secp256kfun_k256_backend-0.9.6 (c (n "secp256kfun_k256_backend") (v "0.9.6") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.10.6") (f (quote ("hazmat"))) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)))) (h "0d7jg0sqdr8j52k9kzapgc7ix96ncbzjmxp6fwwx1s7q4c3i6pxj") (f (quote (("expose-field" "arithmetic") ("default" "arithmetic") ("arithmetic" "elliptic-curve/arithmetic"))))))

(define-public crate-secp256kfun_k256_backend-1.0.0 (c (n "secp256kfun_k256_backend") (v "1.0.0") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.10.6") (f (quote ("hazmat"))) (k 2)) (d (n "generic-array") (r "^0.14") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "subtle") (r "^2") (d #t) (k 0) (p "subtle-ng")))) (h "0njhh8v878v1fal1rzdfh7xp495yp809z8f2i908pb3p869g8gh3") (f (quote (("expose-field" "arithmetic") ("default" "arithmetic") ("arithmetic"))))))

(define-public crate-secp256kfun_k256_backend-2.0.0 (c (n "secp256kfun_k256_backend") (v "2.0.0") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.10.6") (f (quote ("hazmat" "arithmetic"))) (k 2)) (d (n "generic-array") (r "^0.14") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "subtle") (r "^2") (d #t) (k 0) (p "subtle-ng")))) (h "1g2wqym1249y782az893dkh67w0jjz1z936kr97v5wwzc2knmjcr") (f (quote (("default" "alloc") ("alloc"))))))

(define-public crate-secp256kfun_k256_backend-2.0.1 (c (n "secp256kfun_k256_backend") (v "2.0.1") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.10.6") (f (quote ("hazmat" "arithmetic"))) (k 2)) (d (n "generic-array") (r "^0.14") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "subtle") (r "^2") (d #t) (k 0) (p "subtle-ng")))) (h "13g1rqzphzs7f57pqldwsvq4mb0a8hl08h3bkb68h5k75kp36yq0") (f (quote (("default" "alloc") ("alloc"))))))

