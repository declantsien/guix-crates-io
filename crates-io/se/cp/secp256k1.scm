(define-module (crates-io se cp secp256k1) #:use-module (crates-io))

(define-public crate-secp256k1-0.1.0 (c (n "secp256k1") (v "0.1.0") (d (list (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.3") (d #t) (k 0)))) (h "0fm046nlc9hmds5k53yxsh07sd9bmdk0p4kxjajhc29ydy0vsljp")))

(define-public crate-secp256k1-0.1.1 (c (n "secp256k1") (v "0.1.1") (d (list (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.3") (d #t) (k 0)))) (h "18g2gb2k1hpry7984vxj1si148cwjc377sb0rfydga4ysaar0fy9")))

(define-public crate-secp256k1-0.1.2 (c (n "secp256k1") (v "0.1.2") (d (list (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.3") (d #t) (k 0)))) (h "0qk5gmpp71m8whzsx6nprgzwldnbw3rbiqpg66hnhl75djidz67v")))

(define-public crate-secp256k1-0.2.0 (c (n "secp256k1") (v "0.2.0") (d (list (d (n "arrayvec") (r "^0.3") (d #t) (k 0)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.3") (d #t) (k 0)))) (h "1676zb2qjic1bn9ajdxcm3rvjln2wvxlbnjq69q5ryxqzfvzm0c3") (f (quote (("unstable"))))))

(define-public crate-secp256k1-0.2.1 (c (n "secp256k1") (v "0.2.1") (d (list (d (n "arrayvec") (r "^0.3") (d #t) (k 0)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)))) (h "0nyp7r006dav3cbhhhh0bkb702wzh4s8hmcbq1hdz8g7vwjqr3z0") (f (quote (("unstable"))))))

(define-public crate-secp256k1-0.2.2 (c (n "secp256k1") (v "0.2.2") (d (list (d (n "arrayvec") (r "^0.3") (d #t) (k 0)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^0.6") (d #t) (k 0)))) (h "0lc3w7620x1rb4j52yjyc2fx85mf07amjppj8ly00jwfqasg54zw") (f (quote (("unstable"))))))

(define-public crate-secp256k1-0.2.3 (c (n "secp256k1") (v "0.2.3") (d (list (d (n "arrayvec") (r "^0.3") (d #t) (k 0)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^0.6") (d #t) (k 0)))) (h "05hgb2ccgz81n4a0nprhclzy1yaqjipv9z2zhwqc6h122yjdyp80") (f (quote (("unstable"))))))

(define-public crate-secp256k1-0.2.4 (c (n "secp256k1") (v "0.2.4") (d (list (d (n "arrayvec") (r "^0.3") (d #t) (k 0)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^0.6") (d #t) (k 0)))) (h "181bk5hjs2njclq66y0q56s7vxkc796f8s5whli5pjjlwaz4cf15") (f (quote (("unstable"))))))

(define-public crate-secp256k1-0.3.0 (c (n "secp256k1") (v "0.3.0") (d (list (d (n "arrayvec") (r "^0.3") (d #t) (k 0)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^0.6") (d #t) (k 0)))) (h "1wi1si01jwki3cnbr9jp8m14x1py5f44g223xgidjc6lnys7x66b") (f (quote (("unstable"))))))

(define-public crate-secp256k1-0.3.1 (c (n "secp256k1") (v "0.3.1") (d (list (d (n "arrayvec") (r "^0.3") (d #t) (k 0)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^0.6") (d #t) (k 0)))) (h "1cy23j5c3dssi71z8w1fr51cwsy9q67swf1plkxh1nf675i8crry") (f (quote (("unstable"))))))

(define-public crate-secp256k1-0.3.2 (c (n "secp256k1") (v "0.3.2") (d (list (d (n "arrayvec") (r "^0.3") (d #t) (k 0)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^0.6") (d #t) (k 0)))) (h "0xmsxcki0j3khwl89mclzhb3800xvlcn3nryj1cfrc6vrirwf5r5") (f (quote (("unstable"))))))

(define-public crate-secp256k1-0.3.3 (c (n "secp256k1") (v "0.3.3") (d (list (d (n "arrayvec") (r "^0.3") (d #t) (k 0)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^0.6") (d #t) (k 0)))) (h "0qvqfrqy2zfkz5sanfwm6crff97am8v580drxk0pbzbjrmswrgzg") (f (quote (("unstable"))))))

(define-public crate-secp256k1-0.4.0 (c (n "secp256k1") (v "0.4.0") (d (list (d (n "arrayvec") (r "^0.3") (d #t) (k 0)) (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^0.6") (d #t) (k 0)))) (h "16w409xrpsx1az56qiqp6jxgnabx268rn9byk0w0gjzjkfq40g2s") (f (quote (("unstable"))))))

(define-public crate-secp256k1-0.4.1 (c (n "secp256k1") (v "0.4.1") (d (list (d (n "arrayvec") (r "^0.3") (d #t) (k 0)) (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^0.6") (d #t) (k 0)))) (h "1x3znb7v7dm829v5p0nxhgvp7yfq8c9dq31aaascnf90zp769dfr") (f (quote (("unstable"))))))

(define-public crate-secp256k1-0.4.2 (c (n "secp256k1") (v "0.4.2") (d (list (d (n "arrayvec") (r "^0.3") (d #t) (k 0)) (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^0.6") (d #t) (k 0)))) (h "09zz9xjkh15h185fdprjilhqjbnhwpyhrkxxysbilyf1pa0q2jkg") (f (quote (("unstable"))))))

(define-public crate-secp256k1-0.5.0 (c (n "secp256k1") (v "0.5.0") (d (list (d (n "arrayvec") (r "^0.3") (d #t) (k 0)) (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^0.6") (d #t) (k 0)))) (h "1yldqzb24gvgnwxax2gjv541gl1v83k2ca9z0jbkxlklm1x5qmxs") (f (quote (("unstable"))))))

(define-public crate-secp256k1-0.5.1 (c (n "secp256k1") (v "0.5.1") (d (list (d (n "arrayvec") (r "^0.3") (d #t) (k 0)) (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^0.6") (d #t) (k 0)))) (h "1i1b04gzc732304bkfsvadabf0mzmbxvgz5x4m0n5hz9m58jmplq") (f (quote (("unstable"))))))

(define-public crate-secp256k1-0.5.2 (c (n "secp256k1") (v "0.5.2") (d (list (d (n "arrayvec") (r "^0.3") (d #t) (k 0)) (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^0.6") (d #t) (k 0)))) (h "09gi77bhjcv5jvssn444456ngpr2fmb0y6azxkb2g7h8vpr4brni") (f (quote (("unstable"))))))

(define-public crate-secp256k1-0.5.3 (c (n "secp256k1") (v "0.5.3") (d (list (d (n "arrayvec") (r "^0.3") (d #t) (k 0)) (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^0.6") (d #t) (k 0)))) (h "1xxm18q8h8r4223qlrxgmwqv1ybmp5lxzffx76skvrlasfdxfybf") (f (quote (("unstable") ("dev" "clippy") ("default"))))))

(define-public crate-secp256k1-0.5.4 (c (n "secp256k1") (v "0.5.4") (d (list (d (n "arrayvec") (r "^0.3") (d #t) (k 0)) (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^0.6") (d #t) (k 0)))) (h "00zi97q81k3f36q8jgk26a9ncr2pin31fbsy5lbvvy691zlnkslz") (f (quote (("unstable") ("dev" "clippy") ("default"))))))

(define-public crate-secp256k1-0.5.5 (c (n "secp256k1") (v "0.5.5") (d (list (d (n "arrayvec") (r "^0.3") (d #t) (k 0)) (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^0.6") (d #t) (k 0)))) (h "0fzlkyfbsq9zf2728v4clkwzl8g3srwws3d8z2kagslv3ym33z9g") (f (quote (("unstable") ("dev" "clippy") ("default"))))))

(define-public crate-secp256k1-0.5.6 (c (n "secp256k1") (v "0.5.6") (d (list (d (n "arrayvec") (r "^0.3") (d #t) (k 0)) (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^0.6") (d #t) (k 0)))) (h "0k0lg5fbg4r87s2047nw38fhmivngs6jxvikif497zqpcp9mhs3h") (f (quote (("unstable") ("dev" "clippy") ("default"))))))

(define-public crate-secp256k1-0.6.0 (c (n "secp256k1") (v "0.6.0") (d (list (d (n "arrayvec") (r "^0.3") (d #t) (k 0)) (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^0.6") (d #t) (k 0)))) (h "02zm2ls26a1wvxwr9x40ykvn5y771m6ndybys6ax2gkw5xr6d1dz") (f (quote (("unstable") ("dev" "clippy") ("default"))))))

(define-public crate-secp256k1-0.6.1 (c (n "secp256k1") (v "0.6.1") (d (list (d (n "arrayvec") (r "^0.3") (d #t) (k 0)) (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^0.6") (d #t) (k 0)))) (h "04v12gl53yx4j8514nx9aj020gnaqspdxn9nbawar52k03awwdkg") (f (quote (("unstable") ("dev" "clippy") ("default"))))))

(define-public crate-secp256k1-0.6.2 (c (n "secp256k1") (v "0.6.2") (d (list (d (n "arrayvec") (r "^0.3") (d #t) (k 0)) (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^0.6") (d #t) (k 0)))) (h "00kkrbagg6nqpgqpwc90nvlq6mshpjjwygwzjj7xv61as4r76cw9") (f (quote (("unstable") ("dev" "clippy") ("default"))))))

(define-public crate-secp256k1-0.6.3 (c (n "secp256k1") (v "0.6.3") (d (list (d (n "arrayvec") (r "^0.3") (d #t) (k 0)) (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^0.6") (d #t) (k 0)))) (h "06l2yim4z5knrk9kcjk2dcnb4i0ddc4pz17b8zbnw0gqlhpmm48h") (f (quote (("unstable") ("dev" "clippy") ("default"))))))

(define-public crate-secp256k1-0.7.0 (c (n "secp256k1") (v "0.7.0") (d (list (d (n "arrayvec") (r "^0.3") (d #t) (k 0)) (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0949nvqw3x222i82ch9l61b3zp501wxwzryan43bimcl33lh4l8n") (f (quote (("unstable") ("dev" "clippy") ("default"))))))

(define-public crate-secp256k1-0.7.1 (c (n "secp256k1") (v "0.7.1") (d (list (d (n "arrayvec") (r "^0.3") (d #t) (k 0)) (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "07mqfijj020rprfr83fl006l9s7gk9nzic2r8cjmzy601c83d69z") (f (quote (("unstable") ("dev" "clippy") ("default"))))))

(define-public crate-secp256k1-0.8.0 (c (n "secp256k1") (v "0.8.0") (d (list (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "03yfdj5cl4a6a1ylbaj0lmv4jpnr3zc42d3fm7rzrsp4d77fqry1") (f (quote (("unstable") ("default"))))))

(define-public crate-secp256k1-0.8.1 (c (n "secp256k1") (v "0.8.1") (d (list (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "17mckm1w7dll6f1z9f1gx90gv0z4a8r2hjsdffy4l7gah4bmgd5m") (f (quote (("unstable") ("default"))))))

(define-public crate-secp256k1-0.8.2 (c (n "secp256k1") (v "0.8.2") (d (list (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0gsndxmpllwmqr8n9vijwlkj3yh86zi4qkix3d5czma3g670k1xw") (f (quote (("unstable") ("default"))))))

(define-public crate-secp256k1-0.8.3 (c (n "secp256k1") (v "0.8.3") (d (list (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1gazg7lpkm3g482wmbv7nb8b9d0zfgk8jarbn0rnnzad49zjkmvv") (f (quote (("unstable") ("default"))))))

(define-public crate-secp256k1-0.8.4 (c (n "secp256k1") (v "0.8.4") (d (list (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1qj9x1c8zqnd5cmjy5s98bj7ki9iywhagnw46i6g6jkg56i7ca5k") (f (quote (("unstable") ("default"))))))

(define-public crate-secp256k1-0.8.5 (c (n "secp256k1") (v "0.8.5") (d (list (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "00kh8sw71i903630as0cza5i1204kv67vfym3xd324qjn39ra3r1") (f (quote (("unstable") ("fuzztarget") ("default"))))))

(define-public crate-secp256k1-0.9.0 (c (n "secp256k1") (v "0.9.0") (d (list (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 2)))) (h "07lrxh6paakf26dqayd3yvrscnklnycsl7n15bnr6m3kwjx6l20f") (f (quote (("unstable") ("fuzztarget") ("default"))))))

(define-public crate-secp256k1-0.9.1 (c (n "secp256k1") (v "0.9.1") (d (list (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 2)))) (h "0bk9s9wxgkzn31sgapa013kvxbvrj4hqag5j9k3wb12yasy9dr2v") (f (quote (("unstable") ("fuzztarget") ("default"))))))

(define-public crate-secp256k1-0.9.2 (c (n "secp256k1") (v "0.9.2") (d (list (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 2)))) (h "0jdx5z4sflwmf4zjrrs8w74wnzhqsj5x1q2ki925ga05q9ac4sah") (f (quote (("unstable") ("fuzztarget") ("default"))))))

(define-public crate-secp256k1-0.10.0 (c (n "secp256k1") (v "0.10.0") (d (list (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "0rxln5jz0fip62ky0zj5cj17sjjdkqik7fz89jzn0w10rz6lvc6p") (f (quote (("unstable") ("fuzztarget") ("default"))))))

(define-public crate-secp256k1-0.11.0 (c (n "secp256k1") (v "0.11.0") (d (list (d (n "cc") (r "^1.0") (d #t) (k 1)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "0pxyi4knqnsmwiryzkb96v08jyf2d5wm6igkmj2facf39r7vln0s") (f (quote (("unstable") ("fuzztarget") ("default"))))))

(define-public crate-secp256k1-0.11.1 (c (n "secp256k1") (v "0.11.1") (d (list (d (n "cc") (r "^1.0") (d #t) (k 1)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "0kc29cp4cmnsljbhlvyd6d8l3wmynhdvm33qpyam390wmlysif89") (f (quote (("unstable") ("fuzztarget") ("default"))))))

(define-public crate-secp256k1-0.11.2 (c (n "secp256k1") (v "0.11.2") (d (list (d (n "cc") (r "^1.0") (d #t) (k 1)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "143d3cqk3daxfibn77x428jzqsd5860924p9a7s2jlbjnkbf09vr") (f (quote (("unstable") ("fuzztarget") ("default"))))))

(define-public crate-secp256k1-0.11.3 (c (n "secp256k1") (v "0.11.3") (d (list (d (n "cc") (r "^1.0") (d #t) (k 1)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "0zdqf0xsfqpfimzhfvvsgl1y30fkbl0440nvym7s9jbvvjjjzd9g") (f (quote (("unstable") ("fuzztarget") ("default"))))))

(define-public crate-secp256k1-0.11.4 (c (n "secp256k1") (v "0.11.4") (d (list (d (n "cc") (r "^1.0") (d #t) (k 1)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "0isg2ka7r71qqnm37rf6kgjz3j8ddb1xzw76dcl6k3flfaz1vfh0") (f (quote (("unstable") ("fuzztarget") ("default"))))))

(define-public crate-secp256k1-0.11.5 (c (n "secp256k1") (v "0.11.5") (d (list (d (n "cc") (r "^1.0") (d #t) (k 1)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "0fh6v13wwc5snx8m0lgb37yzr57ixaf3grflvlhrj85wjnr5j9p2") (f (quote (("unstable") ("fuzztarget") ("default"))))))

(define-public crate-secp256k1-0.12.0 (c (n "secp256k1") (v "0.12.0") (d (list (d (n "cc") (r "^1.0") (d #t) (k 1)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "0ckfz2f304m8ryxhn6b88jhgp687m427pyac14l94935ds8g6w20") (f (quote (("unstable") ("fuzztarget") ("default"))))))

(define-public crate-secp256k1-0.11.6 (c (n "secp256k1") (v "0.11.6") (d (list (d (n "cc") (r "= 1.0.26") (d #t) (k 1)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "0id7ng9ajv2czcq2rki4wg9gj04cgc638m978v0cf7w0k7k39fbp") (f (quote (("unstable") ("fuzztarget") ("default"))))))

(define-public crate-secp256k1-0.12.1 (c (n "secp256k1") (v "0.12.1") (d (list (d (n "cc") (r "= 1.0.26") (d #t) (k 1)) (d (n "rand") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "14x3w2vsn2r9kl24x5qj5mmq0sqz7n7zrxj6w9m2hxhzinzdhp1f") (f (quote (("unstable") ("fuzztarget") ("default"))))))

(define-public crate-secp256k1-0.12.2 (c (n "secp256k1") (v "0.12.2") (d (list (d (n "cc") (r "= 1.0.26") (d #t) (k 1)) (d (n "rand") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "0gmn4v9pil6pih2nfwznrm1j765i6hgj96ldhzh4k4v14cxcvb5z") (f (quote (("unstable") ("fuzztarget") ("default"))))))

(define-public crate-secp256k1-0.13.0 (c (n "secp256k1") (v "0.13.0") (d (list (d (n "cc") (r ">= 1.0.28, <= 1.0.35") (d #t) (k 1)) (d (n "rand") (r "^0.6") (o #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "rand_core") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "1v7pnic8brnv3782jpvi8bh6kn2mpf2mhh314p91qcs4dxc2q7zv") (f (quote (("unstable") ("std") ("recovery") ("fuzztarget") ("default" "std"))))))

(define-public crate-secp256k1-0.14.0 (c (n "secp256k1") (v "0.14.0") (d (list (d (n "cc") (r ">= 1.0.28, <= 1.0.35") (d #t) (k 1)) (d (n "rand") (r "^0.6") (o #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "rand_core") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "01n17xw850jydj98xapvybnrg4hvf4l08ykg5mmh1nrrwzkzsa1b") (f (quote (("unstable") ("std") ("recovery") ("fuzztarget") ("endomorphism") ("default" "std"))))))

(define-public crate-secp256k1-0.14.1 (c (n "secp256k1") (v "0.14.1") (d (list (d (n "cc") (r ">= 1.0.28, <= 1.0.35") (d #t) (k 1)) (d (n "rand") (r "^0.6") (o #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "rand_core") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "09ika2b2pbl2yv6k1m0k4vdxszpqhdshjx0zbx05c8182mybawkv") (f (quote (("unstable") ("std") ("recovery") ("fuzztarget") ("endomorphism") ("default" "std"))))))

(define-public crate-secp256k1-0.15.0 (c (n "secp256k1") (v "0.15.0") (d (list (d (n "cc") (r ">= 1.0.28") (d #t) (k 1)) (d (n "rand") (r "^0.6") (o #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "rand_core") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "0yqaj06m6spizm4mwm61i8bi7wqjiq13d5838xazh2gi9xwlld70") (f (quote (("unstable") ("std") ("recovery") ("fuzztarget") ("endomorphism") ("default" "std")))) (l "secp256k1")))

(define-public crate-secp256k1-0.15.1 (c (n "secp256k1") (v "0.15.1") (d (list (d (n "cc") (r ">= 1.0.28") (d #t) (k 1)) (d (n "rand") (r "^0.6") (o #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "rand_core") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "0z625afg8b6196y333kj93gkbhr0bps2gm20pisyiwc4375xcpxf") (f (quote (("unstable") ("std" "rand/std") ("recovery") ("fuzztarget") ("endomorphism") ("default" "std")))) (l "secp256k1")))

(define-public crate-secp256k1-0.15.2 (c (n "secp256k1") (v "0.15.2") (d (list (d (n "cc") (r ">= 1.0.28") (d #t) (k 1)) (d (n "rand") (r "^0.6") (o #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "rand_core") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "16rxldqmdqpn7a650j7gp3yi8qq9z1s99js7pqhr36bk2l0lcpnb") (f (quote (("unstable") ("std" "rand/std") ("recovery") ("lowmemory") ("fuzztarget") ("endomorphism") ("default" "std")))) (l "secp256k1")))

(define-public crate-secp256k1-0.15.3 (c (n "secp256k1") (v "0.15.3") (d (list (d (n "cc") (r ">= 1.0.28") (d #t) (k 1)) (d (n "rand") (r "^0.6") (o #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "rand_core") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "0llnscs6dmhwxb1vchna71shjn0cjk6d2fyy9nba7mqrkp9qqqg5") (f (quote (("unstable") ("std" "rand/std") ("recovery") ("lowmemory") ("fuzztarget") ("endomorphism") ("default" "std")))) (l "secp256k1")))

(define-public crate-secp256k1-0.15.4 (c (n "secp256k1") (v "0.15.4") (d (list (d (n "cc") (r ">= 1.0.28, < 1.0.42") (d #t) (k 1)) (d (n "rand") (r "^0.6") (o #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "rand_core") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "0kxiksaqdpn4cn037z276nrv9fj1rn9p0c397iyzx634ab87avli") (f (quote (("unstable") ("std") ("recovery") ("rand-std" "rand/std") ("lowmemory") ("fuzztarget") ("endomorphism") ("default" "std")))) (y #t) (l "secp256k1")))

(define-public crate-secp256k1-0.15.5 (c (n "secp256k1") (v "0.15.5") (d (list (d (n "cc") (r ">= 1.0.28, < 1.0.42") (d #t) (k 1)) (d (n "rand") (r "^0.6") (o #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "rand_core") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "0fh5qqbfjj5z8rslyd23qhd0q2jsz96rdngfx4141mh3yhli4cad") (f (quote (("unstable") ("std" "rand/std") ("recovery") ("lowmemory") ("fuzztarget") ("endomorphism") ("default" "std")))) (l "secp256k1")))

(define-public crate-secp256k1-0.16.0 (c (n "secp256k1") (v "0.16.0") (d (list (d (n "cc") (r ">= 1.0.28, < 1.0.42") (d #t) (k 1)) (d (n "rand") (r "^0.6") (o #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "rand_core") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "0k8dlad8l8pb7190lzy3ggj7vzcggyg8qsqp1jgx764r9cl2g660") (f (quote (("unstable") ("std") ("recovery") ("rand-std" "rand/std") ("lowmemory") ("fuzztarget") ("endomorphism") ("dont_replace_c_symbols") ("default" "std")))) (l "secp256k1")))

(define-public crate-secp256k1-0.17.0 (c (n "secp256k1") (v "0.17.0") (d (list (d (n "bitcoin_hashes") (r "^0.7") (d #t) (k 2)) (d (n "rand") (r "^0.6") (o #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "rand_core") (r "^0.4") (d #t) (k 2)) (d (n "secp256k1-sys") (r "^0.1.0") (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "1g038kg9gip8mg3ms5701n2fha5qryay8zw2y394v026zn4731ca") (f (quote (("unstable") ("std" "secp256k1-sys/std") ("recovery" "secp256k1-sys/recovery") ("rand-std" "rand/std") ("lowmemory" "secp256k1-sys/lowmemory") ("fuzztarget" "secp256k1-sys/fuzztarget") ("external-symbols" "secp256k1-sys/external-symbols") ("endomorphism" "secp256k1-sys/endomorphism") ("default" "std"))))))

(define-public crate-secp256k1-0.17.1 (c (n "secp256k1") (v "0.17.1") (d (list (d (n "bitcoin_hashes") (r "^0.7") (d #t) (k 2)) (d (n "rand") (r "^0.6") (o #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "rand_core") (r "^0.4") (d #t) (k 2)) (d (n "secp256k1-sys") (r "^0.1.1") (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "13adrwvgzjcxfxc2084ickvki77ar4zjw7fsn4p8cfs0ihaaijll") (f (quote (("unstable") ("std" "secp256k1-sys/std") ("recovery" "secp256k1-sys/recovery") ("rand-std" "rand/std") ("lowmemory" "secp256k1-sys/lowmemory") ("fuzztarget" "secp256k1-sys/fuzztarget") ("external-symbols" "secp256k1-sys/external-symbols") ("endomorphism" "secp256k1-sys/endomorphism") ("default" "std"))))))

(define-public crate-secp256k1-0.17.2 (c (n "secp256k1") (v "0.17.2") (d (list (d (n "bitcoin_hashes") (r "^0.7") (d #t) (k 2)) (d (n "rand") (r "^0.6") (o #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "rand_core") (r "^0.4") (d #t) (k 2)) (d (n "secp256k1-sys") (r "^0.1.1") (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "0mkhhwscav454d8r7a83rnk0n8kbc0cl86ljwgr6y1njmh3xqci9") (f (quote (("unstable") ("std" "secp256k1-sys/std") ("recovery" "secp256k1-sys/recovery") ("rand-std" "rand/std") ("lowmemory" "secp256k1-sys/lowmemory") ("fuzztarget" "secp256k1-sys/fuzztarget") ("external-symbols" "secp256k1-sys/external-symbols") ("endomorphism" "secp256k1-sys/endomorphism") ("default" "std"))))))

(define-public crate-secp256k1-0.18.0 (c (n "secp256k1") (v "0.18.0") (d (list (d (n "bitcoin_hashes") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.7") (d #t) (k 2)) (d (n "rand") (r "^0.6") (o #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "rand") (r "^0.6") (f (quote ("wasm-bindgen"))) (d #t) (t "wasm32-unknown-unknown") (k 2)) (d (n "rand_core") (r "^0.4") (d #t) (k 2)) (d (n "secp256k1-sys") (r "^0.2.0") (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "wasm32-unknown-unknown") (k 2)))) (h "06k1j7m49cawc4j42fqjqafdzb8xg4gi7jncnb2adpz9yi756gwg") (f (quote (("unstable" "recovery" "rand-std") ("std" "secp256k1-sys/std") ("recovery" "secp256k1-sys/recovery") ("rand-std" "rand/std") ("lowmemory" "secp256k1-sys/lowmemory") ("global-context" "std" "rand") ("fuzztarget" "secp256k1-sys/fuzztarget") ("external-symbols" "secp256k1-sys/external-symbols") ("endomorphism" "secp256k1-sys/endomorphism") ("default" "std"))))))

(define-public crate-secp256k1-0.19.0 (c (n "secp256k1") (v "0.19.0") (d (list (d (n "bitcoin_hashes") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.6") (o #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "rand") (r "^0.6") (f (quote ("wasm-bindgen"))) (d #t) (t "wasm32-unknown-unknown") (k 2)) (d (n "rand_core") (r "^0.4") (d #t) (k 2)) (d (n "secp256k1-sys") (r "^0.3.0") (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "wasm32-unknown-unknown") (k 2)))) (h "1yydfkm3ccqqfn2kp6vm56x7ikjkcfjpjmbvpc7sqwrcq8l985y6") (f (quote (("unstable" "recovery" "rand-std") ("std" "secp256k1-sys/std") ("recovery" "secp256k1-sys/recovery") ("rand-std" "rand/std") ("lowmemory" "secp256k1-sys/lowmemory") ("global-context" "std" "rand") ("fuzztarget" "secp256k1-sys/fuzztarget") ("external-symbols" "secp256k1-sys/external-symbols") ("endomorphism" "secp256k1-sys/endomorphism") ("default" "std"))))))

(define-public crate-secp256k1-0.20.0 (c (n "secp256k1") (v "0.20.0") (d (list (d (n "bitcoin_hashes") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.6") (o #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "rand") (r "^0.6") (f (quote ("wasm-bindgen"))) (d #t) (t "wasm32-unknown-unknown") (k 2)) (d (n "rand_core") (r "^0.4") (d #t) (k 2)) (d (n "secp256k1-sys") (r "^0.4.0") (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "wasm32-unknown-unknown") (k 2)))) (h "0y1jfn2wia14r67dvsgv5zvjic1lsgzif33sl1ycm3xwwpn0xzgw") (f (quote (("unstable" "recovery" "rand-std") ("std" "secp256k1-sys/std") ("recovery" "secp256k1-sys/recovery") ("rand-std" "rand/std") ("lowmemory" "secp256k1-sys/lowmemory") ("global-context" "std" "rand-std") ("default" "std"))))))

(define-public crate-secp256k1-0.20.1 (c (n "secp256k1") (v "0.20.1") (d (list (d (n "bitcoin_hashes") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.6") (o #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "rand") (r "^0.6") (f (quote ("wasm-bindgen"))) (d #t) (t "wasm32-unknown-unknown") (k 2)) (d (n "rand_core") (r "^0.4") (d #t) (k 2)) (d (n "secp256k1-sys") (r "^0.4.0") (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "wasm32-unknown-unknown") (k 2)))) (h "0l74spw6v75q7inpcl97xjlf2ai7ykp3852ryw50q9lg0m7i2fvk") (f (quote (("unstable" "recovery" "rand-std") ("std" "secp256k1-sys/std") ("recovery" "secp256k1-sys/recovery") ("rand-std" "rand/std") ("lowmemory" "secp256k1-sys/lowmemory") ("global-context" "std" "rand-std") ("default" "std"))))))

(define-public crate-secp256k1-0.20.2 (c (n "secp256k1") (v "0.20.2") (d (list (d (n "bitcoin_hashes") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.6") (o #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "rand") (r "^0.6") (f (quote ("wasm-bindgen"))) (d #t) (t "wasm32-unknown-unknown") (k 2)) (d (n "rand_core") (r "^0.4") (d #t) (k 2)) (d (n "secp256k1-sys") (r "^0.4.0") (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "wasm32-unknown-unknown") (k 2)))) (h "0n52ym2l29slk12nn94b7ak79fgxfryd1hygdnzaav7jqvyp0l7f") (f (quote (("unstable" "recovery" "rand-std") ("std" "secp256k1-sys/std") ("recovery" "secp256k1-sys/recovery") ("rand-std" "rand/std") ("lowmemory" "secp256k1-sys/lowmemory") ("global-context" "std" "rand-std") ("default" "std"))))))

(define-public crate-secp256k1-0.20.3 (c (n "secp256k1") (v "0.20.3") (d (list (d (n "bitcoin_hashes") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.6") (o #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "rand") (r "^0.6") (f (quote ("wasm-bindgen"))) (d #t) (t "wasm32-unknown-unknown") (k 2)) (d (n "rand_core") (r "^0.4") (d #t) (k 2)) (d (n "secp256k1-sys") (r "^0.4.0") (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "wasm32-unknown-unknown") (k 2)))) (h "02kxhfgy85zg7w2yyvnzrr7myk1mckvg99z6pbazxl1nwvm3rl4p") (f (quote (("unstable" "recovery" "rand-std") ("std" "secp256k1-sys/std") ("recovery" "secp256k1-sys/recovery") ("rand-std" "rand/std") ("lowmemory" "secp256k1-sys/lowmemory") ("global-context-less-secure") ("global-context" "std" "rand-std" "global-context-less-secure") ("default" "std") ("alloc"))))))

(define-public crate-secp256k1-0.21.0 (c (n "secp256k1") (v "0.21.0") (d (list (d (n "bitcoin_hashes") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.10") (d #t) (k 2)) (d (n "rand") (r "^0.6") (o #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "rand") (r "^0.6") (f (quote ("wasm-bindgen"))) (d #t) (t "wasm32-unknown-unknown") (k 2)) (d (n "rand_core") (r "^0.4") (d #t) (k 2)) (d (n "secp256k1-sys") (r "^0.4.1") (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "wasm32-unknown-unknown") (k 2)))) (h "0appwa0srvv7x5dh37829m0a75fyjf3kwm61v8ndvyj67gl1frh4") (f (quote (("unstable" "recovery" "rand-std") ("std" "secp256k1-sys/std") ("recovery" "secp256k1-sys/recovery") ("rand-std" "rand/std") ("lowmemory" "secp256k1-sys/lowmemory") ("global-context-less-secure") ("global-context" "std" "rand-std" "global-context-less-secure") ("default" "std") ("alloc")))) (y #t)))

(define-public crate-secp256k1-0.21.1 (c (n "secp256k1") (v "0.21.1") (d (list (d (n "bitcoin_hashes") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.10") (d #t) (k 2)) (d (n "rand") (r "^0.6") (o #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "rand") (r "^0.6") (f (quote ("wasm-bindgen"))) (d #t) (t "wasm32-unknown-unknown") (k 2)) (d (n "rand_core") (r "^0.4") (d #t) (k 2)) (d (n "secp256k1-sys") (r "^0.4.2") (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "wasm32-unknown-unknown") (k 2)))) (h "0pwr59p5gwzpijnql0a68chgjx7gjmhjrx1ja555byb19r8sz1fc") (f (quote (("unstable" "recovery" "rand-std") ("std" "secp256k1-sys/std") ("recovery" "secp256k1-sys/recovery") ("rand-std" "rand/std") ("lowmemory" "secp256k1-sys/lowmemory") ("global-context-less-secure") ("global-context" "std" "rand-std" "global-context-less-secure") ("default" "std") ("alloc"))))))

(define-public crate-secp256k1-0.21.2 (c (n "secp256k1") (v "0.21.2") (d (list (d (n "bitcoin_hashes") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.10") (d #t) (k 2)) (d (n "rand") (r "^0.6") (o #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "rand") (r "^0.6") (f (quote ("wasm-bindgen"))) (d #t) (t "wasm32-unknown-unknown") (k 2)) (d (n "rand_core") (r "^0.4") (d #t) (k 2)) (d (n "secp256k1-sys") (r "^0.4.2") (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "wasm32-unknown-unknown") (k 2)))) (h "09gia5hjf1hb9jgac9nzq0s0ijbsdjfflh40xw8z08avgl0q6y5b") (f (quote (("unstable" "recovery" "rand-std") ("std" "secp256k1-sys/std") ("recovery" "secp256k1-sys/recovery") ("rand-std" "rand/std") ("lowmemory" "secp256k1-sys/lowmemory") ("global-context-less-secure") ("global-context" "std" "rand-std" "global-context-less-secure") ("default" "std") ("alloc"))))))

(define-public crate-secp256k1-0.21.3 (c (n "secp256k1") (v "0.21.3") (d (list (d (n "bitcoin_hashes") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.10") (d #t) (k 2)) (d (n "rand") (r "^0.6") (o #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "rand") (r "^0.6") (f (quote ("wasm-bindgen"))) (d #t) (t "wasm32-unknown-unknown") (k 2)) (d (n "rand_core") (r "^0.4") (d #t) (k 2)) (d (n "secp256k1-sys") (r "^0.4.2") (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "wasm32-unknown-unknown") (k 2)))) (h "0q0jfmnshx6xkmhb4c89s752n7ql6ik8vqj33vsh0pswfgqychlw") (f (quote (("unstable" "recovery" "rand-std") ("std" "secp256k1-sys/std") ("recovery" "secp256k1-sys/recovery") ("rand-std" "rand/std") ("lowmemory" "secp256k1-sys/lowmemory") ("global-context-less-secure") ("global-context" "std") ("default" "std") ("alloc"))))))

(define-public crate-secp256k1-0.22.0 (c (n "secp256k1") (v "0.22.0") (d (list (d (n "bitcoin_hashes") (r "^0.10") (o #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.10") (d #t) (k 2)) (d (n "rand") (r "^0.6") (o #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "rand") (r "^0.6") (f (quote ("wasm-bindgen"))) (d #t) (t "wasm32-unknown-unknown") (k 2)) (d (n "rand_core") (r "^0.4") (d #t) (k 2)) (d (n "secp256k1-sys") (r "^0.5.0") (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "wasm32-unknown-unknown") (k 2)))) (h "1m71bkq0r7wsxwpg8q72bqgkvyh9ra808h8vrvb7iixqvdhh4gb1") (f (quote (("unstable" "recovery" "rand-std") ("std" "secp256k1-sys/std") ("recovery" "secp256k1-sys/recovery") ("rand-std" "rand/std") ("lowmemory" "secp256k1-sys/lowmemory") ("global-context-less-secure") ("global-context" "std") ("default" "std") ("bitcoin-hashes-std" "bitcoin_hashes/std") ("alloc"))))))

(define-public crate-secp256k1-0.22.1 (c (n "secp256k1") (v "0.22.1") (d (list (d (n "bitcoin_hashes") (r "^0.10") (o #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.10") (d #t) (k 2)) (d (n "rand") (r "^0.6") (o #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "rand") (r "^0.6") (f (quote ("wasm-bindgen"))) (d #t) (t "wasm32-unknown-unknown") (k 2)) (d (n "rand_core") (r "^0.4") (d #t) (k 2)) (d (n "secp256k1-sys") (r "^0.5.0") (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "wasm32-unknown-unknown") (k 2)))) (h "1c4x14al8l5qh27825b3zvfsic56hlyjz3pnjn1sw0wn6d2p7516") (f (quote (("unstable" "recovery" "rand-std") ("std" "secp256k1-sys/std") ("recovery" "secp256k1-sys/recovery") ("rand-std" "rand/std") ("lowmemory" "secp256k1-sys/lowmemory") ("global-context-less-secure") ("global-context" "std") ("default" "std") ("bitcoin-hashes-std" "bitcoin_hashes/std") ("alloc")))) (y #t)))

(define-public crate-secp256k1-0.23.0 (c (n "secp256k1") (v "0.23.0") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "bitcoin_hashes") (r "^0.10") (o #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.10") (d #t) (k 2)) (d (n "cbor") (r "^0.4.1") (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "wasm32-unknown-unknown") (k 2)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 2)) (d (n "secp256k1-sys") (r "^0.6.0") (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "wasm32-unknown-unknown") (k 2)))) (h "1ygj5spbz2hpcv5jr020bilikkkar2d1mlb04s46xbj4xnpcrxv1") (f (quote (("unstable" "recovery" "rand-std") ("std" "alloc" "secp256k1-sys/std") ("recovery" "secp256k1-sys/recovery") ("rand-std" "rand/std") ("lowmemory" "secp256k1-sys/lowmemory") ("global-context-less-secure" "global-context") ("global-context" "std") ("default" "std") ("bitcoin-hashes-std" "bitcoin_hashes/std") ("alloc" "secp256k1-sys/alloc"))))))

(define-public crate-secp256k1-0.23.1 (c (n "secp256k1") (v "0.23.1") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "bitcoin_hashes") (r "^0.10") (o #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.10") (d #t) (k 2)) (d (n "cbor") (r "^0.4.1") (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "wasm32-unknown-unknown") (k 2)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 2)) (d (n "secp256k1-sys") (r "^0.6.0") (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "wasm32-unknown-unknown") (k 2)))) (h "1q3jhxh5p29ajagvyd39v0za47h6s6piwc11y6cyqivzz6f0lfa8") (f (quote (("unstable" "recovery" "rand-std") ("std" "alloc" "secp256k1-sys/std") ("recovery" "secp256k1-sys/recovery") ("rand-std" "rand/std" "rand/std_rng") ("lowmemory" "secp256k1-sys/lowmemory") ("global-context-less-secure" "global-context") ("global-context" "std") ("default" "std") ("bitcoin-hashes-std" "bitcoin_hashes/std") ("alloc" "secp256k1-sys/alloc"))))))

(define-public crate-secp256k1-0.23.2 (c (n "secp256k1") (v "0.23.2") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "bitcoin_hashes") (r "^0.10") (o #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.10") (d #t) (k 2)) (d (n "cbor") (r "^0.4.1") (d #t) (t "cfg(target_arch = \"x86_64\")") (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "wasm32-unknown-unknown") (k 2)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 2)) (d (n "secp256k1-sys") (r "^0.6.0") (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "wasm32-unknown-unknown") (k 2)))) (h "1q14fwd214wrk99mmqw2n5dxb97krwpxvignbc5dmsrqzridna2k") (f (quote (("unstable" "recovery" "rand-std") ("std" "alloc" "secp256k1-sys/std") ("recovery" "secp256k1-sys/recovery") ("rand-std" "rand/std" "rand/std_rng") ("lowmemory" "secp256k1-sys/lowmemory") ("global-context-less-secure" "global-context") ("global-context" "std") ("default" "std") ("bitcoin-hashes-std" "bitcoin_hashes/std") ("alloc" "secp256k1-sys/alloc"))))))

(define-public crate-secp256k1-0.23.3 (c (n "secp256k1") (v "0.23.3") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "bitcoin_hashes") (r "^0.10") (o #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.10") (d #t) (k 2)) (d (n "cbor") (r "^0.4.1") (d #t) (t "cfg(target_arch = \"x86_64\")") (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "wasm32-unknown-unknown") (k 2)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 2)) (d (n "secp256k1-sys") (r "^0.6.0") (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "wasm32-unknown-unknown") (k 2)))) (h "1823nxgm1bkwhxgby4bwx987y1kc08gc2wc42qg9mzycwd3lxjvp") (f (quote (("unstable" "recovery" "rand-std") ("std" "alloc" "secp256k1-sys/std") ("recovery" "secp256k1-sys/recovery") ("rand-std" "rand/std" "rand/std_rng") ("lowmemory" "secp256k1-sys/lowmemory") ("global-context-less-secure" "global-context") ("global-context" "std") ("default" "std") ("bitcoin-hashes-std" "bitcoin_hashes/std") ("alloc" "secp256k1-sys/alloc"))))))

(define-public crate-secp256k1-0.23.4 (c (n "secp256k1") (v "0.23.4") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "bitcoin_hashes") (r "^0.10") (o #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.10") (d #t) (k 2)) (d (n "cbor") (r "^0.4.1") (d #t) (t "cfg(target_arch = \"x86_64\")") (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "wasm32-unknown-unknown") (k 2)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 2)) (d (n "secp256k1-sys") (r "^0.6.0") (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "wasm32-unknown-unknown") (k 2)))) (h "03gr0dm8l21vs4px565mbz132fhiakjyl97k1xagpqfr7ljp7kkf") (f (quote (("unstable" "recovery" "rand-std") ("std" "alloc" "secp256k1-sys/std") ("recovery" "secp256k1-sys/recovery") ("rand-std" "rand/std" "rand/std_rng") ("lowmemory" "secp256k1-sys/lowmemory") ("global-context-less-secure" "global-context") ("global-context" "std") ("default" "std") ("bitcoin-hashes-std" "bitcoin_hashes/std") ("alloc" "secp256k1-sys/alloc")))) (y #t)))

(define-public crate-secp256k1-0.24.0 (c (n "secp256k1") (v "0.24.0") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "bitcoin_hashes") (r "^0.11") (o #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.11") (d #t) (k 2)) (d (n "cbor") (r "^0.4.1") (d #t) (t "cfg(target_arch = \"x86_64\")") (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "wasm32-unknown-unknown") (k 2)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 2)) (d (n "secp256k1-sys") (r "^0.6.0") (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "wasm32-unknown-unknown") (k 2)))) (h "1zxf8fcs3mclw4s0dkaqqr99rnhya5q0vkn7c1p66cpv7w5rlr5p") (f (quote (("std" "alloc" "secp256k1-sys/std") ("recovery" "secp256k1-sys/recovery") ("rand-std" "rand/std" "rand/std_rng") ("lowmemory" "secp256k1-sys/lowmemory") ("global-context-less-secure" "global-context") ("global-context" "std") ("default" "std") ("bitcoin-hashes-std" "bitcoin_hashes/std") ("alloc" "secp256k1-sys/alloc"))))))

(define-public crate-secp256k1-0.24.1 (c (n "secp256k1") (v "0.24.1") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "bitcoin_hashes") (r "^0.11") (o #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.11") (d #t) (k 2)) (d (n "cbor") (r "^0.4.1") (d #t) (t "cfg(target_arch = \"x86_64\")") (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "wasm32-unknown-unknown") (k 2)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 2)) (d (n "secp256k1-sys") (r "^0.6.0") (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "wasm32-unknown-unknown") (k 2)))) (h "0r29w42hffrb1f3hxm8zk3llp5jsfgnpr2psyag4x5b0sh4xqmgz") (f (quote (("std" "alloc" "secp256k1-sys/std") ("recovery" "secp256k1-sys/recovery") ("rand-std" "rand/std" "rand/std_rng") ("lowmemory" "secp256k1-sys/lowmemory") ("global-context-less-secure" "global-context") ("global-context" "std") ("default" "std") ("bitcoin-hashes-std" "bitcoin_hashes/std") ("alloc" "secp256k1-sys/alloc")))) (y #t)))

(define-public crate-secp256k1-0.22.2 (c (n "secp256k1") (v "0.22.2") (d (list (d (n "bitcoin_hashes") (r "^0.10") (o #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.10") (d #t) (k 2)) (d (n "rand") (r "^0.6") (o #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "rand") (r "^0.6") (f (quote ("wasm-bindgen"))) (d #t) (t "wasm32-unknown-unknown") (k 2)) (d (n "rand_core") (r "^0.4") (d #t) (k 2)) (d (n "secp256k1-sys") (r "^0.5.0") (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "wasm32-unknown-unknown") (k 2)))) (h "0albfqrpqjqnvdffs79lglngmag5m3y54kq3mh4hgj3108344mi9") (f (quote (("unstable" "recovery" "rand-std") ("std" "secp256k1-sys/std") ("recovery" "secp256k1-sys/recovery") ("rand-std" "rand/std") ("lowmemory" "secp256k1-sys/lowmemory") ("global-context-less-secure") ("global-context" "std") ("default" "std") ("bitcoin-hashes-std" "bitcoin_hashes/std") ("alloc"))))))

(define-public crate-secp256k1-0.23.5 (c (n "secp256k1") (v "0.23.5") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "bitcoin_hashes") (r "^0.10") (o #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.10") (d #t) (k 2)) (d (n "cbor") (r "^0.4.1") (d #t) (t "cfg(target_arch = \"x86_64\")") (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "wasm32-unknown-unknown") (k 2)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 2)) (d (n "secp256k1-sys") (r "^0.6.0") (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "wasm32-unknown-unknown") (k 2)))) (h "0clgzjrbil14fg9vqsfjagbwwvsxy7hwh7lpl40xhy9ck92mxay6") (f (quote (("unstable" "recovery" "rand-std") ("std" "alloc" "secp256k1-sys/std") ("recovery" "secp256k1-sys/recovery") ("rand-std" "rand/std" "rand/std_rng") ("lowmemory" "secp256k1-sys/lowmemory") ("global-context-less-secure" "global-context") ("global-context" "std") ("default" "std") ("bitcoin-hashes-std" "bitcoin_hashes/std") ("alloc" "secp256k1-sys/alloc"))))))

(define-public crate-secp256k1-0.24.2 (c (n "secp256k1") (v "0.24.2") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "bitcoin_hashes") (r "^0.11") (o #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.11") (d #t) (k 2)) (d (n "cbor") (r "^0.4.1") (d #t) (t "cfg(target_arch = \"x86_64\")") (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "wasm32-unknown-unknown") (k 2)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 2)) (d (n "secp256k1-sys") (r "^0.6.0") (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "wasm32-unknown-unknown") (k 2)))) (h "1hrpl3m51mvc2qwn159qa33li4cb2qrrrxq1shz518z3h7yjylfr") (f (quote (("std" "alloc" "secp256k1-sys/std") ("recovery" "secp256k1-sys/recovery") ("rand-std" "rand/std" "rand/std_rng") ("lowmemory" "secp256k1-sys/lowmemory") ("global-context-less-secure" "global-context") ("global-context" "std") ("default" "std") ("bitcoin-hashes-std" "bitcoin_hashes/std") ("alloc" "secp256k1-sys/alloc"))))))

(define-public crate-secp256k1-0.25.0 (c (n "secp256k1") (v "0.25.0") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "bitcoin_hashes") (r "^0.11") (o #t) (k 0)) (d (n "cbor") (r "^0.4.1") (d #t) (t "cfg(target_arch = \"x86_64\")") (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "wasm32-unknown-unknown") (k 2)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 2)) (d (n "secp256k1-sys") (r "^0.7.0") (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "wasm32-unknown-unknown") (k 2)))) (h "1a7jbn83c01j187sgah8sm253mydrm3qjwblpxvvwy544fvw63sm") (f (quote (("std" "alloc" "secp256k1-sys/std") ("recovery" "secp256k1-sys/recovery") ("rand-std" "std" "rand/std" "rand/std_rng") ("lowmemory" "secp256k1-sys/lowmemory") ("global-context-less-secure" "global-context") ("global-context" "std") ("default" "std") ("bitcoin-hashes-std" "std" "bitcoin_hashes/std") ("bitcoin-hashes" "bitcoin_hashes") ("alloc" "secp256k1-sys/alloc"))))))

(define-public crate-secp256k1-0.24.3 (c (n "secp256k1") (v "0.24.3") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "bitcoin_hashes") (r "^0.11") (o #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.11") (d #t) (k 2)) (d (n "cbor") (r "^0.4.1") (d #t) (t "cfg(target_arch = \"x86_64\")") (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "wasm32-unknown-unknown") (k 2)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 2)) (d (n "secp256k1-sys") (r "^0.6.0") (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "wasm32-unknown-unknown") (k 2)))) (h "0qlvkjfqagymm4idfnccl6c8q868vzfkicv86llrpvspqp4jj5kb") (f (quote (("std" "alloc" "secp256k1-sys/std") ("recovery" "secp256k1-sys/recovery") ("rand-std" "rand" "rand/std" "rand/std_rng") ("lowmemory" "secp256k1-sys/lowmemory") ("global-context-less-secure" "global-context") ("global-context" "std") ("default" "std") ("bitcoin-hashes-std" "bitcoin_hashes/std") ("alloc" "secp256k1-sys/alloc"))))))

(define-public crate-secp256k1-0.26.0 (c (n "secp256k1") (v "0.26.0") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "bitcoin_hashes") (r "^0.11") (o #t) (k 0)) (d (n "cbor") (r "^0.4.1") (d #t) (t "cfg(target_arch = \"x86_64\")") (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "wasm32-unknown-unknown") (k 2)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 2)) (d (n "secp256k1-sys") (r "^0.8.0") (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "wasm32-unknown-unknown") (k 2)))) (h "152qlrpw07pqqimyxwh2jp7bjcls37x71zchqicl5q9swdgs6921") (f (quote (("std" "alloc" "secp256k1-sys/std") ("recovery" "secp256k1-sys/recovery") ("rand-std" "std" "rand" "rand/std" "rand/std_rng") ("lowmemory" "secp256k1-sys/lowmemory") ("global-context-less-secure" "global-context") ("global-context" "std") ("default" "std") ("bitcoin-hashes-std" "std" "bitcoin_hashes" "bitcoin_hashes/std") ("bitcoin-hashes" "bitcoin_hashes") ("alloc" "secp256k1-sys/alloc"))))))

(define-public crate-secp256k1-0.27.0 (c (n "secp256k1") (v "0.27.0") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "bitcoin_hashes") (r "^0.12") (o #t) (k 0)) (d (n "cbor") (r "^0.4.1") (d #t) (t "cfg(target_arch = \"x86_64\")") (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "wasm32-unknown-unknown") (k 2)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 2)) (d (n "secp256k1-sys") (r "^0.8.1") (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "wasm32-unknown-unknown") (k 2)))) (h "13wwv91qnx8lsyn891q16a6x6h46zz7m5w086pnmfyia5616p695") (f (quote (("std" "alloc" "secp256k1-sys/std") ("recovery" "secp256k1-sys/recovery") ("rand-std" "std" "rand" "rand/std" "rand/std_rng") ("lowmemory" "secp256k1-sys/lowmemory") ("global-context-less-secure" "global-context") ("global-context" "std") ("default" "std") ("bitcoin-hashes-std" "std" "bitcoin_hashes" "bitcoin_hashes/std") ("bitcoin-hashes" "bitcoin_hashes") ("alloc" "secp256k1-sys/alloc"))))))

(define-public crate-secp256k1-0.28.0 (c (n "secp256k1") (v "0.28.0") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "wasm32-unknown-unknown") (k 2)) (d (n "hashes") (r ">=0.12, <=0.13") (o #t) (k 0) (p "bitcoin_hashes")) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 2)) (d (n "secp256k1-sys") (r "^0.9.0") (k 0)) (d (n "serde") (r "^1.0.103") (o #t) (k 0)) (d (n "serde_cbor") (r "^0.10.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.19") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "wasm32-unknown-unknown") (k 2)))) (h "1mfhi6y478da5gkl7lz39va3wnfjmi918x13bb5ixhmqmirs7kia") (f (quote (("std" "alloc" "secp256k1-sys/std") ("recovery" "secp256k1-sys/recovery") ("rand-std" "std" "rand" "rand/std" "rand/std_rng") ("lowmemory" "secp256k1-sys/lowmemory") ("hashes-std" "std" "hashes/std") ("global-context-less-secure" "global-context") ("global-context" "std") ("default" "std") ("alloc" "secp256k1-sys/alloc")))) (y #t)))

(define-public crate-secp256k1-0.28.1 (c (n "secp256k1") (v "0.28.1") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "wasm32-unknown-unknown") (k 2)) (d (n "hashes") (r ">=0.12, <=0.13") (o #t) (k 0) (p "bitcoin_hashes")) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 2)) (d (n "secp256k1-sys") (r "^0.9.2") (k 0)) (d (n "serde") (r "^1.0.103") (o #t) (k 0)) (d (n "serde_cbor") (r "^0.10.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.19") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "wasm32-unknown-unknown") (k 2)))) (h "09vs00bc2j2v354mlnbh3lqa9mv0n7vbr441zda83cxlwdkjaqiz") (f (quote (("std" "alloc" "secp256k1-sys/std") ("recovery" "secp256k1-sys/recovery") ("rand-std" "std" "rand" "rand/std" "rand/std_rng") ("lowmemory" "secp256k1-sys/lowmemory") ("hashes-std" "std" "hashes/std") ("global-context-less-secure" "global-context") ("global-context" "std") ("default" "std") ("alloc" "secp256k1-sys/alloc"))))))

(define-public crate-secp256k1-0.28.2 (c (n "secp256k1") (v "0.28.2") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "wasm32-unknown-unknown") (k 2)) (d (n "hashes") (r ">=0.12, <=0.13") (o #t) (k 0) (p "bitcoin_hashes")) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 2)) (d (n "secp256k1-sys") (r "^0.9.2") (k 0)) (d (n "serde") (r "^1.0.103") (o #t) (k 0)) (d (n "serde_cbor") (r "^0.10.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.19") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "wasm32-unknown-unknown") (k 2)))) (h "041g02yb5m0cf1yy9vhkszji4dq5z9927yx4mqhfmbfd578mjjyj") (f (quote (("std" "alloc" "secp256k1-sys/std") ("recovery" "secp256k1-sys/recovery") ("rand-std" "std" "rand" "rand/std" "rand/std_rng") ("lowmemory" "secp256k1-sys/lowmemory") ("hashes-std" "std" "hashes/std") ("global-context-less-secure" "global-context") ("global-context" "std") ("default" "std") ("alloc" "secp256k1-sys/alloc"))))))

(define-public crate-secp256k1-0.29.0 (c (n "secp256k1") (v "0.29.0") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "wasm32-unknown-unknown") (k 2)) (d (n "hashes") (r ">=0.12, <=0.14") (o #t) (k 0) (p "bitcoin_hashes")) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 2)) (d (n "secp256k1-sys") (r "^0.10.0") (k 0)) (d (n "serde") (r "^1.0.103") (o #t) (k 0)) (d (n "serde_cbor") (r "^0.10.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.19") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "wasm32-unknown-unknown") (k 2)))) (h "1wylhvz3v0i0jyazmbwnin8jbvgsm7ccg89ymygrdx4krzqw030f") (f (quote (("std" "alloc" "secp256k1-sys/std") ("recovery" "secp256k1-sys/recovery") ("rand-std" "std" "rand" "rand/std" "rand/std_rng") ("lowmemory" "secp256k1-sys/lowmemory") ("hashes-std" "std" "hashes/std") ("global-context-less-secure" "global-context") ("global-context" "std") ("default" "std") ("alloc" "secp256k1-sys/alloc")))) (r "1.56.1")))

