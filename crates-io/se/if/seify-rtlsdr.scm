(define-module (crates-io se if seify-rtlsdr) #:use-module (crates-io))

(define-public crate-seify-rtlsdr-0.0.1 (c (n "seify-rtlsdr") (v "0.0.1") (d (list (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 2)) (d (n "ctrlc") (r "^3.2.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "rusb") (r "^0.9") (d #t) (k 0)) (d (n "rusb") (r "^0.9") (d #t) (k 2)) (d (n "stderrlog") (r "^0.5") (d #t) (k 2)))) (h "0x4wp11srkwgq45p52pc54p3lv1nfxz9c5kcyb4wf19v30plgw15") (f (quote (("rtl_sdr_blog") ("default"))))))

(define-public crate-seify-rtlsdr-0.0.2 (c (n "seify-rtlsdr") (v "0.0.2") (d (list (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 2)) (d (n "ctrlc") (r "^3.2.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "rusb") (r "^0.9") (d #t) (k 0)) (d (n "rusb") (r "^0.9") (d #t) (k 2)) (d (n "stderrlog") (r "^0.5") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0wsaq77a4nzfil28p31rj5ckxvpskmn2ii3nvigmkf2xznm13fbr") (f (quote (("rtl_sdr_blog") ("default"))))))

(define-public crate-seify-rtlsdr-0.0.3 (c (n "seify-rtlsdr") (v "0.0.3") (d (list (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 2)) (d (n "ctrlc") (r "^3.2.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "rusb") (r "^0.9") (d #t) (k 0)) (d (n "rusb") (r "^0.9") (d #t) (k 2)) (d (n "stderrlog") (r "^0.5") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "195s9kyl5064n0a5sy1y0hwxdlc7mrmz0jijxvww6gly7l5vnx67") (f (quote (("rtl_sdr_blog") ("default"))))))

