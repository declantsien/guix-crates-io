(define-module (crates-io se rv service_conventions) #:use-module (crates-io))

(define-public crate-service_conventions-0.0.1 (c (n "service_conventions") (v "0.0.1") (d (list (d (n "opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14.0") (f (quote ("grpc-tonic" "http-proto"))) (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21.1") (f (quote ("rt-tokio"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("fmt" "json" "env-filter" "std" "registry"))) (d #t) (k 0)))) (h "1i4dkm5pmcy2d02djnsfxhxndp2bmdzyba8nf5ygbmfqn70i8kf1")))

(define-public crate-service_conventions-0.0.2 (c (n "service_conventions") (v "0.0.2") (d (list (d (n "axum") (r "^0.7.4") (o #t) (d #t) (k 0)) (d (n "maud") (r "^0.26.0") (f (quote ("axum"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (o #t) (d #t) (k 0)) (d (n "openidconnect") (r "^3.4.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.15.0") (f (quote ("grpc-tonic" "http-proto"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.22.1") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tower-cookies") (r "^0.10.0") (f (quote ("signed" "private"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("fmt" "json" "env-filter" "std" "registry"))) (o #t) (d #t) (k 0)))) (h "1x7qw71z26ybxnrfjnid27r32hf6svgzv0r3fq8m79qb90vd045p") (f (quote (("default" "tracing")))) (s 2) (e (quote (("tracing" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:tracing-subscriber" "dep:tracing" "dep:tracing-opentelemetry" "dep:opentelemetry_sdk") ("oidc" "dep:once_cell" "dep:openidconnect" "dep:serde" "dep:serde_json" "dep:maud" "dep:axum" "dep:tower-cookies"))))))

(define-public crate-service_conventions-0.0.3 (c (n "service_conventions") (v "0.0.3") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.7.4") (o #t) (d #t) (k 0)) (d (n "maud") (r "^0.26.0") (f (quote ("axum"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (o #t) (d #t) (k 0)) (d (n "openidconnect") (r "^3.4.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.15.0") (f (quote ("grpc-tonic" "http-proto"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.22.1") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tower-cookies") (r "^0.10.0") (f (quote ("signed" "private"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("fmt" "json" "env-filter" "std" "registry"))) (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (o #t) (d #t) (k 0)))) (h "16pbl53wiy73qznw8z64v6vimvxpcsci8hs8a5xh3mh1davjdczp") (f (quote (("default" "tracing")))) (s 2) (e (quote (("tracing" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:tracing-subscriber" "dep:tracing" "dep:tracing-opentelemetry" "dep:opentelemetry_sdk") ("oidc" "dep:anyhow" "dep:once_cell" "dep:openidconnect" "dep:serde" "dep:serde_json" "dep:maud" "dep:axum" "dep:tower-cookies" "dep:url"))))))

(define-public crate-service_conventions-0.0.4 (c (n "service_conventions") (v "0.0.4") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.7.4") (o #t) (d #t) (k 0)) (d (n "maud") (r "^0.26.0") (f (quote ("axum"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (o #t) (d #t) (k 0)) (d (n "openidconnect") (r "^3.4.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.15.0") (f (quote ("grpc-tonic" "http-proto"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.22.1") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tower-cookies") (r "^0.10.0") (f (quote ("signed" "private"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("fmt" "json" "env-filter" "std" "registry"))) (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (o #t) (d #t) (k 0)))) (h "1144kl4489qjww672vg4lag069hasnhgd1a2nkjq1adg26zb0qi5") (f (quote (("default" "tracing")))) (s 2) (e (quote (("tracing" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:tracing-subscriber" "dep:tracing" "dep:tracing-opentelemetry" "dep:opentelemetry_sdk") ("oidc" "dep:anyhow" "dep:once_cell" "dep:openidconnect" "dep:serde" "dep:serde_json" "dep:maud" "dep:axum" "dep:tower-cookies" "dep:url"))))))

(define-public crate-service_conventions-0.0.5 (c (n "service_conventions") (v "0.0.5") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.7.4") (o #t) (d #t) (k 0)) (d (n "axum-core") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "email_address") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "http") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "maud") (r "^0.26.0") (f (quote ("axum"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (o #t) (d #t) (k 0)) (d (n "openidconnect") (r "^3.4.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.15.0") (f (quote ("grpc-tonic" "http-proto"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.22.1") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tower-cookies") (r "^0.10.0") (f (quote ("signed" "private" "axum-core"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("fmt" "json" "env-filter" "std" "registry"))) (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (o #t) (d #t) (k 0)))) (h "1nx3d5vbd2iz2kpn5axw6k1hslby2yyyxcz9dxbhmmrv45h2jmff") (f (quote (("default" "tracing") ("all" "tracing" "oidc")))) (s 2) (e (quote (("tracing" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:tracing-subscriber" "dep:tracing" "dep:tracing-opentelemetry" "dep:opentelemetry_sdk") ("oidc" "dep:anyhow" "dep:once_cell" "dep:openidconnect" "dep:serde" "dep:serde_json" "dep:maud" "dep:axum" "dep:tower-cookies" "dep:url" "dep:email_address" "dep:http" "dep:async-trait" "dep:axum-core"))))))

(define-public crate-service_conventions-0.0.6 (c (n "service_conventions") (v "0.0.6") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.7.4") (o #t) (d #t) (k 0)) (d (n "axum-core") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "email_address") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "http") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "maud") (r "^0.26.0") (f (quote ("axum"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (o #t) (d #t) (k 0)) (d (n "openidconnect") (r "^3.4.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.15.0") (f (quote ("grpc-tonic" "http-proto"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.22.1") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tower-cookies") (r "^0.10.0") (f (quote ("signed" "private" "axum-core"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("fmt" "json" "env-filter" "std" "registry"))) (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (o #t) (d #t) (k 0)))) (h "0q9hjs5jp9riznvfv5pvfn6mkxbh71h7zxyc844r3q25s0h20kd8") (f (quote (("default" "tracing" "oidc") ("all" "tracing" "oidc")))) (s 2) (e (quote (("tracing" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:tracing-subscriber" "dep:tracing" "dep:tracing-opentelemetry" "dep:opentelemetry_sdk") ("oidc" "dep:anyhow" "dep:once_cell" "dep:openidconnect" "dep:serde" "dep:serde_json" "dep:maud" "dep:axum" "dep:tower-cookies" "dep:url" "dep:email_address" "dep:http" "dep:async-trait" "dep:axum-core"))))))

(define-public crate-service_conventions-0.0.7 (c (n "service_conventions") (v "0.0.7") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.7.4") (o #t) (d #t) (k 0)) (d (n "axum-core") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "email_address") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "http") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "maud") (r "^0.26.0") (f (quote ("axum"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (o #t) (d #t) (k 0)) (d (n "openidconnect") (r "^3.4.0") (f (quote ("accept-rfc3339-timestamps"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.15.0") (f (quote ("grpc-tonic" "http-proto"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.22.1") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tower-cookies") (r "^0.10.0") (f (quote ("signed" "private" "axum-core"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("fmt" "json" "env-filter" "std" "registry"))) (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (o #t) (d #t) (k 0)))) (h "0kd1xq1mrkq1sjxhvjphbi4l0yd4xyclz76zygcflv2diq0r1m2x") (f (quote (("default" "tracing" "oidc") ("all" "tracing" "oidc")))) (s 2) (e (quote (("tracing" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:tracing-subscriber" "dep:tracing" "dep:tracing-opentelemetry" "dep:opentelemetry_sdk") ("oidc" "dep:anyhow" "dep:once_cell" "dep:openidconnect" "dep:serde" "dep:serde_json" "dep:maud" "dep:axum" "dep:tower-cookies" "dep:url" "dep:email_address" "dep:http" "dep:async-trait" "dep:axum-core"))))))

(define-public crate-service_conventions-0.0.8 (c (n "service_conventions") (v "0.0.8") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.7.4") (o #t) (d #t) (k 0)) (d (n "axum-core") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "email_address") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "http") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "maud") (r "^0.26.0") (f (quote ("axum"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (o #t) (d #t) (k 0)) (d (n "openidconnect") (r "^3.4.0") (f (quote ("accept-rfc3339-timestamps"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.15.0") (f (quote ("grpc-tonic" "http-proto"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.22.1") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tower-cookies") (r "^0.10.0") (f (quote ("signed" "private" "axum-core"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("fmt" "json" "env-filter" "std" "registry"))) (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (o #t) (d #t) (k 0)))) (h "11pc19z14rlqf6zzyba5i7kgxb8v5607ac047incpbxnysll2lld") (f (quote (("default" "tracing" "oidc") ("all" "tracing" "oidc")))) (s 2) (e (quote (("tracing" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:tracing-subscriber" "dep:tracing" "dep:tracing-opentelemetry" "dep:opentelemetry_sdk") ("oidc" "dep:anyhow" "dep:once_cell" "dep:openidconnect" "dep:serde" "dep:serde_json" "dep:maud" "dep:axum" "dep:tower-cookies" "dep:url" "dep:email_address" "dep:http" "dep:async-trait" "dep:axum-core"))))))

(define-public crate-service_conventions-0.0.9 (c (n "service_conventions") (v "0.0.9") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.7.5") (o #t) (d #t) (k 0)) (d (n "axum-core") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "email_address") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "http") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "maud") (r "^0.26.0") (f (quote ("axum"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (o #t) (d #t) (k 0)) (d (n "openidconnect") (r "^3.5.0") (f (quote ("accept-rfc3339-timestamps"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.15.0") (f (quote ("trace" "grpc-tonic" "http-proto" "reqwest-rustls"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.22.1") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tower-cookies") (r "^0.10.0") (f (quote ("signed" "private" "axum-core"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("fmt" "json" "env-filter" "std" "registry"))) (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (o #t) (d #t) (k 0)))) (h "1dmssmw266k0my8yw1zf7nh9wizflpq8ahc9wgfqxhdsxim6nv8g") (f (quote (("default" "tracing" "oidc") ("all" "tracing" "oidc")))) (s 2) (e (quote (("tracing" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:tracing-subscriber" "dep:tracing" "dep:tracing-opentelemetry" "dep:opentelemetry_sdk") ("oidc" "dep:anyhow" "dep:once_cell" "dep:openidconnect" "dep:serde" "dep:serde_json" "dep:maud" "dep:axum" "dep:tower-cookies" "dep:url" "dep:email_address" "dep:http" "dep:async-trait" "dep:axum-core"))))))

(define-public crate-service_conventions-0.0.10 (c (n "service_conventions") (v "0.0.10") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.7.5") (o #t) (d #t) (k 0)) (d (n "axum-core") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "email_address") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "http") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "maud") (r "^0.26.0") (f (quote ("axum"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (o #t) (d #t) (k 0)) (d (n "openidconnect") (r "^3.5.0") (f (quote ("accept-rfc3339-timestamps"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.15.0") (f (quote ("trace" "grpc-tonic" "http-proto" "reqwest-rustls" "tls"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.22.1") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tower-cookies") (r "^0.10.0") (f (quote ("signed" "private" "axum-core"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("fmt" "json" "env-filter" "std" "registry"))) (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (o #t) (d #t) (k 0)))) (h "18sg9k8prdnwvsl45ny5ii1z9m3iw9hgb3433s9y9mlqc2wbqw7k") (f (quote (("default" "tracing" "oidc") ("all" "tracing" "oidc")))) (s 2) (e (quote (("tracing" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:tracing-subscriber" "dep:tracing" "dep:tracing-opentelemetry" "dep:opentelemetry_sdk") ("oidc" "dep:anyhow" "dep:once_cell" "dep:openidconnect" "dep:serde" "dep:serde_json" "dep:maud" "dep:axum" "dep:tower-cookies" "dep:url" "dep:email_address" "dep:http" "dep:async-trait" "dep:axum-core"))))))

(define-public crate-service_conventions-0.0.11 (c (n "service_conventions") (v "0.0.11") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.7.5") (o #t) (d #t) (k 0)) (d (n "axum-core") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "email_address") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "http") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "maud") (r "^0.26.0") (f (quote ("axum"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (o #t) (d #t) (k 0)) (d (n "openidconnect") (r "^3.5.0") (f (quote ("accept-rfc3339-timestamps"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.15.0") (f (quote ("trace" "grpc-tonic" "http-proto" "reqwest-rustls" "tls" "tls-roots"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.22.1") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tower-cookies") (r "^0.10.0") (f (quote ("signed" "private" "axum-core"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("fmt" "json" "env-filter" "std" "registry"))) (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (o #t) (d #t) (k 0)))) (h "0k428zyip3cppjv2r31k6kxjhc6rf7ny6b8lg5pls3yk08kj60vj") (f (quote (("default" "tracing" "oidc") ("all" "tracing" "oidc")))) (s 2) (e (quote (("tracing" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:tracing-subscriber" "dep:tracing" "dep:tracing-opentelemetry" "dep:opentelemetry_sdk") ("oidc" "dep:anyhow" "dep:once_cell" "dep:openidconnect" "dep:serde" "dep:serde_json" "dep:maud" "dep:axum" "dep:tower-cookies" "dep:url" "dep:email_address" "dep:http" "dep:async-trait" "dep:axum-core"))))))

(define-public crate-service_conventions-0.0.12 (c (n "service_conventions") (v "0.0.12") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.7.5") (o #t) (d #t) (k 0)) (d (n "axum-core") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "email_address") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "http") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "maud") (r "^0.26.0") (f (quote ("axum"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (o #t) (d #t) (k 0)) (d (n "openidconnect") (r "^3.5.0") (f (quote ("accept-rfc3339-timestamps"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.15.0") (f (quote ("trace" "grpc-tonic" "http-proto" "reqwest-rustls" "tls" "tls-roots"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.22.1") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tower-cookies") (r "^0.10.0") (f (quote ("signed" "private" "axum-core"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("fmt" "json" "env-filter" "std" "registry"))) (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (o #t) (d #t) (k 0)))) (h "1ipgjds2x2qbdk3wjhn1mvgq7yrr4ax5ydzi1zrqbgwg0wrd4z7l") (f (quote (("default" "tracing" "oidc") ("all" "tracing" "oidc")))) (s 2) (e (quote (("tracing" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:tracing-subscriber" "dep:tracing" "dep:tracing-opentelemetry" "dep:opentelemetry_sdk") ("oidc" "dep:anyhow" "dep:once_cell" "dep:openidconnect" "dep:serde" "dep:serde_json" "dep:maud" "dep:axum" "dep:tower-cookies" "dep:url" "dep:email_address" "dep:http" "dep:async-trait" "dep:axum-core"))))))

(define-public crate-service_conventions-0.0.13 (c (n "service_conventions") (v "0.0.13") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.7.5") (o #t) (d #t) (k 0)) (d (n "axum-core") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "email_address") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "http") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "maud") (r "^0.26.0") (f (quote ("axum"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (o #t) (d #t) (k 0)) (d (n "openidconnect") (r "^3.5.0") (f (quote ("accept-rfc3339-timestamps"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.15.0") (f (quote ("trace" "grpc-tonic" "http-proto" "reqwest-rustls" "tls" "tls-roots"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.22.1") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tower-cookies") (r "^0.10.0") (f (quote ("signed" "private" "axum-core"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("fmt" "json" "env-filter" "std" "registry"))) (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (o #t) (d #t) (k 0)))) (h "1ms3qm8b3yql11ldkwixa992h5gy0y8lr31sv8h5lkq6vri1nyn5") (f (quote (("default" "tracing" "oidc") ("all" "tracing" "oidc")))) (s 2) (e (quote (("tracing" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:tracing-subscriber" "dep:tracing" "dep:tracing-opentelemetry" "dep:opentelemetry_sdk") ("oidc" "dep:anyhow" "dep:once_cell" "dep:openidconnect" "dep:serde" "dep:serde_json" "dep:maud" "dep:axum" "dep:tower-cookies" "dep:url" "dep:email_address" "dep:http" "dep:async-trait" "dep:axum-core"))))))

(define-public crate-service_conventions-0.0.14 (c (n "service_conventions") (v "0.0.14") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.7.5") (o #t) (d #t) (k 0)) (d (n "axum-core") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "email_address") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "http") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "maud") (r "^0.26.0") (f (quote ("axum"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (o #t) (d #t) (k 0)) (d (n "openidconnect") (r "^3.5.0") (f (quote ("accept-rfc3339-timestamps"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.15.0") (f (quote ("trace" "grpc-tonic" "http-proto" "reqwest-rustls" "tls" "tls-roots"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.22.1") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tower-cookies") (r "^0.10.0") (f (quote ("signed" "private" "axum-core"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("fmt" "json" "env-filter" "std" "registry"))) (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (o #t) (d #t) (k 0)))) (h "0alhwayyac0w4hj93kkhspjyk25cq0mb6his8vywiqwj02cn2jiz") (f (quote (("default" "tracing" "oidc") ("all" "tracing" "oidc")))) (s 2) (e (quote (("tracing" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:tracing-subscriber" "dep:tracing" "dep:tracing-opentelemetry" "dep:opentelemetry_sdk") ("oidc" "dep:anyhow" "dep:once_cell" "dep:openidconnect" "dep:serde" "dep:serde_json" "dep:maud" "dep:axum" "dep:tower-cookies" "dep:url" "dep:email_address" "dep:http" "dep:async-trait" "dep:axum-core"))))))

(define-public crate-service_conventions-0.0.15 (c (n "service_conventions") (v "0.0.15") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.7.5") (o #t) (d #t) (k 0)) (d (n "axum-core") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "email_address") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "http") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "maud") (r "^0.26.0") (f (quote ("axum"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (o #t) (d #t) (k 0)) (d (n "openidconnect") (r "^3.5.0") (f (quote ("accept-rfc3339-timestamps"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.15.0") (f (quote ("trace" "grpc-tonic" "http-proto" "reqwest-rustls" "tls" "tls-roots"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.22.1") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "redacted") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tower-cookies") (r "^0.10.0") (f (quote ("signed" "private" "axum-core"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("fmt" "json" "env-filter" "std" "registry"))) (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (o #t) (d #t) (k 0)))) (h "1nfrvzxk6xm36gj6a4jd61qjy6sjlhvw2zhrqcdaw2lqdxs55igs") (f (quote (("default" "tracing" "oidc") ("all" "tracing" "oidc")))) (s 2) (e (quote (("tracing" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:tracing-subscriber" "dep:tracing" "dep:tracing-opentelemetry" "dep:opentelemetry_sdk") ("oidc" "dep:anyhow" "dep:once_cell" "dep:openidconnect" "dep:serde" "dep:serde_json" "dep:maud" "dep:axum" "dep:tower-cookies" "dep:url" "dep:email_address" "dep:http" "dep:async-trait" "dep:axum-core" "dep:redacted"))))))

(define-public crate-service_conventions-0.0.16 (c (n "service_conventions") (v "0.0.16") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.7.5") (o #t) (d #t) (k 0)) (d (n "axum-core") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "email_address") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "http") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "maud") (r "^0.26.0") (f (quote ("axum"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (o #t) (d #t) (k 0)) (d (n "openidconnect") (r "^3.5.0") (f (quote ("accept-rfc3339-timestamps"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.15.0") (f (quote ("trace" "grpc-tonic" "http-proto" "reqwest-rustls" "tls" "tls-roots"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.22.1") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "redacted") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tower-cookies") (r "^0.10.0") (f (quote ("signed" "private" "axum-core"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("fmt" "json" "env-filter" "std" "registry"))) (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (o #t) (d #t) (k 0)))) (h "0wf4ba7pgylb3x7ya40fd855wdn5jx979dpyirr5iyq613b0f4vs") (f (quote (("default" "tracing" "oidc") ("all" "tracing" "oidc")))) (s 2) (e (quote (("tracing" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:tracing-subscriber" "dep:tracing" "dep:tracing-opentelemetry" "dep:opentelemetry_sdk") ("oidc" "dep:anyhow" "dep:once_cell" "dep:openidconnect" "dep:serde" "dep:serde_json" "dep:maud" "dep:axum" "dep:tower-cookies" "dep:url" "dep:email_address" "dep:http" "dep:async-trait" "dep:axum-core" "dep:redacted"))))))

