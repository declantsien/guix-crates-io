(define-module (crates-io se rv server_fn) #:use-module (crates-io))

(define-public crate-server_fn-0.2.0 (c (n "server_fn") (v "0.2.0") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "ciborium") (r "^0.2.0") (d #t) (k 0)) (d (n "const_format") (r "^0.2.30") (d #t) (k 0)) (d (n "form_urlencoded") (r "^1") (d #t) (k 0)) (d (n "gloo-net") (r "^0.2") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "server_fn_macro_default") (r "^0.2.0") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "parsing" "extra-traits"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8.6") (f (quote ("const_xxh64"))) (d #t) (k 0)))) (h "1pncwvb4w9jd6rkhmlxq88x9pfpf59d3kfw4ys3xzvr4m3dg4r6j") (f (quote (("ssr"))))))

(define-public crate-server_fn-0.2.2 (c (n "server_fn") (v "0.2.2") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "ciborium") (r "^0.2.0") (d #t) (k 0)) (d (n "const_format") (r "^0.2.30") (d #t) (k 0)) (d (n "form_urlencoded") (r "^1") (d #t) (k 0)) (d (n "gloo-net") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "server_fn_macro_default") (r "^0.2.0") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "parsing" "extra-traits"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8.6") (f (quote ("const_xxh64"))) (d #t) (k 0)))) (h "1sp4w1m3dwmg6xrxlxqxpjjqdb8r722pfnzk2a6yyvs7ik6gkzqg") (f (quote (("ssr"))))))

(define-public crate-server_fn-0.2.3 (c (n "server_fn") (v "0.2.3") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "ciborium") (r "^0.2.0") (d #t) (k 0)) (d (n "const_format") (r "^0.2.30") (d #t) (k 0)) (d (n "form_urlencoded") (r "^1") (d #t) (k 0)) (d (n "gloo-net") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "server_fn_macro_default") (r "^0.2.3") (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "parsing" "extra-traits"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8.6") (f (quote ("const_xxh64"))) (d #t) (k 0)))) (h "1hbwhr3l746w1ycgr1j5h9ms9bm6a1yv9sg4ai0lpa28dsg4yasd") (f (quote (("stable" "server_fn_macro_default/stable") ("ssr"))))))

(define-public crate-server_fn-0.2.4 (c (n "server_fn") (v "0.2.4") (d (list (d (n "ciborium") (r "^0.2.0") (d #t) (k 0)) (d (n "const_format") (r "^0.2.30") (d #t) (k 0)) (d (n "gloo-net") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "server_fn_macro_default") (r "^0.2.4") (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "parsing" "extra-traits"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8.6") (f (quote ("const_xxh64"))) (d #t) (k 0)))) (h "1jv6vb6j6rkcmk08wlyqqy4cwa55352d4fcsnxnizj8y0svkkk3i") (f (quote (("stable" "server_fn_macro_default/stable") ("ssr"))))))

(define-public crate-server_fn-0.2.5 (c (n "server_fn") (v "0.2.5") (d (list (d (n "ciborium") (r "^0.2.0") (d #t) (k 0)) (d (n "const_format") (r "^0.2.30") (d #t) (k 0)) (d (n "gloo-net") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "server_fn_macro_default") (r "^0.2.5") (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "parsing" "extra-traits"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8.6") (f (quote ("const_xxh64"))) (d #t) (k 0)))) (h "0ns2qhi0ahp0g8rpya1s0skhbixxhz0s1lpg1grxjcfkgsk78zlg") (f (quote (("stable" "server_fn_macro_default/stable") ("ssr"))))))

(define-public crate-server_fn-0.3.0-alpha (c (n "server_fn") (v "0.3.0-alpha") (d (list (d (n "ciborium") (r "^0.2") (d #t) (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "gloo-net") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "server_fn_macro_default") (r "^0.3.0-alpha") (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "parsing" "extra-traits"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("const_xxh64"))) (d #t) (k 0)))) (h "1r1hz0l1wpfw6f25rxrp4b3nd1rxw8brmc4gfacahxdacjs9cc7h") (f (quote (("stable" "server_fn_macro_default/stable") ("ssr") ("rustls" "reqwest/rustls-tls") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-server_fn-0.3.0-alpha2 (c (n "server_fn") (v "0.3.0-alpha2") (d (list (d (n "ciborium") (r "^0.2") (d #t) (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "gloo-net") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_qs") (r "^0.12") (d #t) (k 0)) (d (n "server_fn_macro_default") (r "^0.3.0-alpha2") (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "parsing" "extra-traits"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("const_xxh64"))) (d #t) (k 0)))) (h "0j26s7fivbxlr5ilz3cixzfxi2m3akcgg44387y1gcgl9dxy2lxv") (f (quote (("stable" "server_fn_macro_default/stable") ("ssr") ("rustls" "reqwest/rustls-tls") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-server_fn-0.3.0 (c (n "server_fn") (v "0.3.0") (d (list (d (n "ciborium") (r "^0.2") (d #t) (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "gloo-net") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_qs") (r "^0.12") (d #t) (k 0)) (d (n "server_fn_macro_default") (r "^0.3.0") (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "parsing" "extra-traits"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("const_xxh64"))) (d #t) (k 0)))) (h "02jjr0h0qifwcly1i01n2hxjib96376lwpzdx6v63sllix81bwg4") (f (quote (("stable" "server_fn_macro_default/stable") ("ssr") ("rustls" "reqwest/rustls-tls") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-server_fn-0.3.1 (c (n "server_fn") (v "0.3.1") (d (list (d (n "ciborium") (r "^0.2") (d #t) (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "gloo-net") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_qs") (r "^0.12") (d #t) (k 0)) (d (n "server_fn_macro_default") (r "^0.3.1") (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "parsing" "extra-traits"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("const_xxh64"))) (d #t) (k 0)))) (h "0vx5z7fzjhan533rg3ykis93401d7fciqkyx5rd6x8iz469h07xf") (f (quote (("stable" "server_fn_macro_default/stable") ("ssr") ("rustls" "reqwest/rustls-tls") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-server_fn-0.4.0 (c (n "server_fn") (v "0.4.0") (d (list (d (n "ciborium") (r "^0.2") (d #t) (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "gloo-net") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "inventory") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_qs") (r "^0.12") (d #t) (k 0)) (d (n "server_fn_macro_default") (r "^0.4.0") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "parsing" "extra-traits"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("const_xxh64"))) (d #t) (k 0)))) (h "05sq4brkpjf0ci486mcmvh8kjkwv9pv1qxfqg9zggd5d4vj3znvn") (f (quote (("ssr" "inventory") ("rustls" "reqwest/rustls-tls") ("nightly" "server_fn_macro_default/nightly") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-server_fn-0.4.1 (c (n "server_fn") (v "0.4.1") (d (list (d (n "ciborium") (r "^0.2") (d #t) (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "gloo-net") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "inventory") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_qs") (r "^0.12") (d #t) (k 0)) (d (n "server_fn_macro_default") (r "^0.4.1") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "parsing" "extra-traits"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("const_xxh64"))) (d #t) (k 0)))) (h "0q6al2zmxpjxklkarfqm3ihxr123rkj8ngic0p5s7x25dmxqn9gb") (f (quote (("ssr" "inventory") ("rustls" "reqwest/rustls-tls") ("nightly" "server_fn_macro_default/nightly") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-server_fn-0.4.2 (c (n "server_fn") (v "0.4.2") (d (list (d (n "ciborium") (r "^0.2") (d #t) (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "gloo-net") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "inventory") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_qs") (r "^0.12") (d #t) (k 0)) (d (n "server_fn_macro_default") (r "^0.4.2") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "parsing" "extra-traits"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("const_xxh64"))) (d #t) (k 0)))) (h "0fjpz9prx85ww11rvbi9d0y414pv6pmlg14dfhijniip9ahp7443") (f (quote (("ssr" "inventory") ("rustls" "reqwest/rustls-tls") ("nightly" "server_fn_macro_default/nightly") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-server_fn-0.4.3 (c (n "server_fn") (v "0.4.3") (d (list (d (n "ciborium") (r "^0.2") (d #t) (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "gloo-net") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "inventory") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_qs") (r "^0.12") (d #t) (k 0)) (d (n "server_fn_macro_default") (r "^0.4.3") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "parsing" "extra-traits"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("const_xxh64"))) (d #t) (k 0)))) (h "1w1571r2ykik3i9ac9gg4faxd49jggsab0r8c3zz3m5l4a1m9rv6") (f (quote (("ssr" "inventory") ("rustls" "reqwest/rustls-tls") ("nightly" "server_fn_macro_default/nightly") ("default-tls" "reqwest/default-tls"))))))

(define-public crate-server_fn-0.4.4 (c (n "server_fn") (v "0.4.4") (d (list (d (n "ciborium") (r "^0.2") (d #t) (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "gloo-net") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "inventory") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_qs") (r "^0.12") (d #t) (k 0)) (d (n "server_fn_macro_default") (r "^0.4.4") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "parsing" "extra-traits"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("const_xxh64"))) (d #t) (k 0)))) (h "0fa10p1p9ssly38n0gxijsnsb04jzh7qm7w2h0ayb2n1dby6g80y") (f (quote (("ssr" "inventory") ("rustls" "reqwest/rustls-tls") ("nightly" "server_fn_macro_default/nightly") ("default-tls" "reqwest/default-tls"))))))

(define-public crate-server_fn-0.4.5 (c (n "server_fn") (v "0.4.5") (d (list (d (n "ciborium") (r "^0.2") (d #t) (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "gloo-net") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "inventory") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_qs") (r "^0.12") (d #t) (k 0)) (d (n "server_fn_macro_default") (r "^0.4.5") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "parsing" "extra-traits"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("const_xxh64"))) (d #t) (k 0)))) (h "138y1n7krxm79zp8g0rxd8w9v76n13y0snkcyzrskyq804fg5x6r") (f (quote (("ssr" "inventory") ("rustls" "reqwest/rustls-tls") ("nightly" "server_fn_macro_default/nightly") ("default-tls" "reqwest/default-tls"))))))

(define-public crate-server_fn-0.4.6 (c (n "server_fn") (v "0.4.6") (d (list (d (n "ciborium") (r "^0.2") (d #t) (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "gloo-net") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "inventory") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_qs") (r "^0.12") (d #t) (k 0)) (d (n "server_fn_macro_default") (r "^0.4.6") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "parsing" "extra-traits"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("const_xxh64"))) (d #t) (k 0)))) (h "0q6pkdf3h114w3qxixw0zc9xlwc8w7lsxnpdl448yd5xmqv3j4w1") (f (quote (("ssr" "inventory") ("rustls" "reqwest/rustls-tls") ("nightly" "server_fn_macro_default/nightly") ("default-tls" "reqwest/default-tls"))))))

(define-public crate-server_fn-0.5.0-alpha (c (n "server_fn") (v "0.5.0-alpha") (d (list (d (n "ciborium") (r "^0.2") (d #t) (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "gloo-net") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "inventory") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_qs") (r "^0.12") (d #t) (k 0)) (d (n "server_fn_macro_default") (r "^0.5.0-alpha") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "parsing" "extra-traits"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("const_xxh64"))) (d #t) (k 0)))) (h "0j716psb9yh3cazfhhz7qjhlgm6ycrm904z94dnsazmdpl4lmmnw") (f (quote (("ssr" "inventory") ("rustls" "reqwest/rustls-tls") ("nightly" "server_fn_macro_default/nightly") ("default-tls" "reqwest/default-tls"))))))

(define-public crate-server_fn-0.5.0-alpha2 (c (n "server_fn") (v "0.5.0-alpha2") (d (list (d (n "ciborium") (r "^0.2") (d #t) (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "gloo-net") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "inventory") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_qs") (r "^0.12") (d #t) (k 0)) (d (n "server_fn_macro_default") (r "^0.5.0-alpha2") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "parsing" "extra-traits"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("const_xxh64"))) (d #t) (k 0)))) (h "1yrddg5r51hghkks0xjzjchc5i2m88ylr621vriq22drw2jxim10") (f (quote (("ssr" "inventory") ("rustls" "reqwest/rustls-tls") ("nightly" "server_fn_macro_default/nightly") ("default-tls" "reqwest/default-tls"))))))

(define-public crate-server_fn-0.4.7 (c (n "server_fn") (v "0.4.7") (d (list (d (n "ciborium") (r "^0.2") (d #t) (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "gloo-net") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "inventory") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_qs") (r "^0.12") (d #t) (k 0)) (d (n "server_fn_macro_default") (r "^0.4.7") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "parsing" "extra-traits"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("const_xxh64"))) (d #t) (k 0)))) (h "1v7z1v1jif2mi4sad2m36jkjhg17l01lkrpikd39z5d6l91xiaxq") (f (quote (("ssr" "inventory") ("rustls" "reqwest/rustls-tls") ("nightly" "server_fn_macro_default/nightly") ("default-tls" "reqwest/default-tls"))))))

(define-public crate-server_fn-0.4.8 (c (n "server_fn") (v "0.4.8") (d (list (d (n "ciborium") (r "^0.2") (d #t) (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "gloo-net") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "inventory") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_qs") (r "^0.12") (d #t) (k 0)) (d (n "server_fn_macro_default") (r "^0.4.8") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "parsing" "extra-traits"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("const_xxh64"))) (d #t) (k 0)))) (h "0nqvk9qp91nmizc3zgihj7hrvhsxlcvm79y7gwnxli69ak7ichk4") (f (quote (("ssr" "inventory") ("rustls" "reqwest/rustls-tls") ("nightly" "server_fn_macro_default/nightly") ("default-tls" "reqwest/default-tls"))))))

(define-public crate-server_fn-0.5.0-beta (c (n "server_fn") (v "0.5.0-beta") (d (list (d (n "ciborium") (r "^0.2") (d #t) (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "gloo-net") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "inventory") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_qs") (r "^0.12") (d #t) (k 0)) (d (n "server_fn_macro_default") (r "^0.5.0-beta") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "parsing" "extra-traits"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("const_xxh64"))) (d #t) (k 0)))) (h "0lxqv3k7537xfy5z1il37a847csadyr7mcxzlbb6sc34s0canszb") (f (quote (("ssr" "inventory") ("rustls" "reqwest/rustls-tls") ("nightly" "server_fn_macro_default/nightly") ("default-tls" "reqwest/default-tls"))))))

(define-public crate-server_fn-0.4.9 (c (n "server_fn") (v "0.4.9") (d (list (d (n "ciborium") (r "^0.2") (d #t) (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "gloo-net") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "inventory") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_qs") (r "^0.12") (d #t) (k 0)) (d (n "server_fn_macro_default") (r "^0.4.9") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "parsing" "extra-traits"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("const_xxh64"))) (d #t) (k 0)))) (h "1bc5raa27khwq1vqcm8bbkczs63d3aixg99yrnhmrw2a6ipc1pnd") (f (quote (("ssr" "inventory") ("rustls" "reqwest/rustls-tls") ("nightly" "server_fn_macro_default/nightly") ("default-tls" "reqwest/default-tls"))))))

(define-public crate-server_fn-0.4.10 (c (n "server_fn") (v "0.4.10") (d (list (d (n "ciborium") (r "^0.2") (d #t) (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "gloo-net") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "inventory") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_qs") (r "^0.12") (d #t) (k 0)) (d (n "server_fn_macro_default") (r "^0.4.10") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "parsing" "extra-traits"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("const_xxh64"))) (d #t) (k 0)))) (h "1mzywrxpx6pm2pkc7ckqh5figvfy13yg5j6s2l7x0ksyldcdvk9z") (f (quote (("ssr" "inventory") ("rustls" "reqwest/rustls-tls") ("nightly" "server_fn_macro_default/nightly") ("default-tls" "reqwest/default-tls"))))))

(define-public crate-server_fn-0.5.0-beta2 (c (n "server_fn") (v "0.5.0-beta2") (d (list (d (n "ciborium") (r "^0.2") (d #t) (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "gloo-net") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "inventory") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_qs") (r "^0.12") (d #t) (k 0)) (d (n "server_fn_macro_default") (r "^0.5.0-beta2") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "parsing" "extra-traits"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("const_xxh64"))) (d #t) (k 0)))) (h "1ghpcj9mw4l417i3sf3qxl68d9kc07mq2a8dmlr4m33v3rk8gfli") (f (quote (("ssr" "inventory") ("rustls" "reqwest/rustls-tls") ("nightly" "server_fn_macro_default/nightly") ("default-tls" "reqwest/default-tls"))))))

(define-public crate-server_fn-0.5.0-rc1 (c (n "server_fn") (v "0.5.0-rc1") (d (list (d (n "ciborium") (r "^0.2") (d #t) (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "gloo-net") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "inventory") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_qs") (r "^0.12") (d #t) (k 0)) (d (n "server_fn") (r "^0.2") (d #t) (k 2)) (d (n "server_fn_macro_default") (r "^0.5.0-rc1") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "parsing" "extra-traits"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("const_xxh64"))) (d #t) (k 0)))) (h "1ghrbycj76g1ppy59mqqrx8b15h87m9fss6k116c36lw2vm3jn0c") (f (quote (("ssr" "inventory") ("rustls" "reqwest/rustls-tls") ("nightly" "server_fn_macro_default/nightly") ("default-tls" "reqwest/default-tls"))))))

(define-public crate-server_fn-0.5.0-rc2 (c (n "server_fn") (v "0.5.0-rc2") (d (list (d (n "ciborium") (r "^0.2") (d #t) (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "gloo-net") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "inventory") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_qs") (r "^0.12") (d #t) (k 0)) (d (n "server_fn") (r "^0.2") (d #t) (k 2)) (d (n "server_fn_macro_default") (r "^0.5.0-rc2") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "parsing" "extra-traits"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("const_xxh64"))) (d #t) (k 0)))) (h "1ivv007wzldx5yzmg53sb3jr9mkdr22rv8pirvl2j2754ry9sq33") (f (quote (("ssr" "inventory") ("rustls" "reqwest/rustls-tls") ("nightly" "server_fn_macro_default/nightly") ("default-tls" "reqwest/default-tls"))))))

(define-public crate-server_fn-0.5.0-rc3 (c (n "server_fn") (v "0.5.0-rc3") (d (list (d (n "ciborium") (r "^0.2") (d #t) (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "gloo-net") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "inventory") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_qs") (r "^0.12") (d #t) (k 0)) (d (n "server_fn") (r "^0.2") (d #t) (k 2)) (d (n "server_fn_macro_default") (r "^0.5.0-rc3") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "parsing" "extra-traits"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("const_xxh64"))) (d #t) (k 0)))) (h "1dhzrqyb4xprrbbah9v10phnw0s3nqyx70w9613rih5sjx2pc6fg") (f (quote (("ssr" "inventory") ("rustls" "reqwest/rustls-tls") ("nightly" "server_fn_macro_default/nightly") ("default-tls" "reqwest/default-tls"))))))

(define-public crate-server_fn-0.5.0 (c (n "server_fn") (v "0.5.0") (d (list (d (n "ciborium") (r "^0.2") (d #t) (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "gloo-net") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "inventory") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_qs") (r "^0.12") (d #t) (k 0)) (d (n "server_fn") (r "^0.2") (d #t) (k 2)) (d (n "server_fn_macro_default") (r "^0.5.0") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "parsing" "extra-traits"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("const_xxh64"))) (d #t) (k 0)))) (h "113zhc6r82lvshzzp90fisia6xf42a3458wjl1ci1s0i2bkgmvi9") (f (quote (("ssr" "inventory") ("rustls" "reqwest/rustls-tls") ("nightly" "server_fn_macro_default/nightly") ("default-tls" "reqwest/default-tls"))))))

(define-public crate-server_fn-0.5.1 (c (n "server_fn") (v "0.5.1") (d (list (d (n "ciborium") (r "^0.2") (d #t) (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "gloo-net") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "inventory") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_qs") (r "^0.12") (d #t) (k 0)) (d (n "server_fn") (r "^0.2") (d #t) (k 2)) (d (n "server_fn_macro_default") (r "^0.5.1") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "parsing" "extra-traits"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("const_xxh64"))) (d #t) (k 0)))) (h "15j8zkavapq2k0i7w338blsm9373s4p3fni6jx0brn5mjzzy03sw") (f (quote (("ssr" "inventory") ("rustls" "reqwest/rustls-tls") ("nightly" "server_fn_macro_default/nightly") ("default-tls" "reqwest/default-tls"))))))

(define-public crate-server_fn-0.5.2 (c (n "server_fn") (v "0.5.2") (d (list (d (n "ciborium") (r "^0.2") (d #t) (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "gloo-net") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "inventory") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_qs") (r "^0.12") (d #t) (k 0)) (d (n "server_fn") (r "^0.2") (d #t) (k 2)) (d (n "server_fn_macro_default") (r "^0.5.2") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "parsing" "extra-traits"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("const_xxh64"))) (d #t) (k 0)))) (h "056g92fl63mfygk0y4rli6isdydba8r2gf2rf7r2lmzrl5lzk1h1") (f (quote (("ssr" "inventory") ("rustls" "reqwest/rustls-tls") ("nightly" "server_fn_macro_default/nightly") ("default-tls" "reqwest/default-tls"))))))

(define-public crate-server_fn-0.5.3 (c (n "server_fn") (v "0.5.3") (d (list (d (n "ciborium") (r "^0.2") (d #t) (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "gloo-net") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "inventory") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_qs") (r "^0.12") (d #t) (k 0)) (d (n "server_fn") (r "^0.2") (d #t) (k 2)) (d (n "server_fn_macro_default") (r "^0.5.3") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "parsing" "extra-traits"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("const_xxh64"))) (d #t) (k 0)))) (h "0qwrvlycxw8k53v1d6c58dbrphq1lc0q5l81i9faxvflww7kv04i") (f (quote (("ssr" "inventory") ("rustls" "reqwest/rustls-tls") ("nightly" "server_fn_macro_default/nightly") ("default-tls" "reqwest/default-tls"))))))

(define-public crate-server_fn-0.5.4 (c (n "server_fn") (v "0.5.4") (d (list (d (n "ciborium") (r "^0.2") (d #t) (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "gloo-net") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "inventory") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_qs") (r "^0.12") (d #t) (k 0)) (d (n "server_fn") (r "^0.2") (d #t) (k 2)) (d (n "server_fn_macro_default") (r "^0.5.4") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "parsing" "extra-traits"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("const_xxh64"))) (d #t) (k 0)))) (h "1s8cid89zafw5ra51cn5p7zn0zy034s2qj20kibh944drkgiivfg") (f (quote (("ssr" "inventory") ("rustls" "reqwest/rustls-tls") ("nightly" "server_fn_macro_default/nightly") ("default-tls" "reqwest/default-tls"))))))

(define-public crate-server_fn-0.5.5 (c (n "server_fn") (v "0.5.5") (d (list (d (n "ciborium") (r "^0.2") (d #t) (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "gloo-net") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "inventory") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_qs") (r "^0.12") (d #t) (k 0)) (d (n "server_fn") (r "^0.2") (d #t) (k 2)) (d (n "server_fn_macro_default") (r "^0.5.5") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "parsing" "extra-traits"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("const_xxh64"))) (d #t) (k 0)))) (h "0s6gz75wg5krl85mai6kcvqrsvjazblg7269brks6mmpgl89hb7n") (f (quote (("ssr" "inventory") ("rustls" "reqwest/rustls-tls") ("nightly" "server_fn_macro_default/nightly") ("default-tls" "reqwest/default-tls")))) (y #t)))

(define-public crate-server_fn-0.5.6 (c (n "server_fn") (v "0.5.6") (d (list (d (n "ciborium") (r "^0.2") (d #t) (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "gloo-net") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "inventory") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_qs") (r "^0.12") (d #t) (k 0)) (d (n "server_fn") (r "^0.2") (d #t) (k 2)) (d (n "server_fn_macro_default") (r "^0.5.6") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "parsing" "extra-traits"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("const_xxh64"))) (d #t) (k 0)))) (h "1v4sbqm9cyjq8cqwf2v86816jn44i4n9is0x3xskzf0ih3zk0saq") (f (quote (("ssr" "inventory") ("rustls" "reqwest/rustls-tls") ("nightly" "server_fn_macro_default/nightly") ("default-tls" "reqwest/default-tls")))) (y #t)))

(define-public crate-server_fn-0.6.0-beta (c (n "server_fn") (v "0.6.0-beta") (d (list (d (n "actix-web") (r "^4") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.7") (f (quote ("multipart"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "ciborium") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gloo-net") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "http") (r "^1") (d #t) (k 0)) (d (n "http-body-util") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^1") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "multer") (r "^3") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("multipart" "stream"))) (o #t) (k 0)) (d (n "rkyv") (r "^0.7") (f (quote ("validation" "uuid" "strict"))) (o #t) (d #t) (k 0)) (d (n "send_wrapper") (r "^0.6") (f (quote ("futures"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-lite") (r "^0.5") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_qs") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "server_fn_macro_default") (r "^0.6") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tower") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "tower-layer") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "wasm-streams") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("console" "ReadableStream" "ReadableStreamDefaultReader"))) (o #t) (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("const_xxh64"))) (d #t) (k 0)))) (h "0nbdanisgrg9v6ww4g1klcy029kwryjnb131gx4715ll4y97pbcr") (f (quote (("ssr" "inventory") ("rustls" "reqwest/rustls-tls") ("json") ("form-redirects") ("default-tls" "reqwest/default-tls") ("default" "json" "cbor")))) (s 2) (e (quote (("url" "dep:serde_qs") ("serde-lite" "dep:serde-lite") ("rkyv" "dep:rkyv") ("reqwest" "dep:reqwest") ("multipart" "dep:multer") ("cbor" "dep:ciborium") ("browser" "dep:gloo-net" "dep:js-sys" "dep:send_wrapper" "dep:wasm-bindgen" "dep:web-sys" "dep:wasm-streams" "dep:wasm-bindgen-futures") ("axum" "ssr" "dep:axum" "dep:hyper" "dep:http-body-util" "dep:tower" "dep:tower-layer") ("actix" "ssr" "dep:actix-web" "dep:send_wrapper"))))))

(define-public crate-server_fn-0.5.7 (c (n "server_fn") (v "0.5.7") (d (list (d (n "ciborium") (r "^0.2") (d #t) (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "gloo-net") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "inventory") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_qs") (r "^0.12") (d #t) (k 0)) (d (n "server_fn") (r "^0.2") (d #t) (k 2)) (d (n "server_fn_macro_default") (r "^0.5.7") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "parsing" "extra-traits"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("const_xxh64"))) (d #t) (k 0)))) (h "0hbmryabs1vv23zyakafj6ls3pzbzyqhm7c9v2df0j7ycplms9kc") (f (quote (("ssr" "inventory") ("rustls" "reqwest/rustls-tls") ("nightly" "server_fn_macro_default/nightly") ("default-tls" "reqwest/default-tls"))))))

(define-public crate-server_fn-0.6.0-rc1 (c (n "server_fn") (v "0.6.0-rc1") (d (list (d (n "actix-web") (r "^4") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.7") (f (quote ("multipart"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "ciborium") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gloo-net") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "http") (r "^1") (d #t) (k 0)) (d (n "http-body-util") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^1") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "multer") (r "^3") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("multipart" "stream"))) (o #t) (k 0)) (d (n "rkyv") (r "^0.7") (f (quote ("validation" "uuid" "strict"))) (o #t) (d #t) (k 0)) (d (n "send_wrapper") (r "^0.6") (f (quote ("futures"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-lite") (r "^0.5") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_qs") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "server_fn_macro_default") (r "^0.6.0-rc1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tower") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "tower-layer") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "wasm-streams") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("console" "ReadableStream" "ReadableStreamDefaultReader"))) (o #t) (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("const_xxh64"))) (d #t) (k 0)))) (h "0282x6ydn0wg4wwn4qq1iqizh84hjzjzphhrch8rwylidqrvcgvl") (f (quote (("ssr" "inventory") ("json") ("form-redirects") ("default" "json" "cbor")))) (s 2) (e (quote (("url" "dep:serde_qs") ("serde-lite" "dep:serde-lite") ("rustls" "reqwest?/rustls-tls") ("rkyv" "dep:rkyv") ("reqwest" "dep:reqwest") ("multipart" "browser" "dep:multer") ("default-tls" "reqwest?/default-tls") ("cbor" "dep:ciborium") ("browser" "dep:gloo-net" "dep:js-sys" "dep:send_wrapper" "dep:wasm-bindgen" "dep:web-sys" "dep:wasm-streams" "dep:wasm-bindgen-futures") ("axum" "ssr" "dep:axum" "dep:hyper" "dep:http-body-util" "dep:tower" "dep:tower-layer") ("actix" "ssr" "dep:actix-web" "dep:send_wrapper"))))))

(define-public crate-server_fn-0.6.1 (c (n "server_fn") (v "0.6.1") (d (list (d (n "actix-web") (r "^4") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.7") (f (quote ("multipart"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "ciborium") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gloo-net") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "http") (r "^1") (d #t) (k 0)) (d (n "http-body-util") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^1") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "multer") (r "^3") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("multipart" "stream"))) (o #t) (k 0)) (d (n "rkyv") (r "^0.7") (f (quote ("validation" "uuid" "strict"))) (o #t) (d #t) (k 0)) (d (n "send_wrapper") (r "^0.6") (f (quote ("futures"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-lite") (r "^0.5") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_qs") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "server_fn_macro_default") (r "^0.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tower") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "tower-layer") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "wasm-streams") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("console" "ReadableStream" "ReadableStreamDefaultReader"))) (o #t) (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("const_xxh64"))) (d #t) (k 0)))) (h "1pmxw6ig805f11kfsf3wb6j4phyap91a7qn04k0i97cgn1yz91d3") (f (quote (("ssr" "inventory") ("json") ("form-redirects") ("default" "json" "cbor")))) (s 2) (e (quote (("url" "dep:serde_qs") ("serde-lite" "dep:serde-lite") ("rustls" "reqwest?/rustls-tls") ("rkyv" "dep:rkyv") ("reqwest" "dep:reqwest") ("multipart" "browser" "dep:multer") ("default-tls" "reqwest?/default-tls") ("cbor" "dep:ciborium") ("browser" "dep:gloo-net" "dep:js-sys" "dep:send_wrapper" "dep:wasm-bindgen" "dep:web-sys" "dep:wasm-streams" "dep:wasm-bindgen-futures") ("axum" "ssr" "dep:axum" "dep:hyper" "dep:http-body-util" "dep:tower" "dep:tower-layer") ("actix" "ssr" "dep:actix-web" "dep:send_wrapper"))))))

(define-public crate-server_fn-0.6.2 (c (n "server_fn") (v "0.6.2") (d (list (d (n "actix-web") (r "^4") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.7") (f (quote ("multipart"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "ciborium") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gloo-net") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "http") (r "^1") (d #t) (k 0)) (d (n "http-body-util") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^1") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "multer") (r "^3") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("multipart" "stream"))) (o #t) (k 0)) (d (n "rkyv") (r "^0.7") (f (quote ("validation" "uuid" "strict"))) (o #t) (d #t) (k 0)) (d (n "send_wrapper") (r "^0.6") (f (quote ("futures"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-lite") (r "^0.5") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_qs") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "server_fn_macro_default") (r "^0.6") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tower") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "tower-layer") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "wasm-streams") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("console" "ReadableStream" "ReadableStreamDefaultReader"))) (o #t) (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("const_xxh64"))) (d #t) (k 0)))) (h "1gwmxifyis85jxdgmm888h384imngdj68l06bfy8hmm9g2h5yjlg") (f (quote (("ssr" "inventory") ("json") ("form-redirects") ("default" "json" "cbor")))) (s 2) (e (quote (("url" "dep:serde_qs") ("serde-lite" "dep:serde-lite") ("rustls" "reqwest?/rustls-tls") ("rkyv" "dep:rkyv") ("reqwest" "dep:reqwest") ("multipart" "browser" "dep:multer") ("default-tls" "reqwest?/default-tls") ("cbor" "dep:ciborium") ("browser" "dep:gloo-net" "dep:js-sys" "dep:send_wrapper" "dep:wasm-bindgen" "dep:web-sys" "dep:wasm-streams" "dep:wasm-bindgen-futures") ("axum" "ssr" "dep:axum" "dep:hyper" "dep:http-body-util" "dep:tower" "dep:tower-layer") ("actix" "ssr" "dep:actix-web" "dep:send_wrapper"))))))

(define-public crate-server_fn-0.6.3 (c (n "server_fn") (v "0.6.3") (d (list (d (n "actix-web") (r "^4") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.7") (f (quote ("multipart"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "ciborium") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gloo-net") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "http") (r "^1") (d #t) (k 0)) (d (n "http-body-util") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^1") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "multer") (r "^3") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("multipart" "stream"))) (o #t) (k 0)) (d (n "rkyv") (r "^0.7") (f (quote ("validation" "uuid" "strict"))) (o #t) (d #t) (k 0)) (d (n "send_wrapper") (r "^0.6") (f (quote ("futures"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-lite") (r "^0.5") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_qs") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "server_fn_macro_default") (r "^0.6") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tower") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "tower-layer") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "wasm-streams") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("console" "ReadableStream" "ReadableStreamDefaultReader"))) (o #t) (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("const_xxh64"))) (d #t) (k 0)))) (h "17sq3zxdpms4hav65iiwz4479s774nxwp9ssc9bqr8kbg5hf7vg7") (f (quote (("ssr" "inventory") ("json") ("form-redirects") ("default" "json" "cbor")))) (s 2) (e (quote (("url" "dep:serde_qs") ("serde-lite" "dep:serde-lite") ("rustls" "reqwest?/rustls-tls") ("rkyv" "dep:rkyv") ("reqwest" "dep:reqwest") ("multipart" "browser" "dep:multer") ("default-tls" "reqwest?/default-tls") ("cbor" "dep:ciborium") ("browser" "dep:gloo-net" "dep:js-sys" "dep:send_wrapper" "dep:wasm-bindgen" "dep:web-sys" "dep:wasm-streams" "dep:wasm-bindgen-futures") ("axum" "ssr" "dep:axum" "dep:hyper" "dep:http-body-util" "dep:tower" "dep:tower-layer") ("actix" "ssr" "dep:actix-web" "dep:send_wrapper"))))))

(define-public crate-server_fn-0.6.4 (c (n "server_fn") (v "0.6.4") (d (list (d (n "actix-web") (r "^4") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.7") (f (quote ("multipart"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "ciborium") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gloo-net") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "http") (r "^1") (d #t) (k 0)) (d (n "http-body-util") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^1") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "multer") (r "^3") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("multipart" "stream"))) (o #t) (k 0)) (d (n "rkyv") (r "^0.7") (f (quote ("validation" "uuid" "strict"))) (o #t) (d #t) (k 0)) (d (n "send_wrapper") (r "^0.6") (f (quote ("futures"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-lite") (r "^0.5") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_qs") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "server_fn_macro_default") (r "^0.6") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tower") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "tower-layer") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "wasm-streams") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("console" "ReadableStream" "ReadableStreamDefaultReader"))) (o #t) (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("const_xxh64"))) (d #t) (k 0)))) (h "199ig4i8dpzppa54qfylxx3qdqll0bk5vhkx1fwx59hg5c90hwpj") (f (quote (("ssr" "inventory") ("json") ("form-redirects") ("default" "json" "cbor")))) (s 2) (e (quote (("url" "dep:serde_qs") ("serde-lite" "dep:serde-lite") ("rustls" "reqwest?/rustls-tls") ("rkyv" "dep:rkyv") ("reqwest" "dep:reqwest") ("multipart" "browser" "dep:multer") ("default-tls" "reqwest?/default-tls") ("cbor" "dep:ciborium") ("browser" "dep:gloo-net" "dep:js-sys" "dep:send_wrapper" "dep:wasm-bindgen" "dep:web-sys" "dep:wasm-streams" "dep:wasm-bindgen-futures") ("axum" "ssr" "dep:axum" "dep:hyper" "dep:http-body-util" "dep:tower" "dep:tower-layer") ("actix" "ssr" "dep:actix-web" "dep:send_wrapper"))))))

(define-public crate-server_fn-0.6.5 (c (n "server_fn") (v "0.6.5") (d (list (d (n "actix-web") (r "^4") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.7") (f (quote ("multipart"))) (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "ciborium") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gloo-net") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "http") (r "^1") (d #t) (k 0)) (d (n "http-body-util") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^1") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "multer") (r "^3") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("multipart" "stream"))) (o #t) (k 0)) (d (n "rkyv") (r "^0.7") (f (quote ("validation" "uuid" "strict"))) (o #t) (d #t) (k 0)) (d (n "send_wrapper") (r "^0.6") (f (quote ("futures"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-lite") (r "^0.5") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_qs") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "server_fn_macro_default") (r "^0.6") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tower") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "tower-layer") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "wasm-streams") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("console" "ReadableStream" "ReadableStreamDefaultReader"))) (o #t) (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("const_xxh64"))) (d #t) (k 0)))) (h "031jc8ka6qnnhq24rlbkk5p7qgpcs90srk7glkmykmyjkm6vbylp") (f (quote (("ssr" "inventory") ("json") ("form-redirects") ("default" "json" "cbor")))) (s 2) (e (quote (("url" "dep:serde_qs") ("serde-lite" "dep:serde-lite") ("rustls" "reqwest?/rustls-tls") ("rkyv" "dep:rkyv") ("reqwest" "dep:reqwest") ("multipart" "browser" "dep:multer") ("default-tls" "reqwest?/default-tls") ("cbor" "dep:ciborium") ("browser" "dep:gloo-net" "dep:js-sys" "dep:send_wrapper" "dep:wasm-bindgen" "dep:web-sys" "dep:wasm-streams" "dep:wasm-bindgen-futures") ("axum" "ssr" "dep:axum" "dep:hyper" "dep:http-body-util" "dep:tower" "dep:tower-layer") ("actix" "ssr" "dep:actix-web" "dep:send_wrapper"))))))

(define-public crate-server_fn-0.6.6 (c (n "server_fn") (v "0.6.6") (d (list (d (n "actix-web") (r "^4") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.7") (f (quote ("multipart"))) (o #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "ciborium") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gloo-net") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "http") (r "^1") (d #t) (k 0)) (d (n "http-body-util") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^1") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "multer") (r "^3") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("multipart" "stream"))) (o #t) (k 0)) (d (n "rkyv") (r "^0.7") (f (quote ("validation" "uuid" "strict"))) (o #t) (d #t) (k 0)) (d (n "send_wrapper") (r "^0.6") (f (quote ("futures"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-lite") (r "^0.5") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_qs") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "server_fn_macro_default") (r "^0.6") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tower") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "tower-layer") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "wasm-streams") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("console" "ReadableStream" "ReadableStreamDefaultReader"))) (o #t) (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("const_xxh64"))) (d #t) (k 0)))) (h "1fkhp1pgncfvch13lw2v5v2xns6djqszzckfyzzv3g5nfxvh5gnw") (f (quote (("ssr" "inventory") ("json") ("form-redirects") ("default" "json" "cbor") ("axum" "axum/default" "axum-no-default")))) (s 2) (e (quote (("url" "dep:serde_qs") ("serde-lite" "dep:serde-lite") ("rustls" "reqwest?/rustls-tls") ("rkyv" "dep:rkyv") ("reqwest" "dep:reqwest") ("multipart" "browser" "dep:multer") ("default-tls" "reqwest?/default-tls") ("cbor" "dep:ciborium") ("browser" "dep:gloo-net" "dep:js-sys" "dep:send_wrapper" "dep:wasm-bindgen" "dep:web-sys" "dep:wasm-streams" "dep:wasm-bindgen-futures") ("axum-no-default" "ssr" "dep:axum" "dep:hyper" "dep:http-body-util" "dep:tower" "dep:tower-layer") ("actix" "ssr" "dep:actix-web" "dep:send_wrapper"))))))

(define-public crate-server_fn-0.6.7 (c (n "server_fn") (v "0.6.7") (d (list (d (n "actix-web") (r "^4") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.7") (f (quote ("multipart"))) (o #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "ciborium") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gloo-net") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "http") (r "^1") (d #t) (k 0)) (d (n "http-body-util") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^1") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "multer") (r "^3") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("multipart" "stream"))) (o #t) (k 0)) (d (n "rkyv") (r "^0.7") (f (quote ("validation" "uuid" "strict"))) (o #t) (d #t) (k 0)) (d (n "send_wrapper") (r "^0.6") (f (quote ("futures"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-lite") (r "^0.5") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_qs") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "server_fn_macro_default") (r "^0.6") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tower") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "tower-layer") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "wasm-streams") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("console" "ReadableStream" "ReadableStreamDefaultReader"))) (o #t) (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("const_xxh64"))) (d #t) (k 0)))) (h "1kgbaswrp91q2j7y82p6wkci4ymvmpw8916jqc0cbhn2ik938zmr") (f (quote (("ssr" "inventory") ("json") ("form-redirects") ("default" "json" "cbor") ("axum" "axum/default" "axum-no-default")))) (s 2) (e (quote (("url" "dep:serde_qs") ("serde-lite" "dep:serde-lite") ("rustls" "reqwest?/rustls-tls") ("rkyv" "dep:rkyv") ("reqwest" "dep:reqwest") ("multipart" "browser" "dep:multer") ("default-tls" "reqwest?/default-tls") ("cbor" "dep:ciborium") ("browser" "dep:gloo-net" "dep:js-sys" "dep:send_wrapper" "dep:wasm-bindgen" "dep:web-sys" "dep:wasm-streams" "dep:wasm-bindgen-futures") ("axum-no-default" "ssr" "dep:axum" "dep:hyper" "dep:http-body-util" "dep:tower" "dep:tower-layer") ("actix" "ssr" "dep:actix-web" "dep:send_wrapper")))) (r "1.75")))

(define-public crate-server_fn-0.6.8 (c (n "server_fn") (v "0.6.8") (d (list (d (n "actix-web") (r "^4") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.7") (f (quote ("multipart"))) (o #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "ciborium") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gloo-net") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "http") (r "^1") (d #t) (k 0)) (d (n "http-body-util") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^1") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "multer") (r "^3") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("multipart" "stream"))) (o #t) (k 0)) (d (n "rkyv") (r "^0.7") (f (quote ("validation" "uuid" "strict"))) (o #t) (d #t) (k 0)) (d (n "send_wrapper") (r "^0.6") (f (quote ("futures"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-lite") (r "^0.5") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_qs") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "server_fn_macro_default") (r "^0.6") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tower") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "tower-layer") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "wasm-streams") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("console" "ReadableStream" "ReadableStreamDefaultReader"))) (o #t) (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("const_xxh64"))) (d #t) (k 0)))) (h "0wj2kqwynw492sp93hjzid9gyjcz7d8rqhrsi9irrqmqyc2s3dfb") (f (quote (("ssr" "inventory") ("json") ("form-redirects") ("default" "json" "cbor") ("axum" "axum/default" "axum-no-default")))) (s 2) (e (quote (("url" "dep:serde_qs") ("serde-lite" "dep:serde-lite") ("rustls" "reqwest?/rustls-tls") ("rkyv" "dep:rkyv") ("reqwest" "dep:reqwest") ("multipart" "browser" "dep:multer") ("default-tls" "reqwest?/default-tls") ("cbor" "dep:ciborium") ("browser" "dep:gloo-net" "dep:js-sys" "dep:send_wrapper" "dep:wasm-bindgen" "dep:web-sys" "dep:wasm-streams" "dep:wasm-bindgen-futures") ("axum-no-default" "ssr" "dep:axum" "dep:hyper" "dep:http-body-util" "dep:tower" "dep:tower-layer") ("actix" "ssr" "dep:actix-web" "dep:send_wrapper")))) (r "1.75")))

(define-public crate-server_fn-0.6.9 (c (n "server_fn") (v "0.6.9") (d (list (d (n "actix-web") (r "^4") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.7") (f (quote ("multipart"))) (o #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "ciborium") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gloo-net") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "http") (r "^1") (d #t) (k 0)) (d (n "http-body-util") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^1") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "multer") (r "^3") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("multipart" "stream"))) (o #t) (k 0)) (d (n "rkyv") (r "^0.7") (f (quote ("validation" "uuid" "strict"))) (o #t) (d #t) (k 0)) (d (n "rmp-serde") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "send_wrapper") (r "^0.6") (f (quote ("futures"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-lite") (r "^0.5") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_qs") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "server_fn_macro_default") (r "^0.6") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tower") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "tower-layer") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "wasm-streams") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("console" "ReadableStream" "ReadableStreamDefaultReader"))) (o #t) (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("const_xxh64"))) (d #t) (k 0)))) (h "0cd5nx4hljcngcgs51pjw58r1wf5ysd0iwgbhb0p1ngwqlfxlm99") (f (quote (("ssr" "inventory") ("json") ("form-redirects") ("default" "json" "cbor") ("axum" "axum/default" "axum-no-default")))) (s 2) (e (quote (("url" "dep:serde_qs") ("serde-lite" "dep:serde-lite") ("rustls" "reqwest?/rustls-tls") ("rkyv" "dep:rkyv") ("reqwest" "dep:reqwest") ("multipart" "browser" "dep:multer") ("msgpack" "dep:rmp-serde") ("default-tls" "reqwest?/default-tls") ("cbor" "dep:ciborium") ("browser" "dep:gloo-net" "dep:js-sys" "dep:send_wrapper" "dep:wasm-bindgen" "dep:web-sys" "dep:wasm-streams" "dep:wasm-bindgen-futures") ("axum-no-default" "ssr" "dep:axum" "dep:hyper" "dep:http-body-util" "dep:tower" "dep:tower-layer") ("actix" "ssr" "dep:actix-web" "dep:send_wrapper")))) (r "1.75")))

(define-public crate-server_fn-0.6.10 (c (n "server_fn") (v "0.6.10") (d (list (d (n "actix-web") (r "^4") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.7") (f (quote ("multipart"))) (o #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "ciborium") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gloo-net") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "http") (r "^1") (d #t) (k 0)) (d (n "http-body-util") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^1") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "multer") (r "^3") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("multipart" "stream"))) (o #t) (k 0)) (d (n "rkyv") (r "^0.7") (f (quote ("validation" "uuid" "strict"))) (o #t) (d #t) (k 0)) (d (n "rmp-serde") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "send_wrapper") (r "^0.6") (f (quote ("futures"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-lite") (r "^0.5") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_qs") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "server_fn_macro_default") (r "^0.6") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tower") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "tower-layer") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "wasm-streams") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("console" "ReadableStream" "ReadableStreamDefaultReader"))) (o #t) (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("const_xxh64"))) (d #t) (k 0)))) (h "1km8hv4jfnbbh35m1b8y9klvc64a464mk6gvxhq19f7czlpnm90m") (f (quote (("ssr" "inventory") ("json") ("form-redirects") ("default" "json" "cbor") ("axum" "axum/default" "axum-no-default")))) (s 2) (e (quote (("url" "dep:serde_qs") ("serde-lite" "dep:serde-lite") ("rustls" "reqwest?/rustls-tls") ("rkyv" "dep:rkyv") ("reqwest" "dep:reqwest") ("multipart" "browser" "dep:multer") ("msgpack" "dep:rmp-serde") ("default-tls" "reqwest?/default-tls") ("cbor" "dep:ciborium") ("browser" "dep:gloo-net" "dep:js-sys" "dep:send_wrapper" "dep:wasm-bindgen" "dep:web-sys" "dep:wasm-streams" "dep:wasm-bindgen-futures") ("axum-no-default" "ssr" "dep:axum" "dep:hyper" "dep:http-body-util" "dep:tower" "dep:tower-layer") ("actix" "ssr" "dep:actix-web" "dep:send_wrapper")))) (r "1.75")))

(define-public crate-server_fn-0.6.11 (c (n "server_fn") (v "0.6.11") (d (list (d (n "actix-web") (r "^4") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.7") (f (quote ("multipart"))) (o #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "ciborium") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gloo-net") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "http") (r "^1") (d #t) (k 0)) (d (n "http-body-util") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^1") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "multer") (r "^3") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("multipart" "stream"))) (o #t) (k 0)) (d (n "rkyv") (r "^0.7") (f (quote ("validation" "uuid" "strict"))) (o #t) (d #t) (k 0)) (d (n "rmp-serde") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "send_wrapper") (r "^0.6") (f (quote ("futures"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-lite") (r "^0.5") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_qs") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "server_fn_macro_default") (r "^0.6") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tower") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "tower-layer") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "wasm-streams") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("console" "ReadableStream" "ReadableStreamDefaultReader"))) (o #t) (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("const_xxh64"))) (d #t) (k 0)))) (h "175mjr9d9qhy0vbrbvhd0z484m2206zl3bjr3vh3wr3kjsamnsjk") (f (quote (("ssr" "inventory") ("json") ("form-redirects") ("default" "json" "cbor") ("axum" "axum/default" "axum-no-default")))) (s 2) (e (quote (("url" "dep:serde_qs") ("serde-lite" "dep:serde-lite") ("rustls" "reqwest?/rustls-tls") ("rkyv" "dep:rkyv") ("reqwest" "dep:reqwest") ("multipart" "browser" "dep:multer") ("msgpack" "dep:rmp-serde") ("default-tls" "reqwest?/default-tls") ("cbor" "dep:ciborium") ("browser" "dep:gloo-net" "dep:js-sys" "dep:send_wrapper" "dep:wasm-bindgen" "dep:web-sys" "dep:wasm-streams" "dep:wasm-bindgen-futures") ("axum-no-default" "ssr" "dep:axum" "dep:hyper" "dep:http-body-util" "dep:tower" "dep:tower-layer") ("actix" "ssr" "dep:actix-web" "dep:send_wrapper")))) (r "1.75")))

(define-public crate-server_fn-0.7.0-preview (c (n "server_fn") (v "0.7.0-preview") (d (list (d (n "actix-web") (r "^4") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.7") (f (quote ("multipart"))) (o #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "ciborium") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gloo-net") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "http") (r "^1") (d #t) (k 0)) (d (n "http-body-util") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^1") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "multer") (r "^3") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("multipart" "stream"))) (o #t) (k 0)) (d (n "rkyv") (r "^0.7") (f (quote ("validation" "uuid" "strict"))) (o #t) (d #t) (k 0)) (d (n "rmp-serde") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "send_wrapper") (r "^0.6") (f (quote ("futures"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-lite") (r "^0.5") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_qs") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "server_fn_macro_default") (r "^0.7.0-preview") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "throw_error") (r "^0.1") (d #t) (k 0)) (d (n "tower") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "tower-layer") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "wasm-streams") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("console" "ReadableStream" "ReadableStreamDefaultReader" "AbortController" "AbortSignal"))) (o #t) (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("const_xxh64"))) (d #t) (k 0)))) (h "1r6csfqgp4mi17rc6bcc4gd7hgpy4qmx2wdl35nnj6k90bpdiy5k") (f (quote (("ssr" "inventory") ("json") ("form-redirects") ("default" "json") ("axum" "axum/default" "axum-no-default")))) (s 2) (e (quote (("url" "dep:serde_qs") ("serde-lite" "dep:serde-lite") ("rustls" "reqwest?/rustls-tls") ("rkyv" "dep:rkyv") ("reqwest" "dep:reqwest") ("multipart" "browser" "dep:multer") ("msgpack" "dep:rmp-serde") ("default-tls" "reqwest?/default-tls") ("cbor" "dep:ciborium") ("browser" "dep:gloo-net" "dep:js-sys" "dep:send_wrapper" "dep:wasm-bindgen" "dep:web-sys" "dep:wasm-streams" "dep:wasm-bindgen-futures") ("axum-no-default" "ssr" "dep:axum" "dep:hyper" "dep:http-body-util" "dep:tower" "dep:tower-layer") ("actix" "ssr" "dep:actix-web" "dep:send_wrapper")))) (r "1.75")))

(define-public crate-server_fn-0.7.0-preview2 (c (n "server_fn") (v "0.7.0-preview2") (d (list (d (n "actix-web") (r "^4") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.7") (f (quote ("multipart"))) (o #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "ciborium") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gloo-net") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "http") (r "^1") (d #t) (k 0)) (d (n "http-body-util") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^1") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "multer") (r "^3") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("multipart" "stream"))) (o #t) (k 0)) (d (n "rkyv") (r "^0.7") (f (quote ("validation" "uuid" "strict"))) (o #t) (d #t) (k 0)) (d (n "rmp-serde") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "send_wrapper") (r "^0.6") (f (quote ("futures"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-lite") (r "^0.5") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_qs") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "server_fn_macro_default") (r "^0.7.0-preview2") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "throw_error") (r "^0.1") (d #t) (k 0)) (d (n "tower") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "tower-layer") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "wasm-streams") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("console" "ReadableStream" "ReadableStreamDefaultReader" "AbortController" "AbortSignal"))) (o #t) (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("const_xxh64"))) (d #t) (k 0)))) (h "1w4v6x4ppvr4vmjrdrrrnf0w6di3dgz85g62y3cg23893q1d4jdg") (f (quote (("ssr" "inventory") ("json") ("form-redirects") ("default" "json") ("axum" "axum/default" "axum-no-default")))) (s 2) (e (quote (("url" "dep:serde_qs") ("serde-lite" "dep:serde-lite") ("rustls" "reqwest?/rustls-tls") ("rkyv" "dep:rkyv") ("reqwest" "dep:reqwest") ("multipart" "browser" "dep:multer") ("msgpack" "dep:rmp-serde") ("default-tls" "reqwest?/default-tls") ("cbor" "dep:ciborium") ("browser" "dep:gloo-net" "dep:js-sys" "dep:send_wrapper" "dep:wasm-bindgen" "dep:web-sys" "dep:wasm-streams" "dep:wasm-bindgen-futures") ("axum-no-default" "ssr" "dep:axum" "dep:hyper" "dep:http-body-util" "dep:tower" "dep:tower-layer") ("actix" "ssr" "dep:actix-web" "dep:send_wrapper")))) (r "1.75")))

