(define-module (crates-io se rv servant) #:use-module (crates-io))

(define-public crate-servant-0.1.0 (c (n "servant") (v "0.1.0") (d (list (d (n "async-std") (r "^1.3") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures_codec") (r "^0.3.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "servant-codec") (r "^0.1.0") (d #t) (k 0)) (d (n "servant-log") (r "^0.1.0") (d #t) (k 0)) (d (n "servant-macro") (r "^0.1.0") (o #t) (d #t) (k 0)))) (h "1x36m5jgsp4dhslvvckrqq9a9pal7l7dg79zghhzsxdwmcspdjfl") (f (quote (("terminal" "servant-macro/terminal") ("report" "servant-macro/report") ("query" "servant-macro/query") ("notify" "servant-macro/notify") ("invoke" "servant-macro/invoke") ("full" "default" "report" "notify") ("default_gateway" "query") ("default" "default_gateway" "invoke" "adapter" "terminal") ("adapter" "servant-macro/adapter"))))))

