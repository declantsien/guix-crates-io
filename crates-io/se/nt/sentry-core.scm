(define-module (crates-io se nt sentry-core) #:use-module (crates-io))

(define-public crate-sentry-core-0.19.0 (c (n "sentry-core") (v "0.19.0") (d (list (d (n "im") (r "^14.2.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log_") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "log")) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "sentry-types") (r "^0.19.0") (d #t) (k 0)))) (h "0p8bk4f956g47nk7wyq6c3zvk8aazrxfrmbdh3d4dhwlrq3x3v24") (f (quote (("test" "client") ("default") ("debug-logs" "log_") ("client" "im" "rand"))))))

(define-public crate-sentry-core-0.19.1 (c (n "sentry-core") (v "0.19.1") (d (list (d (n "im") (r "^14.2.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log_") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "log")) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "sentry-types") (r "^0.19.1") (d #t) (k 0)))) (h "1ri9x64zkqzbp81ldrpz7fkgifw51mpqdwxhz1k8x5f0gls1ihf9") (f (quote (("test" "client") ("default") ("debug-logs" "log_") ("client" "im" "rand"))))))

(define-public crate-sentry-core-0.20.0 (c (n "sentry-core") (v "0.20.0") (d (list (d (n "im") (r "^15.0.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log_") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "log")) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "sentry-types") (r "^0.20.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.46") (d #t) (k 0)))) (h "1grwgpd7cg5fd0rj0x7n6m1pf8iv0da3zkwkgakn9r0k38lkka72") (f (quote (("test" "client") ("default") ("debug-logs" "log_") ("client" "im" "rand"))))))

(define-public crate-sentry-core-0.20.1 (c (n "sentry-core") (v "0.20.1") (d (list (d (n "im") (r "^15.0.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log_") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "log")) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "sentry-types") (r "^0.20.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.46") (d #t) (k 0)))) (h "18whci7a2mbqzglvxyrw6d65fplwia4h5irqz00nfh8j1f4zxr1z") (f (quote (("test" "client") ("default") ("debug-logs" "log_") ("client" "im" "rand"))))))

(define-public crate-sentry-core-0.21.0 (c (n "sentry-core") (v "0.21.0") (d (list (d (n "im") (r "^15.0.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log_") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "log")) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "sentry-types") (r "^0.21.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.46") (d #t) (k 0)))) (h "1k1xdga37vnsjv4yr66ig3b9vh7awxff7irgivyhf41w0qsw5f0p") (f (quote (("test" "client") ("default") ("debug-logs" "log_") ("client" "im" "rand"))))))

(define-public crate-sentry-core-0.22.0 (c (n "sentry-core") (v "0.22.0") (d (list (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log_") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "log")) (d (n "rand") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "sentry-types") (r "^0.22.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.46") (d #t) (k 0)))) (h "0d0cdbzaqkg4h5qb5z02r70fvjzz42c74pg6804m9dac71g4ignb") (f (quote (("test" "client") ("default") ("debug-logs" "log_") ("client" "rand"))))))

(define-public crate-sentry-core-0.23.0 (c (n "sentry-core") (v "0.23.0") (d (list (d (n "chrono") (r "^0.4.13") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log_") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "log")) (d (n "rand") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "sentry-types") (r "^0.23.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.46") (d #t) (k 0)))) (h "0syf6cx5d4zh4yahw9bhbbijf6h6jdj8c703z0c04hws1hkmgagr") (f (quote (("test" "client") ("default") ("debug-logs" "log_") ("client" "rand"))))))

(define-public crate-sentry-core-0.24.0 (c (n "sentry-core") (v "0.24.0") (d (list (d (n "anyhow") (r "^1.0.30") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log_") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "log")) (d (n "rand") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "sentry-types") (r "^0.24.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.46") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.15") (d #t) (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (k 2)))) (h "1ih661b3jf52v8465njc3rpgmjxbg2pd4shcycj2j6sc0pfw9hk5") (f (quote (("test" "client") ("default") ("debug-logs" "log_") ("client" "rand"))))))

(define-public crate-sentry-core-0.24.1 (c (n "sentry-core") (v "0.24.1") (d (list (d (n "anyhow") (r "^1.0.30") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log_") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "log")) (d (n "rand") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "sentry-types") (r "^0.24.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.46") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.15") (d #t) (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (k 2)))) (h "06bsyq816jj4p4nbf2pd6ljvsxp92i1zx78vqkbx3zdb89bc551z") (f (quote (("test" "client") ("default") ("debug-logs" "log_") ("client" "rand"))))))

(define-public crate-sentry-core-0.24.2 (c (n "sentry-core") (v "0.24.2") (d (list (d (n "anyhow") (r "^1.0.30") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log_") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "log")) (d (n "rand") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "sentry-types") (r "^0.24.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.46") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.15") (d #t) (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (k 2)))) (h "152mhz3kgpyvx24d0sd3l1b3bv9xjhrsk4avb979yjjgbbm7k7qk") (f (quote (("test" "client") ("default") ("debug-logs" "log_") ("client" "rand"))))))

(define-public crate-sentry-core-0.24.3 (c (n "sentry-core") (v "0.24.3") (d (list (d (n "anyhow") (r "^1.0.30") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log_") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "log")) (d (n "rand") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "sentry-types") (r "^0.24.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.46") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.15") (d #t) (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (k 2)))) (h "08x9w3zi0hz7c1x8wkch81hn0fy7g2nfvggi8kyypph4b6ncrfs1") (f (quote (("test" "client") ("default") ("debug-logs" "log_") ("client" "rand"))))))

(define-public crate-sentry-core-0.25.0 (c (n "sentry-core") (v "0.25.0") (d (list (d (n "anyhow") (r "^1.0.30") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log_") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "log")) (d (n "rand") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "sentry-types") (r "^0.25.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.46") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.15") (d #t) (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (k 2)))) (h "0fwybzvpsiasb0k150xgv5xazy4x6c8pczv3cwf16y1spq8kycsn") (f (quote (("test" "client") ("default") ("debug-logs" "log_") ("client" "rand"))))))

(define-public crate-sentry-core-0.26.0 (c (n "sentry-core") (v "0.26.0") (d (list (d (n "anyhow") (r "^1.0.30") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log_") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "log")) (d (n "rand") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "sentry-types") (r "^0.26.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.46") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.15") (d #t) (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (k 2)))) (h "15icz23hwpc1w0cwg4nx3jm2ls5dr9r2b90cv2xlvvar76fm17vc") (f (quote (("test" "client") ("default") ("debug-logs" "log_") ("client" "rand"))))))

(define-public crate-sentry-core-0.27.0 (c (n "sentry-core") (v "0.27.0") (d (list (d (n "anyhow") (r "^1.0.30") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "log_") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "log")) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "sentry-types") (r "^0.27.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.46") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.15") (d #t) (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (k 2)))) (h "1rkawrvj3qqybv2a88yd92z2ysmw8gqrbaqrp2qp7br8s6i92ias") (f (quote (("test" "client") ("default") ("debug-logs" "log_") ("client" "rand")))) (r "1.57")))

(define-public crate-sentry-core-0.28.0 (c (n "sentry-core") (v "0.28.0") (d (list (d (n "anyhow") (r "^1.0.30") (d #t) (k 2)) (d (n "build_id") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "findshlibs") (r "=0.10.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pprof") (r "^0.10.1") (o #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "rand") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 2)) (d (n "rustc_version_runtime") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "sentry-types") (r "^0.28.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.46") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.15") (d #t) (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "03nf7ywxf475a3cpj6kyfw6dngazillw8hlwl23bamymg8x46n7z") (f (quote (("test" "client") ("profiling" "pprof" "build_id" "uuid" "sys-info" "findshlibs" "rustc_version_runtime" "libc" "indexmap") ("default") ("client" "rand")))) (s 2) (e (quote (("frame-pointer" "pprof?/frame-pointer") ("debug-logs" "dep:log")))) (r "1.60")))

(define-public crate-sentry-core-0.29.0 (c (n "sentry-core") (v "0.29.0") (d (list (d (n "anyhow") (r "^1.0.30") (d #t) (k 2)) (d (n "build_id") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "findshlibs") (r "=0.10.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pprof") (r "^0.11.0") (o #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "rand") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 2)) (d (n "rustc_version_runtime") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "sentry-types") (r "^0.29.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.46") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.15") (d #t) (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0adrjcrm3jlj2ifjsy2d03kma0z9r4xh2d5mi966dl6636hhxscb") (f (quote (("test" "client") ("profiling" "pprof" "build_id" "uuid" "sys-info" "findshlibs" "rustc_version_runtime" "libc" "indexmap") ("default") ("client" "rand")))) (s 2) (e (quote (("frame-pointer" "pprof?/frame-pointer") ("debug-logs" "dep:log")))) (r "1.60")))

(define-public crate-sentry-core-0.29.1 (c (n "sentry-core") (v "0.29.1") (d (list (d (n "anyhow") (r "^1.0.30") (d #t) (k 2)) (d (n "build_id") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "findshlibs") (r "=0.10.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pprof") (r "^0.11.0") (o #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "rand") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 2)) (d (n "rustc_version_runtime") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "sentry-types") (r "^0.29.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.46") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.15") (d #t) (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1pxvx6vqjq8q072wgyqvi5xxjp8cr037npz4skna2n16vvcbkyad") (f (quote (("test" "client") ("profiling" "pprof" "build_id" "uuid" "sys-info" "findshlibs" "rustc_version_runtime" "libc" "indexmap") ("default") ("client" "rand")))) (s 2) (e (quote (("frame-pointer" "pprof?/frame-pointer") ("debug-logs" "dep:log")))) (r "1.60")))

(define-public crate-sentry-core-0.29.2 (c (n "sentry-core") (v "0.29.2") (d (list (d (n "anyhow") (r "^1.0.30") (d #t) (k 2)) (d (n "build_id") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "findshlibs") (r "=0.10.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pprof") (r "^0.11.0") (o #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "rand") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 2)) (d (n "rustc_version_runtime") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "sentry-types") (r "^0.29.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.46") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.15") (d #t) (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1gf116sz29psazi6cgg3v82xkaqfwsf0x2pyl18l2i1s9rzfnhzw") (f (quote (("test" "client") ("profiling" "pprof" "build_id" "uuid" "sys-info" "findshlibs" "rustc_version_runtime" "libc" "indexmap") ("default") ("client" "rand")))) (s 2) (e (quote (("frame-pointer" "pprof?/frame-pointer") ("debug-logs" "dep:log")))) (r "1.60")))

(define-public crate-sentry-core-0.29.3 (c (n "sentry-core") (v "0.29.3") (d (list (d (n "anyhow") (r "^1.0.30") (d #t) (k 2)) (d (n "build_id") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "findshlibs") (r "=0.10.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pprof") (r "^0.11.0") (o #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "rand") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 2)) (d (n "rustc_version_runtime") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "sentry-types") (r "^0.29.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.46") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.15") (d #t) (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "14gsi3p913cxk1x4svn235czczy0wr0b3dl40g7khn95lhyvvb5m") (f (quote (("test" "client") ("profiling" "pprof" "build_id" "uuid" "sys-info" "findshlibs" "rustc_version_runtime" "libc" "indexmap") ("default") ("client" "rand")))) (s 2) (e (quote (("frame-pointer" "pprof?/frame-pointer") ("debug-logs" "dep:log")))) (r "1.60")))

(define-public crate-sentry-core-0.30.0 (c (n "sentry-core") (v "0.30.0") (d (list (d (n "anyhow") (r "^1.0.30") (d #t) (k 2)) (d (n "build_id") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "findshlibs") (r "=0.10.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pprof") (r "^0.11.0") (o #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "rand") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 2)) (d (n "rustc_version_runtime") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "sentry-types") (r "^0.30.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.46") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.15") (d #t) (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1g3xkkgfqhs73q3bgssc8b05ais95805b8gp1ik7p2hizn5q48jv") (f (quote (("test" "client") ("profiling" "pprof" "build_id" "uuid" "sys-info" "findshlibs" "rustc_version_runtime" "libc" "indexmap") ("default") ("client" "rand")))) (s 2) (e (quote (("frame-pointer" "pprof?/frame-pointer") ("debug-logs" "dep:log")))) (r "1.66")))

(define-public crate-sentry-core-0.31.0 (c (n "sentry-core") (v "0.31.0") (d (list (d (n "anyhow") (r "^1.0.30") (d #t) (k 2)) (d (n "build_id") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "findshlibs") (r "=0.10.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pprof") (r "^0.11.0") (o #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "rand") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 2)) (d (n "rustc_version_runtime") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "sentry-types") (r "^0.31.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.46") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.15") (d #t) (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0xls37xy84jr3jmqxrnfn3kb08nyb60aw9pk3w6sciqyfrainy2y") (f (quote (("test" "client") ("profiling" "pprof" "build_id" "uuid" "sys-info" "findshlibs" "rustc_version_runtime" "libc" "indexmap") ("default") ("client" "rand")))) (s 2) (e (quote (("frame-pointer" "pprof?/frame-pointer") ("debug-logs" "dep:log")))) (r "1.66")))

(define-public crate-sentry-core-0.31.1 (c (n "sentry-core") (v "0.31.1") (d (list (d (n "anyhow") (r "^1.0.30") (d #t) (k 2)) (d (n "build_id") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "findshlibs") (r "=0.10.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pprof") (r "^0.11.0") (o #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "rand") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 2)) (d (n "rustc_version_runtime") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "sentry-types") (r "^0.31.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.46") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.15") (d #t) (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0sy5p9qg01zirda6s0afwap8zxadmq6vsfh1by4hbgqv01062890") (f (quote (("test" "client") ("profiling" "pprof" "build_id" "uuid" "sys-info" "findshlibs" "rustc_version_runtime" "libc" "indexmap") ("default") ("client" "rand")))) (s 2) (e (quote (("frame-pointer" "pprof?/frame-pointer") ("debug-logs" "dep:log")))) (r "1.66")))

(define-public crate-sentry-core-0.31.2 (c (n "sentry-core") (v "0.31.2") (d (list (d (n "anyhow") (r "^1.0.30") (d #t) (k 2)) (d (n "build_id") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "findshlibs") (r "=0.10.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pprof") (r "^0.11.0") (o #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "rand") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 2)) (d (n "rustc_version_runtime") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "sentry-types") (r "^0.31.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.46") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.15") (d #t) (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1lmykdx9z0ccqvjlyfrl05i9lk1hh2mvyjfwfqjxi34yp3qm9yd1") (f (quote (("test" "client") ("profiling" "pprof" "build_id" "uuid" "sys-info" "findshlibs" "rustc_version_runtime" "libc" "indexmap") ("default") ("client" "rand")))) (s 2) (e (quote (("frame-pointer" "pprof?/frame-pointer") ("debug-logs" "dep:log")))) (r "1.66")))

(define-public crate-sentry-core-0.31.3 (c (n "sentry-core") (v "0.31.3") (d (list (d (n "anyhow") (r "^1.0.30") (d #t) (k 2)) (d (n "build_id") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "findshlibs") (r "=0.10.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pprof") (r "^0.11.0") (o #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "rand") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 2)) (d (n "rustc_version_runtime") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "sentry-types") (r "^0.31.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.46") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.15") (d #t) (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "194wfg0vliqi1mlif6zrgibbdb33rf2jm85shcsxjmaz277lwq9m") (f (quote (("test" "client") ("profiling" "pprof" "build_id" "uuid" "sys-info" "findshlibs" "rustc_version_runtime" "libc" "indexmap") ("default") ("client" "rand")))) (s 2) (e (quote (("frame-pointer" "pprof?/frame-pointer") ("debug-logs" "dep:log")))) (r "1.66")))

(define-public crate-sentry-core-0.31.4 (c (n "sentry-core") (v "0.31.4") (d (list (d (n "anyhow") (r "^1.0.30") (d #t) (k 2)) (d (n "build_id") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "findshlibs") (r "=0.10.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pprof") (r "^0.11.0") (o #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "rand") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 2)) (d (n "rustc_version_runtime") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "sentry-types") (r "^0.31.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.46") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.15") (d #t) (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "02knpxa4gf24lixh182gm2rvc1c4hkh4qhhz8mjqpr0p5ws5qd7y") (f (quote (("test" "client") ("profiling" "pprof" "build_id" "uuid" "sys-info" "findshlibs" "rustc_version_runtime" "libc" "indexmap") ("default") ("client" "rand")))) (s 2) (e (quote (("frame-pointer" "pprof?/frame-pointer") ("debug-logs" "dep:log")))) (r "1.66")))

(define-public crate-sentry-core-0.31.5 (c (n "sentry-core") (v "0.31.5") (d (list (d (n "anyhow") (r "^1.0.30") (d #t) (k 2)) (d (n "build_id") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "findshlibs") (r "=0.10.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pprof") (r "^0.11.0") (o #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "rand") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 2)) (d (n "rustc_version_runtime") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "sentry-types") (r "^0.31.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.46") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.15") (d #t) (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0aq1zm8d5wr1avw9gx79p7a6immcnf02rzs2cr278jl010bljqvi") (f (quote (("test" "client") ("profiling" "pprof" "build_id" "uuid" "sys-info" "findshlibs" "rustc_version_runtime" "libc" "indexmap") ("default") ("client" "rand")))) (s 2) (e (quote (("frame-pointer" "pprof?/frame-pointer") ("debug-logs" "dep:log")))) (r "1.66")))

(define-public crate-sentry-core-0.31.6 (c (n "sentry-core") (v "0.31.6") (d (list (d (n "anyhow") (r "^1.0.30") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "futures") (r "^0.3.24") (d #t) (k 2)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 2)) (d (n "sentry-types") (r "^0.31.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.46") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.15") (d #t) (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0mdhmr3pwyr9g5akg1mqn13nvsly49j1pvd11w8wndkzb17lffc3") (f (quote (("test" "client") ("default") ("client" "rand")))) (s 2) (e (quote (("debug-logs" "dep:log")))) (r "1.67")))

(define-public crate-sentry-core-0.31.7 (c (n "sentry-core") (v "0.31.7") (d (list (d (n "anyhow") (r "^1.0.30") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "futures") (r "^0.3.24") (d #t) (k 2)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 2)) (d (n "sentry-types") (r "^0.31.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.46") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.15") (d #t) (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0lv03pbmgsww6j0a8b6yf20s6gwqgf8l7klcalb9pv8k8172clcg") (f (quote (("test" "client") ("default") ("client" "rand")))) (s 2) (e (quote (("debug-logs" "dep:log")))) (r "1.68")))

(define-public crate-sentry-core-0.31.8 (c (n "sentry-core") (v "0.31.8") (d (list (d (n "anyhow") (r "^1.0.30") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "futures") (r "^0.3.24") (d #t) (k 2)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 2)) (d (n "sentry-types") (r "^0.31.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.46") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.15") (d #t) (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1waf2r3ik50188cnqchm0b25d1yxmjaf1ybfhgdv6zgrh4b7c7wh") (f (quote (("test" "client") ("default") ("client" "rand")))) (s 2) (e (quote (("debug-logs" "dep:log")))) (r "1.68")))

(define-public crate-sentry-core-0.32.0 (c (n "sentry-core") (v "0.32.0") (d (list (d (n "anyhow") (r "^1.0.30") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "futures") (r "^0.3.24") (d #t) (k 2)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 2)) (d (n "sentry-types") (r "^0.32.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.46") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.15") (d #t) (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1bkbgkjp6jn78679p0zjqniwivj30r2ixrmkdnrzcd9hhfnsddzb") (f (quote (("test" "client") ("default") ("client" "rand")))) (s 2) (e (quote (("debug-logs" "dep:log")))) (r "1.68")))

(define-public crate-sentry-core-0.32.1 (c (n "sentry-core") (v "0.32.1") (d (list (d (n "anyhow") (r "^1.0.30") (d #t) (k 2)) (d (n "cadence") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "futures") (r "^0.3.24") (d #t) (k 2)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 2)) (d (n "sentry-types") (r "^0.32.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.46") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.15") (d #t) (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1zr8j6gp571m8lapwfi8qjlgdbd7mip0i08npwj53pn5n4zjsdjy") (f (quote (("test" "client") ("default") ("client" "rand") ("UNSTABLE_metrics" "sentry-types/UNSTABLE_metrics")))) (s 2) (e (quote (("debug-logs" "dep:log") ("UNSTABLE_cadence" "dep:cadence" "UNSTABLE_metrics")))) (r "1.68")))

(define-public crate-sentry-core-0.32.2 (c (n "sentry-core") (v "0.32.2") (d (list (d (n "anyhow") (r "^1.0.30") (d #t) (k 2)) (d (n "cadence") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "futures") (r "^0.3.24") (d #t) (k 2)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 2)) (d (n "sentry-types") (r "^0.32.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.46") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.15") (d #t) (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "1i6y7gzjdh06vk4yqphszpx0g5m5hdgzgbbif7ph5qg7sxl9y65i") (f (quote (("test" "client") ("default") ("client" "rand") ("UNSTABLE_metrics" "sentry-types/UNSTABLE_metrics")))) (s 2) (e (quote (("debug-logs" "dep:log") ("UNSTABLE_cadence" "dep:cadence" "UNSTABLE_metrics")))) (r "1.68")))

(define-public crate-sentry-core-0.32.3 (c (n "sentry-core") (v "0.32.3") (d (list (d (n "anyhow") (r "^1.0.30") (d #t) (k 2)) (d (n "cadence") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "futures") (r "^0.3.24") (d #t) (k 2)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 2)) (d (n "sentry-types") (r "^0.32.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.46") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.15") (d #t) (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "09h83ra0m70z98rqd40rkq57yp0zx0yg0zg5x535q38wx88m19s6") (f (quote (("test" "client") ("default") ("client" "rand") ("UNSTABLE_metrics" "sentry-types/UNSTABLE_metrics")))) (s 2) (e (quote (("debug-logs" "dep:log") ("UNSTABLE_cadence" "dep:cadence" "UNSTABLE_metrics")))) (r "1.73")))

(define-public crate-sentry-core-0.33.0 (c (n "sentry-core") (v "0.33.0") (d (list (d (n "anyhow") (r "^1.0.30") (d #t) (k 2)) (d (n "cadence") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "crc32fast") (r "^1.4.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "futures") (r "^0.3.24") (d #t) (k 2)) (d (n "itertools") (r "^0.13.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 2)) (d (n "regex") (r "^1.7.3") (d #t) (k 0)) (d (n "sentry-types") (r "^0.33.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.46") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.15") (d #t) (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "08gik6d16cbk5qy71aq8par3f69kaqdc0yvfrfvqdyhc8fhfgid2") (f (quote (("test" "client") ("default") ("client" "rand") ("UNSTABLE_metrics" "sentry-types/UNSTABLE_metrics")))) (s 2) (e (quote (("debug-logs" "dep:log") ("UNSTABLE_cadence" "dep:cadence" "UNSTABLE_metrics")))) (r "1.73")))

(define-public crate-sentry-core-0.34.0 (c (n "sentry-core") (v "0.34.0") (d (list (d (n "anyhow") (r "^1.0.30") (d #t) (k 2)) (d (n "cadence") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "crc32fast") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "futures") (r "^0.3.24") (d #t) (k 2)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 2)) (d (n "regex") (r "^1.7.3") (o #t) (d #t) (k 0)) (d (n "sentry-types") (r "^0.34.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.46") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.15") (d #t) (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (o #t) (d #t) (k 0)))) (h "0c2apnms1g3ycfxvb22r6qgj0svjryf2nh3a4dpqz779x37q64hn") (f (quote (("test" "client") ("metrics" "sentry-types/metrics" "regex" "crc32fast") ("default") ("client" "rand")))) (s 2) (e (quote (("metrics-cadence1" "dep:cadence" "metrics") ("debug-logs" "dep:log")))) (r "1.73")))

