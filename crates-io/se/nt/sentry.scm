(define-module (crates-io se nt sentry) #:use-module (crates-io))

(define-public crate-sentry-0.1.0 (c (n "sentry") (v "0.1.0") (d (list (d (n "chrono") (r "^0.2.22") (d #t) (k 0)) (d (n "hyper") (r "^0.9.5") (d #t) (k 0)) (d (n "time") (r "^0.1.35") (d #t) (k 0)))) (h "0clry6d5vxbqk16asfvqq3mi516z2d005f0bbijvcxwzij9awa8d")))

(define-public crate-sentry-0.1.1 (c (n "sentry") (v "0.1.1") (d (list (d (n "chrono") (r "^0.2.22") (d #t) (k 0)) (d (n "hyper") (r "^0.9.5") (d #t) (k 0)) (d (n "time") (r "^0.1.35") (d #t) (k 0)))) (h "06gc2mwqkbbpfg9bw7jwm9i3avq9srzyng2zgdhx2xdydcffzrii")))

(define-public crate-sentry-0.1.2 (c (n "sentry") (v "0.1.2") (d (list (d (n "chrono") (r "^0.2.22") (d #t) (k 0)) (d (n "hyper") (r "^0.9.5") (d #t) (k 0)) (d (n "time") (r "^0.1.35") (d #t) (k 0)))) (h "1kadzka984z4dh34xz1qqifw33412s0dwr232r4z3hb29h81ffmw")))

(define-public crate-sentry-0.1.3 (c (n "sentry") (v "0.1.3") (d (list (d (n "chrono") (r "^0.2.22") (d #t) (k 0)) (d (n "hyper") (r "^0.9.5") (d #t) (k 0)) (d (n "time") (r "^0.1.35") (d #t) (k 0)))) (h "0xga36ad07d8673fs8cj18jgpcwglpjz73aqz54kvldp4dfjq3l3")))

(define-public crate-sentry-0.1.4 (c (n "sentry") (v "0.1.4") (d (list (d (n "chrono") (r "^0.2.22") (d #t) (k 0)) (d (n "hyper") (r "^0.9.5") (d #t) (k 0)) (d (n "time") (r "^0.1.35") (d #t) (k 0)))) (h "1d7ignyc50r100m42n55ziarmm4dynmyd2r18h8h0kfw0c6zy1dy")))

(define-public crate-sentry-0.1.5 (c (n "sentry") (v "0.1.5") (d (list (d (n "chrono") (r "^0.2.22") (d #t) (k 0)) (d (n "hyper") (r "^0.9.5") (d #t) (k 0)) (d (n "time") (r "^0.1.35") (d #t) (k 0)))) (h "1hcyg914v1sw61910vp01lzh904xb0hynp4bly15n9d4rd8mkxx1")))

(define-public crate-sentry-0.1.6 (c (n "sentry") (v "0.1.6") (d (list (d (n "chrono") (r "^0.2.22") (d #t) (k 0)) (d (n "hyper") (r "^0.9.5") (d #t) (k 0)) (d (n "time") (r "^0.1.35") (d #t) (k 0)))) (h "0kz039r06ljypw9kag909srpwqvjaxxsx82w1sclfdybd6x3xyx3")))

(define-public crate-sentry-0.1.7 (c (n "sentry") (v "0.1.7") (d (list (d (n "chrono") (r "^0.2.22") (d #t) (k 0)) (d (n "hyper") (r "^0.9.5") (d #t) (k 0)) (d (n "time") (r "^0.1.35") (d #t) (k 0)))) (h "10zz571gxv113fnbnx168r7jvais9izi63hhlis8hywd8rjqlfyk")))

(define-public crate-sentry-0.1.8 (c (n "sentry") (v "0.1.8") (d (list (d (n "backtrace") (r "^0.2") (d #t) (k 0)) (d (n "chrono") (r "^0.2.22") (d #t) (k 0)) (d (n "hyper") (r "^0.9.5") (d #t) (k 0)) (d (n "time") (r "^0.1.35") (d #t) (k 0)))) (h "0lgb59kd8rrjsaqd3vw25nzsch8bych8p4308gfjg8l3smqikn68")))

(define-public crate-sentry-0.1.9 (c (n "sentry") (v "0.1.9") (d (list (d (n "backtrace") (r "^0.2") (d #t) (k 0)) (d (n "chrono") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.9") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "1cywzsydcalgrq6vpfpsq7q5cbp7fwks5lz5n40ykv5k6h74qv8g")))

(define-public crate-sentry-0.1.10 (c (n "sentry") (v "0.1.10") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "chrono") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.10") (d #t) (k 0)) (d (n "hyper-native-tls") (r "^0.2.3") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^1") (d #t) (k 0)))) (h "1vh90023g414kzywbg8x9kaz5v7v6kws7dp2g3d3agkf52klqsj6")))

(define-public crate-sentry-0.2.0 (c (n "sentry") (v "0.2.0") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "error-chain") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.11") (d #t) (k 0)) (d (n "hyper-tls") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "tokio-core") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^1") (d #t) (k 0)))) (h "1g6z7gpnrxzrgs9svbfqkd288sbqlilikk0c50skq4wzaxlik4sc")))

(define-public crate-sentry-0.3.0-beta (c (n "sentry") (v "0.3.0-beta") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "error-chain") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.1") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "hostname") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "im") (r "^10.0.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.40") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.2.2") (d #t) (k 2)) (d (n "regex") (r "^0.2.10") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.8.5") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2.2") (o #t) (d #t) (k 1)) (d (n "sentry-types") (r "^0.2.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^1.7") (d #t) (k 0)) (d (n "uuid") (r "^0.6.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "1x39ma8rky7pigiimnghaz3p951p4f128f9ajy3619s0am70bnag") (f (quote (("with_rust_info" "rustc_version") ("with_log" "log") ("with_failure" "failure" "regex") ("with_error_chain" "error-chain") ("with_device_info" "libc" "hostname" "uname") ("default" "with_failure" "with_log" "with_device_info" "with_rust_info"))))))

(define-public crate-sentry-0.3.0 (c (n "sentry") (v "0.3.0") (d (list (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "error-chain") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.1") (d #t) (k 2)) (d (n "findshlibs") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "hostname") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "im") (r "^10.0.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.40") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.2.2") (d #t) (k 2)) (d (n "regex") (r "^0.2.10") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2.2") (o #t) (d #t) (k 1)) (d (n "sentry-types") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.6.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "0qshi32js2l5r2k0zb08kllbsibp6hgwiyk6f6x0jqsb88ym1060") (f (quote (("with_shim_api") ("with_rust_info" "rustc_version" "with_client_implementation") ("with_panic" "with_backtrace") ("with_log" "log" "with_backtrace") ("with_failure" "failure" "with_backtrace") ("with_error_chain" "error-chain" "with_backtrace") ("with_device_info" "libc" "hostname" "uname" "with_client_implementation") ("with_debug_meta" "findshlibs" "with_client_implementation") ("with_client_implementation" "reqwest" "im" "url" "with_backtrace") ("with_backtrace" "backtrace" "regex") ("default" "with_client_implementation" "with_panic" "with_failure" "with_log" "with_device_info" "with_rust_info" "with_debug_meta"))))))

(define-public crate-sentry-0.3.1 (c (n "sentry") (v "0.3.1") (d (list (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "error-chain") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.1") (d #t) (k 2)) (d (n "findshlibs") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "hostname") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "im") (r "^10.0.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.40") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.2.2") (d #t) (k 2)) (d (n "regex") (r "^0.2.10") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2.2") (o #t) (d #t) (k 1)) (d (n "sentry-types") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "url") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.6.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "16k43v8kfcdp2likmmz9pn57xnik5i1k6byp099ixz86cqdllsvs") (f (quote (("with_shim_api") ("with_rust_info" "rustc_version" "with_client_implementation") ("with_panic" "with_backtrace") ("with_log" "log" "with_backtrace") ("with_failure" "failure" "with_backtrace") ("with_error_chain" "error-chain" "with_backtrace") ("with_device_info" "libc" "hostname" "uname" "with_client_implementation") ("with_debug_meta" "findshlibs" "with_client_implementation") ("with_client_implementation" "reqwest" "im" "url" "with_backtrace") ("with_backtrace" "backtrace" "regex") ("default" "with_client_implementation" "with_panic" "with_failure" "with_log" "with_device_info" "with_rust_info" "with_debug_meta"))))))

(define-public crate-sentry-0.3.2 (c (n "sentry") (v "0.3.2") (d (list (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "error-chain") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.1") (d #t) (k 2)) (d (n "findshlibs") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "hostname") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "im") (r "^10.0.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.40") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.2.2") (d #t) (k 2)) (d (n "regex") (r "^0.2.10") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2.2") (o #t) (d #t) (k 1)) (d (n "sentry-types") (r "^0.3.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "url") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.6.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "0kki44p7y3l142p3rs12mk1n0kvyjf5jx8pca74aka17lhnimc6b") (f (quote (("with_shim_api") ("with_rust_info" "rustc_version" "with_client_implementation") ("with_panic" "with_backtrace") ("with_log" "log" "with_backtrace") ("with_failure" "failure" "with_backtrace") ("with_error_chain" "error-chain" "with_backtrace") ("with_device_info" "libc" "hostname" "uname" "with_client_implementation") ("with_debug_meta" "findshlibs" "with_client_implementation") ("with_client_implementation" "reqwest" "im" "url" "with_backtrace") ("with_backtrace" "backtrace" "regex") ("default" "with_client_implementation" "with_panic" "with_failure" "with_log" "with_device_info" "with_rust_info" "with_debug_meta"))))))

(define-public crate-sentry-0.4.0 (c (n "sentry") (v "0.4.0") (d (list (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "error-chain") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.1") (d #t) (k 2)) (d (n "findshlibs") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "hostname") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "im") (r "^10.0.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.40") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.2.2") (d #t) (k 2)) (d (n "regex") (r "^0.2.10") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2.2") (o #t) (d #t) (k 1)) (d (n "sentry-types") (r "^0.3.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "url") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.6.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "1fwasbf5hphxv39y8pfkvxa2q0700lqilx6s3l8zb6vmvg7nqzsa") (f (quote (("with_shim_api") ("with_rust_info" "rustc_version" "with_client_implementation") ("with_panic" "with_backtrace") ("with_log" "log" "with_backtrace") ("with_failure" "failure" "with_backtrace") ("with_error_chain" "error-chain" "with_backtrace") ("with_device_info" "libc" "hostname" "uname" "with_client_implementation") ("with_debug_meta" "findshlibs" "with_client_implementation") ("with_client_implementation" "reqwest" "im" "url" "with_backtrace") ("with_backtrace" "backtrace" "regex") ("default" "with_client_implementation" "with_panic" "with_failure" "with_log" "with_device_info" "with_rust_info" "with_debug_meta"))))))

(define-public crate-sentry-0.4.1 (c (n "sentry") (v "0.4.1") (d (list (d (n "backtrace") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "error-chain") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.1") (d #t) (k 2)) (d (n "findshlibs") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "hostname") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "im") (r "^10.2.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.40") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.2.2") (d #t) (k 2)) (d (n "regex") (r "^0.2.10") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2.2") (o #t) (d #t) (k 1)) (d (n "sentry-types") (r "^0.3.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.43") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.16") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "url") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.6.3") (f (quote ("v4"))) (d #t) (k 0)))) (h "0w0imjnvj6igw4kp2xirkc7jm57hidmb6c2ihzkkfdmsdayz6z8f") (f (quote (("with_shim_api") ("with_rust_info" "rustc_version" "with_client_implementation") ("with_panic" "with_backtrace") ("with_log" "log" "with_backtrace") ("with_failure" "failure" "with_backtrace") ("with_error_chain" "error-chain" "with_backtrace") ("with_device_info" "libc" "hostname" "uname" "with_client_implementation") ("with_debug_meta" "findshlibs" "with_client_implementation") ("with_client_implementation" "reqwest" "im" "url" "with_backtrace") ("with_backtrace" "backtrace" "regex") ("default" "with_client_implementation" "with_panic" "with_failure" "with_log" "with_device_info" "with_rust_info" "with_debug_meta"))))))

(define-public crate-sentry-0.5.0 (c (n "sentry") (v "0.5.0") (d (list (d (n "backtrace") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "error-chain") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.1") (d #t) (k 2)) (d (n "findshlibs") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "hostname") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "im") (r "^10.2.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.40") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.2.2") (d #t) (k 2)) (d (n "regex") (r "^0.2.10") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2.2") (o #t) (d #t) (k 1)) (d (n "sentry-types") (r "^0.3.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.43") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.16") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "url") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.6.3") (f (quote ("v4"))) (d #t) (k 0)))) (h "1rz9svvgcipv55wibzyv0hlqncliz03hbn0rf94pmvvviz4idyzz") (f (quote (("with_shim_api") ("with_rust_info" "rustc_version" "with_client_implementation") ("with_panic" "with_backtrace") ("with_log" "log" "with_backtrace") ("with_failure" "failure" "with_backtrace") ("with_error_chain" "error-chain" "with_backtrace") ("with_device_info" "libc" "hostname" "uname" "with_client_implementation") ("with_debug_meta" "findshlibs" "with_client_implementation") ("with_client_implementation" "reqwest" "im" "url" "with_backtrace") ("with_backtrace" "backtrace" "regex") ("default" "with_client_implementation" "with_panic" "with_failure" "with_log" "with_device_info" "with_rust_info"))))))

(define-public crate-sentry-0.5.1 (c (n "sentry") (v "0.5.1") (d (list (d (n "backtrace") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "error-chain") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.1") (d #t) (k 2)) (d (n "findshlibs") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "hostname") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "im") (r "^10.2.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.40") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.2.2") (d #t) (k 2)) (d (n "regex") (r "^0.2.10") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2.2") (o #t) (d #t) (k 1)) (d (n "sentry-types") (r "^0.3.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.43") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.16") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "url") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.6.3") (f (quote ("v4"))) (d #t) (k 0)))) (h "1a7jaafnzfmbr2igjxrsja9vzkdqlasd0b2p9mf0yxrhlq0hw7qm") (f (quote (("with_shim_api") ("with_rust_info" "rustc_version" "with_client_implementation") ("with_panic" "with_backtrace") ("with_log" "log" "with_backtrace") ("with_failure" "failure" "with_backtrace") ("with_error_chain" "error-chain" "with_backtrace") ("with_device_info" "libc" "hostname" "uname" "with_client_implementation") ("with_debug_meta" "findshlibs" "with_client_implementation") ("with_client_implementation" "reqwest" "im" "url" "with_backtrace") ("with_backtrace" "backtrace" "regex") ("default" "with_client_implementation" "with_panic" "with_failure" "with_log" "with_device_info" "with_rust_info"))))))

(define-public crate-sentry-0.5.2 (c (n "sentry") (v "0.5.2") (d (list (d (n "backtrace") (r "^0.3.8") (o #t) (d #t) (k 0)) (d (n "error-chain") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.1") (d #t) (k 2)) (d (n "findshlibs") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "hostname") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "im") (r "^10.2.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.41") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.2.3") (d #t) (k 2)) (d (n "regex") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.8.6") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2.2") (o #t) (d #t) (k 1)) (d (n "sentry-types") (r "^0.5.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.64") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.19") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "url") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.6.5") (f (quote ("v4"))) (d #t) (k 0)))) (h "0rzyp7s18h0dh1rc8b1f2pw7pkbj8apcwcwi3dhzdq1ixgxry9gb") (f (quote (("with_shim_api") ("with_rust_info" "rustc_version" "with_client_implementation") ("with_panic" "with_backtrace") ("with_log" "log" "with_backtrace") ("with_failure" "failure" "with_backtrace") ("with_error_chain" "error-chain" "with_backtrace") ("with_device_info" "libc" "hostname" "uname" "with_client_implementation") ("with_debug_meta" "findshlibs" "with_client_implementation") ("with_client_implementation" "reqwest" "im" "url" "with_backtrace") ("with_backtrace" "backtrace" "regex") ("default" "with_client_implementation" "with_panic" "with_failure" "with_log" "with_device_info" "with_rust_info"))))))

(define-public crate-sentry-0.5.3 (c (n "sentry") (v "0.5.3") (d (list (d (n "backtrace") (r "^0.3.8") (o #t) (d #t) (k 0)) (d (n "error-chain") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.1") (d #t) (k 2)) (d (n "findshlibs") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "hostname") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "im") (r "^10.2.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.41") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.2.3") (d #t) (k 2)) (d (n "regex") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.8.6") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2.2") (o #t) (d #t) (k 1)) (d (n "sentry-types") (r "^0.5.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.64") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.19") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "url") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.6.5") (f (quote ("v4"))) (d #t) (k 0)))) (h "0cbnppa54dyaqahg6jiqd6izrxv8j2zyg1ir1fp53xghxm7gjshb") (f (quote (("with_shim_api") ("with_rust_info" "rustc_version" "with_client_implementation") ("with_panic" "with_backtrace") ("with_log" "log" "with_backtrace") ("with_failure" "failure" "with_backtrace") ("with_error_chain" "error-chain" "with_backtrace") ("with_device_info" "libc" "hostname" "uname" "with_client_implementation") ("with_debug_meta" "findshlibs" "with_client_implementation") ("with_client_implementation" "reqwest" "im" "url" "with_backtrace") ("with_backtrace" "backtrace" "regex") ("default" "with_client_implementation" "with_panic" "with_failure" "with_log" "with_device_info" "with_rust_info"))))))

(define-public crate-sentry-0.5.4 (c (n "sentry") (v "0.5.4") (d (list (d (n "backtrace") (r "^0.3.8") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "error-chain") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.1") (d #t) (k 2)) (d (n "findshlibs") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "hostname") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "im") (r "^10.2.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.42") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.2.3") (d #t) (k 2)) (d (n "regex") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.8.6") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2.2") (o #t) (d #t) (k 1)) (d (n "sentry-types") (r "^0.5.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.66") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.19") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "url") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.6.5") (f (quote ("v4"))) (d #t) (k 0)))) (h "02hg2g8jqzddn9jd7zcdbkibwzs5p8fpcf0wvbcmqnbkyfzmxsd1") (f (quote (("with_shim_api") ("with_rust_info" "rustc_version" "with_client_implementation") ("with_panic" "with_backtrace") ("with_log" "log" "with_backtrace") ("with_failure" "failure" "with_backtrace") ("with_error_chain" "error-chain" "with_backtrace") ("with_env_logger" "with_log" "env_logger") ("with_device_info" "libc" "hostname" "uname" "with_client_implementation") ("with_debug_meta" "findshlibs" "with_client_implementation") ("with_client_implementation" "reqwest" "im" "url" "with_backtrace") ("with_backtrace" "backtrace" "regex") ("default" "with_client_implementation" "with_panic" "with_failure" "with_log" "with_env_logger" "with_device_info" "with_rust_info"))))))

(define-public crate-sentry-0.6.0 (c (n "sentry") (v "0.6.0") (d (list (d (n "actix-web") (r "^0.6.12") (k 2)) (d (n "backtrace") (r "^0.3.8") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "error-chain") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.1") (d #t) (k 2)) (d (n "findshlibs") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "hostname") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "im") (r "^10.2.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.42") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.2.3") (d #t) (k 2)) (d (n "regex") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.8.6") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2.2") (o #t) (d #t) (k 1)) (d (n "sentry-types") (r "^0.5.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.66") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.19") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "url") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.6.5") (f (quote ("v4"))) (d #t) (k 0)))) (h "04496rrbn7q8ig9rxy8yl86s7ypayp1w2ln3agkrrlh337axhai0") (f (quote (("with_test_support") ("with_rust_info" "rustc_version" "with_client_implementation") ("with_panic" "with_backtrace") ("with_log" "log" "with_backtrace") ("with_failure" "failure" "with_backtrace") ("with_error_chain" "error-chain" "with_backtrace") ("with_env_logger" "with_log" "env_logger") ("with_device_info" "libc" "hostname" "uname" "with_client_implementation") ("with_debug_meta" "findshlibs" "with_client_implementation") ("with_client_implementation" "reqwest" "im" "url" "with_backtrace") ("with_backtrace" "backtrace" "regex") ("default" "with_client_implementation" "with_panic" "with_failure" "with_log" "with_env_logger" "with_device_info" "with_rust_info"))))))

(define-public crate-sentry-0.6.1 (c (n "sentry") (v "0.6.1") (d (list (d (n "actix-web") (r "^0.6.12") (k 2)) (d (n "backtrace") (r "^0.3.8") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "error-chain") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.1") (d #t) (k 2)) (d (n "findshlibs") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "fragile") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "hostname") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "im") (r "^10.2.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.42") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.2.3") (d #t) (k 2)) (d (n "regex") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.8.6") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2.2") (o #t) (d #t) (k 1)) (d (n "sentry-types") (r "^0.5.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.66") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.19") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "url") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.6.5") (f (quote ("v4"))) (d #t) (k 0)))) (h "0wdgrbxm1xfrxfs90pamilw8c2c9mi9h8vihrwm7phj8khza9fr7") (f (quote (("with_test_support") ("with_rust_info" "rustc_version" "with_client_implementation") ("with_panic" "with_backtrace") ("with_log" "log" "with_backtrace") ("with_failure" "failure" "with_backtrace") ("with_error_chain" "error-chain" "with_backtrace") ("with_env_logger" "with_log" "env_logger") ("with_device_info" "libc" "hostname" "uname" "with_client_implementation") ("with_debug_meta" "findshlibs" "with_client_implementation") ("with_client_implementation" "reqwest" "im" "url" "with_backtrace" "fragile") ("with_backtrace" "backtrace" "regex") ("default" "with_client_implementation" "with_panic" "with_failure" "with_log" "with_env_logger" "with_device_info" "with_rust_info"))))))

(define-public crate-sentry-0.7.0 (c (n "sentry") (v "0.7.0") (d (list (d (n "actix-web") (r "^0.6.12") (k 2)) (d (n "backtrace") (r "^0.3.8") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "error-chain") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.1") (d #t) (k 2)) (d (n "findshlibs") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "fragile") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "hostname") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "im") (r "^10.2.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.42") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.2.3") (d #t) (k 2)) (d (n "regex") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.8.6") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2.2") (o #t) (d #t) (k 1)) (d (n "sentry-types") (r "^0.5.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.66") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.19") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "url") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.6.5") (f (quote ("v4"))) (d #t) (k 0)))) (h "18yxry76rlmsrrdkc3izrjznhdvzb04xkj19iwgik7g0mbp8cxhy") (f (quote (("with_test_support") ("with_rust_info" "rustc_version" "with_client_implementation") ("with_panic" "with_backtrace") ("with_log" "log" "with_backtrace") ("with_failure" "failure" "with_backtrace") ("with_error_chain" "error-chain" "with_backtrace") ("with_env_logger" "with_log" "env_logger") ("with_device_info" "libc" "hostname" "uname" "with_client_implementation") ("with_debug_meta" "findshlibs" "with_client_implementation") ("with_client_implementation" "reqwest" "im" "url" "with_backtrace" "fragile") ("with_backtrace" "backtrace" "regex") ("default" "with_client_implementation" "with_panic" "with_failure" "with_log" "with_env_logger" "with_device_info" "with_rust_info"))))))

(define-public crate-sentry-0.8.0 (c (n "sentry") (v "0.8.0") (d (list (d (n "actix-web") (r "^0.6.12") (k 2)) (d (n "backtrace") (r "^0.3.8") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "error-chain") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.1") (d #t) (k 2)) (d (n "findshlibs") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "fragile") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "hostname") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "im") (r "^10.2.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.42") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.3") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.2.3") (d #t) (k 2)) (d (n "rand") (r "^0.5.4") (d #t) (k 0)) (d (n "regex") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.8.6") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2.2") (o #t) (d #t) (k 1)) (d (n "sentry-types") (r "^0.5.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.66") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.19") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "url") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.6.5") (f (quote ("v4"))) (d #t) (k 0)))) (h "04hfg98ig7fkigi3d71ij13yxgrb1yfy5qfiyd90aa6hqc4fdnfc") (f (quote (("with_test_support") ("with_rust_info" "rustc_version" "with_client_implementation") ("with_panic" "with_backtrace") ("with_log" "log" "with_backtrace") ("with_failure" "failure" "with_backtrace") ("with_error_chain" "error-chain" "with_backtrace") ("with_env_logger" "with_log" "env_logger") ("with_device_info" "libc" "hostname" "uname" "with_client_implementation") ("with_debug_meta" "findshlibs" "with_client_implementation") ("with_client_implementation" "reqwest" "im" "url" "with_backtrace" "fragile") ("with_backtrace" "backtrace" "regex") ("default" "with_client_implementation" "with_panic" "with_failure" "with_log" "with_env_logger" "with_device_info" "with_rust_info"))))))

(define-public crate-sentry-0.9.0 (c (n "sentry") (v "0.9.0") (d (list (d (n "actix-web") (r "^0.6.12") (k 2)) (d (n "backtrace") (r "^0.3.8") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "error-chain") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.1") (d #t) (k 2)) (d (n "findshlibs") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "hostname") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "im") (r "^12.0.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.42") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.3") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.2.3") (d #t) (k 2)) (d (n "rand") (r "^0.5.4") (d #t) (k 0)) (d (n "regex") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.8.6") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2.2") (o #t) (d #t) (k 1)) (d (n "sentry-types") (r "^0.5.3") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "url") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.6.5") (f (quote ("v4"))) (d #t) (k 0)))) (h "0jv0xkas3xizsfaf62hmcky3ycyp8vmij52pz5vyx7p8xxk29s0l") (f (quote (("with_test_support") ("with_rust_info" "rustc_version" "with_client_implementation") ("with_panic" "with_backtrace") ("with_log" "log" "with_backtrace") ("with_failure" "failure" "with_backtrace") ("with_error_chain" "error-chain" "with_backtrace") ("with_env_logger" "with_log" "env_logger") ("with_device_info" "libc" "hostname" "uname" "with_client_implementation") ("with_debug_meta" "findshlibs" "with_client_implementation") ("with_client_implementation" "reqwest" "im" "url" "with_backtrace") ("with_backtrace" "backtrace" "regex") ("default" "with_client_implementation" "with_panic" "with_failure" "with_log" "with_env_logger" "with_device_info" "with_rust_info"))))))

(define-public crate-sentry-0.10.0 (c (n "sentry") (v "0.10.0") (d (list (d (n "actix-web") (r "^0.7.7") (k 2)) (d (n "backtrace") (r "^0.3.9") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.5.13") (o #t) (d #t) (k 0)) (d (n "error-chain") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.2") (d #t) (k 2)) (d (n "findshlibs") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "hostname") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "im") (r "^12.0.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.43") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.5") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.2.4") (d #t) (k 2)) (d (n "rand") (r "^0.5.5") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2.3") (o #t) (d #t) (k 1)) (d (n "sentry-types") (r "^0.7.1") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "url") (r "^1.7.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.6.5") (f (quote ("v4"))) (d #t) (k 0)))) (h "00wjjrmjncnsjsafzmwgh472cpb22rsnpqp518bfr3vlkzj3v0vd") (f (quote (("with_test_support") ("with_rust_info" "rustc_version" "with_client_implementation") ("with_panic" "with_backtrace") ("with_log" "log" "with_backtrace") ("with_failure" "failure" "with_backtrace") ("with_error_chain" "error-chain" "with_backtrace") ("with_env_logger" "with_log" "env_logger") ("with_device_info" "libc" "hostname" "uname" "with_client_implementation") ("with_debug_meta" "findshlibs" "with_client_implementation") ("with_client_implementation" "reqwest" "im" "url" "with_backtrace") ("with_backtrace" "backtrace" "regex") ("default" "with_client_implementation" "with_panic" "with_failure" "with_log" "with_env_logger" "with_device_info" "with_rust_info"))))))

(define-public crate-sentry-0.11.0 (c (n "sentry") (v "0.11.0") (d (list (d (n "actix-web") (r "^0.7.7") (k 2)) (d (n "backtrace") (r "^0.3.9") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.5.13") (o #t) (d #t) (k 0)) (d (n "error-chain") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.2") (d #t) (k 2)) (d (n "findshlibs") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "hostname") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "im") (r "^12.0.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.43") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.5") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.2.4") (d #t) (k 2)) (d (n "rand") (r "^0.5.5") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2.3") (o #t) (d #t) (k 1)) (d (n "sentry-types") (r "^0.8.1") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "url") (r "^1.7.1") (o #t) (d #t) (k 0)))) (h "1m5kqy5a048mz08d7ia38hk8ai08a3b6s35iz0yzgvwn4z8rvl1g") (f (quote (("with_test_support") ("with_rust_info" "rustc_version" "with_client_implementation") ("with_panic" "with_backtrace") ("with_log" "log" "with_backtrace") ("with_failure" "failure" "with_backtrace") ("with_error_chain" "error-chain" "with_backtrace") ("with_env_logger" "with_log" "env_logger") ("with_device_info" "libc" "hostname" "uname" "with_client_implementation") ("with_debug_meta" "findshlibs" "with_client_implementation") ("with_client_implementation" "reqwest" "im" "url" "with_backtrace") ("with_backtrace" "backtrace" "regex") ("default" "with_client_implementation" "with_panic" "with_failure" "with_log" "with_env_logger" "with_device_info" "with_rust_info")))) (y #t)))

(define-public crate-sentry-0.11.1 (c (n "sentry") (v "0.11.1") (d (list (d (n "actix-web") (r "^0.7.7") (k 2)) (d (n "backtrace") (r "^0.3.9") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.5.13") (o #t) (d #t) (k 0)) (d (n "error-chain") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.2") (d #t) (k 2)) (d (n "findshlibs") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "hostname") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "im") (r "^12.0.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.43") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.5") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.2.4") (d #t) (k 2)) (d (n "rand") (r "^0.5.5") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2.3") (o #t) (d #t) (k 1)) (d (n "sentry-types") (r "^0.8.1") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "url") (r "^1.7.1") (o #t) (d #t) (k 0)))) (h "01dsw5yzks9q46w47wi9kr07ij75c83519cczlb46q49ngm48vdx") (f (quote (("with_test_support") ("with_rust_info" "rustc_version" "with_client_implementation") ("with_panic" "with_backtrace") ("with_log" "log" "with_backtrace") ("with_failure" "failure" "with_backtrace") ("with_error_chain" "error-chain" "with_backtrace") ("with_env_logger" "with_log" "env_logger") ("with_device_info" "libc" "hostname" "uname" "with_client_implementation") ("with_debug_meta" "findshlibs" "with_client_implementation") ("with_client_implementation" "reqwest" "im" "url" "with_backtrace") ("with_backtrace" "backtrace" "regex") ("default" "with_client_implementation" "with_panic" "with_failure" "with_log" "with_env_logger" "with_device_info" "with_rust_info"))))))

(define-public crate-sentry-0.12.0 (c (n "sentry") (v "0.12.0") (d (list (d (n "actix-web") (r "^0.7.8") (k 2)) (d (n "backtrace") (r "^0.3.9") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.5.13") (o #t) (d #t) (k 0)) (d (n "error-chain") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.2") (d #t) (k 2)) (d (n "findshlibs") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "hostname") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "httpdate") (r "^0.3.2") (d #t) (k 0)) (d (n "im") (r "^12.1.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.43") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.5") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.2.4") (d #t) (k 2)) (d (n "rand") (r "^0.5.5") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2.3") (o #t) (d #t) (k 1)) (d (n "sentry-types") (r "^0.8.1") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "url") (r "^1.7.1") (o #t) (d #t) (k 0)))) (h "1kmyl9wa18hyp54lfiq7l9c8jaj3c02i2nrijnd3k9plkfcswrdm") (f (quote (("with_test_support") ("with_rust_info" "rustc_version" "with_client_implementation") ("with_panic" "with_backtrace") ("with_log" "log" "with_backtrace") ("with_failure" "failure" "with_backtrace") ("with_error_chain" "error-chain" "with_backtrace") ("with_env_logger" "with_log" "env_logger") ("with_device_info" "libc" "hostname" "uname" "with_client_implementation") ("with_debug_to_log" "log") ("with_debug_meta" "findshlibs" "with_client_implementation") ("with_client_implementation" "reqwest" "im" "url" "with_backtrace") ("with_backtrace" "backtrace" "regex") ("default" "with_client_implementation" "with_panic" "with_failure" "with_log" "with_env_logger" "with_device_info" "with_rust_info"))))))

(define-public crate-sentry-0.12.1 (c (n "sentry") (v "0.12.1") (d (list (d (n "actix-web") (r "^0.7.8") (k 2)) (d (n "backtrace") (r "^0.3.9") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.5.13") (o #t) (d #t) (k 0)) (d (n "error-chain") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.3") (d #t) (k 2)) (d (n "findshlibs") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "hostname") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "httpdate") (r "^0.3.2") (d #t) (k 0)) (d (n "im") (r "^12.1.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.43") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.5") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.2.4") (d #t) (k 2)) (d (n "rand") (r "^0.5.5") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2.3") (o #t) (d #t) (k 1)) (d (n "sentry-types") (r "^0.8.1") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "url") (r "^1.7.1") (o #t) (d #t) (k 0)))) (h "026pm6rmxv6g4npbfxm7rial5gj288mqw5l5kb08r3pvfdwvcs3g") (f (quote (("with_test_support") ("with_rust_info" "rustc_version" "with_client_implementation") ("with_panic" "with_backtrace") ("with_log" "log" "with_backtrace") ("with_failure" "failure" "with_backtrace") ("with_error_chain" "error-chain" "with_backtrace") ("with_env_logger" "with_log" "env_logger") ("with_device_info" "libc" "hostname" "uname" "with_client_implementation") ("with_debug_to_log" "log") ("with_debug_meta" "findshlibs" "with_client_implementation") ("with_client_implementation" "reqwest" "im" "url" "with_backtrace") ("with_backtrace" "backtrace" "regex") ("default" "with_client_implementation" "with_panic" "with_failure" "with_log" "with_env_logger" "with_device_info" "with_rust_info"))))))

(define-public crate-sentry-0.13.0 (c (n "sentry") (v "0.13.0") (d (list (d (n "actix-web") (r "^0.7.17") (k 2)) (d (n "backtrace") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "error-chain") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.5") (d #t) (k 2)) (d (n "findshlibs") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "goblin") (r "^0.0.19") (f (quote ("elf32" "elf64" "endian_fd" "std"))) (o #t) (t "cfg(unix)") (k 0)) (d (n "hostname") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "httpdate") (r "^0.3.2") (d #t) (k 0)) (d (n "im") (r "^12.2.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.46") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "pretty_env_logger") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.6.4") (d #t) (k 0)) (d (n "regex") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.9.6") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2.3") (o #t) (d #t) (k 1)) (d (n "sentry-types") (r "^0.9.0") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "url") (r "^1.7.2") (o #t) (d #t) (k 0)))) (h "01sz3lq71bli31x1q8455x7di2ksvrsm8hvj177kfsa8kwfd11cv") (f (quote (("with_test_support") ("with_rust_info" "rustc_version" "with_client_implementation") ("with_panic" "with_backtrace") ("with_log" "log" "with_backtrace") ("with_failure" "failure" "with_backtrace") ("with_error_chain" "error-chain" "with_backtrace") ("with_env_logger" "with_log" "env_logger") ("with_device_info" "libc" "hostname" "uname" "with_client_implementation") ("with_debug_to_log" "log") ("with_debug_meta" "findshlibs" "goblin" "memmap" "with_client_implementation") ("with_client_implementation" "reqwest" "im" "url" "with_backtrace") ("with_backtrace" "backtrace" "regex") ("default" "with_client_implementation" "with_panic" "with_failure" "with_log" "with_env_logger" "with_device_info" "with_rust_info"))))))

(define-public crate-sentry-0.14.0 (c (n "sentry") (v "0.14.0") (d (list (d (n "actix-web") (r "^0.7.18") (k 2)) (d (n "backtrace") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "curl") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "error-chain") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.5") (d #t) (k 2)) (d (n "findshlibs") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "goblin") (r "^0.0.20") (f (quote ("elf32" "elf64" "endian_fd" "std"))) (o #t) (t "cfg(unix)") (k 0)) (d (n "hostname") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "httpdate") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "im") (r "^12.3.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.48") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "pretty_env_logger") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "regex") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.9.9") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2.3") (o #t) (d #t) (k 1)) (d (n "sentry-types") (r "^0.9.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.38") (o #t) (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "url") (r "^1.7.2") (o #t) (d #t) (k 0)))) (h "1d4z0azmfrhh4rqd9awbigs1lxyyyfplad1n1y7h2f9wps93q4wa") (f (quote (("with_test_support") ("with_rust_info" "rustc_version" "with_client_implementation") ("with_reqwest_transport" "reqwest" "httpdate" "with_client_implementation") ("with_panic" "with_backtrace") ("with_log" "log" "with_backtrace") ("with_failure" "failure" "with_backtrace") ("with_error_chain" "error-chain" "with_backtrace") ("with_env_logger" "with_log" "env_logger") ("with_device_info" "libc" "hostname" "uname" "with_client_implementation") ("with_default_transport" "with_reqwest_transport") ("with_debug_to_log" "log") ("with_debug_meta" "findshlibs" "goblin" "memmap" "with_client_implementation") ("with_curl_transport" "curl" "httpdate" "serde_json" "with_client_implementation") ("with_client_implementation" "im" "url" "with_backtrace") ("with_backtrace" "backtrace" "regex") ("default" "with_client_implementation" "with_default_transport" "with_panic" "with_failure" "with_log" "with_env_logger" "with_device_info" "with_rust_info"))))))

(define-public crate-sentry-0.14.1 (c (n "sentry") (v "0.14.1") (d (list (d (n "actix-web") (r "^0.7.18") (k 2)) (d (n "backtrace") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "curl") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "error-chain") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.5") (d #t) (k 2)) (d (n "findshlibs") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "goblin") (r "^0.0.20") (f (quote ("elf32" "elf64" "endian_fd" "std"))) (o #t) (t "cfg(unix)") (k 0)) (d (n "hostname") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "httpdate") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "im") (r "^12.3.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.48") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "pretty_env_logger") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "regex") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.9.9") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2.3") (o #t) (d #t) (k 1)) (d (n "sentry-types") (r "^0.9.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.38") (o #t) (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "url") (r "^1.7.2") (o #t) (d #t) (k 0)))) (h "1apdic3si95sf4j02g9xdz5y4qdd5c1ngyygy5nx24yjsnrwjsbf") (f (quote (("with_test_support") ("with_rust_info" "rustc_version" "with_client_implementation") ("with_reqwest_transport" "reqwest" "httpdate" "with_client_implementation") ("with_panic" "with_backtrace") ("with_log" "log" "with_backtrace") ("with_failure" "failure" "with_backtrace") ("with_error_chain" "error-chain" "with_backtrace") ("with_env_logger" "with_log" "env_logger") ("with_device_info" "libc" "hostname" "uname" "with_client_implementation") ("with_default_transport" "with_reqwest_transport") ("with_debug_to_log" "log") ("with_debug_meta" "findshlibs" "goblin" "memmap" "with_client_implementation") ("with_curl_transport" "curl" "httpdate" "serde_json" "with_client_implementation") ("with_client_implementation" "im" "url" "with_backtrace") ("with_backtrace" "backtrace" "regex") ("default" "with_client_implementation" "with_default_transport" "with_panic" "with_failure" "with_log" "with_env_logger" "with_device_info" "with_rust_info"))))))

(define-public crate-sentry-0.14.2 (c (n "sentry") (v "0.14.2") (d (list (d (n "actix-web") (r "^0.7.18") (k 2)) (d (n "backtrace") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "curl") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "error-chain") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.5") (d #t) (k 2)) (d (n "findshlibs") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "goblin") (r "^0.0.20") (f (quote ("elf32" "elf64" "endian_fd" "std"))) (o #t) (t "cfg(unix)") (k 0)) (d (n "hostname") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "httpdate") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "im") (r "^12.3.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.48") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "pretty_env_logger") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "regex") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.9.9") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2.3") (o #t) (d #t) (k 1)) (d (n "sentry-types") (r "^0.9.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.38") (o #t) (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "url") (r "^1.7.2") (o #t) (d #t) (k 0)))) (h "1iz6mdifj3w3jiy1dd9imgkwbwxkkfa1ldggj8bj0ibm7ydgisnn") (f (quote (("with_test_support") ("with_rust_info" "rustc_version" "with_client_implementation") ("with_reqwest_transport" "reqwest" "httpdate" "with_client_implementation") ("with_panic" "with_backtrace") ("with_log" "log" "with_backtrace") ("with_failure" "failure" "with_backtrace") ("with_error_chain" "error-chain" "with_backtrace") ("with_env_logger" "with_log" "env_logger") ("with_device_info" "libc" "hostname" "uname" "with_client_implementation") ("with_default_transport" "with_reqwest_transport") ("with_debug_to_log" "log") ("with_debug_meta" "findshlibs" "goblin" "memmap" "with_client_implementation") ("with_curl_transport" "curl" "httpdate" "serde_json" "with_client_implementation") ("with_client_implementation" "im" "url" "with_backtrace") ("with_backtrace" "backtrace" "regex") ("default" "with_client_implementation" "with_default_transport" "with_panic" "with_failure" "with_log" "with_env_logger" "with_device_info" "with_rust_info"))))))

(define-public crate-sentry-0.15.0 (c (n "sentry") (v "0.15.0") (d (list (d (n "actix-web") (r "^0.7.18") (k 2)) (d (n "backtrace") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "curl") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "error-chain") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.5") (d #t) (k 2)) (d (n "findshlibs") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "goblin") (r "^0.0.20") (f (quote ("elf32" "elf64" "endian_fd" "std"))) (o #t) (t "cfg(unix)") (k 0)) (d (n "hostname") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "httpdate") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "im") (r "^12.3.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.48") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "pretty_env_logger") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "regex") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.9.9") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2.3") (o #t) (d #t) (k 1)) (d (n "sentry-types") (r "^0.9.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.38") (o #t) (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "url") (r "^1.7.2") (o #t) (d #t) (k 0)))) (h "0czhmg6mm4h2a3azzzzycrkqndyl2wg768f5b423yy7z8lfw7582") (f (quote (("with_test_support") ("with_rust_info" "rustc_version" "with_client_implementation") ("with_reqwest_transport" "reqwest" "httpdate" "with_client_implementation") ("with_panic" "with_backtrace") ("with_log" "log" "with_backtrace") ("with_failure" "failure" "with_backtrace") ("with_error_chain" "error-chain" "with_backtrace") ("with_env_logger" "with_log" "env_logger") ("with_device_info" "libc" "hostname" "uname" "with_client_implementation") ("with_default_transport" "with_reqwest_transport") ("with_debug_to_log" "log") ("with_debug_meta" "findshlibs" "goblin" "memmap" "with_client_implementation") ("with_curl_transport" "curl" "httpdate" "serde_json" "with_client_implementation") ("with_client_implementation" "im" "url" "with_backtrace") ("with_backtrace" "backtrace" "regex") ("default" "with_client_implementation" "with_default_transport" "with_panic" "with_failure" "with_log" "with_env_logger" "with_device_info" "with_rust_info"))))))

(define-public crate-sentry-0.15.1 (c (n "sentry") (v "0.15.1") (d (list (d (n "actix-web") (r "^0.7.18") (k 2)) (d (n "backtrace") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "curl") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "error-chain") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.5") (d #t) (k 2)) (d (n "findshlibs") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "goblin") (r "^0.0.20") (f (quote ("elf32" "elf64" "endian_fd" "std"))) (o #t) (t "cfg(unix)") (k 0)) (d (n "hostname") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "httpdate") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "im") (r "^12.3.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.48") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "pretty_env_logger") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "regex") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.9.9") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2.3") (o #t) (d #t) (k 1)) (d (n "sentry-types") (r "^0.11.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.38") (o #t) (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "url") (r "^1.7.2") (o #t) (d #t) (k 0)))) (h "08yk4sq81nqswlna664qp2s78xniw8pc3n3957wrwsapr3vfrxmn") (f (quote (("with_test_support") ("with_rust_info" "rustc_version" "with_client_implementation") ("with_reqwest_transport" "reqwest" "httpdate" "with_client_implementation") ("with_panic" "with_backtrace") ("with_log" "log" "with_backtrace") ("with_failure" "failure" "with_backtrace") ("with_error_chain" "error-chain" "with_backtrace") ("with_env_logger" "with_log" "env_logger") ("with_device_info" "libc" "hostname" "uname" "with_client_implementation") ("with_default_transport" "with_reqwest_transport") ("with_debug_to_log" "log") ("with_debug_meta" "findshlibs" "goblin" "memmap" "with_client_implementation") ("with_curl_transport" "curl" "httpdate" "serde_json" "with_client_implementation") ("with_client_implementation" "im" "url" "with_backtrace") ("with_backtrace" "backtrace" "regex") ("default" "with_client_implementation" "with_default_transport" "with_panic" "with_failure" "with_log" "with_env_logger" "with_device_info" "with_rust_info"))))))

(define-public crate-sentry-0.15.2 (c (n "sentry") (v "0.15.2") (d (list (d (n "actix-web") (r "^0.7.18") (k 2)) (d (n "backtrace") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "curl") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "error-chain") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.5") (d #t) (k 2)) (d (n "findshlibs") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "goblin") (r "^0.0.20") (f (quote ("elf32" "elf64" "endian_fd" "std"))) (o #t) (t "cfg(unix)") (k 0)) (d (n "hostname") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "httpdate") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "im") (r "^12.3.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.48") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "pretty_env_logger") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "regex") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.9.9") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2.3") (o #t) (d #t) (k 1)) (d (n "sentry-types") (r "^0.11.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.38") (o #t) (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "url") (r "^1.7.2") (o #t) (d #t) (k 0)))) (h "1mffbarnrzs2jfrk9dz4flkjvy8ra31m9s4wm5z03pn6nhij5p00") (f (quote (("with_test_support") ("with_rust_info" "rustc_version" "with_client_implementation") ("with_reqwest_transport" "reqwest" "httpdate" "with_client_implementation") ("with_panic" "with_backtrace") ("with_log" "log" "with_backtrace") ("with_failure" "failure" "with_backtrace") ("with_error_chain" "error-chain" "with_backtrace") ("with_env_logger" "with_log" "env_logger") ("with_device_info" "libc" "hostname" "uname" "with_client_implementation") ("with_default_transport" "with_reqwest_transport") ("with_debug_to_log" "log") ("with_debug_meta" "findshlibs" "goblin" "memmap" "with_client_implementation") ("with_curl_transport" "curl" "httpdate" "serde_json" "with_client_implementation") ("with_client_implementation" "im" "url" "with_backtrace") ("with_backtrace" "backtrace" "regex") ("default" "with_client_implementation" "with_default_transport" "with_panic" "with_failure" "with_log" "with_env_logger" "with_device_info" "with_rust_info"))))))

(define-public crate-sentry-0.15.3 (c (n "sentry") (v "0.15.3") (d (list (d (n "actix-web") (r "^0.7.19") (k 2)) (d (n "backtrace") (r "^0.3.15") (o #t) (d #t) (k 0)) (d (n "curl") (r "^0.4.21") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "error-chain") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.5") (d #t) (k 2)) (d (n "findshlibs") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "goblin") (r "^0.0.22") (f (quote ("elf32" "elf64" "endian_fd" "std"))) (o #t) (t "cfg(unix)") (k 0)) (d (n "hostname") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "httpdate") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "im") (r "^12.3.4") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.51") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "pretty_env_logger") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "regex") (r "^1.1.6") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.9.15") (o #t) (k 0)) (d (n "rustc_version") (r "^0.2.3") (o #t) (d #t) (k 1)) (d (n "sentry-types") (r "^0.11.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (o #t) (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "url") (r "^1.7.2") (o #t) (d #t) (k 0)))) (h "0g8grm7c6ffzrwdb2jbzypspw93qd8646nmvsh3bwqyl9qp5mcv1") (f (quote (("with_test_support") ("with_rustls" "reqwest/rustls-tls") ("with_rust_info" "rustc_version" "with_client_implementation") ("with_reqwest_transport" "reqwest" "httpdate" "with_client_implementation") ("with_panic" "with_backtrace") ("with_native_tls" "reqwest/default-tls") ("with_log" "log" "with_backtrace") ("with_failure" "failure" "with_backtrace") ("with_error_chain" "error-chain" "with_backtrace") ("with_env_logger" "with_log" "env_logger") ("with_device_info" "libc" "hostname" "uname" "with_client_implementation") ("with_default_transport" "with_reqwest_transport") ("with_debug_to_log" "log") ("with_debug_meta" "findshlibs" "goblin" "memmap" "with_client_implementation") ("with_curl_transport" "curl" "httpdate" "serde_json" "with_client_implementation") ("with_client_implementation" "im" "url" "with_backtrace") ("with_backtrace" "backtrace" "regex") ("default" "with_client_implementation" "with_default_transport" "with_panic" "with_failure" "with_log" "with_env_logger" "with_device_info" "with_rust_info" "with_native_tls"))))))

(define-public crate-sentry-0.15.4 (c (n "sentry") (v "0.15.4") (d (list (d (n "actix-web") (r "^0.7.19") (k 2)) (d (n "backtrace") (r "^0.3.15") (o #t) (d #t) (k 0)) (d (n "curl") (r "^0.4.21") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "error-chain") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.5") (d #t) (k 2)) (d (n "findshlibs") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "goblin") (r "^0.0.22") (f (quote ("elf32" "elf64" "endian_fd" "std"))) (o #t) (t "cfg(unix)") (k 0)) (d (n "hostname") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "httpdate") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "im") (r "^12.3.4") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.51") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "pretty_env_logger") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "regex") (r "^1.1.6") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.9.15") (o #t) (k 0)) (d (n "rustc_version") (r "^0.2.3") (o #t) (d #t) (k 1)) (d (n "sentry-types") (r "^0.11.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (o #t) (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "url") (r "^1.7.2") (o #t) (d #t) (k 0)))) (h "12fqpscr515wr5npwrgzsa27w0854zqml9yil05nrbwzza6lb8vz") (f (quote (("with_test_support") ("with_rustls" "reqwest/rustls-tls") ("with_rust_info" "rustc_version" "with_client_implementation") ("with_reqwest_transport" "reqwest" "httpdate" "with_client_implementation") ("with_panic" "with_backtrace") ("with_native_tls" "reqwest/default-tls") ("with_log" "log" "with_backtrace") ("with_failure" "failure" "with_backtrace") ("with_error_chain" "error-chain" "with_backtrace") ("with_env_logger" "with_log" "env_logger") ("with_device_info" "libc" "hostname" "uname" "with_client_implementation") ("with_default_transport" "with_reqwest_transport") ("with_debug_to_log" "log") ("with_debug_meta" "findshlibs" "goblin" "memmap" "with_client_implementation") ("with_curl_transport" "curl" "httpdate" "serde_json" "with_client_implementation") ("with_client_implementation" "im" "url" "with_backtrace") ("with_backtrace" "backtrace" "regex") ("default" "with_client_implementation" "with_default_transport" "with_panic" "with_failure" "with_log" "with_env_logger" "with_device_info" "with_rust_info" "with_native_tls"))))))

(define-public crate-sentry-0.15.5 (c (n "sentry") (v "0.15.5") (d (list (d (n "actix-web") (r "^0.7.19") (k 2)) (d (n "backtrace") (r "^0.3.15") (o #t) (d #t) (k 0)) (d (n "curl") (r "^0.4.21") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "error-chain") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.5") (d #t) (k 2)) (d (n "findshlibs") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "goblin") (r "^0.0.22") (f (quote ("elf32" "elf64" "endian_fd" "std"))) (o #t) (t "cfg(unix)") (k 0)) (d (n "hostname") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "httpdate") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "im") (r "^12.3.4") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.51") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "pretty_env_logger") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "regex") (r "^1.1.6") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.9.15") (o #t) (k 0)) (d (n "rustc_version") (r "^0.2.3") (o #t) (d #t) (k 1)) (d (n "sentry-types") (r "^0.11.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (o #t) (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "url") (r "^1.7.2") (o #t) (d #t) (k 0)))) (h "08lwnia7pavq9kfc35429vz67ysr9scsqzb962q4fax1np69s4lm") (f (quote (("with_test_support") ("with_rustls" "reqwest/rustls-tls") ("with_rust_info" "rustc_version" "with_client_implementation") ("with_reqwest_transport" "reqwest" "httpdate" "with_client_implementation") ("with_panic" "with_backtrace") ("with_native_tls" "reqwest/default-tls") ("with_log" "log" "with_backtrace") ("with_failure" "failure" "with_backtrace") ("with_error_chain" "error-chain" "with_backtrace") ("with_env_logger" "with_log" "env_logger") ("with_device_info" "libc" "hostname" "uname" "with_client_implementation") ("with_default_transport" "with_reqwest_transport") ("with_debug_to_log" "log") ("with_debug_meta" "findshlibs" "goblin" "memmap" "with_client_implementation") ("with_curl_transport" "curl" "httpdate" "serde_json" "with_client_implementation") ("with_client_implementation" "im" "url" "with_backtrace") ("with_backtrace" "backtrace" "regex") ("default" "with_client_implementation" "with_default_transport" "with_panic" "with_failure" "with_log" "with_env_logger" "with_device_info" "with_rust_info" "with_native_tls"))))))

(define-public crate-sentry-0.16.0 (c (n "sentry") (v "0.16.0") (d (list (d (n "actix-web") (r "^0.7.19") (k 2)) (d (n "backtrace") (r "^0.3.15") (o #t) (d #t) (k 0)) (d (n "curl") (r "^0.4.21") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "error-chain") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.5") (d #t) (k 2)) (d (n "findshlibs") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "goblin") (r "^0.0.22") (f (quote ("elf32" "elf64" "endian_fd" "std"))) (o #t) (t "cfg(unix)") (k 0)) (d (n "hostname") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "httpdate") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "im") (r "^12.3.4") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.51") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "pretty_env_logger") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "regex") (r "^1.1.6") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.9.15") (o #t) (k 0)) (d (n "rustc_version") (r "^0.2.3") (o #t) (d #t) (k 1)) (d (n "sentry-types") (r "^0.11.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (o #t) (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "url") (r "^1.7.2") (o #t) (d #t) (k 0)))) (h "0h618p3yn9hizq63i1xz92w86q27kpjc04j6kk6sypw7ksxmz72h") (f (quote (("with_test_support") ("with_rustls" "reqwest/rustls-tls") ("with_rust_info" "rustc_version" "with_client_implementation") ("with_reqwest_transport" "reqwest" "httpdate" "with_client_implementation") ("with_panic" "with_backtrace") ("with_native_tls" "reqwest/default-tls") ("with_log" "log" "with_backtrace") ("with_failure" "failure" "with_backtrace") ("with_error_chain" "error-chain" "with_backtrace") ("with_env_logger" "with_log" "env_logger") ("with_device_info" "libc" "hostname" "uname" "with_client_implementation") ("with_default_transport" "with_reqwest_transport") ("with_debug_to_log" "log") ("with_debug_meta" "findshlibs" "goblin" "memmap" "with_client_implementation") ("with_curl_transport" "curl" "httpdate" "serde_json" "with_client_implementation") ("with_client_implementation" "im" "url" "with_backtrace") ("with_backtrace" "backtrace" "regex") ("default" "with_client_implementation" "with_default_transport" "with_panic" "with_failure" "with_log" "with_env_logger" "with_device_info" "with_rust_info" "with_native_tls"))))))

(define-public crate-sentry-0.17.0 (c (n "sentry") (v "0.17.0") (d (list (d (n "actix-web") (r "^0.7.19") (k 2)) (d (n "backtrace") (r "^0.3.15") (o #t) (d #t) (k 0)) (d (n "curl") (r "^0.4.21") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "error-chain") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.5") (d #t) (k 2)) (d (n "findshlibs") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "goblin") (r "^0.0.22") (f (quote ("elf32" "elf64" "endian_fd" "std"))) (o #t) (t "cfg(unix)") (k 0)) (d (n "hostname") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "httpdate") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "im") (r "^12.3.4") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.51") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "pretty_env_logger") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "regex") (r "^1.1.6") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.9.15") (o #t) (k 0)) (d (n "rustc_version") (r "^0.2.3") (o #t) (d #t) (k 1)) (d (n "sentry-types") (r "^0.11.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (o #t) (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "url") (r "^1.7.2") (o #t) (d #t) (k 0)))) (h "0jxzpwvfcaap443k7i1dkp8fam5424wqzshvkzj9p5bc627s2kpy") (f (quote (("with_test_support") ("with_rustls" "reqwest/rustls-tls") ("with_rust_info" "rustc_version" "with_client_implementation") ("with_reqwest_transport" "reqwest" "httpdate" "with_client_implementation") ("with_panic" "with_backtrace") ("with_native_tls" "reqwest/default-tls") ("with_log" "log" "with_backtrace") ("with_failure" "failure" "with_backtrace") ("with_error_chain" "error-chain" "with_backtrace") ("with_env_logger" "with_log" "env_logger") ("with_device_info" "libc" "hostname" "uname" "with_client_implementation") ("with_default_transport" "with_reqwest_transport") ("with_debug_to_log" "log") ("with_debug_meta" "findshlibs" "goblin" "memmap" "with_client_implementation") ("with_curl_transport" "curl" "httpdate" "serde_json" "with_client_implementation") ("with_client_implementation" "im" "url" "with_backtrace") ("with_backtrace" "backtrace" "regex") ("default" "with_client_implementation" "with_default_transport" "with_panic" "with_failure" "with_log" "with_env_logger" "with_device_info" "with_rust_info" "with_native_tls"))))))

(define-public crate-sentry-0.18.0 (c (n "sentry") (v "0.18.0") (d (list (d (n "actix-web") (r "^0.7.19") (k 2)) (d (n "backtrace") (r "^0.3.44") (o #t) (d #t) (k 0)) (d (n "curl") (r "^0.4.25") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "error-chain") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.6") (d #t) (k 2)) (d (n "findshlibs") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "hostname") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "httpdate") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "im") (r "^14.2.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.10.1") (f (quote ("blocking" "json"))) (o #t) (k 0)) (d (n "rustc_version") (r "^0.2.3") (o #t) (d #t) (k 1)) (d (n "sentry-types") (r "^0.14.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)))) (h "0kmd3h1x7n3gsww1a80v8qbqsc8n17h962gr9v8i0x3rb31cdqgg") (f (quote (("with_test_support") ("with_rustls" "reqwest/rustls-tls") ("with_rust_info" "rustc_version" "with_client_implementation") ("with_reqwest_transport" "reqwest" "httpdate" "with_client_implementation") ("with_panic" "with_backtrace") ("with_native_tls" "reqwest/default-tls") ("with_log" "log" "with_backtrace") ("with_failure" "failure" "with_backtrace") ("with_error_chain" "error-chain" "with_backtrace") ("with_env_logger" "with_log" "env_logger") ("with_device_info" "libc" "hostname" "uname" "with_client_implementation") ("with_default_transport" "with_reqwest_transport" "with_native_tls") ("with_debug_to_log" "log") ("with_debug_meta" "findshlibs" "with_client_implementation") ("with_curl_transport" "curl" "httpdate" "serde_json" "with_client_implementation") ("with_client_implementation" "im" "url" "with_backtrace" "rand") ("with_backtrace" "backtrace" "regex") ("default" "with_client_implementation" "with_default_transport" "with_panic" "with_failure" "with_device_info" "with_rust_info"))))))

(define-public crate-sentry-0.18.1 (c (n "sentry") (v "0.18.1") (d (list (d (n "actix-web") (r "^0.7.19") (k 2)) (d (n "backtrace") (r "^0.3.44") (o #t) (d #t) (k 0)) (d (n "curl") (r "^0.4.25") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "error-chain") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.6") (d #t) (k 2)) (d (n "findshlibs") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "hostname") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "httpdate") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "im") (r "^14.2.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3.4") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.10.1") (f (quote ("blocking" "json"))) (o #t) (k 0)) (d (n "rustc_version") (r "^0.2.3") (o #t) (d #t) (k 1)) (d (n "sentry-types") (r "^0.14.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (o #t) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)))) (h "1h7fr4gd2zzarqynrya7dlh20vpcv98q86najj9hy2hvzhivf0cb") (f (quote (("with_test_support") ("with_rustls" "reqwest/rustls-tls") ("with_rust_info" "rustc_version" "with_client_implementation") ("with_reqwest_transport" "reqwest" "httpdate" "with_client_implementation") ("with_panic" "with_backtrace") ("with_native_tls" "reqwest/default-tls") ("with_log" "log" "with_backtrace") ("with_failure" "failure" "with_backtrace") ("with_error_chain" "error-chain" "with_backtrace") ("with_env_logger" "with_log" "env_logger") ("with_device_info" "libc" "hostname" "uname" "with_client_implementation") ("with_default_transport" "with_reqwest_transport" "with_native_tls") ("with_debug_to_log" "log") ("with_debug_meta" "findshlibs" "with_client_implementation") ("with_curl_transport" "curl" "httpdate" "serde_json" "with_client_implementation") ("with_client_implementation" "im" "url" "with_backtrace" "rand") ("with_backtrace" "backtrace" "regex") ("default" "with_client_implementation" "with_default_transport" "with_panic" "with_failure" "with_device_info" "with_rust_info"))))))

(define-public crate-sentry-0.19.0 (c (n "sentry") (v "0.19.0") (d (list (d (n "curl_") (r "^0.4.25") (o #t) (d #t) (k 0) (p "curl")) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "http-client") (r "^3.0") (o #t) (d #t) (k 0)) (d (n "httpdate") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "log_") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "log")) (d (n "reqwest_") (r "^0.10.1") (f (quote ("blocking" "json"))) (o #t) (k 0) (p "reqwest")) (d (n "sentry-anyhow") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "sentry-backtrace") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "sentry-contexts") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "sentry-core") (r "^0.19.0") (f (quote ("client"))) (d #t) (k 0)) (d (n "sentry-debug-images") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "sentry-error-chain") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "sentry-failure") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "sentry-log") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "sentry-panic") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "sentry-slog") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "surf_") (r "=2.0.0-alpha.4") (o #t) (d #t) (k 0) (p "surf")))) (h "0aw1hj7wmgq9q3zh13m8zccsnmjixpgafsvwg2jg0b3bgqid3w4v") (f (quote (("with_test_support" "test") ("with_surf_transport" "surf") ("with_rustls" "rustls") ("with_rust_info" "contexts") ("with_reqwest_transport" "reqwest") ("with_panic" "panic") ("with_native_tls" "native-tls") ("with_failure" "failure") ("with_error_chain" "error-chain") ("with_device_info" "contexts") ("with_default_transport" "transport") ("with_debug_to_log" "debug-logs") ("with_debug_meta" "debug-images") ("with_curl_transport" "curl") ("with_client_implementation") ("with_backtrace" "backtrace") ("transport" "reqwest" "native-tls") ("test" "sentry-core/test") ("surf" "surf_" "httpdate" "http-client" "futures") ("slog" "sentry-slog") ("rustls" "reqwest_/rustls-tls") ("reqwest" "reqwest_" "httpdate") ("panic" "sentry-panic") ("native-tls" "reqwest_/default-tls") ("log" "sentry-log") ("failure" "sentry-failure") ("error-chain" "sentry-error-chain") ("default" "backtrace" "contexts" "failure" "panic" "transport") ("debug-logs" "log_" "sentry-core/debug-logs") ("debug-images" "sentry-debug-images") ("curl" "curl_" "httpdate" "serde_json") ("contexts" "sentry-contexts") ("backtrace" "sentry-backtrace") ("anyhow" "sentry-anyhow"))))))

(define-public crate-sentry-0.19.1 (c (n "sentry") (v "0.19.1") (d (list (d (n "curl_") (r "^0.4.25") (o #t) (d #t) (k 0) (p "curl")) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "http-client") (r "^3.0") (o #t) (d #t) (k 0)) (d (n "httpdate") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "log_") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "log")) (d (n "reqwest_") (r "^0.10.1") (f (quote ("blocking" "json"))) (o #t) (k 0) (p "reqwest")) (d (n "sentry-anyhow") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "sentry-backtrace") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "sentry-contexts") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "sentry-core") (r "^0.19.1") (f (quote ("client"))) (d #t) (k 0)) (d (n "sentry-debug-images") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "sentry-error-chain") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "sentry-failure") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "sentry-log") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "sentry-panic") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "sentry-slog") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "surf_") (r "=2.0.0-alpha.4") (o #t) (d #t) (k 0) (p "surf")))) (h "1jqhhfgkm9r8qczkgcw3963v6x70zfd0isdb511zr1d7qiz95l7b") (f (quote (("with_test_support" "test") ("with_surf_transport" "surf") ("with_rustls" "rustls") ("with_rust_info" "contexts") ("with_reqwest_transport" "reqwest") ("with_panic" "panic") ("with_native_tls" "native-tls") ("with_failure" "failure") ("with_error_chain" "error-chain") ("with_device_info" "contexts") ("with_default_transport" "transport") ("with_debug_to_log" "debug-logs") ("with_debug_meta" "debug-images") ("with_curl_transport" "curl") ("with_client_implementation") ("with_backtrace" "backtrace") ("transport" "reqwest" "native-tls") ("test" "sentry-core/test") ("surf" "surf_" "httpdate" "http-client" "futures") ("slog" "sentry-slog") ("rustls" "reqwest_/rustls-tls") ("reqwest" "reqwest_" "httpdate") ("panic" "sentry-panic") ("native-tls" "reqwest_/default-tls") ("log" "sentry-log") ("failure" "sentry-failure") ("error-chain" "sentry-error-chain") ("default" "backtrace" "contexts" "failure" "panic" "transport") ("debug-logs" "log_" "sentry-core/debug-logs") ("debug-images" "sentry-debug-images") ("curl" "curl_" "httpdate" "serde_json") ("contexts" "sentry-contexts") ("backtrace" "sentry-backtrace") ("anyhow" "sentry-anyhow"))))))

(define-public crate-sentry-0.20.0 (c (n "sentry") (v "0.20.0") (d (list (d (n "curl_") (r "^0.4.25") (o #t) (d #t) (k 0) (p "curl")) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "http-client") (r "^3.0") (o #t) (d #t) (k 0)) (d (n "httpdate") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "log_") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "log")) (d (n "reqwest_") (r "^0.10.1") (f (quote ("blocking" "json"))) (o #t) (k 0) (p "reqwest")) (d (n "sentry-anyhow") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "sentry-backtrace") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "sentry-contexts") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "sentry-core") (r "^0.20.0") (f (quote ("client"))) (d #t) (k 0)) (d (n "sentry-debug-images") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "sentry-error-chain") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "sentry-failure") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "sentry-log") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "sentry-panic") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "sentry-slog") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "surf_") (r "=2.0.0-alpha.4") (o #t) (d #t) (k 0) (p "surf")))) (h "0hbs90zqnf7cziqrkkdnsn3q576yhhazv1zn2cpr5pdx5fsr50wq") (f (quote (("with_test_support" "test") ("with_surf_transport" "surf") ("with_rustls" "rustls") ("with_rust_info" "contexts") ("with_reqwest_transport" "reqwest") ("with_panic" "panic") ("with_native_tls" "native-tls") ("with_failure" "failure") ("with_error_chain" "error-chain") ("with_device_info" "contexts") ("with_default_transport" "transport") ("with_debug_to_log" "debug-logs") ("with_debug_meta" "debug-images") ("with_curl_transport" "curl") ("with_client_implementation") ("with_backtrace" "backtrace") ("transport" "reqwest" "native-tls") ("test" "sentry-core/test") ("surf" "surf_" "httpdate" "http-client" "futures") ("slog" "sentry-slog") ("rustls" "reqwest_/rustls-tls") ("reqwest" "reqwest_" "httpdate") ("panic" "sentry-panic") ("native-tls" "reqwest_/default-tls") ("log" "sentry-log") ("failure" "sentry-failure") ("error-chain" "sentry-error-chain") ("env_logger" "sentry-log" "sentry-log/env_logger") ("default" "backtrace" "contexts" "failure" "panic" "transport") ("debug-logs" "log_" "sentry-core/debug-logs") ("debug-images" "sentry-debug-images") ("curl" "curl_" "httpdate" "serde_json") ("contexts" "sentry-contexts") ("backtrace" "sentry-backtrace") ("anyhow" "sentry-anyhow"))))))

(define-public crate-sentry-0.20.1 (c (n "sentry") (v "0.20.1") (d (list (d (n "curl_") (r "^0.4.25") (o #t) (d #t) (k 0) (p "curl")) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "http-client") (r "^3.0") (o #t) (d #t) (k 0)) (d (n "httpdate") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "log_") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "log")) (d (n "reqwest_") (r "^0.10.8") (f (quote ("blocking" "json"))) (o #t) (k 0) (p "reqwest")) (d (n "sentry-anyhow") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "sentry-backtrace") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "sentry-contexts") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "sentry-core") (r "^0.20.1") (f (quote ("client"))) (d #t) (k 0)) (d (n "sentry-debug-images") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "sentry-error-chain") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "sentry-failure") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "sentry-log") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "sentry-panic") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "sentry-slog") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "surf_") (r "=2.0.0-alpha.4") (o #t) (d #t) (k 0) (p "surf")))) (h "0jlfv4y277qwyv1551w3s83fkbayk0mzwr0nz5p0b7qjinr8akhl") (f (quote (("with_test_support" "test") ("with_surf_transport" "surf") ("with_rustls" "rustls") ("with_rust_info" "contexts") ("with_reqwest_transport" "reqwest") ("with_panic" "panic") ("with_native_tls" "native-tls") ("with_failure" "failure") ("with_error_chain" "error-chain") ("with_device_info" "contexts") ("with_default_transport" "transport") ("with_debug_to_log" "debug-logs") ("with_debug_meta" "debug-images") ("with_curl_transport" "curl") ("with_client_implementation") ("with_backtrace" "backtrace") ("transport" "reqwest" "native-tls") ("test" "sentry-core/test") ("surf" "surf_" "httpdate" "http-client" "futures") ("slog" "sentry-slog") ("rustls" "reqwest_/rustls-tls") ("reqwest" "reqwest_" "httpdate") ("panic" "sentry-panic") ("native-tls" "reqwest_/default-tls") ("log" "sentry-log") ("failure" "sentry-failure") ("error-chain" "sentry-error-chain") ("env_logger" "sentry-log" "sentry-log/env_logger") ("default" "backtrace" "contexts" "failure" "panic" "transport") ("debug-logs" "log_" "sentry-core/debug-logs") ("debug-images" "sentry-debug-images") ("curl" "curl_" "httpdate" "serde_json") ("contexts" "sentry-contexts") ("backtrace" "sentry-backtrace") ("anyhow" "sentry-anyhow"))))))

(define-public crate-sentry-0.21.0 (c (n "sentry") (v "0.21.0") (d (list (d (n "curl_") (r "^0.4.25") (o #t) (d #t) (k 0) (p "curl")) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "httpdate") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "log_") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "log")) (d (n "reqwest_") (r "^0.10.8") (f (quote ("blocking" "json"))) (o #t) (k 0) (p "reqwest")) (d (n "sentry-anyhow") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "sentry-backtrace") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "sentry-contexts") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "sentry-core") (r "^0.21.0") (f (quote ("client"))) (d #t) (k 0)) (d (n "sentry-debug-images") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "sentry-error-chain") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "sentry-failure") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "sentry-log") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "sentry-panic") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "sentry-slog") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "surf_") (r "^2.0.0") (o #t) (d #t) (k 0) (p "surf")))) (h "0vs6x6q65cypcnfd90hrwl4rw5qv57lii0rnkbbfykn88c1ynfwk") (f (quote (("transport" "reqwest" "native-tls") ("test" "sentry-core/test") ("surf" "surf_" "httpdate" "futures") ("slog" "sentry-slog") ("rustls" "reqwest_/rustls-tls") ("reqwest" "reqwest_" "httpdate") ("panic" "sentry-panic") ("native-tls" "reqwest_/default-tls") ("log" "sentry-log") ("failure" "sentry-failure") ("error-chain" "sentry-error-chain") ("default" "backtrace" "contexts" "panic" "transport") ("debug-logs" "log_" "sentry-core/debug-logs") ("debug-images" "sentry-debug-images") ("curl" "curl_" "httpdate" "serde_json") ("contexts" "sentry-contexts") ("backtrace" "sentry-backtrace") ("anyhow" "sentry-anyhow"))))))

(define-public crate-sentry-0.22.0 (c (n "sentry") (v "0.22.0") (d (list (d (n "curl_") (r "^0.4.25") (o #t) (d #t) (k 0) (p "curl")) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "httpdate") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "log_") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "log")) (d (n "reqwest_") (r "^0.11") (f (quote ("blocking" "json"))) (o #t) (k 0) (p "reqwest")) (d (n "sentry-anyhow") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "sentry-backtrace") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "sentry-contexts") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "sentry-core") (r "^0.22.0") (f (quote ("client"))) (d #t) (k 0)) (d (n "sentry-debug-images") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "sentry-log") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "sentry-panic") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "sentry-slog") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "surf_") (r "^2.0.0") (o #t) (d #t) (k 0) (p "surf")))) (h "1d22kgsvj5pj0x6n1vx70n5ygnh1bfic76pgw8c606670xdl4z7j") (f (quote (("transport" "reqwest" "native-tls") ("test" "sentry-core/test") ("surf" "surf_" "httpdate" "futures") ("slog" "sentry-slog") ("rustls" "reqwest_/rustls-tls") ("reqwest" "reqwest_" "httpdate") ("panic" "sentry-panic") ("native-tls" "reqwest_/default-tls") ("log" "sentry-log") ("default" "backtrace" "contexts" "panic" "transport") ("debug-logs" "log_" "sentry-core/debug-logs") ("debug-images" "sentry-debug-images") ("curl" "curl_" "httpdate" "serde_json") ("contexts" "sentry-contexts") ("backtrace" "sentry-backtrace") ("anyhow" "sentry-anyhow"))))))

(define-public crate-sentry-0.23.0 (c (n "sentry") (v "0.23.0") (d (list (d (n "curl_") (r "^0.4.25") (o #t) (d #t) (k 0) (p "curl")) (d (n "httpdate") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "log_") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "log")) (d (n "reqwest_") (r "^0.11") (f (quote ("blocking" "json"))) (o #t) (k 0) (p "reqwest")) (d (n "sentry-anyhow") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "sentry-backtrace") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "sentry-contexts") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "sentry-core") (r "^0.23.0") (f (quote ("client"))) (d #t) (k 0)) (d (n "sentry-debug-images") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "sentry-log") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "sentry-panic") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "sentry-slog") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "sentry-tracing") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "surf_") (r "^2.0.0") (o #t) (d #t) (k 0) (p "surf")) (d (n "tokio") (r "^1.0") (f (quote ("rt"))) (d #t) (k 0)))) (h "0vx2yg1w3vf1nynlm6wl8cyy37qn2mp17dzhpkzn0v62frprnssl") (f (quote (("transport" "reqwest" "native-tls") ("tracing" "sentry-tracing") ("test" "sentry-core/test") ("surf" "surf_" "httpdate") ("slog" "sentry-slog") ("rustls" "reqwest_/rustls-tls") ("reqwest" "reqwest_" "httpdate") ("panic" "sentry-panic") ("native-tls" "reqwest_/default-tls") ("log" "sentry-log") ("default" "backtrace" "contexts" "panic" "transport") ("debug-logs" "log_" "sentry-core/debug-logs") ("debug-images" "sentry-debug-images") ("curl" "curl_" "httpdate" "serde_json") ("contexts" "sentry-contexts") ("backtrace" "sentry-backtrace") ("anyhow" "sentry-anyhow"))))))

(define-public crate-sentry-0.24.1 (c (n "sentry") (v "0.24.1") (d (list (d (n "actix-web") (r "^3") (k 2)) (d (n "anyhow_") (r "^1.0.30") (d #t) (k 2) (p "anyhow")) (d (n "curl_") (r "^0.4.25") (o #t) (d #t) (k 0) (p "curl")) (d (n "httpdate") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "log_") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "log")) (d (n "log_") (r "^0.4.8") (f (quote ("std"))) (d #t) (k 2) (p "log")) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "reqwest_") (r "^0.11") (f (quote ("blocking" "json"))) (o #t) (k 0) (p "reqwest")) (d (n "sentry-anyhow") (r "^0.24.1") (o #t) (d #t) (k 0)) (d (n "sentry-backtrace") (r "^0.24.1") (o #t) (d #t) (k 0)) (d (n "sentry-contexts") (r "^0.24.1") (o #t) (d #t) (k 0)) (d (n "sentry-core") (r "^0.24.1") (f (quote ("client"))) (d #t) (k 0)) (d (n "sentry-debug-images") (r "^0.24.1") (o #t) (d #t) (k 0)) (d (n "sentry-log") (r "^0.24.1") (o #t) (d #t) (k 0)) (d (n "sentry-panic") (r "^0.24.1") (o #t) (d #t) (k 0)) (d (n "sentry-slog") (r "^0.24.1") (o #t) (d #t) (k 0)) (d (n "sentry-tower") (r "^0.24.1") (o #t) (d #t) (k 0)) (d (n "sentry-tracing") (r "^0.24.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "slog_") (r "^2.5.2") (d #t) (k 2) (p "slog")) (d (n "surf_") (r "^2.0.0") (o #t) (k 0) (p "surf")) (d (n "tokio") (r "^1.0") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros"))) (d #t) (k 2)) (d (n "tower_") (r "^0.4") (f (quote ("util"))) (d #t) (k 2) (p "tower")) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log"))) (d #t) (k 2)) (d (n "tracing_") (r "^0.1") (d #t) (k 2) (p "tracing")))) (h "0p2lm0xidf8xjcywla9z08v2irv0qm3ghilr3w0ly7xryr9ka3k1") (f (quote (("transport" "reqwest" "native-tls") ("tracing" "sentry-tracing") ("tower" "sentry-tower") ("test" "sentry-core/test") ("surf-h1" "surf_/h1-client" "httpdate") ("surf" "surf_/curl-client" "httpdate" "tokio") ("slog" "sentry-slog") ("rustls" "reqwest_/rustls-tls") ("reqwest" "reqwest_" "httpdate" "tokio") ("panic" "sentry-panic") ("native-tls" "reqwest_/default-tls") ("log" "sentry-log") ("default" "backtrace" "contexts" "panic" "transport") ("debug-logs" "log_" "sentry-core/debug-logs") ("debug-images" "sentry-debug-images") ("curl" "curl_" "httpdate" "serde_json" "tokio") ("contexts" "sentry-contexts") ("backtrace" "sentry-backtrace") ("anyhow" "sentry-anyhow"))))))

(define-public crate-sentry-0.24.2 (c (n "sentry") (v "0.24.2") (d (list (d (n "actix-web") (r "^3") (k 2)) (d (n "anyhow_") (r "^1.0.30") (d #t) (k 2) (p "anyhow")) (d (n "curl_") (r "^0.4.25") (o #t) (d #t) (k 0) (p "curl")) (d (n "httpdate") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "log_") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "log")) (d (n "log_") (r "^0.4.8") (f (quote ("std"))) (d #t) (k 2) (p "log")) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "reqwest_") (r "^0.11") (f (quote ("blocking" "json"))) (o #t) (k 0) (p "reqwest")) (d (n "sentry-anyhow") (r "^0.24.2") (o #t) (d #t) (k 0)) (d (n "sentry-backtrace") (r "^0.24.2") (o #t) (d #t) (k 0)) (d (n "sentry-contexts") (r "^0.24.2") (o #t) (d #t) (k 0)) (d (n "sentry-core") (r "^0.24.2") (f (quote ("client"))) (d #t) (k 0)) (d (n "sentry-debug-images") (r "^0.24.2") (o #t) (d #t) (k 0)) (d (n "sentry-log") (r "^0.24.2") (o #t) (d #t) (k 0)) (d (n "sentry-panic") (r "^0.24.2") (o #t) (d #t) (k 0)) (d (n "sentry-slog") (r "^0.24.2") (o #t) (d #t) (k 0)) (d (n "sentry-tower") (r "^0.24.2") (o #t) (d #t) (k 0)) (d (n "sentry-tracing") (r "^0.24.2") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "slog_") (r "^2.5.2") (d #t) (k 2) (p "slog")) (d (n "surf_") (r "^2.0.0") (o #t) (k 0) (p "surf")) (d (n "tokio") (r "^1.0") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros"))) (d #t) (k 2)) (d (n "tower_") (r "^0.4") (f (quote ("util"))) (d #t) (k 2) (p "tower")) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log"))) (d #t) (k 2)) (d (n "tracing_") (r "^0.1") (d #t) (k 2) (p "tracing")))) (h "025bbj2drqnf676795hvd5kzqc0bgij3jr1nm3jyrh2zfq6ln9ii") (f (quote (("transport" "reqwest" "native-tls") ("tracing" "sentry-tracing") ("tower" "sentry-tower") ("test" "sentry-core/test") ("surf-h1" "surf_/h1-client" "httpdate") ("surf" "surf_/curl-client" "httpdate" "tokio") ("slog" "sentry-slog") ("rustls" "reqwest_/rustls-tls") ("reqwest" "reqwest_" "httpdate" "tokio") ("panic" "sentry-panic") ("native-tls" "reqwest_/default-tls") ("log" "sentry-log") ("default" "backtrace" "contexts" "panic" "transport") ("debug-logs" "log_" "sentry-core/debug-logs") ("debug-images" "sentry-debug-images") ("curl" "curl_" "httpdate" "serde_json" "tokio") ("contexts" "sentry-contexts") ("backtrace" "sentry-backtrace") ("anyhow" "sentry-anyhow"))))))

(define-public crate-sentry-0.24.3 (c (n "sentry") (v "0.24.3") (d (list (d (n "actix-web") (r "^3") (k 2)) (d (n "anyhow_") (r "^1.0.30") (d #t) (k 2) (p "anyhow")) (d (n "curl_") (r "^0.4.25") (o #t) (d #t) (k 0) (p "curl")) (d (n "httpdate") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "log_") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "log")) (d (n "log_") (r "^0.4.8") (f (quote ("std"))) (d #t) (k 2) (p "log")) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "reqwest_") (r "^0.11") (f (quote ("blocking" "json"))) (o #t) (k 0) (p "reqwest")) (d (n "sentry-anyhow") (r "^0.24.3") (o #t) (d #t) (k 0)) (d (n "sentry-backtrace") (r "^0.24.3") (o #t) (d #t) (k 0)) (d (n "sentry-contexts") (r "^0.24.3") (o #t) (d #t) (k 0)) (d (n "sentry-core") (r "^0.24.3") (f (quote ("client"))) (d #t) (k 0)) (d (n "sentry-debug-images") (r "^0.24.3") (o #t) (d #t) (k 0)) (d (n "sentry-log") (r "^0.24.3") (o #t) (d #t) (k 0)) (d (n "sentry-panic") (r "^0.24.3") (o #t) (d #t) (k 0)) (d (n "sentry-slog") (r "^0.24.3") (o #t) (d #t) (k 0)) (d (n "sentry-tower") (r "^0.24.3") (o #t) (d #t) (k 0)) (d (n "sentry-tracing") (r "^0.24.3") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "slog_") (r "^2.5.2") (d #t) (k 2) (p "slog")) (d (n "surf_") (r "^2.0.0") (o #t) (k 0) (p "surf")) (d (n "tokio") (r "^1.0") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros"))) (d #t) (k 2)) (d (n "tower_") (r "^0.4") (f (quote ("util"))) (d #t) (k 2) (p "tower")) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log"))) (d #t) (k 2)) (d (n "tracing_") (r "^0.1") (d #t) (k 2) (p "tracing")) (d (n "ureq_") (r "^2.3.0") (o #t) (k 0) (p "ureq")))) (h "18lqhii87yaaw8qk6nwp24sp9cqgppbiv1x2igamj80i9dpljv27") (f (quote (("ureq-native-tls" "ureq_/native-tls" "httpdate") ("ureq" "ureq_/tls" "httpdate") ("transport" "reqwest" "native-tls") ("tracing" "sentry-tracing") ("tower" "sentry-tower") ("test" "sentry-core/test") ("surf-h1" "surf_/h1-client" "httpdate") ("surf" "surf_/curl-client" "httpdate" "tokio") ("slog" "sentry-slog") ("rustls" "reqwest_/rustls-tls") ("reqwest" "reqwest_" "httpdate" "tokio") ("panic" "sentry-panic") ("native-tls" "reqwest_/default-tls") ("log" "sentry-log") ("default" "backtrace" "contexts" "panic" "transport") ("debug-logs" "log_" "sentry-core/debug-logs") ("debug-images" "sentry-debug-images") ("curl" "curl_" "httpdate") ("contexts" "sentry-contexts") ("backtrace" "sentry-backtrace") ("anyhow" "sentry-anyhow"))))))

(define-public crate-sentry-0.25.0 (c (n "sentry") (v "0.25.0") (d (list (d (n "actix-web") (r "^4") (k 2)) (d (n "anyhow_") (r "^1.0.30") (d #t) (k 2) (p "anyhow")) (d (n "curl_") (r "^0.4.25") (o #t) (d #t) (k 0) (p "curl")) (d (n "httpdate") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "log_") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "log")) (d (n "log_") (r "^0.4.8") (f (quote ("std"))) (d #t) (k 2) (p "log")) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "reqwest_") (r "^0.11") (f (quote ("blocking" "json"))) (o #t) (k 0) (p "reqwest")) (d (n "sentry-anyhow") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "sentry-backtrace") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "sentry-contexts") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "sentry-core") (r "^0.25.0") (f (quote ("client"))) (d #t) (k 0)) (d (n "sentry-debug-images") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "sentry-log") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "sentry-panic") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "sentry-slog") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "sentry-tower") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "sentry-tracing") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "slog_") (r "^2.5.2") (d #t) (k 2) (p "slog")) (d (n "surf_") (r "^2.0.0") (o #t) (k 0) (p "surf")) (d (n "tokio") (r "^1.0") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros"))) (d #t) (k 2)) (d (n "tower_") (r "^0.4") (f (quote ("util"))) (d #t) (k 2) (p "tower")) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log"))) (d #t) (k 2)) (d (n "tracing_") (r "^0.1") (d #t) (k 2) (p "tracing")) (d (n "ureq_") (r "^2.3.0") (o #t) (k 0) (p "ureq")))) (h "12mg1hm6y02qm8ridx8wwarm6cv546d4x5rznpzhvr7kkkw3mlpj") (f (quote (("ureq-native-tls" "ureq_/native-tls" "httpdate") ("ureq" "ureq_/tls" "httpdate") ("transport" "reqwest" "native-tls") ("tracing" "sentry-tracing") ("tower" "sentry-tower") ("test" "sentry-core/test") ("surf-h1" "surf_/h1-client" "httpdate") ("surf" "surf_/curl-client" "httpdate" "tokio") ("slog" "sentry-slog") ("rustls" "reqwest_/rustls-tls") ("reqwest" "reqwest_" "httpdate" "tokio") ("panic" "sentry-panic") ("native-tls" "reqwest_/default-tls") ("log" "sentry-log") ("default" "backtrace" "contexts" "panic" "transport") ("debug-logs" "log_" "sentry-core/debug-logs") ("debug-images" "sentry-debug-images") ("curl" "curl_" "httpdate") ("contexts" "sentry-contexts") ("backtrace" "sentry-backtrace") ("anyhow" "sentry-anyhow"))))))

(define-public crate-sentry-0.26.0 (c (n "sentry") (v "0.26.0") (d (list (d (n "actix-web") (r "^4") (k 2)) (d (n "anyhow_") (r "^1.0.30") (d #t) (k 2) (p "anyhow")) (d (n "curl_") (r "^0.4.25") (o #t) (d #t) (k 0) (p "curl")) (d (n "httpdate") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "log_") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "log")) (d (n "log_") (r "^0.4.8") (f (quote ("std"))) (d #t) (k 2) (p "log")) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "reqwest_") (r "^0.11") (f (quote ("blocking" "json"))) (o #t) (k 0) (p "reqwest")) (d (n "sentry-anyhow") (r "^0.26.0") (o #t) (d #t) (k 0)) (d (n "sentry-backtrace") (r "^0.26.0") (o #t) (d #t) (k 0)) (d (n "sentry-contexts") (r "^0.26.0") (o #t) (d #t) (k 0)) (d (n "sentry-core") (r "^0.26.0") (f (quote ("client"))) (d #t) (k 0)) (d (n "sentry-debug-images") (r "^0.26.0") (o #t) (d #t) (k 0)) (d (n "sentry-log") (r "^0.26.0") (o #t) (d #t) (k 0)) (d (n "sentry-panic") (r "^0.26.0") (o #t) (d #t) (k 0)) (d (n "sentry-slog") (r "^0.26.0") (o #t) (d #t) (k 0)) (d (n "sentry-tower") (r "^0.26.0") (o #t) (d #t) (k 0)) (d (n "sentry-tracing") (r "^0.26.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "slog_") (r "^2.5.2") (d #t) (k 2) (p "slog")) (d (n "surf_") (r "^2.0.0") (o #t) (k 0) (p "surf")) (d (n "tokio") (r "^1.0") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros"))) (d #t) (k 2)) (d (n "tower_") (r "^0.4") (f (quote ("util"))) (d #t) (k 2) (p "tower")) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log"))) (d #t) (k 2)) (d (n "tracing_") (r "^0.1") (d #t) (k 2) (p "tracing")) (d (n "ureq_") (r "^2.3.0") (o #t) (k 0) (p "ureq")))) (h "1qv23car83p23q7jd94x2912zd6g56g0l376vahi4q8cnd7wlklh") (f (quote (("ureq-native-tls" "ureq_/native-tls" "httpdate") ("ureq" "ureq_/tls" "httpdate") ("transport" "reqwest" "native-tls") ("tracing" "sentry-tracing") ("tower" "sentry-tower") ("test" "sentry-core/test") ("surf-h1" "surf_/h1-client" "httpdate") ("surf" "surf_/curl-client" "httpdate" "tokio") ("slog" "sentry-slog") ("rustls" "reqwest_/rustls-tls") ("reqwest" "reqwest_" "httpdate" "tokio") ("panic" "sentry-panic") ("native-tls" "reqwest_/default-tls") ("log" "sentry-log") ("default" "backtrace" "contexts" "panic" "transport") ("debug-logs" "log_" "sentry-core/debug-logs") ("debug-images" "sentry-debug-images") ("curl" "curl_" "httpdate") ("contexts" "sentry-contexts") ("backtrace" "sentry-backtrace") ("anyhow" "sentry-anyhow"))))))

(define-public crate-sentry-0.27.0 (c (n "sentry") (v "0.27.0") (d (list (d (n "actix-web") (r "^4") (k 2)) (d (n "anyhow_") (r "^1.0.30") (d #t) (k 2) (p "anyhow")) (d (n "curl_") (r "^0.4.25") (o #t) (d #t) (k 0) (p "curl")) (d (n "httpdate") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "log_") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "log")) (d (n "log_") (r "^0.4.8") (f (quote ("std"))) (d #t) (k 2) (p "log")) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "reqwest_") (r "^0.11") (f (quote ("blocking" "json"))) (o #t) (k 0) (p "reqwest")) (d (n "sentry-anyhow") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "sentry-backtrace") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "sentry-contexts") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "sentry-core") (r "^0.27.0") (f (quote ("client"))) (d #t) (k 0)) (d (n "sentry-debug-images") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "sentry-log") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "sentry-panic") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "sentry-slog") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "sentry-tower") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "sentry-tracing") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "slog_") (r "^2.5.2") (d #t) (k 2) (p "slog")) (d (n "surf_") (r "^2.0.0") (o #t) (k 0) (p "surf")) (d (n "tokio") (r "^1.0") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros"))) (d #t) (k 2)) (d (n "tower_") (r "^0.4") (f (quote ("util"))) (d #t) (k 2) (p "tower")) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log"))) (d #t) (k 2)) (d (n "tracing_") (r "^0.1") (d #t) (k 2) (p "tracing")) (d (n "ureq_") (r "^2.3.0") (o #t) (k 0) (p "ureq")))) (h "0k0dps8w9v5w4ppbaw28pspn91xcclpqm0dw98kfnqzswwcjhr3k") (f (quote (("ureq-native-tls" "ureq_/native-tls" "httpdate") ("ureq" "ureq_/tls" "httpdate") ("transport" "reqwest" "native-tls") ("tracing" "sentry-tracing") ("tower" "sentry-tower") ("test" "sentry-core/test") ("surf-h1" "surf_/h1-client" "httpdate") ("surf" "surf_/curl-client" "httpdate" "tokio") ("slog" "sentry-slog") ("rustls" "reqwest_/rustls-tls") ("reqwest" "reqwest_" "httpdate" "tokio") ("panic" "sentry-panic") ("native-tls" "reqwest_/default-tls") ("log" "sentry-log") ("default" "backtrace" "contexts" "panic" "transport") ("debug-logs" "log_" "sentry-core/debug-logs") ("debug-images" "sentry-debug-images") ("curl" "curl_" "httpdate") ("contexts" "sentry-contexts") ("backtrace" "sentry-backtrace") ("anyhow" "sentry-anyhow")))) (r "1.57")))

(define-public crate-sentry-0.28.0 (c (n "sentry") (v "0.28.0") (d (list (d (n "actix-web") (r "^4") (k 2)) (d (n "anyhow") (r "^1.0.30") (d #t) (k 2)) (d (n "curl") (r "^0.4.25") (o #t) (d #t) (k 0)) (d (n "http-client") (r "^6.5.3") (o #t) (d #t) (k 0)) (d (n "httpdate") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "isahc") (r "^0.9.14") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (d #t) (k 2)) (d (n "native-tls") (r "^0.2.8") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (o #t) (k 0)) (d (n "rustls") (r "^0.20.6") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (k 0)) (d (n "sentry-anyhow") (r "^0.28.0") (o #t) (d #t) (k 0)) (d (n "sentry-backtrace") (r "^0.28.0") (o #t) (d #t) (k 0)) (d (n "sentry-contexts") (r "^0.28.0") (o #t) (d #t) (k 0)) (d (n "sentry-core") (r "^0.28.0") (f (quote ("client"))) (d #t) (k 0)) (d (n "sentry-debug-images") (r "^0.28.0") (o #t) (d #t) (k 0)) (d (n "sentry-log") (r "^0.28.0") (o #t) (d #t) (k 0)) (d (n "sentry-panic") (r "^0.28.0") (o #t) (d #t) (k 0)) (d (n "sentry-slog") (r "^0.28.0") (o #t) (d #t) (k 0)) (d (n "sentry-tower") (r "^0.28.0") (o #t) (d #t) (k 0)) (d (n "sentry-tracing") (r "^0.28.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2.5.2") (d #t) (k 2)) (d (n "surf") (r "^2.0.0") (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros"))) (d #t) (k 2)) (d (n "tower") (r "^0.4") (f (quote ("util"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log"))) (d #t) (k 2)) (d (n "ureq") (r "^2.3.0") (o #t) (k 0)) (d (n "webpki-roots") (r "^0.22.5") (o #t) (d #t) (k 0)))) (h "0wc3brzmm8nfgc1mv9gmm2k1grii0lwdwmzwy5mp6xbridggn851") (f (quote (("transport" "reqwest" "native-tls") ("tracing" "sentry-tracing") ("tower-http" "sentry-tower" "sentry-tower/http") ("tower" "sentry-tower") ("test" "sentry-core/test") ("surf-h1" "surf/h1-client" "httpdate") ("surf" "surf/curl-client" "http-client" "httpdate" "isahc" "tokio") ("slog" "sentry-slog") ("profiling" "sentry-core/profiling") ("panic" "sentry-panic") ("log" "sentry-log") ("frame-pointer" "sentry-core/frame-pointer") ("default" "backtrace" "contexts" "panic" "transport") ("debug-images" "sentry-debug-images") ("contexts" "sentry-contexts") ("backtrace" "sentry-backtrace") ("anyhow" "sentry-anyhow")))) (s 2) (e (quote (("ureq" "dep:ureq" "httpdate") ("rustls" "dep:rustls" "reqwest?/rustls-tls" "ureq?/tls" "webpki-roots") ("reqwest" "dep:reqwest" "httpdate" "tokio") ("native-tls" "dep:native-tls" "reqwest?/default-tls" "ureq?/native-tls") ("debug-logs" "dep:log" "sentry-core/debug-logs") ("curl" "dep:curl" "httpdate")))) (r "1.60")))

(define-public crate-sentry-0.29.0 (c (n "sentry") (v "0.29.0") (d (list (d (n "actix-web") (r "^4") (k 2)) (d (n "anyhow") (r "^1.0.30") (d #t) (k 2)) (d (n "curl") (r "^0.4.25") (o #t) (d #t) (k 0)) (d (n "http-client") (r "^6.5.3") (o #t) (d #t) (k 0)) (d (n "httpdate") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "isahc") (r "^0.9.14") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (d #t) (k 2)) (d (n "native-tls") (r "^0.2.8") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (o #t) (k 0)) (d (n "rustls") (r "^0.20.6") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (k 0)) (d (n "sentry-anyhow") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "sentry-backtrace") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "sentry-contexts") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "sentry-core") (r "^0.29.0") (f (quote ("client"))) (d #t) (k 0)) (d (n "sentry-debug-images") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "sentry-log") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "sentry-panic") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "sentry-slog") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "sentry-tower") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "sentry-tracing") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2.5.2") (d #t) (k 2)) (d (n "surf") (r "^2.0.0") (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros"))) (d #t) (k 2)) (d (n "tower") (r "^0.4") (f (quote ("util"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log"))) (d #t) (k 2)) (d (n "ureq") (r "^2.3.0") (o #t) (k 0)) (d (n "webpki-roots") (r "^0.22.5") (o #t) (d #t) (k 0)))) (h "1ifzj2ifqf47rx896bbskvsk4l6z36hyk8xhkx21ar002hm5whn6") (f (quote (("transport" "reqwest" "native-tls") ("tracing" "sentry-tracing") ("tower-http" "sentry-tower" "sentry-tower/http") ("tower" "sentry-tower") ("test" "sentry-core/test") ("surf-h1" "surf/h1-client" "httpdate") ("surf" "surf/curl-client" "http-client" "httpdate" "isahc" "tokio") ("slog" "sentry-slog") ("profiling" "sentry-core/profiling") ("panic" "sentry-panic") ("log" "sentry-log") ("frame-pointer" "sentry-core/frame-pointer") ("default" "backtrace" "contexts" "panic" "transport") ("debug-images" "sentry-debug-images") ("contexts" "sentry-contexts") ("backtrace" "sentry-backtrace") ("anyhow" "sentry-anyhow")))) (s 2) (e (quote (("ureq" "dep:ureq" "httpdate") ("rustls" "dep:rustls" "reqwest?/rustls-tls" "ureq?/tls" "webpki-roots") ("reqwest" "dep:reqwest" "httpdate" "tokio") ("native-tls" "dep:native-tls" "reqwest?/default-tls" "ureq?/native-tls") ("debug-logs" "dep:log" "sentry-core/debug-logs") ("curl" "dep:curl" "httpdate")))) (r "1.60")))

(define-public crate-sentry-0.29.1 (c (n "sentry") (v "0.29.1") (d (list (d (n "actix-web") (r "^4") (k 2)) (d (n "anyhow") (r "^1.0.30") (d #t) (k 2)) (d (n "curl") (r "^0.4.25") (o #t) (d #t) (k 0)) (d (n "http-client") (r "^6.5.3") (o #t) (d #t) (k 0)) (d (n "httpdate") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "isahc") (r "^0.9.14") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (d #t) (k 2)) (d (n "native-tls") (r "^0.2.8") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (o #t) (k 0)) (d (n "rustls") (r "^0.20.6") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (k 0)) (d (n "sentry-anyhow") (r "^0.29.1") (o #t) (d #t) (k 0)) (d (n "sentry-backtrace") (r "^0.29.1") (o #t) (d #t) (k 0)) (d (n "sentry-contexts") (r "^0.29.1") (o #t) (d #t) (k 0)) (d (n "sentry-core") (r "^0.29.1") (f (quote ("client"))) (d #t) (k 0)) (d (n "sentry-debug-images") (r "^0.29.1") (o #t) (d #t) (k 0)) (d (n "sentry-log") (r "^0.29.1") (o #t) (d #t) (k 0)) (d (n "sentry-panic") (r "^0.29.1") (o #t) (d #t) (k 0)) (d (n "sentry-slog") (r "^0.29.1") (o #t) (d #t) (k 0)) (d (n "sentry-tower") (r "^0.29.1") (o #t) (d #t) (k 0)) (d (n "sentry-tracing") (r "^0.29.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2.5.2") (d #t) (k 2)) (d (n "surf") (r "^2.0.0") (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros"))) (d #t) (k 2)) (d (n "tower") (r "^0.4") (f (quote ("util"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log"))) (d #t) (k 2)) (d (n "ureq") (r "^2.3.0") (o #t) (k 0)) (d (n "webpki-roots") (r "^0.22.5") (o #t) (d #t) (k 0)))) (h "1k650x6nfpk5ckhmqbp8a34wcz13xw5na6mbijwr90ppkmxi7b8p") (f (quote (("transport" "reqwest" "native-tls") ("tracing" "sentry-tracing") ("tower-http" "sentry-tower" "sentry-tower/http") ("tower" "sentry-tower") ("test" "sentry-core/test") ("surf-h1" "surf/h1-client" "httpdate") ("surf" "surf/curl-client" "http-client" "httpdate" "isahc" "tokio") ("slog" "sentry-slog") ("profiling" "sentry-core/profiling") ("panic" "sentry-panic") ("log" "sentry-log") ("frame-pointer" "sentry-core/frame-pointer") ("default" "backtrace" "contexts" "panic" "transport") ("debug-images" "sentry-debug-images") ("contexts" "sentry-contexts") ("backtrace" "sentry-backtrace") ("anyhow" "sentry-anyhow")))) (s 2) (e (quote (("ureq" "dep:ureq" "httpdate") ("rustls" "dep:rustls" "reqwest?/rustls-tls" "ureq?/tls" "webpki-roots") ("reqwest" "dep:reqwest" "httpdate" "tokio") ("native-tls" "dep:native-tls" "reqwest?/default-tls" "ureq?/native-tls") ("debug-logs" "dep:log" "sentry-core/debug-logs") ("curl" "dep:curl" "httpdate")))) (r "1.60")))

(define-public crate-sentry-0.29.2 (c (n "sentry") (v "0.29.2") (d (list (d (n "actix-web") (r "^4") (k 2)) (d (n "anyhow") (r "^1.0.30") (d #t) (k 2)) (d (n "curl") (r "^0.4.25") (o #t) (d #t) (k 0)) (d (n "http-client") (r "^6.5.3") (o #t) (d #t) (k 0)) (d (n "httpdate") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "isahc") (r "^0.9.14") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (d #t) (k 2)) (d (n "native-tls") (r "^0.2.8") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (o #t) (k 0)) (d (n "rustls") (r "^0.20.6") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (k 0)) (d (n "sentry-anyhow") (r "^0.29.2") (o #t) (d #t) (k 0)) (d (n "sentry-backtrace") (r "^0.29.2") (o #t) (d #t) (k 0)) (d (n "sentry-contexts") (r "^0.29.2") (o #t) (d #t) (k 0)) (d (n "sentry-core") (r "^0.29.2") (f (quote ("client"))) (d #t) (k 0)) (d (n "sentry-debug-images") (r "^0.29.2") (o #t) (d #t) (k 0)) (d (n "sentry-log") (r "^0.29.2") (o #t) (d #t) (k 0)) (d (n "sentry-panic") (r "^0.29.2") (o #t) (d #t) (k 0)) (d (n "sentry-slog") (r "^0.29.2") (o #t) (d #t) (k 0)) (d (n "sentry-tower") (r "^0.29.2") (o #t) (d #t) (k 0)) (d (n "sentry-tracing") (r "^0.29.2") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2.5.2") (d #t) (k 2)) (d (n "surf") (r "^2.0.0") (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros"))) (d #t) (k 2)) (d (n "tower") (r "^0.4") (f (quote ("util"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log"))) (d #t) (k 2)) (d (n "ureq") (r "^2.3.0") (o #t) (k 0)) (d (n "webpki-roots") (r "^0.22.5") (o #t) (d #t) (k 0)))) (h "0kk07h1rjq5kbiyfv6cjw8wgz5xa7qjfs8k2bmf5bi59f317s2d6") (f (quote (("transport" "reqwest" "native-tls") ("tracing" "sentry-tracing") ("tower-http" "tower" "sentry-tower/http") ("tower" "sentry-tower") ("test" "sentry-core/test") ("surf-h1" "surf/h1-client" "httpdate") ("surf" "surf/curl-client" "http-client" "httpdate" "isahc" "tokio") ("slog" "sentry-slog") ("profiling" "sentry-core/profiling") ("panic" "sentry-panic") ("log" "sentry-log") ("frame-pointer" "sentry-core/frame-pointer") ("default" "backtrace" "contexts" "panic" "transport") ("debug-images" "sentry-debug-images") ("contexts" "sentry-contexts") ("backtrace" "sentry-backtrace") ("anyhow" "sentry-anyhow")))) (s 2) (e (quote (("ureq" "dep:ureq" "httpdate") ("rustls" "dep:rustls" "reqwest?/rustls-tls" "ureq?/tls" "webpki-roots") ("reqwest" "dep:reqwest" "httpdate" "tokio") ("native-tls" "dep:native-tls" "reqwest?/default-tls" "ureq?/native-tls") ("debug-logs" "dep:log" "sentry-core/debug-logs") ("curl" "dep:curl" "httpdate")))) (r "1.60")))

(define-public crate-sentry-0.29.3 (c (n "sentry") (v "0.29.3") (d (list (d (n "actix-web") (r "^4") (k 2)) (d (n "anyhow") (r "^1.0.30") (d #t) (k 2)) (d (n "curl") (r "^0.4.25") (o #t) (d #t) (k 0)) (d (n "http-client") (r "^6.5.3") (o #t) (d #t) (k 0)) (d (n "httpdate") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "isahc") (r "^0.9.14") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (d #t) (k 2)) (d (n "native-tls") (r "^0.2.8") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (o #t) (k 0)) (d (n "rustls") (r "^0.20.6") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (k 0)) (d (n "sentry-anyhow") (r "^0.29.3") (o #t) (d #t) (k 0)) (d (n "sentry-backtrace") (r "^0.29.3") (o #t) (d #t) (k 0)) (d (n "sentry-contexts") (r "^0.29.3") (o #t) (d #t) (k 0)) (d (n "sentry-core") (r "^0.29.3") (f (quote ("client"))) (d #t) (k 0)) (d (n "sentry-debug-images") (r "^0.29.3") (o #t) (d #t) (k 0)) (d (n "sentry-log") (r "^0.29.3") (o #t) (d #t) (k 0)) (d (n "sentry-panic") (r "^0.29.3") (o #t) (d #t) (k 0)) (d (n "sentry-slog") (r "^0.29.3") (o #t) (d #t) (k 0)) (d (n "sentry-tower") (r "^0.29.3") (o #t) (d #t) (k 0)) (d (n "sentry-tracing") (r "^0.29.3") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2.5.2") (d #t) (k 2)) (d (n "surf") (r "^2.0.0") (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros"))) (d #t) (k 2)) (d (n "tower") (r "^0.4") (f (quote ("util"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log"))) (d #t) (k 2)) (d (n "ureq") (r "^2.3.0") (o #t) (k 0)) (d (n "webpki-roots") (r "^0.22.5") (o #t) (d #t) (k 0)))) (h "0zs0xr01li7mv6xdnrfwyp5dgnykkca1gzf38pcgkbkd69lwxy66") (f (quote (("transport" "reqwest" "native-tls") ("tracing" "sentry-tracing") ("tower-http" "tower" "sentry-tower/http") ("tower" "sentry-tower") ("test" "sentry-core/test") ("surf-h1" "surf/h1-client" "httpdate") ("surf" "surf/curl-client" "http-client" "httpdate" "isahc" "tokio") ("slog" "sentry-slog") ("profiling" "sentry-core/profiling") ("panic" "sentry-panic") ("log" "sentry-log") ("frame-pointer" "sentry-core/frame-pointer") ("default" "backtrace" "contexts" "debug-images" "panic" "transport") ("debug-images" "sentry-debug-images") ("contexts" "sentry-contexts") ("backtrace" "sentry-backtrace") ("anyhow" "sentry-anyhow")))) (s 2) (e (quote (("ureq" "dep:ureq" "httpdate") ("rustls" "dep:rustls" "reqwest?/rustls-tls" "ureq?/tls" "webpki-roots") ("reqwest" "dep:reqwest" "httpdate" "tokio") ("native-tls" "dep:native-tls" "reqwest?/default-tls" "ureq?/native-tls") ("debug-logs" "dep:log" "sentry-core/debug-logs") ("curl" "dep:curl" "httpdate")))) (r "1.60")))

(define-public crate-sentry-0.30.0 (c (n "sentry") (v "0.30.0") (d (list (d (n "actix-web") (r "^4") (k 2)) (d (n "anyhow") (r "^1.0.30") (d #t) (k 2)) (d (n "curl") (r "^0.4.25") (o #t) (d #t) (k 0)) (d (n "http-client") (r "^6.5.3") (o #t) (d #t) (k 0)) (d (n "httpdate") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "isahc") (r "^0.9.14") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (d #t) (k 2)) (d (n "native-tls") (r "^0.2.8") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (o #t) (k 0)) (d (n "rustls") (r "^0.20.6") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (k 0)) (d (n "sentry-anyhow") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "sentry-backtrace") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "sentry-contexts") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "sentry-core") (r "^0.30.0") (f (quote ("client"))) (d #t) (k 0)) (d (n "sentry-debug-images") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "sentry-log") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "sentry-panic") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "sentry-slog") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "sentry-tower") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "sentry-tracing") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2.5.2") (d #t) (k 2)) (d (n "surf") (r "^2.0.0") (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros"))) (d #t) (k 2)) (d (n "tower") (r "^0.4") (f (quote ("util"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log"))) (d #t) (k 2)) (d (n "ureq") (r "^2.3.0") (o #t) (k 0)) (d (n "webpki-roots") (r "^0.22.5") (o #t) (d #t) (k 0)))) (h "1qzq87ng7w1b168kqr9lrma6987yl866ps61kqh7qqg228snvkmm") (f (quote (("transport" "reqwest" "native-tls") ("tracing" "sentry-tracing") ("tower-http" "tower" "sentry-tower/http") ("tower" "sentry-tower") ("test" "sentry-core/test") ("surf-h1" "surf/h1-client" "httpdate") ("surf" "surf/curl-client" "http-client" "httpdate" "isahc" "tokio") ("slog" "sentry-slog") ("profiling" "sentry-core/profiling") ("panic" "sentry-panic") ("log" "sentry-log") ("frame-pointer" "sentry-core/frame-pointer") ("default" "backtrace" "contexts" "debug-images" "panic" "transport") ("debug-images" "sentry-debug-images") ("contexts" "sentry-contexts") ("backtrace" "sentry-backtrace") ("anyhow" "sentry-anyhow")))) (s 2) (e (quote (("ureq" "dep:ureq" "httpdate") ("rustls" "dep:rustls" "reqwest?/rustls-tls" "ureq?/tls" "webpki-roots") ("reqwest" "dep:reqwest" "httpdate" "tokio") ("native-tls" "dep:native-tls" "reqwest?/default-tls" "ureq?/native-tls") ("debug-logs" "dep:log" "sentry-core/debug-logs") ("curl" "dep:curl" "httpdate")))) (r "1.66")))

(define-public crate-sentry-0.31.0 (c (n "sentry") (v "0.31.0") (d (list (d (n "actix-web") (r "^4") (k 2)) (d (n "anyhow") (r "^1.0.30") (d #t) (k 2)) (d (n "curl") (r "^0.4.25") (o #t) (d #t) (k 0)) (d (n "http-client") (r "^6.5.3") (o #t) (d #t) (k 0)) (d (n "httpdate") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "isahc") (r "^0.9.14") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (d #t) (k 2)) (d (n "native-tls") (r "^0.2.8") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (o #t) (k 0)) (d (n "rustls") (r "^0.20.6") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (k 0)) (d (n "sentry-anyhow") (r "^0.31.0") (o #t) (d #t) (k 0)) (d (n "sentry-backtrace") (r "^0.31.0") (o #t) (d #t) (k 0)) (d (n "sentry-contexts") (r "^0.31.0") (o #t) (d #t) (k 0)) (d (n "sentry-core") (r "^0.31.0") (f (quote ("client"))) (d #t) (k 0)) (d (n "sentry-debug-images") (r "^0.31.0") (o #t) (d #t) (k 0)) (d (n "sentry-log") (r "^0.31.0") (o #t) (d #t) (k 0)) (d (n "sentry-panic") (r "^0.31.0") (o #t) (d #t) (k 0)) (d (n "sentry-slog") (r "^0.31.0") (o #t) (d #t) (k 0)) (d (n "sentry-tower") (r "^0.31.0") (o #t) (d #t) (k 0)) (d (n "sentry-tracing") (r "^0.31.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2.5.2") (d #t) (k 2)) (d (n "surf") (r "^2.0.0") (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros"))) (d #t) (k 2)) (d (n "tower") (r "^0.4") (f (quote ("util"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log"))) (d #t) (k 2)) (d (n "ureq") (r "^2.3.0") (o #t) (k 0)) (d (n "webpki-roots") (r "^0.22.5") (o #t) (d #t) (k 0)))) (h "1pxmqmb4dg21z4wcgvnhj8m4amyq8y9xvz2j4hi7agipyy5pygbc") (f (quote (("transport" "reqwest" "native-tls") ("tracing" "sentry-tracing") ("tower-http" "tower" "sentry-tower/http") ("tower" "sentry-tower") ("test" "sentry-core/test") ("surf-h1" "surf/h1-client" "httpdate") ("surf" "surf/curl-client" "http-client" "httpdate" "isahc" "tokio") ("slog" "sentry-slog") ("profiling" "sentry-core/profiling") ("panic" "sentry-panic") ("log" "sentry-log") ("frame-pointer" "sentry-core/frame-pointer") ("default" "backtrace" "contexts" "debug-images" "panic" "transport") ("debug-images" "sentry-debug-images") ("contexts" "sentry-contexts") ("backtrace" "sentry-backtrace") ("anyhow" "sentry-anyhow")))) (s 2) (e (quote (("ureq" "dep:ureq" "httpdate") ("rustls" "dep:rustls" "reqwest?/rustls-tls" "ureq?/tls" "webpki-roots") ("reqwest" "dep:reqwest" "httpdate" "tokio") ("native-tls" "dep:native-tls" "reqwest?/default-tls" "ureq?/native-tls") ("debug-logs" "dep:log" "sentry-core/debug-logs") ("curl" "dep:curl" "httpdate")))) (r "1.66")))

(define-public crate-sentry-0.31.1 (c (n "sentry") (v "0.31.1") (d (list (d (n "actix-web") (r "^4") (k 2)) (d (n "anyhow") (r "^1.0.30") (d #t) (k 2)) (d (n "curl") (r "^0.4.25") (o #t) (d #t) (k 0)) (d (n "http-client") (r "^6.5.3") (o #t) (d #t) (k 0)) (d (n "httpdate") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "isahc") (r "^0.9.14") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (d #t) (k 2)) (d (n "native-tls") (r "^0.2.8") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (o #t) (k 0)) (d (n "rustls") (r "^0.20.6") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (k 0)) (d (n "sentry-anyhow") (r "^0.31.1") (o #t) (d #t) (k 0)) (d (n "sentry-backtrace") (r "^0.31.1") (o #t) (d #t) (k 0)) (d (n "sentry-contexts") (r "^0.31.1") (o #t) (d #t) (k 0)) (d (n "sentry-core") (r "^0.31.1") (f (quote ("client"))) (d #t) (k 0)) (d (n "sentry-debug-images") (r "^0.31.1") (o #t) (d #t) (k 0)) (d (n "sentry-log") (r "^0.31.1") (o #t) (d #t) (k 0)) (d (n "sentry-panic") (r "^0.31.1") (o #t) (d #t) (k 0)) (d (n "sentry-slog") (r "^0.31.1") (o #t) (d #t) (k 0)) (d (n "sentry-tower") (r "^0.31.1") (o #t) (d #t) (k 0)) (d (n "sentry-tracing") (r "^0.31.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2.5.2") (d #t) (k 2)) (d (n "surf") (r "^2.0.0") (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros"))) (d #t) (k 2)) (d (n "tower") (r "^0.4") (f (quote ("util"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log"))) (d #t) (k 2)) (d (n "ureq") (r "^2.3.0") (o #t) (k 0)) (d (n "webpki-roots") (r "^0.22.5") (o #t) (d #t) (k 0)))) (h "0ibpr2gipf57z9qcizjsjsbjlngji7rgzryd8k5d3cd6vh66rp9p") (f (quote (("transport" "reqwest" "native-tls") ("tracing" "sentry-tracing") ("tower-http" "tower" "sentry-tower/http") ("tower-axum-matched-path" "tower-http" "sentry-tower/axum-matched-path") ("tower" "sentry-tower") ("test" "sentry-core/test") ("surf-h1" "surf/h1-client" "httpdate") ("surf" "surf/curl-client" "http-client" "httpdate" "isahc" "tokio") ("slog" "sentry-slog") ("profiling" "sentry-core/profiling") ("panic" "sentry-panic") ("log" "sentry-log") ("frame-pointer" "sentry-core/frame-pointer") ("default" "backtrace" "contexts" "debug-images" "panic" "transport") ("debug-images" "sentry-debug-images") ("contexts" "sentry-contexts") ("backtrace" "sentry-backtrace") ("anyhow" "sentry-anyhow")))) (s 2) (e (quote (("ureq" "dep:ureq" "httpdate") ("rustls" "dep:rustls" "reqwest?/rustls-tls" "ureq?/tls" "webpki-roots") ("reqwest" "dep:reqwest" "httpdate" "tokio") ("native-tls" "dep:native-tls" "reqwest?/default-tls" "ureq?/native-tls") ("debug-logs" "dep:log" "sentry-core/debug-logs") ("curl" "dep:curl" "httpdate")))) (r "1.66")))

(define-public crate-sentry-0.31.2 (c (n "sentry") (v "0.31.2") (d (list (d (n "actix-web") (r "^4") (k 2)) (d (n "anyhow") (r "^1.0.30") (d #t) (k 2)) (d (n "curl") (r "^0.4.25") (o #t) (d #t) (k 0)) (d (n "http-client") (r "^6.5.3") (o #t) (d #t) (k 0)) (d (n "httpdate") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "isahc") (r "^0.9.14") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (d #t) (k 2)) (d (n "native-tls") (r "^0.2.8") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (o #t) (k 0)) (d (n "rustls") (r "^0.20.6") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (k 0)) (d (n "sentry-anyhow") (r "^0.31.2") (o #t) (d #t) (k 0)) (d (n "sentry-backtrace") (r "^0.31.2") (o #t) (d #t) (k 0)) (d (n "sentry-contexts") (r "^0.31.2") (o #t) (d #t) (k 0)) (d (n "sentry-core") (r "^0.31.2") (f (quote ("client"))) (d #t) (k 0)) (d (n "sentry-debug-images") (r "^0.31.2") (o #t) (d #t) (k 0)) (d (n "sentry-log") (r "^0.31.2") (o #t) (d #t) (k 0)) (d (n "sentry-panic") (r "^0.31.2") (o #t) (d #t) (k 0)) (d (n "sentry-slog") (r "^0.31.2") (o #t) (d #t) (k 0)) (d (n "sentry-tower") (r "^0.31.2") (o #t) (d #t) (k 0)) (d (n "sentry-tracing") (r "^0.31.2") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2.5.2") (d #t) (k 2)) (d (n "surf") (r "^2.0.0") (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros"))) (d #t) (k 2)) (d (n "tower") (r "^0.4") (f (quote ("util"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log"))) (d #t) (k 2)) (d (n "ureq") (r "^2.3.0") (o #t) (k 0)) (d (n "webpki-roots") (r "^0.22.5") (o #t) (d #t) (k 0)))) (h "005n126b6rc62vc82vr4zrhc1yzpcmv9ldivxbahl5177l9nwkr3") (f (quote (("transport" "reqwest" "native-tls") ("tracing" "sentry-tracing") ("tower-http" "tower" "sentry-tower/http") ("tower-axum-matched-path" "tower-http" "sentry-tower/axum-matched-path") ("tower" "sentry-tower") ("test" "sentry-core/test") ("surf-h1" "surf/h1-client" "httpdate") ("surf" "surf/curl-client" "http-client" "httpdate" "isahc" "tokio") ("slog" "sentry-slog") ("profiling" "sentry-core/profiling") ("panic" "sentry-panic") ("log" "sentry-log") ("frame-pointer" "sentry-core/frame-pointer") ("default" "backtrace" "contexts" "debug-images" "panic" "transport") ("debug-images" "sentry-debug-images") ("contexts" "sentry-contexts") ("backtrace" "sentry-backtrace") ("anyhow" "sentry-anyhow")))) (s 2) (e (quote (("ureq" "dep:ureq" "httpdate") ("rustls" "dep:rustls" "reqwest?/rustls-tls" "ureq?/tls" "webpki-roots") ("reqwest" "dep:reqwest" "httpdate" "tokio") ("native-tls" "dep:native-tls" "reqwest?/default-tls" "ureq?/native-tls") ("debug-logs" "dep:log" "sentry-core/debug-logs") ("curl" "dep:curl" "httpdate")))) (r "1.66")))

(define-public crate-sentry-0.31.3 (c (n "sentry") (v "0.31.3") (d (list (d (n "actix-web") (r "^4") (k 2)) (d (n "anyhow") (r "^1.0.30") (d #t) (k 2)) (d (n "curl") (r "^0.4.25") (o #t) (d #t) (k 0)) (d (n "http-client") (r "^6.5.3") (o #t) (d #t) (k 0)) (d (n "httpdate") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "isahc") (r "^0.9.14") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (d #t) (k 2)) (d (n "native-tls") (r "^0.2.8") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (o #t) (k 0)) (d (n "rustls") (r "^0.20.6") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (k 0)) (d (n "sentry-anyhow") (r "^0.31.3") (o #t) (d #t) (k 0)) (d (n "sentry-backtrace") (r "^0.31.3") (o #t) (d #t) (k 0)) (d (n "sentry-contexts") (r "^0.31.3") (o #t) (d #t) (k 0)) (d (n "sentry-core") (r "^0.31.3") (f (quote ("client"))) (d #t) (k 0)) (d (n "sentry-debug-images") (r "^0.31.3") (o #t) (d #t) (k 0)) (d (n "sentry-log") (r "^0.31.3") (o #t) (d #t) (k 0)) (d (n "sentry-panic") (r "^0.31.3") (o #t) (d #t) (k 0)) (d (n "sentry-slog") (r "^0.31.3") (o #t) (d #t) (k 0)) (d (n "sentry-tower") (r "^0.31.3") (o #t) (d #t) (k 0)) (d (n "sentry-tracing") (r "^0.31.3") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2.5.2") (d #t) (k 2)) (d (n "surf") (r "^2.0.0") (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros"))) (d #t) (k 2)) (d (n "tower") (r "^0.4") (f (quote ("util"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log"))) (d #t) (k 2)) (d (n "ureq") (r "^2.3.0") (o #t) (k 0)) (d (n "webpki-roots") (r "^0.22.5") (o #t) (d #t) (k 0)))) (h "1wkzdixpq2mdnnvizka8370avz0yw6swal68sdsj3br26ghcccfy") (f (quote (("transport" "reqwest" "native-tls") ("tracing" "sentry-tracing") ("tower-http" "tower" "sentry-tower/http") ("tower-axum-matched-path" "tower-http" "sentry-tower/axum-matched-path") ("tower" "sentry-tower") ("test" "sentry-core/test") ("surf-h1" "surf/h1-client" "httpdate") ("surf" "surf/curl-client" "http-client" "httpdate" "isahc" "tokio") ("slog" "sentry-slog") ("profiling" "sentry-core/profiling") ("panic" "sentry-panic") ("log" "sentry-log") ("frame-pointer" "sentry-core/frame-pointer") ("default" "backtrace" "contexts" "debug-images" "panic" "transport") ("debug-images" "sentry-debug-images") ("contexts" "sentry-contexts") ("anyhow" "sentry-anyhow")))) (s 2) (e (quote (("ureq" "dep:ureq" "httpdate") ("rustls" "dep:rustls" "reqwest?/rustls-tls" "ureq?/tls" "webpki-roots") ("reqwest" "dep:reqwest" "httpdate" "tokio") ("native-tls" "dep:native-tls" "reqwest?/default-tls" "ureq?/native-tls") ("debug-logs" "dep:log" "sentry-core/debug-logs") ("curl" "dep:curl" "httpdate") ("backtrace" "sentry-backtrace" "sentry-tracing?/backtrace")))) (r "1.66")))

(define-public crate-sentry-0.31.4 (c (n "sentry") (v "0.31.4") (d (list (d (n "actix-web") (r "^4") (k 2)) (d (n "anyhow") (r "^1.0.30") (d #t) (k 2)) (d (n "curl") (r "^0.4.25") (o #t) (d #t) (k 0)) (d (n "http-client") (r "^6.5.3") (o #t) (d #t) (k 0)) (d (n "httpdate") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "isahc") (r "^0.9.14") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (d #t) (k 2)) (d (n "native-tls") (r "^0.2.8") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (o #t) (k 0)) (d (n "rustls") (r "^0.20.6") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (k 0)) (d (n "sentry-anyhow") (r "^0.31.4") (o #t) (d #t) (k 0)) (d (n "sentry-backtrace") (r "^0.31.4") (o #t) (d #t) (k 0)) (d (n "sentry-contexts") (r "^0.31.4") (o #t) (d #t) (k 0)) (d (n "sentry-core") (r "^0.31.4") (f (quote ("client"))) (d #t) (k 0)) (d (n "sentry-debug-images") (r "^0.31.4") (o #t) (d #t) (k 0)) (d (n "sentry-log") (r "^0.31.4") (o #t) (d #t) (k 0)) (d (n "sentry-panic") (r "^0.31.4") (o #t) (d #t) (k 0)) (d (n "sentry-slog") (r "^0.31.4") (o #t) (d #t) (k 0)) (d (n "sentry-tower") (r "^0.31.4") (o #t) (d #t) (k 0)) (d (n "sentry-tracing") (r "^0.31.4") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2.5.2") (d #t) (k 2)) (d (n "surf") (r "^2.0.0") (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros"))) (d #t) (k 2)) (d (n "tower") (r "^0.4") (f (quote ("util"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log"))) (d #t) (k 2)) (d (n "ureq") (r "^2.3.0") (o #t) (k 0)) (d (n "webpki-roots") (r "^0.22.5") (o #t) (d #t) (k 0)))) (h "1glz3940pafb33qm884d0fa1yssbg8svgr9km40yg2rrqg5x42wy") (f (quote (("transport" "reqwest" "native-tls") ("tracing" "sentry-tracing") ("tower-http" "tower" "sentry-tower/http") ("tower-axum-matched-path" "tower-http" "sentry-tower/axum-matched-path") ("tower" "sentry-tower") ("test" "sentry-core/test") ("surf-h1" "surf/h1-client" "httpdate") ("surf" "surf/curl-client" "http-client" "httpdate" "isahc" "tokio") ("slog" "sentry-slog") ("profiling" "sentry-core/profiling") ("panic" "sentry-panic") ("log" "sentry-log") ("frame-pointer" "sentry-core/frame-pointer") ("default" "backtrace" "contexts" "debug-images" "panic" "transport") ("debug-images" "sentry-debug-images") ("contexts" "sentry-contexts") ("anyhow" "sentry-anyhow")))) (s 2) (e (quote (("ureq" "dep:ureq" "httpdate") ("rustls" "dep:rustls" "reqwest?/rustls-tls" "ureq?/tls" "webpki-roots") ("reqwest" "dep:reqwest" "httpdate" "tokio") ("native-tls" "dep:native-tls" "reqwest?/default-tls" "ureq?/native-tls") ("debug-logs" "dep:log" "sentry-core/debug-logs") ("curl" "dep:curl" "httpdate") ("backtrace" "sentry-backtrace" "sentry-tracing?/backtrace")))) (r "1.66")))

(define-public crate-sentry-0.31.5 (c (n "sentry") (v "0.31.5") (d (list (d (n "actix-web") (r "^4") (k 2)) (d (n "anyhow") (r "^1.0.30") (d #t) (k 2)) (d (n "curl") (r "^0.4.25") (o #t) (d #t) (k 0)) (d (n "http-client") (r "^6.5.3") (o #t) (d #t) (k 0)) (d (n "httpdate") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "isahc") (r "^0.9.14") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (d #t) (k 2)) (d (n "native-tls") (r "^0.2.8") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (o #t) (k 0)) (d (n "rustls") (r "^0.21.2") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (k 0)) (d (n "sentry-anyhow") (r "^0.31.5") (o #t) (d #t) (k 0)) (d (n "sentry-backtrace") (r "^0.31.5") (o #t) (d #t) (k 0)) (d (n "sentry-contexts") (r "^0.31.5") (o #t) (d #t) (k 0)) (d (n "sentry-core") (r "^0.31.5") (f (quote ("client"))) (d #t) (k 0)) (d (n "sentry-debug-images") (r "^0.31.5") (o #t) (d #t) (k 0)) (d (n "sentry-log") (r "^0.31.5") (o #t) (d #t) (k 0)) (d (n "sentry-panic") (r "^0.31.5") (o #t) (d #t) (k 0)) (d (n "sentry-slog") (r "^0.31.5") (o #t) (d #t) (k 0)) (d (n "sentry-tower") (r "^0.31.5") (o #t) (d #t) (k 0)) (d (n "sentry-tracing") (r "^0.31.5") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2.5.2") (d #t) (k 2)) (d (n "surf") (r "^2.0.0") (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros"))) (d #t) (k 2)) (d (n "tower") (r "^0.4") (f (quote ("util"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log"))) (d #t) (k 2)) (d (n "ureq") (r "^2.7.0") (o #t) (k 0)) (d (n "webpki-roots") (r "^0.22.5") (o #t) (d #t) (k 0)))) (h "0m1nryar872ybr62d6fcpp8sc8fs1g841v8lz5r27ld5z8bavc01") (f (quote (("transport" "reqwest" "native-tls") ("tracing" "sentry-tracing") ("tower-http" "tower" "sentry-tower/http") ("tower-axum-matched-path" "tower-http" "sentry-tower/axum-matched-path") ("tower" "sentry-tower") ("test" "sentry-core/test") ("surf-h1" "surf/h1-client" "httpdate") ("surf" "surf/curl-client" "http-client" "httpdate" "isahc" "tokio") ("slog" "sentry-slog") ("profiling" "sentry-core/profiling") ("panic" "sentry-panic") ("log" "sentry-log") ("frame-pointer" "sentry-core/frame-pointer") ("default" "backtrace" "contexts" "debug-images" "panic" "transport") ("debug-images" "sentry-debug-images") ("contexts" "sentry-contexts") ("anyhow" "sentry-anyhow")))) (s 2) (e (quote (("ureq" "dep:ureq" "httpdate") ("rustls" "dep:rustls" "reqwest?/rustls-tls" "ureq?/tls" "webpki-roots") ("reqwest" "dep:reqwest" "httpdate" "tokio") ("native-tls" "dep:native-tls" "reqwest?/default-tls" "ureq?/native-tls") ("debug-logs" "dep:log" "sentry-core/debug-logs") ("curl" "dep:curl" "httpdate") ("backtrace" "sentry-backtrace" "sentry-tracing?/backtrace")))) (r "1.66")))

(define-public crate-sentry-0.31.6 (c (n "sentry") (v "0.31.6") (d (list (d (n "actix-web") (r "^4") (k 2)) (d (n "anyhow") (r "^1.0.30") (d #t) (k 2)) (d (n "curl") (r "^0.4.25") (o #t) (d #t) (k 0)) (d (n "http-client") (r "^6.5.3") (o #t) (d #t) (k 0)) (d (n "httpdate") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "isahc") (r "^0.9.14") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (d #t) (k 2)) (d (n "native-tls") (r "^0.2.8") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (o #t) (k 0)) (d (n "rustls") (r "^0.21.2") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (k 0)) (d (n "sentry-anyhow") (r "^0.31.6") (o #t) (d #t) (k 0)) (d (n "sentry-backtrace") (r "^0.31.6") (o #t) (d #t) (k 0)) (d (n "sentry-contexts") (r "^0.31.6") (o #t) (d #t) (k 0)) (d (n "sentry-core") (r "^0.31.6") (f (quote ("client"))) (d #t) (k 0)) (d (n "sentry-debug-images") (r "^0.31.6") (o #t) (d #t) (k 0)) (d (n "sentry-log") (r "^0.31.6") (o #t) (d #t) (k 0)) (d (n "sentry-panic") (r "^0.31.6") (o #t) (d #t) (k 0)) (d (n "sentry-slog") (r "^0.31.6") (o #t) (d #t) (k 0)) (d (n "sentry-tower") (r "^0.31.6") (o #t) (d #t) (k 0)) (d (n "sentry-tracing") (r "^0.31.6") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2.5.2") (d #t) (k 2)) (d (n "surf") (r "^2.0.0") (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros"))) (d #t) (k 2)) (d (n "tower") (r "^0.4") (f (quote ("util"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log"))) (d #t) (k 2)) (d (n "ureq") (r "^2.7.0") (o #t) (k 0)) (d (n "webpki-roots") (r "^0.25.1") (o #t) (d #t) (k 0)))) (h "0az5jgpw117vr56lkyzrf886g5hxwxnwjrlpvf604cpsrv8fz59f") (f (quote (("transport" "reqwest" "native-tls") ("tracing" "sentry-tracing") ("tower-http" "tower" "sentry-tower/http") ("tower-axum-matched-path" "tower-http" "sentry-tower/axum-matched-path") ("tower" "sentry-tower") ("test" "sentry-core/test") ("surf-h1" "surf/h1-client" "httpdate") ("surf" "surf/curl-client" "http-client" "httpdate" "isahc" "tokio") ("slog" "sentry-slog") ("panic" "sentry-panic") ("log" "sentry-log") ("default" "backtrace" "contexts" "debug-images" "panic" "transport") ("debug-images" "sentry-debug-images") ("contexts" "sentry-contexts") ("anyhow" "sentry-anyhow")))) (s 2) (e (quote (("ureq" "dep:ureq" "httpdate") ("rustls" "dep:rustls" "reqwest?/rustls-tls" "ureq?/tls" "webpki-roots") ("reqwest" "dep:reqwest" "httpdate" "tokio") ("native-tls" "dep:native-tls" "reqwest?/default-tls" "ureq?/native-tls") ("debug-logs" "dep:log" "sentry-core/debug-logs") ("curl" "dep:curl" "httpdate") ("backtrace" "sentry-backtrace" "sentry-tracing?/backtrace")))) (r "1.67")))

(define-public crate-sentry-0.31.7 (c (n "sentry") (v "0.31.7") (d (list (d (n "actix-web") (r "^4") (k 2)) (d (n "anyhow") (r "^1.0.30") (d #t) (k 2)) (d (n "curl") (r "^0.4.25") (o #t) (d #t) (k 0)) (d (n "http-client") (r "^6.5.3") (o #t) (d #t) (k 0)) (d (n "httpdate") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "isahc") (r "^0.9.14") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (d #t) (k 2)) (d (n "native-tls") (r "^0.2.8") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (o #t) (k 0)) (d (n "rustls") (r "^0.21.2") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (k 0)) (d (n "sentry-anyhow") (r "^0.31.7") (o #t) (d #t) (k 0)) (d (n "sentry-backtrace") (r "^0.31.7") (o #t) (d #t) (k 0)) (d (n "sentry-contexts") (r "^0.31.7") (o #t) (d #t) (k 0)) (d (n "sentry-core") (r "^0.31.7") (f (quote ("client"))) (d #t) (k 0)) (d (n "sentry-debug-images") (r "^0.31.7") (o #t) (d #t) (k 0)) (d (n "sentry-log") (r "^0.31.7") (o #t) (d #t) (k 0)) (d (n "sentry-panic") (r "^0.31.7") (o #t) (d #t) (k 0)) (d (n "sentry-slog") (r "^0.31.7") (o #t) (d #t) (k 0)) (d (n "sentry-tower") (r "^0.31.7") (o #t) (d #t) (k 0)) (d (n "sentry-tracing") (r "^0.31.7") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2.5.2") (d #t) (k 2)) (d (n "surf") (r "^2.0.0") (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros"))) (d #t) (k 2)) (d (n "tower") (r "^0.4") (f (quote ("util"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log"))) (d #t) (k 2)) (d (n "ureq") (r "^2.7.0") (o #t) (k 0)) (d (n "webpki-roots") (r "^0.25.1") (o #t) (d #t) (k 0)))) (h "1k5yd8lhc75cxxwr6rsykvr5l7142lxv0z7h14wri7crs66a95q0") (f (quote (("transport" "reqwest" "native-tls") ("tracing" "sentry-tracing") ("tower-http" "tower" "sentry-tower/http") ("tower-axum-matched-path" "tower-http" "sentry-tower/axum-matched-path") ("tower" "sentry-tower") ("test" "sentry-core/test") ("surf-h1" "surf/h1-client" "httpdate") ("surf" "surf/curl-client" "http-client" "httpdate" "isahc" "tokio") ("slog" "sentry-slog") ("panic" "sentry-panic") ("log" "sentry-log") ("default" "backtrace" "contexts" "debug-images" "panic" "transport") ("debug-images" "sentry-debug-images") ("contexts" "sentry-contexts") ("anyhow" "sentry-anyhow")))) (s 2) (e (quote (("ureq" "dep:ureq" "httpdate") ("rustls" "dep:rustls" "reqwest?/rustls-tls" "ureq?/tls" "webpki-roots") ("reqwest" "dep:reqwest" "httpdate" "tokio") ("native-tls" "dep:native-tls" "reqwest?/default-tls" "ureq?/native-tls") ("debug-logs" "dep:log" "sentry-core/debug-logs") ("curl" "dep:curl" "httpdate") ("backtrace" "sentry-backtrace" "sentry-tracing?/backtrace")))) (r "1.68")))

(define-public crate-sentry-0.31.8 (c (n "sentry") (v "0.31.8") (d (list (d (n "actix-web") (r "^4") (k 2)) (d (n "anyhow") (r "^1.0.30") (d #t) (k 2)) (d (n "curl") (r "^0.4.25") (o #t) (d #t) (k 0)) (d (n "http-client") (r "^6.5.3") (o #t) (d #t) (k 0)) (d (n "httpdate") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "isahc") (r "^0.9.14") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (d #t) (k 2)) (d (n "native-tls") (r "^0.2.8") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (o #t) (k 0)) (d (n "rustls") (r "^0.21.2") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (k 0)) (d (n "sentry-anyhow") (r "^0.31.8") (o #t) (d #t) (k 0)) (d (n "sentry-backtrace") (r "^0.31.8") (o #t) (d #t) (k 0)) (d (n "sentry-contexts") (r "^0.31.8") (o #t) (d #t) (k 0)) (d (n "sentry-core") (r "^0.31.8") (f (quote ("client"))) (d #t) (k 0)) (d (n "sentry-debug-images") (r "^0.31.8") (o #t) (d #t) (k 0)) (d (n "sentry-log") (r "^0.31.8") (o #t) (d #t) (k 0)) (d (n "sentry-panic") (r "^0.31.8") (o #t) (d #t) (k 0)) (d (n "sentry-slog") (r "^0.31.8") (o #t) (d #t) (k 0)) (d (n "sentry-tower") (r "^0.31.8") (o #t) (d #t) (k 0)) (d (n "sentry-tracing") (r "^0.31.8") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2.5.2") (d #t) (k 2)) (d (n "surf") (r "^2.0.0") (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros"))) (d #t) (k 2)) (d (n "tower") (r "^0.4") (f (quote ("util"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log"))) (d #t) (k 2)) (d (n "ureq") (r "^2.7.0") (o #t) (k 0)) (d (n "webpki-roots") (r "^0.25.1") (o #t) (d #t) (k 0)))) (h "1mbpadxnaiiiamdy43h228vlxmzmiyz01lm1yx6nf7sj3dzvbr3c") (f (quote (("transport" "reqwest" "native-tls") ("tracing" "sentry-tracing") ("tower-http" "tower" "sentry-tower/http") ("tower-axum-matched-path" "tower-http" "sentry-tower/axum-matched-path") ("tower" "sentry-tower") ("test" "sentry-core/test") ("surf-h1" "surf/h1-client" "httpdate") ("surf" "surf/curl-client" "http-client" "httpdate" "isahc" "tokio") ("slog" "sentry-slog") ("panic" "sentry-panic") ("log" "sentry-log") ("default" "backtrace" "contexts" "debug-images" "panic" "transport") ("debug-images" "sentry-debug-images") ("contexts" "sentry-contexts") ("anyhow" "sentry-anyhow")))) (s 2) (e (quote (("ureq" "dep:ureq" "httpdate") ("rustls" "dep:rustls" "reqwest?/rustls-tls" "ureq?/tls" "webpki-roots") ("reqwest" "dep:reqwest" "httpdate" "tokio") ("native-tls" "dep:native-tls" "reqwest?/default-tls" "ureq?/native-tls") ("debug-logs" "dep:log" "sentry-core/debug-logs") ("curl" "dep:curl" "httpdate") ("backtrace" "sentry-backtrace" "sentry-tracing?/backtrace")))) (r "1.68")))

(define-public crate-sentry-0.32.0 (c (n "sentry") (v "0.32.0") (d (list (d (n "actix-web") (r "^4") (k 2)) (d (n "anyhow") (r "^1.0.30") (d #t) (k 2)) (d (n "curl") (r "^0.4.25") (o #t) (d #t) (k 0)) (d (n "http-client") (r "^6.5.3") (o #t) (d #t) (k 0)) (d (n "httpdate") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "isahc") (r "^0.9.14") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (d #t) (k 2)) (d (n "native-tls") (r "^0.2.8") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.5.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (o #t) (k 0)) (d (n "rustls") (r "^0.21.2") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (k 0)) (d (n "sentry-anyhow") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "sentry-backtrace") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "sentry-contexts") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "sentry-core") (r "^0.32.0") (f (quote ("client"))) (d #t) (k 0)) (d (n "sentry-debug-images") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "sentry-log") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "sentry-panic") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "sentry-slog") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "sentry-tower") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "sentry-tracing") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2.5.2") (d #t) (k 2)) (d (n "surf") (r "^2.0.0") (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros"))) (d #t) (k 2)) (d (n "tower") (r "^0.4") (f (quote ("util"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log"))) (d #t) (k 2)) (d (n "ureq") (r "^2.7.0") (o #t) (k 0)) (d (n "webpki-roots") (r "^0.25.1") (o #t) (d #t) (k 0)))) (h "0y8r5prw4va0fwdpzz31ci0padlj7pyrdjk3c3g3hrp7ykjnwncv") (f (quote (("transport" "reqwest" "native-tls") ("tracing" "sentry-tracing") ("tower-http" "tower" "sentry-tower/http") ("tower-axum-matched-path" "tower-http" "sentry-tower/axum-matched-path") ("tower" "sentry-tower") ("test" "sentry-core/test") ("surf-h1" "surf/h1-client" "httpdate") ("surf" "surf/curl-client" "http-client" "httpdate" "isahc" "tokio") ("slog" "sentry-slog") ("panic" "sentry-panic") ("log" "sentry-log") ("default" "backtrace" "contexts" "debug-images" "panic" "transport") ("debug-images" "sentry-debug-images") ("contexts" "sentry-contexts") ("anyhow" "sentry-anyhow")))) (s 2) (e (quote (("ureq" "dep:ureq" "httpdate") ("rustls" "dep:rustls" "reqwest?/rustls-tls" "ureq?/tls" "webpki-roots") ("reqwest" "dep:reqwest" "httpdate" "tokio") ("native-tls" "dep:native-tls" "reqwest?/default-tls" "ureq?/native-tls") ("debug-logs" "dep:log" "sentry-core/debug-logs") ("curl" "dep:curl" "httpdate") ("backtrace" "sentry-backtrace" "sentry-tracing?/backtrace")))) (r "1.68")))

(define-public crate-sentry-0.32.1 (c (n "sentry") (v "0.32.1") (d (list (d (n "actix-web") (r "^4") (k 2)) (d (n "anyhow") (r "^1.0.30") (d #t) (k 2)) (d (n "curl") (r "^0.4.25") (o #t) (d #t) (k 0)) (d (n "http-client") (r "^6.5.3") (o #t) (d #t) (k 0)) (d (n "httpdate") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "isahc") (r "^0.9.14") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (d #t) (k 2)) (d (n "native-tls") (r "^0.2.8") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.5.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (o #t) (k 0)) (d (n "rustls") (r "^0.21.2") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (k 0)) (d (n "sentry-anyhow") (r "^0.32.1") (o #t) (d #t) (k 0)) (d (n "sentry-backtrace") (r "^0.32.1") (o #t) (d #t) (k 0)) (d (n "sentry-contexts") (r "^0.32.1") (o #t) (d #t) (k 0)) (d (n "sentry-core") (r "^0.32.1") (f (quote ("client"))) (d #t) (k 0)) (d (n "sentry-debug-images") (r "^0.32.1") (o #t) (d #t) (k 0)) (d (n "sentry-log") (r "^0.32.1") (o #t) (d #t) (k 0)) (d (n "sentry-panic") (r "^0.32.1") (o #t) (d #t) (k 0)) (d (n "sentry-slog") (r "^0.32.1") (o #t) (d #t) (k 0)) (d (n "sentry-tower") (r "^0.32.1") (o #t) (d #t) (k 0)) (d (n "sentry-tracing") (r "^0.32.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2.5.2") (d #t) (k 2)) (d (n "surf") (r "^2.0.0") (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros"))) (d #t) (k 2)) (d (n "tower") (r "^0.4") (f (quote ("util"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log"))) (d #t) (k 2)) (d (n "ureq") (r "^2.7.0") (o #t) (k 0)) (d (n "webpki-roots") (r "^0.25.1") (o #t) (d #t) (k 0)))) (h "1w8npggaldzsibcw5gzwqbj3bgp4fqgqc15vr4khz2gvc8gj265b") (f (quote (("transport" "reqwest" "native-tls") ("tracing" "sentry-tracing") ("tower-http" "tower" "sentry-tower/http") ("tower-axum-matched-path" "tower-http" "sentry-tower/axum-matched-path") ("tower" "sentry-tower") ("test" "sentry-core/test") ("surf-h1" "surf/h1-client" "httpdate") ("surf" "surf/curl-client" "http-client" "httpdate" "isahc" "tokio") ("slog" "sentry-slog") ("panic" "sentry-panic") ("log" "sentry-log") ("default" "backtrace" "contexts" "debug-images" "panic" "transport") ("debug-images" "sentry-debug-images") ("contexts" "sentry-contexts") ("anyhow" "sentry-anyhow") ("UNSTABLE_metrics" "sentry-core/UNSTABLE_metrics")))) (s 2) (e (quote (("ureq" "dep:ureq" "httpdate") ("rustls" "dep:rustls" "reqwest?/rustls-tls" "ureq?/tls" "webpki-roots") ("reqwest" "dep:reqwest" "httpdate" "tokio") ("native-tls" "dep:native-tls" "reqwest?/default-tls" "ureq?/native-tls") ("debug-logs" "dep:log" "sentry-core/debug-logs") ("curl" "dep:curl" "httpdate") ("backtrace" "sentry-backtrace" "sentry-tracing?/backtrace")))) (r "1.68")))

(define-public crate-sentry-0.32.2 (c (n "sentry") (v "0.32.2") (d (list (d (n "actix-web") (r "^4") (k 2)) (d (n "anyhow") (r "^1.0.30") (d #t) (k 2)) (d (n "curl") (r "^0.4.25") (o #t) (d #t) (k 0)) (d (n "http-client") (r "^6.5.3") (o #t) (d #t) (k 0)) (d (n "httpdate") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "isahc") (r "^0.9.14") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (d #t) (k 2)) (d (n "native-tls") (r "^0.2.8") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.5.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (o #t) (k 0)) (d (n "rustls") (r "^0.21.2") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (k 0)) (d (n "sentry-anyhow") (r "^0.32.2") (o #t) (d #t) (k 0)) (d (n "sentry-backtrace") (r "^0.32.2") (o #t) (d #t) (k 0)) (d (n "sentry-contexts") (r "^0.32.2") (o #t) (d #t) (k 0)) (d (n "sentry-core") (r "^0.32.2") (f (quote ("client"))) (d #t) (k 0)) (d (n "sentry-debug-images") (r "^0.32.2") (o #t) (d #t) (k 0)) (d (n "sentry-log") (r "^0.32.2") (o #t) (d #t) (k 0)) (d (n "sentry-panic") (r "^0.32.2") (o #t) (d #t) (k 0)) (d (n "sentry-slog") (r "^0.32.2") (o #t) (d #t) (k 0)) (d (n "sentry-tower") (r "^0.32.2") (o #t) (d #t) (k 0)) (d (n "sentry-tracing") (r "^0.32.2") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2.5.2") (d #t) (k 2)) (d (n "surf") (r "^2.0.0") (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros"))) (d #t) (k 2)) (d (n "tower") (r "^0.4") (f (quote ("util"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log"))) (d #t) (k 2)) (d (n "ureq") (r "^2.7.0") (o #t) (k 0)) (d (n "webpki-roots") (r "^0.25.1") (o #t) (d #t) (k 0)))) (h "08wmlj26ri59a7abs2i4rmnaqijwa5hs52apbmkqxmj45vqlhr3n") (f (quote (("transport" "reqwest" "native-tls") ("tracing" "sentry-tracing") ("tower-http" "tower" "sentry-tower/http") ("tower-axum-matched-path" "tower-http" "sentry-tower/axum-matched-path") ("tower" "sentry-tower") ("test" "sentry-core/test") ("surf-h1" "surf/h1-client" "httpdate") ("surf" "surf/curl-client" "http-client" "httpdate" "isahc" "tokio") ("slog" "sentry-slog") ("panic" "sentry-panic") ("log" "sentry-log") ("default" "backtrace" "contexts" "debug-images" "panic" "transport") ("debug-images" "sentry-debug-images") ("contexts" "sentry-contexts") ("anyhow" "sentry-anyhow") ("UNSTABLE_metrics" "sentry-core/UNSTABLE_metrics")))) (s 2) (e (quote (("ureq" "dep:ureq" "httpdate") ("rustls" "dep:rustls" "reqwest?/rustls-tls" "ureq?/tls" "webpki-roots") ("reqwest" "dep:reqwest" "httpdate" "tokio") ("native-tls" "dep:native-tls" "reqwest?/default-tls" "ureq?/native-tls") ("debug-logs" "dep:log" "sentry-core/debug-logs") ("curl" "dep:curl" "httpdate") ("backtrace" "sentry-backtrace" "sentry-tracing?/backtrace")))) (r "1.68")))

(define-public crate-sentry-0.32.3 (c (n "sentry") (v "0.32.3") (d (list (d (n "actix-web") (r "^4") (k 2)) (d (n "anyhow") (r "^1.0.30") (d #t) (k 2)) (d (n "curl") (r "^0.4.25") (o #t) (d #t) (k 0)) (d (n "http-client") (r "^6.5.3") (o #t) (d #t) (k 0)) (d (n "httpdate") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "isahc") (r "^0.9.14") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (d #t) (k 2)) (d (n "native-tls") (r "^0.2.8") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.5.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.12") (f (quote ("blocking" "json"))) (o #t) (k 0)) (d (n "rustls") (r "^0.21.2") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (k 0)) (d (n "sentry-anyhow") (r "^0.32.3") (o #t) (d #t) (k 0)) (d (n "sentry-backtrace") (r "^0.32.3") (o #t) (d #t) (k 0)) (d (n "sentry-contexts") (r "^0.32.3") (o #t) (d #t) (k 0)) (d (n "sentry-core") (r "^0.32.3") (f (quote ("client"))) (d #t) (k 0)) (d (n "sentry-debug-images") (r "^0.32.3") (o #t) (d #t) (k 0)) (d (n "sentry-log") (r "^0.32.3") (o #t) (d #t) (k 0)) (d (n "sentry-panic") (r "^0.32.3") (o #t) (d #t) (k 0)) (d (n "sentry-slog") (r "^0.32.3") (o #t) (d #t) (k 0)) (d (n "sentry-tower") (r "^0.32.3") (o #t) (d #t) (k 0)) (d (n "sentry-tracing") (r "^0.32.3") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2.5.2") (d #t) (k 2)) (d (n "surf") (r "^2.0.0") (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros"))) (d #t) (k 2)) (d (n "tower") (r "^0.4") (f (quote ("util"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log"))) (d #t) (k 2)) (d (n "ureq") (r "^2.7.0") (o #t) (k 0)) (d (n "webpki-roots") (r "^0.25.1") (o #t) (d #t) (k 0)))) (h "00my7b9bybrrdwr3gxjgyw9b7wl0kv4ad2z4rl3mz68czbc1whh0") (f (quote (("transport" "reqwest" "native-tls") ("tracing" "sentry-tracing") ("tower-http" "tower" "sentry-tower/http") ("tower-axum-matched-path" "tower-http" "sentry-tower/axum-matched-path") ("tower" "sentry-tower") ("test" "sentry-core/test") ("surf-h1" "surf/h1-client" "httpdate") ("surf" "surf/curl-client" "http-client" "httpdate" "isahc" "tokio") ("slog" "sentry-slog") ("panic" "sentry-panic") ("log" "sentry-log") ("default" "backtrace" "contexts" "debug-images" "panic" "transport") ("debug-images" "sentry-debug-images") ("contexts" "sentry-contexts") ("anyhow" "sentry-anyhow") ("UNSTABLE_metrics" "sentry-core/UNSTABLE_metrics")))) (s 2) (e (quote (("ureq" "dep:ureq" "httpdate") ("rustls" "dep:rustls" "reqwest?/rustls-tls" "ureq?/tls" "webpki-roots") ("reqwest" "dep:reqwest" "httpdate" "tokio") ("native-tls" "dep:native-tls" "reqwest?/default-tls" "ureq?/native-tls") ("debug-logs" "dep:log" "sentry-core/debug-logs") ("curl" "dep:curl" "httpdate") ("backtrace" "sentry-backtrace" "sentry-tracing?/backtrace")))) (r "1.73")))

(define-public crate-sentry-0.33.0 (c (n "sentry") (v "0.33.0") (d (list (d (n "actix-web") (r "^4") (k 2)) (d (n "anyhow") (r "^1.0.30") (d #t) (k 2)) (d (n "curl") (r "^0.4.25") (o #t) (d #t) (k 0)) (d (n "embedded-svc") (r "^0.27.1") (o #t) (d #t) (k 0)) (d (n "esp-idf-svc") (r "^0.48.1") (o #t) (d #t) (t "cfg(target_os = \"espidf\")") (k 0)) (d (n "http-client") (r "^6.5.3") (o #t) (d #t) (k 0)) (d (n "httpdate") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "isahc") (r "^0.9.14") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (d #t) (k 2)) (d (n "native-tls") (r "^0.2.8") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.5.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.12") (f (quote ("blocking" "json"))) (o #t) (k 0)) (d (n "rustls") (r "^0.21.2") (f (quote ("dangerous_configuration"))) (o #t) (d #t) (k 0)) (d (n "sentry-anyhow") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "sentry-backtrace") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "sentry-contexts") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "sentry-core") (r "^0.33.0") (f (quote ("client"))) (d #t) (k 0)) (d (n "sentry-debug-images") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "sentry-log") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "sentry-panic") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "sentry-slog") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "sentry-tower") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "sentry-tracing") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2.5.2") (d #t) (k 2)) (d (n "surf") (r "^2.0.0") (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros"))) (d #t) (k 2)) (d (n "tower") (r "^0.4") (f (quote ("util"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log"))) (d #t) (k 2)) (d (n "ureq") (r "^2.7.0") (o #t) (k 0)) (d (n "webpki-roots") (r "^0.25.1") (o #t) (d #t) (k 0)))) (h "0jfxkkyv6z2f5sg3nwkrrv7j2y34hv4bi7g826373v9mbffsnwrv") (f (quote (("transport" "reqwest" "native-tls") ("tracing" "sentry-tracing") ("tower-http" "tower" "sentry-tower/http") ("tower-axum-matched-path" "tower-http" "sentry-tower/axum-matched-path") ("tower" "sentry-tower") ("test" "sentry-core/test") ("surf-h1" "surf/h1-client" "httpdate") ("surf" "surf/curl-client" "http-client" "httpdate" "isahc" "tokio") ("slog" "sentry-slog") ("panic" "sentry-panic") ("log" "sentry-log") ("default" "backtrace" "contexts" "debug-images" "panic" "transport") ("debug-images" "sentry-debug-images") ("contexts" "sentry-contexts") ("anyhow" "sentry-anyhow") ("UNSTABLE_metrics" "sentry-core/UNSTABLE_metrics")))) (s 2) (e (quote (("ureq" "dep:ureq" "httpdate") ("rustls" "dep:rustls" "reqwest?/rustls-tls" "ureq?/tls" "webpki-roots") ("reqwest" "dep:reqwest" "httpdate" "tokio") ("native-tls" "dep:native-tls" "reqwest?/default-tls" "ureq?/native-tls") ("embedded-svc-http" "dep:embedded-svc" "dep:esp-idf-svc") ("debug-logs" "dep:log" "sentry-core/debug-logs") ("curl" "dep:curl" "httpdate") ("backtrace" "sentry-backtrace" "sentry-tracing?/backtrace")))) (r "1.73")))

(define-public crate-sentry-0.34.0 (c (n "sentry") (v "0.34.0") (d (list (d (n "actix-web") (r "^4") (k 2)) (d (n "anyhow") (r "^1.0.30") (d #t) (k 2)) (d (n "curl") (r "^0.4.25") (o #t) (d #t) (k 0)) (d (n "embedded-svc") (r "^0.27.1") (o #t) (d #t) (k 0)) (d (n "esp-idf-svc") (r "^0.48.1") (o #t) (d #t) (t "cfg(target_os = \"espidf\")") (k 0)) (d (n "http-client") (r "^6.5.3") (o #t) (d #t) (k 0)) (d (n "httpdate") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "isahc") (r "^0.9.14") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (d #t) (k 2)) (d (n "native-tls") (r "^0.2.8") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.5.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.12") (f (quote ("blocking" "json"))) (o #t) (k 0)) (d (n "rustls") (r "^0.22.4") (o #t) (d #t) (k 0)) (d (n "sentry-anyhow") (r "^0.34.0") (o #t) (d #t) (k 0)) (d (n "sentry-backtrace") (r "^0.34.0") (o #t) (d #t) (k 0)) (d (n "sentry-contexts") (r "^0.34.0") (o #t) (d #t) (k 0)) (d (n "sentry-core") (r "^0.34.0") (f (quote ("client"))) (d #t) (k 0)) (d (n "sentry-debug-images") (r "^0.34.0") (o #t) (d #t) (k 0)) (d (n "sentry-log") (r "^0.34.0") (o #t) (d #t) (k 0)) (d (n "sentry-panic") (r "^0.34.0") (o #t) (d #t) (k 0)) (d (n "sentry-slog") (r "^0.34.0") (o #t) (d #t) (k 0)) (d (n "sentry-tower") (r "^0.34.0") (o #t) (d #t) (k 0)) (d (n "sentry-tracing") (r "^0.34.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2.5.2") (d #t) (k 2)) (d (n "surf") (r "^2.0.0") (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros"))) (d #t) (k 2)) (d (n "tower") (r "^0.4") (f (quote ("util"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "tracing-log"))) (d #t) (k 2)) (d (n "ureq") (r "^2.7.0") (o #t) (k 0)) (d (n "webpki-roots") (r "^0.26.1") (o #t) (d #t) (k 0)))) (h "0rhh5rabcj5n8h9gbqi1983lhghfrr3cgm237gq840b5arjk312l") (f (quote (("transport" "reqwest" "native-tls") ("tracing" "sentry-tracing") ("tower-http" "tower" "sentry-tower/http") ("tower-axum-matched-path" "tower-http" "sentry-tower/axum-matched-path") ("tower" "sentry-tower") ("test" "sentry-core/test") ("surf-h1" "surf/h1-client" "httpdate") ("surf" "surf/curl-client" "http-client" "httpdate" "isahc" "tokio") ("slog" "sentry-slog") ("panic" "sentry-panic") ("metrics-cadence1" "sentry-core/metrics-cadence1") ("metrics" "sentry-core/metrics") ("log" "sentry-log") ("default" "backtrace" "contexts" "debug-images" "panic" "transport") ("debug-images" "sentry-debug-images") ("contexts" "sentry-contexts") ("anyhow" "sentry-anyhow")))) (s 2) (e (quote (("ureq" "dep:ureq" "httpdate") ("rustls" "dep:rustls" "reqwest?/rustls-tls" "ureq?/tls" "webpki-roots") ("reqwest" "dep:reqwest" "httpdate" "tokio") ("native-tls" "dep:native-tls" "reqwest?/default-tls" "ureq?/native-tls") ("embedded-svc-http" "dep:embedded-svc" "dep:esp-idf-svc") ("debug-logs" "dep:log" "sentry-core/debug-logs") ("curl" "dep:curl" "httpdate") ("backtrace" "sentry-backtrace" "sentry-tracing?/backtrace")))) (r "1.73")))

