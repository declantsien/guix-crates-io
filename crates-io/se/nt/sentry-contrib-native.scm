(define-module (crates-io se nt sentry-contrib-native) #:use-module (crates-io))

(define-public crate-sentry-contrib-native-0.0.1 (c (n "sentry-contrib-native") (v "0.0.1") (h "0nix2yysf2h5xdf8vf2h4dj1pigdb24zcmpk1vnd7ddgmfc5j1ga")))

(define-public crate-sentry-contrib-native-0.1.0-alpha (c (n "sentry-contrib-native") (v "0.1.0-alpha") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "http") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.6") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 2)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking" "brotli" "json" "rustls-tls"))) (k 2)) (d (n "rmpv") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sys") (r "^0.1.0-alpha") (k 0) (p "sentry-contrib-native-sys")) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("macros" "rt-threaded"))) (d #t) (k 2)) (d (n "url") (r "^2") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 2)) (d (n "vsprintf") (r "^1.0.2-pr") (d #t) (k 0) (p "daxpedda-vsprintf")))) (h "0d7nfh1h48rhgvdvs6ggzxihq5l1mw4wz38jzlgj82r0dbp734fh") (f (quote (("test") ("nightly" "sys/nightly") ("default-transport" "sys/default-transport") ("default" "default-transport") ("custom-transport" "http" "url"))))))

(define-public crate-sentry-contrib-native-0.1.0-alpha-2 (c (n "sentry-contrib-native") (v "0.1.0-alpha-2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "http") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.6") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 2)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking" "brotli" "json" "rustls-tls"))) (k 2)) (d (n "rmpv") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sys") (r "^0.1.0-alpha") (k 0) (p "sentry-contrib-native-sys")) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("macros" "rt-threaded"))) (d #t) (k 2)) (d (n "url") (r "^2") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 2)) (d (n "vsprintf") (r "^1.0.2-pr") (d #t) (k 0) (p "daxpedda-vsprintf")))) (h "0nhy8i5b0wkq7jx0bvshrq7k92cry9xzmbz86lsxm94c2d9lb93h") (f (quote (("test") ("nightly" "sys/nightly") ("default-transport" "sys/default-transport") ("default" "default-transport") ("custom-transport" "http" "url"))))))

(define-public crate-sentry-contrib-native-0.1.0-rc (c (n "sentry-contrib-native") (v "0.1.0-rc") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "http") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.6") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking" "brotli" "json" "rustls-tls"))) (k 2)) (d (n "rmpv") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha-1") (r "^0.9") (d #t) (k 2)) (d (n "sys") (r "^0.1.0-alpha") (k 0) (p "sentry-contrib-native-sys")) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("macros" "process" "rt-threaded"))) (d #t) (k 2)) (d (n "url") (r "^2") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 2)) (d (n "vsprintf") (r "^2") (d #t) (k 0)))) (h "0cjd6086asrrvs5i56maa3mv2aywz62s7rx3q2iipbrnskz8pqs9") (f (quote (("test") ("nightly" "sys/nightly") ("default-transport" "sys/default-transport") ("default" "default-transport") ("custom-transport" "http" "url"))))))

(define-public crate-sentry-contrib-native-0.1.0 (c (n "sentry-contrib-native") (v "0.1.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "http") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.6") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking" "brotli" "json" "rustls-tls"))) (k 2)) (d (n "rmpv") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha-1") (r "^0.9") (d #t) (k 2)) (d (n "sys") (r "^0.1.0") (k 0) (p "sentry-contrib-native-sys")) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("macros" "process" "rt-threaded"))) (d #t) (k 2)) (d (n "url") (r "^2") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 2)) (d (n "vsprintf") (r "^2") (d #t) (k 0)))) (h "08xf71w7wc10kifxm63n6m54hzcdlpi8miwdhfwil57s9h4h5m12") (f (quote (("transport-default" "sys/transport-default") ("transport-custom" "http" "url") ("test") ("nightly" "sys/nightly") ("default" "backend-default" "transport-default") ("backend-inproc" "sys/backend-inproc") ("backend-default" "sys/backend-default") ("backend-crashpad" "sys/backend-crashpad") ("backend-breakpad" "sys/backend-breakpad"))))))

(define-public crate-sentry-contrib-native-0.2.0 (c (n "sentry-contrib-native") (v "0.2.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "http") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.6") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "brotli" "json" "rustls-tls"))) (k 2)) (d (n "rmpv") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha-1") (r "^0.9") (d #t) (k 2)) (d (n "sys") (r "^0.2.0") (k 0) (p "sentry-contrib-native-sys")) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "process" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "url") (r "^2") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 2)) (d (n "vsprintf") (r "^2") (d #t) (k 0)))) (h "13rdb8hyglmba7xnl2y8dazrihj0rgb69i1wnq170yd2igbn27ql") (f (quote (("transport-default" "sys/transport-default") ("transport-custom" "http" "url") ("test") ("nightly" "sys/nightly") ("default" "transport-default") ("backend-inproc" "sys/backend-inproc") ("backend-crashpad" "sys/backend-crashpad") ("backend-breakpad" "sys/backend-breakpad"))))))

(define-public crate-sentry-contrib-native-0.2.1 (c (n "sentry-contrib-native") (v "0.2.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "http") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.6") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "brotli" "json" "rustls-tls"))) (k 2)) (d (n "rmpv") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha-1") (r "^0.9") (d #t) (k 2)) (d (n "sys") (r "^0.2.1") (k 0) (p "sentry-contrib-native-sys")) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "process" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "url") (r "^2") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 2)) (d (n "vsprintf") (r "^2") (d #t) (k 0)))) (h "0lrx91afli1zjfczc78bq25s0wjsz918nfn1b07gy1plfh2dcmf8") (f (quote (("transport-default" "sys/transport-default") ("transport-custom" "http" "url") ("test") ("nightly" "sys/nightly") ("default" "transport-default") ("backend-inproc" "sys/backend-inproc") ("backend-crashpad" "sys/backend-crashpad") ("backend-breakpad" "sys/backend-breakpad"))))))

(define-public crate-sentry-contrib-native-0.3.0 (c (n "sentry-contrib-native") (v "0.3.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "http") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.7") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "brotli" "json" "rustls-tls"))) (k 2)) (d (n "rmpv") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha-1") (r "^0.9") (d #t) (k 2)) (d (n "sys") (r "^0.3.0") (k 0) (p "sentry-contrib-native-sys")) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "process" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "url") (r "^2") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 2)) (d (n "vsprintf") (r "^2") (d #t) (k 0)))) (h "0zslfs9p9fxx60i6kfjyb6wf0lgvpq4k3sh8yqa6cffj54yrmrnv") (f (quote (("transport-default" "sys/transport-default") ("transport-custom" "http" "url") ("test") ("nightly" "sys/nightly") ("default" "transport-default") ("backend-inproc" "sys/backend-inproc") ("backend-crashpad" "sys/backend-crashpad") ("backend-breakpad" "sys/backend-breakpad"))))))

(define-public crate-sentry-contrib-native-0.3.1 (c (n "sentry-contrib-native") (v "0.3.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "http") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.7") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "brotli" "json" "rustls-tls"))) (k 2)) (d (n "rmpv") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha-1") (r "^0.9") (d #t) (k 2)) (d (n "sys") (r "^0.3.1") (k 0) (p "sentry-contrib-native-sys")) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "process" "rt-multi-thread" "sync" "time"))) (d #t) (k 2)) (d (n "url") (r "^2") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 2)) (d (n "vsprintf") (r "^2") (d #t) (k 0)))) (h "1qnz99sjwakg2pyh3rn7jxd2w99y7cvjigs1x71fppaic6p0g9nr") (f (quote (("transport-default" "sys/transport-default") ("transport-custom" "http" "url") ("test") ("nightly" "sys/nightly") ("default" "transport-default") ("backend-inproc" "sys/backend-inproc") ("backend-crashpad" "sys/backend-crashpad") ("backend-breakpad" "sys/backend-breakpad"))))))

