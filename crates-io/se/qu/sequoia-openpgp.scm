(define-module (crates-io se qu sequoia-openpgp) #:use-module (crates-io))

(define-public crate-sequoia-openpgp-0.1.0 (c (n "sequoia-openpgp") (v "0.1.0") (d (list (d (n "base64") (r "^0.9.0") (d #t) (k 0)) (d (n "buffered-reader") (r "^0.1.0") (k 0)) (d (n "bzip2") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "lalrpop") (r "^0.16") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.16") (d #t) (k 0)) (d (n "memsec") (r "^0.5.4") (d #t) (k 0)) (d (n "nettle") (r "^2.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "time") (r "^0.1.38") (d #t) (k 0)))) (h "07isl1bwin6ghxalyfsf57la1ym1c9vmz9ggmvg4f29apm9a973j") (f (quote (("default" "compression") ("compression-deflate" "flate2" "buffered-reader/compression-deflate") ("compression-bzip2" "bzip2" "buffered-reader/compression-bzip2") ("compression" "compression-deflate" "compression-bzip2"))))))

(define-public crate-sequoia-openpgp-0.2.0 (c (n "sequoia-openpgp") (v "0.2.0") (d (list (d (n "base64") (r "^0.9.0") (d #t) (k 0)) (d (n "buffered-reader") (r "^0.2.0") (k 0)) (d (n "bzip2") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "lalrpop") (r "^0.16") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.16") (d #t) (k 0)) (d (n "memsec") (r "^0.5.4") (d #t) (k 0)) (d (n "nettle") (r "^2.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "time") (r "^0.1.38") (d #t) (k 0)))) (h "1x7kw93zyi61aik2f3kp2lj9p4svdr6w6nxpkn7rczi2zwccg3j5") (f (quote (("default" "compression") ("compression-deflate" "flate2" "buffered-reader/compression-deflate") ("compression-bzip2" "bzip2" "buffered-reader/compression-bzip2") ("compression" "compression-deflate" "compression-bzip2"))))))

(define-public crate-sequoia-openpgp-0.3.0 (c (n "sequoia-openpgp") (v "0.3.0") (d (list (d (n "base64") (r "^0.9.0") (d #t) (k 0)) (d (n "buffered-reader") (r "^0.3.0") (k 0)) (d (n "bzip2") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "lalrpop") (r "^0.16") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.16") (d #t) (k 0)) (d (n "memsec") (r "^0.5.4") (d #t) (k 0)) (d (n "nettle") (r "^2.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "time") (r "^0.1.40") (d #t) (k 0)))) (h "1g9p8drpvi2lvhgbmpgas347a3hb3ks1zxhgkpi4y0pfizcws4mq") (f (quote (("default" "compression") ("compression-deflate" "flate2" "buffered-reader/compression-deflate") ("compression-bzip2" "bzip2" "buffered-reader/compression-bzip2") ("compression" "compression-deflate" "compression-bzip2"))))))

(define-public crate-sequoia-openpgp-0.4.0 (c (n "sequoia-openpgp") (v "0.4.0") (d (list (d (n "base64") (r "^0.9.0") (d #t) (k 0)) (d (n "buffered-reader") (r "^0.3.0") (k 0)) (d (n "bzip2") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "lalrpop") (r "^0.16") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.16") (d #t) (k 0)) (d (n "memsec") (r "^0.5.4") (d #t) (k 0)) (d (n "nettle") (r "^4.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "rpassword") (r "^2.0.0") (d #t) (k 2)) (d (n "time") (r "^0.1.40") (d #t) (k 0)))) (h "11d9f8i31d9lmp2ixvb0mxwjfay0c85rw78j8x47mvf15rqmcm6d") (f (quote (("default" "compression") ("compression-deflate" "flate2" "buffered-reader/compression-deflate") ("compression-bzip2" "bzip2" "buffered-reader/compression-bzip2") ("compression" "compression-deflate" "compression-bzip2"))))))

(define-public crate-sequoia-openpgp-0.4.1 (c (n "sequoia-openpgp") (v "0.4.1") (d (list (d (n "base64") (r "^0.9.0") (d #t) (k 0)) (d (n "buffered-reader") (r "^0.3.0") (k 0)) (d (n "bzip2") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "lalrpop") (r "^0.16") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.16") (d #t) (k 0)) (d (n "memsec") (r "^0.5.4") (d #t) (k 0)) (d (n "nettle") (r "^4.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "rpassword") (r "^2.0.0") (d #t) (k 2)) (d (n "time") (r "^0.1.40") (d #t) (k 0)))) (h "0jzwcbndn15byigjyd3m5z4x9rbdkfs023xckjwv2q2h7d9war9m") (f (quote (("default" "compression") ("compression-deflate" "flate2" "buffered-reader/compression-deflate") ("compression-bzip2" "bzip2" "buffered-reader/compression-bzip2") ("compression" "compression-deflate" "compression-bzip2"))))))

(define-public crate-sequoia-openpgp-0.5.0 (c (n "sequoia-openpgp") (v "0.5.0") (d (list (d (n "base64") (r "^0.9.0") (d #t) (k 0)) (d (n "buffered-reader") (r "^0.5") (k 0)) (d (n "bzip2") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "lalrpop") (r "^0.16") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.16") (d #t) (k 0)) (d (n "memsec") (r "^0.5.4") (d #t) (k 0)) (d (n "nettle") (r "^5.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "rpassword") (r "^2.0.0") (d #t) (k 2)) (d (n "time") (r "^0.1.40") (d #t) (k 0)))) (h "11bvx2xyfizhxp9kc358s2fis7150i4dvr1gqikrrx9fjas0zi2d") (f (quote (("default" "compression") ("compression-deflate" "flate2" "buffered-reader/compression-deflate") ("compression-bzip2" "bzip2" "buffered-reader/compression-bzip2") ("compression" "compression-deflate" "compression-bzip2"))))))

(define-public crate-sequoia-openpgp-0.6.0 (c (n "sequoia-openpgp") (v "0.6.0") (d (list (d (n "base64") (r "^0.9.0") (d #t) (k 0)) (d (n "buffered-reader") (r "^0.6") (k 0)) (d (n "bzip2") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "lalrpop") (r "^0.16") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.16") (d #t) (k 0)) (d (n "memsec") (r "^0.5.4") (d #t) (k 0)) (d (n "nettle") (r "^5.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "rpassword") (r "^3.0") (d #t) (k 2)) (d (n "sequoia-rfc2822") (r "^0.6") (d #t) (k 0)) (d (n "time") (r "^0.1.40") (d #t) (k 0)))) (h "1z9cjjfnllcvq5ccd3g26f1428qz6nswjhbrdsxnzf0s2ngagk39") (f (quote (("default" "compression") ("compression-deflate" "flate2" "buffered-reader/compression-deflate") ("compression-bzip2" "bzip2" "buffered-reader/compression-bzip2") ("compression" "compression-deflate" "compression-bzip2"))))))

(define-public crate-sequoia-openpgp-0.7.0 (c (n "sequoia-openpgp") (v "0.7.0") (d (list (d (n "base64") (r "^0.9.0") (d #t) (k 0)) (d (n "buffered-reader") (r "^0.7") (k 0)) (d (n "bzip2") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "idna") (r "^0.1") (d #t) (k 0)) (d (n "lalrpop") (r "^0.16") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.16") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "memsec") (r "^0.5.4") (d #t) (k 0)) (d (n "nettle") (r "^5.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "rpassword") (r "^3.0") (d #t) (k 2)) (d (n "sequoia-rfc2822") (r "^0.7") (d #t) (k 0)) (d (n "time") (r "^0.1.40") (d #t) (k 0)))) (h "1l0ksgpmwqd4wf5nlqy55sr5qgq5nsmzmbnq672g7hz81chkym9k") (f (quote (("default" "compression") ("compression-deflate" "flate2" "buffered-reader/compression-deflate") ("compression-bzip2" "bzip2" "buffered-reader/compression-bzip2") ("compression" "compression-deflate" "compression-bzip2"))))))

(define-public crate-sequoia-openpgp-0.8.0 (c (n "sequoia-openpgp") (v "0.8.0") (d (list (d (n "base64") (r "^0.9.0") (d #t) (k 0)) (d (n "buffered-reader") (r "^0.8") (k 0)) (d (n "bzip2") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "idna") (r "^0.1") (d #t) (k 0)) (d (n "lalrpop") (r "^0.17") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.17") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "memsec") (r "^0.5.6") (d #t) (k 0)) (d (n "nettle") (r "^5.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "rpassword") (r "^3.0") (d #t) (k 2)) (d (n "sequoia-rfc2822") (r "^0.8") (d #t) (k 0)) (d (n "time") (r "^0.1.40") (d #t) (k 0)))) (h "01jg4lyh73w56pkcc85spqb9v24j0jvri6nqfm3wjwipdpqv9ddz") (f (quote (("default" "compression") ("compression-deflate" "flate2" "buffered-reader/compression-deflate") ("compression-bzip2" "bzip2" "buffered-reader/compression-bzip2") ("compression" "compression-deflate" "compression-bzip2"))))))

(define-public crate-sequoia-openpgp-0.9.0 (c (n "sequoia-openpgp") (v "0.9.0") (d (list (d (n "base64") (r "^0.9.0") (d #t) (k 0)) (d (n "buffered-reader") (r "^0.9") (k 0)) (d (n "bzip2") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "idna") (r "^0.1") (d #t) (k 0)) (d (n "lalrpop") (r "^0.17") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.17") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "memsec") (r "^0.5.6") (d #t) (k 0)) (d (n "nettle") (r "^5.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "rpassword") (r "^3.0") (d #t) (k 2)) (d (n "sequoia-rfc2822") (r "^0.9") (d #t) (k 0)) (d (n "time") (r "^0.1.40") (d #t) (k 0)))) (h "007h2pi7lcph5jf5bxjydm7hjwjai33yk6dic3cxknki22lxlkfw") (f (quote (("default" "compression") ("compression-deflate" "flate2" "buffered-reader/compression-deflate") ("compression-bzip2" "bzip2" "buffered-reader/compression-bzip2") ("compression" "compression-deflate" "compression-bzip2"))))))

(define-public crate-sequoia-openpgp-0.10.0 (c (n "sequoia-openpgp") (v "0.10.0") (d (list (d (n "base64") (r "^0.10.1") (d #t) (k 0)) (d (n "buffered-reader") (r "^0.10") (k 0)) (d (n "bzip2") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "lalrpop") (r "^0.17") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.17") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "memsec") (r "^0.5.6") (d #t) (k 0)) (d (n "nettle") (r "^5.0.2") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (k 0)) (d (n "rand") (r "^0.7") (k 0)) (d (n "rpassword") (r "^4.0") (d #t) (k 2)) (d (n "sequoia-rfc2822") (r "^0.10") (d #t) (k 0)) (d (n "time") (r "^0.1.40") (d #t) (k 0)))) (h "0da8l573l8zp6nzfibsmkjc2z0p3ghhmr3p8h5g6d4jmqwgcia2v") (f (quote (("vendored-nettle" "nettle/vendored") ("vendored" "vendored-nettle") ("default" "compression") ("compression-deflate" "flate2" "buffered-reader/compression-deflate") ("compression-bzip2" "bzip2" "buffered-reader/compression-bzip2") ("compression" "compression-deflate" "compression-bzip2"))))))

(define-public crate-sequoia-openpgp-0.11.0 (c (n "sequoia-openpgp") (v "0.11.0") (d (list (d (n "base64") (r "^0.10.1") (d #t) (k 0)) (d (n "buffered-reader") (r "^0.11") (k 0)) (d (n "bzip2") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "lalrpop") (r "^0.17") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.17") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "memsec") (r "^0.5.6") (d #t) (k 0)) (d (n "nettle") (r "^5.0.2") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (k 0)) (d (n "rand") (r "^0.7") (k 0)) (d (n "rpassword") (r "^4.0") (d #t) (k 2)) (d (n "time") (r "^0.1.40") (d #t) (k 0)))) (h "0fls03k7pqfrzb9vbnrwp3qrcz2gw7wdia2j6xyd0mbcpakzw574") (f (quote (("vendored-nettle" "nettle/vendored") ("vendored" "vendored-nettle") ("default" "compression") ("compression-deflate" "flate2" "buffered-reader/compression-deflate") ("compression-bzip2" "bzip2" "buffered-reader/compression-bzip2") ("compression" "compression-deflate" "compression-bzip2"))))))

(define-public crate-sequoia-openpgp-0.12.0 (c (n "sequoia-openpgp") (v "0.12.0") (d (list (d (n "base64") (r "^0.10.1") (d #t) (k 0)) (d (n "buffered-reader") (r "^0.12") (k 0)) (d (n "bzip2") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "lalrpop") (r "^0.17") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.17") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "memsec") (r "^0.5.6") (d #t) (k 0)) (d (n "nettle") (r "^5.0.2") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (k 0)) (d (n "rand") (r "^0.7") (k 0)) (d (n "regex") (r "^1.3.1") (d #t) (k 0)) (d (n "rpassword") (r "^4.0") (d #t) (k 2)))) (h "1ia3pvwi4h93gndd5a0q3z4yc58c04qi3idybqky35jb25rlym9k") (f (quote (("vendored-nettle" "nettle/vendored") ("vendored" "vendored-nettle") ("default" "compression") ("compression-deflate" "flate2" "buffered-reader/compression-deflate") ("compression-bzip2" "bzip2" "buffered-reader/compression-bzip2") ("compression" "compression-deflate" "compression-bzip2"))))))

(define-public crate-sequoia-openpgp-0.13.0 (c (n "sequoia-openpgp") (v "0.13.0") (d (list (d (n "base64") (r "^0.10.1") (d #t) (k 0)) (d (n "buffered-reader") (r "^0.13") (k 0)) (d (n "bzip2") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "lalrpop") (r "^0.17") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.17") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "memsec") (r "^0.5.6") (d #t) (k 0)) (d (n "nettle") (r "^5.0.2") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (k 0)) (d (n "rand") (r "^0.7") (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rpassword") (r "^4.0") (d #t) (k 2)) (d (n "unicode-normalization") (r "= 0.1.9") (d #t) (k 0)))) (h "1a69ggzr7h6hmr04gp258k2jfr3376zsk7f5p93mpdi8rskwq6iv") (f (quote (("vendored-nettle" "nettle/vendored") ("vendored" "vendored-nettle") ("default" "compression") ("compression-deflate" "flate2" "buffered-reader/compression-deflate") ("compression-bzip2" "bzip2" "buffered-reader/compression-bzip2") ("compression" "compression-deflate" "compression-bzip2"))))))

(define-public crate-sequoia-openpgp-0.14.0 (c (n "sequoia-openpgp") (v "0.14.0") (d (list (d (n "base64") (r "^0.11") (d #t) (k 0)) (d (n "buffered-reader") (r "^0.14") (k 0)) (d (n "bzip2") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "lalrpop") (r "^0.17") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.17") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "memsec") (r "^0.5.6") (d #t) (k 0)) (d (n "nettle") (r "^5.0.2") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (k 0)) (d (n "rand") (r "^0.7") (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rpassword") (r "= 4.0.3") (d #t) (k 2)) (d (n "unicode-normalization") (r "= 0.1.9") (d #t) (k 0)))) (h "1jjjp2sgkgjs25szbl2g8qgcvvdajni1bbg5y7hi6d5qn1ng67d2") (f (quote (("vendored-nettle" "nettle/vendored") ("vendored" "vendored-nettle") ("default" "compression") ("compression-deflate" "flate2" "buffered-reader/compression-deflate") ("compression-bzip2" "bzip2" "buffered-reader/compression-bzip2") ("compression" "compression-deflate" "compression-bzip2"))))))

(define-public crate-sequoia-openpgp-0.15.0 (c (n "sequoia-openpgp") (v "0.15.0") (d (list (d (n "base64") (r "^0.11") (d #t) (k 0)) (d (n "buffered-reader") (r "^0.14") (k 0)) (d (n "bzip2") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "lalrpop") (r "^0.17") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.17") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "memsec") (r "^0.5.6") (d #t) (k 0)) (d (n "nettle") (r "^6.0.1") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (k 0)) (d (n "rand") (r "^0.7") (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rpassword") (r "= 4.0.3") (d #t) (k 2)) (d (n "unicode-normalization") (r "= 0.1.9") (d #t) (k 0)))) (h "1vhwr78x41m28bny331rl1ag2m6rs0d8sb177r7ji3a0n4w7ga28") (f (quote (("vendored-nettle" "nettle/vendored") ("vendored" "vendored-nettle") ("default" "compression") ("compression-deflate" "flate2" "buffered-reader/compression-deflate") ("compression-bzip2" "bzip2" "buffered-reader/compression-bzip2") ("compression" "compression-deflate" "compression-bzip2"))))))

(define-public crate-sequoia-openpgp-0.16.0 (c (n "sequoia-openpgp") (v "0.16.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "base64") (r "^0.11") (d #t) (k 0)) (d (n "buffered-reader") (r "^0.16") (k 0)) (d (n "bzip2") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "lalrpop") (r "^0.17") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.17") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "memsec") (r "^0.5.6") (d #t) (k 0)) (d (n "nettle") (r "^7") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (k 0)) (d (n "rand") (r "^0.7") (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rpassword") (r "= 4.0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "unicode-normalization") (r "= 0.1.9") (d #t) (k 0)))) (h "1shqqqni5xza144m4zdqp36bw1bylv3sq6jqlqs50chd0gj2q3s3") (f (quote (("vendored-nettle" "nettle/vendored") ("vendored" "vendored-nettle") ("default" "compression") ("compression-deflate" "flate2" "buffered-reader/compression-deflate") ("compression-bzip2" "bzip2" "buffered-reader/compression-bzip2") ("compression" "compression-deflate" "compression-bzip2"))))))

(define-public crate-sequoia-openpgp-0.17.0 (c (n "sequoia-openpgp") (v "0.17.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "backtrace") (r "=0.3.46") (d #t) (k 0)) (d (n "base64") (r ">=0.11, <0.13") (d #t) (k 0)) (d (n "buffered-reader") (r "^0.17") (k 0)) (d (n "bzip2") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "lalrpop") (r "^0.17") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.17") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "memsec") (r "^0.5.6") (d #t) (k 0)) (d (n "nettle") (r "^7") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (o #t) (k 0)) (d (n "quickcheck") (r "^0.9") (k 2)) (d (n "rand") (r "^0.7") (o #t) (k 0)) (d (n "rand") (r "^0.7") (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rpassword") (r "=4.0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "unicode-normalization") (r "=0.1.9") (d #t) (k 0)))) (h "0abja7s87n8wyasbzxv0ap0ybxk8dwxvq7a4by0iiv0c586s2nkj") (f (quote (("x-quickcheck" "quickcheck" "rand") ("vendored-nettle" "nettle/vendored") ("vendored" "vendored-nettle") ("default" "compression" "crypto-nettle") ("crypto-nettle" "nettle") ("compression-deflate" "flate2" "buffered-reader/compression-deflate") ("compression-bzip2" "bzip2" "buffered-reader/compression-bzip2") ("compression" "compression-deflate" "compression-bzip2"))))))

(define-public crate-sequoia-openpgp-0.18.0 (c (n "sequoia-openpgp") (v "0.18.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "backtrace") (r "=0.3.46") (d #t) (k 0)) (d (n "base64") (r ">=0.11, <0.13") (d #t) (k 0)) (d (n "buffered-reader") (r "^0.18") (k 0)) (d (n "bzip2") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "dyn-clone") (r ">=1.0.1, <1.0.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "lalrpop") (r "^0.17") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.17") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "memsec") (r "^0.5.6") (d #t) (k 0)) (d (n "nettle") (r "^7") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (o #t) (k 0)) (d (n "quickcheck") (r "^0.9") (k 2)) (d (n "rand") (r "^0.7") (o #t) (k 0)) (d (n "rand") (r "^0.7") (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rpassword") (r "=4.0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "unicode-normalization") (r "=0.1.9") (d #t) (k 0)))) (h "0y6yklx43sbj2f3k82mgvnfds3dabifqrjbvi4np4qrqrz74zbva") (f (quote (("x-quickcheck" "quickcheck" "rand") ("vendored-nettle" "nettle/vendored") ("vendored" "vendored-nettle") ("default" "compression" "crypto-nettle") ("crypto-nettle" "nettle") ("compression-deflate" "flate2" "buffered-reader/compression-deflate") ("compression-bzip2" "bzip2" "buffered-reader/compression-bzip2") ("compression" "compression-deflate" "compression-bzip2"))))))

(define-public crate-sequoia-openpgp-0.19.0 (c (n "sequoia-openpgp") (v "0.19.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "backtrace") (r "=0.3.46") (d #t) (k 0)) (d (n "base64") (r ">=0.11, <0.13") (d #t) (k 0)) (d (n "buffered-reader") (r "^0.18") (k 0)) (d (n "bzip2") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "dyn-clone") (r ">=1.0.1, <1.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (f (quote ("rand" "u64_backend"))) (o #t) (t "cfg(windows)") (k 0)) (d (n "flate2") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "lalrpop") (r "^0.17") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.17") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "memsec") (r "^0.5.6") (d #t) (k 0)) (d (n "nettle") (r "^7") (o #t) (d #t) (k 0)) (d (n "num-bigint-dig") (r "^0.6") (o #t) (t "cfg(windows)") (k 0)) (d (n "quickcheck") (r "^0.9") (o #t) (k 0)) (d (n "quickcheck") (r "^0.9") (k 2)) (d (n "rand") (r "^0.7") (o #t) (k 0)) (d (n "rand") (r "^0.7") (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rpassword") (r "=4.0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "unicode-normalization") (r "=0.1.9") (d #t) (k 0)) (d (n "win-crypto-ng") (r "^0.2") (f (quote ("rand"))) (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("bcrypt"))) (o #t) (t "cfg(windows)") (k 0)))) (h "1byfpwy3ly92b0f5iwxhaivf7wm5hg5d90048pjixibm0b39k9z1") (f (quote (("x-quickcheck" "quickcheck" "rand") ("vendored-nettle" "nettle/vendored") ("vendored" "vendored-nettle") ("default" "compression" "crypto-nettle") ("crypto-nettle" "nettle") ("crypto-cng" "winapi" "win-crypto-ng" "ed25519-dalek" "num-bigint-dig") ("compression-deflate" "flate2" "buffered-reader/compression-deflate") ("compression-bzip2" "bzip2" "buffered-reader/compression-bzip2") ("compression" "compression-deflate" "compression-bzip2"))))))

(define-public crate-sequoia-openpgp-0.20.0 (c (n "sequoia-openpgp") (v "0.20.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3.46") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "buffered-reader") (r "^0.20") (k 0)) (d (n "bzip2") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (f (quote ("rand" "u64_backend"))) (o #t) (t "cfg(windows)") (k 0)) (d (n "flate2") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "lalrpop") (r "^0.19") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "memsec") (r "^0.6") (k 0)) (d (n "nettle") (r "^7") (o #t) (d #t) (k 0)) (d (n "num-bigint-dig") (r "^0.6") (o #t) (t "cfg(windows)") (k 0)) (d (n "quickcheck") (r "^0.9") (k 2)) (d (n "rand") (r "^0.7") (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rpassword") (r "^5.0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.9") (d #t) (k 0)) (d (n "win-crypto-ng") (r "^0.2") (f (quote ("rand"))) (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("bcrypt"))) (o #t) (t "cfg(windows)") (k 0)))) (h "18k8gmklyl21c9f9v467azaavy5phrkksmbgi9h017hhq6q4a8jy") (f (quote (("vendored-nettle" "nettle/vendored") ("vendored" "vendored-nettle") ("default" "compression" "crypto-nettle") ("crypto-nettle" "nettle") ("crypto-cng" "winapi" "win-crypto-ng" "ed25519-dalek" "num-bigint-dig") ("compression-deflate" "flate2" "buffered-reader/compression-deflate") ("compression-bzip2" "bzip2" "buffered-reader/compression-bzip2") ("compression" "compression-deflate" "compression-bzip2"))))))

(define-public crate-sequoia-openpgp-0.21.0 (c (n "sequoia-openpgp") (v "0.21.0") (d (list (d (n "anyhow") (r "^1.0.18") (d #t) (k 0)) (d (n "backtrace") (r "^0.3.3") (d #t) (k 0)) (d (n "base64") (r ">=0.12") (d #t) (k 0)) (d (n "buffered-reader") (r "^0.21") (k 0)) (d (n "bzip2") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (f (quote ("std"))) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "eax") (r "^0.3") (d #t) (t "cfg(windows)") (k 0)) (d (n "ed25519-dalek") (r "^1") (f (quote ("rand" "u64_backend"))) (o #t) (t "cfg(windows)") (k 0)) (d (n "flate2") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "lalrpop") (r ">=0.17") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "memsec") (r ">=0.5") (k 0)) (d (n "nettle") (r "^7") (o #t) (d #t) (k 0)) (d (n "num-bigint-dig") (r "^0.6") (o #t) (t "cfg(windows)") (k 0)) (d (n "quickcheck") (r "^0.9") (k 2)) (d (n "rand") (r "^0.7") (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rpassword") (r "^5.0") (d #t) (k 2)) (d (n "sha1collisiondetection") (r "^0.2.2") (f (quote ("std"))) (k 0)) (d (n "thiserror") (r "^1.0.2") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.9") (d #t) (k 0)) (d (n "win-crypto-ng") (r "^0.4") (f (quote ("rand" "block-cipher"))) (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("bcrypt"))) (o #t) (t "cfg(windows)") (k 0)))) (h "0ignlnm82m958d3kxvvi29hmrfg59a9723acc45aj9vghar5vfhs") (f (quote (("vendored-nettle" "nettle/vendored") ("vendored" "vendored-nettle") ("default" "compression" "crypto-nettle") ("crypto-nettle" "nettle") ("crypto-cng" "winapi" "win-crypto-ng" "ed25519-dalek" "num-bigint-dig") ("compression-deflate" "flate2" "buffered-reader/compression-deflate") ("compression-bzip2" "bzip2" "buffered-reader/compression-bzip2") ("compression" "compression-deflate" "compression-bzip2"))))))

(define-public crate-sequoia-openpgp-1.0.0 (c (n "sequoia-openpgp") (v "1.0.0") (d (list (d (n "anyhow") (r "^1.0.18") (d #t) (k 0)) (d (n "backtrace") (r "^0.3.3") (d #t) (k 0)) (d (n "base64") (r ">=0.12") (d #t) (k 0)) (d (n "buffered-reader") (r "^1.0.0") (k 0)) (d (n "bzip2") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (f (quote ("std"))) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "eax") (r "^0.3") (d #t) (t "cfg(windows)") (k 0)) (d (n "ed25519-dalek") (r "^1") (f (quote ("rand" "u64_backend"))) (o #t) (t "cfg(windows)") (k 0)) (d (n "flate2") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "lalrpop") (r ">=0.17") (d #t) (k 1)) (d (n "lalrpop-util") (r ">=0.17") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "memsec") (r ">=0.5") (k 0)) (d (n "nettle") (r "^7") (o #t) (d #t) (k 0)) (d (n "num-bigint-dig") (r "^0.6") (o #t) (t "cfg(windows)") (k 0)) (d (n "quickcheck") (r "^0.9") (k 2)) (d (n "rand") (r "^0.7") (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rpassword") (r "^5.0") (d #t) (k 2)) (d (n "sha1collisiondetection") (r "^0.2.3") (f (quote ("std"))) (k 0)) (d (n "thiserror") (r "^1.0.2") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.9") (d #t) (k 0)) (d (n "win-crypto-ng") (r "^0.4") (f (quote ("rand" "block-cipher"))) (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("bcrypt"))) (o #t) (t "cfg(windows)") (k 0)))) (h "090lx9mcl9w9zaj9z975hn6zf0ycizqmcw2la3rx0f4f72ly0kb6") (f (quote (("vendored-nettle" "nettle/vendored") ("vendored" "vendored-nettle") ("default" "compression" "crypto-nettle") ("crypto-nettle" "nettle") ("crypto-cng" "winapi" "win-crypto-ng" "ed25519-dalek" "num-bigint-dig") ("compression-deflate" "flate2" "buffered-reader/compression-deflate") ("compression-bzip2" "bzip2" "buffered-reader/compression-bzip2") ("compression" "compression-deflate" "compression-bzip2"))))))

(define-public crate-sequoia-openpgp-1.1.0 (c (n "sequoia-openpgp") (v "1.1.0") (d (list (d (n "anyhow") (r "^1.0.18") (d #t) (k 0)) (d (n "backtrace") (r "^0.3.3") (d #t) (k 0)) (d (n "base64") (r ">=0.12") (d #t) (k 0)) (d (n "buffered-reader") (r "^1.0.0") (k 0)) (d (n "bzip2") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (f (quote ("std"))) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "eax") (r "^0.3") (d #t) (t "cfg(windows)") (k 0)) (d (n "ed25519-dalek") (r "^1") (f (quote ("rand" "u64_backend"))) (o #t) (t "cfg(windows)") (k 0)) (d (n "flate2") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "lalrpop") (r ">=0.17") (d #t) (k 1)) (d (n "lalrpop-util") (r ">=0.17") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "memsec") (r ">=0.5") (k 0)) (d (n "nettle") (r "^7") (o #t) (d #t) (k 0)) (d (n "num-bigint-dig") (r "^0.6") (o #t) (t "cfg(windows)") (k 0)) (d (n "quickcheck") (r "^0.9") (k 2)) (d (n "rand") (r "^0.7") (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (d #t) (k 0)) (d (n "rpassword") (r "^5.0") (d #t) (k 2)) (d (n "sha1collisiondetection") (r "^0.2.3") (f (quote ("std"))) (k 0)) (d (n "thiserror") (r "^1.0.2") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.9") (d #t) (k 0)) (d (n "win-crypto-ng") (r "^0.4") (f (quote ("rand" "block-cipher"))) (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("bcrypt"))) (o #t) (t "cfg(windows)") (k 0)))) (h "0y9hb0z855sz92jkhqw25qm262iiy85g7r5xhgvdrpykrq9z33nm") (f (quote (("vendored-nettle" "nettle/vendored") ("vendored" "vendored-nettle") ("default" "compression" "crypto-nettle") ("crypto-nettle" "nettle") ("crypto-cng" "winapi" "win-crypto-ng" "ed25519-dalek" "num-bigint-dig") ("compression-deflate" "flate2" "buffered-reader/compression-deflate") ("compression-bzip2" "bzip2" "buffered-reader/compression-bzip2") ("compression" "compression-deflate" "compression-bzip2"))))))

(define-public crate-sequoia-openpgp-1.3.0 (c (n "sequoia-openpgp") (v "1.3.0") (d (list (d (n "anyhow") (r "^1.0.18") (d #t) (k 0)) (d (n "backtrace") (r "^0.3.3") (d #t) (k 0)) (d (n "base64") (r ">=0.12") (d #t) (k 0)) (d (n "buffered-reader") (r "^1.0.0") (k 0)) (d (n "bzip2") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (f (quote ("std"))) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "eax") (r "^0.3") (d #t) (t "cfg(windows)") (k 0)) (d (n "ed25519-dalek") (r "^1") (f (quote ("rand" "u64_backend"))) (o #t) (t "cfg(windows)") (k 0)) (d (n "flate2") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "lalrpop") (r ">=0.17") (d #t) (k 1)) (d (n "lalrpop-util") (r ">=0.17") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "memsec") (r ">=0.5") (k 0)) (d (n "nettle") (r "^7.0.2") (o #t) (d #t) (k 0)) (d (n "num-bigint-dig") (r "^0.6") (o #t) (t "cfg(windows)") (k 0)) (d (n "quickcheck") (r "^0.9") (k 2)) (d (n "rand") (r "^0.7") (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (d #t) (k 0)) (d (n "rpassword") (r "^5.0") (d #t) (k 2)) (d (n "sha1collisiondetection") (r "^0.2.3") (f (quote ("std"))) (k 0)) (d (n "thiserror") (r "^1.0.2") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.9") (d #t) (k 0)) (d (n "win-crypto-ng") (r "^0.4") (f (quote ("rand" "block-cipher"))) (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("bcrypt"))) (o #t) (t "cfg(windows)") (k 0)))) (h "1i6qm0iz06xj9m5mfl55vykgn31r4fn76jhkyji8cv7ydg7gcbgq") (f (quote (("default" "compression" "crypto-nettle") ("crypto-nettle" "nettle") ("crypto-cng" "winapi" "win-crypto-ng" "ed25519-dalek" "num-bigint-dig") ("compression-deflate" "flate2" "buffered-reader/compression-deflate") ("compression-bzip2" "bzip2" "buffered-reader/compression-bzip2") ("compression" "compression-deflate" "compression-bzip2"))))))

(define-public crate-sequoia-openpgp-1.3.1 (c (n "sequoia-openpgp") (v "1.3.1") (d (list (d (n "anyhow") (r "^1.0.18") (d #t) (k 0)) (d (n "backtrace") (r "^0.3.3") (d #t) (k 0)) (d (n "base64") (r ">=0.12") (d #t) (k 0)) (d (n "buffered-reader") (r "^1.0.0") (k 0)) (d (n "bzip2") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (f (quote ("std"))) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "eax") (r "^0.3") (d #t) (t "cfg(windows)") (k 0)) (d (n "ed25519-dalek") (r "^1") (f (quote ("rand" "u64_backend"))) (o #t) (t "cfg(windows)") (k 0)) (d (n "flate2") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "lalrpop") (r ">=0.17") (d #t) (k 1)) (d (n "lalrpop-util") (r ">=0.17") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "memsec") (r ">=0.5") (k 0)) (d (n "nettle") (r "^7.0.2") (o #t) (d #t) (k 0)) (d (n "num-bigint-dig") (r "^0.6") (o #t) (t "cfg(windows)") (k 0)) (d (n "quickcheck") (r "^0.9") (k 2)) (d (n "rand") (r "^0.7") (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (d #t) (k 0)) (d (n "rpassword") (r "^5.0") (d #t) (k 2)) (d (n "sha1collisiondetection") (r "^0.2.3") (f (quote ("std"))) (k 0)) (d (n "thiserror") (r "^1.0.2") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.9") (d #t) (k 0)) (d (n "win-crypto-ng") (r "^0.4") (f (quote ("rand" "block-cipher"))) (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("bcrypt"))) (o #t) (t "cfg(windows)") (k 0)))) (h "0jyq3qlrz53dk8bxgs77djk501539xpfbc8yalc4r0zr516249x7") (f (quote (("default" "compression" "crypto-nettle") ("crypto-nettle" "nettle") ("crypto-cng" "winapi" "win-crypto-ng" "ed25519-dalek" "num-bigint-dig") ("compression-deflate" "flate2" "buffered-reader/compression-deflate") ("compression-bzip2" "bzip2" "buffered-reader/compression-bzip2") ("compression" "compression-deflate" "compression-bzip2"))))))

(define-public crate-sequoia-openpgp-1.4.0 (c (n "sequoia-openpgp") (v "1.4.0") (d (list (d (n "aes") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.18") (d #t) (k 0)) (d (n "backtrace") (r "^0.3.3") (d #t) (k 0)) (d (n "base64") (r ">=0.12") (d #t) (k 0)) (d (n "block-modes") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "block-padding") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "blowfish") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "buffered-reader") (r "^1.0.0") (k 0)) (d (n "bzip2") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "cast5") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (f (quote ("std"))) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "cipher") (r "^0.2.5") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "des") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "eax") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "ecdsa") (r "^0.11") (f (quote ("hazmat" "arithmetic"))) (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (f (quote ("rand" "u64_backend"))) (o #t) (k 0)) (d (n "flate2") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (o #t) (d #t) (k 0)) (d (n "idea") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "lalrpop") (r ">=0.17") (d #t) (k 1)) (d (n "lalrpop-util") (r ">=0.17") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "md-5") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "memsec") (r ">=0.5") (k 0)) (d (n "nettle") (r "^7.0.2") (o #t) (d #t) (k 0)) (d (n "num-bigint-dig") (r "^0.6") (o #t) (k 0)) (d (n "p256") (r "^0.8") (f (quote ("ecdh" "ecdsa"))) (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (k 2)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "rpassword") (r "^5.0") (d #t) (k 2)) (d (n "rsa") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "sha1collisiondetection") (r "^0.2.3") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.2") (d #t) (k 0)) (d (n "twofish") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "typenum") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.9") (d #t) (k 0)) (d (n "win-crypto-ng") (r "^0.4") (f (quote ("rand" "block-cipher"))) (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("bcrypt"))) (o #t) (t "cfg(windows)") (k 0)) (d (n "x25519-dalek") (r "^1.1.0") (o #t) (d #t) (k 0)))) (h "0w7lcmz2a9nswj49gcjrr2whv6la0wjw8znah1x3pzs7cjlp2gja") (f (quote (("default" "compression" "crypto-nettle") ("crypto-rust" "aes" "block-modes" "block-padding" "blowfish" "cast5" "cipher" "des" "digest" "eax" "ed25519-dalek" "generic-array" "idea" "md-5" "num-bigint-dig" "rand" "ripemd160" "rsa" "sha-1" "sha2" "twofish" "typenum" "x25519-dalek" "p256" "rand_core" "rand_core/getrandom" "ecdsa") ("crypto-nettle" "nettle") ("crypto-cng" "eax" "winapi" "win-crypto-ng" "ed25519-dalek" "num-bigint-dig") ("compression-deflate" "flate2" "buffered-reader/compression-deflate") ("compression-bzip2" "bzip2" "buffered-reader/compression-bzip2") ("compression" "compression-deflate" "compression-bzip2") ("allow-variable-time-crypto") ("allow-experimental-crypto"))))))

(define-public crate-sequoia-openpgp-1.5.0 (c (n "sequoia-openpgp") (v "1.5.0") (d (list (d (n "aes") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.18") (d #t) (k 0)) (d (n "backtrace") (r "^0.3.3") (d #t) (k 0)) (d (n "base64") (r ">=0.12") (d #t) (k 0)) (d (n "block-modes") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "block-padding") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "blowfish") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "buffered-reader") (r "^1.0.0") (k 0)) (d (n "bzip2") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "cast5") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (f (quote ("std"))) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "cipher") (r "^0.2.5") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "des") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "eax") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "ecdsa") (r "^0.11") (f (quote ("hazmat" "arithmetic"))) (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (f (quote ("rand" "u64_backend"))) (o #t) (k 0)) (d (n "flate2") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (o #t) (d #t) (k 0)) (d (n "idea") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "lalrpop") (r ">=0.17") (d #t) (k 1)) (d (n "lalrpop-util") (r ">=0.17") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "md-5") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "memsec") (r ">=0.5") (k 0)) (d (n "nettle") (r "^7.0.2") (o #t) (d #t) (k 0)) (d (n "num-bigint-dig") (r "^0.6") (o #t) (k 0)) (d (n "p256") (r "^0.8") (f (quote ("ecdh" "ecdsa"))) (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (k 2)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "rpassword") (r "^5.0") (d #t) (k 2)) (d (n "rsa") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "sha1collisiondetection") (r "^0.2.3") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.2") (d #t) (k 0)) (d (n "twofish") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "typenum") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "win-crypto-ng") (r "^0.4") (f (quote ("rand" "block-cipher"))) (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("bcrypt"))) (o #t) (t "cfg(windows)") (k 0)) (d (n "x25519-dalek") (r "^1.1.0") (o #t) (d #t) (k 0)))) (h "1v76y77lgmfx6pfrwl3paik4g93lfpf2i2jnmrmra0q406jj746r") (f (quote (("default" "compression" "crypto-nettle") ("crypto-rust" "aes" "block-modes" "block-padding" "blowfish" "cast5" "cipher" "des" "digest" "eax" "ed25519-dalek" "generic-array" "idea" "md-5" "num-bigint-dig" "rand" "ripemd160" "rsa" "sha-1" "sha2" "twofish" "typenum" "x25519-dalek" "p256" "rand_core" "rand_core/getrandom" "ecdsa") ("crypto-nettle" "nettle") ("crypto-cng" "eax" "winapi" "win-crypto-ng" "ed25519-dalek" "num-bigint-dig") ("compression-deflate" "flate2" "buffered-reader/compression-deflate") ("compression-bzip2" "bzip2" "buffered-reader/compression-bzip2") ("compression" "compression-deflate" "compression-bzip2") ("allow-variable-time-crypto") ("allow-experimental-crypto"))))))

(define-public crate-sequoia-openpgp-1.6.0 (c (n "sequoia-openpgp") (v "1.6.0") (d (list (d (n "aes") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.18") (d #t) (k 0)) (d (n "backtrace") (r "^0.3.3") (d #t) (k 0)) (d (n "base64") (r ">=0.12") (d #t) (k 0)) (d (n "block-modes") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "block-padding") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "blowfish") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "buffered-reader") (r "^1.0.0") (k 0)) (d (n "bzip2") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "cast5") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (f (quote ("std"))) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "cipher") (r "^0.2.5") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "des") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "eax") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "ecdsa") (r "^0.11") (f (quote ("hazmat" "arithmetic"))) (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (f (quote ("rand" "u64_backend"))) (o #t) (k 0)) (d (n "flate2") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (o #t) (d #t) (k 0)) (d (n "idea") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "lalrpop") (r ">=0.17") (d #t) (k 1)) (d (n "lalrpop-util") (r ">=0.17") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "md-5") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "memsec") (r ">=0.5") (k 0)) (d (n "nettle") (r "^7.0.2") (o #t) (d #t) (k 0)) (d (n "num-bigint-dig") (r "^0.6") (o #t) (k 0)) (d (n "p256") (r "^0.8") (f (quote ("ecdh" "ecdsa"))) (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (k 2)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "rpassword") (r "^5.0") (d #t) (k 2)) (d (n "rsa") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "sha1collisiondetection") (r "^0.2.3") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.2") (d #t) (k 0)) (d (n "twofish") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "typenum") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "win-crypto-ng") (r "^0.4") (f (quote ("rand" "block-cipher"))) (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("bcrypt"))) (o #t) (t "cfg(windows)") (k 0)) (d (n "x25519-dalek") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "1mdprsijszkg2j6jk1iq7q1z9yikq598y12m5zbv94fs37xlx3qm") (f (quote (("default" "compression" "crypto-nettle") ("crypto-rust" "aes" "block-modes" "block-padding" "blowfish" "cast5" "cipher" "des" "digest" "eax" "ed25519-dalek" "generic-array" "idea" "md-5" "num-bigint-dig" "rand" "ripemd160" "rsa" "sha-1" "sha2" "twofish" "typenum" "x25519-dalek" "p256" "rand_core" "rand_core/getrandom" "ecdsa") ("crypto-nettle" "nettle") ("crypto-cng" "eax" "winapi" "win-crypto-ng" "ed25519-dalek" "num-bigint-dig") ("compression-deflate" "flate2" "buffered-reader/compression-deflate") ("compression-bzip2" "bzip2" "buffered-reader/compression-bzip2") ("compression" "compression-deflate" "compression-bzip2") ("allow-variable-time-crypto") ("allow-experimental-crypto"))))))

(define-public crate-sequoia-openpgp-1.7.0 (c (n "sequoia-openpgp") (v "1.7.0") (d (list (d (n "aes") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.18") (d #t) (k 0)) (d (n "backtrace") (r "^0.3.3") (d #t) (k 0)) (d (n "base64") (r ">=0.12") (d #t) (k 0)) (d (n "block-modes") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "block-padding") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "blowfish") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "buffered-reader") (r "^1.0.0") (k 0)) (d (n "bzip2") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "cast5") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (f (quote ("std" "wasmbind"))) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "cipher") (r "^0.2.5") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "des") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "eax") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "ecdsa") (r "^0.11") (f (quote ("hazmat" "arithmetic"))) (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (f (quote ("rand" "u64_backend"))) (o #t) (k 0)) (d (n "flate2") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "idea") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "lalrpop") (r ">=0.17") (d #t) (k 1)) (d (n "lalrpop-util") (r ">=0.17") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "md-5") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "memsec") (r ">=0.5") (k 0)) (d (n "nettle") (r "^7.0.2") (o #t) (d #t) (k 0)) (d (n "num-bigint-dig") (r "^0.6") (o #t) (k 0)) (d (n "p256") (r "^0.8") (f (quote ("ecdh" "ecdsa"))) (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^1") (k 2)) (d (n "quickcheck_macros") (r "^1") (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand07") (r "^0.7") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0) (p "rand")) (d (n "rand07") (r "^0.7.3") (o #t) (d #t) (k 0) (p "rand")) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "rpassword") (r "^5.0") (d #t) (k 2)) (d (n "rsa") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "sha1collisiondetection") (r "^0.2.3") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.2") (d #t) (k 0)) (d (n "twofish") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "typenum") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "win-crypto-ng") (r "^0.4") (f (quote ("rand" "block-cipher"))) (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("bcrypt"))) (o #t) (t "cfg(windows)") (k 0)) (d (n "x25519-dalek") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "1m1yzx4rp290bq166wgqf2r871qhay5p3y53i6r03xhn4vi1704r") (f (quote (("default" "compression" "crypto-nettle") ("crypto-rust" "aes" "block-modes" "block-padding" "blowfish" "cast5" "cipher" "des" "digest" "eax" "ed25519-dalek" "generic-array" "idea" "md-5" "num-bigint-dig" "rand07" "ripemd160" "rsa" "sha-1" "sha2" "twofish" "typenum" "x25519-dalek" "p256" "rand_core" "rand_core/getrandom" "ecdsa") ("crypto-nettle" "nettle") ("crypto-cng" "eax" "winapi" "win-crypto-ng" "ed25519-dalek" "num-bigint-dig") ("compression-deflate" "flate2" "buffered-reader/compression-deflate") ("compression-bzip2" "bzip2" "buffered-reader/compression-bzip2") ("compression" "compression-deflate" "compression-bzip2") ("allow-variable-time-crypto") ("allow-experimental-crypto")))) (r "1.56")))

(define-public crate-sequoia-openpgp-1.8.0 (c (n "sequoia-openpgp") (v "1.8.0") (d (list (d (n "aes") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.18") (d #t) (k 0)) (d (n "backtrace") (r "^0.3.3") (d #t) (k 0)) (d (n "base64") (r ">=0.12") (d #t) (k 0)) (d (n "block-modes") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "block-padding") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "blowfish") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "buffered-reader") (r "^1.0.0") (k 0)) (d (n "bzip2") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "cast5") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (f (quote ("std" "wasmbind"))) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "cipher") (r "^0.2.5") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "des") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "eax") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "ecdsa") (r "^0.11") (f (quote ("hazmat" "arithmetic"))) (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (f (quote ("rand" "u64_backend"))) (o #t) (k 0)) (d (n "flate2") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "idea") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "lalrpop") (r ">=0.17") (d #t) (k 1)) (d (n "lalrpop-util") (r ">=0.17") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "md-5") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "memsec") (r ">=0.5") (k 0)) (d (n "nettle") (r "^7.0.2") (o #t) (d #t) (k 0)) (d (n "num-bigint-dig") (r "^0.6") (o #t) (k 0)) (d (n "p256") (r "^0.8") (f (quote ("ecdh" "ecdsa"))) (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^1") (k 2)) (d (n "quickcheck_macros") (r "^1") (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand07") (r "^0.7") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0) (p "rand")) (d (n "rand07") (r "^0.7.3") (o #t) (d #t) (k 0) (p "rand")) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "rpassword") (r "^5.0") (d #t) (k 2)) (d (n "rsa") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "sha1collisiondetection") (r "^0.2.3") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.2") (d #t) (k 0)) (d (n "twofish") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "typenum") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "win-crypto-ng") (r "^0.4") (f (quote ("rand" "block-cipher"))) (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("bcrypt"))) (o #t) (t "cfg(windows)") (k 0)) (d (n "x25519-dalek") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "0345gs8jfklg3v3mp8ckknkarbl1z1nbgwm6hpc5qvlpjiyv5d5d") (f (quote (("default" "compression" "crypto-nettle") ("crypto-rust" "aes" "block-modes" "block-padding" "blowfish" "cast5" "cipher" "des" "digest" "eax" "ed25519-dalek" "generic-array" "idea" "md-5" "num-bigint-dig" "rand07" "ripemd160" "rsa" "sha-1" "sha2" "twofish" "typenum" "x25519-dalek" "p256" "rand_core" "rand_core/getrandom" "ecdsa") ("crypto-nettle" "nettle") ("crypto-cng" "eax" "winapi" "win-crypto-ng" "ed25519-dalek" "num-bigint-dig") ("compression-deflate" "flate2" "buffered-reader/compression-deflate") ("compression-bzip2" "bzip2" "buffered-reader/compression-bzip2") ("compression" "compression-deflate" "compression-bzip2") ("allow-variable-time-crypto") ("allow-experimental-crypto")))) (r "1.56")))

(define-public crate-sequoia-openpgp-1.9.0 (c (n "sequoia-openpgp") (v "1.9.0") (d (list (d (n "aes") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.18") (d #t) (k 0)) (d (n "base64") (r ">=0.12") (d #t) (k 0)) (d (n "block-modes") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "block-padding") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "blowfish") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "buffered-reader") (r "^1.0.0") (k 0)) (d (n "bzip2") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "cast5") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (f (quote ("std" "wasmbind"))) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "cipher") (r "^0.2.5") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "des") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "eax") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "ecdsa") (r "^0.11") (f (quote ("hazmat" "arithmetic"))) (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (f (quote ("rand" "u64_backend"))) (o #t) (k 0)) (d (n "flate2") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "idea") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "lalrpop") (r ">=0.17") (k 1)) (d (n "lalrpop-util") (r ">=0.17") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "md-5") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "memsec") (r ">=0.5") (k 0)) (d (n "nettle") (r "^7.0.2") (o #t) (d #t) (k 0)) (d (n "num-bigint-dig") (r "^0.6") (o #t) (k 0)) (d (n "p256") (r "^0.8") (f (quote ("ecdh" "ecdsa"))) (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^1") (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand07") (r "^0.7") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0) (p "rand")) (d (n "rand07") (r "^0.7.3") (o #t) (d #t) (k 0) (p "rand")) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "rpassword") (r "^5.0") (d #t) (k 2)) (d (n "rsa") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "sha1collisiondetection") (r "^0.2.3") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.2") (d #t) (k 0)) (d (n "twofish") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "typenum") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "win-crypto-ng") (r "^0.4") (f (quote ("rand" "block-cipher"))) (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("bcrypt"))) (o #t) (t "cfg(windows)") (k 0)) (d (n "x25519-dalek") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "1gfffcj5la28s432s6yqm8rfa021idaam94bpn4p42as8344b5nq") (f (quote (("default" "compression" "crypto-nettle") ("crypto-rust" "aes" "block-modes" "block-padding" "blowfish" "cast5" "cipher" "des" "digest" "eax" "ed25519-dalek" "generic-array" "idea" "md-5" "num-bigint-dig" "rand07" "ripemd160" "rsa" "sha-1" "sha2" "twofish" "typenum" "x25519-dalek" "p256" "rand_core" "rand_core/getrandom" "ecdsa") ("crypto-nettle" "nettle") ("crypto-cng" "eax" "winapi" "win-crypto-ng" "ed25519-dalek" "num-bigint-dig") ("compression-deflate" "flate2" "buffered-reader/compression-deflate") ("compression-bzip2" "bzip2" "buffered-reader/compression-bzip2") ("compression" "compression-deflate" "compression-bzip2") ("allow-variable-time-crypto") ("allow-experimental-crypto")))) (r "1.56")))

(define-public crate-sequoia-openpgp-1.10.0 (c (n "sequoia-openpgp") (v "1.10.0") (d (list (d (n "aes") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.18") (d #t) (k 0)) (d (n "base64") (r ">=0.12") (d #t) (k 0)) (d (n "block-modes") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "block-padding") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "blowfish") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "buffered-reader") (r "^1.0.0") (k 0)) (d (n "bzip2") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "cast5") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (f (quote ("std" "wasmbind"))) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "cipher") (r "^0.2.5") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "des") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "eax") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "ecdsa") (r "^0.11") (f (quote ("hazmat" "arithmetic"))) (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (f (quote ("rand" "u64_backend"))) (o #t) (k 0)) (d (n "flate2") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "idea") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "lalrpop") (r ">=0.17") (k 1)) (d (n "lalrpop-util") (r ">=0.17") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "md-5") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "memsec") (r ">=0.5") (k 0)) (d (n "nettle") (r "^7.0.2") (o #t) (d #t) (k 0)) (d (n "num-bigint-dig") (r "^0.6") (o #t) (k 0)) (d (n "p256") (r "^0.8") (f (quote ("ecdh" "ecdsa"))) (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^1") (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand07") (r "^0.7") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0) (p "rand")) (d (n "rand07") (r "^0.7.3") (o #t) (d #t) (k 0) (p "rand")) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "rpassword") (r "^5.0") (d #t) (k 2)) (d (n "rsa") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "sha1collisiondetection") (r "^0.2.3") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.2") (d #t) (k 0)) (d (n "twofish") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "typenum") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "win-crypto-ng") (r "^0.4") (f (quote ("rand" "block-cipher"))) (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("bcrypt"))) (o #t) (t "cfg(windows)") (k 0)) (d (n "x25519-dalek") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "019a4pcbkb9wmk3yjfhk4warpbmd9a9mh5jp7p0g45w9v772zqsf") (f (quote (("default" "compression" "crypto-nettle") ("crypto-rust" "aes" "block-modes" "block-padding" "blowfish" "cast5" "cipher" "des" "digest" "eax" "ed25519-dalek" "generic-array" "idea" "md-5" "num-bigint-dig" "rand07" "ripemd160" "rsa" "sha-1" "sha2" "twofish" "typenum" "x25519-dalek" "p256" "rand_core" "rand_core/getrandom" "ecdsa") ("crypto-nettle" "nettle") ("crypto-cng" "eax" "winapi" "win-crypto-ng" "ed25519-dalek" "num-bigint-dig") ("compression-deflate" "flate2" "buffered-reader/compression-deflate") ("compression-bzip2" "bzip2" "buffered-reader/compression-bzip2") ("compression" "compression-deflate" "compression-bzip2") ("allow-variable-time-crypto") ("allow-experimental-crypto")))) (r "1.56")))

(define-public crate-sequoia-openpgp-1.11.0 (c (n "sequoia-openpgp") (v "1.11.0") (d (list (d (n "aes") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.18") (d #t) (k 0)) (d (n "base64") (r ">=0.12") (d #t) (k 0)) (d (n "block-modes") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "block-padding") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "blowfish") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "buffered-reader") (r "^1.0.0") (k 0)) (d (n "bzip2") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "cast5") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (f (quote ("std" "wasmbind"))) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "cipher") (r "^0.2.5") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "des") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "eax") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "ecdsa") (r "^0.11") (f (quote ("hazmat" "arithmetic"))) (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (f (quote ("rand" "u64_backend"))) (o #t) (k 0)) (d (n "flate2") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "idea") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "idna") (r ">=0.2, <0.4") (d #t) (k 0)) (d (n "lalrpop") (r ">=0.17") (k 1)) (d (n "lalrpop-util") (r ">=0.17") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "md-5") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "memsec") (r ">=0.5") (k 0)) (d (n "nettle") (r "^7.0.2") (o #t) (d #t) (k 0)) (d (n "num-bigint-dig") (r "^0.6") (o #t) (k 0)) (d (n "p256") (r "^0.8") (f (quote ("ecdh" "ecdsa"))) (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^1") (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand07") (r "^0.7") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0) (p "rand")) (d (n "rand07") (r "^0.7.3") (o #t) (d #t) (k 0) (p "rand")) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "rpassword") (r "^6.0") (d #t) (k 2)) (d (n "rsa") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "sha1collisiondetection") (r "^0.2.3") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.2") (d #t) (k 0)) (d (n "twofish") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "typenum") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "win-crypto-ng") (r "^0.4") (f (quote ("rand" "block-cipher"))) (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("bcrypt"))) (o #t) (t "cfg(windows)") (k 0)) (d (n "x25519-dalek") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "1xrzakcvsdb1x8mazqmy99dn496k0mhfdg9bmggizm5i4hy07nah") (f (quote (("default" "compression" "crypto-nettle") ("crypto-rust" "aes" "block-modes" "block-padding" "blowfish" "cast5" "cipher" "des" "digest" "eax" "ed25519-dalek" "generic-array" "idea" "md-5" "num-bigint-dig" "rand07" "ripemd160" "rsa" "sha-1" "sha2" "twofish" "typenum" "x25519-dalek" "p256" "rand_core" "rand_core/getrandom" "ecdsa") ("crypto-nettle" "nettle") ("crypto-cng" "eax" "winapi" "win-crypto-ng" "ed25519-dalek" "num-bigint-dig") ("compression-deflate" "flate2" "buffered-reader/compression-deflate") ("compression-bzip2" "bzip2" "buffered-reader/compression-bzip2") ("compression" "compression-deflate" "compression-bzip2") ("allow-variable-time-crypto") ("allow-experimental-crypto")))) (r "1.60")))

(define-public crate-sequoia-openpgp-1.12.0 (c (n "sequoia-openpgp") (v "1.12.0") (d (list (d (n "aes") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.18") (d #t) (k 0)) (d (n "base64") (r ">=0.12, <0.20") (d #t) (k 0)) (d (n "block-modes") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "block-padding") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "blowfish") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "buffered-reader") (r "^1.0.0") (k 0)) (d (n "bzip2") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "cast5") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (f (quote ("std" "wasmbind"))) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "cipher") (r "^0.2.5") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "des") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "eax") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "ecdsa") (r "^0.11") (f (quote ("hazmat" "arithmetic"))) (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (f (quote ("rand" "u64_backend"))) (o #t) (k 0)) (d (n "flate2") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "idea") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "idna") (r ">=0.2, <0.4") (d #t) (k 0)) (d (n "lalrpop") (r ">=0.17") (k 1)) (d (n "lalrpop-util") (r ">=0.17") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "md-5") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "memsec") (r ">=0.5") (k 0)) (d (n "nettle") (r "^7.0.2") (o #t) (d #t) (k 0)) (d (n "num-bigint-dig") (r "^0.6") (o #t) (k 0)) (d (n "p256") (r "^0.8") (f (quote ("ecdh" "ecdsa"))) (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^1") (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand07") (r "^0.7") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0) (p "rand")) (d (n "rand07") (r "^0.7.3") (o #t) (d #t) (k 0) (p "rand")) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "rpassword") (r "^6.0") (d #t) (k 2)) (d (n "rsa") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "sha1collisiondetection") (r "^0.2.3") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.2") (d #t) (k 0)) (d (n "twofish") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "typenum") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "win-crypto-ng") (r "^0.4") (f (quote ("rand" "block-cipher"))) (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("bcrypt"))) (o #t) (t "cfg(windows)") (k 0)) (d (n "x25519-dalek") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "0lydcyy4a5kga2aiaj18gsfn0pvi4y8i3g6v6h7w8z0pmlx6bava") (f (quote (("default" "compression" "crypto-nettle") ("crypto-rust" "aes" "block-modes" "block-padding" "blowfish" "cast5" "cipher" "des" "digest" "eax" "ed25519-dalek" "generic-array" "idea" "md-5" "num-bigint-dig" "rand07" "ripemd160" "rsa" "sha-1" "sha2" "twofish" "typenum" "x25519-dalek" "p256" "rand_core" "rand_core/getrandom" "ecdsa") ("crypto-nettle" "nettle") ("crypto-cng" "eax" "winapi" "win-crypto-ng" "ed25519-dalek" "num-bigint-dig") ("compression-deflate" "flate2" "buffered-reader/compression-deflate") ("compression-bzip2" "bzip2" "buffered-reader/compression-bzip2") ("compression" "compression-deflate" "compression-bzip2") ("allow-variable-time-crypto") ("allow-experimental-crypto")))) (r "1.60")))

(define-public crate-sequoia-openpgp-1.13.0 (c (n "sequoia-openpgp") (v "1.13.0") (d (list (d (n "aes") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.18") (d #t) (k 0)) (d (n "base64") (r ">=0.12, <0.20") (d #t) (k 0)) (d (n "block-modes") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "block-padding") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "blowfish") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "buffered-reader") (r "^1.0.0") (k 0)) (d (n "bzip2") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "cast5") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (f (quote ("std" "wasmbind"))) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "cipher") (r "^0.2.5") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "des") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "eax") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "ecdsa") (r "^0.11") (f (quote ("hazmat" "arithmetic"))) (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (f (quote ("rand" "u64_backend"))) (o #t) (k 0)) (d (n "flate2") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "foreign-types-shared") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "idea") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "idna") (r ">=0.2, <0.4") (d #t) (k 0)) (d (n "lalrpop") (r ">=0.17") (k 1)) (d (n "lalrpop-util") (r ">=0.17") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "md-5") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "memsec") (r ">=0.5") (k 0)) (d (n "nettle") (r "^7.0.2") (o #t) (d #t) (k 0)) (d (n "num-bigint-dig") (r "^0.6") (o #t) (k 0)) (d (n "openssl") (r ">=0.10.45") (o #t) (d #t) (k 0)) (d (n "openssl-sys") (r ">=0.9.80") (o #t) (d #t) (k 0)) (d (n "p256") (r "^0.8") (f (quote ("ecdh" "ecdsa"))) (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^1") (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand07") (r "^0.7") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0) (p "rand")) (d (n "rand07") (r "^0.7.3") (o #t) (d #t) (k 0) (p "rand")) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "rpassword") (r "^6.0") (d #t) (k 2)) (d (n "rsa") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "sha1collisiondetection") (r "^0.2.3") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.2") (d #t) (k 0)) (d (n "twofish") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "typenum") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "win-crypto-ng") (r "^0.4") (f (quote ("rand" "block-cipher"))) (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("bcrypt"))) (o #t) (t "cfg(windows)") (k 0)) (d (n "x25519-dalek") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "18ih25q57kqlq10yrcrbdml4ar0dwjqhs1p5gfw1w9pm9dcjzbvh") (f (quote (("default" "compression" "crypto-nettle") ("crypto-rust" "aes" "block-modes" "block-padding" "blowfish" "cast5" "cipher" "des" "digest" "eax" "ed25519-dalek" "generic-array" "idea" "md-5" "num-bigint-dig" "rand07" "ripemd160" "rsa" "sha-1" "sha2" "twofish" "typenum" "x25519-dalek" "p256" "rand_core" "rand_core/getrandom" "ecdsa") ("crypto-openssl" "openssl" "openssl-sys" "foreign-types-shared") ("crypto-nettle" "nettle") ("crypto-cng" "eax" "winapi" "win-crypto-ng" "ed25519-dalek" "num-bigint-dig") ("compression-deflate" "flate2" "buffered-reader/compression-deflate") ("compression-bzip2" "bzip2" "buffered-reader/compression-bzip2") ("compression" "compression-deflate" "compression-bzip2") ("allow-variable-time-crypto") ("allow-experimental-crypto") ("__implicit-crypto-backend-for-tests")))) (r "1.60")))

(define-public crate-sequoia-openpgp-1.14.0 (c (n "sequoia-openpgp") (v "1.14.0") (d (list (d (n "aes") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.18") (d #t) (k 0)) (d (n "base64") (r ">=0.12, <0.20") (d #t) (k 0)) (d (n "block-modes") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "block-padding") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "blowfish") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "botan") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "buffered-reader") (r "^1.0.0") (k 0)) (d (n "bzip2") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "cast5") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (f (quote ("std" "wasmbind"))) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "cipher") (r "^0.2.5") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "des") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "eax") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "ecdsa") (r "^0.11") (f (quote ("hazmat" "arithmetic"))) (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (f (quote ("rand" "u64_backend"))) (o #t) (k 0)) (d (n "flate2") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "foreign-types-shared") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "idea") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "idna") (r ">=0.2, <0.4") (d #t) (k 0)) (d (n "lalrpop") (r ">=0.17") (k 1)) (d (n "lalrpop-util") (r ">=0.17") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "md-5") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "memsec") (r ">=0.5") (k 0)) (d (n "nettle") (r "^7.2.2") (o #t) (d #t) (k 0)) (d (n "num-bigint-dig") (r "^0.6") (o #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "openssl") (r ">=0.10.47") (o #t) (d #t) (k 0)) (d (n "openssl-sys") (r ">=0.9.82") (o #t) (d #t) (k 0)) (d (n "p256") (r "^0.8") (f (quote ("ecdh" "ecdsa"))) (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^1") (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand07") (r "^0.7") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0) (p "rand")) (d (n "rand07") (r "^0.7.3") (o #t) (d #t) (k 0) (p "rand")) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "rpassword") (r "^6.0") (d #t) (k 2)) (d (n "rsa") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "sha1collisiondetection") (r "^0.2.3") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.2") (d #t) (k 0)) (d (n "twofish") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "typenum") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "win-crypto-ng") (r "^0.4") (f (quote ("rand" "block-cipher"))) (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("bcrypt"))) (o #t) (t "cfg(windows)") (k 0)) (d (n "x25519-dalek") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "062w38mk12w2iry65bbzm57l0prkpzvid6l3qa89dax2iqpsmxg5") (f (quote (("default" "compression" "crypto-nettle") ("crypto-rust" "aes" "block-modes" "block-padding" "blowfish" "cast5" "cipher" "des" "digest" "eax" "ed25519-dalek" "generic-array" "idea" "md-5" "num-bigint-dig" "rand07" "ripemd160" "rsa" "sha-1" "sha2" "twofish" "typenum" "x25519-dalek" "p256" "rand_core" "rand_core/getrandom" "ecdsa") ("crypto-openssl" "openssl" "openssl-sys" "foreign-types-shared") ("crypto-nettle" "nettle") ("crypto-cng" "eax" "winapi" "win-crypto-ng" "ed25519-dalek" "num-bigint-dig") ("crypto-botan" "botan") ("compression-deflate" "flate2" "buffered-reader/compression-deflate") ("compression-bzip2" "bzip2" "buffered-reader/compression-bzip2") ("compression" "compression-deflate" "compression-bzip2") ("allow-variable-time-crypto") ("allow-experimental-crypto") ("__implicit-crypto-backend-for-tests")))) (r "1.60")))

(define-public crate-sequoia-openpgp-1.15.0 (c (n "sequoia-openpgp") (v "1.15.0") (d (list (d (n "aes") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.18") (d #t) (k 0)) (d (n "base64") (r ">=0.12, <0.20") (d #t) (k 0)) (d (n "block-padding") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "blowfish") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "botan") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "buffered-reader") (r "^1.0.0") (k 0)) (d (n "bzip2") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "cast5") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "cfb-mode") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (f (quote ("std" "wasmbind"))) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "cipher") (r "^0.4") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "des") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "eax") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "ecb") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ecdsa") (r "^0.16") (f (quote ("hazmat" "arithmetic"))) (o #t) (d #t) (k 0)) (d (n "ed25519") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (f (quote ("rand" "u64_backend"))) (o #t) (k 0)) (d (n "flate2") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "idea") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "idna") (r ">=0.2, <0.4") (d #t) (k 0)) (d (n "lalrpop") (r ">=0.17, <0.20") (k 1)) (d (n "lalrpop-util") (r ">=0.17, <0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (f (quote ("oid"))) (o #t) (d #t) (k 0)) (d (n "memsec") (r ">=0.5, <0.7") (k 0)) (d (n "nettle") (r "^7.2.2") (o #t) (d #t) (k 0)) (d (n "num-bigint-dig") (r "^0.8") (o #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "openssl") (r "^0.10.47") (o #t) (d #t) (k 0)) (d (n "openssl-sys") (r "^0.9.82") (o #t) (d #t) (k 0)) (d (n "p256") (r "^0.13") (f (quote ("ecdh" "ecdsa"))) (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^1") (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0) (p "rand")) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand07") (r "^0.7") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0) (p "rand")) (d (n "rand07") (r "^0.7.3") (o #t) (d #t) (k 0) (p "rand")) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (d #t) (k 0)) (d (n "ripemd") (r "^0.1") (f (quote ("oid"))) (o #t) (d #t) (k 0)) (d (n "rpassword") (r "^6.0") (d #t) (k 2)) (d (n "rsa") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.10") (f (quote ("oid"))) (o #t) (d #t) (k 0)) (d (n "sha1collisiondetection") (r "^0.2.3") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (f (quote ("oid"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.2") (d #t) (k 0)) (d (n "twofish") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "typenum") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "win-crypto-ng") (r ">=0.4, <0.6") (f (quote ("rand" "block-cipher"))) (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("bcrypt"))) (o #t) (t "cfg(windows)") (k 0)) (d (n "x25519-dalek-ng") (r "^1") (o #t) (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "1ck3w20bm5axszw0aikf11v9k7k2vldsrwflj3iigqn9xdilqqcz") (f (quote (("default" "compression" "crypto-nettle") ("crypto-rust" "aes" "block-padding" "blowfish" "cast5" "cfb-mode" "cipher" "des" "digest" "eax" "ecb" "ed25519" "ed25519-dalek" "generic-array" "idea" "md-5" "num-bigint-dig" "rand" "rand07" "ripemd" "rsa" "sha-1" "sha2" "twofish" "typenum" "x25519-dalek-ng" "p256" "rand_core" "rand_core/getrandom" "ecdsa") ("crypto-openssl" "openssl" "openssl-sys") ("crypto-nettle" "nettle") ("crypto-cng" "cipher" "eax" "winapi" "win-crypto-ng" "ed25519-dalek" "num-bigint-dig") ("crypto-botan" "botan") ("compression-deflate" "flate2" "buffered-reader/compression-deflate") ("compression-bzip2" "bzip2" "buffered-reader/compression-bzip2") ("compression" "compression-deflate" "compression-bzip2") ("allow-variable-time-crypto") ("allow-experimental-crypto") ("__implicit-crypto-backend-for-tests")))) (r "1.60")))

(define-public crate-sequoia-openpgp-1.16.0 (c (n "sequoia-openpgp") (v "1.16.0") (d (list (d (n "aes") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.18") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "block-padding") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "blowfish") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "botan") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "buffered-reader") (r "^1.0.0") (k 0)) (d (n "bzip2") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "cast5") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "cfb-mode") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (f (quote ("std" "wasmbind"))) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "cipher") (r "^0.4") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "des") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "eax") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "ecb") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ecdsa") (r "^0.16") (f (quote ("hazmat" "arithmetic"))) (o #t) (d #t) (k 0)) (d (n "ed25519") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (f (quote ("rand" "u64_backend"))) (o #t) (k 0)) (d (n "flate2") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "idea") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "idna") (r ">=0.2, <0.4") (d #t) (k 0)) (d (n "lalrpop") (r ">=0.17, <0.20") (k 1)) (d (n "lalrpop-util") (r ">=0.17, <0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (f (quote ("oid"))) (o #t) (d #t) (k 0)) (d (n "memsec") (r ">=0.5, <0.7") (k 0)) (d (n "nettle") (r "^7.2.2") (o #t) (d #t) (k 0)) (d (n "num-bigint-dig") (r "^0.8") (o #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "openssl") (r "^0.10.47") (o #t) (d #t) (k 0)) (d (n "openssl-sys") (r "^0.9.82") (o #t) (d #t) (k 0)) (d (n "p256") (r "^0.13") (f (quote ("ecdh" "ecdsa"))) (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^1") (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0) (p "rand")) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand07") (r "^0.7") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0) (p "rand")) (d (n "rand07") (r "^0.7.3") (o #t) (d #t) (k 0) (p "rand")) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (d #t) (k 0)) (d (n "ripemd") (r "^0.1") (f (quote ("oid"))) (o #t) (d #t) (k 0)) (d (n "rpassword") (r "^6.0") (d #t) (k 2)) (d (n "rsa") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.10") (f (quote ("oid"))) (o #t) (d #t) (k 0)) (d (n "sha1collisiondetection") (r "^0.2.3") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (f (quote ("oid"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.2") (d #t) (k 0)) (d (n "twofish") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "typenum") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "win-crypto-ng") (r ">=0.4, <0.6") (f (quote ("rand" "block-cipher"))) (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("bcrypt"))) (o #t) (t "cfg(windows)") (k 0)) (d (n "x25519-dalek-ng") (r "^1") (o #t) (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "1z0xl7hnm1p51pyhwdqyzcnl2dhzfjnvssz7hi15ps1hk4zzzvrh") (f (quote (("default" "compression" "crypto-nettle") ("crypto-rust" "aes" "block-padding" "blowfish" "cast5" "cfb-mode" "cipher" "des" "digest" "eax" "ecb" "ed25519" "ed25519-dalek" "generic-array" "idea" "md-5" "num-bigint-dig" "rand" "rand07" "ripemd" "rsa" "sha-1" "sha2" "twofish" "typenum" "x25519-dalek-ng" "p256" "rand_core" "rand_core/getrandom" "ecdsa") ("crypto-openssl" "openssl" "openssl-sys") ("crypto-nettle" "nettle") ("crypto-cng" "cipher" "eax" "winapi" "win-crypto-ng" "ed25519-dalek" "num-bigint-dig") ("crypto-botan2" "botan") ("crypto-botan" "botan/botan3") ("compression-deflate" "flate2" "buffered-reader/compression-deflate") ("compression-bzip2" "bzip2" "buffered-reader/compression-bzip2") ("compression" "compression-deflate" "compression-bzip2") ("allow-variable-time-crypto") ("allow-experimental-crypto") ("__implicit-crypto-backend-for-tests")))) (r "1.60")))

(define-public crate-sequoia-openpgp-1.1.1 (c (n "sequoia-openpgp") (v "1.1.1") (d (list (d (n "anyhow") (r "^1.0.18") (d #t) (k 0)) (d (n "backtrace") (r "^0.3.3") (d #t) (k 0)) (d (n "base64") (r ">=0.12, <0.21") (d #t) (k 0)) (d (n "buffered-reader") (r "^1.0, <1.1") (k 0)) (d (n "bzip2") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (f (quote ("std"))) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "eax") (r "^0.3") (d #t) (t "cfg(windows)") (k 0)) (d (n "ed25519-dalek") (r "^1") (f (quote ("rand" "u64_backend"))) (o #t) (t "cfg(windows)") (k 0)) (d (n "flate2") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "lalrpop") (r ">=0.17") (d #t) (k 1)) (d (n "lalrpop-util") (r ">=0.17") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "memsec") (r ">=0.5") (k 0)) (d (n "nettle") (r "^7") (o #t) (d #t) (k 0)) (d (n "num-bigint-dig") (r "^0.6") (o #t) (t "cfg(windows)") (k 0)) (d (n "quickcheck") (r "^0.9") (k 2)) (d (n "rand") (r "^0.7") (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (d #t) (k 0)) (d (n "rpassword") (r "^5.0") (d #t) (k 2)) (d (n "sha1collisiondetection") (r "^0.2.3") (f (quote ("std"))) (k 0)) (d (n "thiserror") (r "^1.0.2") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.9") (d #t) (k 0)) (d (n "win-crypto-ng") (r "^0.4") (f (quote ("rand" "block-cipher"))) (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("bcrypt"))) (o #t) (t "cfg(windows)") (k 0)))) (h "1v7wpcd9c5cc9ynpnskxc5ip9a0ad7vc0fymmpmkkybwanvck3vy") (f (quote (("vendored-nettle" "nettle/vendored") ("vendored" "vendored-nettle") ("default" "compression" "crypto-nettle") ("crypto-nettle" "nettle") ("crypto-cng" "winapi" "win-crypto-ng" "ed25519-dalek" "num-bigint-dig") ("compression-deflate" "flate2" "buffered-reader/compression-deflate") ("compression-bzip2" "bzip2" "buffered-reader/compression-bzip2") ("compression" "compression-deflate" "compression-bzip2"))))))

(define-public crate-sequoia-openpgp-1.8.1 (c (n "sequoia-openpgp") (v "1.8.1") (d (list (d (n "aes") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.18") (d #t) (k 0)) (d (n "backtrace") (r "^0.3.3") (d #t) (k 0)) (d (n "base64") (r ">=0.12") (d #t) (k 0)) (d (n "block-modes") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "block-padding") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "blowfish") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "buffered-reader") (r "^1.0.0, <1.1.4") (k 0)) (d (n "bzip2") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "cast5") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (f (quote ("std" "wasmbind"))) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "cipher") (r "^0.2.5") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "des") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "eax") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "ecdsa") (r "^0.11") (f (quote ("hazmat" "arithmetic"))) (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (f (quote ("rand" "u64_backend"))) (o #t) (k 0)) (d (n "flate2") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "idea") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "lalrpop") (r ">=0.17") (d #t) (k 1)) (d (n "lalrpop-util") (r ">=0.17") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "md-5") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "memsec") (r ">=0.5") (k 0)) (d (n "nettle") (r "^7.0.2") (o #t) (d #t) (k 0)) (d (n "num-bigint-dig") (r "^0.6") (o #t) (k 0)) (d (n "p256") (r "^0.8") (f (quote ("ecdh" "ecdsa"))) (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^1") (k 2)) (d (n "quickcheck_macros") (r "^1") (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand07") (r "^0.7") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0) (p "rand")) (d (n "rand07") (r "^0.7.3") (o #t) (d #t) (k 0) (p "rand")) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "rpassword") (r "^5.0") (d #t) (k 2)) (d (n "rsa") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "sha1collisiondetection") (r "^0.2.3") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.2") (d #t) (k 0)) (d (n "twofish") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "typenum") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "win-crypto-ng") (r "^0.4") (f (quote ("rand" "block-cipher"))) (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("bcrypt"))) (o #t) (t "cfg(windows)") (k 0)) (d (n "x25519-dalek") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "1al8rpsq316zg9m459f2xvh5a0g6c85x884r3yzrzf18llqaxgvw") (f (quote (("default" "compression" "crypto-nettle") ("crypto-rust" "aes" "block-modes" "block-padding" "blowfish" "cast5" "cipher" "des" "digest" "eax" "ed25519-dalek" "generic-array" "idea" "md-5" "num-bigint-dig" "rand07" "ripemd160" "rsa" "sha-1" "sha2" "twofish" "typenum" "x25519-dalek" "p256" "rand_core" "rand_core/getrandom" "ecdsa") ("crypto-nettle" "nettle") ("crypto-cng" "eax" "winapi" "win-crypto-ng" "ed25519-dalek" "num-bigint-dig") ("compression-deflate" "flate2" "buffered-reader/compression-deflate") ("compression-bzip2" "bzip2" "buffered-reader/compression-bzip2") ("compression" "compression-deflate" "compression-bzip2") ("allow-variable-time-crypto") ("allow-experimental-crypto")))) (r "1.56")))

(define-public crate-sequoia-openpgp-1.16.1 (c (n "sequoia-openpgp") (v "1.16.1") (d (list (d (n "aes") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.18") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "block-padding") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "blowfish") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "botan") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "buffered-reader") (r "^1.0.0") (k 0)) (d (n "bzip2") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "cast5") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "cfb-mode") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (f (quote ("std" "wasmbind"))) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "cipher") (r "^0.4") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "des") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "eax") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "ecb") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ecdsa") (r "^0.16") (f (quote ("hazmat" "arithmetic"))) (o #t) (d #t) (k 0)) (d (n "ed25519") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (f (quote ("rand" "u64_backend"))) (o #t) (k 0)) (d (n "flate2") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "idea") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "idna") (r ">=0.2, <0.4") (d #t) (k 0)) (d (n "lalrpop") (r ">=0.17, <0.20") (k 1)) (d (n "lalrpop-util") (r ">=0.17, <0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (f (quote ("oid"))) (o #t) (d #t) (k 0)) (d (n "memsec") (r ">=0.5, <0.7") (k 0)) (d (n "nettle") (r "^7.2.2") (o #t) (d #t) (k 0)) (d (n "num-bigint-dig") (r "^0.8") (o #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "openssl") (r "^0.10.47") (o #t) (d #t) (k 0)) (d (n "openssl-sys") (r "^0.9.82") (o #t) (d #t) (k 0)) (d (n "p256") (r "^0.13") (f (quote ("ecdh" "ecdsa"))) (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^1") (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0) (p "rand")) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand07") (r "^0.7") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0) (p "rand")) (d (n "rand07") (r "^0.7.3") (o #t) (d #t) (k 0) (p "rand")) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (d #t) (k 0)) (d (n "ripemd") (r "^0.1") (f (quote ("oid"))) (o #t) (d #t) (k 0)) (d (n "rpassword") (r "^6.0") (d #t) (k 2)) (d (n "rsa") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.10") (f (quote ("oid"))) (o #t) (d #t) (k 0)) (d (n "sha1collisiondetection") (r "^0.2.3") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (f (quote ("oid"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.2") (d #t) (k 0)) (d (n "twofish") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "typenum") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "win-crypto-ng") (r ">=0.4, <0.5.1") (f (quote ("rand" "block-cipher"))) (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("bcrypt"))) (o #t) (t "cfg(windows)") (k 0)) (d (n "x25519-dalek-ng") (r "^1") (o #t) (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "02cp0kivhz800k6lh3igh0lj9g6z4j1y55gi9pdycz99yv058s51") (f (quote (("default" "compression" "crypto-nettle") ("crypto-rust" "aes" "block-padding" "blowfish" "cast5" "cfb-mode" "cipher" "des" "digest" "eax" "ecb" "ed25519" "ed25519-dalek" "generic-array" "idea" "md-5" "num-bigint-dig" "rand" "rand07" "ripemd" "rsa" "sha-1" "sha2" "twofish" "typenum" "x25519-dalek-ng" "p256" "rand_core" "rand_core/getrandom" "ecdsa") ("crypto-openssl" "openssl" "openssl-sys") ("crypto-nettle" "nettle") ("crypto-cng" "cipher" "eax" "winapi" "win-crypto-ng" "ed25519-dalek" "num-bigint-dig") ("crypto-botan2" "botan") ("crypto-botan" "botan/botan3") ("compression-deflate" "flate2" "buffered-reader/compression-deflate") ("compression-bzip2" "bzip2" "buffered-reader/compression-bzip2") ("compression" "compression-deflate" "compression-bzip2") ("allow-variable-time-crypto") ("allow-experimental-crypto") ("__implicit-crypto-backend-for-tests")))) (r "1.60")))

(define-public crate-sequoia-openpgp-1.17.0 (c (n "sequoia-openpgp") (v "1.17.0") (d (list (d (n "aes") (r "^0.8") (f (quote ("zeroize"))) (o #t) (d #t) (k 0)) (d (n "aes-gcm") (r "^0.10") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.18") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "block-padding") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "blowfish") (r "^0.9") (f (quote ("zeroize"))) (o #t) (d #t) (k 0)) (d (n "botan") (r "^0.10.6") (o #t) (d #t) (k 0)) (d (n "buffered-reader") (r "^1.3.0") (k 0)) (d (n "bzip2") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "camellia") (r "^0.1") (f (quote ("zeroize"))) (o #t) (d #t) (k 0)) (d (n "cast5") (r "^0.11") (f (quote ("zeroize"))) (o #t) (d #t) (k 0)) (d (n "cfb-mode") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (f (quote ("std" "wasmbind" "clock"))) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "cipher") (r "^0.4") (f (quote ("std" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "des") (r "^0.8") (f (quote ("zeroize"))) (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "dsa") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "eax") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "ecb") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ecdsa") (r "^0.16") (f (quote ("hazmat" "arithmetic"))) (o #t) (d #t) (k 0)) (d (n "ed25519") (r "^2") (f (quote ("std"))) (o #t) (k 0)) (d (n "ed25519-dalek") (r "^2") (f (quote ("rand_core" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "idea") (r "^0.5") (f (quote ("zeroize"))) (o #t) (d #t) (k 0)) (d (n "idna") (r "^0.4") (d #t) (k 0)) (d (n "lalrpop") (r "^0.20") (k 1)) (d (n "lalrpop-util") (r "^0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (f (quote ("oid"))) (o #t) (d #t) (k 0)) (d (n "memsec") (r ">=0.5, <0.7") (k 0)) (d (n "nettle") (r "^7.3") (o #t) (d #t) (k 0)) (d (n "num-bigint-dig") (r "^0.8") (o #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "openssl") (r "^0.10.55") (o #t) (d #t) (k 0)) (d (n "openssl-sys") (r "^0.9.90") (o #t) (d #t) (k 0)) (d (n "p256") (r "^0.13") (f (quote ("ecdh" "ecdsa"))) (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^1") (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8") (d #t) (k 0)) (d (n "ripemd") (r "^0.1") (f (quote ("oid"))) (o #t) (d #t) (k 0)) (d (n "rpassword") (r "^7.0") (d #t) (k 2)) (d (n "rsa") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "sha1collisiondetection") (r "^0.3.1") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (f (quote ("oid"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.2") (d #t) (k 0)) (d (n "twofish") (r "^0.7") (f (quote ("zeroize"))) (o #t) (d #t) (k 0)) (d (n "typenum") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "win-crypto-ng") (r "^0.5.1") (f (quote ("rand" "block-cipher"))) (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("bcrypt"))) (o #t) (t "cfg(windows)") (k 0)) (d (n "x25519-dalek") (r "^2") (f (quote ("static_secrets" "zeroize"))) (o #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "1iwlw78gh6sa6fs0yqw6zx1hfpa0zml7xbg38b3k3lvhib7jd81f") (f (quote (("default" "compression" "crypto-nettle") ("crypto-rust" "aes" "block-padding" "blowfish" "camellia" "cast5" "cfb-mode" "cipher" "des" "digest" "eax" "ecb" "ed25519" "ed25519-dalek" "idea" "md-5" "num-bigint-dig" "ripemd" "rsa" "sha2" "sha1collisiondetection/digest-trait" "sha1collisiondetection/oid" "twofish" "typenum" "x25519-dalek" "p256" "rand_core" "rand_core/getrandom" "ecdsa" "aes-gcm" "dsa") ("crypto-openssl" "openssl" "openssl-sys") ("crypto-nettle" "nettle") ("crypto-fuzzing") ("crypto-cng" "cipher" "eax" "winapi" "win-crypto-ng" "ed25519" "ed25519-dalek" "num-bigint-dig" "aes-gcm" "rand_core") ("crypto-botan2" "botan") ("crypto-botan" "botan/botan3") ("compression-deflate" "flate2" "buffered-reader/compression-deflate") ("compression-bzip2" "bzip2" "buffered-reader/compression-bzip2") ("compression" "compression-deflate" "compression-bzip2") ("allow-variable-time-crypto") ("allow-experimental-crypto") ("__implicit-crypto-backend-for-tests")))) (r "1.67")))

(define-public crate-sequoia-openpgp-1.18.0 (c (n "sequoia-openpgp") (v "1.18.0") (d (list (d (n "aes") (r "^0.8") (f (quote ("zeroize"))) (o #t) (d #t) (k 0)) (d (n "aes-gcm") (r "^0.10") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.18") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "block-padding") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "blowfish") (r "^0.9") (f (quote ("zeroize"))) (o #t) (d #t) (k 0)) (d (n "botan") (r "^0.10.6") (o #t) (d #t) (k 0)) (d (n "buffered-reader") (r "^1.3.0") (k 0)) (d (n "bzip2") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "camellia") (r "^0.1") (f (quote ("zeroize"))) (o #t) (d #t) (k 0)) (d (n "cast5") (r "^0.11") (f (quote ("zeroize"))) (o #t) (d #t) (k 0)) (d (n "cfb-mode") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (f (quote ("std" "wasmbind" "clock"))) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "cipher") (r "^0.4") (f (quote ("std" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "des") (r "^0.8") (f (quote ("zeroize"))) (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "dsa") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "eax") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "ecb") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ecdsa") (r "^0.16") (f (quote ("hazmat" "arithmetic"))) (o #t) (d #t) (k 0)) (d (n "ed25519") (r "^2") (f (quote ("std"))) (o #t) (k 0)) (d (n "ed25519-dalek") (r "^2") (f (quote ("rand_core" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "idea") (r "^0.5") (f (quote ("zeroize"))) (o #t) (d #t) (k 0)) (d (n "idna") (r "^0.5") (d #t) (k 0)) (d (n "lalrpop") (r "^0.20") (k 1)) (d (n "lalrpop-util") (r "^0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (f (quote ("oid"))) (o #t) (d #t) (k 0)) (d (n "memsec") (r ">=0.5, <0.7") (k 0)) (d (n "nettle") (r "^7.3") (o #t) (d #t) (k 0)) (d (n "num-bigint-dig") (r "^0.8") (o #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "openssl") (r "^0.10.55") (o #t) (d #t) (k 0)) (d (n "openssl-sys") (r "^0.9.90") (o #t) (d #t) (k 0)) (d (n "p256") (r "^0.13") (f (quote ("ecdh" "ecdsa"))) (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^1") (k 2)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8") (d #t) (k 0)) (d (n "ripemd") (r "^0.1") (f (quote ("oid"))) (o #t) (d #t) (k 0)) (d (n "rpassword") (r "^7.0") (d #t) (k 2)) (d (n "rsa") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "sha1collisiondetection") (r "^0.3.1") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (f (quote ("oid"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.2") (d #t) (k 0)) (d (n "twofish") (r "^0.7") (f (quote ("zeroize"))) (o #t) (d #t) (k 0)) (d (n "typenum") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "win-crypto-ng") (r "^0.5.1") (f (quote ("rand" "block-cipher"))) (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("bcrypt"))) (o #t) (t "cfg(windows)") (k 0)) (d (n "x25519-dalek") (r "^2") (f (quote ("static_secrets" "zeroize"))) (o #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "0zh2vrj91fl6cnv82d6ajv20pq9xlz1vb9j3wc28916r4c9wgs96") (f (quote (("default" "compression" "crypto-nettle") ("crypto-fuzzing") ("compression" "compression-deflate" "compression-bzip2") ("allow-variable-time-crypto") ("allow-experimental-crypto") ("__implicit-crypto-backend-for-tests")))) (s 2) (e (quote (("crypto-rust" "dep:aes" "dep:block-padding" "dep:blowfish" "dep:camellia" "dep:cast5" "dep:cfb-mode" "dep:cipher" "dep:des" "dep:digest" "dep:eax" "dep:ecb" "dep:ed25519" "dep:ed25519-dalek" "dep:idea" "dep:md-5" "dep:num-bigint-dig" "dep:ripemd" "dep:rsa" "dep:sha2" "sha1collisiondetection/digest-trait" "sha1collisiondetection/oid" "dep:twofish" "dep:typenum" "dep:x25519-dalek" "dep:p256" "dep:rand" "rand?/getrandom" "dep:rand_core" "rand_core?/getrandom" "dep:ecdsa" "dep:aes-gcm" "dep:dsa") ("crypto-openssl" "dep:openssl" "dep:openssl-sys") ("crypto-nettle" "dep:nettle") ("crypto-cng" "dep:cipher" "dep:eax" "dep:winapi" "dep:win-crypto-ng" "dep:ed25519" "dep:ed25519-dalek" "dep:num-bigint-dig" "dep:aes-gcm" "dep:rand_core") ("crypto-botan2" "dep:botan") ("crypto-botan" "dep:botan" "botan?/botan3") ("compression-deflate" "dep:flate2" "buffered-reader/compression-deflate") ("compression-bzip2" "dep:bzip2" "buffered-reader/compression-bzip2")))) (r "1.67")))

(define-public crate-sequoia-openpgp-1.19.0 (c (n "sequoia-openpgp") (v "1.19.0") (d (list (d (n "aes") (r "^0.8") (f (quote ("zeroize"))) (o #t) (d #t) (k 0)) (d (n "aes-gcm") (r "^0.10") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.18") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "block-padding") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "blowfish") (r "^0.9") (f (quote ("zeroize"))) (o #t) (d #t) (k 0)) (d (n "botan") (r "^0.10.6") (o #t) (d #t) (k 0)) (d (n "buffered-reader") (r "^1.3.0") (k 0)) (d (n "bzip2") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "camellia") (r "^0.1") (f (quote ("zeroize"))) (o #t) (d #t) (k 0)) (d (n "cast5") (r "^0.11") (f (quote ("zeroize"))) (o #t) (d #t) (k 0)) (d (n "cfb-mode") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (f (quote ("std" "wasmbind" "clock"))) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "cipher") (r "^0.4") (f (quote ("std" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "des") (r "^0.8") (f (quote ("zeroize"))) (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "dsa") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "eax") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "ecb") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ecdsa") (r "^0.16") (f (quote ("hazmat" "arithmetic"))) (o #t) (d #t) (k 0)) (d (n "ed25519") (r "^2") (f (quote ("std"))) (o #t) (k 0)) (d (n "ed25519-dalek") (r "^2") (f (quote ("rand_core" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "idea") (r "^0.5") (f (quote ("zeroize"))) (o #t) (d #t) (k 0)) (d (n "idna") (r "^0.5") (d #t) (k 0)) (d (n "lalrpop") (r "^0.20") (k 1)) (d (n "lalrpop-util") (r "^0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (f (quote ("oid"))) (o #t) (d #t) (k 0)) (d (n "memsec") (r ">=0.5, <0.7") (k 0)) (d (n "nettle") (r "^7.3") (o #t) (d #t) (k 0)) (d (n "num-bigint-dig") (r "^0.8") (o #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "openssl") (r "^0.10.55") (o #t) (d #t) (k 0)) (d (n "openssl-sys") (r "^0.9.90") (o #t) (d #t) (k 0)) (d (n "p256") (r "^0.13") (f (quote ("ecdh" "ecdsa"))) (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^1") (k 2)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8") (d #t) (k 0)) (d (n "ripemd") (r "^0.1") (f (quote ("oid"))) (o #t) (d #t) (k 0)) (d (n "rpassword") (r "^7.0") (d #t) (k 2)) (d (n "rsa") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "sha1collisiondetection") (r "^0.3.1") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (f (quote ("oid"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.2") (d #t) (k 0)) (d (n "twofish") (r "^0.7") (f (quote ("zeroize"))) (o #t) (d #t) (k 0)) (d (n "typenum") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "win-crypto-ng") (r "^0.5.1") (f (quote ("rand" "block-cipher"))) (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("bcrypt"))) (o #t) (t "cfg(windows)") (k 0)) (d (n "x25519-dalek") (r "^2") (f (quote ("static_secrets" "zeroize"))) (o #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "1x3d4yj8mhra8yhcxz6z73pb77pzk0zl1vgxx0yrimzk9b759wgb") (f (quote (("default" "compression" "crypto-nettle") ("crypto-fuzzing") ("compression" "compression-deflate" "compression-bzip2") ("allow-variable-time-crypto") ("allow-experimental-crypto") ("__implicit-crypto-backend-for-tests")))) (s 2) (e (quote (("crypto-rust" "dep:aes" "dep:block-padding" "dep:blowfish" "dep:camellia" "dep:cast5" "dep:cfb-mode" "dep:cipher" "dep:des" "dep:digest" "dep:eax" "dep:ecb" "dep:ed25519" "dep:ed25519-dalek" "dep:idea" "dep:md-5" "dep:num-bigint-dig" "dep:ripemd" "dep:rsa" "dep:sha2" "sha1collisiondetection/digest-trait" "sha1collisiondetection/oid" "dep:twofish" "dep:typenum" "dep:x25519-dalek" "dep:p256" "dep:rand" "rand?/getrandom" "dep:rand_core" "rand_core?/getrandom" "dep:ecdsa" "dep:aes-gcm" "dep:dsa") ("crypto-openssl" "dep:openssl" "dep:openssl-sys") ("crypto-nettle" "dep:nettle") ("crypto-cng" "dep:cipher" "dep:eax" "dep:winapi" "dep:win-crypto-ng" "dep:ed25519" "dep:ed25519-dalek" "dep:num-bigint-dig" "dep:aes-gcm" "dep:rand_core") ("crypto-botan2" "dep:botan") ("crypto-botan" "dep:botan" "botan?/botan3") ("compression-deflate" "dep:flate2" "buffered-reader/compression-deflate") ("compression-bzip2" "dep:bzip2" "buffered-reader/compression-bzip2")))) (r "1.67")))

(define-public crate-sequoia-openpgp-1.20.0 (c (n "sequoia-openpgp") (v "1.20.0") (d (list (d (n "aes") (r "^0.8") (f (quote ("zeroize"))) (o #t) (d #t) (k 0)) (d (n "aes-gcm") (r "^0.10") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.18") (d #t) (k 0)) (d (n "base64") (r ">=0.21, <0.23") (d #t) (k 0)) (d (n "block-padding") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "blowfish") (r "^0.9") (f (quote ("zeroize"))) (o #t) (d #t) (k 0)) (d (n "botan") (r "^0.10.6") (o #t) (d #t) (k 0)) (d (n "buffered-reader") (r "^1.3.0") (k 0)) (d (n "bzip2") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "camellia") (r "^0.1") (f (quote ("zeroize"))) (o #t) (d #t) (k 0)) (d (n "cast5") (r "^0.11") (f (quote ("zeroize"))) (o #t) (d #t) (k 0)) (d (n "cfb-mode") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (f (quote ("std" "wasmbind" "clock"))) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "cipher") (r "^0.4") (f (quote ("std" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "des") (r "^0.8") (f (quote ("zeroize"))) (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "dsa") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "eax") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "ecb") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ecdsa") (r "^0.16") (f (quote ("hazmat" "arithmetic"))) (o #t) (d #t) (k 0)) (d (n "ed25519") (r "^2") (f (quote ("std"))) (o #t) (k 0)) (d (n "ed25519-dalek") (r "^2") (f (quote ("rand_core" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "idea") (r "^0.5") (f (quote ("zeroize"))) (o #t) (d #t) (k 0)) (d (n "idna") (r "^0.5") (d #t) (k 0)) (d (n "lalrpop") (r "^0.20") (k 1)) (d (n "lalrpop-util") (r "^0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (f (quote ("oid"))) (o #t) (d #t) (k 0)) (d (n "memsec") (r ">=0.5, <0.7") (k 0)) (d (n "nettle") (r "^7.3") (o #t) (d #t) (k 0)) (d (n "num-bigint-dig") (r "^0.8") (o #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "openssl") (r "^0.10.55") (o #t) (d #t) (k 0)) (d (n "openssl-sys") (r "^0.9.90") (o #t) (d #t) (k 0)) (d (n "p256") (r "^0.13") (f (quote ("ecdh" "ecdsa"))) (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^1") (k 2)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8") (d #t) (k 0)) (d (n "ripemd") (r "^0.1") (f (quote ("oid"))) (o #t) (d #t) (k 0)) (d (n "rpassword") (r "^7.0") (d #t) (k 2)) (d (n "rsa") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "sha1collisiondetection") (r "^0.3.1") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10") (f (quote ("oid"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.2") (d #t) (k 0)) (d (n "twofish") (r "^0.7") (f (quote ("zeroize"))) (o #t) (d #t) (k 0)) (d (n "typenum") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "win-crypto-ng") (r "^0.5.1") (f (quote ("rand" "block-cipher"))) (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("bcrypt"))) (o #t) (t "cfg(windows)") (k 0)) (d (n "x25519-dalek") (r "^2") (f (quote ("static_secrets" "zeroize"))) (o #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "1pna9m13y78wk5a6m50ar9yhd0v43yxbnjjbajw1i0jnr042gy06") (f (quote (("default" "compression" "crypto-nettle") ("crypto-fuzzing") ("compression" "compression-deflate" "compression-bzip2") ("allow-variable-time-crypto") ("allow-experimental-crypto") ("__implicit-crypto-backend-for-tests")))) (s 2) (e (quote (("crypto-rust" "dep:aes" "dep:block-padding" "dep:blowfish" "dep:camellia" "dep:cast5" "dep:cfb-mode" "dep:cipher" "dep:des" "dep:digest" "dep:eax" "dep:ecb" "dep:ed25519" "dep:ed25519-dalek" "dep:idea" "dep:md-5" "dep:num-bigint-dig" "dep:ripemd" "dep:rsa" "dep:sha2" "sha1collisiondetection/digest-trait" "sha1collisiondetection/oid" "dep:twofish" "dep:typenum" "dep:x25519-dalek" "dep:p256" "dep:rand" "rand?/getrandom" "dep:rand_core" "rand_core?/getrandom" "dep:ecdsa" "dep:aes-gcm" "dep:dsa") ("crypto-openssl" "dep:openssl" "dep:openssl-sys") ("crypto-nettle" "dep:nettle") ("crypto-cng" "dep:cipher" "dep:eax" "dep:winapi" "dep:win-crypto-ng" "dep:ed25519" "dep:ed25519-dalek" "dep:num-bigint-dig" "dep:aes-gcm" "dep:rand_core") ("crypto-botan2" "dep:botan") ("crypto-botan" "dep:botan" "botan?/botan3") ("compression-deflate" "dep:flate2" "buffered-reader/compression-deflate") ("compression-bzip2" "dep:bzip2" "buffered-reader/compression-bzip2")))) (r "1.67")))

