(define-module (crates-io se qu sequential-storage) #:use-module (crates-io))

(define-public crate-sequential-storage-0.1.0 (c (n "sequential-storage") (v "0.1.0") (d (list (d (n "embedded-storage") (r "^0.3.0") (d #t) (k 0)))) (h "0n11rbn1zw2axbklq0j08rj12vi462jnzjzfjfvqppb5b1b6jygq")))

(define-public crate-sequential-storage-0.2.0 (c (n "sequential-storage") (v "0.2.0") (d (list (d (n "embedded-storage") (r "^0.3.0") (d #t) (k 0)))) (h "1wjpb3p03fhgmmncc4a3xdgri0f1sah089pjfmkzga45id179wd2")))

(define-public crate-sequential-storage-0.2.1 (c (n "sequential-storage") (v "0.2.1") (d (list (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-storage") (r "^0.3.0") (d #t) (k 0)))) (h "1mrbhfi9m3jsf8z7vcrv87vlcl05rq8svrf47j5mn2w591c6zmd9") (s 2) (e (quote (("defmt" "dep:defmt"))))))

(define-public crate-sequential-storage-0.2.2 (c (n "sequential-storage") (v "0.2.2") (d (list (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-storage") (r "^0.3.0") (d #t) (k 0)))) (h "0pqhl7kbf4g6wrbwjbc59i581j75cg3rdd3wfjavyxs82s2h7ib6") (s 2) (e (quote (("defmt" "dep:defmt"))))))

(define-public crate-sequential-storage-0.3.0 (c (n "sequential-storage") (v "0.3.0") (d (list (d (n "arrayvec") (r "^0.7.4") (k 0)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-storage") (r "^0.3.0") (d #t) (k 0)))) (h "0bib8x67ahkzzvxw5gw80scwmjrqgw2vv8nssvbl8khzhv01v3cg") (s 2) (e (quote (("defmt" "dep:defmt"))))))

(define-public crate-sequential-storage-0.4.0 (c (n "sequential-storage") (v "0.4.0") (d (list (d (n "arrayvec") (r "^0.7.4") (k 0)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-storage") (r "^0.3.0") (d #t) (k 0)))) (h "0pf8h0145faafp4j5sjlx9jxwxx9i7xj2n9jzljjwymnjpjpr4gb") (s 2) (e (quote (("defmt" "dep:defmt"))))))

(define-public crate-sequential-storage-0.4.1 (c (n "sequential-storage") (v "0.4.1") (d (list (d (n "arrayvec") (r "^0.7.4") (k 0)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-storage") (r "^0.3.0") (d #t) (k 0)))) (h "1ygp30rqkqm1zs85mbxv30p6im6h0hjahwkfrnzhp713cgsqy44g") (s 2) (e (quote (("defmt" "dep:defmt"))))))

(define-public crate-sequential-storage-0.4.2 (c (n "sequential-storage") (v "0.4.2") (d (list (d (n "arrayvec") (r "^0.7.4") (k 0)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-storage") (r "^0.3.0") (d #t) (k 0)))) (h "1dsq7qb0alin85cgvaakd8369i8gkay7gs04jzc3f796n50mkvjj") (s 2) (e (quote (("defmt" "dep:defmt"))))))

(define-public crate-sequential-storage-0.5.0 (c (n "sequential-storage") (v "0.5.0") (d (list (d (n "arrayvec") (r "^0.7.4") (k 0)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-storage") (r "^0.3.0") (d #t) (k 0)))) (h "1amgkscfr3h4ns0hzlmzh78gs4k5881gnbhlb3n3z7h4k0i5qqx6") (s 2) (e (quote (("defmt" "dep:defmt"))))))

(define-public crate-sequential-storage-0.6.0 (c (n "sequential-storage") (v "0.6.0") (d (list (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-storage") (r "^0.3.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)))) (h "05r8qcbd34f1pciakyg4k657nfdrwrs7fi71011b0misakbb3a8j") (s 2) (e (quote (("defmt" "dep:defmt"))))))

(define-public crate-sequential-storage-0.6.1 (c (n "sequential-storage") (v "0.6.1") (d (list (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-storage") (r "^0.3.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)))) (h "00y0mh8lw7g5rh8zp0ldm5pd3vmz7z2qb0w4y2ayyj39qkzw4443") (s 2) (e (quote (("defmt" "dep:defmt"))))))

(define-public crate-sequential-storage-0.6.2 (c (n "sequential-storage") (v "0.6.2") (d (list (d (n "approx") (r "^0.5.1") (d #t) (k 2)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-storage") (r "^0.3.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)))) (h "0ihg426vyylpbqz5jlyw1cv5k08755518nlxlrgq69f7qz1994nc") (f (quote (("_test" "rand")))) (s 2) (e (quote (("defmt" "dep:defmt"))))))

(define-public crate-sequential-storage-0.7.0 (c (n "sequential-storage") (v "0.7.0") (d (list (d (n "approx") (r "^0.5.1") (d #t) (k 2)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-storage-async") (r "^0.4.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (f (quote ("executor"))) (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (f (quote ("executor"))) (d #t) (k 2)) (d (n "futures-test") (r "^0.3.30") (d #t) (k 2)))) (h "1b12ir00ghxlfikqgwpraxnzadplpvssbcnapwrias7ad4k6sl6n") (s 2) (e (quote (("defmt" "dep:defmt") ("_test" "dep:futures"))))))

(define-public crate-sequential-storage-0.8.0 (c (n "sequential-storage") (v "0.8.0") (d (list (d (n "approx") (r "^0.5.1") (d #t) (k 2)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-storage-async") (r "^0.4.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (f (quote ("executor"))) (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (f (quote ("executor"))) (d #t) (k 2)) (d (n "futures-test") (r "^0.3.30") (d #t) (k 2)))) (h "0093crvfqc3dsdyf6md4r0pnwra67pyvdkcq1isshsn6y1mmyz1i") (s 2) (e (quote (("defmt" "dep:defmt") ("_test" "dep:futures"))))))

(define-public crate-sequential-storage-0.8.1 (c (n "sequential-storage") (v "0.8.1") (d (list (d (n "approx") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "approx") (r "^0.5.1") (d #t) (k 2)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-storage-async") (r "^0.4.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (f (quote ("executor"))) (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (f (quote ("executor"))) (d #t) (k 2)) (d (n "futures-test") (r "^0.3.30") (d #t) (k 2)))) (h "1hp8g2714y0ssg2bc0vx9yl8jqllwxbkbqfb4iqycz3363hwjsrj") (s 2) (e (quote (("defmt" "dep:defmt") ("_test" "dep:futures" "dep:approx"))))))

(define-public crate-sequential-storage-0.9.0 (c (n "sequential-storage") (v "0.9.0") (d (list (d (n "approx") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "approx") (r "^0.5.1") (d #t) (k 2)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-storage-async") (r "^0.4.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (f (quote ("executor"))) (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (f (quote ("executor"))) (d #t) (k 2)) (d (n "futures-test") (r "^0.3.30") (d #t) (k 2)))) (h "1hddpbx3sxab8bxbvyjwgjaia6ljipzzfdp90wng48x7jnz53x3n") (s 2) (e (quote (("defmt" "dep:defmt") ("_test" "dep:futures" "dep:approx"))))))

(define-public crate-sequential-storage-0.9.1 (c (n "sequential-storage") (v "0.9.1") (d (list (d (n "approx") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "approx") (r "^0.5.1") (d #t) (k 2)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-storage-async") (r "^0.4.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (f (quote ("executor"))) (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (f (quote ("executor"))) (d #t) (k 2)) (d (n "futures-test") (r "^0.3.30") (d #t) (k 2)))) (h "1lhq36444ckyyv2zdr5ki4j16br660mv6hblggxmzsij8z033xwb") (s 2) (e (quote (("defmt" "dep:defmt") ("_test" "dep:futures" "dep:approx"))))))

(define-public crate-sequential-storage-1.0.0 (c (n "sequential-storage") (v "1.0.0") (d (list (d (n "approx") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "approx") (r "^0.5.1") (d #t) (k 2)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-storage-async") (r "^0.4.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (f (quote ("executor"))) (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (f (quote ("executor"))) (d #t) (k 2)) (d (n "futures-test") (r "^0.3.30") (d #t) (k 2)))) (h "1klakd3si8pv6rqbwvydnnlxswfk45x91snxja08p59nggvkci3a") (f (quote (("std")))) (s 2) (e (quote (("defmt-03" "dep:defmt") ("_test" "dep:futures" "dep:approx" "std"))))))

(define-public crate-sequential-storage-2.0.0 (c (n "sequential-storage") (v "2.0.0") (d (list (d (n "approx") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "approx") (r "^0.5.1") (d #t) (k 2)) (d (n "arrayvec") (r "^0.7.4") (o #t) (k 0)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-storage-async") (r "^0.4.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (f (quote ("executor"))) (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (f (quote ("executor"))) (d #t) (k 2)) (d (n "futures-test") (r "^0.3.30") (d #t) (k 2)))) (h "0cyagaq62cfqpr5a1cggvggnnhb88m4dp7xzx981vjysz5hb7chx") (f (quote (("std")))) (s 2) (e (quote (("defmt-03" "dep:defmt") ("arrayvec" "dep:arrayvec") ("_test" "dep:futures" "dep:approx" "std" "arrayvec"))))))

(define-public crate-sequential-storage-2.0.1 (c (n "sequential-storage") (v "2.0.1") (d (list (d (n "approx") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "approx") (r "^0.5.1") (d #t) (k 2)) (d (n "arrayvec") (r "^0.7.4") (o #t) (k 0)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-storage-async") (r "^0.4.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (f (quote ("executor"))) (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (f (quote ("executor"))) (d #t) (k 2)) (d (n "futures-test") (r "^0.3.30") (d #t) (k 2)))) (h "10pw2vibakbxrkgl5705kpn1a120mg5qi5zb7d817ssg8vkcmd7p") (f (quote (("std")))) (s 2) (e (quote (("defmt-03" "dep:defmt") ("arrayvec" "dep:arrayvec") ("_test" "dep:futures" "dep:approx" "std" "arrayvec"))))))

(define-public crate-sequential-storage-2.0.2 (c (n "sequential-storage") (v "2.0.2") (d (list (d (n "approx") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "approx") (r "^0.5.1") (d #t) (k 2)) (d (n "arrayvec") (r "^0.7.4") (o #t) (k 0)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-storage-async") (r "^0.4.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (f (quote ("executor"))) (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (f (quote ("executor"))) (d #t) (k 2)) (d (n "futures-test") (r "^0.3.30") (d #t) (k 2)))) (h "1z0jjw8p2dzhzlzm6pl8f8l6ccx7y1hyzq64ph4fsws4flz149cd") (f (quote (("std")))) (s 2) (e (quote (("defmt-03" "dep:defmt") ("arrayvec" "dep:arrayvec") ("_test" "dep:futures" "dep:approx" "std" "arrayvec"))))))

