(define-module (crates-io se ri serial-num) #:use-module (crates-io))

(define-public crate-serial-num-0.1.0 (c (n "serial-num") (v "0.1.0") (d (list (d (n "bincode") (r "^2.0.0-rc.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "~1") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "1g3dry1v6iacpn6ybn687wpqwwfadbzarcbvdz0fl3989qqsgxhh") (f (quote (("default")))) (s 2) (e (quote (("serde" "dep:serde") ("bincode" "dep:bincode"))))))

(define-public crate-serial-num-0.1.1 (c (n "serial-num") (v "0.1.1") (d (list (d (n "bincode") (r "^2.0.0-rc.2") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "~1") (f (quote ("derive"))) (o #t) (k 0)))) (h "1jqlfxsqnyr5r66lkvrgmf023a2xgj90ccgc4505kr3182ycx5fj") (f (quote (("default")))) (s 2) (e (quote (("serde" "dep:serde") ("bincode" "dep:bincode"))))))

(define-public crate-serial-num-0.2.0 (c (n "serial-num") (v "0.2.0") (d (list (d (n "bincode") (r "^2.0.0-rc.3") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "~1") (f (quote ("derive"))) (o #t) (k 0)))) (h "18mpp0mnq4d2l6k09gamfk13y4887m8966vnzfjy2sixj9n21433") (f (quote (("default")))) (s 2) (e (quote (("serde" "dep:serde") ("bincode" "dep:bincode")))) (r "1.60")))

(define-public crate-serial-num-0.3.0 (c (n "serial-num") (v "0.3.0") (d (list (d (n "arbitrary") (r "~1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.3") (f (quote ("derive"))) (o #t) (k 0)) (d (n "borsh") (r "~0") (o #t) (k 0)) (d (n "rkyv") (r "~0") (o #t) (k 0)) (d (n "serde") (r "~1") (f (quote ("derive"))) (o #t) (k 0)))) (h "0swrzic3qxkwzpplr118llz85jfy2gm6fxhxz7zly0cn5g7p6p3g") (f (quote (("rkyv-safe" "rkyv/size_32" "rkyv/validation") ("rkyv" "rkyv/size_32") ("default")))) (s 2) (e (quote (("serde" "dep:serde") ("borsh" "dep:borsh") ("bincode" "dep:bincode") ("arbitrary" "dep:arbitrary")))) (r "1.63")))

(define-public crate-serial-num-0.3.1 (c (n "serial-num") (v "0.3.1") (d (list (d (n "arbitrary") (r "~1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.3") (f (quote ("derive"))) (o #t) (k 0)) (d (n "borsh") (r "~0") (o #t) (k 0)) (d (n "rkyv") (r "~0") (o #t) (k 0)) (d (n "serde") (r "~1") (f (quote ("derive"))) (o #t) (k 0)))) (h "1hpxshbfmbzq0hik5kic6n5r8fvisg2sys3dp4n2iqgkmfipsnhr") (f (quote (("rkyv-safe" "rkyv/size_32" "rkyv/validation") ("rkyv" "rkyv/size_32") ("default")))) (s 2) (e (quote (("serde" "dep:serde") ("borsh" "dep:borsh") ("bincode" "dep:bincode") ("arbitrary" "dep:arbitrary")))) (r "1.63")))

(define-public crate-serial-num-0.4.0 (c (n "serial-num") (v "0.4.0") (d (list (d (n "arbitrary") (r "~1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.3") (f (quote ("derive"))) (o #t) (k 0)) (d (n "borsh") (r "~0") (o #t) (k 0)) (d (n "rkyv") (r "~0") (o #t) (k 0)) (d (n "serde") (r "~1") (f (quote ("derive"))) (o #t) (k 0)))) (h "1g19h1hbs9cdfv9l6gjqcnpy45m20mmx84x1kcwckdx0jmmvcf43") (f (quote (("rkyv-safe" "rkyv/size_32" "rkyv/validation") ("rkyv" "rkyv/size_32") ("default")))) (s 2) (e (quote (("serde" "dep:serde") ("borsh" "dep:borsh") ("bincode" "dep:bincode") ("arbitrary" "dep:arbitrary")))) (r "1.66")))

(define-public crate-serial-num-0.5.0 (c (n "serial-num") (v "0.5.0") (d (list (d (n "arbitrary") (r "~1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.3") (f (quote ("derive"))) (o #t) (k 0)) (d (n "bitcode") (r "~0") (o #t) (d #t) (k 0)) (d (n "borsh") (r "~0") (o #t) (k 0)) (d (n "rkyv") (r "~0") (o #t) (k 0)) (d (n "serde") (r "~1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "speedy") (r "~0") (o #t) (d #t) (k 0)))) (h "1jqinvfgi621r7zkz2l3z5hmbwin83md5l066bd27a4aipdpiibx") (f (quote (("rkyv-safe" "rkyv/size_32" "rkyv/validation") ("rkyv" "rkyv/alloc" "rkyv/size_32") ("default")))) (s 2) (e (quote (("speedy" "dep:speedy") ("serde" "dep:serde") ("borsh" "dep:borsh") ("bitcode" "dep:bitcode") ("bincode" "dep:bincode") ("arbitrary" "dep:arbitrary")))) (r "1.66")))

(define-public crate-serial-num-0.5.1 (c (n "serial-num") (v "0.5.1") (d (list (d (n "arbitrary") (r "~1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.3") (f (quote ("derive"))) (o #t) (k 0)) (d (n "bitcode") (r "~0") (o #t) (d #t) (k 0)) (d (n "borsh") (r "~0") (o #t) (k 0)) (d (n "proptest") (r "~1.2") (d #t) (k 2)) (d (n "proptest-arbitrary-interop") (r "~0.1") (d #t) (k 2)) (d (n "rkyv") (r "~0") (o #t) (k 0)) (d (n "serde") (r "~1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "speedy") (r "~0") (o #t) (d #t) (k 0)))) (h "1k0scdax896psl5c1hb0l2a6hrrzlpg0rakfizqhxrc43a5by06n") (f (quote (("rkyv-safe" "rkyv/size_32" "rkyv/validation") ("rkyv" "rkyv/alloc" "rkyv/size_32") ("default")))) (s 2) (e (quote (("speedy" "dep:speedy") ("serde" "dep:serde") ("borsh" "dep:borsh") ("bitcode" "dep:bitcode") ("bincode" "dep:bincode") ("arbitrary" "dep:arbitrary")))) (r "1.66")))

(define-public crate-serial-num-0.6.0 (c (n "serial-num") (v "0.6.0") (d (list (d (n "arbitrary") (r "^1.1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.3") (f (quote ("derive"))) (o #t) (k 0)) (d (n "bitcode") (r ">=0.4, <1") (o #t) (d #t) (k 0)) (d (n "borsh") (r ">=0.10, <1") (o #t) (k 0)) (d (n "proptest") (r "~1.2") (d #t) (k 2)) (d (n "proptest-arbitrary-interop") (r "~0.1") (d #t) (k 2)) (d (n "rkyv") (r ">=0.7, <1") (o #t) (k 0)) (d (n "rkyv") (r "^0.7") (f (quote ("alloc"))) (k 2)) (d (n "serde") (r "^1.0.184") (f (quote ("derive"))) (o #t) (k 0)) (d (n "speedy") (r ">=0.8, <1") (o #t) (d #t) (k 0)))) (h "1kcaisjxzwr341vmqhh4zf7aidyxlhnsv0q930i9h2hrc61sksy7") (f (quote (("rkyv-safe" "rkyv/size_32" "rkyv/validation") ("rkyv" "rkyv/size_32") ("default")))) (s 2) (e (quote (("speedy" "dep:speedy") ("serde" "dep:serde") ("borsh" "dep:borsh") ("bitcode" "dep:bitcode") ("bincode" "dep:bincode") ("arbitrary" "dep:arbitrary")))) (r "1.66")))

(define-public crate-serial-num-0.7.0 (c (n "serial-num") (v "0.7.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.3") (f (quote ("derive"))) (o #t) (k 0)) (d (n "bitcode") (r ">=0.4, <1") (o #t) (d #t) (k 0)) (d (n "borsh") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "proptest") (r "~1.3") (d #t) (k 2)) (d (n "proptest-arbitrary-interop") (r "~0.1") (d #t) (k 2)) (d (n "rkyv") (r ">=0.7, <1") (o #t) (k 0)) (d (n "rkyv") (r "^0.7") (f (quote ("alloc" "size_32"))) (k 2)) (d (n "serde") (r "^1.0.184") (f (quote ("derive"))) (o #t) (k 0)) (d (n "speedy") (r ">=0.8, <1") (o #t) (d #t) (k 0)))) (h "0jzlagvvy2wglw44nml5gbf28l8f90wp09f7ih7l2p44nk9sqvrs") (f (quote (("rkyv-safe" "rkyv/size_32" "rkyv/validation") ("rkyv" "rkyv/size_32") ("default")))) (s 2) (e (quote (("speedy" "dep:speedy") ("serde" "dep:serde") ("borsh" "dep:borsh") ("bitcode" "dep:bitcode") ("bincode" "dep:bincode") ("arbitrary" "dep:arbitrary")))) (r "1.66")))

(define-public crate-serial-num-0.8.0 (c (n "serial-num") (v "0.8.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.3") (f (quote ("derive"))) (o #t) (k 0)) (d (n "bitcode") (r ">=0.4, <1") (o #t) (d #t) (k 0)) (d (n "borsh") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "bytemuck") (r "^1.13") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "proptest") (r "~1.3") (d #t) (k 2)) (d (n "proptest-arbitrary-interop") (r "~0.1") (d #t) (k 2)) (d (n "rkyv") (r ">=0.7, <1") (o #t) (k 0)) (d (n "rkyv") (r ">=0.7, <1") (f (quote ("alloc" "size_32"))) (k 2)) (d (n "serde") (r "^1.0.184") (f (quote ("derive"))) (o #t) (k 0)) (d (n "speedy") (r ">=0.8, <1") (o #t) (d #t) (k 0)))) (h "1k13rghdvyi3ayizbw79wh7b16ciwc8x5p4aisnbmd0ymmhx813h") (f (quote (("rkyv-safe" "rkyv/size_32" "rkyv/validation") ("rkyv" "rkyv/size_32") ("default")))) (s 2) (e (quote (("speedy" "dep:speedy") ("serde" "dep:serde") ("bytemuck" "dep:bytemuck") ("borsh" "dep:borsh") ("bitcode" "dep:bitcode") ("bincode" "dep:bincode") ("arbitrary" "dep:arbitrary")))) (r "1.66")))

(define-public crate-serial-num-0.9.0 (c (n "serial-num") (v "0.9.0") (d (list (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.3") (f (quote ("derive"))) (o #t) (k 0)) (d (n "bitcode") (r ">=0.4, <1") (o #t) (d #t) (k 0)) (d (n "borsh") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "bytemuck") (r "^1.13") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "postcard") (r "^1") (f (quote ("experimental-derive"))) (o #t) (k 0)) (d (n "postcard") (r "^1") (d #t) (k 2)) (d (n "proptest") (r "~1.4") (d #t) (k 2)) (d (n "proptest-arbitrary-interop") (r "~0.1") (d #t) (k 2)) (d (n "rkyv") (r ">=0.7, <1") (o #t) (k 0)) (d (n "rkyv") (r ">=0.7, <1") (f (quote ("alloc" "size_32"))) (k 2)) (d (n "serde") (r "^1.0.184") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "speedy") (r ">=0.8, <1") (o #t) (d #t) (k 0)))) (h "0y2fxb46rx21cj3bj085mwwn1lkic6ml1ch711qcns45hxcj8rw7") (f (quote (("rkyv-safe" "rkyv/size_32" "rkyv/validation") ("rkyv" "rkyv/size_32") ("default")))) (s 2) (e (quote (("speedy" "dep:speedy") ("serde" "dep:serde") ("postcard" "dep:postcard") ("bytemuck" "dep:bytemuck") ("borsh" "dep:borsh") ("bitcode" "dep:bitcode") ("bincode" "dep:bincode") ("arbitrary" "dep:arbitrary")))) (r "1.70")))

