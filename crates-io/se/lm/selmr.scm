(define-module (crates-io se lm selmr) #:use-module (crates-io))

(define-public crate-selmr-0.1.0 (c (n "selmr") (v "0.1.0") (d (list (d (n "counter") (r "^0.5.7") (d #t) (k 0)) (d (n "postcard") (r "^1.0.7") (f (quote ("use-std"))) (d #t) (k 0)) (d (n "pyo3") (r "^0.19.0") (d #t) (k 0)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.11.0") (d #t) (k 0)))) (h "1x6kjdl3swwv6vxzgwnpbcczk64jq9374n5px846q9fhb3mrm5j7")))

(define-public crate-selmr-0.2.0 (c (n "selmr") (v "0.2.0") (d (list (d (n "counter") (r "^0.5.7") (d #t) (k 0)) (d (n "indexmap") (r "^2.2.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "pyo3") (r "^0.20.3") (d #t) (k 0)) (d (n "pyo3-log") (r "^0.9.0") (d #t) (k 0)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.11.0") (d #t) (k 0)) (d (n "zip") (r "^0.6") (d #t) (k 0)))) (h "1gwszdv5ghhf6sg0h59p0hfrb0hgkhknzm6jn7gxd46pshsw9nsz")))

(define-public crate-selmr-0.2.1 (c (n "selmr") (v "0.2.1") (d (list (d (n "counter") (r "^0.5.7") (d #t) (k 0)) (d (n "indexmap") (r "^2.2.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "pyo3") (r "^0.20.3") (d #t) (k 0)) (d (n "pyo3-log") (r "^0.9.0") (d #t) (k 0)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.11.0") (d #t) (k 0)) (d (n "zip") (r "^0.6") (d #t) (k 0)))) (h "1dsf09cr338xwiljz7mang34kbaad2k383z8fs892svf1y8ajvyx")))

(define-public crate-selmr-0.3.0 (c (n "selmr") (v "0.3.0") (d (list (d (n "counter") (r "^0.5.7") (d #t) (k 0)) (d (n "indexmap") (r "^2.2.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "pyo3") (r "^0.21.1") (f (quote ("extension-module" "gil-refs"))) (d #t) (k 0)) (d (n "regex") (r "^1.10.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.116") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.11.0") (d #t) (k 0)) (d (n "zip") (r "^0.6.6") (d #t) (k 0)))) (h "0knbd4d5ip8x1glm6v29zqc4i8azdy4b6cw7bz07ncq93limmmvi")))

(define-public crate-selmr-0.3.1 (c (n "selmr") (v "0.3.1") (d (list (d (n "counter") (r "^0.5.7") (d #t) (k 0)) (d (n "indexmap") (r "^2.2.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "pyo3") (r "^0.21.1") (f (quote ("extension-module" "gil-refs"))) (d #t) (k 0)) (d (n "regex") (r "^1.10.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.116") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.11.0") (d #t) (k 0)) (d (n "zip") (r "^0.6.6") (d #t) (k 0)))) (h "0a03xk79vcfm1wbpn1s6i6xb0iazmrki958gs8r8hzq123cvd3hl")))

