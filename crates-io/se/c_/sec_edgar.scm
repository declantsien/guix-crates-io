(define-module (crates-io se c_ sec_edgar) #:use-module (crates-io))

(define-public crate-sec_edgar-0.1.0 (c (n "sec_edgar") (v "0.1.0") (d (list (d (n "atom_syndication") (r "^0.11") (f (quote ("with-serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.18") (f (quote ("max_level_info" "release_max_level_info"))) (d #t) (k 0)) (d (n "regex") (r "^1.8.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("gzip" "deflate" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (d #t) (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("net" "macros" "rt-multi-thread"))) (k 0)) (d (n "url") (r "^2.4.0") (d #t) (k 0)))) (h "0pfbma3wqh9nphycvkmavza0mmzq96b7dw7qzsaky8wr1w0q2qvj")))

(define-public crate-sec_edgar-0.1.1 (c (n "sec_edgar") (v "0.1.1") (d (list (d (n "atom_syndication") (r "^0.11") (f (quote ("with-serde"))) (d #t) (k 0)) (d (n "regex") (r "^1.8.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("gzip" "deflate" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (d #t) (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("net" "macros" "rt-multi-thread"))) (k 0)) (d (n "url") (r "^2.4.0") (d #t) (k 0)))) (h "0qmsiq92swmwhy92bwjyq9xwv3wavvp4bd9qfx3yn4fhwv5dz8i5")))

(define-public crate-sec_edgar-1.0.0 (c (n "sec_edgar") (v "1.0.0") (d (list (d (n "atom_syndication") (r "^0.11") (f (quote ("with-serde"))) (d #t) (k 0)) (d (n "regex") (r "^1.8.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("gzip" "deflate" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (d #t) (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("net" "macros" "rt-multi-thread"))) (k 0)) (d (n "url") (r "^2.4.0") (d #t) (k 0)))) (h "1rkq30i2mv7lzrwc3n7m9clmbvq95nay1a2k1ssljkqrqy6m71vc")))

(define-public crate-sec_edgar-1.0.1 (c (n "sec_edgar") (v "1.0.1") (d (list (d (n "atom_syndication") (r "^0.11") (f (quote ("with-serde"))) (d #t) (k 0)) (d (n "regex") (r "^1.8.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("gzip" "deflate" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (d #t) (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("net" "macros" "rt-multi-thread"))) (k 0)) (d (n "url") (r "^2.4.0") (d #t) (k 0)))) (h "147i6lp5zrv41v5vgg30ll2dd7akxgag0frmhrgbhdw6jlcl7w0n")))

(define-public crate-sec_edgar-1.0.2 (c (n "sec_edgar") (v "1.0.2") (d (list (d (n "atom_syndication") (r "^0.11") (f (quote ("with-serde"))) (d #t) (k 0)) (d (n "regex") (r "^1.8.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("gzip" "deflate" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.43") (d #t) (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("net" "macros" "rt-multi-thread"))) (k 0)) (d (n "url") (r "^2.4.0") (d #t) (k 0)))) (h "06kvkwinc5q7livhmm1wcrykq5jllf7h3d13zw1f39x3lcw8slqk")))

(define-public crate-sec_edgar-1.0.3 (c (n "sec_edgar") (v "1.0.3") (d (list (d (n "atom_syndication") (r "^0.11") (f (quote ("with-serde"))) (d #t) (k 0)) (d (n "regex") (r "^1.8.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("gzip" "deflate" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.43") (d #t) (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("net" "macros" "rt-multi-thread"))) (k 0)) (d (n "url") (r "^2.4.0") (d #t) (k 0)))) (h "1kpjnh8yd15pq40m0kddy92ggn6bcv2gfb5j0mlg9jv58b1jw9fq") (y #t)))

(define-public crate-sec_edgar-1.0.4 (c (n "sec_edgar") (v "1.0.4") (d (list (d (n "atom_syndication") (r "^0.11") (f (quote ("with-serde"))) (d #t) (k 0)) (d (n "regex") (r "^1.8.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("gzip" "deflate" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.43") (d #t) (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("net" "macros" "rt-multi-thread"))) (k 0)) (d (n "url") (r "^2.4.0") (d #t) (k 0)))) (h "199n20nl8ij6zgw0p4xl5vy4mnph6dpk5kxvxs0p13nprzmp0abf")))

(define-public crate-sec_edgar-1.0.5 (c (n "sec_edgar") (v "1.0.5") (d (list (d (n "atom_syndication") (r "^0.11") (f (quote ("with-serde"))) (d #t) (k 0)) (d (n "regex") (r "^1.8.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("gzip" "deflate" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.43") (d #t) (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("net" "macros" "rt-multi-thread"))) (k 0)) (d (n "url") (r "^2.4.0") (d #t) (k 0)))) (h "0z027s9bsasmisz8v2gswwypphj848r00qxcgqv5qr44s03rbw1m")))

