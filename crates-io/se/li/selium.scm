(define-module (crates-io se li selium) #:use-module (crates-io))

(define-public crate-selium-0.1.0 (c (n "selium") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (o #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "quinn") (r "^0.10") (d #t) (k 0)) (d (n "rustls") (r "^0.21") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0") (d #t) (k 0)) (d (n "selium-common") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.29") (f (quote ("full"))) (d #t) (k 0)))) (h "0jmz1d0gp1n6x827sxxgn345mf6ycjcrvpf9d72kd4hwrg4z6p7f") (s 2) (e (quote (("chrono" "dep:chrono") ("bincode" "dep:bincode" "dep:serde"))))))

(define-public crate-selium-0.2.0 (c (n "selium") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (o #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "quinn") (r "^0.10") (d #t) (k 0)) (d (n "rustls") (r "^0.21") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0") (d #t) (k 0)) (d (n "selium-protocol") (r "^0.1") (d #t) (k 0)) (d (n "selium-std") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^1.33") (f (quote ("full"))) (d #t) (k 0)))) (h "0qk5aisg7x2dzxgbs8gdj2mcffrh4mp1df3p8x1z92n62la92ab9") (f (quote (("std-traits" "selium-std/traits") ("std-compression" "selium-std/compression") ("std-codec" "selium-std/codec") ("std" "std-compression" "std-codec") ("default" "std-traits")))) (s 2) (e (quote (("chrono" "dep:chrono"))))))

(define-public crate-selium-0.3.0 (c (n "selium") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (o #t) (k 0)) (d (n "fake") (r "^2.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "quinn") (r "^0.10") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rustls") (r "^0.21") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0") (d #t) (k 0)) (d (n "selium-protocol") (r "^0.2") (d #t) (k 0)) (d (n "selium-std") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^1.34") (f (quote ("full"))) (d #t) (k 0)))) (h "1hkibjqq0k08nskrgdf9ga547jyawqwkgnxvkgfmkv1lfvrnbzyd") (f (quote (("std-compression" "selium-std/compression") ("std-codec" "selium-std/codec") ("std" "std-compression" "std-codec")))) (s 2) (e (quote (("chrono" "dep:chrono"))))))

(define-public crate-selium-0.3.1 (c (n "selium") (v "0.3.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (o #t) (k 0)) (d (n "fake") (r "^2.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "quinn") (r "^0.10") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rustls") (r "^0.21") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0") (d #t) (k 0)) (d (n "selium-protocol") (r "^0.2") (d #t) (k 0)) (d (n "selium-std") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^1.34") (f (quote ("full"))) (d #t) (k 0)))) (h "1k31aplc0d7hzrygqlaxqlaiynzwfwd1wcv07dq3fmav320skbjz") (f (quote (("std-compression" "selium-std/compression") ("std-codec" "selium-std/codec") ("std" "std-compression" "std-codec") ("__notopiccheck" "selium-protocol/__notopiccheck")))) (s 2) (e (quote (("chrono" "dep:chrono"))))))

(define-public crate-selium-0.4.0 (c (n "selium") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (o #t) (k 0)) (d (n "fake") (r "^2.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "quinn") (r "^0.10") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rustls") (r "^0.21") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0") (d #t) (k 0)) (d (n "selium-protocol") (r "^0.3") (d #t) (k 0)) (d (n "selium-std") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^1.34") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)))) (h "0ycqjc6wdnb7wfg7w62ksfb0zik4lkgrrzbjjp28i4d8a4wrlyp4") (f (quote (("std-compression" "selium-std/compression") ("std-codec" "selium-std/codec") ("std" "std-compression" "std-codec") ("__notopiccheck" "selium-protocol/__notopiccheck")))) (s 2) (e (quote (("chrono" "dep:chrono"))))))

(define-public crate-selium-0.5.0 (c (n "selium") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (o #t) (k 0)) (d (n "fake") (r "^2.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "quinn") (r "^0.10") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rustls") (r "^0.21") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0") (d #t) (k 0)) (d (n "selium-protocol") (r "^0.4") (d #t) (k 0)) (d (n "selium-std") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^1.34") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)))) (h "16vifaj8fapk3wjs2m0aa01p2wlcyfkyq1m4i2i4pjknwwwf76d7") (f (quote (("std-compression" "selium-std/compression") ("std-codec" "selium-std/codec") ("std" "std-compression" "std-codec") ("__notopiccheck" "selium-protocol/__notopiccheck")))) (s 2) (e (quote (("chrono" "dep:chrono"))))))

