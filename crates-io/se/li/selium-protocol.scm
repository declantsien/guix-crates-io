(define-module (crates-io se li selium-protocol) #:use-module (crates-io))

(define-public crate-selium-protocol-0.1.0 (c (n "selium-protocol") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "quinn") (r "^0.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)))) (h "058gn76jgwm30srhi5waq09rwi5na0iyn2nrf5wm54h1ybp3zr65")))

(define-public crate-selium-protocol-0.2.0 (c (n "selium-protocol") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lazy-regex") (r "^3.1") (d #t) (k 0)) (d (n "quinn") (r "^0.10") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "selium-std") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)))) (h "05565k9jzqksf1xdhmsxiqvcdx2zfk9qslj46nq7aa16008vh92s")))

(define-public crate-selium-protocol-0.2.1 (c (n "selium-protocol") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lazy-regex") (r "^3.1") (d #t) (k 0)) (d (n "quinn") (r "^0.10") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "selium-std") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)))) (h "1g8v7y8bccsldczxij8h2iqnc1jvhchd055jmsw3kr18w6cn257v") (f (quote (("__notopiccheck"))))))

(define-public crate-selium-protocol-0.3.0 (c (n "selium-protocol") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lazy-regex") (r "^3.1") (d #t) (k 0)) (d (n "quinn") (r "^0.10") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "selium-std") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)))) (h "02g6a3l0714j7ffswd70k3lp7ka8hjqisp8bdzd0vf5r54fprh9m") (f (quote (("__notopiccheck"))))))

(define-public crate-selium-protocol-0.4.0 (c (n "selium-protocol") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lazy-regex") (r "^3.1") (d #t) (k 0)) (d (n "quinn") (r "^0.10") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "selium-std") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)))) (h "0flnm28gxj1vjwl1hrjgfynzmsv4kzczz6y90gxnx8fq3yv49zh7") (f (quote (("__notopiccheck"))))))

