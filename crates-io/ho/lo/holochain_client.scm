(define-module (crates-io ho lo holochain_client) #:use-module (crates-io))

(define-public crate-holochain_client-0.0.1 (c (n "holochain_client") (v "0.0.1") (d (list (d (n "again") (r "^0.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "holochain") (r "^0.0.122") (f (quote ("test_utils"))) (d #t) (k 2)) (d (n "holochain_conductor_api") (r "^0.0.22") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.22") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.22") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1z3mimnm1kwm9ar6jjm0m7mclahib1nqswd8k8girgyrjfqy345d")))

(define-public crate-holochain_client-0.1.0 (c (n "holochain_client") (v "0.1.0") (d (list (d (n "again") (r "^0.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "holochain") (r "^0.0.147") (f (quote ("test_utils"))) (d #t) (k 2)) (d (n "holochain_conductor_api") (r "^0.0.47") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.45") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.39") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "07z1dm19sk7kqzl020rpralapzv1q557i6gx7ad7v3b0v3dcii5g")))

(define-public crate-holochain_client-0.1.1 (c (n "holochain_client") (v "0.1.1") (d (list (d (n "again") (r "^0.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "holochain") (r "^0.0.154") (f (quote ("test_utils"))) (d #t) (k 2)) (d (n "holochain_conductor_api") (r "^0.0.53") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.51") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.39") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "09jsg3nw83rk5xvgxzkcccjncsc594crs6wbpcsg0qmxjd1jf9qd")))

(define-public crate-holochain_client-0.2.0 (c (n "holochain_client") (v "0.2.0") (d (list (d (n "again") (r "^0.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "holochain") (r "^0.0.165") (f (quote ("test_utils"))) (d #t) (k 2)) (d (n "holochain_conductor_api") (r "^0.0.62") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.59") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.39") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "0zcfadhg57l03pnnxxp8qcjxlyh73fgqjcyr81kk76kgp4mjrk9v")))

(define-public crate-holochain_client-0.3.0 (c (n "holochain_client") (v "0.3.0") (d (list (d (n "again") (r "^0.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arbitrary") (r "^1.2") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 0)) (d (n "holo_hash") (r "^0.1.0-beta-rc.2") (f (quote ("encoding"))) (d #t) (k 0)) (d (n "holochain") (r "^0.1.0-beta-rc.4") (f (quote ("test_utils"))) (d #t) (k 2)) (d (n "holochain_conductor_api") (r "^0.1.0-beta-rc.4") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "^0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.1.0-beta-rc.3") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.1.0-beta-rc.1") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.1.0-beta-rc.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "0hnlcmschg86ngg70qi01jlinpqxv3qhysp8d2g4f437hviywahp")))

(define-public crate-holochain_client-0.3.1 (c (n "holochain_client") (v "0.3.1") (d (list (d (n "again") (r "^0.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arbitrary") (r "^1.2") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 0)) (d (n "holo_hash") (r "^0.1") (f (quote ("encoding"))) (d #t) (k 0)) (d (n "holochain") (r "^0.1") (f (quote ("test_utils"))) (d #t) (k 2)) (d (n "holochain_conductor_api") (r "^0.1") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "^0.0.52") (d #t) (k 0)) (d (n "holochain_types") (r "^0.1") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.1") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1fyhrs554i2q73kksf90f7rjczz0axpyjdlxp3f7khim86lm4f4m")))

(define-public crate-holochain_client-0.4.0 (c (n "holochain_client") (v "0.4.0") (d (list (d (n "again") (r "^0.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arbitrary") (r "^1.2") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.0-beta-rc.4") (f (quote ("encoding"))) (d #t) (k 0)) (d (n "holochain") (r "^0.2.0-beta-rc.6") (f (quote ("test_utils"))) (d #t) (k 2)) (d (n "holochain_conductor_api") (r "^0.2.0-beta-rc.6") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "^0.0.52") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.0-beta-rc.6") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.0-beta-rc.2") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.0-beta-rc.5") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1j4nii55i8ls8lvlx6xiql4frs8qd5p9mh60hp2bh05mw321wyyv")))

(define-public crate-holochain_client-0.4.1 (c (n "holochain_client") (v "0.4.1") (d (list (d (n "again") (r "^0.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arbitrary") (r "^1.2") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.1") (f (quote ("encoding"))) (d #t) (k 0)) (d (n "holochain") (r "^0.2.1") (f (quote ("test_utils"))) (d #t) (k 2)) (d (n "holochain_conductor_api") (r "^0.2.1") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "^0.0.52") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.1") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.1") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.1") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1b5z240pdvvzrhcbnww65pvsk8f0jkpnjsrib42clzajhb4ivxcp")))

(define-public crate-holochain_client-0.4.2-rc.0 (c (n "holochain_client") (v "0.4.2-rc.0") (d (list (d (n "again") (r "^0.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arbitrary") (r "^1.2") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.1") (f (quote ("encoding"))) (d #t) (k 0)) (d (n "holochain") (r "^0.2.2-beta-rc.0") (f (quote ("test_utils"))) (d #t) (k 2)) (d (n "holochain_conductor_api") (r "^0.2.2-beta-rc.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "^0.0.52") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.2-beta-rc.0") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.1") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.2-beta-rc.0") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "0vxg523ll7xvhfpj87931x9jjilvz6ki5wvjk4v26r0ci7xr8xpd")))

(define-public crate-holochain_client-0.4.2-rc.1 (c (n "holochain_client") (v "0.4.2-rc.1") (d (list (d (n "again") (r "^0.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arbitrary") (r "^1.2") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.2-beta-rc.0") (f (quote ("encoding"))) (d #t) (k 0)) (d (n "holochain") (r "^0.2.2-beta-rc.1") (f (quote ("test_utils"))) (d #t) (k 2)) (d (n "holochain_conductor_api") (r "^0.2.2-beta-rc.1") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "^0.0.52") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.2-beta-rc.1") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.1") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.2-beta-rc.1") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "0xain6lz0627zhwi2p966vrh8x8d0nqrl5r8406p7zl5przllbi2") (y #t)))

(define-public crate-holochain_client-0.5.0-rc.0 (c (n "holochain_client") (v "0.5.0-rc.0") (d (list (d (n "again") (r "^0.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arbitrary") (r "^1.2") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.2-beta-rc.0") (f (quote ("encoding"))) (d #t) (k 0)) (d (n "holochain") (r "^0.2.2-beta-rc.1") (f (quote ("test_utils"))) (d #t) (k 2)) (d (n "holochain_conductor_api") (r "^0.2.2-beta-rc.1") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "^0.0.52") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.2-beta-rc.1") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.1") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.2-beta-rc.1") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1pshsx9glg8bkl27h043vfyws0sc8n4vsf64qxchka3s39kfnq35")))

(define-public crate-holochain_client-0.4.2-rc.3 (c (n "holochain_client") (v "0.4.2-rc.3") (d (list (d (n "again") (r "^0.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arbitrary") (r "^1.2") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.2-beta-rc.0") (f (quote ("encoding"))) (d #t) (k 0)) (d (n "holochain") (r "^0.2.2-beta-rc.3") (f (quote ("test_utils"))) (d #t) (k 2)) (d (n "holochain_conductor_api") (r "^0.2.2-beta-rc.1") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "^0.0.52") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.2-beta-rc.1") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.1") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.2-beta-rc.1") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "0x3s4qd4q07bfkp8xa7gmj8yjr6k99qnqmw5gyd8z9adqy3hh9an")))

(define-public crate-holochain_client-0.4.2 (c (n "holochain_client") (v "0.4.2") (d (list (d (n "again") (r "^0.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arbitrary") (r "^1.2") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.2") (f (quote ("encoding"))) (d #t) (k 0)) (d (n "holochain") (r "^0.2.2") (f (quote ("test_utils"))) (d #t) (k 2)) (d (n "holochain_conductor_api") (r "^0.2.2") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "^0.0.52") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.2") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.2") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1sk1wawiy5kn6pq9rmsm86dnzz5yncz8lqcyjvqd63cakfrfb5d1")))

(define-public crate-holochain_client-0.4.3 (c (n "holochain_client") (v "0.4.3") (d (list (d (n "again") (r "^0.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arbitrary") (r "^1.2") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.2") (f (quote ("encoding"))) (d #t) (k 0)) (d (n "holochain") (r "^0.2.2") (f (quote ("test_utils"))) (d #t) (k 2)) (d (n "holochain_conductor_api") (r "^0.2.2") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.2") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.2") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "0r91v5ilarg4iy7flzij17rxx06dq2w4069rn9cj02zlgcpadkm6")))

(define-public crate-holochain_client-0.4.4 (c (n "holochain_client") (v "0.4.4") (d (list (d (n "again") (r "^0.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arbitrary") (r "^1.2") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.2") (f (quote ("encoding"))) (d #t) (k 0)) (d (n "holochain") (r "^0.2.2") (f (quote ("test_utils"))) (d #t) (k 2)) (d (n "holochain_conductor_api") (r "^0.2.2") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.2") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.2") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r ">=1.0.0, <=1.0.166") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1d9rw59j0iahvjh69vxknpf20irg409jm3kdn8mxhk11w14lbblj")))

(define-public crate-holochain_client-0.4.5-rc.0 (c (n "holochain_client") (v "0.4.5-rc.0") (d (list (d (n "again") (r "^0.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arbitrary") (r "^1.2") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.3-beta-rc.0") (f (quote ("encoding"))) (d #t) (k 0)) (d (n "holochain") (r "^0.2.3-beta-rc.1") (f (quote ("test_utils"))) (d #t) (k 2)) (d (n "holochain_conductor_api") (r "^0.2.3-beta-rc.1") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "^0.0.53") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.3-beta-rc.0") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.2") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.3-beta-rc.0") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r ">=1.0.0, <=1.0.166") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1q09x5gw50p9f5qx32vfnxrr9bqy8a8azhxrx24ca3z5dfi09lxm")))

(define-public crate-holochain_client-0.3.2-rc.0 (c (n "holochain_client") (v "0.3.2-rc.0") (d (list (d (n "again") (r "^0.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arbitrary") (r "^1.2") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 0)) (d (n "holo_hash") (r "^0.1.5-rc.0") (f (quote ("encoding"))) (d #t) (k 0)) (d (n "holochain") (r "^0.1.7-rc.0") (f (quote ("test_utils"))) (d #t) (k 2)) (d (n "holochain_conductor_api") (r "^0.1.7-rc.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.1.7-rc.0") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.1.3-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.1.5-rc.0") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r ">=1.0.0, <=1.0.166") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1kw3q2h46pkpm7xyd62ywidr63mmdf291d2g927a2gkaq99dia7b")))

(define-public crate-holochain_client-0.3.2 (c (n "holochain_client") (v "0.3.2") (d (list (d (n "again") (r "^0.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arbitrary") (r "^1.2") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 0)) (d (n "holo_hash") (r "^0.1.5") (f (quote ("encoding"))) (d #t) (k 0)) (d (n "holochain") (r "^0.1.7") (f (quote ("test_utils"))) (d #t) (k 2)) (d (n "holochain_conductor_api") (r "^0.1.7") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.1.7") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.1.3") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.1.5") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r ">=1.0.0, <=1.0.166") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "0vp525j9p02jqvsj2gqz8ysca252l2vnd5ags2brchrnlw90p8lh")))

(define-public crate-holochain_client-0.5.0-dev.0 (c (n "holochain_client") (v "0.5.0-dev.0") (d (list (d (n "again") (r "^0.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arbitrary") (r "^1.2") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.10") (f (quote ("encoding"))) (d #t) (k 0)) (d (n "holochain") (r "^0.3.0-beta-dev.22") (f (quote ("test_utils"))) (d #t) (k 2)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.19") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.0-beta-dev.4") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.14") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.11") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0.189") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1vvcyafv6f2qd552mrz4f7mnikw4rvx2bhxczg6l1ngmqw9ck8cb")))

(define-public crate-holochain_client-0.5.0-dev.23 (c (n "holochain_client") (v "0.5.0-dev.23") (d (list (d (n "again") (r "^0.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arbitrary") (r "^1.2") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.11") (f (quote ("encoding"))) (d #t) (k 0)) (d (n "holochain") (r "^0.3.0-beta-dev.23") (f (quote ("test_utils"))) (d #t) (k 2)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.23") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.20") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.0-beta-dev.4") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.14") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.12") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0.189") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1gyq6q8lgik2ps1mwg6a1b6rgpinnfp27ajc9khb1y37g8m6glap")))

(define-public crate-holochain_client-0.4.5-rc.1 (c (n "holochain_client") (v "0.4.5-rc.1") (d (list (d (n "again") (r "^0.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arbitrary") (r "^1.2") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.3-rc.0") (f (quote ("encoding"))) (d #t) (k 0)) (d (n "holochain") (r "^0.2.3-rc.0") (f (quote ("test_utils"))) (d #t) (k 2)) (d (n "holochain_conductor_api") (r "^0.2.3-rc.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "^0.0.53") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.3-rc.0") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.3-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.3-rc.0") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r ">=1.0.0, <=1.0.166") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "0n2855b5w9qdjfn1ffjzmvlh2pj1hjc9rb5z3ggy8p1cqal9xnmc")))

(define-public crate-holochain_client-0.5.0-dev.24 (c (n "holochain_client") (v "0.5.0-dev.24") (d (list (d (n "again") (r "^0.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arbitrary") (r "^1.2") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.12") (f (quote ("encoding"))) (d #t) (k 0)) (d (n "holochain") (r "^0.3.0-beta-dev.24") (f (quote ("test_utils"))) (d #t) (k 2)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.24") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.21") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.0-beta-dev.4") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.16") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.13") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0.181") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1hp3kfwgf57ibdvy5d4fsnkxqzj4rmf24mygpvfasbkyqlw4szr9")))

(define-public crate-holochain_client-0.4.5-rc.2 (c (n "holochain_client") (v "0.4.5-rc.2") (d (list (d (n "again") (r "^0.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arbitrary") (r "^1.2") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.3-rc.1") (f (quote ("encoding"))) (d #t) (k 0)) (d (n "holochain") (r "^0.2.3-rc.1") (f (quote ("test_utils"))) (d #t) (k 2)) (d (n "holochain_conductor_api") (r "^0.2.3-rc.1") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "^0.0.53") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.3-rc.1") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.3-rc.1") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.3-rc.1") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r ">=1.0.0, <=1.0.166") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "026hmcm3igdv76227i2j4sx8vnsm1y9w9cpgln2l52g16iadddkn")))

(define-public crate-holochain_client-0.4.5 (c (n "holochain_client") (v "0.4.5") (d (list (d (n "again") (r "^0.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arbitrary") (r "^1.2") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.3") (f (quote ("encoding"))) (d #t) (k 0)) (d (n "holochain") (r "^0.2.3") (f (quote ("test_utils"))) (d #t) (k 2)) (d (n "holochain_conductor_api") (r "^0.2.3") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "^0.0.53") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.3") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.3") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r ">=1.0.0, <=1.0.166") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1x3p6z1h97cjprhcqaxyd7n65h3w32wlafzjb3z3r727rq15vwix")))

(define-public crate-holochain_client-0.5.0-dev.25 (c (n "holochain_client") (v "0.5.0-dev.25") (d (list (d (n "again") (r "^0.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arbitrary") (r "^1.2") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.13") (f (quote ("encoding"))) (d #t) (k 0)) (d (n "holochain") (r "^0.3.0-beta-dev.25") (f (quote ("test_utils"))) (d #t) (k 2)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.25") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.0-beta-dev.5") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.16") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.14") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0.181") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1qjn16bwxq9igifqia41saiba87a9ys0zbakl30mxhnd6d5qz1nk")))

(define-public crate-holochain_client-0.4.6-rc.0 (c (n "holochain_client") (v "0.4.6-rc.0") (d (list (d (n "again") (r "^0.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arbitrary") (r "^1.2") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.3") (f (quote ("encoding"))) (d #t) (k 0)) (d (n "holochain") (r "^0.2.4-rc.0") (f (quote ("test_utils"))) (d #t) (k 2)) (d (n "holochain_conductor_api") (r "^0.2.4-rc.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "^0.0.53") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.4-rc.0") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.3") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.4-rc.0") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r ">=1.0.0, <=1.0.166") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1dqlf19iq8ydg6cb68ln1c1rl9jnggy9ig5y31nr5bzn9bhnm01d")))

(define-public crate-holochain_client-0.4.7-rc.0 (c (n "holochain_client") (v "0.4.7-rc.0") (d (list (d (n "again") (r "^0.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arbitrary") (r "^1.2") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.5-rc.0") (f (quote ("encoding"))) (d #t) (k 0)) (d (n "holochain") (r "^0.2.5-rc.0") (f (quote ("test_utils"))) (d #t) (k 2)) (d (n "holochain_conductor_api") (r "^0.2.5-rc.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "^0.0.53") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.5-rc.0") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.5-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.5-rc.0") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r ">=1.0.0, <=1.0.166") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "12hkhfh33a3dcc8rmyf15bkp86310l4w438bbx72mccbnb2410p4")))

(define-public crate-holochain_client-0.4.7-rc.1 (c (n "holochain_client") (v "0.4.7-rc.1") (d (list (d (n "again") (r "^0.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arbitrary") (r "^1.2") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.5-rc.0") (f (quote ("encoding"))) (d #t) (k 0)) (d (n "holochain") (r "^0.2.5-rc.1") (f (quote ("test_utils"))) (d #t) (k 2)) (d (n "holochain_conductor_api") (r "^0.2.5-rc.1") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "^0.0.53") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.5-rc.1") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.5-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.5-rc.0") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r ">=1.0.0, <=1.0.166") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "0j0skbm7v31snp1alppvnz7hgv727sgrq3hm84n47j7p98vz9zk1")))

(define-public crate-holochain_client-0.5.0-dev.26 (c (n "holochain_client") (v "0.5.0-dev.26") (d (list (d (n "again") (r "^0.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arbitrary") (r "^1.2") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 0)) (d (n "event-emitter-rs") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.20") (f (quote ("encoding"))) (d #t) (k 0)) (d (n "holochain") (r "^0.3.0-beta-dev.32") (f (quote ("test_utils"))) (d #t) (k 2)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.34") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "^0.0.53") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.31") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.0-beta-dev.11") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.25") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.14") (d #t) (k 2)) (d (n "lair_keystore_api") (r "^0.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0.193") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "0n2ymnmd25zj6yzv499hzgi9w8ygpfimzygrnsz3f9yb6l9q9fb6")))

(define-public crate-holochain_client-0.5.0-dev.27 (c (n "holochain_client") (v "0.5.0-dev.27") (d (list (d (n "again") (r "^0.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arbitrary") (r "^1.2") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 0)) (d (n "event-emitter-rs") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.20") (f (quote ("encoding"))) (d #t) (k 0)) (d (n "holochain") (r "^0.3.0-beta-dev.32") (f (quote ("test_utils"))) (d #t) (k 2)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.34") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "^0.0.53") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.31") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.0-beta-dev.11") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.25") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.14") (d #t) (k 2)) (d (n "lair_keystore_api") (r "^0.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0.193") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1vhfyk2pcdh4574hczkgjbjydy87ll72hjs4ma2s23k1c7626fzh")))

(define-public crate-holochain_client-0.4.7-rc.2 (c (n "holochain_client") (v "0.4.7-rc.2") (d (list (d (n "again") (r "^0.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arbitrary") (r "^1.2") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.6-rc.0") (f (quote ("encoding"))) (d #t) (k 0)) (d (n "holochain") (r "^0.2.6-rc.0") (f (quote ("test_utils"))) (d #t) (k 2)) (d (n "holochain_conductor_api") (r "^0.2.6-rc.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "^0.0.53") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.6-rc.0") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.6-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.6-rc.0") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r ">=1.0.0, <=1.0.166") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "06605dywjv1r36wrdhdhw6hmz22jly0c9lrpjfjxjnp8km9jv7r1")))

(define-public crate-holochain_client-0.4.7 (c (n "holochain_client") (v "0.4.7") (d (list (d (n "again") (r "^0.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arbitrary") (r "^1.2") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.6") (f (quote ("encoding"))) (d #t) (k 0)) (d (n "holochain") (r "^0.2.6") (f (quote ("test_utils"))) (d #t) (k 2)) (d (n "holochain_conductor_api") (r "^0.2.6") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "^0.0.53") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.6") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.6") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.6") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r ">=1.0.0, <=1.0.166") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "0an9zhnlj9br87p18jkhkmsc7jryfi5sjjdrhxzv08v135kvnc55")))

(define-public crate-holochain_client-0.5.0-dev.28 (c (n "holochain_client") (v "0.5.0-dev.28") (d (list (d (n "again") (r "^0.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arbitrary") (r "^1.2") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 0)) (d (n "event-emitter-rs") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.20") (f (quote ("encoding"))) (d #t) (k 0)) (d (n "holochain") (r "^0.3.0-beta-dev.32") (f (quote ("test_utils"))) (d #t) (k 2)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.34") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "^0.0.53") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.31") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.0-beta-dev.11") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.25") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.14") (d #t) (k 2)) (d (n "lair_keystore_api") (r "^0.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0.193") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "084bpx2qq395r547w9dgj4x5bmp5vri3hvwm5fp6g7sd0dr3nvdi")))

(define-public crate-holochain_client-0.5.0-dev.29 (c (n "holochain_client") (v "0.5.0-dev.29") (d (list (d (n "again") (r "^0.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arbitrary") (r "^1.2") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "event-emitter-rs") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.20") (f (quote ("encoding"))) (d #t) (k 0)) (d (n "holochain") (r "^0.3.0-beta-dev.38") (f (quote ("test_utils"))) (d #t) (k 2)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.34") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "^0.0.53") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.31") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.0-beta-dev.11") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.28") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.14") (d #t) (k 2)) (d (n "lair_keystore_api") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0.193") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1k6gq3dlqn0yi3lkrfk5flybyjcakl7y609mxx9pcff4q45g5z96") (f (quote (("default" "lair_signing")))) (s 2) (e (quote (("lair_signing" "dep:lair_keystore_api"))))))

(define-public crate-holochain_client-0.4.8 (c (n "holochain_client") (v "0.4.8") (d (list (d (n "again") (r "^0.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arbitrary") (r "^1.2") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.6") (f (quote ("encoding"))) (d #t) (k 0)) (d (n "holochain") (r "^0.2.6") (f (quote ("test_utils"))) (d #t) (k 2)) (d (n "holochain_conductor_api") (r "^0.2.6") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "^0.0.53") (d #t) (k 0)) (d (n "holochain_state") (r "^0.2.6") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.6") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.6") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r ">=1.0.0, <=1.0.166") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1x2xqcrnvzvmraym0rdv09j4q285yfpm979xp4gpjs5ww1zi66l4")))

(define-public crate-holochain_client-0.4.9-rc.1 (c (n "holochain_client") (v "0.4.9-rc.1") (d (list (d (n "again") (r "^0.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arbitrary") (r "^1.2") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.6") (f (quote ("encoding"))) (d #t) (k 0)) (d (n "holochain") (r "^0.2.7-rc.1") (f (quote ("test_utils"))) (d #t) (k 2)) (d (n "holochain_conductor_api") (r "^0.2.7-rc.1") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "^0.0.53") (d #t) (k 0)) (d (n "holochain_state") (r "^0.2.7-rc.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.7-rc.1") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.7-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.7-rc.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r ">=1.0.0, <=1.0.166") (d #t) (k 0)) (d (n "tokio") (r "^1.36") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "0zc1lfsrl6jja207lqfc1kwb5rj5nambapsfkxj8j1cp3nh2ddj8")))

(define-public crate-holochain_client-0.5.0-dev.30 (c (n "holochain_client") (v "0.5.0-dev.30") (d (list (d (n "again") (r "^0.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arbitrary") (r "^1.2") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "event-emitter-rs") (r "^0.1") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.23") (f (quote ("encoding"))) (d #t) (k 0)) (d (n "holochain") (r "^0.3.0-beta-dev.39") (f (quote ("test_utils"))) (d #t) (k 2)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.38") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.25") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "^0.0.53") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.35") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.0-beta-dev.15") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.28") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.21") (d #t) (k 2)) (d (n "lair_keystore_api") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0.193") (d #t) (k 0)) (d (n "tokio") (r "^1.36") (f (quote ("rt"))) (d #t) (k 0)))) (h "0f3garjrs1cz9yy60q4gcqza23nsa9qxmwrsy3321gn680zxa6ar") (f (quote (("default" "lair_signing")))) (s 2) (e (quote (("lair_signing" "dep:lair_keystore_api"))))))

(define-public crate-holochain_client-0.5.0-dev.31 (c (n "holochain_client") (v "0.5.0-dev.31") (d (list (d (n "again") (r "^0.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arbitrary") (r "^1.2") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "event-emitter-rs") (r "^0.1") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.25") (f (quote ("encoding"))) (d #t) (k 0)) (d (n "holochain") (r "^0.3.0-beta-dev.43") (f (quote ("test_utils"))) (d #t) (k 2)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.42") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.26") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "^0.0.53") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.38") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.0-beta-dev.17") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.31") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.24") (d #t) (k 2)) (d (n "lair_keystore_api") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0.193") (d #t) (k 0)) (d (n "tokio") (r "^1.36") (f (quote ("rt"))) (d #t) (k 0)))) (h "0fs89r8npqil17bvnhnpsr4k86kf2vjqli68w2ddkh80wjgkaj31") (f (quote (("default" "lair_signing")))) (s 2) (e (quote (("lair_signing" "dep:lair_keystore_api"))))))

(define-public crate-holochain_client-0.4.9-rc.2 (c (n "holochain_client") (v "0.4.9-rc.2") (d (list (d (n "again") (r "^0.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arbitrary") (r "^1.2") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "event-emitter-rs") (r "^0.1") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.6") (f (quote ("encoding"))) (d #t) (k 0)) (d (n "holochain") (r "^0.2.7-rc.1") (f (quote ("test_utils"))) (d #t) (k 2)) (d (n "holochain_conductor_api") (r "^0.2.7-rc.1") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "^0.0.53") (d #t) (k 0)) (d (n "holochain_state") (r "^0.2.7-rc.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.7-rc.1") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.7-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.7-rc.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r ">=1.0.0, <=1.0.166") (d #t) (k 0)) (d (n "tokio") (r "^1.36") (f (quote ("rt"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "0s7a3k5i5z62g2fcdsyangfan8jivrhg5bdlgr6y3b5whq1ifdyb")))

(define-public crate-holochain_client-0.4.10 (c (n "holochain_client") (v "0.4.10") (d (list (d (n "again") (r "^0.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arbitrary") (r "^1.2") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "event-emitter-rs") (r "^0.1") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.6") (f (quote ("encoding"))) (d #t) (k 0)) (d (n "holochain") (r "^0.2.7") (f (quote ("test_utils"))) (d #t) (k 2)) (d (n "holochain_conductor_api") (r "^0.2.7") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "^0.0.53") (d #t) (k 0)) (d (n "holochain_state") (r "^0.2.7") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.7") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.7") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.7") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r ">=1.0.0, <=1.0.166") (d #t) (k 0)) (d (n "tokio") (r "^1.36") (f (quote ("rt"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "11rvi0ymigys5jgbx3k4wlfm985bgl7j31mmzf4lyh0s7cl3fmbd")))

(define-public crate-holochain_client-0.4.11 (c (n "holochain_client") (v "0.4.11") (d (list (d (n "again") (r "^0.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arbitrary") (r "^1.2") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "event-emitter-rs") (r "^0.1") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.6") (f (quote ("encoding"))) (d #t) (k 0)) (d (n "holochain") (r "^0.2.7") (f (quote ("test_utils"))) (d #t) (k 2)) (d (n "holochain_conductor_api") (r "^0.2.7") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "^0.0.53") (d #t) (k 0)) (d (n "holochain_state") (r "^0.2.7") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.7") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.7") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.7") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r ">=1.0.0, <=1.0.166") (d #t) (k 0)) (d (n "tokio") (r "^1.36") (f (quote ("rt"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "0h2h3d8i1s70qpi2mmwd5iycznig5ii9fyymkmqgvkhbxx47q22i")))

(define-public crate-holochain_client-0.5.0-dev.32 (c (n "holochain_client") (v "0.5.0-dev.32") (d (list (d (n "again") (r "^0.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arbitrary") (r "^1.2") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "event-emitter-rs") (r "^0.1") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.28") (f (quote ("encoding"))) (d #t) (k 0)) (d (n "holochain") (r "^0.3.0-beta-dev.47") (f (quote ("test_utils"))) (d #t) (k 2)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.46") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.27") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "^0.0.53") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.39") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.0-beta-dev.19") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.35") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.27") (d #t) (k 2)) (d (n "lair_keystore_api") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0.193") (d #t) (k 0)) (d (n "tokio") (r "^1.36") (f (quote ("rt"))) (d #t) (k 0)))) (h "1g039h9572h1rczb003nyf2rm1ydfdap806laid4ixl9swal97fw") (f (quote (("default" "lair_signing")))) (s 2) (e (quote (("lair_signing" "dep:lair_keystore_api"))))))

(define-public crate-holochain_client-0.6.0-dev.0 (c (n "holochain_client") (v "0.6.0-dev.0") (d (list (d (n "again") (r "^0.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arbitrary") (r "^1.2") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "event-emitter-rs") (r "^0.1") (d #t) (k 0)) (d (n "holo_hash") (r "^0.4.0-dev.1") (f (quote ("encoding"))) (d #t) (k 0)) (d (n "holochain") (r "^0.4.0-dev.1") (f (quote ("test_utils"))) (d #t) (k 2)) (d (n "holochain_conductor_api") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "^0.0.54") (d #t) (k 0)) (d (n "holochain_types") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.4.0-dev.1") (d #t) (k 2)) (d (n "lair_keystore_api") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0.193") (d #t) (k 0)) (d (n "tokio") (r "^1.36") (f (quote ("rt"))) (d #t) (k 0)))) (h "1hfbqd45mgq562w3738087nqwacrz5zihzizflp68kr371y56d35") (f (quote (("default" "lair_signing")))) (s 2) (e (quote (("lair_signing" "dep:lair_keystore_api"))))))

(define-public crate-holochain_client-0.5.0-rc.1 (c (n "holochain_client") (v "0.5.0-rc.1") (d (list (d (n "again") (r "^0.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arbitrary") (r "^1.2") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "event-emitter-rs") (r "^0.1") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.1-rc.0") (f (quote ("encoding"))) (d #t) (k 0)) (d (n "holochain") (r "^0.3.1-rc.0") (f (quote ("test_utils"))) (d #t) (k 2)) (d (n "holochain_conductor_api") (r "^0.3.1-rc.0") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.1-rc.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "^0.0.54") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.1-rc.0") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.1-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.1-rc.0") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.1-rc.0") (d #t) (k 2)) (d (n "lair_keystore_api") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0.193") (d #t) (k 0)) (d (n "tokio") (r "^1.36") (f (quote ("rt"))) (d #t) (k 0)))) (h "1pi5r369zpgznsrfai6ji28x3sjj8lfq45zs8d84cnhm3djl23c5") (f (quote (("default" "lair_signing")))) (s 2) (e (quote (("lair_signing" "dep:lair_keystore_api"))))))

(define-public crate-holochain_client-0.5.0-rc.2 (c (n "holochain_client") (v "0.5.0-rc.2") (d (list (d (n "again") (r "^0.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arbitrary") (r "^1.2") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "event-emitter-rs") (r "^0.1") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.1-rc.0") (f (quote ("encoding"))) (d #t) (k 0)) (d (n "holochain") (r "^0.3.1-rc.0") (f (quote ("test_utils"))) (d #t) (k 2)) (d (n "holochain_conductor_api") (r "^0.3.1-rc.0") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.1-rc.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "^0.0.54") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.1-rc.0") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.1-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.1-rc.0") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.1-rc.0") (d #t) (k 2)) (d (n "lair_keystore_api") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0.193") (d #t) (k 0)) (d (n "tokio") (r "^1.36") (f (quote ("rt"))) (d #t) (k 0)))) (h "1rahn3lg6qd7ydhja47xhcx74bcq5daaaxifwyavgz3wm26pafg0") (f (quote (("default" "lair_signing")))) (s 2) (e (quote (("lair_signing" "dep:lair_keystore_api"))))))

(define-public crate-holochain_client-0.5.0-rc.3 (c (n "holochain_client") (v "0.5.0-rc.3") (d (list (d (n "again") (r "^0.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arbitrary") (r "^1.2") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "event-emitter-rs") (r "^0.1") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.1-rc.0") (f (quote ("encoding"))) (d #t) (k 0)) (d (n "holochain") (r "^0.3.1-rc.0") (f (quote ("test_utils"))) (d #t) (k 2)) (d (n "holochain_conductor_api") (r "^0.3.1-rc.0") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.1-rc.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "^0.0.54") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.1-rc.0") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.1-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.1-rc.0") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.1-rc.0") (d #t) (k 2)) (d (n "lair_keystore_api") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0.193") (d #t) (k 0)) (d (n "tokio") (r "^1.36") (f (quote ("rt"))) (d #t) (k 0)))) (h "0fyvb2jjra4wdrljbrhjfww7r7ds66gixn9m33xfb48rvw6038zz") (f (quote (("default" "lair_signing")))) (s 2) (e (quote (("lair_signing" "dep:lair_keystore_api"))))))

(define-public crate-holochain_client-0.5.0-rc.4 (c (n "holochain_client") (v "0.5.0-rc.4") (d (list (d (n "again") (r "^0.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arbitrary") (r "^1.2") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "event-emitter-rs") (r "^0.1") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.1-rc.0") (f (quote ("encoding"))) (d #t) (k 0)) (d (n "holochain") (r "^0.3.1-rc.0") (f (quote ("test_utils"))) (d #t) (k 2)) (d (n "holochain_conductor_api") (r "^0.3.1-rc.0") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.1-rc.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "^0.0.54") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.1-rc.0") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.1-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.1-rc.0") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.1-rc.0") (d #t) (k 2)) (d (n "lair_keystore_api") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0.193") (d #t) (k 0)) (d (n "tokio") (r "^1.36") (f (quote ("rt"))) (d #t) (k 0)))) (h "1bgc0rcb46gyis7a88bxzzpa4wshzzlv1fc8qmb0lpl3lyv7zp8y") (f (quote (("default" "lair_signing")))) (s 2) (e (quote (("lair_signing" "dep:lair_keystore_api"))))))

