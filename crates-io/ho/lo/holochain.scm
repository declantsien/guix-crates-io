(define-module (crates-io ho lo holochain) #:use-module (crates-io))

(define-public crate-holochain-0.0.33-alpha5 (c (n "holochain") (v "0.0.33-alpha5") (d (list (d (n "holochain_common") (r "= 0.0.33-alpha5") (d #t) (k 0)) (d (n "holochain_conductor_lib") (r "= 0.0.33-alpha5") (d #t) (k 0)) (d (n "holochain_core_types") (r "= 0.0.33-alpha5") (d #t) (k 0)) (d (n "lib3h_sodium") (r "= 0.0.19") (d #t) (k 0)) (d (n "signal-hook") (r "= 0.1.10") (d #t) (t "cfg(unix)") (k 0)) (d (n "structopt") (r "= 0.2.15") (d #t) (k 0)) (d (n "tiny_http") (r "= 0.6.2") (d #t) (k 0)) (d (n "ws") (r "= 0.8.0") (d #t) (k 0)))) (h "0xm4p5pilk9pnxbixqn1c2jhq8sg20qjlcbxf4ff81hl5w7z5g1b")))

(define-public crate-holochain-0.0.33-alpha6 (c (n "holochain") (v "0.0.33-alpha6") (d (list (d (n "holochain_common") (r "= 0.0.33-alpha6") (d #t) (k 0)) (d (n "holochain_conductor_lib") (r "= 0.0.33-alpha6") (d #t) (k 0)) (d (n "holochain_core_types") (r "= 0.0.33-alpha6") (d #t) (k 0)) (d (n "lib3h_sodium") (r "= 0.0.19") (d #t) (k 0)) (d (n "signal-hook") (r "= 0.1.10") (d #t) (t "cfg(unix)") (k 0)) (d (n "structopt") (r "= 0.2.15") (d #t) (k 0)) (d (n "tiny_http") (r "= 0.6.2") (d #t) (k 0)) (d (n "ws") (r "= 0.8.0") (d #t) (k 0)))) (h "1a4w6ph2y59iwz3bg3f4vgvqq41gk65wzrwwagf2fdc9yv5cji30")))

(define-public crate-holochain-0.0.34-alpha1 (c (n "holochain") (v "0.0.34-alpha1") (d (list (d (n "holochain_common") (r "= 0.0.34-alpha1") (d #t) (k 0)) (d (n "holochain_conductor_lib") (r "= 0.0.34-alpha1") (d #t) (k 0)) (d (n "holochain_core_types") (r "= 0.0.34-alpha1") (d #t) (k 0)) (d (n "lib3h_sodium") (r "= 0.0.19") (d #t) (k 0)) (d (n "signal-hook") (r "= 0.1.10") (d #t) (t "cfg(unix)") (k 0)) (d (n "structopt") (r "= 0.2.15") (d #t) (k 0)) (d (n "tiny_http") (r "= 0.6.2") (d #t) (k 0)) (d (n "ws") (r "= 0.8.0") (d #t) (k 0)))) (h "1mynsvi4h3nf61sma89f2ngb763ckyaq6iw1w1iihhvmh2zgn6cd")))

(define-public crate-holochain-0.0.35-alpha7 (c (n "holochain") (v "0.0.35-alpha7") (d (list (d (n "holochain_common") (r "= 0.0.35-alpha7") (d #t) (k 0)) (d (n "holochain_conductor_lib") (r "= 0.0.35-alpha7") (d #t) (k 0)) (d (n "holochain_core_types") (r "= 0.0.35-alpha7") (d #t) (k 0)) (d (n "lib3h_sodium") (r "= 0.0.20") (d #t) (k 0)) (d (n "signal-hook") (r "= 0.1.10") (d #t) (t "cfg(unix)") (k 0)) (d (n "structopt") (r "= 0.2.15") (d #t) (k 0)) (d (n "tiny_http") (r "= 0.6.2") (d #t) (k 0)) (d (n "ws") (r "= 0.8.0") (d #t) (k 0)))) (h "0nzc3rn346nk5z887an26c6aq0l8dlz6bq9nz8fxyxw2z0qh65dk")))

(define-public crate-holochain-0.0.37-alpha6 (c (n "holochain") (v "0.0.37-alpha6") (d (list (d (n "holochain_common") (r "= 0.0.37-alpha6") (d #t) (k 0)) (d (n "holochain_conductor_lib") (r "= 0.0.37-alpha6") (d #t) (k 0)) (d (n "holochain_core_types") (r "= 0.0.37-alpha6") (d #t) (k 0)) (d (n "holochain_locksmith") (r "= 0.0.37-alpha6") (d #t) (k 0)) (d (n "lib3h_sodium") (r "= 0.0.21") (d #t) (k 0)) (d (n "signal-hook") (r "= 0.1.10") (d #t) (t "cfg(unix)") (k 0)) (d (n "structopt") (r "= 0.2.15") (d #t) (k 0)) (d (n "tiny_http") (r "= 0.6.2") (d #t) (k 0)) (d (n "ws") (r "= 0.8.0") (d #t) (k 0)))) (h "1s4kfkb2fl1iq85kbhdwkq6nxx16k21sbb01aa9k155n79q6yic3")))

(define-public crate-holochain-0.0.38-alpha2 (c (n "holochain") (v "0.0.38-alpha2") (d (list (d (n "holochain_common") (r "= 0.0.38-alpha2") (d #t) (k 0)) (d (n "holochain_conductor_lib") (r "= 0.0.38-alpha2") (d #t) (k 0)) (d (n "holochain_core_types") (r "= 0.0.38-alpha2") (d #t) (k 0)) (d (n "holochain_locksmith") (r "= 0.0.38-alpha2") (d #t) (k 0)) (d (n "lib3h_sodium") (r "= 0.0.21") (d #t) (k 0)) (d (n "signal-hook") (r "= 0.1.10") (d #t) (t "cfg(unix)") (k 0)) (d (n "structopt") (r "= 0.2.15") (d #t) (k 0)) (d (n "tiny_http") (r "= 0.6.2") (d #t) (k 0)) (d (n "ws") (r "= 0.8.0") (d #t) (k 0)))) (h "0qbz0q126g2422fmdllzsagg5nrvxakganvl1g34jc82pnqqpihr")))

(define-public crate-holochain-0.0.38-alpha9 (c (n "holochain") (v "0.0.38-alpha9") (d (list (d (n "holochain_common") (r "= 0.0.38-alpha9") (d #t) (k 0)) (d (n "holochain_conductor_lib") (r "= 0.0.38-alpha9") (d #t) (k 0)) (d (n "holochain_core_types") (r "= 0.0.38-alpha9") (d #t) (k 0)) (d (n "holochain_locksmith") (r "= 0.0.38-alpha9") (d #t) (k 0)) (d (n "lib3h_sodium") (r "= 0.0.21") (d #t) (k 0)) (d (n "signal-hook") (r "= 0.1.10") (d #t) (t "cfg(unix)") (k 0)) (d (n "structopt") (r "= 0.2.15") (d #t) (k 0)) (d (n "tiny_http") (r "= 0.6.2") (d #t) (k 0)) (d (n "ws") (r "= 0.8.0") (d #t) (k 0)))) (h "04fs95008xwbrmmpy2hwl541w6ipn7zib0cj61mb3rv2xh1nhlcf")))

(define-public crate-holochain-0.0.38-alpha12 (c (n "holochain") (v "0.0.38-alpha12") (d (list (d (n "holochain_common") (r "= 0.0.38-alpha12") (d #t) (k 0)) (d (n "holochain_conductor_lib") (r "= 0.0.38-alpha12") (d #t) (k 0)) (d (n "holochain_core_types") (r "= 0.0.38-alpha12") (d #t) (k 0)) (d (n "holochain_locksmith") (r "= 0.0.38-alpha12") (d #t) (k 0)) (d (n "lib3h_sodium") (r "= 0.0.21") (d #t) (k 0)) (d (n "signal-hook") (r "= 0.1.10") (d #t) (t "cfg(unix)") (k 0)) (d (n "structopt") (r "= 0.2.15") (d #t) (k 0)) (d (n "tiny_http") (r "= 0.6.2") (d #t) (k 0)) (d (n "ws") (r "= 0.8.0") (d #t) (k 0)))) (h "073ly5bp6z1yvnzr4z1s1azar8wf6sbxyahn2n9i0c8ylp5rqg6j")))

(define-public crate-holochain-0.0.38-alpha13 (c (n "holochain") (v "0.0.38-alpha13") (d (list (d (n "holochain_common") (r "= 0.0.38-alpha13") (d #t) (k 0)) (d (n "holochain_conductor_lib") (r "= 0.0.38-alpha13") (d #t) (k 0)) (d (n "holochain_core_types") (r "= 0.0.38-alpha13") (d #t) (k 0)) (d (n "holochain_locksmith") (r "= 0.0.38-alpha13") (d #t) (k 0)) (d (n "lib3h_sodium") (r "= 0.0.21") (d #t) (k 0)) (d (n "signal-hook") (r "= 0.1.10") (d #t) (t "cfg(unix)") (k 0)) (d (n "structopt") (r "= 0.2.15") (d #t) (k 0)) (d (n "tiny_http") (r "= 0.6.2") (d #t) (k 0)) (d (n "ws") (r "= 0.8.0") (d #t) (k 0)))) (h "07in7ys6c6m05ckf8g5c7wmc18w57dch6wvmds0inf1bf24z69yl")))

(define-public crate-holochain-0.0.38-alpha14 (c (n "holochain") (v "0.0.38-alpha14") (d (list (d (n "holochain_common") (r "= 0.0.38-alpha14") (d #t) (k 0)) (d (n "holochain_conductor_lib") (r "= 0.0.38-alpha14") (d #t) (k 0)) (d (n "holochain_core_types") (r "= 0.0.38-alpha14") (d #t) (k 0)) (d (n "holochain_locksmith") (r "= 0.0.38-alpha14") (d #t) (k 0)) (d (n "lib3h_sodium") (r "= 0.0.21") (d #t) (k 0)) (d (n "signal-hook") (r "= 0.1.10") (d #t) (t "cfg(unix)") (k 0)) (d (n "structopt") (r "= 0.2.15") (d #t) (k 0)) (d (n "tiny_http") (r "= 0.6.2") (d #t) (k 0)) (d (n "ws") (r "= 0.8.0") (d #t) (k 0)))) (h "1cgb0sli91r4bwj0pv5bl7m418gv0l93n0cg7dakr71dfr15w51j")))

(define-public crate-holochain-0.0.39-alpha2 (c (n "holochain") (v "0.0.39-alpha2") (d (list (d (n "holochain_common") (r "= 0.0.39-alpha2") (d #t) (k 0)) (d (n "holochain_conductor_lib") (r "= 0.0.39-alpha2") (d #t) (k 0)) (d (n "holochain_core_types") (r "= 0.0.39-alpha2") (d #t) (k 0)) (d (n "holochain_locksmith") (r "= 0.0.39-alpha2") (d #t) (k 0)) (d (n "lib3h_sodium") (r "= 0.0.22") (d #t) (k 0)) (d (n "signal-hook") (r "= 0.1.10") (d #t) (t "cfg(unix)") (k 0)) (d (n "structopt") (r "= 0.2.15") (d #t) (k 0)) (d (n "tiny_http") (r "= 0.6.2") (d #t) (k 0)) (d (n "ws") (r "= 0.8.0") (d #t) (k 0)))) (h "0shrhyf5w1mqp8dv70ppminz6ck6sgsxzw4543zjzznajlli9nfp")))

(define-public crate-holochain-0.0.39-alpha4 (c (n "holochain") (v "0.0.39-alpha4") (d (list (d (n "holochain_common") (r "= 0.0.39-alpha4") (d #t) (k 0)) (d (n "holochain_conductor_lib") (r "= 0.0.39-alpha4") (d #t) (k 0)) (d (n "holochain_core_types") (r "= 0.0.39-alpha4") (d #t) (k 0)) (d (n "holochain_locksmith") (r "= 0.0.39-alpha4") (d #t) (k 0)) (d (n "lib3h_sodium") (r "= 0.0.22") (d #t) (k 0)) (d (n "signal-hook") (r "= 0.1.10") (d #t) (t "cfg(unix)") (k 0)) (d (n "structopt") (r "= 0.2.15") (d #t) (k 0)) (d (n "tiny_http") (r "= 0.6.2") (d #t) (k 0)) (d (n "ws") (r "= 0.8.0") (d #t) (k 0)))) (h "0ri5g24hrgnzplxw8hpj5fcvw8iks0zdx5s616l4ap7y162sjmkm")))

(define-public crate-holochain-0.0.40-alpha1 (c (n "holochain") (v "0.0.40-alpha1") (d (list (d (n "holochain_common") (r "= 0.0.40-alpha1") (d #t) (k 0)) (d (n "holochain_conductor_lib") (r "= 0.0.40-alpha1") (d #t) (k 0)) (d (n "holochain_core_types") (r "= 0.0.40-alpha1") (d #t) (k 0)) (d (n "holochain_locksmith") (r "= 0.0.40-alpha1") (d #t) (k 0)) (d (n "lib3h_sodium") (r "= 0.0.22") (d #t) (k 0)) (d (n "signal-hook") (r "= 0.1.10") (d #t) (t "cfg(unix)") (k 0)) (d (n "structopt") (r "= 0.2.15") (d #t) (k 0)) (d (n "tiny_http") (r "= 0.6.2") (d #t) (k 0)) (d (n "ws") (r "= 0.8.0") (d #t) (k 0)))) (h "0dwpf7njavglwbwzqa2zggwvm04pixxx8ygr92w7ab2jajn7h6am")))

(define-public crate-holochain-0.0.41-alpha4 (c (n "holochain") (v "0.0.41-alpha4") (d (list (d (n "holochain_common") (r "= 0.0.41-alpha4") (d #t) (k 0)) (d (n "holochain_conductor_lib") (r "= 0.0.41-alpha4") (d #t) (k 0)) (d (n "holochain_core_types") (r "= 0.0.41-alpha4") (d #t) (k 0)) (d (n "holochain_locksmith") (r "= 0.0.41-alpha4") (d #t) (k 0)) (d (n "lib3h_sodium") (r "= 0.0.25") (d #t) (k 0)) (d (n "signal-hook") (r "= 0.1.10") (d #t) (t "cfg(unix)") (k 0)) (d (n "structopt") (r "= 0.2.15") (d #t) (k 0)) (d (n "tiny_http") (r "= 0.6.2") (d #t) (k 0)) (d (n "ws") (r "= 0.8.0") (d #t) (k 0)))) (h "1bbld6wrwnjizadhn38ql3jy4k5pmgfsg92wshnq3v56a5m876cs")))

(define-public crate-holochain-0.0.42-alpha1 (c (n "holochain") (v "0.0.42-alpha1") (d (list (d (n "holochain_common") (r "= 0.0.42-alpha1") (d #t) (k 0)) (d (n "holochain_conductor_lib") (r "= 0.0.42-alpha1") (d #t) (k 0)) (d (n "holochain_core_types") (r "= 0.0.42-alpha1") (d #t) (k 0)) (d (n "holochain_locksmith") (r "= 0.0.42-alpha1") (d #t) (k 0)) (d (n "lib3h_sodium") (r "= 0.0.25") (d #t) (k 0)) (d (n "signal-hook") (r "= 0.1.10") (d #t) (t "cfg(unix)") (k 0)) (d (n "structopt") (r "= 0.2.15") (d #t) (k 0)) (d (n "tiny_http") (r "= 0.6.2") (d #t) (k 0)) (d (n "ws") (r "= 0.8.0") (d #t) (k 0)))) (h "0xzzpn08i56k5w0g8r7mn121zk13zb9pzyy9pwy8ghq2r83g3dcw")))

(define-public crate-holochain-0.0.42-alpha2 (c (n "holochain") (v "0.0.42-alpha2") (d (list (d (n "holochain_common") (r "= 0.0.42-alpha2") (d #t) (k 0)) (d (n "holochain_conductor_lib") (r "= 0.0.42-alpha2") (d #t) (k 0)) (d (n "holochain_core_types") (r "= 0.0.42-alpha2") (d #t) (k 0)) (d (n "holochain_locksmith") (r "= 0.0.42-alpha2") (d #t) (k 0)) (d (n "lib3h_sodium") (r "= 0.0.25") (d #t) (k 0)) (d (n "signal-hook") (r "= 0.1.10") (d #t) (t "cfg(unix)") (k 0)) (d (n "structopt") (r "= 0.2.15") (d #t) (k 0)) (d (n "tiny_http") (r "= 0.6.2") (d #t) (k 0)) (d (n "ws") (r "= 0.8.0") (d #t) (k 0)))) (h "1nipwxha1bndpf0rrx67zrn86pjz0ad30jghjsdyhjk5w1k09ppv")))

(define-public crate-holochain-0.0.42-alpha3 (c (n "holochain") (v "0.0.42-alpha3") (d (list (d (n "holochain_common") (r "= 0.0.42-alpha3") (d #t) (k 0)) (d (n "holochain_conductor_lib") (r "= 0.0.42-alpha3") (d #t) (k 0)) (d (n "holochain_core_types") (r "= 0.0.42-alpha3") (d #t) (k 0)) (d (n "holochain_locksmith") (r "= 0.0.42-alpha3") (d #t) (k 0)) (d (n "lib3h_sodium") (r "= 0.0.25") (d #t) (k 0)) (d (n "signal-hook") (r "= 0.1.10") (d #t) (t "cfg(unix)") (k 0)) (d (n "structopt") (r "= 0.2.15") (d #t) (k 0)) (d (n "tiny_http") (r "= 0.6.2") (d #t) (k 0)) (d (n "ws") (r "= 0.8.0") (d #t) (k 0)))) (h "19hxf96nn2s6jcw9kgav85mf0lk697sg0jmlq2qfgjf2n7x92qk7")))

(define-public crate-holochain-0.0.42-alpha4 (c (n "holochain") (v "0.0.42-alpha4") (d (list (d (n "holochain_common") (r "= 0.0.42-alpha4") (d #t) (k 0)) (d (n "holochain_conductor_lib") (r "= 0.0.42-alpha4") (d #t) (k 0)) (d (n "holochain_core_types") (r "= 0.0.42-alpha4") (d #t) (k 0)) (d (n "holochain_locksmith") (r "= 0.0.42-alpha4") (d #t) (k 0)) (d (n "lib3h_sodium") (r "= 0.0.25") (d #t) (k 0)) (d (n "signal-hook") (r "= 0.1.10") (d #t) (t "cfg(unix)") (k 0)) (d (n "structopt") (r "= 0.2.15") (d #t) (k 0)) (d (n "tiny_http") (r "= 0.6.2") (d #t) (k 0)) (d (n "ws") (r "= 0.8.0") (d #t) (k 0)))) (h "0rxlys2dg6ncnql6g1a751zkylkn9bhvb022gwr45iyw8p3pkhif")))

(define-public crate-holochain-0.0.42-alpha5 (c (n "holochain") (v "0.0.42-alpha5") (d (list (d (n "holochain_common") (r "= 0.0.42-alpha5") (d #t) (k 0)) (d (n "holochain_conductor_lib") (r "= 0.0.42-alpha5") (d #t) (k 0)) (d (n "holochain_core_types") (r "= 0.0.42-alpha5") (d #t) (k 0)) (d (n "holochain_locksmith") (r "= 0.0.42-alpha5") (d #t) (k 0)) (d (n "lib3h_sodium") (r "= 0.0.25") (d #t) (k 0)) (d (n "signal-hook") (r "= 0.1.10") (d #t) (t "cfg(unix)") (k 0)) (d (n "structopt") (r "= 0.2.15") (d #t) (k 0)) (d (n "tiny_http") (r "= 0.6.2") (d #t) (k 0)) (d (n "ws") (r "= 0.8.0") (d #t) (k 0)))) (h "1r60sj353kmz6xfci6yvm8i4l0cm4ym0zxda2n6ymqxn4x5csag3")))

(define-public crate-holochain-0.0.43-alpha3 (c (n "holochain") (v "0.0.43-alpha3") (d (list (d (n "holochain_common") (r "= 0.0.43-alpha3") (d #t) (k 0)) (d (n "holochain_conductor_lib") (r "= 0.0.43-alpha3") (d #t) (k 0)) (d (n "holochain_core_types") (r "= 0.0.43-alpha3") (d #t) (k 0)) (d (n "holochain_locksmith") (r "= 0.0.43-alpha3") (d #t) (k 0)) (d (n "holochain_tracing_macros") (r "= 0.0.17") (d #t) (k 0)) (d (n "lazy_static") (r "= 1.4.0") (d #t) (k 0)) (d (n "lib3h_sodium") (r "= 0.0.36") (d #t) (k 0)) (d (n "newrelic") (r "^0.2") (d #t) (k 0)) (d (n "signal-hook") (r "= 0.1.10") (d #t) (t "cfg(unix)") (k 0)) (d (n "structopt") (r "= 0.2.15") (d #t) (k 0)) (d (n "tiny_http") (r "= 0.6.2") (d #t) (k 0)) (d (n "ws") (r "= 0.8.0") (d #t) (k 0)))) (h "0559x1a7yln5dciksmj44fp6dmd8k6ffx8nkwlzcj4g4vn4xw31m")))

(define-public crate-holochain-0.0.44-alpha1 (c (n "holochain") (v "0.0.44-alpha1") (d (list (d (n "crossbeam-channel") (r "= 0.3.8") (d #t) (k 0)) (d (n "holochain_common") (r "= 0.0.44-alpha1") (d #t) (k 0)) (d (n "holochain_conductor_lib") (r "= 0.0.44-alpha1") (d #t) (k 0)) (d (n "holochain_core_types") (r "= 0.0.44-alpha1") (d #t) (k 0)) (d (n "holochain_locksmith") (r "= 0.0.44-alpha1") (d #t) (k 0)) (d (n "holochain_tracing") (r "= 0.0.19") (d #t) (k 0)) (d (n "holochain_tracing_macros") (r "= 0.0.19") (d #t) (k 0)) (d (n "lazy_static") (r "= 1.4.0") (d #t) (k 0)) (d (n "lib3h_sodium") (r "= 0.0.38") (d #t) (k 0)) (d (n "log") (r "= 0.4.8") (d #t) (k 0)) (d (n "newrelic") (r "^0.2") (d #t) (k 0)) (d (n "signal-hook") (r "= 0.1.10") (d #t) (t "cfg(unix)") (k 0)) (d (n "structopt") (r "= 0.2.15") (d #t) (k 0)) (d (n "tiny_http") (r "= 0.6.2") (d #t) (k 0)) (d (n "ws") (r "= 0.8.0") (d #t) (k 0)))) (h "08n7xwl3rck26lmsw6chqlby0mrnyxjggpggyw5hb4v1bqizrprs")))

(define-public crate-holochain-0.0.44-alpha2 (c (n "holochain") (v "0.0.44-alpha2") (d (list (d (n "crossbeam-channel") (r "= 0.3.8") (d #t) (k 0)) (d (n "holochain_common") (r "= 0.0.44-alpha2") (d #t) (k 0)) (d (n "holochain_conductor_lib") (r "= 0.0.44-alpha2") (d #t) (k 0)) (d (n "holochain_core_types") (r "= 0.0.44-alpha2") (d #t) (k 0)) (d (n "holochain_locksmith") (r "= 0.0.44-alpha2") (d #t) (k 0)) (d (n "holochain_tracing") (r "= 0.0.19") (d #t) (k 0)) (d (n "holochain_tracing_macros") (r "= 0.0.19") (d #t) (k 0)) (d (n "lazy_static") (r "= 1.4.0") (d #t) (k 0)) (d (n "lib3h_sodium") (r "= 0.0.38") (d #t) (k 0)) (d (n "log") (r "= 0.4.8") (d #t) (k 0)) (d (n "newrelic") (r "^0.2") (d #t) (k 0)) (d (n "signal-hook") (r "= 0.1.10") (d #t) (t "cfg(unix)") (k 0)) (d (n "structopt") (r "= 0.2.15") (d #t) (k 0)) (d (n "tiny_http") (r "= 0.6.2") (d #t) (k 0)) (d (n "ws") (r "= 0.8.0") (d #t) (k 0)))) (h "1h2ybjzm9qx3r2ppcb7qx7sbxvcs9kmydqflypx2v0l7axbgdckb")))

(define-public crate-holochain-0.0.44-alpha3 (c (n "holochain") (v "0.0.44-alpha3") (d (list (d (n "crossbeam-channel") (r "= 0.3.8") (d #t) (k 0)) (d (n "holochain_common") (r "= 0.0.44-alpha3") (d #t) (k 0)) (d (n "holochain_conductor_lib") (r "= 0.0.44-alpha3") (d #t) (k 0)) (d (n "holochain_core_types") (r "= 0.0.44-alpha3") (d #t) (k 0)) (d (n "holochain_locksmith") (r "= 0.0.44-alpha3") (d #t) (k 0)) (d (n "holochain_tracing") (r "= 0.0.19") (d #t) (k 0)) (d (n "holochain_tracing_macros") (r "= 0.0.19") (d #t) (k 0)) (d (n "lazy_static") (r "= 1.4.0") (d #t) (k 0)) (d (n "lib3h_sodium") (r "= 0.0.38") (d #t) (k 0)) (d (n "log") (r "= 0.4.8") (d #t) (k 0)) (d (n "newrelic") (r "^0.2") (d #t) (k 0)) (d (n "signal-hook") (r "= 0.1.10") (d #t) (t "cfg(unix)") (k 0)) (d (n "structopt") (r "= 0.2.15") (d #t) (k 0)) (d (n "tiny_http") (r "= 0.6.2") (d #t) (k 0)) (d (n "ws") (r "= 0.8.0") (d #t) (k 0)))) (h "07k936rsyl919nc4hfcgfpkjvavndb5p7x9ks18lqvfm0yp77zs2")))

(define-public crate-holochain-0.0.45-alpha1 (c (n "holochain") (v "0.0.45-alpha1") (d (list (d (n "crossbeam-channel") (r "= 0.3.8") (d #t) (k 0)) (d (n "holochain_common") (r "= 0.0.45-alpha1") (d #t) (k 0)) (d (n "holochain_conductor_lib") (r "= 0.0.45-alpha1") (d #t) (k 0)) (d (n "holochain_core_types") (r "= 0.0.45-alpha1") (d #t) (k 0)) (d (n "holochain_locksmith") (r "= 0.0.45-alpha1") (d #t) (k 0)) (d (n "holochain_tracing") (r "= 0.0.24") (d #t) (k 0)) (d (n "holochain_tracing_macros") (r "= 0.0.24") (d #t) (k 0)) (d (n "lazy_static") (r "= 1.4.0") (d #t) (k 0)) (d (n "lib3h_sodium") (r "= 0.0.42") (d #t) (k 0)) (d (n "log") (r "= 0.4.8") (d #t) (k 0)) (d (n "newrelic") (r "= 0.2.2") (o #t) (d #t) (k 0)) (d (n "signal-hook") (r "= 0.1.10") (d #t) (t "cfg(unix)") (k 0)) (d (n "structopt") (r "= 0.2.15") (d #t) (k 0)) (d (n "tiny_http") (r "= 0.6.2") (d #t) (k 0)) (d (n "ws") (r "= 0.8.0") (d #t) (k 0)))) (h "009q1bjmkcp4a6i7r6ky7vp8y895ag6kh7lym5qmnvksjnvjz232") (f (quote (("newrelic-on" "newrelic") ("default"))))))

(define-public crate-holochain-0.0.46-alpha1 (c (n "holochain") (v "0.0.46-alpha1") (d (list (d (n "crossbeam-channel") (r "= 0.3.8") (d #t) (k 0)) (d (n "holochain_common") (r "= 0.0.46-alpha1") (d #t) (k 0)) (d (n "holochain_conductor_lib") (r "= 0.0.46-alpha1") (d #t) (k 0)) (d (n "holochain_core_types") (r "= 0.0.46-alpha1") (d #t) (k 0)) (d (n "holochain_locksmith") (r "= 0.0.46-alpha1") (d #t) (k 0)) (d (n "holochain_tracing") (r "= 0.0.24") (d #t) (k 0)) (d (n "holochain_tracing_macros") (r "= 0.0.24") (d #t) (k 0)) (d (n "lazy_static") (r "= 1.4.0") (d #t) (k 0)) (d (n "lib3h_sodium") (r "= 0.0.42") (d #t) (k 0)) (d (n "log") (r "= 0.4.8") (d #t) (k 0)) (d (n "newrelic") (r "= 0.2.2") (o #t) (d #t) (k 0)) (d (n "signal-hook") (r "= 0.1.10") (d #t) (t "cfg(unix)") (k 0)) (d (n "structopt") (r "= 0.2.15") (d #t) (k 0)) (d (n "tiny_http") (r "= 0.6.2") (d #t) (k 0)) (d (n "ws") (r "= 0.8.0") (d #t) (k 0)))) (h "1kr9j2ks470rjylfini2cy8r9w2061zp1bw3hxl94wzd3b9s5513") (f (quote (("newrelic-on" "newrelic") ("default"))))))

(define-public crate-holochain-0.0.47-alpha1 (c (n "holochain") (v "0.0.47-alpha1") (d (list (d (n "crossbeam-channel") (r "= 0.3.8") (d #t) (k 0)) (d (n "holochain_common") (r "= 0.0.47-alpha1") (d #t) (k 0)) (d (n "holochain_conductor_lib") (r "= 0.0.47-alpha1") (d #t) (k 0)) (d (n "holochain_core_types") (r "= 0.0.47-alpha1") (d #t) (k 0)) (d (n "holochain_locksmith") (r "= 0.0.47-alpha1") (d #t) (k 0)) (d (n "holochain_tracing") (r "= 0.0.24") (d #t) (k 0)) (d (n "holochain_tracing_macros") (r "= 0.0.24") (d #t) (k 0)) (d (n "lazy_static") (r "= 1.4.0") (d #t) (k 0)) (d (n "lib3h_sodium") (r "= 0.0.42") (d #t) (k 0)) (d (n "log") (r "= 0.4.8") (d #t) (k 0)) (d (n "newrelic") (r "= 0.2.2") (o #t) (d #t) (k 0)) (d (n "signal-hook") (r "= 0.1.10") (d #t) (t "cfg(unix)") (k 0)) (d (n "structopt") (r "= 0.2.15") (d #t) (k 0)) (d (n "tiny_http") (r "= 0.6.2") (d #t) (k 0)) (d (n "ws") (r "= 0.8.0") (d #t) (k 0)))) (h "1sq5ab25nslfkyjmr4rxaxa34zdjz0q9w5j9f66w0gn5a3acchj9") (f (quote (("newrelic-on" "newrelic") ("default"))))))

(define-public crate-holochain-0.0.48-alpha1 (c (n "holochain") (v "0.0.48-alpha1") (d (list (d (n "crossbeam-channel") (r "= 0.3.8") (d #t) (k 0)) (d (n "holochain_common") (r "= 0.0.48-alpha1") (d #t) (k 0)) (d (n "holochain_conductor_lib") (r "= 0.0.48-alpha1") (d #t) (k 0)) (d (n "holochain_core_types") (r "= 0.0.48-alpha1") (d #t) (k 0)) (d (n "holochain_locksmith") (r "= 0.0.48-alpha1") (d #t) (k 0)) (d (n "holochain_tracing") (r "= 0.0.24") (d #t) (k 0)) (d (n "holochain_tracing_macros") (r "= 0.0.24") (d #t) (k 0)) (d (n "lazy_static") (r "= 1.4.0") (d #t) (k 0)) (d (n "lib3h_sodium") (r "= 0.0.42") (d #t) (k 0)) (d (n "log") (r "= 0.4.8") (d #t) (k 0)) (d (n "newrelic") (r "= 0.2.2") (o #t) (d #t) (k 0)) (d (n "signal-hook") (r "= 0.1.10") (d #t) (t "cfg(unix)") (k 0)) (d (n "structopt") (r "= 0.2.15") (d #t) (k 0)) (d (n "tiny_http") (r "= 0.6.2") (d #t) (k 0)) (d (n "ws") (r "= 0.8.0") (d #t) (k 0)))) (h "19zqmbd43iy40lllx8vv4mjfbx9ja33d2zbwfagq8pkprf036zn7") (f (quote (("newrelic-on" "newrelic") ("default"))))))

(define-public crate-holochain-0.0.49-alpha1 (c (n "holochain") (v "0.0.49-alpha1") (d (list (d (n "crossbeam-channel") (r "=0.3.8") (d #t) (k 0)) (d (n "holochain_common") (r "=0.0.49-alpha1") (d #t) (k 0)) (d (n "holochain_conductor_lib") (r "=0.0.49-alpha1") (d #t) (k 0)) (d (n "holochain_core_types") (r "=0.0.49-alpha1") (d #t) (k 0)) (d (n "holochain_locksmith") (r "=0.0.49-alpha1") (d #t) (k 0)) (d (n "holochain_tracing") (r "=0.0.24") (d #t) (k 0)) (d (n "holochain_tracing_macros") (r "=0.0.24") (d #t) (k 0)) (d (n "lazy_static") (r "=1.4.0") (d #t) (k 0)) (d (n "lib3h_sodium") (r "=0.0.42") (d #t) (k 0)) (d (n "log") (r "=0.4.8") (d #t) (k 0)) (d (n "newrelic") (r "=0.2.2") (o #t) (d #t) (k 0)) (d (n "signal-hook") (r "=0.1.10") (d #t) (t "cfg(unix)") (k 0)) (d (n "structopt") (r "=0.2.15") (d #t) (k 0)) (d (n "tiny_http") (r "=0.6.2") (d #t) (k 0)) (d (n "ws") (r "=0.8.0") (d #t) (k 0)))) (h "0dv86imfvp8yip2f95scbzf9zfbk6fxil2d3qhbpdqq4kliyrpis") (f (quote (("newrelic-on" "newrelic") ("default"))))))

(define-public crate-holochain-0.0.50-alpha4 (c (n "holochain") (v "0.0.50-alpha4") (d (list (d (n "crossbeam-channel") (r "=0.3.8") (d #t) (k 0)) (d (n "holochain_common") (r "=0.0.50-alpha4") (d #t) (k 0)) (d (n "holochain_conductor_lib") (r "=0.0.50-alpha4") (d #t) (k 0)) (d (n "holochain_core") (r "=0.0.50-alpha4") (d #t) (k 0)) (d (n "holochain_core_types") (r "=0.0.50-alpha4") (d #t) (k 0)) (d (n "holochain_locksmith") (r "=0.0.50-alpha4") (d #t) (k 0)) (d (n "holochain_persistence_api") (r "=0.0.18") (d #t) (k 0)) (d (n "holochain_tracing") (r "=0.0.24") (d #t) (k 0)) (d (n "holochain_tracing_macros") (r "=0.0.24") (d #t) (k 0)) (d (n "holochain_wasm_utils") (r "=0.0.50-alpha4") (d #t) (k 0)) (d (n "im") (r "=14.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lazy_static") (r "=1.4.0") (d #t) (k 0)) (d (n "lib3h_protocol") (r "=0.0.42") (d #t) (k 0)) (d (n "lib3h_sodium") (r "=0.0.42") (d #t) (k 0)) (d (n "log") (r "=0.4.8") (d #t) (k 0)) (d (n "newrelic") (r "=0.2.2") (o #t) (d #t) (k 0)) (d (n "protobuf") (r "=2.14.0") (d #t) (k 0)) (d (n "serde_json") (r "=1.0.47") (d #t) (k 0)) (d (n "shrust") (r "^0.0.7") (d #t) (k 0)) (d (n "signal-hook") (r "=0.1.10") (d #t) (t "cfg(unix)") (k 0)) (d (n "structopt") (r "=0.2.18") (d #t) (k 0)) (d (n "structopt-derive") (r "=0.2.18") (d #t) (k 0)) (d (n "tiny_http") (r "=0.6.2") (d #t) (k 0)) (d (n "ws") (r "=0.8.0") (d #t) (k 0)))) (h "1cq6lcpgp5i2sqcqq2hg88wfrahm3xcpsl0nzpz7nm422a14z99v") (f (quote (("newrelic-on" "newrelic") ("default"))))))

(define-public crate-holochain-0.0.51-alpha1 (c (n "holochain") (v "0.0.51-alpha1") (d (list (d (n "crossbeam-channel") (r "=0.3.8") (d #t) (k 0)) (d (n "holochain_common") (r "=0.0.51-alpha1") (d #t) (k 0)) (d (n "holochain_conductor_lib") (r "=0.0.51-alpha1") (d #t) (k 0)) (d (n "holochain_core") (r "=0.0.51-alpha1") (d #t) (k 0)) (d (n "holochain_core_types") (r "=0.0.51-alpha1") (d #t) (k 0)) (d (n "holochain_locksmith") (r "=0.0.51-alpha1") (d #t) (k 0)) (d (n "holochain_persistence_api") (r "=0.0.18") (d #t) (k 0)) (d (n "holochain_tracing") (r "=0.0.24") (d #t) (k 0)) (d (n "holochain_tracing_macros") (r "=0.0.24") (d #t) (k 0)) (d (n "holochain_wasm_utils") (r "=0.0.51-alpha1") (d #t) (k 0)) (d (n "im") (r "=14.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lazy_static") (r "=1.4.0") (d #t) (k 0)) (d (n "lib3h_protocol") (r "=0.0.42") (d #t) (k 0)) (d (n "lib3h_sodium") (r "=0.0.42") (d #t) (k 0)) (d (n "log") (r "=0.4.8") (d #t) (k 0)) (d (n "newrelic") (r "=0.2.2") (o #t) (d #t) (k 0)) (d (n "protobuf") (r "=2.14.0") (d #t) (k 0)) (d (n "serde_json") (r "=1.0.47") (d #t) (k 0)) (d (n "shrust") (r "^0.0.7") (d #t) (k 0)) (d (n "signal-hook") (r "=0.1.10") (d #t) (t "cfg(unix)") (k 0)) (d (n "structopt") (r "=0.2.18") (d #t) (k 0)) (d (n "structopt-derive") (r "=0.2.18") (d #t) (k 0)) (d (n "tiny_http") (r "=0.6.2") (d #t) (k 0)) (d (n "ws") (r "=0.8.0") (d #t) (k 0)))) (h "10n4dwmky33msmn02dlq2x7wgg5wlwqshj11xq71q5f7xdcayx89") (f (quote (("newrelic-on" "newrelic") ("default"))))))

(define-public crate-holochain-0.0.52-alpha1 (c (n "holochain") (v "0.0.52-alpha1") (d (list (d (n "crossbeam-channel") (r "=0.3.8") (d #t) (k 0)) (d (n "holochain_common") (r "=0.0.52-alpha1") (d #t) (k 0)) (d (n "holochain_conductor_lib") (r "=0.0.52-alpha1") (d #t) (k 0)) (d (n "holochain_core") (r "=0.0.52-alpha1") (d #t) (k 0)) (d (n "holochain_core_types") (r "=0.0.52-alpha1") (d #t) (k 0)) (d (n "holochain_locksmith") (r "=0.0.52-alpha1") (d #t) (k 0)) (d (n "holochain_persistence_api") (r "=0.0.18") (d #t) (k 0)) (d (n "holochain_tracing") (r "=0.0.24") (d #t) (k 0)) (d (n "holochain_tracing_macros") (r "=0.0.24") (d #t) (k 0)) (d (n "holochain_wasm_utils") (r "=0.0.52-alpha1") (d #t) (k 0)) (d (n "im") (r "=14.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lazy_static") (r "=1.4.0") (d #t) (k 0)) (d (n "lib3h_protocol") (r "=0.0.42") (d #t) (k 0)) (d (n "lib3h_sodium") (r "=0.0.42") (d #t) (k 0)) (d (n "log") (r "=0.4.8") (d #t) (k 0)) (d (n "newrelic") (r "=0.2.2") (o #t) (d #t) (k 0)) (d (n "protobuf") (r "=2.14.0") (d #t) (k 0)) (d (n "serde_json") (r "=1.0.47") (d #t) (k 0)) (d (n "shrust") (r "^0.0.7") (d #t) (k 0)) (d (n "signal-hook") (r "=0.1.10") (d #t) (t "cfg(unix)") (k 0)) (d (n "structopt") (r "=0.2.18") (d #t) (k 0)) (d (n "structopt-derive") (r "=0.2.18") (d #t) (k 0)) (d (n "tiny_http") (r "=0.6.2") (d #t) (k 0)) (d (n "ws") (r "=0.8.0") (d #t) (k 0)))) (h "03yjljfvzzb30d2nws0kpd28kycr3x7ps8faj9y0n15qac73i9w4") (f (quote (("newrelic-on" "newrelic") ("default"))))))

(define-public crate-holochain-0.0.52-alpha2 (c (n "holochain") (v "0.0.52-alpha2") (d (list (d (n "crossbeam-channel") (r "=0.3.8") (d #t) (k 0)) (d (n "holochain_common") (r "=0.0.52-alpha2") (d #t) (k 0)) (d (n "holochain_conductor_lib") (r "=0.0.52-alpha2") (d #t) (k 0)) (d (n "holochain_core") (r "=0.0.52-alpha2") (d #t) (k 0)) (d (n "holochain_core_types") (r "=0.0.52-alpha2") (d #t) (k 0)) (d (n "holochain_locksmith") (r "=0.0.52-alpha2") (d #t) (k 0)) (d (n "holochain_persistence_api") (r "=0.0.18") (d #t) (k 0)) (d (n "holochain_tracing") (r "=0.0.24") (d #t) (k 0)) (d (n "holochain_tracing_macros") (r "=0.0.24") (d #t) (k 0)) (d (n "holochain_wasm_utils") (r "=0.0.52-alpha2") (d #t) (k 0)) (d (n "im") (r "=14.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lazy_static") (r "=1.4.0") (d #t) (k 0)) (d (n "lib3h_protocol") (r "=0.0.42") (d #t) (k 0)) (d (n "lib3h_sodium") (r "=0.0.42") (d #t) (k 0)) (d (n "log") (r "=0.4.8") (d #t) (k 0)) (d (n "newrelic") (r "=0.2.2") (o #t) (d #t) (k 0)) (d (n "protobuf") (r "=2.14.0") (d #t) (k 0)) (d (n "serde_json") (r "=1.0.47") (d #t) (k 0)) (d (n "shrust") (r "^0.0.7") (d #t) (k 0)) (d (n "signal-hook") (r "=0.1.10") (d #t) (t "cfg(unix)") (k 0)) (d (n "structopt") (r "=0.2.18") (d #t) (k 0)) (d (n "structopt-derive") (r "=0.2.18") (d #t) (k 0)) (d (n "tiny_http") (r "=0.6.2") (d #t) (k 0)) (d (n "ws") (r "=0.8.0") (d #t) (k 0)))) (h "1aqcr4px8vjrzmg682f481p8mc41zsd8zb8lgf8smqx4i1n6819y") (f (quote (("newrelic-on" "newrelic") ("default"))))))

(define-public crate-holochain-0.0.101 (c (n "holochain") (v "0.0.101") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.1") (d #t) (k 0)) (d (n "hdk") (r "^0.0.101") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.101") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.3") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.1") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.1") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.1") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.1") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.50") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.1") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.1") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.1") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.1") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.1") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.1") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.1") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "^0.0.71") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.1") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.3") (d #t) (k 0)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.1") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.8") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.1") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "rusqlite") (r "^0.25") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "test-case") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "tracing") (r "=0.1.21") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.4") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xsalsa20poly1305") (r "^0.6.0") (d #t) (k 0)))) (h "0nh88xpm0392jyq2vm4k9y8i5kkpchk4ichq16crsbbck7kx2xpl") (f (quote (("test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "itertools" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.102 (c (n "holochain") (v "0.0.102") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.1") (d #t) (k 0)) (d (n "hdk") (r "^0.0.102") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.102") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.4") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.2") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.2") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.2") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.2") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.2") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.2") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.2") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.2") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.2") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.2") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.2") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.73") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.2") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.4") (d #t) (k 0)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.2") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.8") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.2") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "rusqlite") (r "^0.25") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "test-case") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "tracing") (r "=0.1.21") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.4") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xsalsa20poly1305") (r "^0.6.0") (d #t) (k 0)))) (h "1gpn9jqmp9r7zjh0yhq6ykdr7ysfcs4m0w8klhblzb6pi8a16vw2") (f (quote (("test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "itertools" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.103 (c (n "holochain") (v "0.0.103") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.5") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.3") (d #t) (k 0)) (d (n "hdk") (r "^0.0.103") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.103") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.5") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.3") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.3") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.3") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.3") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.3") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.3") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.3") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.3") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.3") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.3") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.73") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.3") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.5") (d #t) (k 0)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.3") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.3") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "rusqlite") (r "^0.25") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.1-alpha.10") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "test-case") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xsalsa20poly1305") (r "^0.6.0") (d #t) (k 0)))) (h "0n4liamimm83xslhy6jzsa9wgynpskklskzib0v2m1hw5dxmg3yl") (f (quote (("test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "itertools" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.104 (c (n "holochain") (v "0.0.104") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.5") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.3") (d #t) (k 0)) (d (n "hdk") (r "^0.0.104") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.104") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.5") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.4") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.4") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.4") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.4") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.4") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.4") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.4") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.4") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.4") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.3") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.4") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.73") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.4") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.6") (d #t) (k 0)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.4") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.3") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "rusqlite") (r "^0.25") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.1-alpha.10") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "test-case") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xsalsa20poly1305") (r "^0.6.0") (d #t) (k 0)))) (h "0gkmq30z27l69mml19s6xigj3kbsksbnx6l1dfz070ps4cip1lqr") (f (quote (("test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "itertools" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.106 (c (n "holochain") (v "0.0.106") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.5") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.106") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.106") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.6") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.6") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.6") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.6") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.6") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.6") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.6") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.6") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.6") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.6") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.3") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.6") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.73") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.6") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.8") (f (quote ("full"))) (d #t) (k 0)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.6") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.3") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "rusqlite") (r "^0.25") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.1-alpha.10") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "test-case") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xsalsa20poly1305") (r "^0.6.0") (d #t) (k 0)))) (h "11dfnfpnlfhbqv9yrzn0vchax14b20cw6a8rvk9jm2r492yq1c4f") (f (quote (("test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "itertools" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.107 (c (n "holochain") (v "0.0.107") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.107") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.107") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.7") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.7") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.7") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.7") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.7") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.7") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.7") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.7") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.7") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.4") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.7") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.73") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.7") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.9") (f (quote ("full"))) (d #t) (k 0)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.7") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.4") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "rusqlite") (r "^0.25") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.1-alpha.10") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "test-case") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xsalsa20poly1305") (r "^0.6.0") (d #t) (k 0)))) (h "03iza3s85hrrjjv5c88jfyharmd3f9jdk9npmb4d34z66dvqbwcl") (f (quote (("test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "itertools" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.108 (c (n "holochain") (v "0.0.108") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.108") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.108") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.8") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.8") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.8") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.8") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.8") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.8") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.8") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.8") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.8") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.4") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.8") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.73") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.8") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.10") (f (quote ("full"))) (d #t) (k 0)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.8") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.4") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "rusqlite") (r "^0.25") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.1-alpha.10") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "test-case") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xsalsa20poly1305") (r "^0.6.0") (d #t) (k 0)))) (h "1w5wixw3aq4frig1y0l95fifxm8b21dnjvx6gm556jh0h7rxy0mx") (f (quote (("test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "itertools" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.109 (c (n "holochain") (v "0.0.109") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.109") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.109") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.8") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.9") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.9") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.9") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.9") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.9") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.9") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.9") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.9") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.9") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.4") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.9") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.73") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.9") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.9") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.4") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.1-alpha.21") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "test-case") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xsalsa20poly1305") (r "^0.6.0") (d #t) (k 0)))) (h "1aqjv63pksmzwxbzzdm8d0xnadg63rlq8f59k22igvbjs7pnvzna") (f (quote (("test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "itertools" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.110 (c (n "holochain") (v "0.0.110") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.110") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.110") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.9") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.10") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.10") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.4") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.73") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.10") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.4") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.1-alpha.21") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "test-case") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xsalsa20poly1305") (r "^0.6.0") (d #t) (k 0)))) (h "0h6iczpdk0ypszpi6419is2y1npd3di2p0z4fd80367ld1z7vg6b") (f (quote (("test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "itertools" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.111 (c (n "holochain") (v "0.0.111") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.111") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.111") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.10") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.11") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.11") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.11") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.11") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.11") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.11") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.11") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.11") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.11") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.4") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.11") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.73") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.11") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.11") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.4") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.1-alpha.21") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "test-case") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xsalsa20poly1305") (r "^0.6.0") (d #t) (k 0)))) (h "1pxd918mfnd4ajmn96ar4647wnf8gp9y479p1zm7s1nb2hjv75sf") (f (quote (("test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "itertools" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.112 (c (n "holochain") (v "0.0.112") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.112") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.112") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.10") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.12") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.12") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.12") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.12") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.12") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.12") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.12") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.12") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.12") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.4") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.12") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.73") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.12") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.11") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.4") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.1-alpha.21") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "test-case") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xsalsa20poly1305") (r "^0.6.0") (d #t) (k 0)))) (h "1rgkynvpih1jxcvxgrwb2d4qgbvj6vgwn1k8mscrhsa45i2jmsvz") (f (quote (("test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.113 (c (n "holochain") (v "0.0.113") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.113") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.113") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.13") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.13") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.13") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.13") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.13") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.13") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.13") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.13") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.13") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.4") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.13") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.73") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.13") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.15") (f (quote ("full"))) (d #t) (k 0)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.11") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.4") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.1-alpha.21") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "test-case") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xsalsa20poly1305") (r "^0.6.0") (d #t) (k 0)))) (h "1yqqsdgm8rk1hll9fln67ba3i4x2w5bvkgcs8jv15a4d0mr76q51") (f (quote (("test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.114 (c (n "holochain") (v "0.0.114") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.114") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.114") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.14") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.14") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.14") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.14") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.14") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.14") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.14") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.14") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.14") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.4") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.14") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.73") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.14") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.16") (f (quote ("full"))) (d #t) (k 0)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.12") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.11") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.4") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.1-alpha.21") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "test-case") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xsalsa20poly1305") (r "^0.6.0") (d #t) (k 0)))) (h "0y0n0msggxqnfljcikcnmwsi8avd220vv9afb20qpzdqa73afn5m") (f (quote (("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.115 (c (n "holochain") (v "0.0.115") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.115") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.115") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.15") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.15") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.15") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.15") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.15") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.15") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.15") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.15") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.15") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.4") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.15") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.73") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.15") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.17") (f (quote ("full"))) (d #t) (k 0)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.13") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.4") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "test-case") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xsalsa20poly1305") (r "^0.6.0") (d #t) (k 0)))) (h "1mpckxcacmhnd0l3ra6an5qvqxlhiwlq98mx8ks2j39qnm16ggx4") (f (quote (("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.116 (c (n "holochain") (v "0.0.116") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.115") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.115") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.16") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.16") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.16") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.16") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.16") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.16") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.15") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.16") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.5") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.16") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.73") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.16") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.17") (f (quote ("full"))) (d #t) (k 0)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.14") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.13") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.5") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "test-case") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xsalsa20poly1305") (r "^0.6.0") (d #t) (k 0)))) (h "0clagrqnmvjxxp4r5ni03dik3zbk8lkhnmm8dywyy871zmg4d8hl") (f (quote (("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.117 (c (n "holochain") (v "0.0.117") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.115") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.115") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.17") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.17") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.17") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.17") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.17") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.17") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.15") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.15") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.17") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.6") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.17") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.73") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.17") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.17") (f (quote ("full"))) (d #t) (k 0)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.15") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.14") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.6") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "test-case") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xsalsa20poly1305") (r "^0.6.0") (d #t) (k 0)))) (h "1s16pg9glzd1drqyav97jnhg96zshaszg0jryk2h7sw785g3vr2y") (f (quote (("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.118 (c (n "holochain") (v "0.0.118") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.115") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.115") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.18") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.18") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.18") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.18") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.18") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.18") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.15") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.15") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.18") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.6") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.18") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.73") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.18") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.17") (f (quote ("full"))) (d #t) (k 0)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.16") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.14") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.6") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "test-case") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xsalsa20poly1305") (r "^0.6.0") (d #t) (k 0)))) (h "0gx8xjbl4y3a0p1g679qd1zls7p4ljv0wi66h2jb6bglwq48101v") (f (quote (("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.119 (c (n "holochain") (v "0.0.119") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.8") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.116") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.116") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.19") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.19") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.19") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.19") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.19") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.19") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.16") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.16") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.19") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.6") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.19") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.73") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.19") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.18") (f (quote ("full"))) (d #t) (k 0)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.17") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.15") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.6") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "test-case") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xsalsa20poly1305") (r "^0.6.0") (d #t) (k 0)))) (h "0zl7bhx970par5dn6myih047h4x3fz52jkfjwlg9fdzqylax4jbi") (f (quote (("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.120 (c (n "holochain") (v "0.0.120") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.8") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.116") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.116") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.20") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.20") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.20") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.20") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.20") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.20") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.16") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.16") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.20") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.6") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.20") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.73") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.20") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.18") (f (quote ("full"))) (d #t) (k 0)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.18") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.15") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.6") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "test-case") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xsalsa20poly1305") (r "^0.6.0") (d #t) (k 0)))) (h "105ngfndkmqn3gmkfb5aillyzmrzv73r8d0gr53hdfxlcrpm05cz") (f (quote (("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.121 (c (n "holochain") (v "0.0.121") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.8") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.117") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.117") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.21") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.21") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.21") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.21") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.21") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.21") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.17") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.17") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.21") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.6") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.21") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.73") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.21") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.19") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.18") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.15") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.6") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "test-case") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xsalsa20poly1305") (r "^0.6.0") (d #t) (k 0)))) (h "169dibprh28r4v3fyvlnj8c78i8hcqsh7y1bd96f2g2frbydqz88") (f (quote (("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.122 (c (n "holochain") (v "0.0.122") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.8") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.118") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.118") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.15") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.22") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.22") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.22") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.22") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.22") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.22") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.18") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.18") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.22") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.6") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.22") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.73") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.22") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.20") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.19") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.15") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.6") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "test-case") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xsalsa20poly1305") (r "^0.6.0") (d #t) (k 0)))) (h "0c1v26msla79n1p780qdkzzp045rb8921m399hdn0agghx0mizj1") (f (quote (("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.123 (c (n "holochain") (v "0.0.123") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.8") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.119") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.119") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.16") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.23") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.23") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.23") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.23") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.23") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.23") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.19") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.19") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.23") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.6") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.23") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.73") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.23") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.21") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.20") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.15") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.6") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "test-case") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xsalsa20poly1305") (r "^0.6.0") (d #t) (k 0)))) (h "1jgh39kq9vk7sff9hdh724iz1vyfxcqrlbb6lcpflh7c2q2ghvlz") (f (quote (("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.124 (c (n "holochain") (v "0.0.124") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.8") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.120") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.120") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.17") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.24") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.24") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.24") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.24") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.24") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.24") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.20") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.20") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.24") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.6") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.24") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.76") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.24") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.22") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.21") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.15") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.6") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "test-case") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xsalsa20poly1305") (r "^0.6.0") (d #t) (k 0)))) (h "0w1cvn2rplx5x4v868jb5l48rj212bq6yrdcnshcbnwgdrbyhi2q") (f (quote (("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.125 (c (n "holochain") (v "0.0.125") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.8") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.121") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.121") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.18") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.25") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.25") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.25") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.25") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.25") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.25") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.21") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.21") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.25") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.6") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.25") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.76") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.25") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.23") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.22") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.0.1") (d #t) (k 2)) (d (n "kitsune_p2p_types") (r "^0.0.16") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.6") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "test-case") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xsalsa20poly1305") (r "^0.6.0") (d #t) (k 0)))) (h "0w7iy5l6maaxxnpafcprjqnsl9yqkl9dr93760q81vcpr89xm7m5") (f (quote (("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.126 (c (n "holochain") (v "0.0.126") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.8") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.122") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.122") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.19") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.26") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.26") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.26") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.26") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.26") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.26") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.22") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.22") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.26") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.7") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.26") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.77") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.26") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.24") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.23") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.0.2") (d #t) (k 2)) (d (n "kitsune_p2p_types") (r "^0.0.17") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.7") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xsalsa20poly1305") (r "^0.6.0") (d #t) (k 0)))) (h "1csinw9bqpsir3n6px9frbg9b8nhkr4gmsvxnbxy2lszr27c49z6") (f (quote (("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.127 (c (n "holochain") (v "0.0.127") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.8") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.123") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.123") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.20") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.27") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.27") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.27") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.27") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.27") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.27") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.23") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.23") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.27") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.7") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.27") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.77") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.27") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.25") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.24") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.0.3") (d #t) (k 2)) (d (n "kitsune_p2p_types") (r "^0.0.18") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.7") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xsalsa20poly1305") (r "^0.6.0") (d #t) (k 0)))) (h "0j2asvgpy6cxvjarhczknh19avz1csaiv9qjc2jjw8hcnwf4h76g") (f (quote (("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.128 (c (n "holochain") (v "0.0.128") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.9") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.124") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.124") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.21") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.28") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.28") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.28") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.28") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.28") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.28") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.24") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.24") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.28") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.8") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.28") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.77") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.28") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.26") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.25") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.0.4") (d #t) (k 2)) (d (n "kitsune_p2p_types") (r "^0.0.19") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.8") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xsalsa20poly1305") (r "^0.6.0") (d #t) (k 0)))) (h "0za3bvad15428g9nng9cvz9ryw23nav6mf22q6qpi2p1w8kfi34f") (f (quote (("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.129 (c (n "holochain") (v "0.0.129") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.9") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.124") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.124") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.21") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.29") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.29") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.29") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.29") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.29") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.29") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.24") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.24") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.29") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.8") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.29") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.77") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.29") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.26") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.26") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.0.5") (d #t) (k 2)) (d (n "kitsune_p2p_types") (r "^0.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.8") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xsalsa20poly1305") (r "^0.6.0") (d #t) (k 0)))) (h "1z7jbv1avvw13ahqvry257pnda52w7bjz9qld5jlp4335asqidqb") (f (quote (("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.130 (c (n "holochain") (v "0.0.130") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.9") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.125") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.125") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.21") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.30") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.30") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.30") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.30") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.30") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.30") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.25") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.25") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.30") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.8") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.30") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.77") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.30") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.26") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.0.5") (d #t) (k 2)) (d (n "kitsune_p2p_types") (r "^0.0.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.8") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xsalsa20poly1305") (r "^0.6.0") (d #t) (k 0)))) (h "14wjg1061gwcmj1wnjg8znk7fljnkpb16zyhjxp024sgcjb6vj2a") (f (quote (("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.131 (c (n "holochain") (v "0.0.131") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.9") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.126") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.126") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.21") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.31") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.31") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.31") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.31") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.31") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.31") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.26") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.26") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.31") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.9") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.31") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.77") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.31") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.27") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.0.6") (d #t) (k 2)) (d (n "kitsune_p2p_types") (r "^0.0.21") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.9") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xsalsa20poly1305") (r "^0.6.0") (d #t) (k 0)))) (h "1hzrr87h3gd59xvqf6m43ijhd6rr7aravpkzs90h6k7ld99z4c6p") (f (quote (("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.132 (c (n "holochain") (v "0.0.132") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.127") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.127") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.22") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.32") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.32") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.32") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.32") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.32") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.32") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.27") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.27") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.32") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.9") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.32") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.77") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.32") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.28") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.28") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.0.7") (d #t) (k 2)) (d (n "kitsune_p2p_types") (r "^0.0.22") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.9") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xsalsa20poly1305") (r "^0.6.0") (d #t) (k 0)))) (h "0zaiczbngmi9rpc4qq96ljgryvy9l982wi55r1ri74mkw8nl5h34") (f (quote (("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.135 (c (n "holochain") (v "0.0.135") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.129") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.129") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.23") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.35") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.35") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.34") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.34") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.34") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.35") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.30") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.30") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.34") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.9") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.34") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.77") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.34") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.30") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.30") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.0.9") (d #t) (k 2)) (d (n "kitsune_p2p_types") (r "^0.0.22") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.10") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xsalsa20poly1305") (r "^0.6.0") (d #t) (k 0)))) (h "1bdkyrx5y8fjgm1933gj1y0x79l3i8a1lyrkbn44aj6s9ay7afs7") (f (quote (("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.136 (c (n "holochain") (v "0.0.136") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.130") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.130") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.23") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.36") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.36") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.35") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.35") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.35") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.36") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.31") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.31") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.35") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.9") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.35") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.77") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.35") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.31") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.30") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.0.9") (d #t) (k 2)) (d (n "kitsune_p2p_types") (r "^0.0.22") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.10") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xsalsa20poly1305") (r "^0.6.0") (d #t) (k 0)))) (h "0qzgz2j712mlglcclsj0xx44kj0mgk4yakar5zf0nh5grx46zzf7") (f (quote (("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.137 (c (n "holochain") (v "0.0.137") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.11") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.131") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.131") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.24") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.37") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.37") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.36") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.36") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.36") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.37") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.32") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.32") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.36") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.36") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.77") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.36") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.32") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.31") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.0.10") (d #t) (k 2)) (d (n "kitsune_p2p_types") (r "^0.0.23") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.11") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xsalsa20poly1305") (r "^0.6.0") (d #t) (k 0)))) (h "1dagdi80bwj60xw2r7d0qmhwlvz6splq0djih3qq8jg9zky54n4i") (f (quote (("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.138 (c (n "holochain") (v "0.0.138") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.11") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.131") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.131") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.24") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.38") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.38") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.36") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.36") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.36") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.38") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.32") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.32") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.36") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.37") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.77") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.36") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.32") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.31") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.0.10") (d #t) (k 2)) (d (n "kitsune_p2p_types") (r "^0.0.23") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.11") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xsalsa20poly1305") (r "^0.6.0") (d #t) (k 0)))) (h "1z2m81m9j5ix5qlwjjl2rax98gyvc47nyw0qf6dmi6fnkq92kmmj") (f (quote (("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.139 (c (n "holochain") (v "0.0.139") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.11") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.132") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.132") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.25") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.39") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.39") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.37") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.37") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.37") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.39") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.33") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.33") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.37") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.38") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.77") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.37") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.33") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.32") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.0.11") (d #t) (k 2)) (d (n "kitsune_p2p_types") (r "^0.0.24") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.11") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xsalsa20poly1305") (r "^0.6.0") (d #t) (k 0)))) (h "1sw69v7bihm8n3ylvdfifix4nsp36d0h4988c0j5c44j91kwdzya") (f (quote (("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.140 (c (n "holochain") (v "0.0.140") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.11") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.133") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.133") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.25") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.40") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.40") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.38") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.38") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.38") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.40") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.34") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.34") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.38") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.39") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.77") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.38") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.33") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.33") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.24") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.11") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xsalsa20poly1305") (r "^0.6.0") (d #t) (k 0)))) (h "0xwz4l8nlz2iq0v3a7dr4msz4mzpwg2zv6prb2k9sm9pg7bcspzx") (f (quote (("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.141 (c (n "holochain") (v "0.0.141") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.11") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.134") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.134") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.26") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.41") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.41") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.39") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.39") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.39") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.41") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.35") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.35") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.39") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.40") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.77") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.38") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.34") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.34") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.24") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.12") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xsalsa20poly1305") (r "^0.6.0") (d #t) (k 0)))) (h "0cx6jaw025nfn9v70y136vvvcnmk1ab9g5ixph1m7689vbcmj9aq") (f (quote (("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.142 (c (n "holochain") (v "0.0.142") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.11") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.135") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.135") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.42") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.42") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.40") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.40") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.40") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.42") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.36") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.36") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.40") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.41") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.77") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.39") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.35") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.35") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.24") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.12") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xsalsa20poly1305") (r "^0.6.0") (d #t) (k 0)))) (h "0wwpw4k8w50wpfh2w903k89rdwp0vipg36y118zkvw7dy15ml7mq") (f (quote (("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.143 (c (n "holochain") (v "0.0.143") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.11") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.136") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.136") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.43") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.43") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.41") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.41") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.40") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.43") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.37") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.37") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.41") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.42") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.77") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.39") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.35") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.35") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.24") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.12") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xsalsa20poly1305") (r "^0.6.0") (d #t) (k 0)))) (h "08rdf8psa0n5c0n2lalnss6zjf3fx37h51jlh9yr29dbzvnfcpw8") (f (quote (("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.144 (c (n "holochain") (v "0.0.144") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.12") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.137") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.137") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.28") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.44") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.44") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.42") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.42") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.41") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.44") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.38") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.38") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.42") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.43") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.80") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.39") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.36") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.36") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.24") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.13") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=2.2.0") (d #t) (k 0)) (d (n "xsalsa20poly1305") (r "^0.6.0") (d #t) (k 0)))) (h "07lcd4sg9yp9jrx1wx6s29nr9nj11j8a538gf7xcgbdxj2jghs39") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.145 (c (n "holochain") (v "0.0.145") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.13") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.138") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.138") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.29") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.45") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.45") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.43") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.43") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.42") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.45") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.39") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.39") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.43") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.44") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.80") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.39") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.37") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.37") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.25") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.13") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=2.2.0") (d #t) (k 0)) (d (n "xsalsa20poly1305") (r "^0.6.0") (d #t) (k 0)))) (h "1s4l370zgm2fbaqmf1gcqg22dxg8iys4g62dkvp695mp9w6fkjw1") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.146 (c (n "holochain") (v "0.0.146") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.13") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.139") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.139") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.29") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.46") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.46") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.44") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.44") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.43") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.46") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.40") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.40") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.44") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.45") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.80") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.39") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.38") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.38") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.26") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.13") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.4") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=2.2.0") (d #t) (k 0)))) (h "0nzrzrgx87688q8n2yhjwpb41w9cqx2h1pb6cq023fdnzzr9fi7g") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.147 (c (n "holochain") (v "0.0.147") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.13") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.140") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.140") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.30") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.47") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.47") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.45") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.45") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.44") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.47") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.41") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.41") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.45") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.46") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.80") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.39") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.39") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.39") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.27") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.13") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.4") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=2.2.0") (d #t) (k 0)))) (h "0ijsrl4bfkaw0wlnb7r4fzy6vbjb0gc2ilh4a2i9pw6fd0cbghp9") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.148 (c (n "holochain") (v "0.0.148") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.13") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.140") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.140") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.30") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.48") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.48") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.45") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.46") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.44") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.48") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.41") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.41") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.46") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.47") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.80") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.39") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.39") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.39") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.27") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.13") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.4") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=2.2.0") (d #t) (k 0)))) (h "1fmcz3bqfp4npn0khfa796xcjwyds9axzy8r4vbrhx6kmj5i9ffm") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.149 (c (n "holochain") (v "0.0.149") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.13") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.141") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.141") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.30") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.49") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.49") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.46") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.47") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.45") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.49") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.42") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.42") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.47") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.48") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.80") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.39") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.40") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.39") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.27") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.13") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.4") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=2.2.0") (d #t) (k 0)))) (h "0hhsyvxivcf5wyx1i98bwz7izlvzdq46cb8rhqam2fhbqnrd0dqd") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.150 (c (n "holochain") (v "0.0.150") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.13") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.142") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.142") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.30") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.50") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.50") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.47") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.48") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.46") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.50") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.43") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.43") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.48") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.49") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.80") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.39") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.41") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.39") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.27") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.13") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.4") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=2.2.0") (d #t) (k 0)))) (h "17k3yc8ydscldkrlmidf5n50brcwpa2gb0v0qib5j479205j74wv") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.151 (c (n "holochain") (v "0.0.151") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.14") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.143") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.143") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.31") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.51") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.51") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.48") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.49") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.47") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.51") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.44") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.44") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.49") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.50") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.80") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.39") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.42") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.40") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.28") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.14") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.4") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=2.2.0") (d #t) (k 0)))) (h "1mf3wpbigdfcigmhmm4xwacnnx8ar1zqzsp81k5scg1r02qaa3pm") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.152 (c (n "holochain") (v "0.0.152") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.14") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.144") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.144") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.31") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.52") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.52") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.49") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.50") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.48") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.52") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.45") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.45") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.50") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.51") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.80") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.39") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.43") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.40") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.28") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.14") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.4") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=2.2.0") (d #t) (k 0)))) (h "0mirn1aj8fb96wp3z1zlwabfrp9k8sfwy67isza71zmfqm2yfn70") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.153 (c (n "holochain") (v "0.0.153") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.14") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.145") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.145") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.31") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.53") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.52") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.49") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.50") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.48") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.52") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.46") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.46") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.50") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.52") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.80") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.39") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.43") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.40") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.28") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.14") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.4") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=2.2.0") (d #t) (k 0)))) (h "0lc4x791fwc3vvfcxy3sr71xgxfmwmw4giij2f1i4448c801pjix") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.154 (c (n "holochain") (v "0.0.154") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.14") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.146") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.146") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.31") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.54") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.53") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.50") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.51") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.49") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.53") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.47") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.47") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.51") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.11") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.53") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.80") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.39") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.44") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.41") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.29") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.15") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.4") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=2.2.0") (d #t) (k 0)))) (h "03lymjydsfwlvba0gkwnc06ayh9vr5zmx7njn9i248lghvyhynry") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.155 (c (n "holochain") (v "0.0.155") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.14") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.147") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.147") (d #t) (k 1)) (d (n "hdk") (r "^0.0.147") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.31") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.55") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.54") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.51") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.52") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.50") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.54") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.48") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.48") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.52") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.11") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.54") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.80") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.39") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.44") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.42") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.30") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.15") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.4") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=2.2.0") (d #t) (k 0)))) (h "14994zbgvqnp5zlvi10p7gkf0iaiw51f26ggmhmyvc36mjflgbq1") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.156 (c (n "holochain") (v "0.0.156") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.14") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.147") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.147") (d #t) (k 1)) (d (n "hdk") (r "^0.0.147") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.31") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.55") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.54") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.51") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.52") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.50") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.54") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.48") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.48") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.52") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.11") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.54") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.80") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.39") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.44") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.42") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.30") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.15") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.4") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=2.2.0") (d #t) (k 0)))) (h "1xbsbaxx9ccdbnys5i3g57iiaw439l054l4d11ag441jzj4bwspk") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.157 (c (n "holochain") (v "0.0.157") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.14") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.147") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.147") (d #t) (k 1)) (d (n "hdk") (r "^0.0.147") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.31") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.56") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.55") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.51") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.52") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.50") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.55") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.48") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.48") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.52") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.11") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.54") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.80") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.39") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.44") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.42") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.30") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.15") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.4") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=2.2.0") (d #t) (k 0)))) (h "09sqbkxgkkfly5inlvd9wcq16xk8gha6r6w9mzw2fzvf7il862fv") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.158 (c (n "holochain") (v "0.0.158") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.14") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.148") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.148") (d #t) (k 1)) (d (n "hdk") (r "^0.0.148") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.31") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.57") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.56") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.52") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.53") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.51") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.56") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.49") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.49") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.53") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.11") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.55") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.80") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.39") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.45") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.42") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.30") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.15") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.4") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=2.2.0") (d #t) (k 0)))) (h "1ai73xanc71df6rxqzqhry1jjvirqw326lgxnxwfaxi018jg7vsn") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.159 (c (n "holochain") (v "0.0.159") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.14") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.149") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.149") (d #t) (k 1)) (d (n "hdk") (r "^0.0.149") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.31") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.58") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.57") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.53") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.54") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.52") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.57") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.50") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.50") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.54") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.11") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.56") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.80") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.39") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.46") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.43") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.31") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.15") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.4") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=2.2.0") (d #t) (k 0)))) (h "1fryfxl1y6wwivrd8jm0ca3vwmwcs4dcsh48zjcv4frh3sqdkhy9") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.160 (c (n "holochain") (v "0.0.160") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.14") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.150") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.150") (d #t) (k 1)) (d (n "hdk") (r "^0.0.150") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.31") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.59") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.57") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.53") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.54") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.52") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.57") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.51") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.51") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.54") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.11") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.56") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.80") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.39") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.46") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.43") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.31") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.15") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.4") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=2.2.0") (d #t) (k 0)))) (h "1sxb57lq4n0qr54f6h7y1cqkrbygpsbvngkbrr2ijwf61qdr28ga") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.161 (c (n "holochain") (v "0.0.161") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.14") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.151") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.151") (d #t) (k 1)) (d (n "hdk") (r "^0.0.151") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.31") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.60") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.58") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.54") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.55") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.53") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.58") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.52") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.52") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.55") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.11") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.57") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.80") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.39") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.47") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.44") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.32") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.15") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.4") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=2.2.0") (d #t) (k 0)))) (h "06qxvpzbsv3jkfxc5hnikkwfndj9hdk1zkbb83xnkhfgf4wyigqh") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.162 (c (n "holochain") (v "0.0.162") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.14") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.152") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.152") (d #t) (k 1)) (d (n "hdk") (r "^0.0.152") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.32") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.61") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.59") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.55") (k 0)) (d (n "holochain_p2p") (r "^0.0.56") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.54") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.59") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.53") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.53") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.56") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.12") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.58") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.80") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.39") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.48") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.45") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.33") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.16") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.5") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=2.2.0") (d #t) (k 0)))) (h "0ihd54l657f7nx35lvczf1wslrvkk8ycrfbqc26lrc4c8x97kv95") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_keystore/no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_keystore/db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.163 (c (n "holochain") (v "0.0.163") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.14") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.153") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.153") (d #t) (k 1)) (d (n "hdk") (r "^0.0.153") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.32") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.62") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.60") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.56") (k 0)) (d (n "holochain_p2p") (r "^0.0.57") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.55") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.60") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.54") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.54") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.57") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.12") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.59") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.80") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.39") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.49") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.46") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.34") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.16") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.5") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=2.2.0") (d #t) (k 0)))) (h "0293v8fprxfdrdzvhkhg69zlipgkd11xbdywrbdk0bkwxyibn21k") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_keystore/no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_keystore/db-encryption" "holochain_sqlite/db-encryption") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.164 (c (n "holochain") (v "0.0.164") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.14") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.154") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.154") (d #t) (k 1)) (d (n "hdk") (r "^0.0.154") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.33") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.63") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.61") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.57") (k 0)) (d (n "holochain_p2p") (r "^0.0.58") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.56") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.61") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.55") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.55") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.58") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.12") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.60") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.80") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.39") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.50") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.47") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.35") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.16") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.5") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=2.2.0") (d #t) (k 0)))) (h "04dk79x9psci9v0jr74q0mlb4wk4sc3xnifc4hh5ali61rjbd68l") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_keystore/no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_keystore/db-encryption" "holochain_sqlite/db-encryption") ("chc" "bytes" "reqwest") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.165 (c (n "holochain") (v "0.0.165") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.14") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.154") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.154") (d #t) (k 1)) (d (n "hdk") (r "^0.0.154") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.33") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.64") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.62") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.58") (k 0)) (d (n "holochain_p2p") (r "^0.0.59") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.57") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.62") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.55") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.55") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.59") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.12") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.61") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.80") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.39") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.50") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.48") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.36") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.16") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.5") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=2.2.0") (d #t) (k 0)))) (h "0lpmmiqiyqs7qgw2fvnpf73p48b9zahflf4x4cqkkhlwfm4mrgwc") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_keystore/no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_keystore/db-encryption" "holochain_sqlite/db-encryption") ("chc" "bytes" "reqwest") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.166 (c (n "holochain") (v "0.0.166") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.14") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.155") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.155") (d #t) (k 1)) (d (n "hdk") (r "^0.0.155") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.34") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.65") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.63") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.59") (k 0)) (d (n "holochain_p2p") (r "^0.0.60") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.58") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.63") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.56") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.56") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.60") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.12") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.62") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.80") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.39") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.51") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.48") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.36") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.16") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.5") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=2.2.0") (d #t) (k 0)))) (h "1cy67g9cvwaa05g5a1nx0sa5k6bnpf0lr4cdbvinp6im9lzl5r29") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_keystore/no-deps" "holochain_sqlite/no-deps") ("default" "slow_tests" "test_utils" "no-deps") ("db-encryption" "holochain_keystore/db-encryption" "holochain_sqlite/db-encryption") ("chc" "bytes" "reqwest") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.167 (c (n "holochain") (v "0.0.167") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.14") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.155") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.155") (d #t) (k 1)) (d (n "hdk") (r "^0.0.155") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.34") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.66") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.64") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.60") (k 0)) (d (n "holochain_p2p") (r "^0.0.61") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.59") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.64") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.56") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.56") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.61") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.12") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.63") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.80") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.39") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.51") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.49") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.36") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.16") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.5") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=2.2.0") (d #t) (k 0)))) (h "06f59516yilirci44h47v0i926hxx6dc9vj9j9cs8ksfhrbdvnjd") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_keystore/no-deps" "holochain_sqlite/no-deps") ("glacial_tests") ("default" "slow_tests" "glacial_tests" "test_utils" "no-deps") ("db-encryption" "holochain_keystore/db-encryption" "holochain_sqlite/db-encryption") ("chc" "bytes" "reqwest") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.168 (c (n "holochain") (v "0.0.168") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.14") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.156") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.156") (d #t) (k 1)) (d (n "hdk") (r "^0.0.156") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.34") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.67") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.65") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.60") (k 0)) (d (n "holochain_p2p") (r "^0.0.62") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.59") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.65") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.57") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.57") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.62") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.12") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.64") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.80") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.39") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.51") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.49") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.36") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.17") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.5") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=2.2.0") (d #t) (k 0)))) (h "0ysbqnv0y98z75kxrvarx287kl1flbykbx618aplvi1m7zxbwm7v") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_keystore/no-deps" "holochain_sqlite/no-deps") ("glacial_tests") ("default" "slow_tests" "glacial_tests" "test_utils" "no-deps") ("db-encryption" "holochain_keystore/db-encryption" "holochain_sqlite/db-encryption") ("chc" "bytes" "reqwest") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.169 (c (n "holochain") (v "0.0.169") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.14") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.157") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.157") (d #t) (k 1)) (d (n "hdk") (r "^0.0.157") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.34") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.68") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.66") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.61") (k 0)) (d (n "holochain_p2p") (r "^0.0.63") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.60") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.66") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.58") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.58") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.63") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.12") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.65") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.80") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.39") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.52") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.50") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.37") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.17") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.5") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=2.2.0") (d #t) (k 0)))) (h "0nv3gci3bfv5ilbq6ilfr94pr5rjww7ddrmid20kpc6h4a80ybz9") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_keystore/no-deps" "holochain_sqlite/no-deps") ("glacial_tests") ("default" "slow_tests" "glacial_tests" "test_utils" "no-deps") ("db-encryption" "holochain_keystore/db-encryption" "holochain_sqlite/db-encryption") ("chc" "bytes" "reqwest") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.170 (c (n "holochain") (v "0.0.170") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.14") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.158") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.158") (d #t) (k 1)) (d (n "hdk") (r "^0.0.158") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.35") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.69") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.67") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.62") (k 0)) (d (n "holochain_p2p") (r "^0.0.64") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.61") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.67") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.59") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.59") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.64") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.12") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.66") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.80") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.39") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.53") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.50") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.37") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.17") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.5") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=2.2.0") (d #t) (k 0)))) (h "0zqp9gvcz02nqd6f7iyi1jd5774y45km9dsrha3s9h8cnhszbxwb") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_keystore/no-deps" "holochain_sqlite/no-deps") ("glacial_tests") ("default" "slow_tests" "glacial_tests" "test_utils" "no-deps") ("db-encryption" "holochain_keystore/db-encryption" "holochain_sqlite/db-encryption") ("chc" "bytes" "reqwest") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.171 (c (n "holochain") (v "0.0.171") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.14") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.159") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.159") (d #t) (k 1)) (d (n "hdk") (r "^0.0.159") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.35") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.70") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.68") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.63") (k 0)) (d (n "holochain_p2p") (r "^0.0.65") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.62") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.68") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.60") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.60") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.65") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.12") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.67") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.80") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.39") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.54") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.50") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.37") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.17") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.5") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=2.2.0") (d #t) (k 0)))) (h "0wwdpd02a98w0dxsqxrgrfxpmcdrgnwxijm2qbk35wm8g21fv9z0") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_keystore/no-deps" "holochain_sqlite/no-deps") ("glacial_tests") ("default" "slow_tests" "glacial_tests" "test_utils" "no-deps") ("db-encryption" "holochain_keystore/db-encryption" "holochain_sqlite/db-encryption") ("chc" "bytes" "reqwest") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.172 (c (n "holochain") (v "0.0.172") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.14") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.160") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.160") (d #t) (k 1)) (d (n "hdk") (r "^0.0.160") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.35") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.71") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.69") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.64") (k 0)) (d (n "holochain_p2p") (r "^0.0.66") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.63") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.69") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.61") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.61") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.66") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.12") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.68") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.82") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.39") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.55") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.50") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.37") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.17") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.5") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "190l54sraxsz070dzyr7mmimdwp6k4ddl83bc0ppk63a7aq40vkd") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_keystore/no-deps" "holochain_sqlite/no-deps") ("glacial_tests") ("default" "slow_tests" "glacial_tests" "test_utils" "no-deps") ("db-encryption" "holochain_keystore/db-encryption" "holochain_sqlite/db-encryption") ("chc" "bytes" "reqwest") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.173 (c (n "holochain") (v "0.0.173") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.14") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.161") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.161") (d #t) (k 1)) (d (n "hdk") (r "^0.0.161") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.35") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.72") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.70") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.65") (k 0)) (d (n "holochain_p2p") (r "^0.0.67") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.64") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.70") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.62") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.62") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.67") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.13") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.69") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.82") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.39") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.56") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.51") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.38") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.18") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.7") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.6") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "1fprkfp6z236vf18cbms5apywb81gq34hiijwgi77l4i1fbviyhz") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_keystore/no-deps" "holochain_sqlite/no-deps") ("glacial_tests") ("default" "slow_tests" "glacial_tests" "test_utils" "no-deps") ("db-encryption" "holochain_keystore/db-encryption" "holochain_sqlite/db-encryption") ("chc" "bytes" "reqwest") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.174 (c (n "holochain") (v "0.0.174") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.14") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.162") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.162") (d #t) (k 1)) (d (n "hdk") (r "^0.0.162") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.35") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.73") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.71") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.66") (k 0)) (d (n "holochain_p2p") (r "^0.0.68") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.65") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.71") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.63") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.63") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.68") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.13") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.70") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.82") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.39") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.57") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.52") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.39") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.19") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.7") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.6") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "0nd19nf32cijn9w6sdr0lzibwixngwpw0c6sr05qkbj6978jwkvc") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_keystore/no-deps" "holochain_sqlite/no-deps") ("glacial_tests") ("default" "slow_tests" "glacial_tests" "test_utils" "no-deps") ("db-encryption" "holochain_keystore/db-encryption" "holochain_sqlite/db-encryption") ("chc" "bytes" "reqwest") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.0.175 (c (n "holochain") (v "0.0.175") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.14") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.0.163") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.0.163") (d #t) (k 1)) (d (n "hdk") (r "^0.0.163") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.35") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.0.74") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.0.72") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.67") (k 0)) (d (n "holochain_p2p") (r "^0.0.69") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.66") (d #t) (k 0)) (d (n "holochain_state") (r "^0.0.72") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.64") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.0.64") (d #t) (k 2)) (d (n "holochain_types") (r "^0.0.69") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.13") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.71") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.82") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.0.39") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.58") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.52") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.39") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.0.20") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.7") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.6") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "1dbfjzaq6gppqr6mkmyxy32czq6aagvqimkmqi2dx5vgld7wc0yd") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_keystore/no-deps" "holochain_sqlite/no-deps") ("glacial_tests") ("default" "slow_tests" "glacial_tests" "test_utils" "no-deps") ("db-encryption" "holochain_keystore/db-encryption" "holochain_sqlite/db-encryption") ("chc" "bytes" "reqwest") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.1.0-beta-rc.0 (c (n "holochain") (v "0.1.0-beta-rc.0") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.1.0-beta-rc.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.1.0-beta-rc.0") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.1.0-beta-rc.0") (d #t) (k 1)) (d (n "hdk") (r "^0.1.0-beta-rc.0") (d #t) (k 2)) (d (n "holo_hash") (r "^0.1.0-beta-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.1.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.1.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.1.0-beta-rc.0") (k 0)) (d (n "holochain_p2p") (r "^0.1.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.1.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_state") (r "^0.1.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.1.0-beta-rc.0") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.1.0-beta-rc.0") (d #t) (k 2)) (d (n "holochain_types") (r "^0.1.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_util") (r "^0.1.0-beta-rc.0") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.1.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.82") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.1.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.1.0-beta-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.1.0-beta-rc.0") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.1.0-beta-rc.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.1.0-beta-rc.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.7") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "1g2rv8bvcx07whr3niysi8fhdzggq6dvq8x52rsflfsjbazjfylg") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_keystore/no-deps" "holochain_sqlite/no-deps") ("glacial_tests") ("default" "slow_tests" "glacial_tests" "test_utils" "no-deps") ("db-encryption" "holochain_keystore/db-encryption" "holochain_sqlite/db-encryption") ("chc" "bytes" "reqwest") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.1.0-beta-rc.1 (c (n "holochain") (v "0.1.0-beta-rc.1") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.1.0-beta-rc.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.1.0-beta-rc.0") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.1.0-beta-rc.0") (d #t) (k 1)) (d (n "hdk") (r "^0.1.0-beta-rc.0") (d #t) (k 2)) (d (n "holo_hash") (r "^0.1.0-beta-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.1.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.1.0-beta-rc.1") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.1.0-beta-rc.0") (k 0)) (d (n "holochain_p2p") (r "^0.1.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.1.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_state") (r "^0.1.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.1.0-beta-rc.0") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.1.0-beta-rc.0") (d #t) (k 2)) (d (n "holochain_types") (r "^0.1.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_util") (r "^0.1.0-beta-rc.0") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.1.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.82") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.1.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.1.0-beta-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.1.0-beta-rc.0") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.1.0-beta-rc.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.1.0-beta-rc.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.7") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "0rr4m672k97j0dphr9h1fj09x2hlqcc3ffh9fg3brx0f0qzvg1i1") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_keystore/no-deps" "holochain_sqlite/no-deps") ("glacial_tests") ("default" "slow_tests" "glacial_tests" "test_utils" "no-deps") ("db-encryption" "holochain_keystore/db-encryption" "holochain_sqlite/db-encryption") ("chc" "bytes" "reqwest") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.1.0-beta-rc.2 (c (n "holochain") (v "0.1.0-beta-rc.2") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.1.0-beta-rc.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.1.0-beta-rc.1") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.1.0-beta-rc.1") (d #t) (k 1)) (d (n "hdk") (r "^0.1.0-beta-rc.1") (d #t) (k 2)) (d (n "holo_hash") (r "^0.1.0-beta-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.1.0-beta-rc.1") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.1.0-beta-rc.2") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.1.0-beta-rc.1") (k 0)) (d (n "holochain_p2p") (r "^0.1.0-beta-rc.1") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.1.0-beta-rc.1") (d #t) (k 0)) (d (n "holochain_state") (r "^0.1.0-beta-rc.1") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.1.0-beta-rc.1") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.1.0-beta-rc.1") (d #t) (k 2)) (d (n "holochain_types") (r "^0.1.0-beta-rc.1") (d #t) (k 0)) (d (n "holochain_util") (r "^0.1.0-beta-rc.0") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.1.0-beta-rc.1") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.82") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.1.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.1.0-beta-rc.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.1.0-beta-rc.0") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.1.0-beta-rc.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.1.0-beta-rc.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.7") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "0hcms8i8p64w2w5py1xdxh69s2qpvq15bankygq77qyf5lq6dqhk") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_keystore/no-deps" "holochain_sqlite/no-deps") ("glacial_tests") ("default" "slow_tests" "glacial_tests" "test_utils" "no-deps") ("db-encryption" "holochain_keystore/db-encryption" "holochain_sqlite/db-encryption") ("chc" "bytes" "reqwest") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.1.0-beta-rc.3 (c (n "holochain") (v "0.1.0-beta-rc.3") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.1.0-beta-rc.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.1.0-beta-rc.2") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.1.0-beta-rc.2") (d #t) (k 1)) (d (n "hdk") (r "^0.1.0-beta-rc.2") (d #t) (k 2)) (d (n "holo_hash") (r "^0.1.0-beta-rc.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.1.0-beta-rc.2") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.1.0-beta-rc.3") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.1.0-beta-rc.2") (k 0)) (d (n "holochain_p2p") (r "^0.1.0-beta-rc.2") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.1.0-beta-rc.2") (d #t) (k 0)) (d (n "holochain_state") (r "^0.1.0-beta-rc.2") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.1.0-beta-rc.2") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.1.0-beta-rc.2") (d #t) (k 2)) (d (n "holochain_types") (r "^0.1.0-beta-rc.2") (d #t) (k 0)) (d (n "holochain_util") (r "^0.1.0-beta-rc.0") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.1.0-beta-rc.2") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.82") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.1.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.1.0-beta-rc.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.1.0-beta-rc.1") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.1.0-beta-rc.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.1.0-beta-rc.1") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.7") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "0x16d9h4n3wnzgzq8k6ni182jy6yaggnbn2vsysly748cx4x5wh1") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_keystore/no-deps" "holochain_sqlite/no-deps") ("glacial_tests") ("default" "slow_tests" "glacial_tests" "test_utils" "no-deps") ("db-encryption" "holochain_keystore/db-encryption" "holochain_sqlite/db-encryption") ("chc" "bytes" "reqwest") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.1.0-beta-rc.4 (c (n "holochain") (v "0.1.0-beta-rc.4") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.1.0-beta-rc.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.1.0-beta-rc.3") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.1.0-beta-rc.3") (d #t) (k 1)) (d (n "hdk") (r "^0.1.0-beta-rc.3") (d #t) (k 2)) (d (n "holo_hash") (r "^0.1.0-beta-rc.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.1.0-beta-rc.3") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.1.0-beta-rc.4") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.1.0-beta-rc.3") (k 0)) (d (n "holochain_p2p") (r "^0.1.0-beta-rc.3") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.1.0-beta-rc.3") (d #t) (k 0)) (d (n "holochain_state") (r "^0.1.0-beta-rc.3") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.1.0-beta-rc.3") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.1.0-beta-rc.3") (d #t) (k 2)) (d (n "holochain_types") (r "^0.1.0-beta-rc.3") (d #t) (k 0)) (d (n "holochain_util") (r "^0.1.0-beta-rc.0") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.1.0-beta-rc.3") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.83") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.1.0-beta-rc.1") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.1.0-beta-rc.3") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.1.0-beta-rc.2") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.1.0-beta-rc.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.1.0-beta-rc.2") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.7") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "1d992lrdd1q6c7vnwkp9bzvw5yfacnxjxw85l2ywrjqgxv1jrm3k") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_keystore/no-deps" "holochain_sqlite/no-deps") ("glacial_tests") ("default" "slow_tests" "glacial_tests" "test_utils" "no-deps") ("db-encryption" "holochain_keystore/db-encryption" "holochain_sqlite/db-encryption") ("chc" "bytes" "reqwest") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.1.0 (c (n "holochain") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.1.0") (d #t) (k 1)) (d (n "hdk") (r "^0.1.0") (d #t) (k 2)) (d (n "holo_hash") (r "^0.1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.1.0") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.1.0") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.1.0") (k 0)) (d (n "holochain_p2p") (r "^0.1.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.1.0") (d #t) (k 0)) (d (n "holochain_state") (r "^0.1.0") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.1.0") (d #t) (k 2)) (d (n "holochain_types") (r "^0.1.0") (d #t) (k 0)) (d (n "holochain_util") (r "^0.1.0") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.1.0") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.83") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.1.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.1.0") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.1.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.7") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "0lrkrnvrr2z4afkri4wljnhiglnrm906s9l8va00y17x4a8yb8hs") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_keystore/no-deps" "holochain_sqlite/no-deps") ("glacial_tests") ("default" "slow_tests" "glacial_tests" "test_utils" "no-deps") ("db-encryption" "holochain_keystore/db-encryption" "holochain_sqlite/db-encryption") ("chc" "bytes" "reqwest") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.1.1 (c (n "holochain") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.1.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.1.1") (d #t) (k 1)) (d (n "hdk") (r "^0.1.1") (d #t) (k 2)) (d (n "holo_hash") (r "^0.1.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.1.1") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.1.1") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.1.1") (k 0)) (d (n "holochain_p2p") (r "^0.1.1") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.1.1") (d #t) (k 0)) (d (n "holochain_state") (r "^0.1.1") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.1.1") (d #t) (k 2)) (d (n "holochain_types") (r "^0.1.1") (d #t) (k 0)) (d (n "holochain_util") (r "^0.1.0") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.1.1") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.83") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.1.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.1.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.1.1") (k 0)) (d (n "kitsune_p2p_types") (r "^0.1.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.1.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.7") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "04hmsqb49b5k7v9jm7w94sz73byjq1dlkxg939fj93qmx7gq7qbw") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5") ("tx2" "kitsune_p2p/tx2") ("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_keystore/no-deps" "holochain_sqlite/no-deps") ("glacial_tests") ("default" "slow_tests" "glacial_tests" "test_utils" "no-deps" "tx2") ("db-encryption" "holochain_keystore/db-encryption" "holochain_sqlite/db-encryption") ("chc" "bytes" "reqwest") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.1.2 (c (n "holochain") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.1.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.1.1") (d #t) (k 1)) (d (n "hdk") (r "^0.1.1") (d #t) (k 2)) (d (n "holo_hash") (r "^0.1.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.1.2") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.1.2") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.1.2") (k 0)) (d (n "holochain_p2p") (r "^0.1.2") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.1.2") (d #t) (k 0)) (d (n "holochain_state") (r "^0.1.2") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.1.1") (d #t) (k 2)) (d (n "holochain_types") (r "^0.1.2") (d #t) (k 0)) (d (n "holochain_util") (r "^0.1.0") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.1.2") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.83") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.1.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.1.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.1.1") (k 0)) (d (n "kitsune_p2p_types") (r "^0.1.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.1.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.7") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "1iizmz796gk7rnn6czlclggqrz1401cr1lihammiqk57g39bhiyb") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5") ("tx2" "kitsune_p2p/tx2") ("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_keystore/no-deps" "holochain_sqlite/no-deps") ("glacial_tests") ("default" "slow_tests" "glacial_tests" "test_utils" "no-deps" "tx2") ("db-encryption" "holochain_keystore/db-encryption" "holochain_sqlite/db-encryption") ("chc" "bytes" "reqwest") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.1.3 (c (n "holochain") (v "0.1.3") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.1.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.1.1") (d #t) (k 1)) (d (n "hdk") (r "^0.1.1") (d #t) (k 2)) (d (n "holo_hash") (r "^0.1.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.1.3") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.1.3") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.1.3") (k 0)) (d (n "holochain_p2p") (r "^0.1.3") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.1.3") (d #t) (k 0)) (d (n "holochain_state") (r "^0.1.3") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.1.1") (d #t) (k 2)) (d (n "holochain_types") (r "^0.1.3") (d #t) (k 0)) (d (n "holochain_util") (r "^0.1.0") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.1.3") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.83") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.1.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.1.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.1.2") (k 0)) (d (n "kitsune_p2p_types") (r "^0.1.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.1.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.7") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "0bx22891nvk69lnrvvbadx8apxp84cg95054n5lk0icxdrhvvvrf") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5") ("tx2" "kitsune_p2p/tx2") ("test_utils" "ghost_actor/test_utils" "hdk" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_keystore/no-deps" "holochain_sqlite/no-deps") ("glacial_tests") ("default" "slow_tests" "glacial_tests" "test_utils" "no-deps" "tx2") ("db-encryption" "holochain_keystore/db-encryption" "holochain_sqlite/db-encryption") ("chc" "bytes" "reqwest") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.2.0-beta-rc.0 (c (n "holochain") (v "0.2.0-beta-rc.0") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.5") (d #t) (k 0)) (d (n "hdk") (r "^0.2.0-beta-rc.0") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.2.0-beta-rc.0") (d #t) (k 1)) (d (n "hdk") (r "^0.2.0-beta-rc.0") (d #t) (k 2)) (d (n "holo_hash") (r "^0.2.0-beta-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.0-beta-rc.0") (k 0)) (d (n "holochain_p2p") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_state") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.2.0-beta-rc.0") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.2.0-beta-rc.0") (d #t) (k 2)) (d (n "holochain_trace") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0-beta-rc.0") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.83") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.0-beta-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.0-beta-rc.0") (k 0)) (d (n "kitsune_p2p_block") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.0.12-dev.0") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.7") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "^0.0.1-alpha.3") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "^0.0.1-alpha.3") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "12r7r1vpkjhip72sam927c0zkxk792n66cpcyx8z1pk915sgvw0k") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_keystore/no-deps" "holochain_sqlite/no-deps") ("glacial_tests") ("default" "slow_tests" "glacial_tests" "test_utils" "no-deps" "tx2" "tx5") ("db-encryption" "holochain_keystore/db-encryption" "holochain_sqlite/db-encryption") ("chc" "bytes" "reqwest") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.2.0-beta-rc.1 (c (n "holochain") (v "0.2.0-beta-rc.1") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.5") (d #t) (k 0)) (d (n "hdk") (r "^0.2.0-beta-rc.1") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.2.0-beta-rc.1") (d #t) (k 1)) (d (n "hdk") (r "^0.2.0-beta-rc.1") (d #t) (k 2)) (d (n "holo_hash") (r "^0.2.0-beta-rc.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.2.0-beta-rc.1") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.2.0-beta-rc.1") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.0-beta-rc.1") (k 0)) (d (n "holochain_p2p") (r "^0.2.0-beta-rc.1") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.0-beta-rc.1") (d #t) (k 0)) (d (n "holochain_state") (r "^0.2.0-beta-rc.1") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.2.0-beta-rc.1") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.2.0-beta-rc.1") (d #t) (k 2)) (d (n "holochain_trace") (r "^0.2.0-beta-rc.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.0-beta-rc.1") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0-beta-rc.0") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.2.0-beta-rc.1") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.83") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.0-beta-rc.1") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.0-beta-rc.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.0-beta-rc.1") (k 0)) (d (n "kitsune_p2p_block") (r "^0.2.0-beta-rc.1") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.1.0-beta-rc.0") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.0-beta-rc.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.7") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "^0.0.1-alpha.4") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "^0.0.1-alpha.4") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "09y68l0qrhh1ac2fidfndxv8kr8l26ayazd1x3byvayw14yxf580") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_keystore/no-deps" "holochain_sqlite/no-deps") ("glacial_tests") ("default" "slow_tests" "glacial_tests" "test_utils" "no-deps" "tx2" "tx5") ("db-encryption" "holochain_keystore/db-encryption" "holochain_sqlite/db-encryption") ("chc" "bytes" "reqwest") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.2.0-beta-rc.2 (c (n "holochain") (v "0.2.0-beta-rc.2") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.5") (d #t) (k 0)) (d (n "hdk") (r "^0.2.0-beta-rc.2") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.2.0-beta-rc.2") (d #t) (k 1)) (d (n "hdk") (r "^0.2.0-beta-rc.2") (d #t) (k 2)) (d (n "holo_hash") (r "^0.2.0-beta-rc.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.2.0-beta-rc.2") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.2.0-beta-rc.2") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.0-beta-rc.2") (k 0)) (d (n "holochain_p2p") (r "^0.2.0-beta-rc.2") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.0-beta-rc.2") (d #t) (k 0)) (d (n "holochain_state") (r "^0.2.0-beta-rc.2") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.2.0-beta-rc.2") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.2.0-beta-rc.2") (d #t) (k 2)) (d (n "holochain_trace") (r "^0.2.0-beta-rc.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.0-beta-rc.2") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0-beta-rc.0") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.2.0-beta-rc.2") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.83") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.0-beta-rc.1") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.0-beta-rc.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.0-beta-rc.2") (k 0)) (d (n "kitsune_p2p_block") (r "^0.2.0-beta-rc.1") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.1.0-beta-rc.0") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.0-beta-rc.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.7") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "^0.0.1-alpha.4") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "^0.0.1-alpha.5") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "1bga3g2xcg3lln7g6dwn7bd2b710lf9clwcrqh5f7hrljkmz30qc") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_keystore/no-deps" "holochain_sqlite/no-deps") ("glacial_tests") ("default" "slow_tests" "glacial_tests" "test_utils" "no-deps" "tx2" "tx5") ("db-encryption" "holochain_keystore/db-encryption" "holochain_sqlite/db-encryption") ("chc" "bytes" "reqwest") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.2.0-beta-rc.3 (c (n "holochain") (v "0.2.0-beta-rc.3") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.5") (d #t) (k 0)) (d (n "hdk") (r "^0.2.0-beta-rc.3") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.2.0-beta-rc.3") (d #t) (k 1)) (d (n "hdk") (r "^0.2.0-beta-rc.3") (d #t) (k 2)) (d (n "holo_hash") (r "^0.2.0-beta-rc.3") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.2.0-beta-rc.3") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.2.0-beta-rc.3") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.0-beta-rc.3") (k 0)) (d (n "holochain_p2p") (r "^0.2.0-beta-rc.3") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.0-beta-rc.3") (d #t) (k 0)) (d (n "holochain_state") (r "^0.2.0-beta-rc.3") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.2.0-beta-rc.3") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.2.0-beta-rc.3") (d #t) (k 2)) (d (n "holochain_trace") (r "^0.2.0-beta-rc.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.0-beta-rc.3") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0-beta-rc.0") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.2.0-beta-rc.3") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.83") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.0-beta-rc.1") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.0-beta-rc.3") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.0-beta-rc.3") (k 0)) (d (n "kitsune_p2p_block") (r "^0.2.0-beta-rc.2") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.1.0-beta-rc.1") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.0-beta-rc.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.7") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "^0.0.1-alpha.4") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "^0.0.1-alpha.5") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "16h0g5dn2sq81gqrjhgzvx5l3q9gsslhycf2x4g4gcqird4zvxvk") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_keystore/no-deps" "holochain_sqlite/no-deps") ("glacial_tests") ("default" "slow_tests" "glacial_tests" "test_utils" "no-deps" "tx2" "tx5") ("db-encryption" "holochain_keystore/db-encryption" "holochain_sqlite/db-encryption") ("chc" "bytes" "reqwest") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.2.0-beta-rc.4 (c (n "holochain") (v "0.2.0-beta-rc.4") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.5") (d #t) (k 0)) (d (n "hdk") (r "^0.2.0-beta-rc.4") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.2.0-beta-rc.4") (d #t) (k 1)) (d (n "hdk") (r "^0.2.0-beta-rc.4") (d #t) (k 2)) (d (n "holo_hash") (r "^0.2.0-beta-rc.3") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.2.0-beta-rc.4") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.2.0-beta-rc.4") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.0-beta-rc.4") (k 0)) (d (n "holochain_p2p") (r "^0.2.0-beta-rc.4") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.0-beta-rc.4") (d #t) (k 0)) (d (n "holochain_state") (r "^0.2.0-beta-rc.4") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.2.0-beta-rc.4") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.2.0-beta-rc.4") (d #t) (k 2)) (d (n "holochain_trace") (r "^0.2.0-beta-rc.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.0-beta-rc.4") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0-beta-rc.0") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.2.0-beta-rc.4") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.83") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.0-beta-rc.1") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.0-beta-rc.4") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.0-beta-rc.4") (k 0)) (d (n "kitsune_p2p_block") (r "^0.2.0-beta-rc.2") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.1.0-beta-rc.2") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.0-beta-rc.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.7") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "^0.0.1-alpha.4") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "^0.0.1-alpha.5") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "1dqz2qgzlwkfhrjj91dv44h0p3kqq255qkp7qkybxymgl30zacdb") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_keystore/no-deps" "holochain_sqlite/no-deps") ("glacial_tests") ("dpki") ("default" "slow_tests" "glacial_tests" "test_utils" "no-deps" "tx2" "tx5") ("db-encryption" "holochain_keystore/db-encryption" "holochain_sqlite/db-encryption") ("chc" "bytes" "reqwest") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.1.4 (c (n "holochain") (v "0.1.4") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.1.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.1.2") (d #t) (k 1)) (d (n "hdk") (r "^0.1.2") (d #t) (k 2)) (d (n "holo_hash") (r "^0.1.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.1.4") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.1.4") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.1.4") (k 0)) (d (n "holochain_p2p") (r "^0.1.4") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.1.4") (d #t) (k 0)) (d (n "holochain_state") (r "^0.1.4") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.1.2") (d #t) (k 2)) (d (n "holochain_types") (r "^0.1.4") (d #t) (k 0)) (d (n "holochain_util") (r "^0.1.0") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.1.4") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.83") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.1.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.1.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.1.3") (k 0)) (d (n "kitsune_p2p_types") (r "^0.1.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.1.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.7") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "1i3cbnsc7aqfavvc69lb66fc31ydi91dzchpg8zm01rx3dyh3i1f") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5") ("tx2" "kitsune_p2p/tx2") ("test_utils" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_keystore/no-deps" "holochain_sqlite/no-deps") ("glacial_tests") ("default" "slow_tests" "glacial_tests" "test_utils" "no-deps" "tx2") ("db-encryption" "holochain_keystore/db-encryption" "holochain_sqlite/db-encryption") ("chc" "bytes" "reqwest") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.2.0-beta-rc.5 (c (n "holochain") (v "0.2.0-beta-rc.5") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.5") (d #t) (k 0)) (d (n "hdk") (r "^0.2.0-beta-rc.4") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.2.0-beta-rc.4") (d #t) (k 1)) (d (n "hdk") (r "^0.2.0-beta-rc.4") (d #t) (k 2)) (d (n "holo_hash") (r "^0.2.0-beta-rc.3") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.2.0-beta-rc.5") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.2.0-beta-rc.5") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.0-beta-rc.4") (k 0)) (d (n "holochain_p2p") (r "^0.2.0-beta-rc.5") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.0-beta-rc.4") (d #t) (k 0)) (d (n "holochain_state") (r "^0.2.0-beta-rc.5") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.2.0-beta-rc.4") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.2.0-beta-rc.4") (d #t) (k 2)) (d (n "holochain_trace") (r "^0.2.0-beta-rc.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.0-beta-rc.5") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0-beta-rc.0") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.2.0-beta-rc.5") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.83") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.0-beta-rc.1") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.0-beta-rc.4") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.0-beta-rc.4") (k 0)) (d (n "kitsune_p2p_block") (r "^0.2.0-beta-rc.2") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.1.0-beta-rc.2") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.0-beta-rc.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.7") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "^0.0.1-alpha.4") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "^0.0.1-alpha.5") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "003y04nb1nwz2vbdwkx62b9i2dw8jkfh3p3q00r9rkscnbr15kav") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "holochain_keystore/no-deps" "holochain_sqlite/no-deps") ("glacial_tests") ("dpki") ("default" "slow_tests" "glacial_tests" "test_utils" "no-deps" "tx2" "tx5") ("db-encryption" "holochain_keystore/db-encryption" "holochain_sqlite/db-encryption") ("chc" "bytes" "reqwest") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.2.0-beta-rc.6 (c (n "holochain") (v "0.2.0-beta-rc.6") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.5") (d #t) (k 0)) (d (n "hdk") (r "^0.2.0-beta-rc.5") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.2.0-beta-rc.5") (d #t) (k 1)) (d (n "hdk") (r "^0.2.0-beta-rc.5") (d #t) (k 2)) (d (n "holo_hash") (r "^0.2.0-beta-rc.4") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.2.0-beta-rc.6") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.2.0-beta-rc.6") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.0-beta-rc.5") (k 0)) (d (n "holochain_p2p") (r "^0.2.0-beta-rc.6") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.0-beta-rc.5") (d #t) (k 0)) (d (n "holochain_state") (r "^0.2.0-beta-rc.6") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.2.0-beta-rc.5") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.2.0-beta-rc.5") (d #t) (k 2)) (d (n "holochain_trace") (r "^0.2.0-beta-rc.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.0-beta-rc.6") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0-beta-rc.0") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.2.0-beta-rc.6") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.83") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.0-beta-rc.2") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.0-beta-rc.5") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.0-beta-rc.5") (k 0)) (d (n "kitsune_p2p_block") (r "^0.2.0-beta-rc.3") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.1.0-beta-rc.3") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.0-beta-rc.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.7") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "^0.0.1-alpha.4") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "^0.0.1-alpha.5") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "07ajlqx960q5yxwyi0gkk4vi0r4zy0gnchq816xh131dv6wp8k1p") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("glacial_tests") ("dpki") ("default" "slow_tests" "glacial_tests" "test_utils" "sqlite" "tx2" "tx5") ("chc" "bytes" "reqwest") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.1.5-beta-rc.0 (c (n "holochain") (v "0.1.5-beta-rc.0") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.1.2-beta-rc.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.1.3-beta-rc.0") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.1.3-beta-rc.0") (d #t) (k 1)) (d (n "hdk") (r "^0.1.3-beta-rc.0") (d #t) (k 2)) (d (n "holo_hash") (r "^0.1.3-beta-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.1.5-beta-rc.0") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.1.5-beta-rc.0") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.1.5-beta-rc.0") (k 0)) (d (n "holochain_p2p") (r "^0.1.5-beta-rc.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.1.5-beta-rc.0") (d #t) (k 0)) (d (n "holochain_state") (r "^0.1.5-beta-rc.0") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.1.3-beta-rc.0") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.1.3-beta-rc.0") (d #t) (k 2)) (d (n "holochain_types") (r "^0.1.5-beta-rc.0") (d #t) (k 0)) (d (n "holochain_util") (r "^0.1.1-beta-rc.0") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.1.5-beta-rc.0") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.83") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.1.1-beta-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.1.3-beta-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.1.4-beta-rc.0") (k 0)) (d (n "kitsune_p2p_types") (r "^0.1.3-beta-rc.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.1.1-beta-rc.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.7") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "0z16sswm95s1qbdm00lalar4h442nhd09smilgd5wp0knnjg0irm") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5") ("tx2" "kitsune_p2p/tx2") ("test_utils" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/db-encryption" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/no-deps" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "sqlite") ("glacial_tests") ("default" "slow_tests" "glacial_tests" "test_utils" "no-deps" "tx2") ("db-encryption" "sqlite-encrypted") ("chc" "bytes" "reqwest") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.2.0-beta-rc.7 (c (n "holochain") (v "0.2.0-beta-rc.7") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.5") (d #t) (k 0)) (d (n "hdk") (r "^0.2.0-beta-rc.6") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.2.0-beta-rc.6") (d #t) (k 1)) (d (n "hdk") (r "^0.2.0-beta-rc.6") (d #t) (k 2)) (d (n "holo_hash") (r "^0.2.0-beta-rc.5") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.2.0-beta-rc.7") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.2.0-beta-rc.7") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.0-beta-rc.6") (k 0)) (d (n "holochain_p2p") (r "^0.2.0-beta-rc.7") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.0-beta-rc.6") (d #t) (k 0)) (d (n "holochain_state") (r "^0.2.0-beta-rc.7") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.2.0-beta-rc.6") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.2.0-beta-rc.6") (d #t) (k 2)) (d (n "holochain_trace") (r "^0.2.0-beta-rc.2") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.0-beta-rc.7") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0-beta-rc.1") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.2.0-beta-rc.7") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.84") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.0-beta-rc.3") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.0-beta-rc.6") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.0-beta-rc.6") (k 0)) (d (n "kitsune_p2p_block") (r "^0.2.0-beta-rc.4") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.1.0-beta-rc.4") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.0-beta-rc.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.2.0-beta-rc.1") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.1-alpha.5") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.1-alpha.7") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "0dq1jnsvjzy6xaxk46r8rjzpkhw7hz2v3fchh53pjl5a46482n70") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("glacial_tests") ("dpki") ("default" "slow_tests" "glacial_tests" "test_utils" "sqlite" "tx2" "tx5") ("chc" "bytes" "reqwest") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.2.0 (c (n "holochain") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.5") (d #t) (k 0)) (d (n "hdk") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.2.0") (d #t) (k 1)) (d (n "hdk") (r "^0.2.0") (d #t) (k 2)) (d (n "holo_hash") (r "^0.2.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.0") (k 0)) (d (n "holochain_p2p") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_state") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.2.0") (d #t) (k 2)) (d (n "holochain_trace") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.84") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.0") (k 0)) (d (n "kitsune_p2p_block") (r "^0.2.0") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.2.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.1-alpha.5") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.1-alpha.7") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "1lqnpjdnim5kc96pv8sfrfg7x18pi5wiwpini3y6d1a6iq64hacr") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("glacial_tests") ("dpki") ("default" "slow_tests" "glacial_tests" "test_utils" "sqlite" "tx2" "tx5") ("chc" "bytes" "reqwest") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.3.0-beta-dev.0 (c (n "holochain") (v "0.3.0-beta-dev.0") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.5") (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.0") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.0") (d #t) (k 1)) (d (n "hdk") (r "^0.3.0-beta-dev.0") (d #t) (k 2)) (d (n "holo_hash") (r "^0.2.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.0") (k 0)) (d (n "holochain_p2p") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_state") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.3.0-beta-dev.0") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.3.0-beta-dev.0") (d #t) (k 2)) (d (n "holochain_trace") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.84") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.0") (k 0)) (d (n "kitsune_p2p_block") (r "^0.2.0") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.2.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.1-alpha.5") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.1-alpha.7") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "0f9l9v7xyikgn31nwmifh0ds7dlfi5na2sil6hrpzshhca4xij7k") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("glacial_tests") ("dpki") ("default" "slow_tests" "glacial_tests" "sqlite" "tx2" "tx5") ("chc" "bytes" "reqwest") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.1.5-beta-rc.1 (c (n "holochain") (v "0.1.5-beta-rc.1") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.1.2-beta-rc.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.1.3-beta-rc.1") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.1.3-beta-rc.1") (d #t) (k 1)) (d (n "hdk") (r "^0.1.3-beta-rc.1") (d #t) (k 2)) (d (n "holo_hash") (r "^0.1.3-beta-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.1.5-beta-rc.1") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.1.5-beta-rc.1") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.1.5-beta-rc.1") (k 0)) (d (n "holochain_p2p") (r "^0.1.5-beta-rc.1") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.1.5-beta-rc.1") (d #t) (k 0)) (d (n "holochain_state") (r "^0.1.5-beta-rc.1") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.1.3-beta-rc.1") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.1.3-beta-rc.1") (d #t) (k 2)) (d (n "holochain_types") (r "^0.1.5-beta-rc.1") (d #t) (k 0)) (d (n "holochain_util") (r "^0.1.1-beta-rc.0") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.1.5-beta-rc.1") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.83") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.1.1-beta-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.1.3-beta-rc.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.1.4-beta-rc.1") (k 0)) (d (n "kitsune_p2p_types") (r "^0.1.3-beta-rc.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.1.1-beta-rc.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.7") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "1rpq11ghk3p4b6yncvg3l05c6iw9xbdba1bw6bp8mvms7i3w20kq") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5") ("tx2" "kitsune_p2p/tx2") ("test_utils" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("sweetest" "test_utils" "no-deps") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/db-encryption" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/no-deps" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "sqlite") ("glacial_tests") ("default" "slow_tests" "glacial_tests" "no-deps" "tx2") ("db-encryption" "sqlite-encrypted") ("chc" "bytes" "reqwest") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.2.1-beta-dev.0 (c (n "holochain") (v "0.2.1-beta-dev.0") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.2.1-beta-dev.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.5") (d #t) (k 0)) (d (n "hdk") (r "^0.2.1-beta-dev.0") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.2.1-beta-dev.0") (d #t) (k 1)) (d (n "hdk") (r "^0.2.1-beta-dev.0") (d #t) (k 2)) (d (n "holo_hash") (r "^0.2.1-beta-dev.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.2.1-beta-dev.0") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.2.1-beta-dev.0") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.1-beta-dev.0") (k 0)) (d (n "holochain_p2p") (r "^0.2.1-beta-dev.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.1-beta-dev.0") (d #t) (k 0)) (d (n "holochain_state") (r "^0.2.1-beta-dev.0") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.2.1-beta-dev.0") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.2.1-beta-dev.0") (d #t) (k 2)) (d (n "holochain_trace") (r "^0.2.1-beta-dev.0") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.1-beta-dev.0") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.1-beta-dev.0") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.2.1-beta-dev.0") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.84") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.1-beta-dev.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.1-beta-dev.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.1-beta-dev.0") (k 0)) (d (n "kitsune_p2p_block") (r "^0.2.1-beta-dev.0") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.1.1-beta-dev.0") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.1-beta-dev.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.2.1-beta-dev.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.1-alpha.7") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.1-alpha.9") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "0lp1fsxvkrjg7wjxjms7r9vncw4viwmb8ba67ac60jqjpqnmwcw6") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("glacial_tests") ("dpki") ("default" "slow_tests" "glacial_tests" "sqlite" "tx2" "tx5") ("chc" "bytes" "reqwest") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.3.0-beta-dev.1 (c (n "holochain") (v "0.3.0-beta-dev.1") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.5") (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.1") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.1") (d #t) (k 1)) (d (n "hdk") (r "^0.3.0-beta-dev.1") (d #t) (k 2)) (d (n "holo_hash") (r "^0.3.0-beta-dev.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.0") (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "holochain_state") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.3.0-beta-dev.1") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.3.0-beta-dev.1") (d #t) (k 2)) (d (n "holochain_trace") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.84") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.0") (k 0)) (d (n "kitsune_p2p_block") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.2.0-beta-dev.0") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.2.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.1-alpha.7") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.1-alpha.9") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "1w534hzj10qzvvf7p971chymcrm8zplbjm7ypb9fvnavsck7y8x9") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("glacial_tests") ("dpki") ("default" "slow_tests" "glacial_tests" "sqlite" "tx2" "tx5") ("chc" "bytes" "reqwest") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.3.0-beta-dev.2 (c (n "holochain") (v "0.3.0-beta-dev.2") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.5") (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.2") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.2") (d #t) (k 1)) (d (n "holo_hash") (r "^0.3.0-beta-dev.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.1") (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_state") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.3.0-beta-dev.2") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.84") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.1") (k 0)) (d (n "kitsune_p2p_block") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.2.0-beta-dev.1") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.2.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.1-alpha.7") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.1-alpha.9") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "1qfyy38jkcm34mvvzpgjaws5hizqg5nlj629kwjwrgcxkqxwsmkz") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "arbitrary" "matches" "itertools" "holochain_test_wasm_common" "unwrap_to") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("glacial_tests") ("dpki") ("default" "slow_tests" "glacial_tests" "sqlite" "tx2" "tx5") ("chc" "bytes" "reqwest") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.3.0-beta-dev.3 (c (n "holochain") (v "0.3.0-beta-dev.3") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.5") (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.3") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.3") (d #t) (k 1)) (d (n "holo_hash") (r "^0.3.0-beta-dev.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.2") (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "holochain_state") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.3.0-beta-dev.3") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.84") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.2") (k 0)) (d (n "kitsune_p2p_block") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.2.0-beta-dev.2") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.2.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.1-alpha.7") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.1-alpha.9") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "14r2qk99q32r6p826k7mxkdxk81mrnrn7nx9ghcyz2y564lypvqm") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "arbitrary" "matches" "itertools" "holochain_test_wasm_common" "unwrap_to") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("glacial_tests") ("dpki") ("default" "slow_tests" "glacial_tests" "sqlite" "tx2" "tx5") ("chc" "bytes" "reqwest") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.1.5 (c (n "holochain") (v "0.1.5") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.1.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.1.3") (d #t) (k 1)) (d (n "hdk") (r "^0.1.3") (d #t) (k 2)) (d (n "holo_hash") (r "^0.1.3") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.1.5") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.1.5") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.1.5") (k 0)) (d (n "holochain_p2p") (r "^0.1.5") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.1.5") (d #t) (k 0)) (d (n "holochain_state") (r "^0.1.5") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.1.3") (d #t) (k 2)) (d (n "holochain_types") (r "^0.1.5") (d #t) (k 0)) (d (n "holochain_util") (r "^0.1.1") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.1.5") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.83") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.1.1") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.1.3") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.1.4") (k 0)) (d (n "kitsune_p2p_types") (r "^0.1.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.1.1") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "1f1j8xs6zndzl7fc8mjl573996vgq2b1m3n9k251ql55pzl6i21b") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5") ("tx2" "kitsune_p2p/tx2") ("test_utils" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("sweetest" "test_utils" "no-deps") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/db-encryption" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/no-deps" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "sqlite") ("glacial_tests") ("default" "slow_tests" "glacial_tests" "no-deps" "tx2") ("db-encryption" "sqlite-encrypted") ("chc" "bytes" "reqwest") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.3.0-beta-dev.4 (c (n "holochain") (v "0.3.0-beta-dev.4") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.5") (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.4") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.4") (d #t) (k 1)) (d (n "holo_hash") (r "^0.3.0-beta-dev.3") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.3.0-beta-dev.4") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.4") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.3") (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "holochain_state") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.3.0-beta-dev.4") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.84") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.3") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.3") (k 0)) (d (n "kitsune_p2p_block") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.2.0-beta-dev.3") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.2.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.1-alpha.7") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.1-alpha.9") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "13fh2lpz5bnzvlmg7r1h8b7b5qz0py84396gsckmzyjr31hw0lpp") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "arbitrary" "matches" "itertools" "holochain_test_wasm_common" "unwrap_to") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("glacial_tests") ("dpki") ("default" "slow_tests" "glacial_tests" "sqlite" "tx2" "tx5") ("chc" "bytes" "reqwest") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.3.0-beta-dev.5 (c (n "holochain") (v "0.3.0-beta-dev.5") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.2.0-dev.3") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.5") (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.5") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.5") (d #t) (k 1)) (d (n "holo_hash") (r "^0.3.0-beta-dev.3") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.3.0-beta-dev.5") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.5") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.4") (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.4") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.4") (d #t) (k 0)) (d (n "holochain_state") (r "^0.3.0-beta-dev.4") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.3.0-beta-dev.5") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.4") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.3.0-beta-dev.4") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.84") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.4") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.4") (k 0)) (d (n "kitsune_p2p_block") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.2.0-beta-dev.3") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.2.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.1-alpha.7") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.1-alpha.9") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "1n7yi3nn64r12b4y5sdw0xzw1gc0346640wxz41vg2ld3bbr2cps") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "arbitrary" "matches" "itertools" "holochain_test_wasm_common" "unwrap_to") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("glacial_tests") ("dpki") ("default" "slow_tests" "glacial_tests" "sqlite" "tx2" "tx5") ("chc" "bytes" "reqwest") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.3.0-beta-dev.6 (c (n "holochain") (v "0.3.0-beta-dev.6") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.2.0-dev.3") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.5") (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.5") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.5") (d #t) (k 1)) (d (n "holo_hash") (r "^0.3.0-beta-dev.3") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.3.0-beta-dev.6") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.6") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.5") (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.5") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.5") (d #t) (k 0)) (d (n "holochain_state") (r "^0.3.0-beta-dev.5") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.3.0-beta-dev.5") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.5") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.3.0-beta-dev.5") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.84") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.4") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.5") (k 0)) (d (n "kitsune_p2p_block") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.2.0-beta-dev.4") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.2.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.1-alpha.7") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.1-alpha.9") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "0magp55qcyrbysigs4ih4baibdn0h3vx6xh0bw0b3hj3yf8s8zjw") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "arbitrary" "matches" "itertools" "holochain_test_wasm_common" "unwrap_to") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("glacial_tests") ("dpki") ("default" "slow_tests" "glacial_tests" "sqlite" "tx2" "tx5") ("chc" "bytes" "reqwest") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.3.0-beta-dev.7 (c (n "holochain") (v "0.3.0-beta-dev.7") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.2.0-dev.3") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.6") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.6") (d #t) (k 1)) (d (n "holo_hash") (r "^0.3.0-beta-dev.4") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.3.0-beta-dev.7") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.7") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.6") (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.6") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.6") (d #t) (k 0)) (d (n "holochain_state") (r "^0.3.0-beta-dev.6") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.3.0-beta-dev.6") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.6") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.3.0-beta-dev.6") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.84") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.5") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.6") (k 0)) (d (n "kitsune_p2p_block") (r "^0.3.0-beta-dev.4") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.2.0-beta-dev.5") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.2.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.1-alpha.7") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.1-alpha.9") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "04ldqjybc43mgsha4jv2r1a1p6wpbbx8krf5ddb07zmscz0hxbv7") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "arbitrary" "matches" "itertools" "holochain_test_wasm_common" "unwrap_to") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("glacial_tests") ("dpki") ("default" "slow_tests" "glacial_tests" "sqlite" "tx2" "tx5") ("chc" "bytes" "reqwest") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.3.0-beta-dev.8 (c (n "holochain") (v "0.3.0-beta-dev.8") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.7") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.7") (d #t) (k 1)) (d (n "holo_hash") (r "^0.3.0-beta-dev.4") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.3.0-beta-dev.8") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.8") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.7") (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.7") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.7") (d #t) (k 0)) (d (n "holochain_state") (r "^0.3.0-beta-dev.7") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.3.0-beta-dev.7") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.7") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.3.0-beta-dev.7") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.84") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.6") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.7") (k 0)) (d (n "kitsune_p2p_block") (r "^0.3.0-beta-dev.4") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.2.0-beta-dev.5") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.2.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.1-alpha.7") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.1-alpha.9") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "08x8w1lsadrwiyq3rqy8vklrsx4bpmwip5al54i1w7yqc5a40pvy") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "arbitrary" "matches" "itertools" "holochain_test_wasm_common" "unwrap_to") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("glacial_tests") ("dpki") ("default" "slow_tests" "glacial_tests" "sqlite" "tx2" "tx5") ("chc" "bytes" "reqwest") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.3.0-beta-dev.9 (c (n "holochain") (v "0.3.0-beta-dev.9") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.8") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.8") (d #t) (k 1)) (d (n "holo_hash") (r "^0.3.0-beta-dev.4") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.3.0-beta-dev.9") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.9") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.7") (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.8") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.8") (d #t) (k 0)) (d (n "holochain_state") (r "^0.3.0-beta-dev.8") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.3.0-beta-dev.8") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.8") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.3.0-beta-dev.8") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.84") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.6") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.7") (k 0)) (d (n "kitsune_p2p_block") (r "^0.3.0-beta-dev.4") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.2.0-beta-dev.5") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.2.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.1-alpha.7") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.1-alpha.9") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "0vg1qc0n73hlz3qdlfacxjyx6ng9n1sxh385v5v5xd9zz3hspw5c") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "arbitrary" "matches" "itertools" "holochain_test_wasm_common" "unwrap_to") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("glacial_tests") ("dpki") ("default" "slow_tests" "glacial_tests" "sqlite" "tx2" "tx5") ("chc" "bytes" "reqwest") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.2.1-beta-rc.0 (c (n "holochain") (v "0.2.1-beta-rc.0") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.2.0-dev.3") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.2.1-beta-rc.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hdk") (r "^0.2.1-beta-rc.0") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.2.1-beta-rc.0") (d #t) (k 1)) (d (n "holo_hash") (r "^0.2.1-beta-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.2.1-beta-rc.0") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.2.1-beta-rc.0") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.1-beta-rc.0") (k 0)) (d (n "holochain_p2p") (r "^0.2.1-beta-rc.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.1-beta-rc.0") (d #t) (k 0)) (d (n "holochain_state") (r "^0.2.1-beta-rc.0") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.2.1-beta-rc.0") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.1-beta-rc.0") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.1-beta-rc.0") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.1-beta-rc.0") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.2.1-beta-rc.0") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.84") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.1-beta-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.1-beta-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.1-beta-rc.0") (k 0)) (d (n "kitsune_p2p_block") (r "^0.2.1-beta-rc.0") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.1.1-beta-rc.0") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.1-beta-rc.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.2.1-beta-rc.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.1-alpha.7") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.1-alpha.9") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "0gia2d78w54r26416pbbwq3z1ynjag9pdcpvhg4giqnnzqbps5nn") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "arbitrary" "matches" "itertools" "holochain_test_wasm_common" "unwrap_to") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("glacial_tests") ("dpki") ("default" "slow_tests" "glacial_tests" "sqlite" "tx2" "tx5") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.3.0-beta-dev.10 (c (n "holochain") (v "0.3.0-beta-dev.10") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.2.0-dev.3") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.9") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.9") (d #t) (k 1)) (d (n "holo_hash") (r "^0.3.0-beta-dev.5") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.3.0-beta-dev.10") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.10") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.8") (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.9") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.9") (d #t) (k 0)) (d (n "holochain_state") (r "^0.3.0-beta-dev.9") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.3.0-beta-dev.9") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.9") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.3.0-beta-dev.9") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.84") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.8") (k 0)) (d (n "kitsune_p2p_block") (r "^0.3.0-beta-dev.4") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.2.0-beta-dev.5") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.2.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.1-alpha.7") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.1-alpha.9") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "1wmlh5i6l7mb9l41jwfdwg7zbn6hm9fi42xmnfkpac388pi6yiqs") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "arbitrary" "matches" "itertools" "holochain_test_wasm_common" "unwrap_to") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("glacial_tests") ("dpki") ("default" "slow_tests" "glacial_tests" "sqlite" "tx2" "tx5") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.2.1 (c (n "holochain") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.2.0-dev.3") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.2.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hdk") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.2.1") (d #t) (k 1)) (d (n "holo_hash") (r "^0.2.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.2.1") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.2.1") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.1") (k 0)) (d (n "holochain_p2p") (r "^0.2.1") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.1") (d #t) (k 0)) (d (n "holochain_state") (r "^0.2.1") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.1") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.1") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.2.1") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.84") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.1") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.1") (k 0)) (d (n "kitsune_p2p_block") (r "^0.2.1") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.2.1") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.1-alpha.7") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.1-alpha.9") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "12d7alysb0ipws38v7i6ki9shmzabzdirgmv5p7rswwn812d05v7") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "arbitrary" "matches" "itertools" "holochain_test_wasm_common" "unwrap_to") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("glacial_tests") ("dpki") ("default" "slow_tests" "glacial_tests" "sqlite" "tx2" "tx5") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.3.0-beta-dev.11 (c (n "holochain") (v "0.3.0-beta-dev.11") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.2.0-dev.3") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.10") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.10") (d #t) (k 1)) (d (n "holo_hash") (r "^0.3.0-beta-dev.6") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.3.0-beta-dev.11") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.11") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.9") (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.10") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.10") (d #t) (k 0)) (d (n "holochain_state") (r "^0.3.0-beta-dev.10") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.3.0-beta-dev.10") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.10") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.3.0-beta-dev.10") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.84") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.8") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.8") (k 0)) (d (n "kitsune_p2p_block") (r "^0.3.0-beta-dev.4") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.2.0-beta-dev.5") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.2.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.1-alpha.7") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.1-alpha.9") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "1hn1caaby93wypqf38h5vsj1ramdaj5b9sz8wahyh8s2ll4hjkk5") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "arbitrary" "matches" "itertools" "holochain_test_wasm_common" "unwrap_to") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("glacial_tests") ("dpki") ("default" "slow_tests" "glacial_tests" "sqlite" "tx2" "tx5") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.3.0-beta-dev.12 (c (n "holochain") (v "0.3.0-beta-dev.12") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.2.0-dev.3") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.11") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.11") (d #t) (k 1)) (d (n "holo_hash") (r "^0.3.0-beta-dev.6") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.3.0-beta-dev.12") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.12") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.9") (k 0)) (d (n "holochain_metrics") (r "^0.3.0-beta-dev.2") (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.11") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.11") (d #t) (k 0)) (d (n "holochain_state") (r "^0.3.0-beta-dev.11") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.3.0-beta-dev.11") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.11") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.3.0-beta-dev.11") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.84") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.8") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.9") (k 0)) (d (n "kitsune_p2p_block") (r "^0.3.0-beta-dev.4") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.2.0-beta-dev.5") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.2.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.1-alpha.7") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.1-alpha.9") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "0cjhcp30cx3j6p6l0w8qblr2jlwpa5p9vh9hggk9nxhir59x16zm") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "arbitrary" "matches" "itertools" "holochain_test_wasm_common" "unwrap_to") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("metrics_influxive" "holochain_metrics/influxive") ("glacial_tests") ("dpki") ("default" "slow_tests" "glacial_tests" "sqlite" "tx2" "tx5" "metrics_influxive") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.3.0-beta-dev.13 (c (n "holochain") (v "0.3.0-beta-dev.13") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.2.0-dev.3") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.12") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.12") (d #t) (k 1)) (d (n "holo_hash") (r "^0.3.0-beta-dev.6") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.3.0-beta-dev.13") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.13") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.10") (k 0)) (d (n "holochain_metrics") (r "^0.3.0-beta-dev.3") (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.12") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.12") (d #t) (k 0)) (d (n "holochain_state") (r "^0.3.0-beta-dev.12") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.3.0-beta-dev.12") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.12") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.3.0-beta-dev.12") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.84") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.9") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.10") (k 0)) (d (n "kitsune_p2p_block") (r "^0.3.0-beta-dev.5") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.2.0-beta-dev.6") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.2.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.13") (d #t) (k 2)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.1-alpha.7") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.1-alpha.9") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "06csb64455rgnn24yiw0nqziiqil4m7msiz6l737ihnsyipg72wj") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "arbitrary" "matches" "itertools" "holochain_test_wasm_common" "unwrap_to") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("metrics_influxive" "holochain_metrics/influxive") ("glacial_tests") ("dpki") ("default" "slow_tests" "glacial_tests" "sqlite" "tx2" "tx5" "metrics_influxive") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.3.0-beta-dev.15 (c (n "holochain") (v "0.3.0-beta-dev.15") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.2.0-dev.3") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.13") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.13") (d #t) (k 1)) (d (n "holo_hash") (r "^0.3.0-beta-dev.6") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.3.0-beta-dev.15") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.15") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.11") (k 0)) (d (n "holochain_metrics") (r "^0.3.0-beta-dev.3") (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.14") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.13") (d #t) (k 0)) (d (n "holochain_state") (r "^0.3.0-beta-dev.14") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.3.0-beta-dev.13") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.13") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.3.0-beta-dev.13") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.84") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.10") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.12") (k 0)) (d (n "kitsune_p2p_block") (r "^0.3.0-beta-dev.5") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.2.0-beta-dev.7") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.2.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.13") (d #t) (k 2)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.2-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.2-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "0fjnli4s98jz3ks9f50449hgghs8q6xbk3hmwssk2saccjlw5qy6") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "arbitrary" "matches" "itertools" "holochain_test_wasm_common" "unwrap_to") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("metrics_influxive" "holochain_metrics/influxive") ("glacial_tests") ("dpki") ("default" "slow_tests" "glacial_tests" "sqlite" "tx2" "tx5" "metrics_influxive") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.1.6-beta-rc.0 (c (n "holochain") (v "0.1.6-beta-rc.0") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.1.3-beta-rc.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.1.4-beta-rc.0") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.1.4-beta-rc.0") (d #t) (k 1)) (d (n "hdk") (r "^0.1.4-beta-rc.0") (d #t) (k 2)) (d (n "holo_hash") (r "^0.1.4-beta-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.1.6-beta-rc.0") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.1.6-beta-rc.0") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.1.6-beta-rc.0") (k 0)) (d (n "holochain_p2p") (r "^0.1.6-beta-rc.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.1.6-beta-rc.0") (d #t) (k 0)) (d (n "holochain_state") (r "^0.1.6-beta-rc.0") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.1.4-beta-rc.0") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.1.4-beta-rc.0") (d #t) (k 2)) (d (n "holochain_types") (r "^0.1.6-beta-rc.0") (d #t) (k 0)) (d (n "holochain_util") (r "^0.1.1") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.1.6-beta-rc.0") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.83") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.1.1") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.1.4-beta-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.1.5-beta-rc.0") (k 0)) (d (n "kitsune_p2p_types") (r "^0.1.4-beta-rc.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.1.1") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "1i4m9a39mdccrasbpxqbyawblb0nb7sj0rvzrbb09y66ky73rdw9") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx2" "kitsune_p2p/tx2") ("test_utils" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("sweetest" "test_utils" "no-deps") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/db-encryption" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/no-deps" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "sqlite") ("glacial_tests") ("default" "slow_tests" "glacial_tests" "no-deps" "tx2") ("db-encryption" "sqlite-encrypted") ("chc" "bytes" "reqwest") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.1.6 (c (n "holochain") (v "0.1.6") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.1.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.1.4") (d #t) (k 1)) (d (n "hdk") (r "^0.1.4") (d #t) (k 2)) (d (n "holo_hash") (r "^0.1.4") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.1.6") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.1.6") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.1.6") (k 0)) (d (n "holochain_p2p") (r "^0.1.6") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.1.6") (d #t) (k 0)) (d (n "holochain_state") (r "^0.1.6") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.1.4") (d #t) (k 2)) (d (n "holochain_types") (r "^0.1.6") (d #t) (k 0)) (d (n "holochain_util") (r "^0.1.2") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.1.6") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.83") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.1.2") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.1.4") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.1.5") (k 0)) (d (n "kitsune_p2p_types") (r "^0.1.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.1.2") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "0mxkvz0yrx6nhyfs07299n34xq5msrsq5gvqfj60nblfw28zlxf8") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx2" "kitsune_p2p/tx2") ("test_utils" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("sweetest" "test_utils" "no-deps") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/db-encryption" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/no-deps" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "sqlite") ("glacial_tests") ("default" "slow_tests" "glacial_tests" "no-deps" "tx2") ("db-encryption" "sqlite-encrypted") ("chc" "bytes" "reqwest") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.3.0-beta-dev.16 (c (n "holochain") (v "0.3.0-beta-dev.16") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.2.0-dev.3") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.13") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.13") (d #t) (k 1)) (d (n "holo_hash") (r "^0.3.0-beta-dev.6") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.3.0-beta-dev.16") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.16") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.11") (k 0)) (d (n "holochain_metrics") (r "^0.3.0-beta-dev.3") (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.15") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.13") (d #t) (k 0)) (d (n "holochain_state") (r "^0.3.0-beta-dev.15") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.3.0-beta-dev.13") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.13") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.3.0-beta-dev.14") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.84") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.10") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.13") (k 0)) (d (n "kitsune_p2p_block") (r "^0.3.0-beta-dev.5") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.2.0-beta-dev.7") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.2.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.13") (d #t) (k 2)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.2-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.2-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "1zgf40k94b5yhc2acp6ax2njnzl23cnky67sacbx4jiicwnm9h71") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "arbitrary" "matches" "itertools" "holochain_test_wasm_common" "unwrap_to") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("metrics_influxive" "holochain_metrics/influxive") ("glacial_tests") ("dpki") ("default" "slow_tests" "glacial_tests" "sqlite" "tx2" "tx5" "metrics_influxive") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.2.2-beta-rc.0 (c (n "holochain") (v "0.2.2-beta-rc.0") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.2.0-dev.3") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.2.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hdk") (r "^0.2.2-beta-rc.0") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.2.2-beta-rc.0") (d #t) (k 1)) (d (n "holo_hash") (r "^0.2.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.2.2-beta-rc.0") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.2.2-beta-rc.0") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.2-beta-rc.0") (k 0)) (d (n "holochain_p2p") (r "^0.2.2-beta-rc.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.2-beta-rc.0") (d #t) (k 0)) (d (n "holochain_state") (r "^0.2.2-beta-rc.0") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.2.2-beta-rc.0") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.2-beta-rc.0") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.1") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.2.2-beta-rc.0") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.84") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.1") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.2-beta-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.2-beta-rc.0") (k 0)) (d (n "kitsune_p2p_block") (r "^0.2.1") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.1.2-beta-rc.0") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.2-beta-rc.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.2.1") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.2-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.2-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "1l7i7myj6j9wbhdfbpl67kkl17jgywd69d2q69hhszaivpyy1sqv") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "arbitrary" "matches" "itertools" "holochain_test_wasm_common" "unwrap_to") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("glacial_tests") ("dpki") ("default" "slow_tests" "glacial_tests" "sqlite" "tx2" "tx5") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.2.2-beta-rc.1 (c (n "holochain") (v "0.2.2-beta-rc.1") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.2.0-dev.3") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.2.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hdk") (r "^0.2.2-beta-rc.1") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.2.2-beta-rc.1") (d #t) (k 1)) (d (n "holo_hash") (r "^0.2.2-beta-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.2.2-beta-rc.1") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.2.2-beta-rc.1") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.2-beta-rc.1") (k 0)) (d (n "holochain_p2p") (r "^0.2.2-beta-rc.1") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.2-beta-rc.1") (d #t) (k 0)) (d (n "holochain_state") (r "^0.2.2-beta-rc.1") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.2.2-beta-rc.1") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.2-beta-rc.1") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.2-beta-rc.0") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.2.2-beta-rc.1") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.84") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.1") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.2-beta-rc.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.2-beta-rc.1") (k 0)) (d (n "kitsune_p2p_block") (r "^0.2.2-beta-rc.0") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.1.2-beta-rc.1") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.2-beta-rc.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.2.2-beta-rc.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.2-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.2-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "1p1f9q29v59fcs03brqvlbgcciwpkc3b271imc1lqw29vwsnsg29") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("glacial_tests") ("dpki") ("default" "slow_tests" "glacial_tests" "sqlite" "tx2" "tx5" "chc") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.2.2-beta-rc.2 (c (n "holochain") (v "0.2.2-beta-rc.2") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.2.0-dev.3") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.2.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hdk") (r "^0.2.2-beta-rc.1") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.2.2-beta-rc.1") (d #t) (k 1)) (d (n "holo_hash") (r "^0.2.2-beta-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.2.2-beta-rc.1") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.2.2-beta-rc.1") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.2-beta-rc.1") (k 0)) (d (n "holochain_p2p") (r "^0.2.2-beta-rc.1") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.2-beta-rc.1") (d #t) (k 0)) (d (n "holochain_state") (r "^0.2.2-beta-rc.1") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.2.2-beta-rc.1") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.2-beta-rc.1") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.2-beta-rc.0") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.2.2-beta-rc.1") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.84") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.1") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.2-beta-rc.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.2-beta-rc.1") (k 0)) (d (n "kitsune_p2p_block") (r "^0.2.2-beta-rc.0") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.1.2-beta-rc.1") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.2-beta-rc.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.2.2-beta-rc.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.2-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.2-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "1sr73sxba3jz7dzhkyzxzqhrsacnrjwjmcmz3r76dbddj5g01pdx") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("glacial_tests") ("dpki") ("default" "slow_tests" "glacial_tests" "sqlite" "tx2" "tx5") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.2.2-beta-rc.3 (c (n "holochain") (v "0.2.2-beta-rc.3") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.2.0-dev.3") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.2.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hdk") (r "^0.2.2-beta-rc.1") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.2.2-beta-rc.1") (d #t) (k 1)) (d (n "holo_hash") (r "^0.2.2-beta-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.2.2-beta-rc.2") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.2.2-beta-rc.2") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.2-beta-rc.1") (k 0)) (d (n "holochain_p2p") (r "^0.2.2-beta-rc.2") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.2-beta-rc.1") (d #t) (k 0)) (d (n "holochain_state") (r "^0.2.2-beta-rc.2") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.2.2-beta-rc.1") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.2-beta-rc.2") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.2-beta-rc.0") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.2.2-beta-rc.2") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.84") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.1") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.2-beta-rc.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.2-beta-rc.1") (k 0)) (d (n "kitsune_p2p_block") (r "^0.2.2-beta-rc.0") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.1.2-beta-rc.1") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.2-beta-rc.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.2.2-beta-rc.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.2-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.2-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "03ckcnzr25a9adivffvh5ng0naa9avwczq4nkf23zy9s45z96xpi") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("glacial_tests") ("dpki") ("default" "slow_tests" "glacial_tests" "sqlite" "tx2" "tx5") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.3.0-beta-dev.17 (c (n "holochain") (v "0.3.0-beta-dev.17") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-once-cell") (r "^0.5") (d #t) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.14") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.14") (d #t) (k 1)) (d (n "holo_hash") (r "^0.3.0-beta-dev.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.3.0-beta-dev.17") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.17") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.12") (k 0)) (d (n "holochain_metrics") (r "^0.3.0-beta-dev.3") (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.16") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.14") (d #t) (k 0)) (d (n "holochain_state") (r "^0.3.0-beta-dev.16") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.3.0-beta-dev.14") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.14") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.0") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.3.0-beta-dev.15") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.84") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.14") (k 0)) (d (n "kitsune_p2p_block") (r "^0.3.0-beta-dev.6") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.2.0-beta-dev.8") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (f (quote ("quickcheck" "stable_graph"))) (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.13") (d #t) (k 2)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.2-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.2-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "1zfjvmswk6mjys8dkjgmqc643bh526x4w93wp6d4zmlbmjf3h4i4") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to" "contrafact") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("metrics_influxive" "holochain_metrics/influxive") ("glacial_tests") ("dpki") ("default" "slow_tests" "glacial_tests" "sqlite" "tx2" "tx5" "metrics_influxive") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.2.2 (c (n "holochain") (v "0.2.2") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.2.0-dev.3") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.2.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hdk") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.2.2") (d #t) (k 1)) (d (n "holo_hash") (r "^0.2.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.2.2") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.2.2") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.2") (k 0)) (d (n "holochain_p2p") (r "^0.2.2") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.2") (d #t) (k 0)) (d (n "holochain_state") (r "^0.2.2") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.2") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.2") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.2") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.2.2") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.84") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.2") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.2") (k 0)) (d (n "kitsune_p2p_block") (r "^0.2.2") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.2.2") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.2-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.2-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "1n3q841203anf652sjar8i4c40fs8ihzmghn9ck14jg6skkg4mvm") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("glacial_tests") ("dpki") ("default" "slow_tests" "glacial_tests" "sqlite" "tx2" "tx5") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.3.0-beta-dev.18 (c (n "holochain") (v "0.3.0-beta-dev.18") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-once-cell") (r "^0.5") (d #t) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.15") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.15") (d #t) (k 1)) (d (n "holo_hash") (r "^0.3.0-beta-dev.8") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.3.0-beta-dev.18") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.18") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.13") (k 0)) (d (n "holochain_metrics") (r "^0.3.0-beta-dev.3") (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.17") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.15") (d #t) (k 0)) (d (n "holochain_state") (r "^0.3.0-beta-dev.17") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.3.0-beta-dev.15") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.15") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.0") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.3.0-beta-dev.16") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.84") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.15") (k 0)) (d (n "kitsune_p2p_block") (r "^0.3.0-beta-dev.7") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.2.0-beta-dev.9") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (f (quote ("quickcheck" "stable_graph"))) (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.13") (d #t) (k 2)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.2-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.2-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "0dbx7n9g44ajrc8lyv0nk5wx2xmd82qanyy21icvcm6pdrjwjnn5") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to" "contrafact") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("metrics_influxive" "holochain_metrics/influxive") ("glacial_tests") ("dpki") ("default" "slow_tests" "glacial_tests" "sqlite" "tx2" "tx5" "metrics_influxive") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.2.3-beta-rc.0 (c (n "holochain") (v "0.2.3-beta-rc.0") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.2.0-dev.3") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.2.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hdk") (r "^0.2.3-beta-rc.0") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.2.3-beta-rc.0") (d #t) (k 1)) (d (n "holo_hash") (r "^0.2.3-beta-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.2.3-beta-rc.0") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.2.3-beta-rc.0") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.3-beta-rc.0") (k 0)) (d (n "holochain_p2p") (r "^0.2.3-beta-rc.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.3-beta-rc.0") (d #t) (k 0)) (d (n "holochain_state") (r "^0.2.3-beta-rc.0") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.2.3-beta-rc.0") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.2") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.3-beta-rc.0") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.2") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.2.3-beta-rc.0") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.84") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.2") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.3-beta-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.3-beta-rc.0") (k 0)) (d (n "kitsune_p2p_block") (r "^0.2.3-beta-rc.0") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.1.3-beta-rc.0") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.3-beta-rc.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.2.2") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.2-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.2-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "1j74xqzqxvnb129vji1gazqc8mgyfvggkc2zvwb1bci5a28qrr16") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("glacial_tests") ("dpki") ("default" "slow_tests" "glacial_tests" "sqlite" "tx2" "tx5") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.3.0-beta-dev.19 (c (n "holochain") (v "0.3.0-beta-dev.19") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-once-cell") (r "^0.5") (d #t) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.15") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.15") (d #t) (k 1)) (d (n "holo_hash") (r "^0.3.0-beta-dev.8") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.3.0-beta-dev.19") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.19") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.13") (k 0)) (d (n "holochain_metrics") (r "^0.3.0-beta-dev.3") (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.18") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.16") (d #t) (k 0)) (d (n "holochain_state") (r "^0.3.0-beta-dev.18") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.3.0-beta-dev.15") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.16") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.0") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.3.0-beta-dev.17") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.84") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.16") (k 0)) (d (n "kitsune_p2p_block") (r "^0.3.0-beta-dev.7") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.2.0-beta-dev.9") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (f (quote ("quickcheck" "stable_graph"))) (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.13") (d #t) (k 2)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.2-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.2-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "1ikw8jvhfdhh75zyrb9p0zrjvlw1q98fn1nsq71bappj29430jy0") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to" "contrafact") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("metrics_influxive" "holochain_metrics/influxive") ("glacial_tests") ("dpki") ("default" "slow_tests" "glacial_tests" "sqlite" "tx2" "tx5" "metrics_influxive") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.2.3-beta-rc.1 (c (n "holochain") (v "0.2.3-beta-rc.1") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.2.0-dev.3") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.2.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hdk") (r "^0.2.3-beta-rc.0") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.2.3-beta-rc.0") (d #t) (k 1)) (d (n "holo_hash") (r "^0.2.3-beta-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.2.3-beta-rc.0") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.2.3-beta-rc.1") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.3-beta-rc.0") (k 0)) (d (n "holochain_p2p") (r "^0.2.3-beta-rc.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.3-beta-rc.0") (d #t) (k 0)) (d (n "holochain_state") (r "^0.2.3-beta-rc.0") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.2.3-beta-rc.0") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.2") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.3-beta-rc.0") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.2") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.2.3-beta-rc.0") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.84") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.2") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.3-beta-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.3-beta-rc.0") (k 0)) (d (n "kitsune_p2p_block") (r "^0.2.3-beta-rc.0") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.1.3-beta-rc.0") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.3-beta-rc.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.2.2") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.2-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.2-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "1d28p3bc6ak2c3m9ycs0nndqpf9n3b85xka2ddyh999yc5rr3fjr") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("glacial_tests") ("dpki") ("default" "slow_tests" "glacial_tests" "sqlite" "tx2" "tx5") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.3.0-beta-dev.20 (c (n "holochain") (v "0.3.0-beta-dev.20") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-once-cell") (r "^0.5") (d #t) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.16") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.16") (d #t) (k 1)) (d (n "holo_hash") (r "^0.3.0-beta-dev.9") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.3.0-beta-dev.20") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.20") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.14") (k 0)) (d (n "holochain_metrics") (r "^0.3.0-beta-dev.3") (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.19") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.17") (d #t) (k 0)) (d (n "holochain_state") (r "^0.3.0-beta-dev.19") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.3.0-beta-dev.16") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.17") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.1") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.3.0-beta-dev.18") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.85") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.0-beta-dev.4") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.17") (k 0)) (d (n "kitsune_p2p_block") (r "^0.3.0-beta-dev.8") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.2.0-beta-dev.10") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (f (quote ("quickcheck" "stable_graph"))) (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.13") (d #t) (k 2)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.3-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.3-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "03c0piqabkjpi8k0nzky4jyr5lzvm7fhchnza5f4pb2q08q4j3yl") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "holochain_cascade/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to" "contrafact") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("metrics_influxive" "holochain_metrics/influxive") ("glacial_tests") ("dpki") ("default" "slow_tests" "glacial_tests" "sqlite" "tx2" "tx5" "metrics_influxive") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.1.7-rc.0 (c (n "holochain") (v "0.1.7-rc.0") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.1.4-rc.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.1.5-rc.0") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.1.5-rc.0") (d #t) (k 1)) (d (n "hdk") (r "^0.1.5-rc.0") (d #t) (k 2)) (d (n "holo_hash") (r "^0.1.5-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.1.7-rc.0") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.1.7-rc.0") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.1.7-rc.0") (k 0)) (d (n "holochain_p2p") (r "^0.1.7-rc.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.1.7-rc.0") (d #t) (k 0)) (d (n "holochain_state") (r "^0.1.7-rc.0") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.1.5-rc.0") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.1.5-rc.0") (d #t) (k 2)) (d (n "holochain_types") (r "^0.1.7-rc.0") (d #t) (k 0)) (d (n "holochain_util") (r "^0.1.3-rc.0") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.1.7-rc.0") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.83") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.1.3-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.1.5-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.1.6-rc.0") (k 0)) (d (n "kitsune_p2p_types") (r "^0.1.5-rc.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.1.3-rc.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "05xizxm4gng8kpm320j1kfv2gbzbarhgmm30qqr6a1v5vcg07c1q") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx2" "kitsune_p2p/tx2") ("test_utils" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("sweetest" "test_utils" "no-deps") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/db-encryption" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/no-deps" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "sqlite") ("glacial_tests") ("default" "slow_tests" "glacial_tests" "no-deps" "tx2") ("db-encryption" "sqlite-encrypted") ("chc" "bytes" "reqwest") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.3.0-beta-dev.21 (c (n "holochain") (v "0.3.0-beta-dev.21") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-once-cell") (r "^0.5") (d #t) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "clap") (r "^4.0") (d #t) (k 2)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.17") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.17") (d #t) (k 1)) (d (n "holo_hash") (r "^0.3.0-beta-dev.10") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.3.0-beta-dev.21") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.21") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.15") (k 0)) (d (n "holochain_metrics") (r "^0.3.0-beta-dev.3") (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.20") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.20") (d #t) (k 0)) (d (n "holochain_secure_primitive") (r "^0.3.0-beta-dev.20") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.18") (d #t) (k 0)) (d (n "holochain_state") (r "^0.3.0-beta-dev.20") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.3.0-beta-dev.17") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.18") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.2") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.3.0-beta-dev.19") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.85") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.0-beta-dev.4") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.18") (k 0)) (d (n "kitsune_p2p_bin_data") (r "^0.3.0-beta-dev.8") (d #t) (k 0)) (d (n "kitsune_p2p_block") (r "^0.3.0-beta-dev.9") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.2.0-beta-dev.11") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap_client") (r "^0.3.0-beta-dev.17") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.11") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (f (quote ("quickcheck" "stable_graph"))) (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.13") (d #t) (k 2)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.3-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.3-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "0g83fgd5j6pxpmjsxld1fglk1wn2q2mp4sfdzvg6xw6423yba504") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "holochain_cascade/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "kitsune_p2p_bin_data/fixt" "kitsune_p2p_types/fixt" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to" "contrafact") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("metrics_influxive" "holochain_metrics/influxive") ("glacial_tests") ("dpki") ("default" "slow_tests" "glacial_tests" "sqlite" "tx2" "tx5" "metrics_influxive") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.3.0-beta-dev.22 (c (n "holochain") (v "0.3.0-beta-dev.22") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-once-cell") (r "^0.5") (d #t) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "clap") (r "^4.0") (d #t) (k 2)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.17") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.17") (d #t) (k 1)) (d (n "holo_hash") (r "^0.3.0-beta-dev.10") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.15") (k 0)) (d (n "holochain_metrics") (r "^0.3.0-beta-dev.4") (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.20") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.21") (d #t) (k 0)) (d (n "holochain_secure_primitive") (r "^0.3.0-beta-dev.20") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.19") (d #t) (k 0)) (d (n "holochain_state") (r "^0.3.0-beta-dev.21") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.3.0-beta-dev.17") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.19") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.2") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.3.0-beta-dev.20") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.85") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.0-beta-dev.4") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.19") (k 0)) (d (n "kitsune_p2p_bin_data") (r "^0.3.0-beta-dev.8") (d #t) (k 0)) (d (n "kitsune_p2p_block") (r "^0.3.0-beta-dev.9") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.2.0-beta-dev.11") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap_client") (r "^0.3.0-beta-dev.17") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.11") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (f (quote ("quickcheck" "stable_graph"))) (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.13") (d #t) (k 2)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.3-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.3-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "1vl62brsm1bjd5kmnl1df8rcmdqpqzxb0sf23mhlm32zjaizxwmk") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "holochain_cascade/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "kitsune_p2p_bin_data/fixt" "kitsune_p2p_types/fixt" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to" "contrafact") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("metrics_influxive" "holochain_metrics/influxive") ("glacial_tests") ("dpki") ("default" "slow_tests" "glacial_tests" "sqlite" "tx2" "tx5" "metrics_influxive") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.1.7 (c (n "holochain") (v "0.1.7") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.1.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.1.5") (d #t) (k 1)) (d (n "hdk") (r "^0.1.5") (d #t) (k 2)) (d (n "holo_hash") (r "^0.1.5") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.1.7") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.1.7") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.1.7") (k 0)) (d (n "holochain_p2p") (r "^0.1.7") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.1.7") (d #t) (k 0)) (d (n "holochain_state") (r "^0.1.7") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.1.5") (d #t) (k 2)) (d (n "holochain_types") (r "^0.1.7") (d #t) (k 0)) (d (n "holochain_util") (r "^0.1.3") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.1.7") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.83") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.1.3") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.1.5") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.1.6") (k 0)) (d (n "kitsune_p2p_types") (r "^0.1.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.1.3") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "1n1bkbf2lry89p22hr90rrriqa7rm348jfv8iqcfpkn53hmsadfw") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx2" "kitsune_p2p/tx2") ("test_utils" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("sweetest" "test_utils" "no-deps") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/db-encryption" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/no-deps" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "sqlite") ("glacial_tests") ("default" "slow_tests" "glacial_tests" "no-deps" "tx2") ("db-encryption" "sqlite-encrypted") ("chc" "bytes" "reqwest") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.3.0-beta-dev.23 (c (n "holochain") (v "0.3.0-beta-dev.23") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-once-cell") (r "^0.5") (d #t) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "clap") (r "^4.0") (d #t) (k 2)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.18") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.18") (d #t) (k 1)) (d (n "holo_hash") (r "^0.3.0-beta-dev.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.3.0-beta-dev.23") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.23") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.16") (k 0)) (d (n "holochain_metrics") (r "^0.3.0-beta-dev.5") (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.21") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "holochain_secure_primitive") (r "^0.3.0-beta-dev.20") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.20") (d #t) (k 0)) (d (n "holochain_state") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.3.0-beta-dev.18") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.20") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.2") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.3.0-beta-dev.21") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.85") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.0-beta-dev.4") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.15") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.20") (k 0)) (d (n "kitsune_p2p_bin_data") (r "^0.3.0-beta-dev.9") (d #t) (k 0)) (d (n "kitsune_p2p_block") (r "^0.3.0-beta-dev.10") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.2.0-beta-dev.12") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap_client") (r "^0.3.0-beta-dev.18") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (f (quote ("quickcheck" "stable_graph"))) (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.13") (d #t) (k 2)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.4-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.4-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "0lqdsjgyjss3cvfp4w0mj7v850vk63ckxsk84cqw2y5qg6qsi8w1") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "holochain_cascade/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "kitsune_p2p_bin_data/fixt" "kitsune_p2p_types/fixt" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to" "contrafact") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("metrics_influxive" "holochain_metrics/influxive") ("glacial_tests") ("dpki") ("default" "slow_tests" "glacial_tests" "sqlite" "tx2" "tx5" "metrics_influxive") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.2.3-rc.0 (c (n "holochain") (v "0.2.3-rc.0") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.2.0-dev.3") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.2.3-rc.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hdk") (r "^0.2.3-rc.0") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.2.3-rc.0") (d #t) (k 1)) (d (n "holo_hash") (r "^0.2.3-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.2.3-rc.0") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.2.3-rc.0") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.3-rc.0") (k 0)) (d (n "holochain_p2p") (r "^0.2.3-rc.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.3-rc.0") (d #t) (k 0)) (d (n "holochain_state") (r "^0.2.3-rc.0") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.2.3-rc.0") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.3-rc.0") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.3-rc.0") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.3-rc.0") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.2.3-rc.0") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.86") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.3-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.3-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.3-rc.0") (k 0)) (d (n "kitsune_p2p_block") (r "^0.2.3-rc.0") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.1.3-rc.0") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.3-rc.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.2.3-rc.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.3-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.3-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer") (r "=4.2.2") (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=4.2.2") (d #t) (k 0)))) (h "060cy04j6683d2754kp2mllffl2557sbnrqbh1an6fqqdwb0rjcl") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("glacial_tests") ("dpki") ("default" "slow_tests" "glacial_tests" "sqlite" "tx2" "tx5") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.3.0-beta-dev.24 (c (n "holochain") (v "0.3.0-beta-dev.24") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-once-cell") (r "^0.5") (d #t) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "clap") (r "^4.0") (d #t) (k 2)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.19") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.19") (d #t) (k 1)) (d (n "holo_hash") (r "^0.3.0-beta-dev.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.3.0-beta-dev.24") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.24") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.17") (k 0)) (d (n "holochain_metrics") (r "^0.3.0-beta-dev.6") (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.21") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.23") (d #t) (k 0)) (d (n "holochain_secure_primitive") (r "^0.3.0-beta-dev.20") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.21") (d #t) (k 0)) (d (n "holochain_state") (r "^0.3.0-beta-dev.23") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.3.0-beta-dev.19") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.21") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.2") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.86") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.0-beta-dev.4") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.16") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.21") (k 0)) (d (n "kitsune_p2p_bin_data") (r "^0.3.0-beta-dev.9") (d #t) (k 0)) (d (n "kitsune_p2p_block") (r "^0.3.0-beta-dev.10") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.2.0-beta-dev.13") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap_client") (r "^0.3.0-beta-dev.19") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.13") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "opentelemetry_api") (r "=0.20.0") (f (quote ("metrics"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (f (quote ("quickcheck" "stable_graph"))) (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.13") (d #t) (k 2)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.4-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.4-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer") (r "=4.2.2") (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=4.2.2") (d #t) (k 0)))) (h "0wy0gsccg1n8pwp678wmsn2qw14vlpffphqbyxh2vpskr4kbm67i") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "holochain_cascade/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "kitsune_p2p_bin_data/fixt" "kitsune_p2p_types/fixt" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to" "contrafact") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("metrics_influxive" "holochain_metrics/influxive") ("glacial_tests") ("dpki") ("default" "slow_tests" "glacial_tests" "sqlite" "tx2" "tx5" "metrics_influxive") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.2.3-rc.1 (c (n "holochain") (v "0.2.3-rc.1") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.2.0-dev.3") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.2.3-rc.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hdk") (r "^0.2.3-rc.1") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.2.3-rc.1") (d #t) (k 1)) (d (n "holo_hash") (r "^0.2.3-rc.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.2.3-rc.1") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.2.3-rc.1") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.3-rc.1") (k 0)) (d (n "holochain_p2p") (r "^0.2.3-rc.1") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.3-rc.1") (d #t) (k 0)) (d (n "holochain_state") (r "^0.2.3-rc.1") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.2.3-rc.1") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.3-rc.0") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.3-rc.1") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.3-rc.0") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.2.3-rc.1") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.84") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.3-rc.1") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.3-rc.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.3-rc.1") (k 0)) (d (n "kitsune_p2p_block") (r "^0.2.3-rc.1") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.1.3-rc.1") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.3-rc.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.2.3-rc.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.3-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.3-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "0pcnqwkjj4m4f8i8448w61rfm85qv5z17ghf621j49ja2484zxlz") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("glacial_tests") ("dpki") ("default" "slow_tests" "glacial_tests" "sqlite" "tx2" "tx5") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.3.0-beta-dev.25 (c (n "holochain") (v "0.3.0-beta-dev.25") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-once-cell") (r "^0.5") (d #t) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "clap") (r "^4.0") (d #t) (k 2)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.20") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.20") (d #t) (k 1)) (d (n "holo_hash") (r "^0.3.0-beta-dev.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.3.0-beta-dev.25") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.25") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.18") (k 0)) (d (n "holochain_metrics") (r "^0.3.0-beta-dev.7") (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.24") (d #t) (k 0)) (d (n "holochain_secure_primitive") (r "^0.3.0-beta-dev.21") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "holochain_state") (r "^0.3.0-beta-dev.24") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.3.0-beta-dev.20") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.2") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.3.0-beta-dev.23") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.86") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.0-beta-dev.5") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.17") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.22") (k 0)) (d (n "kitsune_p2p_bin_data") (r "^0.3.0-beta-dev.10") (d #t) (k 0)) (d (n "kitsune_p2p_block") (r "^0.3.0-beta-dev.11") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.2.0-beta-dev.14") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap_client") (r "^0.3.0-beta-dev.20") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.14") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "opentelemetry_api") (r "=0.20.0") (f (quote ("metrics"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (f (quote ("quickcheck" "stable_graph"))) (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.13") (d #t) (k 2)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.5-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.5-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer") (r "=4.2.2") (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=4.2.2") (d #t) (k 0)))) (h "0j8h6qd5sqiwhxfkrddfm4ncy1xv11k0gy1xfncqf97flscicr8i") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "holochain_cascade/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "kitsune_p2p_bin_data/fixt" "kitsune_p2p_types/fixt" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to" "contrafact") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("metrics_influxive" "holochain_metrics/influxive") ("glacial_tests") ("dpki") ("default" "slow_tests" "glacial_tests" "sqlite" "tx2" "tx5" "metrics_influxive") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.2.3 (c (n "holochain") (v "0.2.3") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.2.0-dev.3") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.2.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hdk") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.2.3") (d #t) (k 1)) (d (n "holo_hash") (r "^0.2.3") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.2.3") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.2.3") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.3") (k 0)) (d (n "holochain_p2p") (r "^0.2.3") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.3") (d #t) (k 0)) (d (n "holochain_state") (r "^0.2.3") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.3") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.3") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.3") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.2.3") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.84") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.3") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.3") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.3") (k 0)) (d (n "kitsune_p2p_block") (r "^0.2.3") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.2.3") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.3-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.3-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "1fgd70l3fx726dkh327yrvfw3xb9c514frm0srzc6xp5mvr9lj9z") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("glacial_tests") ("dpki") ("default" "slow_tests" "glacial_tests" "sqlite" "tx2" "tx5") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.3.0-beta-dev.26 (c (n "holochain") (v "0.3.0-beta-dev.26") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-once-cell") (r "^0.5") (d #t) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "clap") (r "^4.0") (d #t) (k 2)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.21") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.21") (d #t) (k 1)) (d (n "holo_hash") (r "^0.3.0-beta-dev.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.3.0-beta-dev.26") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.26") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.18") (k 0)) (d (n "holochain_metrics") (r "^0.3.0-beta-dev.7") (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.25") (d #t) (k 0)) (d (n "holochain_secure_primitive") (r "^0.3.0-beta-dev.21") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.23") (d #t) (k 0)) (d (n "holochain_state") (r "^0.3.0-beta-dev.25") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.3.0-beta-dev.21") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.23") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.2") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.3.0-beta-dev.24") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.86") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.0-beta-dev.5") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.17") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.22") (k 0)) (d (n "kitsune_p2p_bin_data") (r "^0.3.0-beta-dev.10") (d #t) (k 0)) (d (n "kitsune_p2p_block") (r "^0.3.0-beta-dev.11") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.2.0-beta-dev.14") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap_client") (r "^0.3.0-beta-dev.20") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.14") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "opentelemetry_api") (r "=0.20.0") (f (quote ("metrics"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (f (quote ("quickcheck" "stable_graph"))) (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.13") (d #t) (k 2)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.5-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.5-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer") (r "=4.2.2") (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=4.2.2") (d #t) (k 0)))) (h "09d5693kh92c2s7pqrbyxw4ja396f3b1k72bkqj2915v2cri5dy6") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "holochain_cascade/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "kitsune_p2p_bin_data/fixt" "kitsune_p2p_types/fixt" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to" "contrafact") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("metrics_influxive" "holochain_metrics/influxive") ("glacial_tests") ("dpki") ("default" "slow_tests" "glacial_tests" "sqlite" "tx2" "tx5" "metrics_influxive") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.3.0-beta-dev.27 (c (n "holochain") (v "0.3.0-beta-dev.27") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-once-cell") (r "^0.5") (d #t) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "clap") (r "^4.0") (d #t) (k 2)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.22") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.22") (d #t) (k 1)) (d (n "holo_hash") (r "^0.3.0-beta-dev.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.3.0-beta-dev.27") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.27") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.19") (k 0)) (d (n "holochain_metrics") (r "^0.3.0-beta-dev.7") (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.26") (d #t) (k 0)) (d (n "holochain_secure_primitive") (r "^0.3.0-beta-dev.21") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.24") (d #t) (k 0)) (d (n "holochain_state") (r "^0.3.0-beta-dev.26") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.3.0-beta-dev.22") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.24") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.2") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.3.0-beta-dev.25") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.86") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.0-beta-dev.5") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.18") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.23") (k 0)) (d (n "kitsune_p2p_bin_data") (r "^0.3.0-beta-dev.10") (d #t) (k 0)) (d (n "kitsune_p2p_block") (r "^0.3.0-beta-dev.11") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.2.0-beta-dev.14") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap_client") (r "^0.3.0-beta-dev.20") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.14") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "opentelemetry_api") (r "=0.20.0") (f (quote ("metrics"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (f (quote ("quickcheck" "stable_graph"))) (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.13") (d #t) (k 2)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.5-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.5-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer") (r "=4.2.2") (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=4.2.2") (d #t) (k 0)))) (h "0r4gpn7dcqamnqz26xxgjdqb0lkbqdqya6ra6pl2115q78py8aw0") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "holochain_cascade/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "kitsune_p2p_bin_data/fixt" "kitsune_p2p_types/fixt" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to" "contrafact") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("metrics_influxive" "holochain_metrics/influxive") ("glacial_tests") ("dpki") ("default" "slow_tests" "glacial_tests" "sqlite" "tx2" "tx5" "metrics_influxive") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.2.4-rc.0 (c (n "holochain") (v "0.2.4-rc.0") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.2.0-dev.3") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.2.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hdk") (r "^0.2.4-rc.0") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.2.4-rc.0") (d #t) (k 1)) (d (n "holo_hash") (r "^0.2.3") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.2.4-rc.0") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.2.4-rc.0") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.4-rc.0") (k 0)) (d (n "holochain_metrics") (r "^0.2.4-rc.0") (k 0)) (d (n "holochain_p2p") (r "^0.2.4-rc.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.4-rc.0") (d #t) (k 0)) (d (n "holochain_state") (r "^0.2.4-rc.0") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.2.4-rc.0") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.3") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.4-rc.0") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.3") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.2.4-rc.0") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.84") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.3") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.4-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.4-rc.0") (k 0)) (d (n "kitsune_p2p_block") (r "^0.2.4-rc.0") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.1.4-rc.0") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.4-rc.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.2.3") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "opentelemetry_api") (r "=0.20.0") (f (quote ("metrics"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.4-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.4-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "1zgxzf4r7q3kbppxlkq0i72ypzx1dwivd74hzdkfj2g9c3ahsg4b") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("metrics_influxive" "holochain_metrics/influxive") ("glacial_tests") ("dpki") ("default" "slow_tests" "glacial_tests" "sqlite" "tx2" "tx5" "metrics_influxive") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.3.0-beta-dev.28 (c (n "holochain") (v "0.3.0-beta-dev.28") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-once-cell") (r "^0.5") (d #t) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "clap") (r "^4.0") (d #t) (k 2)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.23") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.23") (d #t) (k 1)) (d (n "holo_hash") (r "^0.3.0-beta-dev.15") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.3.0-beta-dev.28") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.28") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.20") (k 0)) (d (n "holochain_metrics") (r "^0.3.0-beta-dev.7") (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.27") (d #t) (k 0)) (d (n "holochain_secure_primitive") (r "^0.3.0-beta-dev.21") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.25") (d #t) (k 0)) (d (n "holochain_state") (r "^0.3.0-beta-dev.27") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.3.0-beta-dev.23") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.25") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.2") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.3.0-beta-dev.26") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.90") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.0-beta-dev.5") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.19") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.24") (k 0)) (d (n "kitsune_p2p_bin_data") (r "^0.3.0-beta-dev.10") (d #t) (k 0)) (d (n "kitsune_p2p_block") (r "^0.3.0-beta-dev.12") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.2.0-beta-dev.15") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap_client") (r "^0.3.0-beta-dev.21") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.15") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "opentelemetry_api") (r "=0.20.0") (f (quote ("metrics"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (f (quote ("quickcheck" "stable_graph"))) (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.13") (d #t) (k 2)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.5-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.5-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer") (r "=4.2.4") (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=4.2.4") (d #t) (k 0)))) (h "0wpb859lmdxq50sbhn2nia8n4pl49x9xmc0lcgy778xavikwyk1n") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "holochain_cascade/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "kitsune_p2p_bin_data/fixt" "kitsune_p2p_types/fixt" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to" "contrafact") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("metrics_influxive" "holochain_metrics/influxive") ("glacial_tests") ("dpki") ("default" "slow_tests" "glacial_tests" "sqlite" "tx2" "tx5" "metrics_influxive") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.2.4 (c (n "holochain") (v "0.2.4") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.2.0-dev.3") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.2.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hdk") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.2.4") (d #t) (k 1)) (d (n "holo_hash") (r "^0.2.4") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.2.4") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.2.4") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.4") (k 0)) (d (n "holochain_metrics") (r "^0.2.4") (k 0)) (d (n "holochain_p2p") (r "^0.2.4") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.4") (d #t) (k 0)) (d (n "holochain_state") (r "^0.2.4") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.4") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.4") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.4") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.2.4") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.84") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.4") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.4") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.4") (k 0)) (d (n "kitsune_p2p_block") (r "^0.2.4") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.2.4") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "opentelemetry_api") (r "=0.20.0") (f (quote ("metrics"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.4-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.4-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "12byq6j6rr7k3k1sm1kbs5w14wqzk6s8dgmfmb7w2arsdkbbgp5c") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("metrics_influxive" "holochain_metrics/influxive") ("glacial_tests") ("dpki") ("default" "slow_tests" "glacial_tests" "sqlite" "tx2" "tx5" "metrics_influxive") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.3.0-beta-dev.29 (c (n "holochain") (v "0.3.0-beta-dev.29") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-once-cell") (r "^0.5") (d #t) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "clap") (r "^4.0") (d #t) (k 2)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.24") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.24") (d #t) (k 1)) (d (n "holo_hash") (r "^0.3.0-beta-dev.16") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain-services") (r "^0.2.0-beta-dev.0") (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.3.0-beta-dev.29") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.29") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.21") (k 0)) (d (n "holochain_metrics") (r "^0.3.0-beta-dev.7") (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.28") (d #t) (k 0)) (d (n "holochain_secure_primitive") (r "^0.3.0-beta-dev.21") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.26") (d #t) (k 0)) (d (n "holochain_state") (r "^0.3.0-beta-dev.28") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.3.0-beta-dev.24") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.26") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.3") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.3.0-beta-dev.27") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.91") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.0-beta-dev.6") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.20") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.25") (k 0)) (d (n "kitsune_p2p_bin_data") (r "^0.3.0-beta-dev.11") (d #t) (k 0)) (d (n "kitsune_p2p_block") (r "^0.3.0-beta-dev.13") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.2.0-beta-dev.16") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap_client") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.16") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "opentelemetry_api") (r "=0.20.0") (f (quote ("metrics"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (f (quote ("quickcheck" "stable_graph"))) (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.13") (d #t) (k 2)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.5-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.5-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer") (r "=4.2.4") (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=4.2.4") (d #t) (k 0)))) (h "1n03kn8gffc6qv3rk8cwd5fpdz6v7n0nb1bjxrl06hyzy2rvz82h") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "holochain_cascade/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "kitsune_p2p_bin_data/fixt" "kitsune_p2p_types/fixt" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to" "contrafact") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("metrics_influxive" "holochain_metrics/influxive") ("glacial_tests") ("dpki") ("default" "slow_tests" "glacial_tests" "sqlite" "tx2" "tx5" "metrics_influxive") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.3.0-beta-dev.32 (c (n "holochain") (v "0.3.0-beta-dev.32") (d (list (d (n "aitia") (r "^0.2.0-beta-dev.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-once-cell") (r "^0.5") (d #t) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "clap") (r "^4.0") (d #t) (k 2)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.2.0-beta-dev.2") (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.27") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.27") (d #t) (k 1)) (d (n "holo_hash") (r "^0.3.0-beta-dev.19") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.3.0-beta-dev.32") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.32") (d #t) (k 0)) (d (n "holochain_conductor_services") (r "^0.2.0-beta-dev.3") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.24") (k 0)) (d (n "holochain_metrics") (r "^0.3.0-beta-dev.7") (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.31") (d #t) (k 0)) (d (n "holochain_secure_primitive") (r "^0.3.0-beta-dev.21") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.29") (d #t) (k 0)) (d (n "holochain_state") (r "^0.3.0-beta-dev.31") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.3.0-beta-dev.27") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.6") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.29") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.3") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.3.0-beta-dev.30") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.91") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.0-beta-dev.9") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.23") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.28") (k 0)) (d (n "kitsune_p2p_bin_data") (r "^0.3.0-beta-dev.14") (d #t) (k 0)) (d (n "kitsune_p2p_block") (r "^0.3.0-beta-dev.16") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.2.0-beta-dev.19") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap_client") (r "^0.3.0-beta-dev.25") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.19") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.3.0-beta-dev.4") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "opentelemetry_api") (r "=0.20.0") (f (quote ("metrics"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (f (quote ("quickcheck" "stable_graph"))) (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.13") (d #t) (k 2)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.6-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.6-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer") (r "=4.2.4") (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=4.2.4") (d #t) (k 0)))) (h "0nlk4x5n2vyfhzzb9y7q5fv567zkk6rchb63xmsgby81vzjihpcm") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "holochain_cascade/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "kitsune_p2p_bin_data/fixt" "kitsune_p2p_types/fixt" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to" "contrafact") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("metrics_influxive" "holochain_metrics/influxive") ("glacial_tests") ("dpki") ("default" "slow_tests" "glacial_tests" "sqlite" "tx2" "tx5" "metrics_influxive") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.3.0-beta-dev.33 (c (n "holochain") (v "0.3.0-beta-dev.33") (d (list (d (n "aitia") (r "^0.2.0-beta-dev.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-once-cell") (r "^0.5") (d #t) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "clap") (r "^4.0") (d #t) (k 2)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.2.0-beta-dev.3") (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.28") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.28") (d #t) (k 1)) (d (n "holo_hash") (r "^0.3.0-beta-dev.19") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.3.0-beta-dev.33") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.33") (d #t) (k 0)) (d (n "holochain_conductor_services") (r "^0.2.0-beta-dev.4") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.25") (k 0)) (d (n "holochain_metrics") (r "^0.3.0-beta-dev.7") (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.32") (d #t) (k 0)) (d (n "holochain_secure_primitive") (r "^0.3.0-beta-dev.21") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.30") (d #t) (k 0)) (d (n "holochain_state") (r "^0.3.0-beta-dev.32") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.3.0-beta-dev.28") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.6") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.30") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.3") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.3.0-beta-dev.31") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.91") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.0-beta-dev.10") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.24") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.28") (k 0)) (d (n "kitsune_p2p_bin_data") (r "^0.3.0-beta-dev.14") (d #t) (k 0)) (d (n "kitsune_p2p_block") (r "^0.3.0-beta-dev.16") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.2.0-beta-dev.19") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap_client") (r "^0.3.0-beta-dev.25") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.19") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.3.0-beta-dev.4") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "opentelemetry_api") (r "=0.20.0") (f (quote ("metrics"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (f (quote ("quickcheck" "stable_graph"))) (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.13") (d #t) (k 2)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.6-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.6-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer") (r "=4.2.4") (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=4.2.4") (d #t) (k 0)))) (h "0lprbf79zsmgb38i59qzbscxdpnjl9f4ayf2fj08bx3d32vgc5y3") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "holochain_cascade/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "kitsune_p2p_bin_data/fixt" "kitsune_p2p_types/fixt" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to" "contrafact") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("metrics_influxive" "holochain_metrics/influxive") ("glacial_tests") ("dpki") ("default" "sqlite-encrypted" "tx2" "tx5" "metrics_influxive") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.2.5-rc.0 (c (n "holochain") (v "0.2.5-rc.0") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.2.0-dev.3") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.2.5-rc.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hdk") (r "^0.2.5-rc.0") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.2.5-rc.0") (d #t) (k 1)) (d (n "holo_hash") (r "^0.2.5-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.2.5-rc.0") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.2.5-rc.0") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.5-rc.0") (k 0)) (d (n "holochain_metrics") (r "^0.2.4") (k 0)) (d (n "holochain_p2p") (r "^0.2.5-rc.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.5-rc.0") (d #t) (k 0)) (d (n "holochain_state") (r "^0.2.5-rc.0") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.2.5-rc.0") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.4") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.5-rc.0") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.4") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.2.5-rc.0") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.92") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.5-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.5-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.5-rc.0") (k 0)) (d (n "kitsune_p2p_block") (r "^0.2.5-rc.0") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.1.5-rc.0") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.5-rc.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.2.4") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "opentelemetry_api") (r "=0.20.0") (f (quote ("metrics"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.4-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.4-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer") (r "=4.2.4") (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=4.2.4") (d #t) (k 0)))) (h "1mz7hvdrgrj8k3qq6fclc6nhr6k9wsfgls47rzbc15sc45zy3vc2") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("metrics_influxive" "holochain_metrics/influxive") ("glacial_tests") ("dpki") ("default" "sqlite-encrypted" "tx2" "tx5" "metrics_influxive") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.3.0-beta-dev.34 (c (n "holochain") (v "0.3.0-beta-dev.34") (d (list (d (n "aitia") (r "^0.2.0-beta-dev.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-once-cell") (r "^0.5") (d #t) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "clap") (r "^4.0") (d #t) (k 2)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.2.0-beta-dev.4") (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.29") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.29") (d #t) (k 1)) (d (n "holo_hash") (r "^0.3.0-beta-dev.20") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.3.0-beta-dev.34") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.34") (d #t) (k 0)) (d (n "holochain_conductor_services") (r "^0.2.0-beta-dev.5") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.26") (k 0)) (d (n "holochain_metrics") (r "^0.3.0-beta-dev.7") (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.33") (d #t) (k 0)) (d (n "holochain_secure_primitive") (r "^0.3.0-beta-dev.21") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.31") (d #t) (k 0)) (d (n "holochain_state") (r "^0.3.0-beta-dev.33") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.3.0-beta-dev.29") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.6") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.31") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.3") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.3.0-beta-dev.32") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.92") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.0-beta-dev.11") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.25") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.29") (k 0)) (d (n "kitsune_p2p_bin_data") (r "^0.3.0-beta-dev.14") (d #t) (k 0)) (d (n "kitsune_p2p_block") (r "^0.3.0-beta-dev.16") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.2.0-beta-dev.19") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap_client") (r "^0.3.0-beta-dev.25") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.19") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.3.0-beta-dev.4") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "opentelemetry_api") (r "=0.20.0") (f (quote ("metrics"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (f (quote ("quickcheck" "stable_graph"))) (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.13") (d #t) (k 2)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.6-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.6-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer") (r "=4.2.4") (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=4.2.4") (d #t) (k 0)))) (h "05jbfms3yj6g3w2hf30kxndzhjmqq7776g010cr3j5wzl8n8l3r2") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "holochain_cascade/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "kitsune_p2p_bin_data/fixt" "kitsune_p2p_types/fixt" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to" "contrafact") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("metrics_influxive" "holochain_metrics/influxive") ("glacial_tests") ("dpki") ("default" "sqlite-encrypted" "tx2" "tx5" "metrics_influxive") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.2.5-rc.1 (c (n "holochain") (v "0.2.5-rc.1") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.2.0-dev.3") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.2.5-rc.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hdk") (r "^0.2.5-rc.0") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.2.5-rc.0") (d #t) (k 1)) (d (n "holo_hash") (r "^0.2.5-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.2.5-rc.1") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.2.5-rc.1") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.5-rc.1") (k 0)) (d (n "holochain_metrics") (r "^0.2.4") (k 0)) (d (n "holochain_p2p") (r "^0.2.5-rc.1") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.5-rc.1") (d #t) (k 0)) (d (n "holochain_state") (r "^0.2.5-rc.1") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.2.5-rc.0") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.4") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.5-rc.1") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.4") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.2.5-rc.1") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.92") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.5-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.5-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.5-rc.1") (k 0)) (d (n "kitsune_p2p_block") (r "^0.2.5-rc.0") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.1.5-rc.1") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.5-rc.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.2.5-rc.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "opentelemetry_api") (r "=0.20.0") (f (quote ("metrics"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.6-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.6-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer") (r "=4.2.4") (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=4.2.4") (d #t) (k 0)))) (h "0s15ihagbrsp6dqdkwgk8llp54xqs53ljrjawxnfryz9k05x0zn7") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("metrics_influxive" "holochain_metrics/influxive") ("glacial_tests") ("dpki") ("default" "sqlite-encrypted" "tx2" "tx5" "metrics_influxive") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.1.8 (c (n "holochain") (v "0.1.8") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.1.0-dev.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.1.5") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.4") (d #t) (k 0)) (d (n "hdk") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.1.6") (d #t) (k 1)) (d (n "hdk") (r "^0.1.6") (d #t) (k 2)) (d (n "holo_hash") (r "^0.1.6") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.1.8") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.1.8") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.1.8") (k 0)) (d (n "holochain_p2p") (r "^0.1.8") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.1.8") (d #t) (k 0)) (d (n "holochain_state") (r "^0.1.8") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.1.6") (d #t) (k 2)) (d (n "holochain_types") (r "^0.1.8") (d #t) (k 0)) (d (n "holochain_util") (r "^0.1.4") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.1.8") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.83") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.1.4") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.1.6") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.1.7") (k 0)) (d (n "kitsune_p2p_types") (r "^0.1.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.1.4") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "reqwest") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.19") (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer-middlewares") (r "^2") (d #t) (k 0)))) (h "1qf1f6jwprln0rhs11fy4s3g3fnp4y6jr20c4fjc3hl5ihj275a8") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx2" "kitsune_p2p/tx2") ("test_utils" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "holochain_p2p/mock_network" "matches" "holochain_test_wasm_common" "unwrap_to") ("sweetest" "test_utils" "no-deps") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/db-encryption" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/no-deps" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("no-deps" "sqlite") ("glacial_tests") ("default" "slow_tests" "glacial_tests" "no-deps" "tx2") ("db-encryption" "sqlite-encrypted") ("chc" "bytes" "reqwest") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.2.5 (c (n "holochain") (v "0.2.5") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.2.0-dev.3") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.2.5") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hdk") (r "^0.2.5") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.2.5") (d #t) (k 1)) (d (n "holo_hash") (r "^0.2.5") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.2.5") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.2.5") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.5") (k 0)) (d (n "holochain_metrics") (r "^0.2.5") (k 0)) (d (n "holochain_p2p") (r "^0.2.5") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.5") (d #t) (k 0)) (d (n "holochain_state") (r "^0.2.5") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.2.5") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.5") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.5") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.5") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.2.5") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.92") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.5") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.5") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.5") (k 0)) (d (n "kitsune_p2p_block") (r "^0.2.5") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.2.5") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "opentelemetry_api") (r "=0.20.0") (f (quote ("metrics"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.6-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.6-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer") (r "=4.2.4") (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=4.2.4") (d #t) (k 0)))) (h "1wq89agpk248r58f43qz2zi7j53r38j0p8ksn0phbw66gw5qwmba") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("metrics_influxive" "holochain_metrics/influxive") ("glacial_tests") ("dpki") ("default" "sqlite-encrypted" "tx2" "tx5" "metrics_influxive") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.3.0-beta-dev.35 (c (n "holochain") (v "0.3.0-beta-dev.35") (d (list (d (n "aitia") (r "^0.2.0-beta-dev.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-once-cell") (r "^0.5") (d #t) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "clap") (r "^4.0") (d #t) (k 2)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.2.0-beta-dev.5") (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.30") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.30") (d #t) (k 1)) (d (n "holo_hash") (r "^0.3.0-beta-dev.21") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.3.0-beta-dev.35") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.35") (d #t) (k 0)) (d (n "holochain_conductor_services") (r "^0.2.0-beta-dev.6") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.27") (k 0)) (d (n "holochain_metrics") (r "^0.3.0-beta-dev.8") (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.23") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.34") (d #t) (k 0)) (d (n "holochain_secure_primitive") (r "^0.3.0-beta-dev.21") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.32") (d #t) (k 0)) (d (n "holochain_state") (r "^0.3.0-beta-dev.34") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.3.0-beta-dev.30") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.6") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.32") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.3") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.3.0-beta-dev.33") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.92") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.0-beta-dev.12") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.26") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.30") (k 0)) (d (n "kitsune_p2p_bin_data") (r "^0.3.0-beta-dev.15") (d #t) (k 0)) (d (n "kitsune_p2p_block") (r "^0.3.0-beta-dev.17") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.2.0-beta-dev.20") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap_client") (r "^0.3.0-beta-dev.26") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.20") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.3.0-beta-dev.4") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "opentelemetry_api") (r "=0.20.0") (f (quote ("metrics"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (f (quote ("quickcheck" "stable_graph"))) (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.13") (d #t) (k 2)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.6-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.6-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer") (r "=4.2.4") (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=4.2.4") (d #t) (k 0)))) (h "1b2xjw70wxwhjgl4dr488ck4ysc1ywkh18671rwhs2zxnw1wjqqc") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "holochain_cascade/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "kitsune_p2p_bin_data/fixt" "kitsune_p2p_types/fixt" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to" "contrafact") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("metrics_influxive" "holochain_metrics/influxive") ("glacial_tests") ("dpki") ("default" "sqlite-encrypted" "tx2" "tx5" "metrics_influxive") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.2.6-rc.0 (c (n "holochain") (v "0.2.6-rc.0") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.2.0-dev.3") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.2.5") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hdk") (r "^0.2.6-rc.0") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.2.6-rc.0") (d #t) (k 1)) (d (n "holo_hash") (r "^0.2.6-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.2.6-rc.0") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.2.6-rc.0") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.6-rc.0") (k 0)) (d (n "holochain_metrics") (r "^0.2.5") (k 0)) (d (n "holochain_p2p") (r "^0.2.6-rc.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.6-rc.0") (d #t) (k 0)) (d (n "holochain_state") (r "^0.2.6-rc.0") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.2.6-rc.0") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.5") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.6-rc.0") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.5") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.2.6-rc.0") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.92") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.6-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.6-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.6-rc.0") (k 0)) (d (n "kitsune_p2p_block") (r "^0.2.6-rc.0") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.1.6-rc.0") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.6-rc.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.2.5") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "opentelemetry_api") (r "=0.20.0") (f (quote ("metrics"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.6-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.6-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer") (r "=4.2.4") (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=4.2.4") (d #t) (k 0)))) (h "17ja1sqd18z9cqxz8jvxn1l7g2vkmhd7gah4zlsqmi6fbd6yyyly") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("metrics_influxive" "holochain_metrics/influxive") ("glacial_tests") ("dpki") ("default" "sqlite-encrypted" "tx2" "tx5" "metrics_influxive") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.2.6 (c (n "holochain") (v "0.2.6") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.2.0-dev.3") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.2.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hdk") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.2.6") (d #t) (k 1)) (d (n "holo_hash") (r "^0.2.6") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.2.6") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.2.6") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.6") (k 0)) (d (n "holochain_metrics") (r "^0.2.6") (k 0)) (d (n "holochain_p2p") (r "^0.2.6") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.6") (d #t) (k 0)) (d (n "holochain_state") (r "^0.2.6") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.6") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.6") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.6") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.2.6") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.92") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.6") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.6") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.6") (k 0)) (d (n "kitsune_p2p_block") (r "^0.2.6") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.2.6") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "opentelemetry_api") (r "=0.20.0") (f (quote ("metrics"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.6-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.6-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer") (r "=4.2.4") (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=4.2.4") (d #t) (k 0)))) (h "1w6qmn0c53shzbw9gsmxia931axpssj216jxfms0dij51v01i5y7") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("metrics_influxive" "holochain_metrics/influxive") ("glacial_tests") ("dpki") ("default" "sqlite-encrypted" "tx2" "tx5" "metrics_influxive") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.3.0-beta-dev.36 (c (n "holochain") (v "0.3.0-beta-dev.36") (d (list (d (n "aitia") (r "^0.2.0-beta-dev.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-once-cell") (r "^0.5") (d #t) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "clap") (r "^4.0") (d #t) (k 2)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.2.0-beta-dev.6") (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.31") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.31") (d #t) (k 1)) (d (n "holo_hash") (r "^0.3.0-beta-dev.22") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.3.0-beta-dev.36") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.36") (d #t) (k 0)) (d (n "holochain_conductor_services") (r "^0.2.0-beta-dev.7") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.28") (k 0)) (d (n "holochain_metrics") (r "^0.3.0-beta-dev.8") (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.24") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.35") (d #t) (k 0)) (d (n "holochain_secure_primitive") (r "^0.3.0-beta-dev.21") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.33") (d #t) (k 0)) (d (n "holochain_state") (r "^0.3.0-beta-dev.35") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.3.0-beta-dev.31") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.6") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.33") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.4") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.3.0-beta-dev.34") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.92") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.0-beta-dev.13") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.31") (k 0)) (d (n "kitsune_p2p_bin_data") (r "^0.3.0-beta-dev.16") (d #t) (k 0)) (d (n "kitsune_p2p_block") (r "^0.3.0-beta-dev.18") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.2.0-beta-dev.21") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap_client") (r "^0.3.0-beta-dev.27") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.21") (d #t) (k 0)) (d (n "lair_keystore") (r "^0.4.3") (f (quote ("rusqlite-bundled-sqlcipher-vendored-openssl"))) (k 1)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.3.0-beta-dev.5") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "opentelemetry_api") (r "=0.20.0") (f (quote ("metrics"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (f (quote ("quickcheck" "stable_graph"))) (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.10") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.13") (d #t) (k 2)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.7-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.7-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer") (r "=4.2.4") (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=4.2.4") (d #t) (k 0)))) (h "1vysfvx81nhj5x1yxjq7i83agvrrvmcj6sd1k3cy43f5ss7g60x7") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "holochain_cascade/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "kitsune_p2p_bin_data/fixt" "kitsune_p2p_types/fixt" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to" "contrafact") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("metrics_influxive" "holochain_metrics/influxive") ("glacial_tests") ("dpki") ("default" "sqlite-encrypted" "tx2" "tx5" "metrics_influxive") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.3.0-beta-dev.37 (c (n "holochain") (v "0.3.0-beta-dev.37") (d (list (d (n "aitia") (r "^0.2.0-beta-dev.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-once-cell") (r "^0.5") (d #t) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "clap") (r "^4.0") (d #t) (k 2)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.2.0-beta-dev.6") (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.31") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.31") (d #t) (k 1)) (d (n "holo_hash") (r "^0.3.0-beta-dev.22") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.3.0-beta-dev.36") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.36") (d #t) (k 0)) (d (n "holochain_conductor_services") (r "^0.2.0-beta-dev.7") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.28") (k 0)) (d (n "holochain_metrics") (r "^0.3.0-beta-dev.8") (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.24") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.35") (d #t) (k 0)) (d (n "holochain_secure_primitive") (r "^0.3.0-beta-dev.21") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.33") (d #t) (k 0)) (d (n "holochain_state") (r "^0.3.0-beta-dev.35") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.3.0-beta-dev.31") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.6") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.33") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.4") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.3.0-beta-dev.34") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.92") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.0-beta-dev.13") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.31") (k 0)) (d (n "kitsune_p2p_bin_data") (r "^0.3.0-beta-dev.16") (d #t) (k 0)) (d (n "kitsune_p2p_block") (r "^0.3.0-beta-dev.18") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.2.0-beta-dev.21") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap_client") (r "^0.3.0-beta-dev.27") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.21") (d #t) (k 0)) (d (n "lair_keystore") (r "^0.4.3") (f (quote ("rusqlite-bundled-sqlcipher-vendored-openssl"))) (k 1)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.3.0-beta-dev.5") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "opentelemetry_api") (r "=0.20.0") (f (quote ("metrics"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (f (quote ("quickcheck" "stable_graph"))) (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.10") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.13") (d #t) (k 2)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.7-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.7-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer") (r "=4.2.4") (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=4.2.4") (d #t) (k 0)))) (h "0i8dfrsam02sqm8bzp4jm39wml0yrp2gbp3svcmcj4s2z8s9rn1h") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "holochain_cascade/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "kitsune_p2p_bin_data/fixt" "kitsune_p2p_types/fixt" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to" "contrafact") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("metrics_influxive" "holochain_metrics/influxive") ("glacial_tests") ("dpki") ("default" "sqlite-encrypted" "tx2" "tx5" "metrics_influxive") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.2.7-rc.0 (c (n "holochain") (v "0.2.7-rc.0") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.2.0-dev.3") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.2.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hdk") (r "^0.2.7-rc.0") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.2.7-rc.0") (d #t) (k 1)) (d (n "holo_hash") (r "^0.2.6") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.2.7-rc.0") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.2.7-rc.0") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.7-rc.0") (k 0)) (d (n "holochain_metrics") (r "^0.2.6") (k 0)) (d (n "holochain_p2p") (r "^0.2.7-rc.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.7-rc.0") (d #t) (k 0)) (d (n "holochain_state") (r "^0.2.7-rc.0") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.2.7-rc.0") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.6") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.7-rc.0") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.6") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.2.7-rc.0") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.92") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.6") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.7-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.6") (k 0)) (d (n "kitsune_p2p_block") (r "^0.2.6") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.6") (d #t) (k 0)) (d (n "lair_keystore") (r "^0.4.2") (f (quote ("rusqlite-bundled-sqlcipher-vendored-openssl"))) (d #t) (k 1)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.2.6") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "opentelemetry_api") (r "=0.20.0") (f (quote ("metrics"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.6-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.6-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer") (r "=4.2.4") (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=4.2.4") (d #t) (k 0)))) (h "0wnbh7gbb4svnm9sgzrla553qz4vqymd6gbkmbrbnbx6idxmb3jr") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("metrics_influxive" "holochain_metrics/influxive") ("glacial_tests") ("dpki") ("default" "sqlite-encrypted" "tx2" "tx5" "metrics_influxive") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.3.0-beta-dev.38 (c (n "holochain") (v "0.3.0-beta-dev.38") (d (list (d (n "aitia") (r "^0.2.0-beta-dev.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-once-cell") (r "^0.5") (d #t) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "clap") (r "^4.0") (d #t) (k 2)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.2.0-beta-dev.7") (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.32") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.32") (d #t) (k 1)) (d (n "holo_hash") (r "^0.3.0-beta-dev.22") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.3.0-beta-dev.37") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.37") (d #t) (k 0)) (d (n "holochain_conductor_services") (r "^0.2.0-beta-dev.8") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.29") (k 0)) (d (n "holochain_metrics") (r "^0.3.0-beta-dev.8") (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.24") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.36") (d #t) (k 0)) (d (n "holochain_secure_primitive") (r "^0.3.0-beta-dev.21") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.34") (d #t) (k 0)) (d (n "holochain_state") (r "^0.3.0-beta-dev.36") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.3.0-beta-dev.32") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.6") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.34") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.4") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.3.0-beta-dev.35") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.92") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.0-beta-dev.14") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.28") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.31") (k 0)) (d (n "kitsune_p2p_bin_data") (r "^0.3.0-beta-dev.16") (d #t) (k 0)) (d (n "kitsune_p2p_block") (r "^0.3.0-beta-dev.18") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.2.0-beta-dev.21") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap_client") (r "^0.3.0-beta-dev.27") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.21") (d #t) (k 0)) (d (n "lair_keystore") (r "^0.4.3") (f (quote ("rusqlite-bundled-sqlcipher-vendored-openssl"))) (k 1)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.3.0-beta-dev.6") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "opentelemetry_api") (r "=0.20.0") (f (quote ("metrics"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (f (quote ("quickcheck" "stable_graph"))) (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.10") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.13") (d #t) (k 2)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.7-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.7-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer") (r "=4.2.4") (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=4.2.4") (d #t) (k 0)))) (h "16cg1my5s6376s89n5ci4vwb15s285xmln7y6dha43l4z3wf19bn") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "holochain_cascade/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "kitsune_p2p_bin_data/fixt" "kitsune_p2p_types/fixt" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to" "contrafact") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("metrics_influxive" "holochain_metrics/influxive") ("glacial_tests") ("dpki") ("default" "sqlite-encrypted" "tx2" "tx5" "metrics_influxive") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.3.0-beta-dev.39 (c (n "holochain") (v "0.3.0-beta-dev.39") (d (list (d (n "aitia") (r "^0.2.0-beta-dev.5") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-once-cell") (r "^0.5") (d #t) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "clap") (r "^4.0") (d #t) (k 2)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.2.0-beta-dev.8") (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.33") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.33") (d #t) (k 1)) (d (n "holo_hash") (r "^0.3.0-beta-dev.23") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.3.0-beta-dev.38") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.38") (d #t) (k 0)) (d (n "holochain_conductor_services") (r "^0.2.0-beta-dev.9") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.30") (k 0)) (d (n "holochain_metrics") (r "^0.3.0-beta-dev.9") (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.25") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.37") (d #t) (k 0)) (d (n "holochain_secure_primitive") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.35") (d #t) (k 0)) (d (n "holochain_state") (r "^0.3.0-beta-dev.37") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.3.0-beta-dev.33") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.7") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.35") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.5") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.3.0-beta-dev.36") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.92") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.0-beta-dev.15") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.29") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.32") (k 0)) (d (n "kitsune_p2p_bin_data") (r "^0.3.0-beta-dev.17") (d #t) (k 0)) (d (n "kitsune_p2p_block") (r "^0.3.0-beta-dev.19") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.2.0-beta-dev.22") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap_client") (r "^0.3.0-beta-dev.28") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "lair_keystore") (r "^0.4.3") (f (quote ("rusqlite-bundled-sqlcipher-vendored-openssl"))) (k 1)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.3.0-beta-dev.7") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "opentelemetry_api") (r "=0.20.0") (f (quote ("metrics"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (f (quote ("quickcheck" "stable_graph"))) (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.10") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.13") (d #t) (k 2)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.7-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.7-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer") (r "=4.2.4") (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=4.2.4") (d #t) (k 0)))) (h "0cm0nskvqkhmh0qmk69npflvkl56axwhgjd7w6yv7s2z2fjga5qf") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "holochain_cascade/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "kitsune_p2p_bin_data/fixt" "kitsune_p2p_types/fixt" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to" "contrafact") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("metrics_influxive" "holochain_metrics/influxive") ("glacial_tests") ("dpki") ("default" "sqlite-encrypted" "tx2" "tx5" "metrics_influxive") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.2.7-rc.1 (c (n "holochain") (v "0.2.7-rc.1") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.2.0-dev.3") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.2.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hdk") (r "^0.2.7-rc.1") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.2.7-rc.1") (d #t) (k 1)) (d (n "holo_hash") (r "^0.2.6") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.2.7-rc.1") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.2.7-rc.1") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.7-rc.0") (k 0)) (d (n "holochain_metrics") (r "^0.2.6") (k 0)) (d (n "holochain_p2p") (r "^0.2.7-rc.1") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.7-rc.0") (d #t) (k 0)) (d (n "holochain_state") (r "^0.2.7-rc.1") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.2.7-rc.1") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.6") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.7-rc.1") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.6") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.2.7-rc.1") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.92") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.7-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.7-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.6") (k 0)) (d (n "kitsune_p2p_block") (r "^0.2.6") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.6") (d #t) (k 0)) (d (n "lair_keystore") (r "^0.4.2") (f (quote ("rusqlite-bundled-sqlcipher-vendored-openssl"))) (d #t) (k 1)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.2.7-rc.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "opentelemetry_api") (r "=0.20.0") (f (quote ("metrics"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.6-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.6-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer") (r "=4.2.4") (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=4.2.4") (d #t) (k 0)))) (h "1cq01wzl8rpx9bhi6nyag9vaaf48j0bnh3vlc1crh7nqwimd8xab") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("metrics_influxive" "holochain_metrics/influxive") ("glacial_tests") ("dpki") ("default" "sqlite-encrypted" "tx2" "tx5" "metrics_influxive") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.3.0-beta-dev.40 (c (n "holochain") (v "0.3.0-beta-dev.40") (d (list (d (n "aitia") (r "^0.2.0-beta-dev.6") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-once-cell") (r "^0.5") (d #t) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "clap") (r "^4.0") (d #t) (k 2)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.2.0-beta-dev.9") (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.34") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.34") (d #t) (k 1)) (d (n "holo_hash") (r "^0.3.0-beta-dev.24") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.3.0-beta-dev.39") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.39") (d #t) (k 0)) (d (n "holochain_conductor_services") (r "^0.2.0-beta-dev.10") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.31") (k 0)) (d (n "holochain_metrics") (r "^0.3.0-beta-dev.9") (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.25") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.38") (d #t) (k 0)) (d (n "holochain_secure_primitive") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.36") (d #t) (k 0)) (d (n "holochain_state") (r "^0.3.0-beta-dev.38") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.3.0-beta-dev.34") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.8") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.36") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.5") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.3.0-beta-dev.37") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.92") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.0-beta-dev.16") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.30") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.33") (k 0)) (d (n "kitsune_p2p_bin_data") (r "^0.3.0-beta-dev.18") (d #t) (k 0)) (d (n "kitsune_p2p_block") (r "^0.3.0-beta-dev.20") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.2.0-beta-dev.23") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap_client") (r "^0.3.0-beta-dev.29") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.23") (d #t) (k 0)) (d (n "lair_keystore") (r "^0.4.4") (f (quote ("rusqlite-bundled-sqlcipher-vendored-openssl"))) (k 1)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.3.0-beta-dev.7") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "opentelemetry_api") (r "=0.20.0") (f (quote ("metrics"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (f (quote ("quickcheck" "stable_graph"))) (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.11") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.13") (d #t) (k 2)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.7-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.7-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer") (r "=4.2.4") (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=4.2.4") (d #t) (k 0)))) (h "1rifir6mfd7igxxnqvqz6qsf6d51rzqy2ipyjwwdsdaav3piq3ac") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "holochain_cascade/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "kitsune_p2p_bin_data/fixt" "kitsune_p2p_types/fixt" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to" "contrafact") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("metrics_influxive" "holochain_metrics/influxive") ("glacial_tests") ("dpki") ("default" "sqlite-encrypted" "tx2" "tx5" "metrics_influxive") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.3.0-beta-dev.41 (c (n "holochain") (v "0.3.0-beta-dev.41") (d (list (d (n "aitia") (r "^0.2.0-beta-dev.6") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-once-cell") (r "^0.5") (d #t) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "clap") (r "^4.0") (d #t) (k 2)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.2.0-beta-dev.10") (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.35") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.35") (d #t) (k 1)) (d (n "holo_hash") (r "^0.3.0-beta-dev.24") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.3.0-beta-dev.40") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.40") (d #t) (k 0)) (d (n "holochain_conductor_services") (r "^0.2.0-beta-dev.11") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.31") (k 0)) (d (n "holochain_metrics") (r "^0.3.0-beta-dev.9") (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.25") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.39") (d #t) (k 0)) (d (n "holochain_secure_primitive") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.37") (d #t) (k 0)) (d (n "holochain_state") (r "^0.3.0-beta-dev.39") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.3.0-beta-dev.35") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.8") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.37") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.5") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.3.0-beta-dev.38") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.92") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.0-beta-dev.16") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.30") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.33") (k 0)) (d (n "kitsune_p2p_bin_data") (r "^0.3.0-beta-dev.18") (d #t) (k 0)) (d (n "kitsune_p2p_block") (r "^0.3.0-beta-dev.20") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.2.0-beta-dev.23") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap_client") (r "^0.3.0-beta-dev.29") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.23") (d #t) (k 0)) (d (n "lair_keystore") (r "^0.4.4") (f (quote ("rusqlite-bundled-sqlcipher-vendored-openssl"))) (k 1)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.3.0-beta-dev.7") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "opentelemetry_api") (r "=0.20.0") (f (quote ("metrics"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (f (quote ("quickcheck" "stable_graph"))) (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.11") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.13") (d #t) (k 2)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.7-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.7-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer") (r "=4.2.4") (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=4.2.4") (d #t) (k 0)))) (h "0l7p3x13mlqx6cf8adp851k8r2nphnb95xxrybissv73srkl5rkg") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "holochain_cascade/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "kitsune_p2p_bin_data/fixt" "kitsune_p2p_types/fixt" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to" "contrafact") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("metrics_influxive" "holochain_metrics/influxive") ("glacial_tests") ("dpki") ("default" "sqlite-encrypted" "tx2" "tx5" "metrics_influxive") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.3.0-beta-dev.42 (c (n "holochain") (v "0.3.0-beta-dev.42") (d (list (d (n "aitia") (r "^0.2.0-beta-dev.6") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-once-cell") (r "^0.5") (d #t) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "clap") (r "^4.0") (d #t) (k 2)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.2.0-beta-dev.11") (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.35") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.35") (d #t) (k 1)) (d (n "holo_hash") (r "^0.3.0-beta-dev.24") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.3.0-beta-dev.41") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.41") (d #t) (k 0)) (d (n "holochain_conductor_services") (r "^0.2.0-beta-dev.11") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.31") (k 0)) (d (n "holochain_metrics") (r "^0.3.0-beta-dev.9") (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.25") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.40") (d #t) (k 0)) (d (n "holochain_secure_primitive") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.37") (d #t) (k 0)) (d (n "holochain_state") (r "^0.3.0-beta-dev.40") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.3.0-beta-dev.35") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.8") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.37") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.5") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.3.0-beta-dev.39") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.92") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.0-beta-dev.16") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.30") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.34") (k 0)) (d (n "kitsune_p2p_bin_data") (r "^0.3.0-beta-dev.18") (d #t) (k 0)) (d (n "kitsune_p2p_block") (r "^0.3.0-beta-dev.20") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.2.0-beta-dev.23") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap_client") (r "^0.3.0-beta-dev.29") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.23") (d #t) (k 0)) (d (n "lair_keystore") (r "^0.4.4") (f (quote ("rusqlite-bundled-sqlcipher-vendored-openssl"))) (k 1)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.3.0-beta-dev.7") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "opentelemetry_api") (r "=0.20.0") (f (quote ("metrics"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (f (quote ("quickcheck" "stable_graph"))) (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.11") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.13") (d #t) (k 2)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.8-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.8-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer") (r "=4.2.4") (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=4.2.4") (d #t) (k 0)))) (h "11zippd7wmriyk18mfgjqmj2whjwk3hdaz264nssiar521wxpvx3") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "holochain_cascade/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "kitsune_p2p_bin_data/fixt" "kitsune_p2p_types/fixt" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to" "contrafact") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("metrics_influxive" "holochain_metrics/influxive") ("glacial_tests") ("dpki") ("default" "sqlite-encrypted" "tx2" "tx5" "metrics_influxive") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.3.0-beta-dev.43 (c (n "holochain") (v "0.3.0-beta-dev.43") (d (list (d (n "aitia") (r "^0.2.0-beta-dev.7") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-once-cell") (r "^0.5") (d #t) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "clap") (r "^4.0") (d #t) (k 2)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.2.0-beta-dev.12") (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.36") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.36") (d #t) (k 1)) (d (n "holo_hash") (r "^0.3.0-beta-dev.25") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.3.0-beta-dev.42") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.42") (d #t) (k 0)) (d (n "holochain_conductor_services") (r "^0.2.0-beta-dev.12") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.32") (k 0)) (d (n "holochain_metrics") (r "^0.3.0-beta-dev.10") (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.26") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.41") (d #t) (k 0)) (d (n "holochain_secure_primitive") (r "^0.3.0-beta-dev.23") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.38") (d #t) (k 0)) (d (n "holochain_state") (r "^0.3.0-beta-dev.41") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.3.0-beta-dev.36") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.9") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.38") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.6") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.3.0-beta-dev.40") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.92") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.0-beta-dev.17") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.31") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.35") (k 0)) (d (n "kitsune_p2p_bin_data") (r "^0.3.0-beta-dev.19") (d #t) (k 0)) (d (n "kitsune_p2p_block") (r "^0.3.0-beta-dev.21") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.2.0-beta-dev.24") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap_client") (r "^0.3.0-beta-dev.30") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.24") (d #t) (k 0)) (d (n "lair_keystore") (r "^0.4.4") (f (quote ("rusqlite-bundled-sqlcipher-vendored-openssl"))) (k 1)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.3.0-beta-dev.8") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "opentelemetry_api") (r "=0.20.0") (f (quote ("metrics"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (f (quote ("quickcheck" "stable_graph"))) (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.11") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.13") (d #t) (k 2)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.8-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.8-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer") (r "=4.2.4") (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=4.2.4") (d #t) (k 0)))) (h "10fghyw0zsvc37pnbn9mzic2qcw7n0yqvwaajxvv9gqz3j8amdx9") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "holochain_cascade/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "kitsune_p2p_bin_data/fixt" "kitsune_p2p_types/fixt" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to" "contrafact") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("metrics_influxive" "holochain_metrics/influxive") ("glacial_tests") ("dpki") ("default" "sqlite-encrypted" "tx2" "tx5" "metrics_influxive") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.3.0-beta-dev.44 (c (n "holochain") (v "0.3.0-beta-dev.44") (d (list (d (n "aitia") (r "^0.2.0-beta-dev.7") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-once-cell") (r "^0.5") (d #t) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "clap") (r "^4.0") (d #t) (k 2)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.2.0-beta-dev.13") (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.37") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.37") (d #t) (k 1)) (d (n "holo_hash") (r "^0.3.0-beta-dev.26") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.3.0-beta-dev.43") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.43") (d #t) (k 0)) (d (n "holochain_conductor_services") (r "^0.2.0-beta-dev.13") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.33") (k 0)) (d (n "holochain_metrics") (r "^0.3.0-beta-dev.10") (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.26") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.42") (d #t) (k 0)) (d (n "holochain_secure_primitive") (r "^0.3.0-beta-dev.23") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.39") (d #t) (k 0)) (d (n "holochain_state") (r "^0.3.0-beta-dev.42") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.3.0-beta-dev.37") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.9") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.39") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.6") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.3.0-beta-dev.41") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.92") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.0-beta-dev.18") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.32") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.36") (k 0)) (d (n "kitsune_p2p_bin_data") (r "^0.3.0-beta-dev.19") (d #t) (k 0)) (d (n "kitsune_p2p_block") (r "^0.3.0-beta-dev.21") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.2.0-beta-dev.25") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap_client") (r "^0.3.0-beta-dev.31") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.25") (d #t) (k 0)) (d (n "lair_keystore") (r "^0.4.4") (f (quote ("rusqlite-bundled-sqlcipher-vendored-openssl"))) (k 1)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.3.0-beta-dev.8") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "opentelemetry_api") (r "=0.20.0") (f (quote ("metrics"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (f (quote ("quickcheck" "stable_graph"))) (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.11") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.13") (d #t) (k 2)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.8-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.8-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer") (r "=4.2.4") (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=4.2.4") (d #t) (k 0)))) (h "1syds7jsqi5m0mw894f7vv104r6q5i62xiw2v2xf5mnck58pb84y") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "holochain_cascade/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "kitsune_p2p_bin_data/fixt" "kitsune_p2p_types/fixt" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to" "contrafact") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("metrics_influxive" "holochain_metrics/influxive") ("glacial_tests") ("dpki") ("default" "sqlite-encrypted" "tx2" "tx5" "metrics_influxive") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.2.7 (c (n "holochain") (v "0.2.7") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.2.0-dev.3") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.2.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hdk") (r "^0.2.7") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.2.7") (d #t) (k 1)) (d (n "holo_hash") (r "^0.2.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.2.7") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.2.7") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.7") (k 0)) (d (n "holochain_metrics") (r "^0.2.7") (k 0)) (d (n "holochain_p2p") (r "^0.2.7") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.7") (d #t) (k 0)) (d (n "holochain_state") (r "^0.2.7") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.2.7") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.7") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.7") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.7") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.2.7") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.92") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.7") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.7") (k 0)) (d (n "kitsune_p2p_block") (r "^0.2.7") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.7") (d #t) (k 0)) (d (n "lair_keystore") (r "^0.4.2") (f (quote ("rusqlite-bundled-sqlcipher-vendored-openssl"))) (d #t) (k 1)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.2.7") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "opentelemetry_api") (r "=0.20.0") (f (quote ("metrics"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.6-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.6-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer") (r "=4.2.4") (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=4.2.4") (d #t) (k 0)))) (h "0f1df3zqwfvbcln5yv2z1ngsbh88yja6xgvxf5zil67zi99mizb4") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("metrics_influxive" "holochain_metrics/influxive") ("glacial_tests") ("dpki") ("default" "sqlite-encrypted" "tx2" "tx5" "metrics_influxive") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.3.0-beta-dev.45 (c (n "holochain") (v "0.3.0-beta-dev.45") (d (list (d (n "aitia") (r "^0.2.0-beta-dev.7") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-once-cell") (r "^0.5") (d #t) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "clap") (r "^4.0") (d #t) (k 2)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.2.0-beta-dev.14") (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.38") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.38") (d #t) (k 1)) (d (n "holo_hash") (r "^0.3.0-beta-dev.26") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.3.0-beta-dev.44") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.44") (d #t) (k 0)) (d (n "holochain_conductor_services") (r "^0.2.0-beta-dev.14") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.34") (k 0)) (d (n "holochain_metrics") (r "^0.3.0-beta-dev.11") (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.26") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.43") (d #t) (k 0)) (d (n "holochain_secure_primitive") (r "^0.3.0-beta-dev.23") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.40") (d #t) (k 0)) (d (n "holochain_state") (r "^0.3.0-beta-dev.43") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.3.0-beta-dev.38") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.9") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.40") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.6") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.3.0-beta-dev.42") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.92") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.0-beta-dev.19") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.33") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.37") (k 0)) (d (n "kitsune_p2p_bin_data") (r "^0.3.0-beta-dev.19") (d #t) (k 0)) (d (n "kitsune_p2p_block") (r "^0.3.0-beta-dev.21") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.2.0-beta-dev.25") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap_client") (r "^0.3.0-beta-dev.31") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.25") (d #t) (k 0)) (d (n "lair_keystore") (r "^0.4.4") (f (quote ("rusqlite-bundled-sqlcipher-vendored-openssl"))) (k 1)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.3.0-beta-dev.8") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "opentelemetry_api") (r "=0.20.0") (f (quote ("metrics"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (f (quote ("quickcheck" "stable_graph"))) (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.11") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.13") (d #t) (k 2)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.8-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.8-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer") (r "=4.2.4") (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=4.2.4") (d #t) (k 0)))) (h "1nxlx00q4ihqqhv6izkhz86l6wr34myk296h75chdfdqlngrbfxl") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "holochain_cascade/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "kitsune_p2p_bin_data/fixt" "kitsune_p2p_types/fixt" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to" "contrafact") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("metrics_influxive" "holochain_metrics/influxive") ("glacial_tests") ("dpki") ("default" "sqlite-encrypted" "tx2" "tx5" "metrics_influxive") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.3.0-beta-dev.46 (c (n "holochain") (v "0.3.0-beta-dev.46") (d (list (d (n "aitia") (r "^0.2.0-beta-dev.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-once-cell") (r "^0.5") (d #t) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "clap") (r "^4.0") (d #t) (k 2)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.2.0-beta-dev.15") (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.39") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.39") (d #t) (k 1)) (d (n "holo_hash") (r "^0.3.0-beta-dev.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.3.0-beta-dev.45") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.45") (d #t) (k 0)) (d (n "holochain_conductor_services") (r "^0.2.0-beta-dev.15") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.35") (k 0)) (d (n "holochain_metrics") (r "^0.3.0-beta-dev.11") (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.26") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.44") (d #t) (k 0)) (d (n "holochain_secure_primitive") (r "^0.3.0-beta-dev.23") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.41") (d #t) (k 0)) (d (n "holochain_state") (r "^0.3.0-beta-dev.44") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.3.0-beta-dev.39") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.10") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.41") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.7") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.3.0-beta-dev.43") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.92") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.0-beta-dev.20") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.34") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.38") (k 0)) (d (n "kitsune_p2p_bin_data") (r "^0.3.0-beta-dev.20") (d #t) (k 0)) (d (n "kitsune_p2p_block") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.2.0-beta-dev.26") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap_client") (r "^0.3.0-beta-dev.32") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.26") (d #t) (k 0)) (d (n "lair_keystore") (r "^0.4.4") (f (quote ("rusqlite-bundled-sqlcipher-vendored-openssl"))) (k 1)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.3.0-beta-dev.9") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "opentelemetry_api") (r "=0.20.0") (f (quote ("metrics"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (f (quote ("quickcheck" "stable_graph"))) (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.11") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.13") (d #t) (k 2)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.9-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.9-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer") (r "=4.2.4") (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=4.2.4") (d #t) (k 0)))) (h "08cmnm1hp4bizljfbj831jbvvy885m9wd199484hzm76h8n8shng") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "holochain_cascade/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "kitsune_p2p_bin_data/fixt" "kitsune_p2p_types/fixt" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to" "contrafact") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("metrics_influxive" "holochain_metrics/influxive") ("glacial_tests") ("dpki") ("default" "sqlite-encrypted" "tx2" "tx5" "metrics_influxive") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.2.8-rc.0 (c (n "holochain") (v "0.2.8-rc.0") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.2.0-dev.3") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.2.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hdk") (r "^0.2.7") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.2.7") (d #t) (k 1)) (d (n "holo_hash") (r "^0.2.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.2.7") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.2.7") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.7") (k 0)) (d (n "holochain_metrics") (r "^0.2.7") (k 0)) (d (n "holochain_p2p") (r "^0.2.7") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.7") (d #t) (k 0)) (d (n "holochain_state") (r "^0.2.7") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.2.7") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.7") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.7") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.7") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.2.7") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.92") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.8-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.7") (k 0)) (d (n "kitsune_p2p_block") (r "^0.2.7") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.7") (d #t) (k 0)) (d (n "lair_keystore") (r "^0.4.2") (f (quote ("rusqlite-bundled-sqlcipher-vendored-openssl"))) (d #t) (k 1)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.2.7") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "opentelemetry_api") (r "=0.20.0") (f (quote ("metrics"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.6-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.6-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer") (r "=4.2.4") (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=4.2.4") (d #t) (k 0)))) (h "016bpwdd7x1baivc0bblasp8fcyxrdm9dar5nxxqwhxrwgvvbxnx") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("metrics_influxive" "holochain_metrics/influxive") ("glacial_tests") ("dpki") ("default" "sqlite-encrypted" "tx2" "tx5" "metrics_influxive") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.3.0-beta-dev.47 (c (n "holochain") (v "0.3.0-beta-dev.47") (d (list (d (n "aitia") (r "^0.2.0-beta-dev.9") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^2") (d #t) (k 2)) (d (n "async-once-cell") (r "^0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.22") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "clap") (r "^4.0") (d #t) (k 2)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2") (f (quote ("rand_core"))) (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.3.0") (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.2.0-beta-dev.16") (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.40") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.40") (d #t) (k 1)) (d (n "holo_hash") (r "^0.3.0-beta-dev.28") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.3.0-beta-dev.46") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.46") (d #t) (k 0)) (d (n "holochain_conductor_services") (r "^0.2.0-beta-dev.16") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.36") (k 0)) (d (n "holochain_metrics") (r "^0.3.0-beta-dev.12") (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.27") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.45") (d #t) (k 0)) (d (n "holochain_secure_primitive") (r "^0.3.0-beta-dev.23") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.42") (d #t) (k 0)) (d (n "holochain_state") (r "^0.3.0-beta-dev.45") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.3.0-beta-dev.40") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.11") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.42") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.8") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.3.0-beta-dev.44") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.92") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.0-beta-dev.21") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.35") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.4") (d #t) (k 1)) (d (n "human-panic") (r "^2.0") (d #t) (k 0)) (d (n "indoc") (r "^2.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.39") (k 0)) (d (n "kitsune_p2p_bin_data") (r "^0.3.0-beta-dev.21") (d #t) (k 0)) (d (n "kitsune_p2p_block") (r "^0.3.0-beta-dev.23") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.2.0-beta-dev.27") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.27") (d #t) (k 0)) (d (n "lair_keystore") (r "^0.4.4") (f (quote ("rusqlite-bundled-sqlcipher-vendored-openssl"))) (k 1)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.3.0-beta-dev.10") (d #t) (k 0)) (d (n "nanoid") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "opentelemetry_api") (r "=0.20.0") (f (quote ("metrics"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (f (quote ("quickcheck" "stable_graph"))) (d #t) (k 0)) (d (n "predicates") (r "^3.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.12") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (d #t) (k 2)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.4") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^3.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.11") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.21") (d #t) (k 2)) (d (n "toml") (r "^0.8") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.9-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.9-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "uuid") (r "^1.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer") (r "=4.2.4") (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=4.2.4") (d #t) (k 0)))) (h "0kbjdm7af9x7jaq30wwqb1a777mjkyccrr93s29sk0yd7j3vb8fh") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "holochain_cascade/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "kitsune_p2p_bin_data/fixt" "kitsune_p2p_types/fixt" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to" "contrafact") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("metrics_influxive" "holochain_metrics/influxive") ("glacial_tests") ("dpki") ("default" "sqlite-encrypted" "tx2" "tx5" "metrics_influxive") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.2.8-rc.1 (c (n "holochain") (v "0.2.8-rc.1") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.2.0-dev.3") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.2.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hdk") (r "^0.2.7") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.2.7") (d #t) (k 1)) (d (n "holo_hash") (r "^0.2.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.2.7") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.2.7") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.7") (k 0)) (d (n "holochain_metrics") (r "^0.2.7") (k 0)) (d (n "holochain_p2p") (r "^0.2.7") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.7") (d #t) (k 0)) (d (n "holochain_state") (r "^0.2.7") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.2.7") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.7") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.7") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.7") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.2.7") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.92") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.8-rc.1") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.7") (k 0)) (d (n "kitsune_p2p_block") (r "^0.2.7") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.7") (d #t) (k 0)) (d (n "lair_keystore") (r "^0.4.2") (f (quote ("rusqlite-bundled-sqlcipher-vendored-openssl"))) (d #t) (k 1)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.2.7") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "opentelemetry_api") (r "=0.20.0") (f (quote ("metrics"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.6-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.6-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer") (r "=4.2.4") (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=4.2.4") (d #t) (k 0)))) (h "0xx76qxiny9bj64v6s3gzfypg5gpfnvb1klm6fdrj3wss7qqd0bx") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("metrics_influxive" "holochain_metrics/influxive") ("glacial_tests") ("dpki") ("default" "sqlite-encrypted" "tx2" "tx5" "metrics_influxive") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.3.0-beta-dev.48 (c (n "holochain") (v "0.3.0-beta-dev.48") (d (list (d (n "aitia") (r "^0.2.0-beta-dev.9") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^2") (d #t) (k 2)) (d (n "async-once-cell") (r "^0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.22") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "clap") (r "^4.0") (d #t) (k 2)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2") (f (quote ("rand_core"))) (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.3.0") (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.2.0-beta-dev.17") (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.41") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.3.0-beta-dev.41") (d #t) (k 1)) (d (n "holo_hash") (r "^0.3.0-beta-dev.28") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.3.0-beta-dev.47") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.3.0-beta-dev.47") (d #t) (k 0)) (d (n "holochain_conductor_services") (r "^0.2.0-beta-dev.17") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.37") (k 0)) (d (n "holochain_metrics") (r "^0.3.0-beta-dev.12") (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.27") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.46") (d #t) (k 0)) (d (n "holochain_secure_primitive") (r "^0.3.0-beta-dev.23") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.43") (d #t) (k 0)) (d (n "holochain_state") (r "^0.3.0-beta-dev.46") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.3.0-beta-dev.41") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.11") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.43") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.8") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.3.0-beta-dev.45") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.92") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.36") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.4") (d #t) (k 1)) (d (n "human-panic") (r "^2.0") (d #t) (k 0)) (d (n "indoc") (r "^2.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.40") (k 0)) (d (n "kitsune_p2p_bin_data") (r "^0.3.0-beta-dev.21") (d #t) (k 0)) (d (n "kitsune_p2p_block") (r "^0.3.0-beta-dev.23") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.2.0-beta-dev.28") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.28") (d #t) (k 0)) (d (n "lair_keystore") (r "^0.4.4") (f (quote ("rusqlite-bundled-sqlcipher-vendored-openssl"))) (k 1)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.3.0-beta-dev.10") (d #t) (k 0)) (d (n "nanoid") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "opentelemetry_api") (r "=0.20.0") (f (quote ("metrics"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (f (quote ("quickcheck" "stable_graph"))) (d #t) (k 0)) (d (n "predicates") (r "^3.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.12") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (d #t) (k 2)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.4") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^3.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.11") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.21") (d #t) (k 2)) (d (n "toml") (r "^0.8") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.9-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.9-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "uuid") (r "^1.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer") (r "=4.2.4") (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=4.2.4") (d #t) (k 0)))) (h "1dv80qs3yzm7gzk4544cyfffy5s5i9wbvzg0zlwbz7yg8i6h1x3j") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "holochain_cascade/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "kitsune_p2p_bin_data/fixt" "kitsune_p2p_types/fixt" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to" "contrafact") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("metrics_influxive" "holochain_metrics/influxive") ("glacial_tests") ("dpki") ("default" "sqlite-encrypted" "tx2" "tx5" "metrics_influxive") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.2.8 (c (n "holochain") (v "0.2.8") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.1") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "contrafact") (r "^0.2.0-dev.3") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1") (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.2.8") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hdk") (r "^0.2.8") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.2.8") (d #t) (k 1)) (d (n "holo_hash") (r "^0.2.8") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.2.8") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.2.8") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.8") (k 0)) (d (n "holochain_metrics") (r "^0.2.8") (k 0)) (d (n "holochain_p2p") (r "^0.2.8") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.8") (d #t) (k 0)) (d (n "holochain_state") (r "^0.2.8") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.2.8") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.8") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.8") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.8") (f (quote ("pw"))) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.2.8") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.92") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.2.8") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.8") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 1)) (d (n "human-panic") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.8") (k 0)) (d (n "kitsune_p2p_block") (r "^0.2.8") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.8") (d #t) (k 0)) (d (n "lair_keystore") (r "^0.4.2") (f (quote ("rusqlite-bundled-sqlcipher-vendored-openssl"))) (d #t) (k 1)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.2.8") (d #t) (k 0)) (d (n "must_future") (r "^0.1.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "opentelemetry_api") (r "=0.20.0") (f (quote ("metrics"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "predicates") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_dalek") (r "^0.7") (d #t) (k 2) (p "rand")) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.2") (d #t) (k 2)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.3.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^0.4.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.9") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.6-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.6-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "url_serde") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer") (r "=4.2.4") (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=4.2.4") (d #t) (k 0)))) (h "152clnkby0ywdz0x5nf2qnc04q7nvwfv9w8h8zvmwr408cskhd9k") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("metrics_influxive" "holochain_metrics/influxive") ("glacial_tests") ("dpki") ("default" "sqlite-encrypted" "tx2" "tx5" "metrics_influxive") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.3.0 (c (n "holochain") (v "0.3.0") (d (list (d (n "aitia") (r "^0.2.0-dev.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^2") (d #t) (k 2)) (d (n "async-once-cell") (r "^0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.22") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "clap") (r "^4.0") (d #t) (k 2)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2") (f (quote ("rand_core"))) (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.3.0") (d #t) (k 0)) (d (n "fixt") (r "^0.4.0-dev.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.3.0-dev.0") (d #t) (k 0)) (d (n "hdk") (r "^0.4.0-dev.0") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.4.0-dev.0") (d #t) (k 1)) (d (n "holo_hash") (r "^0.4.0-dev.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.4.0-dev.0") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.4.0-dev.0") (d #t) (k 0)) (d (n "holochain_conductor_services") (r "^0.3.0-dev.0") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.4.0-dev.0") (k 0)) (d (n "holochain_metrics") (r "^0.3.0-dev.0") (k 0)) (d (n "holochain_nonce") (r "^0.4.0-dev.0") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.4.0-dev.0") (d #t) (k 0)) (d (n "holochain_secure_primitive") (r "^0.3.0-dev.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.54") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.4.0-dev.0") (d #t) (k 0)) (d (n "holochain_state") (r "^0.4.0-dev.0") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.4.0-dev.0") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-dev.0") (d #t) (k 0)) (d (n "holochain_types") (r "^0.4.0-dev.0") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-dev.0") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.4.0-dev.0") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.93") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.4.0-dev.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.4.0-dev.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.4") (d #t) (k 1)) (d (n "human-panic") (r "^2.0") (d #t) (k 0)) (d (n "indoc") (r "^2.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.4.0-dev.0") (k 0)) (d (n "kitsune_p2p_bin_data") (r "^0.4.0-dev.0") (d #t) (k 0)) (d (n "kitsune_p2p_block") (r "^0.4.0-dev.0") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.3.0-dev.0") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.4.0-dev.0") (d #t) (k 0)) (d (n "lair_keystore") (r "^0.4.4") (f (quote ("rusqlite-bundled-sqlcipher-vendored-openssl"))) (k 1)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.4.0-dev.0") (d #t) (k 0)) (d (n "nanoid") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "opentelemetry_api") (r "=0.20.0") (f (quote ("metrics"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (f (quote ("quickcheck" "stable_graph"))) (d #t) (k 0)) (d (n "predicates") (r "^3.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.12") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (d #t) (k 2)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.4") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^3.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.11") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.21") (d #t) (k 2)) (d (n "toml") (r "^0.8") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.9-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.9-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "uuid") (r "^1.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer") (r "=4.2.8") (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=4.2.8") (d #t) (k 0)))) (h "0k1rrp20c3hl90arqbj0yzhhi66gppnlpbwlg2y8zcg2jz5jvbl8") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "holochain_cascade/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "kitsune_p2p_bin_data/fixt" "kitsune_p2p_types/fixt" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to" "contrafact") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("metrics_influxive" "holochain_metrics/influxive") ("glacial_tests") ("dpki") ("default" "sqlite-encrypted" "tx2" "tx5" "metrics_influxive") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build")))) (y #t)))

(define-public crate-holochain-0.4.0-dev.1 (c (n "holochain") (v "0.4.0-dev.1") (d (list (d (n "aitia") (r "^0.3.0-dev.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^2") (d #t) (k 2)) (d (n "async-once-cell") (r "^0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.22") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "clap") (r "^4.0") (d #t) (k 2)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2") (f (quote ("rand_core"))) (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.3.0") (d #t) (k 0)) (d (n "fixt") (r "^0.4.0-dev.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "hdk") (r "^0.4.0-dev.1") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.4.0-dev.1") (d #t) (k 1)) (d (n "holo_hash") (r "^0.4.0-dev.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "holochain_conductor_services") (r "^0.3.0-dev.1") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.4.0-dev.1") (k 0)) (d (n "holochain_metrics") (r "^0.4.0-dev.1") (k 0)) (d (n "holochain_nonce") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "holochain_secure_primitive") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.54") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "holochain_state") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.4.0-dev.1") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "holochain_util") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.93") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.4.0-dev.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.4") (d #t) (k 1)) (d (n "human-panic") (r "^2.0") (d #t) (k 0)) (d (n "indoc") (r "^2.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.4.0-dev.1") (k 0)) (d (n "kitsune_p2p_bin_data") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "kitsune_p2p_block") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.3.0-dev.1") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "lair_keystore") (r "^0.4.4") (f (quote ("rusqlite-bundled-sqlcipher-vendored-openssl"))) (k 1)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "opentelemetry_api") (r "=0.20.0") (f (quote ("metrics"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (f (quote ("quickcheck" "stable_graph"))) (d #t) (k 0)) (d (n "predicates") (r "^3.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.12") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (d #t) (k 2)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.4") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^3.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.11") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.21") (d #t) (k 2)) (d (n "toml") (r "^0.8") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.9-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.9-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "uuid") (r "^1.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer") (r "=4.2.8") (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=4.2.8") (d #t) (k 0)))) (h "1f30j88w31ps4147yibwclz629hk91lkcl94bcpaxigi0ijgby48") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "holochain_cascade/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "kitsune_p2p_bin_data/fixt" "kitsune_p2p_types/fixt" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to" "contrafact") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("metrics_influxive" "holochain_metrics/influxive") ("glacial_tests") ("dpki") ("default" "sqlite-encrypted" "tx2" "tx5" "metrics_influxive") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.4.0-dev.2 (c (n "holochain") (v "0.4.0-dev.2") (d (list (d (n "aitia") (r "^0.3.0-dev.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^2") (d #t) (k 2)) (d (n "async-once-cell") (r "^0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.22") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "clap") (r "^4.0") (d #t) (k 2)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2") (f (quote ("rand_core"))) (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.3.0") (d #t) (k 0)) (d (n "fixt") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.4.0-dev.2") (d #t) (k 0)) (d (n "hdk") (r "^0.4.0-dev.2") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.4.0-dev.2") (d #t) (k 1)) (d (n "holo_hash") (r "^0.4.0-dev.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.4.0-dev.2") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.4.0-dev.2") (d #t) (k 0)) (d (n "holochain_conductor_services") (r "^0.3.0-dev.2") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.4.0-dev.2") (k 0)) (d (n "holochain_metrics") (r "^0.4.0-dev.1") (k 0)) (d (n "holochain_nonce") (r "^0.4.0-dev.2") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.4.0-dev.2") (d #t) (k 0)) (d (n "holochain_secure_primitive") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.54") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.4.0-dev.2") (d #t) (k 0)) (d (n "holochain_state") (r "^0.4.0-dev.2") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.4.0-dev.2") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.4.0-dev.2") (d #t) (k 0)) (d (n "holochain_util") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.4.0-dev.2") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.93") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.4.0-dev.2") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.4.0-dev.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.4") (d #t) (k 1)) (d (n "human-panic") (r "^2.0") (d #t) (k 0)) (d (n "indoc") (r "^2.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.4.0-dev.2") (k 0)) (d (n "kitsune_p2p_bin_data") (r "^0.4.0-dev.2") (d #t) (k 0)) (d (n "kitsune_p2p_block") (r "^0.4.0-dev.2") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.3.0-dev.2") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.4.0-dev.2") (d #t) (k 0)) (d (n "lair_keystore") (r "^0.4.4") (f (quote ("rusqlite-bundled-sqlcipher-vendored-openssl"))) (k 1)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "opentelemetry_api") (r "=0.20.0") (f (quote ("metrics"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (f (quote ("quickcheck" "stable_graph"))) (d #t) (k 0)) (d (n "predicates") (r "^3.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.12") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (d #t) (k 2)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.4") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^3.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.11") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.21") (d #t) (k 2)) (d (n "toml") (r "^0.8") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.9-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.9-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "uuid") (r "^1.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer") (r "=4.2.8") (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=4.2.8") (d #t) (k 0)))) (h "05r22y5kd3gzp91nrk7qvb45y0fafr36k0zq4kciwnvf8rhgy9a5") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "holochain_cascade/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "kitsune_p2p_bin_data/fixt" "kitsune_p2p_types/fixt" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to" "contrafact") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("metrics_influxive" "holochain_metrics/influxive") ("glacial_tests") ("dpki") ("default" "sqlite-encrypted" "tx2" "tx5" "metrics_influxive") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.4.0-dev.3 (c (n "holochain") (v "0.4.0-dev.3") (d (list (d (n "aitia") (r "^0.3.0-dev.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^2") (d #t) (k 2)) (d (n "async-once-cell") (r "^0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.22") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "clap") (r "^4.0") (d #t) (k 2)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2") (f (quote ("rand_core"))) (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.3.0") (d #t) (k 0)) (d (n "fixt") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.4.0-dev.3") (d #t) (k 0)) (d (n "hdk") (r "^0.4.0-dev.3") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.4.0-dev.3") (d #t) (k 1)) (d (n "holo_hash") (r "^0.4.0-dev.3") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.4.0-dev.3") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.4.0-dev.3") (d #t) (k 0)) (d (n "holochain_conductor_services") (r "^0.3.0-dev.3") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.4.0-dev.3") (k 0)) (d (n "holochain_metrics") (r "^0.4.0-dev.1") (k 0)) (d (n "holochain_nonce") (r "^0.4.0-dev.2") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.4.0-dev.3") (d #t) (k 0)) (d (n "holochain_secure_primitive") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.54") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.4.0-dev.3") (d #t) (k 0)) (d (n "holochain_state") (r "^0.4.0-dev.3") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.4.0-dev.3") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.4.0-dev.2") (d #t) (k 0)) (d (n "holochain_types") (r "^0.4.0-dev.3") (d #t) (k 0)) (d (n "holochain_util") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.4.0-dev.3") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.93") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.4.0-dev.3") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.4.0-dev.3") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.4") (d #t) (k 1)) (d (n "human-panic") (r "^2.0") (d #t) (k 0)) (d (n "indoc") (r "^2.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.4.0-dev.3") (k 0)) (d (n "kitsune_p2p_bin_data") (r "^0.4.0-dev.3") (d #t) (k 0)) (d (n "kitsune_p2p_block") (r "^0.4.0-dev.3") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.3.0-dev.3") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.4.0-dev.3") (d #t) (k 0)) (d (n "lair_keystore") (r "^0.4.4") (f (quote ("rusqlite-bundled-sqlcipher-vendored-openssl"))) (k 1)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "opentelemetry_api") (r "=0.20.0") (f (quote ("metrics"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (f (quote ("quickcheck" "stable_graph"))) (d #t) (k 0)) (d (n "predicates") (r "^3.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.12") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (d #t) (k 2)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.4") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^3.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.11") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.21") (d #t) (k 2)) (d (n "toml") (r "^0.8") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.9-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.9-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "uuid") (r "^1.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer") (r "=4.2.8") (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=4.2.8") (d #t) (k 0)))) (h "16kx1g7x7gzlcj5vrdmvax3kj662glg53k8jyznqq8cfwcd15x8w") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "holochain_cascade/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "kitsune_p2p_bin_data/fixt" "kitsune_p2p_types/fixt" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to" "contrafact") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("metrics_influxive" "holochain_metrics/influxive") ("glacial_tests") ("dpki") ("default" "sqlite-encrypted" "tx2" "tx5" "metrics_influxive") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.3.1-rc.0 (c (n "holochain") (v "0.3.1-rc.0") (d (list (d (n "aitia") (r "^0.2.1-rc.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^2") (d #t) (k 2)) (d (n "async-once-cell") (r "^0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.22") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "clap") (r "^4.0") (d #t) (k 2)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2") (f (quote ("rand_core"))) (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.3.0") (d #t) (k 0)) (d (n "fixt") (r "^0.3.1-rc.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.2.1-rc.0") (d #t) (k 0)) (d (n "hdk") (r "^0.3.1-rc.0") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.3.1-rc.0") (d #t) (k 1)) (d (n "holo_hash") (r "^0.3.1-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.3.1-rc.0") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.3.1-rc.0") (d #t) (k 0)) (d (n "holochain_conductor_services") (r "^0.2.1-rc.0") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.1-rc.0") (k 0)) (d (n "holochain_metrics") (r "^0.3.1-rc.0") (k 0)) (d (n "holochain_nonce") (r "^0.3.1-rc.0") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.1-rc.0") (d #t) (k 0)) (d (n "holochain_secure_primitive") (r "^0.3.1-rc.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.54") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.1-rc.0") (d #t) (k 0)) (d (n "holochain_state") (r "^0.3.1-rc.0") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.3.1-rc.0") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.1-rc.0") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.1-rc.0") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.1-rc.0") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.3.1-rc.0") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.93") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.3.1-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.1-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.4") (d #t) (k 1)) (d (n "human-panic") (r "^2.0") (d #t) (k 0)) (d (n "indoc") (r "^2.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.1-rc.0") (k 0)) (d (n "kitsune_p2p_bin_data") (r "^0.3.1-rc.0") (d #t) (k 0)) (d (n "kitsune_p2p_block") (r "^0.3.1-rc.0") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.2.1-rc.0") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.1-rc.0") (d #t) (k 0)) (d (n "lair_keystore") (r "^0.4.4") (f (quote ("rusqlite-bundled-sqlcipher-vendored-openssl"))) (k 1)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.3.1-rc.0") (d #t) (k 0)) (d (n "nanoid") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "opentelemetry_api") (r "=0.20.0") (f (quote ("metrics"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (f (quote ("quickcheck" "stable_graph"))) (d #t) (k 0)) (d (n "predicates") (r "^3.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.12") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (d #t) (k 2)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.4") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^3.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.11") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.21") (d #t) (k 2)) (d (n "toml") (r "^0.8") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.9-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.9-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "uuid") (r "^1.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer") (r "=4.2.8") (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=4.2.8") (d #t) (k 0)))) (h "1k4s4b8bkvqb8nk7bzkpclnw4p233srz74r6js7xfbcx97rhbszh") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "holochain_cascade/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "kitsune_p2p_bin_data/fixt" "kitsune_p2p_types/fixt" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to" "contrafact") ("sweetest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("metrics_influxive" "holochain_metrics/influxive") ("glacial_tests") ("dpki") ("default" "sqlite-encrypted" "tx2" "tx5" "metrics_influxive") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.4.0-dev.4 (c (n "holochain") (v "0.4.0-dev.4") (d (list (d (n "aitia") (r "^0.3.0-dev.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^2") (d #t) (k 2)) (d (n "async-once-cell") (r "^0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.22") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "clap") (r "^4.0") (d #t) (k 2)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2") (f (quote ("rand_core"))) (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.3.0") (d #t) (k 0)) (d (n "fixt") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.4.0-dev.4") (d #t) (k 0)) (d (n "hdk") (r "^0.4.0-dev.4") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.4.0-dev.4") (d #t) (k 1)) (d (n "holo_hash") (r "^0.4.0-dev.4") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.4.0-dev.4") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.4.0-dev.4") (d #t) (k 0)) (d (n "holochain_conductor_services") (r "^0.3.0-dev.4") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.4.0-dev.4") (k 0)) (d (n "holochain_metrics") (r "^0.4.0-dev.1") (k 0)) (d (n "holochain_nonce") (r "^0.4.0-dev.2") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.4.0-dev.4") (d #t) (k 0)) (d (n "holochain_secure_primitive") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.54") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.4.0-dev.4") (d #t) (k 0)) (d (n "holochain_state") (r "^0.4.0-dev.4") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.4.0-dev.4") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.4.0-dev.2") (d #t) (k 0)) (d (n "holochain_types") (r "^0.4.0-dev.4") (d #t) (k 0)) (d (n "holochain_util") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.4.0-dev.4") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.94") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.4.0-dev.4") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.4.0-dev.4") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.4") (d #t) (k 1)) (d (n "human-panic") (r "^2.0") (d #t) (k 0)) (d (n "indoc") (r "^2.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.4.0-dev.4") (k 0)) (d (n "kitsune_p2p_bin_data") (r "^0.4.0-dev.4") (d #t) (k 0)) (d (n "kitsune_p2p_block") (r "^0.4.0-dev.4") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.3.0-dev.4") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.4.0-dev.4") (d #t) (k 0)) (d (n "lair_keystore") (r "^0.4.4") (f (quote ("rusqlite-bundled-sqlcipher-vendored-openssl"))) (k 1)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "opentelemetry_api") (r "=0.20.0") (f (quote ("metrics"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (f (quote ("quickcheck" "stable_graph"))) (d #t) (k 0)) (d (n "predicates") (r "^3.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.12") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (d #t) (k 2)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.4") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^3.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.11") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.21") (d #t) (k 2)) (d (n "toml") (r "^0.8") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.9-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.9-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "uuid") (r "^1.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer") (r "=4.2.8") (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=4.2.8") (d #t) (k 0)))) (h "0kancw7nvlkz2fqnh193h1sfbr7p1p9gr6i83nki7q8gasnvhvhx") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "holochain_cascade/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "kitsune_p2p_bin_data/fixt" "kitsune_p2p_types/fixt" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to" "contrafact") ("sweettest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("metrics_influxive" "holochain_metrics/influxive") ("glacial_tests") ("dpki") ("default" "sqlite-encrypted" "tx2" "tx5" "metrics_influxive") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

(define-public crate-holochain-0.4.0-dev.5 (c (n "holochain") (v "0.4.0-dev.5") (d (list (d (n "aitia") (r "^0.3.0-dev.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_cmd") (r "^2") (d #t) (k 2)) (d (n "async-once-cell") (r "^0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.22") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 1)) (d (n "clap") (r "^4.0") (d #t) (k 2)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2") (f (quote ("rand_core"))) (d #t) (k 2)) (d (n "either") (r "^1.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.3.0") (d #t) (k 0)) (d (n "fixt") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.4.0-dev.5") (d #t) (k 0)) (d (n "hdk") (r "^0.4.0-dev.5") (o #t) (d #t) (k 0)) (d (n "hdk") (r "^0.4.0-dev.5") (d #t) (k 1)) (d (n "holo_hash") (r "^0.4.0-dev.5") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_cascade") (r "^0.4.0-dev.5") (d #t) (k 0)) (d (n "holochain_conductor_api") (r "^0.4.0-dev.5") (d #t) (k 0)) (d (n "holochain_conductor_services") (r "^0.3.0-dev.5") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.4.0-dev.5") (k 0)) (d (n "holochain_metrics") (r "^0.4.0-dev.1") (k 0)) (d (n "holochain_nonce") (r "^0.4.0-dev.2") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.4.0-dev.5") (d #t) (k 0)) (d (n "holochain_secure_primitive") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.54") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.4.0-dev.5") (d #t) (k 0)) (d (n "holochain_state") (r "^0.4.0-dev.5") (d #t) (k 0)) (d (n "holochain_test_wasm_common") (r "^0.4.0-dev.5") (o #t) (d #t) (k 0)) (d (n "holochain_trace") (r "^0.4.0-dev.3") (d #t) (k 0)) (d (n "holochain_types") (r "^0.4.0-dev.5") (d #t) (k 0)) (d (n "holochain_util") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.4.0-dev.5") (d #t) (k 0)) (d (n "holochain_wasmer_host") (r "=0.0.94") (d #t) (k 0)) (d (n "holochain_websocket") (r "^0.4.0-dev.5") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.4.0-dev.5") (f (quote ("full"))) (d #t) (k 0)) (d (n "hostname") (r "^0.4") (d #t) (k 1)) (d (n "human-panic") (r "^2.0") (d #t) (k 0)) (d (n "indoc") (r "^2.0") (d #t) (k 2)) (d (n "isotest") (r "^0") (d #t) (k 2)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.4.0-dev.5") (k 0)) (d (n "kitsune_p2p_bin_data") (r "^0.4.0-dev.5") (d #t) (k 0)) (d (n "kitsune_p2p_block") (r "^0.4.0-dev.5") (d #t) (k 0)) (d (n "kitsune_p2p_bootstrap") (r "^0.3.0-dev.5") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.4.0-dev.5") (d #t) (k 0)) (d (n "lair_keystore") (r "^0.4.4") (f (quote ("rusqlite-bundled-sqlcipher-vendored-openssl"))) (k 1)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "mr_bundle") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "opentelemetry_api") (r "=0.20.0") (f (quote ("metrics"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (f (quote ("quickcheck" "stable_graph"))) (d #t) (k 0)) (d (n "predicates") (r "^3.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand-utf8") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.12") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (d #t) (k 2)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "sd-notify") (r "^0.4") (d #t) (t "cfg(unix)") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "serial_test") (r "^3.0") (d #t) (k 2)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "sodoken") (r "=0.0.11") (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (d #t) (k 0)) (d (n "subtle-encoding") (r "^0.5") (d #t) (k 0)) (d (n "task-motel") (r "^0.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-case") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("keccak" "sha3"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.21") (d #t) (k 2)) (d (n "toml") (r "^0.8") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 0)) (d (n "tx5-go-pion-turn") (r "=0.0.9-alpha") (o #t) (d #t) (k 0)) (d (n "tx5-signal-srv") (r "=0.0.9-alpha") (o #t) (d #t) (k 0)) (d (n "unwrap_to") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "url2") (r "^0.0.6") (d #t) (k 0)) (d (n "uuid") (r "^1.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wasmer") (r "=4.2.8") (d #t) (k 0)) (d (n "wasmer-middlewares") (r "=4.2.8") (d #t) (k 0)))) (h "0808ps0nxiqh296dlg7s8aa28vvg1nlxw1gm833l2kdl1p6vc87q") (f (quote (("wasmer_debug_memory" "holochain_wasmer_host/debug_memory") ("tx5" "kitsune_p2p/tx5" "tx5-go-pion-turn" "tx5-signal-srv") ("tx2" "kitsune_p2p/tx2") ("test_utils" "contrafact" "diff" "ghost_actor/test_utils" "hdk/test_utils" "holochain_sqlite/test_utils" "holochain_state/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "kitsune_p2p_types/test_utils" "holochain_cascade/test_utils" "kitsune_p2p/test_utils" "kitsune_p2p_bootstrap" "holochain_p2p/mock_network" "kitsune_p2p_bin_data/fixt" "kitsune_p2p_types/fixt" "arbitrary" "matches" "holochain_test_wasm_common" "unwrap_to" "contrafact") ("sweettest" "test_utils" "sqlite") ("sqlite-encrypted" "rusqlite/bundled-sqlcipher-vendored-openssl" "holochain_keystore/sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_cascade/sqlite-encrypted" "holochain_conductor_api/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_state/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted" "kitsune_p2p_block/sqlite-encrypted" "kitsune_p2p_bootstrap/sqlite-encrypted") ("sqlite" "rusqlite/bundled" "holochain_keystore/sqlite" "holo_hash/sqlite" "holochain_cascade/sqlite" "holochain_conductor_api/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_sqlite/sqlite" "holochain_state/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite" "kitsune_p2p_block/sqlite" "kitsune_p2p_bootstrap/sqlite") ("slow_tests") ("only_check_wasms" "holochain_wasm_test_utils/only_check") ("metrics_influxive" "holochain_metrics/influxive") ("glacial_tests") ("dpki") ("default" "sqlite-encrypted" "tx2" "tx5" "metrics_influxive") ("chc" "bytes" "reqwest" "holochain_conductor_api/chc" "holochain_types/chc") ("build_wasms" "holochain_wasm_test_utils/build"))))))

