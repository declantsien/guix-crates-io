(define-module (crates-io ho lo holochain_p2p) #:use-module (crates-io))

(define-public crate-holochain_p2p-0.0.1 (c (n "holochain_p2p") (v "0.0.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "fixt") (r "^0.0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.1") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.3") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.1") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.50") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.1") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.1") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.3") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.1") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.1") (d #t) (k 0)) (d (n "mockall") (r "^0.8.1") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "134h3dgh3r2khqs03738x9866ca92r297bwlwfxa4w6r3q82jwwk")))

(define-public crate-holochain_p2p-0.0.2 (c (n "holochain_p2p") (v "0.0.2") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "fixt") (r "^0.0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.1") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.4") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.2") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.2") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.2") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.4") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.2") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.2") (d #t) (k 0)) (d (n "mockall") (r "^0.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "05ayfd2zjm94324d7mcxyx8ax0hxqyd0laz077id1cn5pjahz9d2")))

(define-public crate-holochain_p2p-0.0.3 (c (n "holochain_p2p") (v "0.0.3") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "fixt") (r "^0.0.5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.3") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.5") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.3") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.3") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.3") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.5") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.3") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.3") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "0xi72lglx1rk5xa71m03n18x1a9ivi7khha3nlvm05dl0ghfbnak")))

(define-public crate-holochain_p2p-0.0.4 (c (n "holochain_p2p") (v "0.0.4") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "fixt") (r "^0.0.5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.3") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.5") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.4") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.4") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.3") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.6") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.4") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.4") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1wb9p48fxdr3dsk4bcyb22if6inff2d4q3516zd39fwsd5zacrbz")))

(define-public crate-holochain_p2p-0.0.5 (c (n "holochain_p2p") (v "0.0.5") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "fixt") (r "^0.0.5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.3") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.5") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.5") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.5") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.3") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.7") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.5") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.4") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "092226rjk5x90yzgm72ksnk00fkjcrh04i1pkxxk3jzsd2p3njgc")))

(define-public crate-holochain_p2p-0.0.6 (c (n "holochain_p2p") (v "0.0.6") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "fixt") (r "^0.0.5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.6") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.6") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.6") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.3") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.8") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.6") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.5") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1h7mjkdpg6ivv66ikfrb4b7dkqqzskij1717fwjf6cs3b5s23p39")))

(define-public crate-holochain_p2p-0.0.7 (c (n "holochain_p2p") (v "0.0.7") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "fixt") (r "^0.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.7") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.7") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.7") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.4") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.9") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.7") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.6") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1s8h2b3naiczbf6yhkww27drwjl753zrkma8ihi7xm0985g6nk5z")))

(define-public crate-holochain_p2p-0.0.8 (c (n "holochain_p2p") (v "0.0.8") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "fixt") (r "^0.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.7") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.8") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.8") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.4") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.8") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.7") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "0yqgkxwfwscigdgsqwnnaycvy8jgmgfyc7mcsjvpjj8as5jl7dh2")))

(define-public crate-holochain_p2p-0.0.9 (c (n "holochain_p2p") (v "0.0.9") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "fixt") (r "^0.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.8") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.9") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.9") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.4") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.11") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.9") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.8") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "13j3zaji1x5g762nxy3165rkjh4abwhnz0i1m61sdygy9hc94kr8")))

(define-public crate-holochain_p2p-0.0.10 (c (n "holochain_p2p") (v "0.0.10") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "fixt") (r "^0.0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.9") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.4") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.12") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.10") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.9") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "11wa65nyi02zlpdpm58a0kh9yaknq0kl6b2mggh84rc7i2nl375i")))

(define-public crate-holochain_p2p-0.0.11 (c (n "holochain_p2p") (v "0.0.11") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "fixt") (r "^0.0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.11") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.11") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.4") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.13") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.11") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.10") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "0s6ni12k3ymsjfq0cydrb6813nznkn4finamgs1200s64j0llayl") (f (quote (("mock_network" "kitsune_p2p/mock_network"))))))

(define-public crate-holochain_p2p-0.0.12 (c (n "holochain_p2p") (v "0.0.12") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "fixt") (r "^0.0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.12") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.12") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.4") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.14") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.11") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.10") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1bxi9zf268zlymcdl5ddfasphpv3rc7rfkj14wsmr8dajnnji3dz") (f (quote (("mock_network" "kitsune_p2p/mock_network"))))))

(define-public crate-holochain_p2p-0.0.13 (c (n "holochain_p2p") (v "0.0.13") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "fixt") (r "^0.0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.11") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.13") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.13") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.4") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.15") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.11") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.10") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "08pg9a5c5rwgvz7fl25dx1izys7acrnsqpqdka79a71g3nspjfs4") (f (quote (("mock_network" "kitsune_p2p/mock_network"))))))

(define-public crate-holochain_p2p-0.0.14 (c (n "holochain_p2p") (v "0.0.14") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "fixt") (r "^0.0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.12") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.14") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.14") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.4") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.16") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.12") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.11") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1v6bva58a5w1csgfyqg5s3glm5vppr8hn37f2hk0vr0s9ywknbln") (f (quote (("mock_network" "kitsune_p2p/mock_network"))))))

(define-public crate-holochain_p2p-0.0.15 (c (n "holochain_p2p") (v "0.0.15") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "fixt") (r "^0.0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.12") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.15") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.15") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.4") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.17") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.13") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.12") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1lx6jxd7zf4i3kzhk7hj93rpkqgwplvq55jiiyqk42rxh6hra9gv") (f (quote (("mock_network" "kitsune_p2p/mock_network"))))))

(define-public crate-holochain_p2p-0.0.16 (c (n "holochain_p2p") (v "0.0.16") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "fixt") (r "^0.0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.12") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.16") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.16") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.5") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.17") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.14") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.13") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1xqwifqarvm9girbdlq1nbg0s2pjr0c6ali0k7hcf7plnla75m71") (f (quote (("mock_network" "kitsune_p2p/mock_network"))))))

(define-public crate-holochain_p2p-0.0.17 (c (n "holochain_p2p") (v "0.0.17") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "fixt") (r "^0.0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.12") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.17") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.17") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.6") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.17") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.15") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.14") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "06qwh2wrmama0c9nqcpavabw3py44gg6k8vqrv89waykk3vm1lvy") (f (quote (("mock_network" "kitsune_p2p/mock_network"))))))

(define-public crate-holochain_p2p-0.0.18 (c (n "holochain_p2p") (v "0.0.18") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "fixt") (r "^0.0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.12") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.18") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.18") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.6") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.17") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.16") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.14") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "0lwmivzn85g7vpm6gkhc4z76s1isc3qniyvm2zghncpzv2w59x5v") (f (quote (("mock_network" "kitsune_p2p/mock_network"))))))

(define-public crate-holochain_p2p-0.0.19 (c (n "holochain_p2p") (v "0.0.19") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "fixt") (r "^0.0.8") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.13") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.19") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.19") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.6") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.18") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.17") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.15") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1zq6wsd1jg84k00iwj3dpvciri702mdrb3h52dy06y89s7hjv1dq") (f (quote (("mock_network" "kitsune_p2p/mock_network"))))))

(define-public crate-holochain_p2p-0.0.20 (c (n "holochain_p2p") (v "0.0.20") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "fixt") (r "^0.0.8") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.13") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.20") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.20") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.6") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.18") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.18") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.15") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "19lk08hxx4pi7gcs9vzsvyrnjw6xk1c9slaf32ajhwhziqz2xjya") (f (quote (("mock_network" "kitsune_p2p/mock_network"))))))

(define-public crate-holochain_p2p-0.0.21 (c (n "holochain_p2p") (v "0.0.21") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "fixt") (r "^0.0.8") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.14") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.21") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.21") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.6") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.19") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.18") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.15") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "12ylh61n9mbb187bin8qsd73m3zl5x2abbyv7yx38nfilj6xjjbc") (f (quote (("mock_network" "kitsune_p2p/mock_network"))))))

(define-public crate-holochain_p2p-0.0.22 (c (n "holochain_p2p") (v "0.0.22") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "fixt") (r "^0.0.8") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.15") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.22") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.22") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.6") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.20") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.19") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.15") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "0gi447bgqwap8mqzmrsz526ra29l7r8qmjcanpa0prn76biqi435") (f (quote (("mock_network" "kitsune_p2p/mock_network"))))))

(define-public crate-holochain_p2p-0.0.23 (c (n "holochain_p2p") (v "0.0.23") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "fixt") (r "^0.0.8") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.16") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.23") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.23") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.6") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.21") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.20") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.15") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "0zrrhvmlr9hq7iiwgs2x1jimm73wmmq5l40jlf40gjf9pr8izfm2") (f (quote (("mock_network" "kitsune_p2p/mock_network"))))))

(define-public crate-holochain_p2p-0.0.24 (c (n "holochain_p2p") (v "0.0.24") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "fixt") (r "^0.0.8") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.17") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.24") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.24") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.6") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.22") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.21") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.15") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1js2x9y6d0nc5xq8fi812mbz19xzvmd4v52rf13w91m9wd009rr4") (f (quote (("mock_network" "kitsune_p2p/mock_network"))))))

(define-public crate-holochain_p2p-0.0.25 (c (n "holochain_p2p") (v "0.0.25") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "fixt") (r "^0.0.8") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.18") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.25") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.25") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.6") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.23") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.22") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.16") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "0ka7hd4v1nyccqzrxp1bj6ikxd8krnbfdj70zcn3lpxbzw2lydlh") (f (quote (("mock_network" "kitsune_p2p/mock_network"))))))

(define-public crate-holochain_p2p-0.0.26 (c (n "holochain_p2p") (v "0.0.26") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "fixt") (r "^0.0.8") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.19") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.26") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.26") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.7") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.24") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.23") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.17") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "0qfznc9qk2nyr5s1hx781i9x30m8smdddysjlzysb7sbavylhrsa") (f (quote (("mock_network" "kitsune_p2p/mock_network"))))))

(define-public crate-holochain_p2p-0.0.27 (c (n "holochain_p2p") (v "0.0.27") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "fixt") (r "^0.0.8") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.20") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.27") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.27") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.7") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.25") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.24") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.18") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1gm5g9hb2z84aqn3nm9yf6bhzs3c53hy77l8yq0z3fqfzm6qiy8k") (f (quote (("mock_network" "kitsune_p2p/mock_network"))))))

(define-public crate-holochain_p2p-0.0.28 (c (n "holochain_p2p") (v "0.0.28") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "fixt") (r "^0.0.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.21") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.28") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.28") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.8") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.26") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.25") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.19") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1p437bc58kl77ghhgp8qdzkf4x8fmcqi4jaz0qaml3fgbqvy8fy6") (f (quote (("mock_network" "kitsune_p2p/mock_network"))))))

(define-public crate-holochain_p2p-0.0.29 (c (n "holochain_p2p") (v "0.0.29") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "fixt") (r "^0.0.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.21") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.29") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.29") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.8") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.26") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.26") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.20") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1zy2ib88dn6dxgxvlizs0c95ml0dmqs29rnbwfn6cxl4zz9xkh9b") (f (quote (("mock_network" "kitsune_p2p/mock_network"))))))

(define-public crate-holochain_p2p-0.0.30 (c (n "holochain_p2p") (v "0.0.30") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "fixt") (r "^0.0.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.21") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.30") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.30") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.8") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.27") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.26") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.20") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1my2jgrkkpmij7dq4520cvc5k9dgd8idn081b2fkll44901cnww7") (f (quote (("mock_network" "kitsune_p2p/mock_network"))))))

(define-public crate-holochain_p2p-0.0.31 (c (n "holochain_p2p") (v "0.0.31") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "fixt") (r "^0.0.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.21") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.31") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.31") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.9") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.27") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.27") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.21") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1pbqk9fs15gamin7wx0df1vrvvd48gj44yrpadqb8gyj6py9jq1h") (f (quote (("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.0.32 (c (n "holochain_p2p") (v "0.0.32") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "fixt") (r "^0.0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.22") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.32") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.32") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.9") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.28") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.28") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.22") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "197jjgazavlvmrcwp8bpzpr3wcw5ffg52zn0jykrnca7iz4vbpy2") (f (quote (("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.0.33 (c (n "holochain_p2p") (v "0.0.33") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "fixt") (r "^0.0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.23") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.33") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.33") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.9") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.29") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.29") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.22") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "02y395vqqxbp4cyp2zckax213gkny1i0pfmkgaq0j7n636vn6xzl") (f (quote (("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.0.34 (c (n "holochain_p2p") (v "0.0.34") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "fixt") (r "^0.0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.23") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.34") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.34") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.9") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.30") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.30") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.22") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "11474sc27bmszyp84dvn9iq64r32811x6xrrq9g7mh29hw3zfjh6") (f (quote (("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.0.35 (c (n "holochain_p2p") (v "0.0.35") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "fixt") (r "^0.0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.23") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.35") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.35") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.9") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.31") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.30") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.22") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "18shddkad4lc79wbvpy04x8m09qc8is6i8slfkjnskvnczks78zp") (f (quote (("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.0.36 (c (n "holochain_p2p") (v "0.0.36") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "fixt") (r "^0.0.11") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.24") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.36") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.36") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.32") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.31") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.23") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1v98naix3qrhqavkvm7px2xwsk3mxa4p20lf5ca0388mbby8dk9p") (f (quote (("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.0.37 (c (n "holochain_p2p") (v "0.0.37") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "fixt") (r "^0.0.11") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.25") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.37") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.37") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.33") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.32") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.24") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "0q6kpnflny9ylfd1yr5lyvm5fl61p0qc4nxfk9mqqkc07326i315") (f (quote (("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.0.38 (c (n "holochain_p2p") (v "0.0.38") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "fixt") (r "^0.0.11") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.25") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.38") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.38") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.33") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.33") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.24") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "0vb95ywdfc1hp8vg47srzgrq5y5lb0sc2bz8xx33i7xxa7j84q0j") (f (quote (("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.0.39 (c (n "holochain_p2p") (v "0.0.39") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "fixt") (r "^0.0.11") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.26") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.39") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.39") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.34") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.34") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.24") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "117139mamlfk4r9f5x2i6x5wqh3aa9zb0pkf9y8x5fdrj5al6f90") (f (quote (("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.0.40 (c (n "holochain_p2p") (v "0.0.40") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "fixt") (r "^0.0.11") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.27") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.40") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.40") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.35") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.35") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.24") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "11ax90m12phy7jnh0f7z8grg0wy8g94djjg8blff3gy742krbmxl") (f (quote (("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.0.41 (c (n "holochain_p2p") (v "0.0.41") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "fixt") (r "^0.0.11") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.27") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.41") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.41") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.35") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.35") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.24") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "10mgwpd0gc4j6p8jwbq2zq3v8pjj225s0xk5i5hn45nxgz9vlppx") (f (quote (("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.0.42 (c (n "holochain_p2p") (v "0.0.42") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "fixt") (r "^0.0.12") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.28") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.42") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.42") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.36") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.36") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.24") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1yci929vxy48a6p8fkd7b8p5c00i7vvki6h90zpga21fsyncilhk") (f (quote (("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.0.43 (c (n "holochain_p2p") (v "0.0.43") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "fixt") (r "^0.0.13") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.29") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.43") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.43") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.37") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.37") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.25") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "072m8prhakl47zyd0rkb6bzi1v31kxxi5zih3g1v9slgkz9kiaa5") (f (quote (("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.0.44 (c (n "holochain_p2p") (v "0.0.44") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "fixt") (r "^0.0.13") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.29") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.44") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.44") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.38") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.38") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.26") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "066s26gcnlxfal4dn1qj4swld9339frbz8r5y59s208idn849d49") (f (quote (("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.0.45 (c (n "holochain_p2p") (v "0.0.45") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.0.13") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.30") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.45") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.45") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.39") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.39") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.27") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "0qcp5b25kwwqcknjfzmxb7ab3iiys21aj5qvbg9c4is56wxp9kql") (f (quote (("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.0.46 (c (n "holochain_p2p") (v "0.0.46") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.0.13") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.30") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.45") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.46") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.39") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.39") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.27") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1vlw2ax7b162f1bj845dn0n4mdlxbq82vq1f9kbjk3mxy277hacr") (f (quote (("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.0.47 (c (n "holochain_p2p") (v "0.0.47") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.0.13") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.30") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.46") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.47") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.40") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.39") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.27") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1ygkvz8rzn80bkmmdn3p3hcz56svczr1r8gd465a4cabdr4nb007") (f (quote (("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.0.48 (c (n "holochain_p2p") (v "0.0.48") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.0.13") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.30") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.47") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.48") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.41") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.39") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.27") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "05jw7xm8nlzb6crryqxn2j5b41calcsv316gy1567jfpa4cb79hd") (f (quote (("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.0.49 (c (n "holochain_p2p") (v "0.0.49") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.0.14") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.31") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.48") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.49") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.42") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.40") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.28") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "03c2r56mqnc9bvvpqb0h9b2ci15f72gryzi17sw499v1vg4kw4g8") (f (quote (("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.0.50 (c (n "holochain_p2p") (v "0.0.50") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.0.14") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.31") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.49") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.50") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.43") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.40") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.28") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "0nk0ymvql72yhj8kfmb65siij9wc99q2phnzlapf5bn0fc1kh7w4") (f (quote (("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.0.51 (c (n "holochain_p2p") (v "0.0.51") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.0.14") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.31") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.50") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.51") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.11") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.44") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.41") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.29") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "0100f526sy3axia6mg1cw3kjl88mrdkmqzm9z9flmr3awj6jki95") (f (quote (("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.0.52 (c (n "holochain_p2p") (v "0.0.52") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.0.14") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.31") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.51") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.52") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.11") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.44") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.42") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.30") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "05mikhfmwndkk9smy9zxq4ks840kcrb0zzcfpzfnawsqg5fym4aw") (f (quote (("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.0.53 (c (n "holochain_p2p") (v "0.0.53") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.0.14") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.31") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.52") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.53") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.11") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.45") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.42") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.30") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "11g38gaq0zwh3bp0d4ypknj6rd3dwi4pf2mivkjd92s2r8csg217") (f (quote (("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.0.54 (c (n "holochain_p2p") (v "0.0.54") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.0.14") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.31") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.53") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.54") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.11") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.46") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.43") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.31") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1mpfpf2gbc2hsvc0fvcci1ka9nw9mpd8q87d2qrgpss28mm0dvdz") (f (quote (("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.0.55 (c (n "holochain_p2p") (v "0.0.55") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.0.14") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.31") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.54") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.55") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.11") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.47") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.44") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.32") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "081z5k7l7jvhb20z2ai0cdvbxp87xxkvnnimrnip50zgkbafw9aq") (f (quote (("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.0.56 (c (n "holochain_p2p") (v "0.0.56") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.0.14") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.32") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.55") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.56") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.12") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.48") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.45") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.33") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "13cqfwjbj4lkayz7fg6zfg76phzihapifpfaxx43bj81pnh9bqz8") (f (quote (("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.0.57 (c (n "holochain_p2p") (v "0.0.57") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.0.14") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.32") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.56") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.57") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.12") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.49") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.46") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.34") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1q4bc1nq4j4h6jppbv1m4zwg1zqqkfmlnpbl0y0n3zjvc52d4bv9") (f (quote (("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.0.58 (c (n "holochain_p2p") (v "0.0.58") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.0.14") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.33") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.57") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.58") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.12") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.50") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.47") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.35") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "0qz276jkbjf5yvzk2qdcqh3hcszbgnc3riy1j58j1wd7wqswynvz") (f (quote (("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.0.59 (c (n "holochain_p2p") (v "0.0.59") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.0.14") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.33") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.58") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.59") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.12") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.50") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.48") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.36") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "06aln62h47m0h2x5m8q2vmi28k5sm4rqz86fkmhc55dxvf9xmivf") (f (quote (("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.0.60 (c (n "holochain_p2p") (v "0.0.60") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.0.14") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.34") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.59") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.60") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.12") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.51") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.48") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.36") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "00ylbdzn29haxdkmazj3hbrxa01lkv7lgyw876a7v5vka7ihm2f8") (f (quote (("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.0.61 (c (n "holochain_p2p") (v "0.0.61") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.0.14") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.34") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.60") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.61") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.12") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.51") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.49") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.36") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "0qhhc0h3fwanfala1jsg54d6y3wc7d6716gclkjq7s4rnbml2fxr") (f (quote (("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.0.62 (c (n "holochain_p2p") (v "0.0.62") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.0.14") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.34") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.60") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.62") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.12") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.51") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.49") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.36") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "14fnyaic3701rhnl9wy6427njzlx4kl48rnvix3g267mp805w3sr") (f (quote (("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.0.63 (c (n "holochain_p2p") (v "0.0.63") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.0.14") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.34") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.61") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.63") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.12") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.52") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.50") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.37") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1bj4sikwkwxafykv8srgp58w03wxpkfrhhfn8a3592yfsa59b4nx") (f (quote (("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.0.64 (c (n "holochain_p2p") (v "0.0.64") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.0.14") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.35") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.62") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.64") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.12") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.53") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.50") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.37") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1p64vzblgpw69037ncmhida1j8bkgsvxm51yc6ir9qpm27m6zbh6") (f (quote (("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.0.65 (c (n "holochain_p2p") (v "0.0.65") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.0.14") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.35") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.63") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.65") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.12") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.54") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.50") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.37") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "02nqlfb5ngympskhxrrjjy6gvc28jbrpzi5i2c4pq7mbf94qsf1m") (f (quote (("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.0.66 (c (n "holochain_p2p") (v "0.0.66") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.0.14") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.35") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.64") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.66") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.12") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.55") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.50") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.37") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1j3kpjc236pbvax0parx95alrvhm0swc8hd98yxq4979iv7h7vbg") (f (quote (("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.0.67 (c (n "holochain_p2p") (v "0.0.67") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.0.14") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.35") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.65") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.67") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.13") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.56") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.51") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.38") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "0yy405fqdpiwhqrr45ddbz5r8zhx70m1ylyd1hz6925x11hx730w") (f (quote (("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.0.68 (c (n "holochain_p2p") (v "0.0.68") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.0.14") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.35") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.66") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.68") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.13") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.57") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.52") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.39") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1d3wrhfmdscpvyd32n362zci3ndak71j4dvczgdnchlm23k7giny") (f (quote (("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.0.69 (c (n "holochain_p2p") (v "0.0.69") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.0.14") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.35") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.67") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.69") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.13") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.58") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.52") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.0.39") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "0cmclc4ycipr3q5874jvyb3abyfci78mrk8qgqzis2kd9xyqk0nc") (f (quote (("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.1.0-beta-rc.0 (c (n "holochain_p2p") (v "0.1.0-beta-rc.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.1.0-beta-rc.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.1.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.1.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.1.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_util") (r "^0.1.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.1.0-beta-rc.0") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.1.0-beta-rc.0") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.1.0-beta-rc.0") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "0xfq98l3icnygjybrn1c0zsyrxh1kxnfrx7z96bc30zha0yv35x0") (f (quote (("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.1.0-beta-rc.1 (c (n "holochain_p2p") (v "0.1.0-beta-rc.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.1.0-beta-rc.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.1.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.1.0-beta-rc.1") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.1.0-beta-rc.1") (d #t) (k 0)) (d (n "holochain_util") (r "^0.1.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.1.0-beta-rc.1") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.1.0-beta-rc.0") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.1.0-beta-rc.0") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1hjhlm4jyldxhdbj37c7gqbrz849i9lqqzd4vgks0xbs5gdc6y5c") (f (quote (("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.1.0-beta-rc.2 (c (n "holochain_p2p") (v "0.1.0-beta-rc.2") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.1.0-beta-rc.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.1.0-beta-rc.1") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.1.0-beta-rc.2") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.1.0-beta-rc.2") (d #t) (k 0)) (d (n "holochain_util") (r "^0.1.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.1.0-beta-rc.2") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.1.0-beta-rc.1") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.1.0-beta-rc.1") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "0kbwh3c53g3jivhl38pci5v3g41jkv1cp7h8amjizfw6vjgrqdly") (f (quote (("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.1.0-beta-rc.3 (c (n "holochain_p2p") (v "0.1.0-beta-rc.3") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.1.0-beta-rc.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.1.0-beta-rc.2") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.1.0-beta-rc.3") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.1.0-beta-rc.3") (d #t) (k 0)) (d (n "holochain_util") (r "^0.1.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.1.0-beta-rc.3") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.1.0-beta-rc.2") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.1.0-beta-rc.2") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "05vji8wzfmp2w2n0rf4k5kl3245d77r0pcbs4dm5mnmhz3rzqyp3") (f (quote (("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.1.0 (c (n "holochain_p2p") (v "0.1.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.1.0") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.1.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.1.0") (d #t) (k 0)) (d (n "holochain_util") (r "^0.1.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.1.0") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.1.0") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.1.0") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "0ss4gnckz2sx4lcwmka2npj6n9ypg5wiz9aznjkx9mw8sm52p1x3") (f (quote (("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.1.1 (c (n "holochain_p2p") (v "0.1.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.1.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.1.1") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.1.1") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.1.1") (d #t) (k 0)) (d (n "holochain_util") (r "^0.1.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.1.1") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.1.1") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.1.1") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "0mwl9nr8grlkmafmzwacpqd8f8y8ah4fbz1x501dqdasdz3xldhq") (f (quote (("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.1.2 (c (n "holochain_p2p") (v "0.1.2") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.1.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.1.1") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.1.2") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.1.2") (d #t) (k 0)) (d (n "holochain_util") (r "^0.1.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.1.1") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.1.1") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.1.1") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "0mxhc9551nnrlm2zqjxhz2w8xapza08p0vpkm0xa7mp666dd6fzi") (f (quote (("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.1.3 (c (n "holochain_p2p") (v "0.1.3") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.1.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.1.1") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.1.3") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.1.3") (d #t) (k 0)) (d (n "holochain_util") (r "^0.1.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.1.1") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.1.2") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.1.2") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "15xn4zcslzx6991asr4x2ysharb4q297vzqxia4dc03qm4y9z6ak") (f (quote (("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.2.0-beta-rc.0 (c (n "holochain_p2p") (v "0.2.0-beta-rc.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.5") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1wywgg7rlh8379g9c30gg52027jdlywx584dax24pz5j70ymi00r") (f (quote (("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.2.0-beta-rc.1 (c (n "holochain_p2p") (v "0.2.0-beta-rc.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.5") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.0-beta-rc.1") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.0-beta-rc.1") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.0-beta-rc.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.0-beta-rc.1") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.0-beta-rc.1") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.0-beta-rc.1") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.0-beta-rc.1") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1h137jw6mj3rpp8y0xgmibglriy2dwb803k15cc58f6vqvarpgig") (f (quote (("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.2.0-beta-rc.2 (c (n "holochain_p2p") (v "0.2.0-beta-rc.2") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.5") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.0-beta-rc.2") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.0-beta-rc.2") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.0-beta-rc.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.0-beta-rc.2") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.0-beta-rc.2") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.0-beta-rc.2") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.0-beta-rc.1") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1bm9qx0y18qlhf2sw9m2dpa2gb3g1az2l1m01pw0mwyyn95ygcii") (f (quote (("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.2.0-beta-rc.3 (c (n "holochain_p2p") (v "0.2.0-beta-rc.3") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.5") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.0-beta-rc.3") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.0-beta-rc.3") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.0-beta-rc.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.0-beta-rc.3") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.0-beta-rc.3") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.0-beta-rc.3") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.0-beta-rc.2") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1g6hrz6i47qljm4cb9fjzyb4hp62bzbhpz9bra4irqf26xqclhhi") (f (quote (("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.2.0-beta-rc.4 (c (n "holochain_p2p") (v "0.2.0-beta-rc.4") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.5") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.0-beta-rc.3") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.0-beta-rc.4") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.0-beta-rc.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.0-beta-rc.4") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.0-beta-rc.4") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.0-beta-rc.4") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.0-beta-rc.3") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1p4vd1wafgin9h1zcvcc39nbg26ys5mk9351s8x7mgkw7adba57m") (f (quote (("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.1.4 (c (n "holochain_p2p") (v "0.1.4") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.1.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.1.2") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.1.4") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.1.4") (d #t) (k 0)) (d (n "holochain_util") (r "^0.1.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.1.2") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.1.3") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.1.2") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1a2h73ncsgqkyyvh1xr71gvwlb76s22344agi1has70hfl4d1spi") (f (quote (("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.2.0-beta-rc.5 (c (n "holochain_p2p") (v "0.2.0-beta-rc.5") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.5") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.0-beta-rc.3") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.0-beta-rc.4") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.0-beta-rc.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.0-beta-rc.5") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.0-beta-rc.4") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.0-beta-rc.4") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.0-beta-rc.3") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1dghxaayy26m3bwd7j26g4ky5zsndjll59g0f0fi5zd9lqpvlkaa") (f (quote (("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.2.0-beta-rc.6 (c (n "holochain_p2p") (v "0.2.0-beta-rc.6") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.5") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.0-beta-rc.4") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.0-beta-rc.5") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.0-beta-rc.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.0-beta-rc.6") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.0-beta-rc.5") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.0-beta-rc.5") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.0-beta-rc.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "0rza4n0m9zikdqvaxlh0cjx2d2iyccqrsiqbd3n526nspahrczy0") (f (quote (("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.1.5-beta-rc.0 (c (n "holochain_p2p") (v "0.1.5-beta-rc.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.1.2-beta-rc.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.1.3-beta-rc.0") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.1.5-beta-rc.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.1.5-beta-rc.0") (d #t) (k 0)) (d (n "holochain_util") (r "^0.1.1-beta-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.1.3-beta-rc.0") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.1.4-beta-rc.0") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.1.3-beta-rc.0") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "019z3vx69gmb6b3iyl26npafny19shhxsa1fci09qlmw8f6vy203") (f (quote (("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.2.0-beta-rc.7 (c (n "holochain_p2p") (v "0.2.0-beta-rc.7") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.5") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.0-beta-rc.5") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.0-beta-rc.6") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.0-beta-rc.2") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.0-beta-rc.7") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0-beta-rc.1") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.0-beta-rc.6") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.0-beta-rc.6") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.0-beta-rc.5") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "0h1wx5bpylgkpy6b3xi9a2c27yqxqz3bdgnbv0yzy08ysixlfav9") (f (quote (("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.2.0 (c (n "holochain_p2p") (v "0.2.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.5") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.0") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.0") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.0") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "0q0v6ibf9wnkqwm7aqvad5v9ljrrl1ja5s1dd3i4446phwaby39a") (f (quote (("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.1.5-beta-rc.1 (c (n "holochain_p2p") (v "0.1.5-beta-rc.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.1.2-beta-rc.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.1.3-beta-rc.0") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.1.5-beta-rc.1") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.1.5-beta-rc.1") (d #t) (k 0)) (d (n "holochain_util") (r "^0.1.1-beta-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.1.3-beta-rc.1") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.1.4-beta-rc.1") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.1.3-beta-rc.0") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "10p8vh51xvh9459vw22s6q10ki6f1df1f2935nj6x9qv5j6jhcmf") (f (quote (("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.2.1-beta-dev.0 (c (n "holochain_p2p") (v "0.2.1-beta-dev.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.2.1-beta-dev.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.5") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.1-beta-dev.0") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.1-beta-dev.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.1-beta-dev.0") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.1-beta-dev.0") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.1-beta-dev.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.1-beta-dev.0") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.1-beta-dev.0") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.1-beta-dev.0") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "0xaf5p3pa9z1y52c4j0xk4d7qrax06ki48j251mby9q04asvwqgi") (f (quote (("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.3.0-beta-dev.0 (c (n "holochain_p2p") (v "0.3.0-beta-dev.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.5") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1dxf4xagjlrwyd684ayl2q4ghdfggsxyf13100j6d92ddpyr9la0") (f (quote (("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.3.0-beta-dev.1 (c (n "holochain_p2p") (v "0.3.0-beta-dev.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.5") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "0zszjkzsr3dj5lgmpvn0630j0d8ylq20dxixs38p51kmdh23br1s") (f (quote (("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.3.0-beta-dev.2 (c (n "holochain_p2p") (v "0.3.0-beta-dev.2") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.5") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "02vcy7jl2i25x2m9s91cbjmr0c7qhbw31y9hwj6brkgmbrph4f72") (f (quote (("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.1.5 (c (n "holochain_p2p") (v "0.1.5") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.1.2") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.1.3") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.1.5") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.1.5") (d #t) (k 0)) (d (n "holochain_util") (r "^0.1.1") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.1.3") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.1.4") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.1.3") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "0v6qd2qzakcc8sjxgc4fz13hvvx7m03h4cjxsn6m32i6a1rdcdrf") (f (quote (("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.3.0-beta-dev.3 (c (n "holochain_p2p") (v "0.3.0-beta-dev.3") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.5") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1akcbw6qq4x6xsm7gpkghlddb7a7app40qvkczyn4m86g91nxnns") (f (quote (("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.3.0-beta-dev.4 (c (n "holochain_p2p") (v "0.3.0-beta-dev.4") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.5") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.4") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.4") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.4") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.4") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "0apckfn3v4frdjqicswps3b92vdrg3a8lis044i8npci6saljxdf") (f (quote (("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.3.0-beta-dev.5 (c (n "holochain_p2p") (v "0.3.0-beta-dev.5") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.5") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.5") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.5") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.4") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.5") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1vl6h839fb1d64c1yh8yn5x847q599gx17mz6yxv53awx1665a0n") (f (quote (("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.3.0-beta-dev.6 (c (n "holochain_p2p") (v "0.3.0-beta-dev.6") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.4") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.6") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.6") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.5") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.6") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.5") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "0g64dsd5dxvg4q5swmkja15vzqypamqnl316hm3p5rcxw1iq9lng") (f (quote (("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.3.0-beta-dev.7 (c (n "holochain_p2p") (v "0.3.0-beta-dev.7") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.4") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.7") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.7") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.6") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.7") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.5") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1mbg97yi0jwd7l3g4d3bgsv54n653fcz4smn0lv44r9wb6ja8ddy") (f (quote (("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.3.0-beta-dev.8 (c (n "holochain_p2p") (v "0.3.0-beta-dev.8") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.4") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.7") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.8") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.6") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.7") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.5") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "0yf6m2gmf39f7309j0ns6dsz6gwwdbb3l6nc5silcpnclja2ql3x") (f (quote (("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.2.1-beta-rc.0 (c (n "holochain_p2p") (v "0.2.1-beta-rc.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.2.1-beta-rc.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.1-beta-rc.0") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.1-beta-rc.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.1-beta-rc.0") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.1-beta-rc.0") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.1-beta-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.1-beta-rc.0") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.1-beta-rc.0") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.1-beta-rc.0") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1vlmd7dwivpzf7lh0hqqzb65gbj6642shhcl9446p9i9v6sds72p") (f (quote (("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.3.0-beta-dev.9 (c (n "holochain_p2p") (v "0.3.0-beta-dev.9") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.5") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.8") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.9") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.7") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.8") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.5") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "19x33dlmz98gz4zjlid2sh9rplcj68gch0324xfbw6yizrw8xqz5") (f (quote (("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.2.1 (c (n "holochain_p2p") (v "0.2.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.2.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.1") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.1") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.1") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.1") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.1") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.1") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.1") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "0b2wzs135w6s5j58g5yw2d404sdk476bsd3plg1g6p36n8ngicvv") (f (quote (("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.3.0-beta-dev.10 (c (n "holochain_p2p") (v "0.3.0-beta-dev.10") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.6") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.9") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.10") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.8") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.8") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.5") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1v73qdlzwan1f50vb7b19dm0a356i50i26ardklsawfyxrasvnz6") (f (quote (("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.3.0-beta-dev.11 (c (n "holochain_p2p") (v "0.3.0-beta-dev.11") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.6") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.9") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.11") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.8") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.9") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.5") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1c1n0x19g6mlpm0a374qc7ig4dnwgamb2mycknjhdwdp12g80560") (f (quote (("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.3.0-beta-dev.12 (c (n "holochain_p2p") (v "0.3.0-beta-dev.12") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.6") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.10") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.12") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.9") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.10") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.6") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1493l5shn4zq1vv46w3wipd218fl6mar4kx32a8cbniiqgf2ga5l") (f (quote (("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.3.0-beta-dev.13 (c (n "holochain_p2p") (v "0.3.0-beta-dev.13") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.6") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.10") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.12") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.9") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.11") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.6") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "0lv99vh7j5y8yyj6dapw8rs8h2f1kb8pmx036cjrcvy9iy5qalc9") (f (quote (("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.3.0-beta-dev.14 (c (n "holochain_p2p") (v "0.3.0-beta-dev.14") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.6") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.11") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.13") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.12") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.7") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "03xn693bxmvdmbkr0w583byzcf8d4yslzrrwg2yjk2p6kr7xkxgf") (f (quote (("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.1.6-beta-rc.0 (c (n "holochain_p2p") (v "0.1.6-beta-rc.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.1.3-beta-rc.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.1.4-beta-rc.0") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.1.6-beta-rc.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.1.6-beta-rc.0") (d #t) (k 0)) (d (n "holochain_util") (r "^0.1.1") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.1.4-beta-rc.0") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.1.5-beta-rc.0") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.1.4-beta-rc.0") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "0088m9cnphv0jysvbvz0lx7xj8c3wrwv3b115qx9358cmdjsjd66") (f (quote (("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.1.6 (c (n "holochain_p2p") (v "0.1.6") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.1.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.1.4") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.1.6") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.1.6") (d #t) (k 0)) (d (n "holochain_util") (r "^0.1.2") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.1.4") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.1.5") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.1.4") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1gf8v5j7capqhw7c93zx45zbx61fh83g2gyipzrbwiaagrqab5dh") (f (quote (("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.3.0-beta-dev.15 (c (n "holochain_p2p") (v "0.3.0-beta-dev.15") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.6") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.11") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.13") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.10") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.13") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.7") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "0cjr4hpnf9w9kdyv56yi3wdw7kp5fz03bpkyii8xwgip6c47n7mn") (f (quote (("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.2.2-beta-rc.0 (c (n "holochain_p2p") (v "0.2.2-beta-rc.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.2.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.1") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.2-beta-rc.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.2-beta-rc.0") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.1") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.2-beta-rc.0") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.2-beta-rc.0") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.2-beta-rc.0") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "095vacd7a0yhicsfrrl635xw8cl61jryns7wg89z67icg0cqkssz") (f (quote (("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.2.2-beta-rc.1 (c (n "holochain_p2p") (v "0.2.2-beta-rc.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.2.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.2-beta-rc.0") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.2-beta-rc.1") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.2-beta-rc.1") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.2-beta-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.2-beta-rc.1") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.2-beta-rc.1") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.2-beta-rc.1") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1vf9f2vdjjzzwzb5qjdkg44477aack996v2rfqv5sdy0gvd8g822") (f (quote (("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.2.2-beta-rc.2 (c (n "holochain_p2p") (v "0.2.2-beta-rc.2") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.2.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.2-beta-rc.0") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.2-beta-rc.1") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.2-beta-rc.2") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.2-beta-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.2-beta-rc.1") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.2-beta-rc.1") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.2-beta-rc.1") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1imd0z8i5cns5h1kf9z6s06alv6mqb01jdqac5v65pqy2ab3yx6z") (f (quote (("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.3.0-beta-dev.16 (c (n "holochain_p2p") (v "0.3.0-beta-dev.16") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.7") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.12") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.14") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.11") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.14") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.8") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "01k230bdikn0d1pc1b57k4ff4j6qgf0chnb5mh1kd6vdfzmbkb1y") (f (quote (("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.2.2 (c (n "holochain_p2p") (v "0.2.2") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.2.2") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.2") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.2") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.2") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.2") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.2") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.2") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.2") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.2") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "0p772lpfrybmgihq0p06mrfy11fk10k7xxh8mra4gq4z4fqhq6qr") (f (quote (("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.3.0-beta-dev.17 (c (n "holochain_p2p") (v "0.3.0-beta-dev.17") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.8") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.13") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.15") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.12") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.15") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.9") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1g8dxbwzz81sf61fqg56glzj16b5y8mzpl78v1ip50sb7j1h27dc") (f (quote (("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.2.3-beta-rc.0 (c (n "holochain_p2p") (v "0.2.3-beta-rc.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.2.2") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.3-beta-rc.0") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.3-beta-rc.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.2") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.3-beta-rc.0") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.2") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.3-beta-rc.0") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.3-beta-rc.0") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.3-beta-rc.0") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "0qd6sqf5hfqf0wmm4fqszmq42hpgm92vj36wi85kkfy7mdya1f1j") (f (quote (("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.3.0-beta-dev.18 (c (n "holochain_p2p") (v "0.3.0-beta-dev.18") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.8") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.13") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.16") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.12") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.16") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.9") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "15l5xsjc130b83cbvyvp6iq16aa34z2v13z0s2in4zz823r9j489") (f (quote (("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.3.0-beta-dev.19 (c (n "holochain_p2p") (v "0.3.0-beta-dev.19") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.9") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.14") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.17") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.13") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.17") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.10") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "0hhj926zdlbzhjbpf6m9656jczx0qpzp6lc11qvcs2vxgmcgyp01") (f (quote (("test_utils" "holochain_zome_types/test_utils" "holochain_zome_types/fixturators" "holochain_types/test_utils" "kitsune_p2p/test_utils" "ghost_actor/test_utils") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "test_utils" "kitsune_p2p/mock_network"))))))

(define-public crate-holochain_p2p-0.1.7-rc.0 (c (n "holochain_p2p") (v "0.1.7-rc.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.1.4-rc.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.1.5-rc.0") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.1.7-rc.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.1.7-rc.0") (d #t) (k 0)) (d (n "holochain_util") (r "^0.1.3-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.1.5-rc.0") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.1.6-rc.0") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.1.5-rc.0") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1176h9s7zg2846600f22bvzxbxvisyzfsnxj5sqykj56cf4mpzka") (f (quote (("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.3.0-beta-dev.20 (c (n "holochain_p2p") (v "0.3.0-beta-dev.20") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.10") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.15") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.20") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.18") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.14") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.18") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.11") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1ziy767g0kpavc1sy8n259xs7nwq5yzky1rdphsqfx65x3vpk9xs") (f (quote (("test_utils" "holochain_zome_types/test_utils" "holochain_zome_types/fixturators" "holochain_types/test_utils" "kitsune_p2p/test_utils" "ghost_actor/test_utils") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "test_utils" "kitsune_p2p/mock_network"))))))

(define-public crate-holochain_p2p-0.3.0-beta-dev.21 (c (n "holochain_p2p") (v "0.3.0-beta-dev.21") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.10") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.15") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.20") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.19") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.14") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.19") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.11") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1kl19nar8ny38fmlyn8c0bmdpf2xlaq67phlj5wkyx4m36hkpwbc") (f (quote (("test_utils" "holochain_zome_types/test_utils" "holochain_zome_types/fixturators" "holochain_types/test_utils" "kitsune_p2p/test_utils" "ghost_actor/test_utils") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "test_utils" "kitsune_p2p/mock_network"))))))

(define-public crate-holochain_p2p-0.1.7 (c (n "holochain_p2p") (v "0.1.7") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.1.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.1.5") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.1.7") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.1.7") (d #t) (k 0)) (d (n "holochain_util") (r "^0.1.3") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.1.5") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.1.6") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.1.5") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "044b4wqzi52q675936j7k5j82cfpamry3a6mqbisjjgxxcs8khc9") (f (quote (("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.3.0-beta-dev.22 (c (n "holochain_p2p") (v "0.3.0-beta-dev.22") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.11") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.16") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.21") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.20") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.15") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.20") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.12") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "0xkzn0cg75hp337k33772as4gy5drdzmz97j6yhg1wnjmp4krlh2") (f (quote (("test_utils" "holochain_zome_types/test_utils" "holochain_zome_types/fixturators" "holochain_types/test_utils" "kitsune_p2p/test_utils" "ghost_actor/test_utils") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "test_utils" "kitsune_p2p/mock_network"))))))

(define-public crate-holochain_p2p-0.2.3-rc.0 (c (n "holochain_p2p") (v "0.2.3-rc.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.2.3-rc.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.3-rc.0") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.3-rc.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.3-rc.0") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.3-rc.0") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.3-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.3-rc.0") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.3-rc.0") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.3-rc.0") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1d1nsp8f6kr7qb23wggd3lz497fqsvpmbz3wg67hjqjyf78w25sk") (f (quote (("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.3.0-beta-dev.23 (c (n "holochain_p2p") (v "0.3.0-beta-dev.23") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.12") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.17") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.21") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.21") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.16") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.21") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.13") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1zqqkrxr673r6sy1g9gvfsp4kwc7n6pjhy9fs5rx6xl30l5zb9sh") (f (quote (("test_utils" "holochain_zome_types/test_utils" "holochain_zome_types/fixturators" "holochain_types/test_utils" "kitsune_p2p/test_utils" "ghost_actor/test_utils") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "test_utils" "kitsune_p2p/mock_network"))))))

(define-public crate-holochain_p2p-0.2.3-rc.1 (c (n "holochain_p2p") (v "0.2.3-rc.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.2.3-rc.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.3-rc.1") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.3-rc.1") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.3-rc.0") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.3-rc.1") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.3-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.3-rc.1") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.3-rc.1") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.3-rc.1") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "14s228zqs3b2dra9zmqy4cnz1yxzxqg9dlz8wwj1c5bpzk96pj37") (f (quote (("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.3.0-beta-dev.24 (c (n "holochain_p2p") (v "0.3.0-beta-dev.24") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.13") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.18") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.17") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.14") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1317164ghnm2w66sv8bvwk4lsas91flvasr5p1vy7ya50wf7s1yc") (f (quote (("test_utils" "holochain_zome_types/test_utils" "holochain_zome_types/fixturators" "holochain_types/test_utils" "kitsune_p2p/test_utils" "ghost_actor/test_utils") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "test_utils" "kitsune_p2p/mock_network"))))))

(define-public crate-holochain_p2p-0.2.3 (c (n "holochain_p2p") (v "0.2.3") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.2.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.3") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.3") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.3") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.3") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.3") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.3") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.3") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.3") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1cz2hnhbl7lxn4914w3jrh39c4g17qxa9hhd9b3vivpig1yfcmn7") (f (quote (("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.3.0-beta-dev.25 (c (n "holochain_p2p") (v "0.3.0-beta-dev.25") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.13") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.18") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.23") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.17") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.14") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "089l5fn19yip11q0j5i78bjq8ab99ndyirrc82ag8lqiax9kln0f") (f (quote (("test_utils" "holochain_zome_types/test_utils" "holochain_zome_types/fixturators" "holochain_types/test_utils" "kitsune_p2p/test_utils" "ghost_actor/test_utils") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "test_utils" "kitsune_p2p/mock_network"))))))

(define-public crate-holochain_p2p-0.3.0-beta-dev.26 (c (n "holochain_p2p") (v "0.3.0-beta-dev.26") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.14") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.19") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.24") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.18") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.23") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.14") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "00z9qf3dvi7ag9pdbf33j9n3v350vazbihdwv9fy2qlrng7nppza") (f (quote (("test_utils" "holochain_zome_types/test_utils" "holochain_zome_types/fixturators" "holochain_types/test_utils" "kitsune_p2p/test_utils" "ghost_actor/test_utils") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "test_utils" "kitsune_p2p/mock_network"))))))

(define-public crate-holochain_p2p-0.2.4-rc.0 (c (n "holochain_p2p") (v "0.2.4-rc.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.2.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.3") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.4-rc.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.3") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.4-rc.0") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.3") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.4-rc.0") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.4-rc.0") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.4-rc.0") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "0p8cgha561a8haspc7swrd78sj7p9yy86bmzld3qwb0dvrx52alb") (f (quote (("test_utils" "holochain_zome_types/test_utils" "holochain_zome_types/fixturators" "holochain_types/test_utils" "kitsune_p2p/test_utils" "ghost_actor/test_utils") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "test_utils" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.3.0-beta-dev.27 (c (n "holochain_p2p") (v "0.3.0-beta-dev.27") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.15") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.20") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.25") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.19") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.24") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.15") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "023vssfdp9cwrhq8zkk5drff9890pqn4p712bmphircr0zd8k9bx") (f (quote (("test_utils" "holochain_zome_types/test_utils" "holochain_zome_types/fixturators" "holochain_types/test_utils" "kitsune_p2p/test_utils" "ghost_actor/test_utils") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "test_utils" "kitsune_p2p/mock_network"))))))

(define-public crate-holochain_p2p-0.2.4 (c (n "holochain_p2p") (v "0.2.4") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.2.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.4") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.4") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.4") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.4") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.4") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.4") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.4") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "0cqxddb8dn2afl8njbp237y1xhig7f39crrmafr8jff11z3vankb") (f (quote (("test_utils" "holochain_zome_types/test_utils" "holochain_zome_types/fixturators" "holochain_types/test_utils" "kitsune_p2p/test_utils" "ghost_actor/test_utils") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "test_utils" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.3.0-beta-dev.28 (c (n "holochain_p2p") (v "0.3.0-beta-dev.28") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.16") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.21") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.26") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.20") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.25") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.16") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1zcl7amasgg2r2abx59v03pjd39msd4wl7alaxfwb10075z3n17m") (f (quote (("test_utils" "holochain_zome_types/test_utils" "holochain_zome_types/fixturators" "holochain_types/test_utils" "kitsune_p2p/test_utils" "ghost_actor/test_utils") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "test_utils" "kitsune_p2p/mock_network"))))))

(define-public crate-holochain_p2p-0.3.0-beta-dev.31 (c (n "holochain_p2p") (v "0.3.0-beta-dev.31") (d (list (d (n "aitia") (r "^0.2.0-beta-dev.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.2.0-beta-dev.2") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.19") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.24") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.6") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.29") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.23") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.28") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.19") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "0yfjr1mrjn772x1058yjlqrlj5kgsw6zijdzxyk2ni1cv2xca3wk") (f (quote (("test_utils" "holochain_zome_types/test_utils" "holochain_zome_types/fixturators" "holochain_types/test_utils" "kitsune_p2p/test_utils" "ghost_actor/test_utils") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "test_utils" "kitsune_p2p/mock_network"))))))

(define-public crate-holochain_p2p-0.3.0-beta-dev.32 (c (n "holochain_p2p") (v "0.3.0-beta-dev.32") (d (list (d (n "aitia") (r "^0.2.0-beta-dev.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.2.0-beta-dev.3") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.19") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.25") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.6") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.30") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.24") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.28") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.19") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1v49mvixac385vwlr5h26y4a03n9lx39nj0v3lxjdzb03hfv0d84") (f (quote (("test_utils" "holochain_zome_types/test_utils" "holochain_zome_types/fixturators" "holochain_types/test_utils" "kitsune_p2p/test_utils" "ghost_actor/test_utils") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "test_utils" "kitsune_p2p/mock_network"))))))

(define-public crate-holochain_p2p-0.2.5-rc.0 (c (n "holochain_p2p") (v "0.2.5-rc.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.2.5-rc.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.5-rc.0") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.5-rc.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.4") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.5-rc.0") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.4") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.5-rc.0") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.5-rc.0") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.5-rc.0") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1wyh0qbg7snj7nmcgm512sir08lri45bmypxw1lvhkzrknmmkb5k") (f (quote (("test_utils" "holochain_zome_types/test_utils" "holochain_zome_types/fixturators" "holochain_types/test_utils" "kitsune_p2p/test_utils" "ghost_actor/test_utils") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "test_utils" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.3.0-beta-dev.33 (c (n "holochain_p2p") (v "0.3.0-beta-dev.33") (d (list (d (n "aitia") (r "^0.2.0-beta-dev.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.2.0-beta-dev.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.20") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.26") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.6") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.31") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.25") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.29") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.19") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "0rjzx94pd6x5jb5rr1qbi7ci86ck87v0zbhxgrn29qm0ryd52sfl") (f (quote (("test_utils" "holochain_zome_types/test_utils" "holochain_zome_types/fixturators" "holochain_types/test_utils" "kitsune_p2p/test_utils" "ghost_actor/test_utils") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "test_utils" "kitsune_p2p/mock_network"))))))

(define-public crate-holochain_p2p-0.2.5-rc.1 (c (n "holochain_p2p") (v "0.2.5-rc.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.2.5-rc.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.5-rc.0") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.5-rc.1") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.4") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.5-rc.1") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.4") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.5-rc.0") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.5-rc.1") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.5-rc.1") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1hhxx5wf548n1m70iayhplp471fa799npicl6ls9f4mwkdk58zm6") (f (quote (("test_utils" "holochain_zome_types/test_utils" "holochain_zome_types/fixturators" "holochain_types/test_utils" "kitsune_p2p/test_utils" "ghost_actor/test_utils") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "test_utils" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.1.8 (c (n "holochain_p2p") (v "0.1.8") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.1.5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "=0.3.0-alpha.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.1.6") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.1.8") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.1.8") (d #t) (k 0)) (d (n "holochain_util") (r "^0.1.4") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.1.6") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.1.7") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.1.6") (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1aib2mnq3b08b2j4v6ma3h0yvl3znimmgqp0j6y85fam49gc9imz") (f (quote (("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.2.5 (c (n "holochain_p2p") (v "0.2.5") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.2.5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.5") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.5") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.5") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.5") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.5") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.5") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.5") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.5") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "0vcy4b7rr0xql0hwkwqi6c2cvah3gd3b4q4ink0fw1y1z1ncd434") (f (quote (("test_utils" "holochain_zome_types/test_utils" "holochain_zome_types/fixturators" "holochain_types/test_utils" "kitsune_p2p/test_utils" "ghost_actor/test_utils") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "test_utils" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.3.0-beta-dev.34 (c (n "holochain_p2p") (v "0.3.0-beta-dev.34") (d (list (d (n "aitia") (r "^0.2.0-beta-dev.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.2.0-beta-dev.5") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.21") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.27") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.23") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.6") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.32") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.26") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.30") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.20") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "09fccq2w81xfcknwmd45jhdygn597l2iwipckn6jvkw5ix27vvz4") (f (quote (("test_utils" "holochain_zome_types/test_utils" "holochain_zome_types/fixturators" "holochain_types/test_utils" "kitsune_p2p/test_utils" "ghost_actor/test_utils") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "test_utils" "kitsune_p2p/mock_network"))))))

(define-public crate-holochain_p2p-0.2.6-rc.0 (c (n "holochain_p2p") (v "0.2.6-rc.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.2.5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.6-rc.0") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.6-rc.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.5") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.6-rc.0") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.5") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.6-rc.0") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.6-rc.0") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.6-rc.0") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "0gb7qfkdanfsa1p4qfz5zalpkni1qsv0a7b0qmma8l2lyagdh30i") (f (quote (("test_utils" "holochain_zome_types/test_utils" "holochain_zome_types/fixturators" "holochain_types/test_utils" "kitsune_p2p/test_utils" "ghost_actor/test_utils") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "test_utils" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.2.6 (c (n "holochain_p2p") (v "0.2.6") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.2.6") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.6") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.6") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.6") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.6") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.6") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.6") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.6") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.6") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1dai0yr3b9yb08s7ldfjzm91s56lyfak7wj6x8d5cf22nyj8qs9r") (f (quote (("test_utils" "holochain_zome_types/test_utils" "holochain_zome_types/fixturators" "holochain_types/test_utils" "kitsune_p2p/test_utils" "ghost_actor/test_utils") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "test_utils" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.3.0-beta-dev.35 (c (n "holochain_p2p") (v "0.3.0-beta-dev.35") (d (list (d (n "aitia") (r "^0.2.0-beta-dev.4") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.2.0-beta-dev.6") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.28") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.24") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.6") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.33") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.4") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.27") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.31") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.21") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "0g24j7mq2jpjfszjqs0mxfd2vmj0qixf2jl1x1rg2x5ny9c9yrvj") (f (quote (("test_utils" "holochain_zome_types/test_utils" "holochain_zome_types/fixturators" "holochain_types/test_utils" "kitsune_p2p/test_utils" "ghost_actor/test_utils") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "test_utils" "kitsune_p2p/mock_network"))))))

(define-public crate-holochain_p2p-0.2.7-rc.0 (c (n "holochain_p2p") (v "0.2.7-rc.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.2.6") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.6") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.7-rc.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.6") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.7-rc.0") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.6") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.7-rc.0") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.6") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.6") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "0a18xmk18svz8ymc8cg3lg1m5g0r9ydsc538nq2fkpwhbzvpb86n") (f (quote (("test_utils" "holochain_zome_types/test_utils" "holochain_zome_types/fixturators" "holochain_types/test_utils" "kitsune_p2p/test_utils" "ghost_actor/test_utils") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "test_utils" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.3.0-beta-dev.36 (c (n "holochain_p2p") (v "0.3.0-beta-dev.36") (d (list (d (n "aitia") (r "^0.2.0-beta-dev.4") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.2.0-beta-dev.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.29") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.24") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.6") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.34") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.4") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.28") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.31") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.21") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "0wpryvg0bfqizwici628xqi3i876g8l75k2f888zjlbjrfbpv5v7") (f (quote (("test_utils" "holochain_zome_types/test_utils" "holochain_zome_types/fixturators" "holochain_types/test_utils" "kitsune_p2p/test_utils" "ghost_actor/test_utils") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "test_utils" "kitsune_p2p/mock_network"))))))

(define-public crate-holochain_p2p-0.3.0-beta-dev.37 (c (n "holochain_p2p") (v "0.3.0-beta-dev.37") (d (list (d (n "aitia") (r "^0.2.0-beta-dev.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.2.0-beta-dev.8") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.23") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.30") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.25") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.7") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.35") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.5") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.29") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.32") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "0xsgjw8hxhdsjghf161d2dklp5yy85rxn6p6ghkvqv3dk5k4i0p4") (f (quote (("test_utils" "holochain_zome_types/test_utils" "holochain_zome_types/fixturators" "holochain_types/test_utils" "kitsune_p2p/test_utils" "ghost_actor/test_utils") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "test_utils" "kitsune_p2p/mock_network"))))))

(define-public crate-holochain_p2p-0.2.7-rc.1 (c (n "holochain_p2p") (v "0.2.7-rc.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.2.6") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.6") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.7-rc.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.6") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.7-rc.1") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.6") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.7-rc.0") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.6") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.6") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "08jp4cj0949h2b4ncz6f2m37p6xr3xhjcjba7j0ic9nr87q35syy") (f (quote (("test_utils" "holochain_zome_types/test_utils" "holochain_zome_types/fixturators" "holochain_types/test_utils" "kitsune_p2p/test_utils" "ghost_actor/test_utils") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "test_utils" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.3.0-beta-dev.38 (c (n "holochain_p2p") (v "0.3.0-beta-dev.38") (d (list (d (n "aitia") (r "^0.2.0-beta-dev.6") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.2.0-beta-dev.9") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.24") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.31") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.25") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.8") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.36") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.5") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.30") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.33") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.23") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1vfcjlx9fyyhmm4wpqvmbk8i5b0qsi53hflyyp41rbgxcvzvzc4b") (f (quote (("test_utils" "holochain_zome_types/test_utils" "holochain_zome_types/fixturators" "holochain_types/test_utils" "kitsune_p2p/test_utils" "ghost_actor/test_utils") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "test_utils" "kitsune_p2p/mock_network"))))))

(define-public crate-holochain_p2p-0.3.0-beta-dev.39 (c (n "holochain_p2p") (v "0.3.0-beta-dev.39") (d (list (d (n "aitia") (r "^0.2.0-beta-dev.6") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.2.0-beta-dev.10") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.24") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.31") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.25") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.8") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.37") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.5") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.30") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.33") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.23") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1jih3rl6jk6xymbg2vg1df0sin4mc8dif7yr1fsvrq4zg2fh6m3y") (f (quote (("test_utils" "holochain_zome_types/test_utils" "holochain_zome_types/fixturators" "holochain_types/test_utils" "kitsune_p2p/test_utils" "ghost_actor/test_utils") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "test_utils" "kitsune_p2p/mock_network"))))))

(define-public crate-holochain_p2p-0.3.0-beta-dev.40 (c (n "holochain_p2p") (v "0.3.0-beta-dev.40") (d (list (d (n "aitia") (r "^0.2.0-beta-dev.6") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.2.0-beta-dev.11") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.24") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.31") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.25") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.8") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.37") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.5") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.30") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.34") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.23") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "01q9kqbdwll9bzkis3rbd3k2jdifc21jzvbycn58wc8mq7qwry6b") (f (quote (("test_utils" "holochain_zome_types/test_utils" "holochain_zome_types/fixturators" "holochain_types/test_utils" "kitsune_p2p/test_utils" "ghost_actor/test_utils") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "test_utils" "kitsune_p2p/mock_network"))))))

(define-public crate-holochain_p2p-0.3.0-beta-dev.41 (c (n "holochain_p2p") (v "0.3.0-beta-dev.41") (d (list (d (n "aitia") (r "^0.2.0-beta-dev.7") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.2.0-beta-dev.12") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.25") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.32") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.26") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.9") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.38") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.6") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.31") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.35") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.24") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "145krg6cwv3d1hi3ayly0qjjhf7q2g3rcfsi2941j6qml9939k0c") (f (quote (("test_utils" "holochain_zome_types/test_utils" "holochain_zome_types/fixturators" "holochain_types/test_utils" "kitsune_p2p/test_utils" "ghost_actor/test_utils") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "test_utils" "kitsune_p2p/mock_network"))))))

(define-public crate-holochain_p2p-0.3.0-beta-dev.42 (c (n "holochain_p2p") (v "0.3.0-beta-dev.42") (d (list (d (n "aitia") (r "^0.2.0-beta-dev.7") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.2.0-beta-dev.13") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.26") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.33") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.26") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.9") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.39") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.6") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.32") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.36") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.25") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "0qjxim4hmpg9mvlq1rkizgjd3vn8g0na9c853d5gvq20ds5346yk") (f (quote (("test_utils" "holochain_zome_types/test_utils" "holochain_zome_types/fixturators" "holochain_types/test_utils" "kitsune_p2p/test_utils" "ghost_actor/test_utils") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "test_utils" "kitsune_p2p/mock_network"))))))

(define-public crate-holochain_p2p-0.2.7 (c (n "holochain_p2p") (v "0.2.7") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.2.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.7") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.7") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.7") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.7") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.7") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.7") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.7") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.7") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "0s1w3xfgkq4r4gxpkzzpdwvafagnchm6rhg3abklyb5y26cvclag") (f (quote (("test_utils" "holochain_zome_types/test_utils" "holochain_zome_types/fixturators" "holochain_types/test_utils" "kitsune_p2p/test_utils" "ghost_actor/test_utils") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "test_utils" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.3.0-beta-dev.43 (c (n "holochain_p2p") (v "0.3.0-beta-dev.43") (d (list (d (n "aitia") (r "^0.2.0-beta-dev.7") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.2.0-beta-dev.14") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.26") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.34") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.26") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.9") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.40") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.6") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.33") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.37") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.25") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "0cp030h2gs9jypszswkgdcq3z4ihmljssb54vq8ivsr63nb0anzc") (f (quote (("test_utils" "holochain_zome_types/test_utils" "holochain_zome_types/fixturators" "holochain_types/test_utils" "kitsune_p2p/test_utils" "ghost_actor/test_utils") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "test_utils" "kitsune_p2p/mock_network"))))))

(define-public crate-holochain_p2p-0.3.0-beta-dev.44 (c (n "holochain_p2p") (v "0.3.0-beta-dev.44") (d (list (d (n "aitia") (r "^0.2.0-beta-dev.8") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.2.0-beta-dev.15") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.27") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.35") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.26") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.10") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.41") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.7") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.34") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.38") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.26") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "0fzqnj8kgxkqr8i7brgm4xbv1jqmpsrma4x5l7wzdmlykcj6ixcp") (f (quote (("test_utils" "holochain_zome_types/test_utils" "holochain_zome_types/fixturators" "holochain_types/test_utils" "kitsune_p2p/test_utils" "ghost_actor/test_utils") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "test_utils" "kitsune_p2p/mock_network"))))))

(define-public crate-holochain_p2p-0.3.0-beta-dev.45 (c (n "holochain_p2p") (v "0.3.0-beta-dev.45") (d (list (d (n "aitia") (r "^0.2.0-beta-dev.9") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.2.0-beta-dev.16") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.28") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.36") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.27") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.11") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.42") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.35") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.39") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.27") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1rg7iqjnlv1ds61qba5ys5yg3gsxzmqmlkb1r39p65rc760wm3nl") (f (quote (("test_utils" "holochain_zome_types/test_utils" "holochain_zome_types/fixturators" "holochain_types/test_utils" "kitsune_p2p/test_utils" "ghost_actor/test_utils") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "test_utils" "kitsune_p2p/mock_network"))))))

(define-public crate-holochain_p2p-0.3.0-beta-dev.46 (c (n "holochain_p2p") (v "0.3.0-beta-dev.46") (d (list (d (n "aitia") (r "^0.2.0-beta-dev.9") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.2.0-beta-dev.17") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.28") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.37") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.27") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.11") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.0-beta-dev.43") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.36") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.40") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.0-beta-dev.28") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "154mckvvziz7vwx4fx5hm5rmwklfbk5wc9kcklprv72gwhqjwq9g") (f (quote (("test_utils" "holochain_zome_types/test_utils" "holochain_zome_types/fixturators" "holochain_types/test_utils" "kitsune_p2p/test_utils" "ghost_actor/test_utils") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "test_utils" "kitsune_p2p/mock_network"))))))

(define-public crate-holochain_p2p-0.2.8 (c (n "holochain_p2p") (v "0.2.8") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.2.8") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.8") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.8") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.8") (d #t) (k 0)) (d (n "holochain_types") (r "^0.2.8") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.8") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.8") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.8") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.2.8") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "0g5afvjn3nwfyh99qlwp5q2y1qh0c8ihfcvkfgsp169vhw7i0cbl") (f (quote (("test_utils" "holochain_zome_types/test_utils" "holochain_zome_types/fixturators" "holochain_types/test_utils" "kitsune_p2p/test_utils" "ghost_actor/test_utils") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "test_utils" "kitsune_p2p/mock_network" "kitsune_p2p/test_utils"))))))

(define-public crate-holochain_p2p-0.4.0-dev.0 (c (n "holochain_p2p") (v "0.4.0-dev.0") (d (list (d (n "aitia") (r "^0.2.0-dev.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.4.0-dev.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.3.0-dev.0") (d #t) (k 0)) (d (n "holo_hash") (r "^0.4.0-dev.0") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.4.0-dev.0") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.4.0-dev.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.54") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-dev.0") (d #t) (k 0)) (d (n "holochain_types") (r "^0.4.0-dev.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.4.0-dev.0") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.4.0-dev.0") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.4.0-dev.0") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1925h9law9irl8q4s4w85725j56prj26h50gfrbi40x0wpp892yd") (f (quote (("test_utils" "holochain_zome_types/test_utils" "holochain_zome_types/fixturators" "holochain_types/test_utils" "kitsune_p2p/test_utils" "ghost_actor/test_utils") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "test_utils" "kitsune_p2p/mock_network"))))))

(define-public crate-holochain_p2p-0.4.0-dev.1 (c (n "holochain_p2p") (v "0.4.0-dev.1") (d (list (d (n "aitia") (r "^0.3.0-dev.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.4.0-dev.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "holo_hash") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.54") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1vdcby815jb49sczmba8vxv5bpdyng4qxqlijv7syb4njxjzn0ic") (f (quote (("test_utils" "holochain_zome_types/test_utils" "holochain_zome_types/fixturators" "holochain_types/test_utils" "kitsune_p2p/test_utils" "ghost_actor/test_utils") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "test_utils" "kitsune_p2p/mock_network"))))))

(define-public crate-holochain_p2p-0.4.0-dev.2 (c (n "holochain_p2p") (v "0.4.0-dev.2") (d (list (d (n "aitia") (r "^0.3.0-dev.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.4.0-dev.2") (d #t) (k 0)) (d (n "holo_hash") (r "^0.4.0-dev.2") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.4.0-dev.2") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.4.0-dev.2") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.54") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.4.0-dev.2") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.4.0-dev.2") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.4.0-dev.2") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.4.0-dev.2") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1p20cgyh4l08c4j6s32ya79wn2kr88lbjziivqiyvh7dsdiihbb1") (f (quote (("test_utils" "holochain_zome_types/test_utils" "holochain_zome_types/fixturators" "holochain_types/test_utils" "kitsune_p2p/test_utils" "ghost_actor/test_utils") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "test_utils" "kitsune_p2p/mock_network"))))))

(define-public crate-holochain_p2p-0.4.0-dev.3 (c (n "holochain_p2p") (v "0.4.0-dev.3") (d (list (d (n "aitia") (r "^0.3.0-dev.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.4.0-dev.3") (d #t) (k 0)) (d (n "holo_hash") (r "^0.4.0-dev.3") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.4.0-dev.3") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.4.0-dev.2") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.54") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.4.0-dev.2") (d #t) (k 0)) (d (n "holochain_types") (r "^0.4.0-dev.3") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.4.0-dev.3") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.4.0-dev.3") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.4.0-dev.3") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "172bi9fvm644i99nb183y1fn979crm8q0zynxq6ayymcwm38zjpj") (f (quote (("test_utils" "holochain_zome_types/test_utils" "holochain_zome_types/fixturators" "holochain_types/test_utils" "kitsune_p2p/test_utils" "ghost_actor/test_utils") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "test_utils" "kitsune_p2p/mock_network"))))))

(define-public crate-holochain_p2p-0.3.1-rc.0 (c (n "holochain_p2p") (v "0.3.1-rc.0") (d (list (d (n "aitia") (r "^0.2.1-rc.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.3.1-rc.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.2.1-rc.0") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.1-rc.0") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.1-rc.0") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.1-rc.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.54") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.1-rc.0") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.1-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.1-rc.0") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.1-rc.0") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.3.1-rc.0") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "10rxpzq3agywsnqk830r2dp6jb6jnl52giym7q24hsdfr9blvrg7") (f (quote (("test_utils" "holochain_zome_types/test_utils" "holochain_zome_types/fixturators" "holochain_types/test_utils" "kitsune_p2p/test_utils" "ghost_actor/test_utils") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "test_utils" "kitsune_p2p/mock_network"))))))

(define-public crate-holochain_p2p-0.4.0-dev.4 (c (n "holochain_p2p") (v "0.4.0-dev.4") (d (list (d (n "aitia") (r "^0.3.0-dev.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.4.0-dev.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.4.0-dev.4") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.4.0-dev.4") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.4.0-dev.2") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.54") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.4.0-dev.2") (d #t) (k 0)) (d (n "holochain_types") (r "^0.4.0-dev.4") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.4.0-dev.4") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.4.0-dev.4") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.4.0-dev.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1fzljkw31818p2nbv773vp3q2ckjx8r9x4nblp70z398j14rbryg") (f (quote (("test_utils" "holochain_zome_types/test_utils" "holochain_zome_types/fixturators" "holochain_types/test_utils" "kitsune_p2p/test_utils" "ghost_actor/test_utils") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "test_utils" "kitsune_p2p/mock_network"))))))

(define-public crate-holochain_p2p-0.4.0-dev.5 (c (n "holochain_p2p") (v "0.4.0-dev.5") (d (list (d (n "aitia") (r "^0.3.0-dev.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fixt") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.6") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.4.0-dev.5") (d #t) (k 0)) (d (n "holo_hash") (r "^0.4.0-dev.5") (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.4.0-dev.5") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.4.0-dev.2") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.54") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.4.0-dev.3") (d #t) (k 0)) (d (n "holochain_types") (r "^0.4.0-dev.5") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.4.0-dev.5") (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.4.0-dev.5") (d #t) (k 0)) (d (n "kitsune_p2p_types") (r "^0.4.0-dev.5") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1k0bxbwhr3dkd4v1iz6r607rr709gn5cf9fa9yd224fsd1arcisp") (f (quote (("test_utils" "holochain_zome_types/test_utils" "holochain_zome_types/fixturators" "holochain_types/test_utils" "kitsune_p2p/test_utils" "ghost_actor/test_utils") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted" "kitsune_p2p_types/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_keystore/sqlite" "kitsune_p2p/sqlite" "kitsune_p2p_types/sqlite") ("mock_network" "test_utils" "kitsune_p2p/mock_network"))))))

