(define-module (crates-io ho lo holochain_state) #:use-module (crates-io))

(define-public crate-holochain_state-0.0.1 (c (n "holochain_state") (v "0.0.1") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.3") (d #t) (k 2)) (d (n "hdk") (r "^0.0.101") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.3") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.1") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.1") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.50") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.1") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.1") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.1") (o #t) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.1") (d #t) (k 2)) (d (n "holochain_zome_types") (r "^0.0.3") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.1") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "=0.1.21") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.4") (d #t) (k 0)))) (h "0y6118q5m1a7y4f4x9wb3wc895kyqpyk3ig243mcipcgfn33m4mp") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "holochain_wasm_test_utils" "tempdir" "base64") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.2 (c (n "holochain_state") (v "0.0.2") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.4") (d #t) (k 2)) (d (n "hdk") (r "^0.0.102") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.4") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.2") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.2") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.2") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.2") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.2") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.2") (o #t) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.2") (d #t) (k 2)) (d (n "holochain_zome_types") (r "^0.0.4") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.2") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.8") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "=0.1.21") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.4") (d #t) (k 0)))) (h "000aiq1yz58kzn829xhna7pxad45klphnndwmivdqcag692chjlk") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "holochain_wasm_test_utils" "base64" "contrafact" "tempdir") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.3 (c (n "holochain_state") (v "0.0.3") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.5") (d #t) (k 2)) (d (n "hdk") (r "^0.0.103") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.5") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.3") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.3") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.3") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.3") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.3") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.3") (d #t) (k 2)) (d (n "holochain_zome_types") (r "^0.0.5") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.3") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1cq025ai8rxcapk1ykww1blykxphns6i5cyjs5sfndvck2bj59ri") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "holochain_wasm_test_utils" "base64" "contrafact" "tempdir") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.4 (c (n "holochain_state") (v "0.0.4") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.5") (d #t) (k 2)) (d (n "hdk") (r "^0.0.104") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.5") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.4") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.4") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.4") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.4") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.3") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.4") (o #t) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.4") (d #t) (k 2)) (d (n "holochain_zome_types") (r "^0.0.6") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.4") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1x91gplnhs28h0md8vnfr6jy8livcjqwdm0wy9z8h9f3dgxjd93l") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "holochain_wasm_test_utils" "base64" "contrafact" "tempdir") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.6 (c (n "holochain_state") (v "0.0.6") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.5") (d #t) (k 2)) (d (n "hdk") (r "^0.0.106") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.6") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.6") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.6") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.6") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.6") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.3") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.6") (o #t) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.6") (d #t) (k 2)) (d (n "holochain_zome_types") (r "^0.0.8") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.6") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.3") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "10iccpdqqq2by3knvv97f3m7x0gx45m22prddrmzssldr5zhc02b") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "holochain_wasm_test_utils" "base64" "contrafact" "tempdir") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.7 (c (n "holochain_state") (v "0.0.7") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.6") (d #t) (k 2)) (d (n "hdk") (r "^0.0.107") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.7") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.7") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.7") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.7") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.4") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.7") (o #t) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.7") (d #t) (k 2)) (d (n "holochain_zome_types") (r "^0.0.9") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.7") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1s7hy4vzq981rlkmq422ay98r3529baszk072dfmg2d9j32z1dgc") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "holochain_wasm_test_utils" "base64" "contrafact" "tempdir") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.8 (c (n "holochain_state") (v "0.0.8") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.6") (d #t) (k 2)) (d (n "hdk") (r "^0.0.108") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.8") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.8") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.8") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.8") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.4") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.8") (o #t) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.8") (d #t) (k 2)) (d (n "holochain_zome_types") (r "^0.0.10") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.8") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "06pnlbgrj0irnycd7mz4b4ickq6b0938pklg1qr23cc33nv98504") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "holochain_wasm_test_utils" "base64" "contrafact" "tempdir") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.9 (c (n "holochain_state") (v "0.0.9") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.6") (d #t) (k 2)) (d (n "hdk") (r "^0.0.109") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.8") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.9") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.9") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.9") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.9") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.4") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.9") (o #t) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.9") (d #t) (k 2)) (d (n "holochain_zome_types") (r "^0.0.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.9") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "0lb63n4hf9w2lvzyxz880pf2jvc04jyc050d0k8s9jdwx4hw95q1") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "holochain_wasm_test_utils" "base64" "contrafact" "tempdir") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.10 (c (n "holochain_state") (v "0.0.10") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.7") (d #t) (k 2)) (d (n "hdk") (r "^0.0.110") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.9") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.4") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.10") (o #t) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.10") (d #t) (k 2)) (d (n "holochain_zome_types") (r "^0.0.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.10") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1pnlgiqwcw4kn9fpfg76rb7ysgm502y5sh36j7a2c3li809smkzm") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "holochain_wasm_test_utils" "base64" "contrafact" "tempdir") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.11 (c (n "holochain_state") (v "0.0.11") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.7") (d #t) (k 2)) (d (n "hdk") (r "^0.0.111") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.10") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.11") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.11") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.11") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.11") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.4") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.11") (o #t) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.11") (d #t) (k 2)) (d (n "holochain_zome_types") (r "^0.0.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.11") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "0xr4a4b3ajipppyx3rhclpxkv8bb1yj9cif3qjz176ws138vrgqn") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "holochain_wasm_test_utils" "base64" "contrafact" "tempdir") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.12 (c (n "holochain_state") (v "0.0.12") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.7") (d #t) (k 2)) (d (n "hdk") (r "^0.0.112") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.10") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.12") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.12") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.12") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.12") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.4") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.12") (o #t) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.12") (d #t) (k 2)) (d (n "holochain_zome_types") (r "^0.0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.11") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "13wwh5azlf369wvrf755s6h4ah7g1aj5p6qw1v2zkmip6gg5idp7") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "holochain_wasm_test_utils" "base64" "contrafact" "tempdir") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.13 (c (n "holochain_state") (v "0.0.13") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.7") (d #t) (k 2)) (d (n "hdk") (r "^0.0.113") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.13") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.13") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.13") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.13") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.4") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.13") (o #t) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.13") (d #t) (k 2)) (d (n "holochain_zome_types") (r "^0.0.15") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.11") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "053dky63x775hdw63i4fdvdn0gq84djz47agk6his8br4dmdyf97") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "holochain_wasm_test_utils" "base64" "contrafact" "tempdir") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.14 (c (n "holochain_state") (v "0.0.14") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.7") (d #t) (k 2)) (d (n "hdk") (r "^0.0.114") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.14") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.14") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.14") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.14") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.4") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.14") (o #t) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.14") (d #t) (k 2)) (d (n "holochain_zome_types") (r "^0.0.16") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.12") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "0iz20acd3v0k3w7xpcfvf6533lbcf73v40vjcfhnr2v8nvlqch4h") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "holochain_wasm_test_utils" "base64" "contrafact" "tempdir") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.15 (c (n "holochain_state") (v "0.0.15") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.7") (d #t) (k 2)) (d (n "hdk") (r "^0.0.115") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.15") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.15") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.15") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.15") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.4") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.15") (o #t) (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.15") (d #t) (k 2)) (d (n "holochain_zome_types") (r "^0.0.17") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.13") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1nizb62hfs6b4c62v4drcra2rvbvqpnich3byk3z0wvxi7c2d0k7") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "holochain_wasm_test_utils" "base64" "contrafact" "tempdir") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.16 (c (n "holochain_state") (v "0.0.16") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.7") (d #t) (k 2)) (d (n "hdk") (r "^0.0.115") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.16") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.16") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.16") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.16") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.5") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.16") (d #t) (k 2)) (d (n "holochain_zome_types") (r "^0.0.17") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.14") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1hyhvxcxq9xi64n0avcsp5i2wmgn1gbf0qyy6x01a91gg853w2y7") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempdir") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.17 (c (n "holochain_state") (v "0.0.17") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hdk") (r "^0.0.115") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.17") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.17") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.17") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.17") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.6") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.17") (d #t) (k 2)) (d (n "holochain_zome_types") (r "^0.0.17") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.15") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "10aj49va39h13i10zk33jzlfxqx75irhmk2pyrpwa7sgh15bdj45") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempdir") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.18 (c (n "holochain_state") (v "0.0.18") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hdk") (r "^0.0.115") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.18") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.18") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.18") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.18") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.6") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.18") (d #t) (k 2)) (d (n "holochain_zome_types") (r "^0.0.17") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.16") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "0q89fgvgirqk1icq8x68kc0iw4w0k4vq63hhf2ms4psvcqq1fwz4") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempdir") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.19 (c (n "holochain_state") (v "0.0.19") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hdk") (r "^0.0.116") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.19") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.19") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.19") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.19") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.6") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.19") (d #t) (k 2)) (d (n "holochain_zome_types") (r "^0.0.18") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.17") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1a7w3xly1qbnck5ixzpil8a8n0npibmnkixr5fxn772il449hs1b") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempdir") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.20 (c (n "holochain_state") (v "0.0.20") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hdk") (r "^0.0.116") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.20") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.20") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.20") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.20") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.6") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.20") (d #t) (k 2)) (d (n "holochain_zome_types") (r "^0.0.18") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.18") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "099vxqjbq08bxrkzngkhx4sp79nlwmlqdgk75r79ljkd4806syr8") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempdir") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.21 (c (n "holochain_state") (v "0.0.21") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hdk") (r "^0.0.117") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.21") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.21") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.21") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.21") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.6") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.21") (d #t) (k 2)) (d (n "holochain_zome_types") (r "^0.0.19") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.18") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1154knd7xl7agmfriq17vw5zrjyyj2p36cjaz6hwpbfhbyfcl9h7") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempdir") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.22 (c (n "holochain_state") (v "0.0.22") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hdk") (r "^0.0.118") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.15") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.22") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.22") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.22") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.22") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.6") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.22") (d #t) (k 2)) (d (n "holochain_zome_types") (r "^0.0.20") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.19") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "0gvlg3f78bvsnfq13sg7pqfkx9j9qrx6chwh9yrzj099ikqpwgb6") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempdir") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.23 (c (n "holochain_state") (v "0.0.23") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hdk") (r "^0.0.119") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.16") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.23") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.23") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.23") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.23") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.6") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.23") (d #t) (k 2)) (d (n "holochain_zome_types") (r "^0.0.21") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.20") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "04hx1pjjkdk5m4jm321gyz2m1cg199mwcpcizw0sd1dar6ni68zq") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempdir") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.24 (c (n "holochain_state") (v "0.0.24") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hdk") (r "^0.0.120") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.17") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.24") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.24") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.24") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.24") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.6") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.24") (d #t) (k 2)) (d (n "holochain_zome_types") (r "^0.0.22") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.21") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1b42c52fsnb1yp4c28wckgsmpvvkd5213kx3x2qf6yc0d9a47cxs") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempdir") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.25 (c (n "holochain_state") (v "0.0.25") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hdk") (r "^0.0.121") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.18") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.25") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.25") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.25") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.25") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.6") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.25") (d #t) (k 2)) (d (n "holochain_zome_types") (r "^0.0.23") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.22") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1zhxgrrvf8psgz36hayrwyv3gmr163fyq6lhzm5kkl5f923qkvam") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempdir") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.26 (c (n "holochain_state") (v "0.0.26") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hdk") (r "^0.0.122") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.19") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.26") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.26") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.26") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.26") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.7") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.26") (d #t) (k 2)) (d (n "holochain_zome_types") (r "^0.0.24") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.23") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "035wfr21vsy3d0angafnik5wg52m9yz2n18562kwb2d75d6wq2sf") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.27 (c (n "holochain_state") (v "0.0.27") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hdk") (r "^0.0.123") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.20") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.27") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.27") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.27") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.27") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.7") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.27") (d #t) (k 2)) (d (n "holochain_zome_types") (r "^0.0.25") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.24") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "14ilz3qnaj0pqj28m9cifplgdvjgi3ryb9ixb1vnv1fb0xnr100d") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.28 (c (n "holochain_state") (v "0.0.28") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hdk") (r "^0.0.124") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.21") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.28") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.28") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.28") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.28") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.8") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.28") (d #t) (k 2)) (d (n "holochain_zome_types") (r "^0.0.26") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.25") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1h8pp77nvvy8xi9hbikzsv71lbz8c8yhj5n0rl2xnkr0v6dzkd2v") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.29 (c (n "holochain_state") (v "0.0.29") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hdk") (r "^0.0.124") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.21") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.29") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.29") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.29") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.29") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.8") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.29") (d #t) (k 2)) (d (n "holochain_zome_types") (r "^0.0.26") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.26") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "17wc2cz2bfy38y3jv20bnl8xxad88asq5rf98hbwwb4n93v7rr34") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.30 (c (n "holochain_state") (v "0.0.30") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hdk") (r "^0.0.125") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.21") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.30") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.30") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.30") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.30") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.8") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.30") (d #t) (k 2)) (d (n "holochain_zome_types") (r "^0.0.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.26") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "171lj7fp6sczwv46qrxdd8ksmwr50y7bpg37pv1abnwb17im0zmq") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.31 (c (n "holochain_state") (v "0.0.31") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hdk") (r "^0.0.126") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.21") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.31") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.31") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.31") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.31") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.9") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.31") (d #t) (k 2)) (d (n "holochain_zome_types") (r "^0.0.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.27") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "0hpw651jjcvbic9025i03gnpmaj3w9bfv9dhg0j3ig5prqccbjv2") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.32 (c (n "holochain_state") (v "0.0.32") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hdk") (r "^0.0.127") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.22") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.32") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.32") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.32") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.32") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.9") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.32") (d #t) (k 2)) (d (n "holochain_zome_types") (r "^0.0.28") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.28") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1rx0whjpwzjppnxgc66alcr5dwqj9yqrhscrwxn5ipvh49kkz7wj") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.33 (c (n "holochain_state") (v "0.0.33") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hdk") (r "^0.0.128-dev.0") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.23") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.33") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.33") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.33") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.33") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.9") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.33") (d #t) (k 2)) (d (n "holochain_zome_types") (r "^0.0.29") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.29") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1pvxlj5rrjhdf8rj03pkl319vrr1a8d5hy2sbjx181ivav3capfl") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.34 (c (n "holochain_state") (v "0.0.34") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hdk") (r "^0.0.128") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.23") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.34") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.34") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.34") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.34") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.9") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.34") (d #t) (k 2)) (d (n "holochain_zome_types") (r "^0.0.30") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.30") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1bh30cgv2j9inl9c93qvifpf1pan3dnwn7wkrxig7iz69d82xabx") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.35 (c (n "holochain_state") (v "0.0.35") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hdk") (r "^0.0.129") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.23") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.34") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.34") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.34") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.34") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.9") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.34") (d #t) (k 2)) (d (n "holochain_zome_types") (r "^0.0.30") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.30") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1rxwy04fpz1hwijviwk59qx65v149j45vfvx05sayriwd9klav29") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.36 (c (n "holochain_state") (v "0.0.36") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hdk") (r "^0.0.130") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.23") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.35") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.35") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.35") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.35") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.9") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.35") (d #t) (k 2)) (d (n "holochain_zome_types") (r "^0.0.31") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.30") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1dpls2hjzcbn29f7dixvrzhbb2ff2ha5jn1q876s9rbrppbhzh1l") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.37 (c (n "holochain_state") (v "0.0.37") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.11") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hdk") (r "^0.0.131") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.24") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.36") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.36") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.36") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.36") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.36") (d #t) (k 2)) (d (n "holochain_zome_types") (r "^0.0.32") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.31") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "138pa2pb0rcagvi7cnfm5x5y66x45cva5dyxwfg39yrp3iarh6f8") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.38 (c (n "holochain_state") (v "0.0.38") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.11") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hdk") (r "^0.0.131") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.24") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.36") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.36") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.36") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.36") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.37") (d #t) (k 2)) (d (n "holochain_zome_types") (r "^0.0.32") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.31") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "0p467kpr5rw08y5lxlik8a6mzyxqpcmk9kjsn51bh4i4gh9abcdd") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.39 (c (n "holochain_state") (v "0.0.39") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "fixt") (r "^0.0.11") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hdk") (r "^0.0.132") (d #t) (k 2)) (d (n "holo_hash") (r "^0.0.25") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.37") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.37") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.37") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.37") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_wasm_test_utils") (r "^0.0.38") (d #t) (k 2)) (d (n "holochain_zome_types") (r "^0.0.33") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.32") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1sffnbanys59fz71d72sdl6vxn3224wqmgy14l465p1i6nww05cz") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.40 (c (n "holochain_state") (v "0.0.40") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.25") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.38") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.38") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.38") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.38") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.33") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.33") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "0330bvv7q4xdl97mysb5xpzm4xb5rsckn3h0s0mndam2hwl47cmg") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.41 (c (n "holochain_state") (v "0.0.41") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.26") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.39") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.39") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.39") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.39") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.34") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.34") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "0wz7g0495fmsdxxjvgd7ky5flmddchn4wixi82z2m5qjkmil3xg4") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.42 (c (n "holochain_state") (v "0.0.42") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.40") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.40") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.40") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.40") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.35") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.35") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "0qaa5s9sxcwz7sp9qlwa5k721yz8vs2df99rv6qsqm259hva6vmz") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.43 (c (n "holochain_state") (v "0.0.43") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.41") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.41") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.40") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.41") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.35") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.35") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "0lfxw5kgvb0yn5np7dagbc8zygymhhh5iazpw8aspdwa1z71vm1i") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.44 (c (n "holochain_state") (v "0.0.44") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.28") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.42") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.42") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.41") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.42") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.36") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.36") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "01a5vvzfgvx9k0gkx0sjdhg632jcz5ymq23vm7ji6d1kirnw629v") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.45 (c (n "holochain_state") (v "0.0.45") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.29") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.43") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.43") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.42") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.43") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.37") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.37") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "0i24kgyhdnls45blj8sw7braf16bg6qdkqba2wg583nmn7fxz4pg") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.46 (c (n "holochain_state") (v "0.0.46") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.29") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.44") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.44") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.43") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.44") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.38") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.38") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "0y1psklhv1nj9ppllagfkr4x02lg58chyg7gzng9viw2d58vhdg8") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.47 (c (n "holochain_state") (v "0.0.47") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.30") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.45") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.45") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.44") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.45") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.39") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.39") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "0ilrhm9bmngb7fdlhysc5c86mkg2g53231bwz45999ar4h4k8a29") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.48 (c (n "holochain_state") (v "0.0.48") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.30") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.45") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.46") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.44") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.46") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.39") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.39") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1g9jz24jvz2cclbay75vmjcy84rnw61k2isd96a2xyqdbg62vkin") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.49 (c (n "holochain_state") (v "0.0.49") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.30") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.46") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.47") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.45") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.47") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.40") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.39") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "0x7ihws0lxgbnnz01dhl1paqpivx7p9ypkv7281ddljkgivkm98d") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.50 (c (n "holochain_state") (v "0.0.50") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.30") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.47") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.48") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.46") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.48") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.41") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.39") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1rr7s5vs90iflc6vlxdq623cpkrl97whk2mm3y4fxmq6zdknd541") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.51 (c (n "holochain_state") (v "0.0.51") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.31") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.48") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.49") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.47") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.49") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.42") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.40") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1f60y4v1gc1bnb4w6jp16k96fas0djj5cl36xfrvc2xyzd3365x7") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.52 (c (n "holochain_state") (v "0.0.52") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.31") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.49") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.50") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.48") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.50") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.10") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.43") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.40") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1w24mvkjapamk5gz62c1lyxnsby0ghprrbbi0x8ykalqwxi8shn1") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.53 (c (n "holochain_state") (v "0.0.53") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.31") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.50") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.51") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.49") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.51") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.11") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.44") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.41") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "11a86msi1rlg379qc94b2jwyil8bhl83lipy96v9sfkbxhvg1w18") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.54 (c (n "holochain_state") (v "0.0.54") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.31") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.51") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.52") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.50") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.52") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.11") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.44") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.42") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "0x34zdr7ig7ipgzl5b135j6q46xm9jdc1d9nl36n97c5v72czqvn") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.55 (c (n "holochain_state") (v "0.0.55") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.31") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.51") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.52") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.50") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.52") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.11") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.44") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.42") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "0nsbd75v3h26dasfjcipric41yglll265ppmj72x3j0y9nw3lfmj") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.56 (c (n "holochain_state") (v "0.0.56") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.31") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.52") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.53") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.51") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.53") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.11") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.45") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.42") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "12j45zji850qd2jcipxcr8k8m8ph682raq7s0fqf7rd9sisvwpig") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.57 (c (n "holochain_state") (v "0.0.57") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.31") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.53") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.54") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.52") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.54") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.11") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.46") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.43") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1i426sqbd5bxwkv5vg14bs6d5bisz4803jlk5qngjhw91wqbyvni") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.58 (c (n "holochain_state") (v "0.0.58") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.31") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.54") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.55") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.53") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.55") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.11") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.47") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.44") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "042n72mivi6dmfwb4id7g2ca37kpbvvhfc7chak4faa33x06yn73") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.59 (c (n "holochain_state") (v "0.0.59") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.32") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.55") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.56") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.54") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.56") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.12") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.48") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.45") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "0rh5kcgcz2cwcvxlxdw5fjc0rm97ns75rrx6k5b7mk1g4v81jxzv") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.60 (c (n "holochain_state") (v "0.0.60") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.32") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.56") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.57") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.55") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.57") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.12") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.49") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.46") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1cg8qbvs38f22cxbdzj6m1amafw939x3h5f30yidfliplrzp3c29") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.61 (c (n "holochain_state") (v "0.0.61") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.33") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.57") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.58") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.56") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.58") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.12") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.50") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.47") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "0i2zpjx7az3ij1v4px0wx8a8f82xf1zsmr0760wn3acwmqqqywfm") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.62 (c (n "holochain_state") (v "0.0.62") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.33") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.58") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.59") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.57") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.59") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.12") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.50") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.48") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "01bjshrw0rr57si6f27nvv1a0js5y9v4rcdhsbs9hyiwh4bsshha") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.63 (c (n "holochain_state") (v "0.0.63") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.34") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.59") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.60") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.58") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.60") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.12") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.51") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.48") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1l9y1w3yircq2r73g2j14bxjvyi9fg0fpf126y9x4d502y4h179c") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.64 (c (n "holochain_state") (v "0.0.64") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.34") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.60") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.61") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.59") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.61") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.12") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.51") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.49") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1va80dnnw5kl9jbw2a6bg8xwv23bxqy16hczwshahwlpi3i8bsd9") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.65 (c (n "holochain_state") (v "0.0.65") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.34") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.60") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.62") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.59") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.62") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.12") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.51") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.49") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "0qn6ffkbh7nlvqv4k4ny67f9ndp82bricbpsf3phb3h6kzygn1x1") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.66 (c (n "holochain_state") (v "0.0.66") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.34") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.61") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.63") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.60") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.63") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.12") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.52") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.50") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "0g3f7iyw6g4qqwn4p4zci21agi1w82x74345xm3z7qi525l56xmv") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.67 (c (n "holochain_state") (v "0.0.67") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.35") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.62") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.64") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.61") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.64") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.12") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.53") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.50") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1f21gnkdh9n0d5rr7bn5yaja2sw8hw2jdrd3cwi9cylaqacc6jvr") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.68 (c (n "holochain_state") (v "0.0.68") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.35") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.63") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.65") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.62") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.65") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.12") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.54") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.50") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "0ddmpxgrrq4cgr7znczm2wpnw57z107rv02rfikky3c7h6f8r42l") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.69 (c (n "holochain_state") (v "0.0.69") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.35") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.64") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.66") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.63") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.66") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.12") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.55") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.50") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1c6fjnm8r943j238802g5z3ayp9xby99rdnlxq6xmr9d7gfpl60v") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.70 (c (n "holochain_state") (v "0.0.70") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.35") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.65") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.67") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.64") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.67") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.13") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.56") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.51") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.7") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1kxa49qd7qz4hnvza7197gv44kk06yg3b6rqal7r2y77lfbqx2jn") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.71 (c (n "holochain_state") (v "0.0.71") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.35") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.66") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.68") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.65") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.68") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.13") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.57") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.52") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.7") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1gszhvaa617xl00dvh5rmszqa6j13bwj9g79036hf23cfw1yvagf") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.0.72 (c (n "holochain_state") (v "0.0.72") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "holo_hash") (r "^0.0.35") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.0.67") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.0.69") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.0.66") (d #t) (k 0)) (d (n "holochain_types") (r "^0.0.69") (d #t) (k 0)) (d (n "holochain_util") (r "^0.0.13") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.0.58") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.0.52") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.7") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1vyykyf43ndai1dsjirl4pzymv2igp52fgf4nsw73g0k7d5qrc0h") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.1.0-beta-rc.0 (c (n "holochain_state") (v "0.1.0-beta-rc.0") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.1.0-beta-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.1.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.1.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.1.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_types") (r "^0.1.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_util") (r "^0.1.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.1.0-beta-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.1.0-beta-rc.0") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1qw2ybvs1byknxrjyfrl470i0iy8vpj7f6ngsp928xa279z48353") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.1.0-beta-rc.1 (c (n "holochain_state") (v "0.1.0-beta-rc.1") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.1.0-beta-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.1.0-beta-rc.1") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.1.0-beta-rc.1") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.1.0-beta-rc.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.1.0-beta-rc.1") (d #t) (k 0)) (d (n "holochain_util") (r "^0.1.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.1.0-beta-rc.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.1.0-beta-rc.0") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1yy1dxbw7gw8j6bd5s2db6lyj5c96ha092x54j6p59w1qmc612mx") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.1.0-beta-rc.2 (c (n "holochain_state") (v "0.1.0-beta-rc.2") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.1.0-beta-rc.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.1.0-beta-rc.2") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.1.0-beta-rc.2") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.1.0-beta-rc.2") (d #t) (k 0)) (d (n "holochain_types") (r "^0.1.0-beta-rc.2") (d #t) (k 0)) (d (n "holochain_util") (r "^0.1.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.1.0-beta-rc.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.1.0-beta-rc.1") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1sh6bbgcciw6ddirc68fxk912hvp1sp7sp552diy12a5wx2j3bp7") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.1.0-beta-rc.3 (c (n "holochain_state") (v "0.1.0-beta-rc.3") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.1.0-beta-rc.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.1.0-beta-rc.3") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.1.0-beta-rc.3") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.1.0-beta-rc.3") (d #t) (k 0)) (d (n "holochain_types") (r "^0.1.0-beta-rc.3") (d #t) (k 0)) (d (n "holochain_util") (r "^0.1.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.1.0-beta-rc.3") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.1.0-beta-rc.2") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "0gvdlwb23453h71c29giriyih46d478sdygjd6v8f24pligcsxrv") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.1.0 (c (n "holochain_state") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.1.0") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.1.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.1.0") (d #t) (k 0)) (d (n "holochain_types") (r "^0.1.0") (d #t) (k 0)) (d (n "holochain_util") (r "^0.1.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.1.0") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1jk3mdbvdj0llndk51ymv2m74bp8aa7c425ddnmp88ihipjw2686") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.1.1 (c (n "holochain_state") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.1.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.1.1") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.1.1") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.1.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.1.1") (d #t) (k 0)) (d (n "holochain_util") (r "^0.1.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.1.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.1.1") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "0yhibda0x9qiicl20rnh43gvrjxnw5wvf7bdfg2sgbdnwxwvszp5") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.1.2 (c (n "holochain_state") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.1.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.1.2") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.1.2") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.1.2") (d #t) (k 0)) (d (n "holochain_types") (r "^0.1.2") (d #t) (k 0)) (d (n "holochain_util") (r "^0.1.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.1.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.1.1") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1jg8m7sx0a74zxpzvl6fw5j821483pj7gajvcc84ccdnrjxs5fh2") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.1.3 (c (n "holochain_state") (v "0.1.3") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.1.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.1.3") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.1.3") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.1.3") (d #t) (k 0)) (d (n "holochain_types") (r "^0.1.3") (d #t) (k 0)) (d (n "holochain_util") (r "^0.1.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.1.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.1.2") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "0g44jr47xv417p64kpbahjqlmkqj0gaicb4xg0yqckdaccx4vn1q") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.2.0-beta-rc.0 (c (n "holochain_state") (v "0.2.0-beta-rc.0") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.0-beta-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.0-beta-rc.0") (d #t) (k 2)) (d (n "holochain_types") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.0-beta-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "0hdq21m147z9n8l0yc5ybqqqrql4gqbb2i04xy0z86a27bdqvhzm") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.2.0-beta-rc.1 (c (n "holochain_state") (v "0.2.0-beta-rc.1") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.0-beta-rc.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.0-beta-rc.1") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.2.0-beta-rc.1") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.0-beta-rc.1") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.0-beta-rc.1") (d #t) (k 2)) (d (n "holochain_types") (r "^0.2.0-beta-rc.1") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.0-beta-rc.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.0-beta-rc.1") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "14q09cs0wk31r43vb4ygkh4y3m5xp7a3bi1q8fkpbbj3xq70y7x0") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.2.0-beta-rc.2 (c (n "holochain_state") (v "0.2.0-beta-rc.2") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.0-beta-rc.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.0-beta-rc.2") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.2.0-beta-rc.2") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.0-beta-rc.2") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.0-beta-rc.1") (d #t) (k 2)) (d (n "holochain_types") (r "^0.2.0-beta-rc.2") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.0-beta-rc.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.0-beta-rc.2") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "0qcv374qbm0i4kakr91q3cyh03nk96jywmrd4ha7czjafmkwkdpr") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.2.0-beta-rc.3 (c (n "holochain_state") (v "0.2.0-beta-rc.3") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.0-beta-rc.3") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.0-beta-rc.3") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.2.0-beta-rc.3") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.0-beta-rc.3") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.0-beta-rc.1") (d #t) (k 2)) (d (n "holochain_types") (r "^0.2.0-beta-rc.3") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.0-beta-rc.3") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.0-beta-rc.3") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1ik3xqsapw2bk5kwqscdyp0kiw5pd1argmzrg44wh29zyaabsm34") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.2.0-beta-rc.4 (c (n "holochain_state") (v "0.2.0-beta-rc.4") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.0-beta-rc.3") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.0-beta-rc.4") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.2.0-beta-rc.4") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.0-beta-rc.4") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.0-beta-rc.1") (d #t) (k 2)) (d (n "holochain_types") (r "^0.2.0-beta-rc.4") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.0-beta-rc.4") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.0-beta-rc.4") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1k388qzydfdc2589w489q497482fbjh7951j4gkswddv11dppf2b") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.1.4 (c (n "holochain_state") (v "0.1.4") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.1.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.1.4") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.1.4") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.1.4") (d #t) (k 0)) (d (n "holochain_types") (r "^0.1.4") (d #t) (k 0)) (d (n "holochain_util") (r "^0.1.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.1.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.1.3") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1x6yyx1h9j35mv7adalmqswn8wiwccdawz8bd6yyk00jfhxdqi9p") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.2.0-beta-rc.5 (c (n "holochain_state") (v "0.2.0-beta-rc.5") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.0-beta-rc.3") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.0-beta-rc.4") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.2.0-beta-rc.5") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.0-beta-rc.4") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.0-beta-rc.1") (d #t) (k 2)) (d (n "holochain_types") (r "^0.2.0-beta-rc.5") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.0-beta-rc.4") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.0-beta-rc.4") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1r22hg6l1f1wzr48gr0ygxg87hf5aj779rj8hy0m1r892flydxh1") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.2.0-beta-rc.6 (c (n "holochain_state") (v "0.2.0-beta-rc.6") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.0-beta-rc.4") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.0-beta-rc.5") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.2.0-beta-rc.6") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.0-beta-rc.5") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.0-beta-rc.1") (d #t) (k 2)) (d (n "holochain_types") (r "^0.2.0-beta-rc.6") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.0-beta-rc.5") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.0-beta-rc.5") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "0j3rrlrwm181m60hh45gp05qqx66wh2whnbnidrb8l8k9nndly17") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.1.5-beta-rc.0 (c (n "holochain_state") (v "0.1.5-beta-rc.0") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.1.3-beta-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.1.5-beta-rc.0") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.1.5-beta-rc.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.1.5-beta-rc.0") (d #t) (k 0)) (d (n "holochain_types") (r "^0.1.5-beta-rc.0") (d #t) (k 0)) (d (n "holochain_util") (r "^0.1.1-beta-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.1.3-beta-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.1.4-beta-rc.0") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1hypjyvmbn81b5vn3fy56vq46axbbdd463kg8yj5faz4z690f9rb") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/db-encryption" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/no-deps" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.2.0-beta-rc.7 (c (n "holochain_state") (v "0.2.0-beta-rc.7") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.0-beta-rc.5") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.0-beta-rc.6") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.2.0-beta-rc.7") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.0-beta-rc.6") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.0-beta-rc.2") (d #t) (k 2)) (d (n "holochain_types") (r "^0.2.0-beta-rc.7") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0-beta-rc.1") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.0-beta-rc.6") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.0-beta-rc.6") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1pldxxs91zx4s1idpi8a4m4c2vqzprgyfynlh73x21wnk3l9lx5k") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.2.0 (c (n "holochain_state") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.0") (d #t) (k 2)) (d (n "holochain_types") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.0") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "0z8fcb8dsya63f14d2z0aaaasdhz9n2gxdwnhgyfc540pzgjf427") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.1.5-beta-rc.1 (c (n "holochain_state") (v "0.1.5-beta-rc.1") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.1.3-beta-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.1.5-beta-rc.1") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.1.5-beta-rc.1") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.1.5-beta-rc.1") (d #t) (k 0)) (d (n "holochain_types") (r "^0.1.5-beta-rc.1") (d #t) (k 0)) (d (n "holochain_util") (r "^0.1.1-beta-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.1.3-beta-rc.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.1.4-beta-rc.1") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "18v2a60r5spgmy7ahaiqjk78qy74wi2q4kd5sa7kbq5andrpnbwi") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/db-encryption" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/no-deps" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.2.1-beta-dev.0 (c (n "holochain_state") (v "0.2.1-beta-dev.0") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.1-beta-dev.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.1-beta-dev.0") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.2.1-beta-dev.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.1-beta-dev.0") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.1-beta-dev.0") (d #t) (k 2)) (d (n "holochain_types") (r "^0.2.1-beta-dev.0") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.1-beta-dev.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.1-beta-dev.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.1-beta-dev.0") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1d2m5g8d4cm0f747b23b720gadclka7xbv9q8iykdndr0sc1a4gw") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.3.0-beta-dev.0 (c (n "holochain_state") (v "0.3.0-beta-dev.0") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.0") (d #t) (k 2)) (d (n "holochain_types") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1l40yl9c9v7v3xl9phj3vx415i5larzb8psxihj9acm0g5jwfy55") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.3.0-beta-dev.1 (c (n "holochain_state") (v "0.3.0-beta-dev.1") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.0") (d #t) (k 2)) (d (n "holochain_types") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "02sjz3qq44b5np9ykh8rqq3qdx60n6f5ab14v1nyjmi710akfwkc") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.3.0-beta-dev.2 (c (n "holochain_state") (v "0.3.0-beta-dev.2") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.0") (d #t) (k 2)) (d (n "holochain_types") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "0ldqqk7yaw9wwlsza9s0z3543dxpgd6jxjsk6dbyj1mpg9am634a") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.1.5 (c (n "holochain_state") (v "0.1.5") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.1.3") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.1.5") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.1.5") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.1.5") (d #t) (k 0)) (d (n "holochain_types") (r "^0.1.5") (d #t) (k 0)) (d (n "holochain_util") (r "^0.1.1") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.1.3") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.1.4") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1hs3z934s9d97lwwfs6gjy203q23wrjm7vdp7r3xm8ccpx63inir") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/db-encryption" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/no-deps" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.3.0-beta-dev.3 (c (n "holochain_state") (v "0.3.0-beta-dev.3") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.3") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 2)) (d (n "holochain_types") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.3") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "10lh5h2mj1prh42zwfs32r4gh2hcmwdfc11cvc7r4iys1vks7yzz") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.3.0-beta-dev.4 (c (n "holochain_state") (v "0.3.0-beta-dev.4") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-dev.3") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.3") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.4") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.4") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.4") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 2)) (d (n "holochain_types") (r "^0.3.0-beta-dev.4") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.4") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.4") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "17fv050ac76bcxnhi5yd587ha57fn1gnmzv6i9dz81zkr92zxv8d") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.3.0-beta-dev.5 (c (n "holochain_state") (v "0.3.0-beta-dev.5") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-dev.3") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.3") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.5") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.5") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.5") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 2)) (d (n "holochain_types") (r "^0.3.0-beta-dev.5") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.4") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.5") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1iv80wdxrlc4r22lra1d7jfk9qz1da03sg16p7ia7jqwzvszdwsl") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.3.0-beta-dev.6 (c (n "holochain_state") (v "0.3.0-beta-dev.6") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-dev.3") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.4") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.6") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.6") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.6") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 2)) (d (n "holochain_types") (r "^0.3.0-beta-dev.6") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.5") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.6") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1a2bha36ggmwz2ym31ygp44xkzrwhvy7z2lh1s27a8yyq34vf8xb") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.3.0-beta-dev.7 (c (n "holochain_state") (v "0.3.0-beta-dev.7") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.4") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.7") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.7") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.7") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 2)) (d (n "holochain_types") (r "^0.3.0-beta-dev.7") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.6") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.7") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1khbdwgj1yq3inhahf1dim1rwbwaja6ihvn9aq4cxd0r16i88ya0") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.3.0-beta-dev.8 (c (n "holochain_state") (v "0.3.0-beta-dev.8") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.4") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.7") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.8") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.8") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 2)) (d (n "holochain_types") (r "^0.3.0-beta-dev.8") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.6") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.7") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1dws96h9pazl17gfcklxp2kb4rgbwvcs1q6lzd5jvs9vi5aqq07v") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.2.1-beta-rc.0 (c (n "holochain_state") (v "0.2.1-beta-rc.0") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.1-beta-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.1-beta-rc.0") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.2.1-beta-rc.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.1-beta-rc.0") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.1-beta-rc.0") (d #t) (k 2)) (d (n "holochain_types") (r "^0.2.1-beta-rc.0") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.1-beta-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.1-beta-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.1-beta-rc.0") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "02g8kb4g2ry1qxmp5slxn9kli8v70c5cxn1hks045f6sfbfhlcsp") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.3.0-beta-dev.9 (c (n "holochain_state") (v "0.3.0-beta-dev.9") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.5") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.8") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.9") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.9") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 2)) (d (n "holochain_types") (r "^0.3.0-beta-dev.9") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.8") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "10qnd7xw3kfayx3xq7s6d3ssvdzj8rfkc7fw9rbgxablpzkyhlzr") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.2.1 (c (n "holochain_state") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.1") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.2.1") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.1") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.1") (d #t) (k 2)) (d (n "holochain_types") (r "^0.2.1") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.1") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.1") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1hbr6hzx41rdb5an30z1dyvigs5ncp88l3rd1zp4ch00fl0gjsgk") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.3.0-beta-dev.10 (c (n "holochain_state") (v "0.3.0-beta-dev.10") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.6") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.9") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.10") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.10") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 2)) (d (n "holochain_types") (r "^0.3.0-beta-dev.10") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.8") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.8") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "0zgaskwgh8rvs3y2jb79f9crqriv8slap3lspqsscwdkyjgln2f9") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.3.0-beta-dev.11 (c (n "holochain_state") (v "0.3.0-beta-dev.11") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.6") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.9") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.11") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.11") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 2)) (d (n "holochain_types") (r "^0.3.0-beta-dev.11") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.8") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.9") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "0q9wy94974j6csvm8l338zc86m92iq9i8h0fkc8wf7acwdvmrl3z") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.3.0-beta-dev.12 (c (n "holochain_state") (v "0.3.0-beta-dev.12") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.6") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.10") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.12") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.12") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 2)) (d (n "holochain_types") (r "^0.3.0-beta-dev.12") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.9") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.10") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "13bhaiyhdvwy7wlxp0yligclnpqb1vhyz99yijvfpr2lhw13hpmy") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.3.0-beta-dev.13 (c (n "holochain_state") (v "0.3.0-beta-dev.13") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.6") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.10") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.13") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.12") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 2)) (d (n "holochain_types") (r "^0.3.0-beta-dev.12") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.9") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.11") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "16fb9wd4g5awxllichxhnx3ddkwb2rwwb9nbbxah0cj3zxzypq6q") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.3.0-beta-dev.14 (c (n "holochain_state") (v "0.3.0-beta-dev.14") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.6") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.11") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.14") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.13") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 2)) (d (n "holochain_types") (r "^0.3.0-beta-dev.13") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.10") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.12") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "026rz9m7b09aspm5685c7zy20bdrxkrpajgbjx0w9zbzk6qa7y6l") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.1.6-beta-rc.0 (c (n "holochain_state") (v "0.1.6-beta-rc.0") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.1.4-beta-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.1.6-beta-rc.0") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.1.6-beta-rc.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.1.6-beta-rc.0") (d #t) (k 0)) (d (n "holochain_types") (r "^0.1.6-beta-rc.0") (d #t) (k 0)) (d (n "holochain_util") (r "^0.1.1") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.1.4-beta-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.1.5-beta-rc.0") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1kkh8yr5l08y1p9wx1yj8v2sh0fs4zl82c6m1mn23bx0hdb0p229") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/db-encryption" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/no-deps" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.1.6 (c (n "holochain_state") (v "0.1.6") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.1.4") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.1.6") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.1.6") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.1.6") (d #t) (k 0)) (d (n "holochain_types") (r "^0.1.6") (d #t) (k 0)) (d (n "holochain_util") (r "^0.1.2") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.1.4") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.1.5") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1k3qyjj2xpasvbvacpw66kd4zqlfjxq6jbw05w8b6f39w4x3f084") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/db-encryption" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/no-deps" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.3.0-beta-dev.15 (c (n "holochain_state") (v "0.3.0-beta-dev.15") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.6") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.11") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.15") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.13") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 2)) (d (n "holochain_types") (r "^0.3.0-beta-dev.13") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.10") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.13") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "0dv2kqamz9f2z764mjz78c42a69d88c2751m1zbhgk9yns8cgdff") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.2.2-beta-rc.0 (c (n "holochain_state") (v "0.2.2-beta-rc.0") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.2-beta-rc.0") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.2.2-beta-rc.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.2-beta-rc.0") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.1") (d #t) (k 2)) (d (n "holochain_types") (r "^0.2.2-beta-rc.0") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.1") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.2-beta-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.2-beta-rc.0") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "0p6lv93hvfyr7nzzrjs9nb66lsj55cyb3hnghyn47s97m9sn5ymz") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.2.2-beta-rc.1 (c (n "holochain_state") (v "0.2.2-beta-rc.1") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.2-beta-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.2-beta-rc.1") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.2.2-beta-rc.1") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.2-beta-rc.1") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.1") (d #t) (k 2)) (d (n "holochain_types") (r "^0.2.2-beta-rc.1") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.2-beta-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.2-beta-rc.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.2-beta-rc.1") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "0pafya1fpz66xlsmym8fj850df6bhc67nhbbbj15d8b7adw3y6q0") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.2.2-beta-rc.2 (c (n "holochain_state") (v "0.2.2-beta-rc.2") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.2-beta-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.2-beta-rc.1") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.2.2-beta-rc.2") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.2-beta-rc.1") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.1") (d #t) (k 2)) (d (n "holochain_types") (r "^0.2.2-beta-rc.2") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.2-beta-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.2-beta-rc.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.2-beta-rc.1") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1mndkvl92jnw24jn5807irypm3az2haq57vkwflih4l07q49p0mn") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.3.0-beta-dev.16 (c (n "holochain_state") (v "0.3.0-beta-dev.16") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.12") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.16") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.14") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 2)) (d (n "holochain_types") (r "^0.3.0-beta-dev.14") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.14") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "19xj59na2rcy57xsgg00pyjbmfmz94id2m8b09j5msr0dd93rwb4") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.2.2 (c (n "holochain_state") (v "0.2.2") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.2") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.2.2") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.2") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.2") (d #t) (k 2)) (d (n "holochain_types") (r "^0.2.2") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.2") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.2") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "0h81lbrfj6lrzkaccrwim3im9z8sw1grcy7ha2rzf7jz9bp4said") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.3.0-beta-dev.17 (c (n "holochain_state") (v "0.3.0-beta-dev.17") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.8") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.13") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.17") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.15") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 2)) (d (n "holochain_types") (r "^0.3.0-beta-dev.15") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.15") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "0cpvscnjd2zjwriwpxh0y7m435vg8kb9ii08f01kjj2qrcx1z69a") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.2.3-beta-rc.0 (c (n "holochain_state") (v "0.2.3-beta-rc.0") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.3-beta-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.3-beta-rc.0") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.2.3-beta-rc.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.3-beta-rc.0") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.2") (d #t) (k 2)) (d (n "holochain_types") (r "^0.2.3-beta-rc.0") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.2") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.3-beta-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.3-beta-rc.0") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "0jc1241mx2sdyc9vipzj8firdn9092754c58fn4d8ga25gq98jbg") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.3.0-beta-dev.18 (c (n "holochain_state") (v "0.3.0-beta-dev.18") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.8") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.13") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.18") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.16") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 2)) (d (n "holochain_types") (r "^0.3.0-beta-dev.16") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.16") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1mmj2w2362j5v4jgh4bsyslrdvdi8ssxg4xh4xrzr0flasv1za14") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.3.0-beta-dev.19 (c (n "holochain_state") (v "0.3.0-beta-dev.19") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.9") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.14") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.19") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.17") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 2)) (d (n "holochain_types") (r "^0.3.0-beta-dev.17") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.17") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "01rx5j124lsbirwx5k3ff81an19sg6vq2sh6yvi9gq4rl0l7c3v1") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "holochain_sqlite/test_utils" "holochain_p2p/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default"))))))

(define-public crate-holochain_state-0.1.7-rc.0 (c (n "holochain_state") (v "0.1.7-rc.0") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.1.5-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.1.7-rc.0") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.1.7-rc.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.1.7-rc.0") (d #t) (k 0)) (d (n "holochain_types") (r "^0.1.7-rc.0") (d #t) (k 0)) (d (n "holochain_util") (r "^0.1.3-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.1.5-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.1.6-rc.0") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1j2jn670943a52n98539ap592xgjc8w40cv3zw73gahzhkm7426b") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/db-encryption" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/no-deps" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.3.0-beta-dev.20 (c (n "holochain_state") (v "0.3.0-beta-dev.20") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.10") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.15") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.20") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.20") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.18") (d #t) (k 0)) (d (n "holochain_state_types") (r "^0.3.0-beta-dev.20") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 2)) (d (n "holochain_types") (r "^0.3.0-beta-dev.18") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.18") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1dn0rr90wanfzpmyvzh647cigh4qdj426m8ivva71s59sg8xdf7z") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "holochain_sqlite/test_utils" "holochain_p2p/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default"))))))

(define-public crate-holochain_state-0.3.0-beta-dev.21 (c (n "holochain_state") (v "0.3.0-beta-dev.21") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.10") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.15") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.20") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.21") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.19") (d #t) (k 0)) (d (n "holochain_state_types") (r "^0.3.0-beta-dev.20") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 2)) (d (n "holochain_types") (r "^0.3.0-beta-dev.19") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.19") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1my2kg3ybfh77r8jn4n6z8xxhwv3c2mkrz9k565b1g29r9m5smpk") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "holochain_sqlite/test_utils" "holochain_p2p/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default"))))))

(define-public crate-holochain_state-0.1.7 (c (n "holochain_state") (v "0.1.7") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.1.5") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.1.7") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.1.7") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.1.7") (d #t) (k 0)) (d (n "holochain_types") (r "^0.1.7") (d #t) (k 0)) (d (n "holochain_util") (r "^0.1.3") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.1.5") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.1.6") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "15vhc1f40rhfwq8m0ir1i8f9v56z843phxb184pj2bvbxhi8cyy6") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/db-encryption" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/no-deps" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.3.0-beta-dev.22 (c (n "holochain_state") (v "0.3.0-beta-dev.22") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.16") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.21") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.20") (d #t) (k 0)) (d (n "holochain_state_types") (r "^0.3.0-beta-dev.21") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 2)) (d (n "holochain_types") (r "^0.3.0-beta-dev.20") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.15") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.20") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1fsx52aqdprzpqsml848vxc4ggffm7z78wc4lib2ns6dymd8r5js") (f (quote (("test_utils" "holochain_keystore/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "holochain_sqlite/test_utils" "holochain_p2p/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default"))))))

(define-public crate-holochain_state-0.2.3-rc.0 (c (n "holochain_state") (v "0.2.3-rc.0") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.3-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.3-rc.0") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.2.3-rc.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.3-rc.0") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.3-rc.0") (d #t) (k 2)) (d (n "holochain_types") (r "^0.2.3-rc.0") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.3-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.3-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.3-rc.0") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "0gz27z0ddf1bi3za2pw8yfs3wglk3rlw36bck9jpn8y4c5r9g3cg") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.3.0-beta-dev.23 (c (n "holochain_state") (v "0.3.0-beta-dev.23") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.12") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.17") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.21") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.23") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.21") (d #t) (k 0)) (d (n "holochain_state_types") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.1") (d #t) (k 2)) (d (n "holochain_types") (r "^0.3.0-beta-dev.21") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.16") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.21") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "114s3vcap9gdpriyd23mrn5x2r3y6q2j7ybzg9mq8k2c1lf3yzi7") (f (quote (("test_utils" "holochain_keystore/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "holochain_sqlite/test_utils" "holochain_p2p/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default"))))))

(define-public crate-holochain_state-0.2.3-rc.1 (c (n "holochain_state") (v "0.2.3-rc.1") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.3-rc.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.3-rc.1") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.2.3-rc.1") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.3-rc.1") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.3-rc.0") (d #t) (k 2)) (d (n "holochain_types") (r "^0.2.3-rc.1") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.3-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.3-rc.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.3-rc.1") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "11mhahvnz5b89nr8rzk2q9iy7sckpbh318v9yb9cs9q0j18xrqzp") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.3.0-beta-dev.24 (c (n "holochain_state") (v "0.3.0-beta-dev.24") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.18") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.24") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "holochain_state_types") (r "^0.3.0-beta-dev.23") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.2") (d #t) (k 2)) (d (n "holochain_types") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.17") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "00i3c0pngdk1hl95b1qzq5qn6hlhylzj3p4hw96qp96h1d5bs60c") (f (quote (("test_utils" "holochain_keystore/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "holochain_sqlite/test_utils" "holochain_p2p/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default"))))))

(define-public crate-holochain_state-0.2.3 (c (n "holochain_state") (v "0.2.3") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.3") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.3") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.2.3") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.3") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.3") (d #t) (k 2)) (d (n "holochain_types") (r "^0.2.3") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.3") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.3") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.3") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1gfz43j3cs3km4vfxsgvj4kh2ybxcgdpy7nbkcifgqcm9hk0gpip") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.3.0-beta-dev.25 (c (n "holochain_state") (v "0.3.0-beta-dev.25") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.18") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.25") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.23") (d #t) (k 0)) (d (n "holochain_state_types") (r "^0.3.0-beta-dev.23") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.2") (d #t) (k 2)) (d (n "holochain_types") (r "^0.3.0-beta-dev.23") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.17") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1qmlr8436ilwndrbq4rr032fibnqyf7sbdq7j43iv7j77cgshjlb") (f (quote (("test_utils" "holochain_keystore/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "holochain_sqlite/test_utils" "holochain_p2p/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default"))))))

(define-public crate-holochain_state-0.3.0-beta-dev.26 (c (n "holochain_state") (v "0.3.0-beta-dev.26") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.19") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.26") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.24") (d #t) (k 0)) (d (n "holochain_state_types") (r "^0.3.0-beta-dev.24") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.2") (d #t) (k 2)) (d (n "holochain_types") (r "^0.3.0-beta-dev.24") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.18") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.23") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1vz8m4zd2nfv55wrl7h4nmfndjkrmm7ra8gqy4wn27lfmqw272in") (f (quote (("test_utils" "holochain_keystore/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "holochain_sqlite/test_utils" "holochain_p2p/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default"))))))

(define-public crate-holochain_state-0.2.4-rc.0 (c (n "holochain_state") (v "0.2.4-rc.0") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.3") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.4-rc.0") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.2.4-rc.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.4-rc.0") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.3") (d #t) (k 2)) (d (n "holochain_types") (r "^0.2.4-rc.0") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.3") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.4-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.4-rc.0") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1vv92wz60rm5xz7isaavd94v7rl5qzw3hf3hlkr85amqzk8q9np2") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.3.0-beta-dev.27 (c (n "holochain_state") (v "0.3.0-beta-dev.27") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.15") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.20") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.27") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.25") (d #t) (k 0)) (d (n "holochain_state_types") (r "^0.3.0-beta-dev.25") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.2") (d #t) (k 2)) (d (n "holochain_types") (r "^0.3.0-beta-dev.25") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.19") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.24") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "0b1i8jx58wwjmnwkf8ksp6pwx9bcqvl39sr37pwan7a3gr2gd50q") (f (quote (("test_utils" "holochain_keystore/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "holochain_sqlite/test_utils" "holochain_p2p/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default"))))))

(define-public crate-holochain_state-0.2.4 (c (n "holochain_state") (v "0.2.4") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.4") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.4") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.2.4") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.4") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.4") (d #t) (k 2)) (d (n "holochain_types") (r "^0.2.4") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.4") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.4") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.4") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "0m5wxa91zycrbw52gd9r45fqk4p0pdsr8hpw1gp8lawaicrm27wf") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.3.0-beta-dev.28 (c (n "holochain_state") (v "0.3.0-beta-dev.28") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.16") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.21") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.28") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.26") (d #t) (k 0)) (d (n "holochain_state_types") (r "^0.3.0-beta-dev.26") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.3") (d #t) (k 2)) (d (n "holochain_types") (r "^0.3.0-beta-dev.26") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.20") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.25") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "0vykzdzn77n37c2425p1crnpvjcqrcvdf8q06y52j2vilwpqr38n") (f (quote (("test_utils" "holochain_keystore/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "holochain_sqlite/test_utils" "holochain_p2p/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default"))))))

(define-public crate-holochain_state-0.3.0-beta-dev.31 (c (n "holochain_state") (v "0.3.0-beta-dev.31") (d (list (d (n "aitia") (r "^0.2.0-beta-dev.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.2.0-beta-dev.2") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.19") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.24") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.31") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.29") (d #t) (k 0)) (d (n "holochain_state_types") (r "^0.3.0-beta-dev.29") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.6") (d #t) (k 2)) (d (n "holochain_types") (r "^0.3.0-beta-dev.29") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.23") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.28") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1h8j2qvv1shik5wff7n4c8rww1sx612pyjfq92h1i76yj61sj3lw") (f (quote (("test_utils" "holochain_keystore/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "holochain_sqlite/test_utils" "holochain_p2p/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("fuzzing" "holochain_types/fuzzing" "holochain_zome_types/fuzzing") ("default"))))))

(define-public crate-holochain_state-0.3.0-beta-dev.32 (c (n "holochain_state") (v "0.3.0-beta-dev.32") (d (list (d (n "aitia") (r "^0.2.0-beta-dev.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.2.0-beta-dev.3") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.19") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.25") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.32") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.30") (d #t) (k 0)) (d (n "holochain_state_types") (r "^0.3.0-beta-dev.30") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.6") (d #t) (k 2)) (d (n "holochain_types") (r "^0.3.0-beta-dev.30") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.24") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.28") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "0q7vym9f1c07hiag81rcn5s4d5l6xq00dssav6hxfr07d9inywkz") (f (quote (("test_utils" "holochain_keystore/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "holochain_sqlite/test_utils" "holochain_p2p/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("fuzzing" "holochain_types/fuzzing" "holochain_zome_types/fuzzing") ("default"))))))

(define-public crate-holochain_state-0.2.5-rc.0 (c (n "holochain_state") (v "0.2.5-rc.0") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.5-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.5-rc.0") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.2.5-rc.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.5-rc.0") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.4") (d #t) (k 2)) (d (n "holochain_types") (r "^0.2.5-rc.0") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.4") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.5-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.5-rc.0") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "13w0cvbvfnvgkmdx84lajhk3xw5g7mv5xpfmd4ja6g512vmd4wp4") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.3.0-beta-dev.33 (c (n "holochain_state") (v "0.3.0-beta-dev.33") (d (list (d (n "aitia") (r "^0.2.0-beta-dev.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.2.0-beta-dev.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.20") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.26") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.22") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.33") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.31") (d #t) (k 0)) (d (n "holochain_state_types") (r "^0.3.0-beta-dev.31") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.6") (d #t) (k 2)) (d (n "holochain_types") (r "^0.3.0-beta-dev.31") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.25") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.29") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1wq4jy7lwcsnidvc0yjga8hxjsayik5h84shlgq6y81b10fk6paw") (f (quote (("test_utils" "holochain_keystore/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "holochain_sqlite/test_utils" "holochain_p2p/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("fuzzing" "holochain_types/fuzzing" "holochain_zome_types/fuzzing") ("default"))))))

(define-public crate-holochain_state-0.2.5-rc.1 (c (n "holochain_state") (v "0.2.5-rc.1") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.5-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.5-rc.1") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.2.5-rc.1") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.5-rc.1") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.4") (d #t) (k 2)) (d (n "holochain_types") (r "^0.2.5-rc.1") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.4") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.5-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.5-rc.1") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1lg759cgh2471rs5x3j1fzab0440m6mndmvzqnf1qfvlwr8gpmnb") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.1.8 (c (n "holochain_state") (v "0.1.8") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.1.0-dev.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.1.6") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.1.8") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.1.8") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.1.8") (d #t) (k 0)) (d (n "holochain_types") (r "^0.1.8") (d #t) (k 0)) (d (n "holochain_util") (r "^0.1.4") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.1.6") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.1.7") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "observability") (r "^0.1.3") (d #t) (k 2)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.11") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "0xd462dkwmi29npcz6brvjq3vp231mdijw43vyycjjx2psmivkzp") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/db-encryption" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/no-deps" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.2.5 (c (n "holochain_state") (v "0.2.5") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.5") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.5") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.2.5") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.5") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.5") (d #t) (k 2)) (d (n "holochain_types") (r "^0.2.5") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.5") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.5") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.5") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "0wqsghzrcb0kg1wil100j1w4mal4z0hbqmhh92d2hv3hz6z15hln") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.3.0-beta-dev.34 (c (n "holochain_state") (v "0.3.0-beta-dev.34") (d (list (d (n "aitia") (r "^0.2.0-beta-dev.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.2.0-beta-dev.5") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.21") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.27") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.23") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.34") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.32") (d #t) (k 0)) (d (n "holochain_state_types") (r "^0.3.0-beta-dev.32") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.6") (d #t) (k 2)) (d (n "holochain_types") (r "^0.3.0-beta-dev.32") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.26") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.30") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "10916x7z371l8vfbbhmkhvpfh3ih7hysd9qr68529ww91p2bdx16") (f (quote (("test_utils" "holochain_keystore/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "holochain_sqlite/test_utils" "holochain_p2p/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("fuzzing" "holochain_types/fuzzing" "holochain_zome_types/fuzzing") ("default"))))))

(define-public crate-holochain_state-0.2.6-rc.0 (c (n "holochain_state") (v "0.2.6-rc.0") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.6-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.6-rc.0") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.2.6-rc.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.6-rc.0") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.5") (d #t) (k 2)) (d (n "holochain_types") (r "^0.2.6-rc.0") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.5") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.6-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.6-rc.0") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "02myni9gbnlwmiivaqgh3k46fi51q4vjryr1q2232xhdkzaznzsi") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.2.6 (c (n "holochain_state") (v "0.2.6") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.6") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.6") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.2.6") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.6") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.6") (d #t) (k 2)) (d (n "holochain_types") (r "^0.2.6") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.6") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.6") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.6") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "11apmpzkb97bxmmzxqdxx7ghj865ydhlfpbiswk3qwi804ip7xnc") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.3.0-beta-dev.35 (c (n "holochain_state") (v "0.3.0-beta-dev.35") (d (list (d (n "aitia") (r "^0.2.0-beta-dev.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.2.0-beta-dev.6") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.22") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.28") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.24") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.35") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.33") (d #t) (k 0)) (d (n "holochain_state_types") (r "^0.3.0-beta-dev.33") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.6") (d #t) (k 2)) (d (n "holochain_types") (r "^0.3.0-beta-dev.33") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.4") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.31") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "0chd8fc3jq3gxj5kq4r49pr0kgl7ja3mghmf46ksis1iikpp0bby") (f (quote (("test_utils" "holochain_keystore/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "holochain_sqlite/test_utils" "holochain_p2p/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("fuzzing" "holochain_types/fuzzing" "holochain_zome_types/fuzzing") ("default"))))))

(define-public crate-holochain_state-0.2.7-rc.0 (c (n "holochain_state") (v "0.2.7-rc.0") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.6") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.7-rc.0") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.2.7-rc.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.7-rc.0") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.6") (d #t) (k 2)) (d (n "holochain_types") (r "^0.2.7-rc.0") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.6") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.7-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.6") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "0lw8bq09b08g1pxlrd8nj6ays23j4pcc9n0vr5shm3095nyprmcq") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.3.0-beta-dev.36 (c (n "holochain_state") (v "0.3.0-beta-dev.36") (d (list (d (n "aitia") (r "^0.2.0-beta-dev.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.2.0-beta-dev.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.22") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.29") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.24") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.36") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.34") (d #t) (k 0)) (d (n "holochain_state_types") (r "^0.3.0-beta-dev.33") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.6") (d #t) (k 2)) (d (n "holochain_types") (r "^0.3.0-beta-dev.34") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.4") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.28") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.31") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "0al564fjfhlxhf8mlwmvc5vb6jb9mdhjrk48kn19z8dk14m6kdxz") (f (quote (("test_utils" "holochain_keystore/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "holochain_sqlite/test_utils" "holochain_p2p/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("fuzzing" "holochain_types/fuzzing" "holochain_zome_types/fuzzing") ("default"))))))

(define-public crate-holochain_state-0.3.0-beta-dev.37 (c (n "holochain_state") (v "0.3.0-beta-dev.37") (d (list (d (n "aitia") (r "^0.2.0-beta-dev.5") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.2.0-beta-dev.8") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.23") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.30") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.25") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.37") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.35") (d #t) (k 0)) (d (n "holochain_state_types") (r "^0.3.0-beta-dev.34") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.7") (d #t) (k 2)) (d (n "holochain_types") (r "^0.3.0-beta-dev.35") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.5") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.29") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.32") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1a4dq0d3lnsr4dsk19k5rzapfb8jpy2z4v1rxpm5lp61iyigxw3c") (f (quote (("test_utils" "holochain_keystore/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "holochain_sqlite/test_utils" "holochain_p2p/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("fuzzing" "holochain_types/fuzzing" "holochain_zome_types/fuzzing") ("default"))))))

(define-public crate-holochain_state-0.2.7-rc.1 (c (n "holochain_state") (v "0.2.7-rc.1") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.6") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.7-rc.0") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.2.7-rc.1") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.7-rc.0") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.6") (d #t) (k 2)) (d (n "holochain_types") (r "^0.2.7-rc.1") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.6") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.7-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.6") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "0xfnf61c1yd5v2njgh7ckfckm56vhkl09c0aavk9x7q4ya9rhm6v") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.3.0-beta-dev.38 (c (n "holochain_state") (v "0.3.0-beta-dev.38") (d (list (d (n "aitia") (r "^0.2.0-beta-dev.6") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.2.0-beta-dev.9") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.24") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.31") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.25") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.38") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.36") (d #t) (k 0)) (d (n "holochain_state_types") (r "^0.3.0-beta-dev.35") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.8") (d #t) (k 2)) (d (n "holochain_types") (r "^0.3.0-beta-dev.36") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.5") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.30") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.33") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "01cdrjnm6r0a5r7z7ac6h464w7sjjbr4j48pwi73mhc76z7bjfh4") (f (quote (("test_utils" "holochain_keystore/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "holochain_sqlite/test_utils" "holochain_p2p/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("fuzzing" "holochain_types/fuzzing" "holochain_zome_types/fuzzing") ("default"))))))

(define-public crate-holochain_state-0.3.0-beta-dev.39 (c (n "holochain_state") (v "0.3.0-beta-dev.39") (d (list (d (n "aitia") (r "^0.2.0-beta-dev.6") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.2.0-beta-dev.10") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.24") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.31") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.25") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.39") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.37") (d #t) (k 0)) (d (n "holochain_state_types") (r "^0.3.0-beta-dev.35") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.8") (d #t) (k 2)) (d (n "holochain_types") (r "^0.3.0-beta-dev.37") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.5") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.30") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.33") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "0f3z395xiamh4magaxj08wzlhz6bd0qi5vaxqxkbknj19r110prc") (f (quote (("test_utils" "holochain_keystore/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "holochain_sqlite/test_utils" "holochain_p2p/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("fuzzing" "holochain_types/fuzzing" "holochain_zome_types/fuzzing") ("default"))))))

(define-public crate-holochain_state-0.3.0-beta-dev.40 (c (n "holochain_state") (v "0.3.0-beta-dev.40") (d (list (d (n "aitia") (r "^0.2.0-beta-dev.6") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.2.0-beta-dev.11") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.24") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.31") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.25") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.40") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.37") (d #t) (k 0)) (d (n "holochain_state_types") (r "^0.3.0-beta-dev.35") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.8") (d #t) (k 2)) (d (n "holochain_types") (r "^0.3.0-beta-dev.37") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.5") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.30") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.34") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1xxbk8afig9bib74qcccq1f81ax02548ycnh4y5m13kivzlmkp8p") (f (quote (("test_utils" "holochain_keystore/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "holochain_sqlite/test_utils" "holochain_p2p/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("fuzzing" "holochain_types/fuzzing" "holochain_zome_types/fuzzing") ("default"))))))

(define-public crate-holochain_state-0.3.0-beta-dev.41 (c (n "holochain_state") (v "0.3.0-beta-dev.41") (d (list (d (n "aitia") (r "^0.2.0-beta-dev.7") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.2.0-beta-dev.12") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.25") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.32") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.26") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.41") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.38") (d #t) (k 0)) (d (n "holochain_state_types") (r "^0.3.0-beta-dev.36") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.9") (d #t) (k 2)) (d (n "holochain_types") (r "^0.3.0-beta-dev.38") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.6") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.31") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.35") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "0s8k120swg4cbd1rmmvislza8j6995igl4fb8c4rlhkllh2zcgw2") (f (quote (("test_utils" "holochain_keystore/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "holochain_sqlite/test_utils" "holochain_p2p/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("fuzzing" "holochain_types/fuzzing" "holochain_zome_types/fuzzing") ("default"))))))

(define-public crate-holochain_state-0.3.0-beta-dev.42 (c (n "holochain_state") (v "0.3.0-beta-dev.42") (d (list (d (n "aitia") (r "^0.2.0-beta-dev.7") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.2.0-beta-dev.13") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.26") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.33") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.26") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.42") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.39") (d #t) (k 0)) (d (n "holochain_state_types") (r "^0.3.0-beta-dev.37") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.9") (d #t) (k 2)) (d (n "holochain_types") (r "^0.3.0-beta-dev.39") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.6") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.32") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.36") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "0il2w24ixcvls26d9irl9kfnxzl9bcmvarg8n8x83lyvrwpm776q") (f (quote (("test_utils" "holochain_keystore/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "holochain_sqlite/test_utils" "holochain_p2p/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("fuzzing" "holochain_types/fuzzing" "holochain_zome_types/fuzzing") ("default"))))))

(define-public crate-holochain_state-0.2.7 (c (n "holochain_state") (v "0.2.7") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.7") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.2.7") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.7") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.7") (d #t) (k 2)) (d (n "holochain_types") (r "^0.2.7") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.7") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.7") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "0rr2zsnv07mq6lxg860plzjfdasxryxbgklx4m195b98x29mgp4l") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.3.0-beta-dev.43 (c (n "holochain_state") (v "0.3.0-beta-dev.43") (d (list (d (n "aitia") (r "^0.2.0-beta-dev.7") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.2.0-beta-dev.14") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.26") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.34") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.26") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.43") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.40") (d #t) (k 0)) (d (n "holochain_state_types") (r "^0.3.0-beta-dev.38") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.9") (d #t) (k 2)) (d (n "holochain_types") (r "^0.3.0-beta-dev.40") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.6") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.33") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.37") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "0drjccgqfyv4bxs8jgw86gv676d33kk9f2rq2f4pnksr5pfzm8qm") (f (quote (("test_utils" "holochain_keystore/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "holochain_sqlite/test_utils" "holochain_p2p/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("fuzzing" "holochain_types/fuzzing" "holochain_zome_types/fuzzing") ("default"))))))

(define-public crate-holochain_state-0.3.0-beta-dev.44 (c (n "holochain_state") (v "0.3.0-beta-dev.44") (d (list (d (n "aitia") (r "^0.2.0-beta-dev.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.12") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.2.0-beta-dev.15") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.35") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.26") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.44") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.41") (d #t) (k 0)) (d (n "holochain_state_types") (r "^0.3.0-beta-dev.39") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.10") (d #t) (k 2)) (d (n "holochain_types") (r "^0.3.0-beta-dev.41") (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.7") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.34") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.38") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "1gz6bwp4c8f6fpra8jkzix20gyjl9wkpkxdikhsf6jy02wh3i0hz") (f (quote (("test_utils" "holochain_keystore/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "holochain_sqlite/test_utils" "holochain_p2p/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("fuzzing" "holochain_types/fuzzing" "holochain_zome_types/fuzzing") ("default"))))))

(define-public crate-holochain_state-0.3.0-beta-dev.45 (c (n "holochain_state") (v "0.3.0-beta-dev.45") (d (list (d (n "aitia") (r "^0.2.0-beta-dev.9") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^1.1") (d #t) (k 0)) (d (n "base64") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.12") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.2.0-beta-dev.16") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.28") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.36") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.27") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.45") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.42") (d #t) (k 0)) (d (n "holochain_state_types") (r "^0.3.0-beta-dev.40") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.11") (d #t) (k 2)) (d (n "holochain_types") (r "^0.3.0-beta-dev.42") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.35") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.39") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "nanoid") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)))) (h "15c1qdcd1x076cw028yz790j3ypkqpgvayfr46flriqb5g7jd806") (f (quote (("test_utils" "holochain_keystore/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "holochain_sqlite/test_utils" "holochain_p2p/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("fuzzing" "holochain_types/fuzzing" "holochain_zome_types/fuzzing") ("default"))))))

(define-public crate-holochain_state-0.3.0-beta-dev.46 (c (n "holochain_state") (v "0.3.0-beta-dev.46") (d (list (d (n "aitia") (r "^0.2.0-beta-dev.9") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^1.1") (d #t) (k 0)) (d (n "base64") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.12") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.2.0-beta-dev.17") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.0-beta-dev.28") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.0-beta-dev.37") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.0-beta-dev.27") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.0-beta-dev.46") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.0-beta-dev.43") (d #t) (k 0)) (d (n "holochain_state_types") (r "^0.3.0-beta-dev.40") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-beta-dev.11") (d #t) (k 2)) (d (n "holochain_types") (r "^0.3.0-beta-dev.43") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.0-beta-dev.36") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.0-beta-dev.40") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "nanoid") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)))) (h "17r9fabvb93960v8d8hlh187zrjh421icv9cf26xhfjgwjm9w5jd") (f (quote (("test_utils" "holochain_keystore/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "holochain_sqlite/test_utils" "holochain_p2p/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("fuzzing" "holochain_types/fuzzing" "holochain_zome_types/fuzzing") ("default"))))))

(define-public crate-holochain_state-0.2.8 (c (n "holochain_state") (v "0.2.8") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "either") (r "^1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "holo_hash") (r "^0.2.8") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.2.8") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.2.8") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.2.8") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.2.8") (d #t) (k 2)) (d (n "holochain_types") (r "^0.2.8") (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.8") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.2.8") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.2.8") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "mockall") (r "^0.11.3") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)))) (h "0i2w6pas34mna8rnfv97di7v8s8jrg6jiyb9d7kb97n8s41glfh6") (f (quote (("test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("default" "test_utils"))))))

(define-public crate-holochain_state-0.4.0-dev.0 (c (n "holochain_state") (v "0.4.0-dev.0") (d (list (d (n "aitia") (r "^0.2.0-dev.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^1.1") (d #t) (k 0)) (d (n "base64") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.12") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.3.0-dev.0") (d #t) (k 0)) (d (n "holo_hash") (r "^0.4.0-dev.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.4.0-dev.0") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.4.0-dev.0") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.4.0-dev.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.54") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.4.0-dev.0") (d #t) (k 0)) (d (n "holochain_state_types") (r "^0.4.0-dev.0") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.3.0-dev.0") (d #t) (k 2)) (d (n "holochain_types") (r "^0.4.0-dev.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.4.0-dev.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.4.0-dev.0") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "nanoid") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)))) (h "0r2cm8gja5vamljm94gh23q6mac971cy9h5y4y8mdzr6d5ldpnlb") (f (quote (("test_utils" "holochain_keystore/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "holochain_sqlite/test_utils" "holochain_p2p/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("fuzzing" "holochain_types/fuzzing" "holochain_zome_types/fuzzing") ("default"))))))

(define-public crate-holochain_state-0.4.0-dev.1 (c (n "holochain_state") (v "0.4.0-dev.1") (d (list (d (n "aitia") (r "^0.3.0-dev.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^1.1") (d #t) (k 0)) (d (n "base64") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.12") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "holo_hash") (r "^0.4.0-dev.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.54") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "holochain_state_types") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.4.0-dev.1") (d #t) (k 2)) (d (n "holochain_types") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.4.0-dev.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "nanoid") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)))) (h "1w8i45z2vz4iz3m8kghcbmsn3mibbmcn7akp20jw7vilws970rv3") (f (quote (("test_utils" "holochain_keystore/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "holochain_sqlite/test_utils" "holochain_p2p/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("fuzzing" "holochain_types/fuzzing" "holochain_zome_types/fuzzing") ("default"))))))

(define-public crate-holochain_state-0.4.0-dev.2 (c (n "holochain_state") (v "0.4.0-dev.2") (d (list (d (n "aitia") (r "^0.3.0-dev.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^1.1") (d #t) (k 0)) (d (n "base64") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.12") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.4.0-dev.2") (d #t) (k 0)) (d (n "holo_hash") (r "^0.4.0-dev.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.4.0-dev.2") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.4.0-dev.2") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.4.0-dev.2") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.54") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.4.0-dev.2") (d #t) (k 0)) (d (n "holochain_state_types") (r "^0.4.0-dev.2") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.4.0-dev.1") (d #t) (k 2)) (d (n "holochain_types") (r "^0.4.0-dev.2") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.4.0-dev.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.4.0-dev.2") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "nanoid") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)))) (h "07svbnmd5b7krhblfl0f8m6l95vqkv1cqfmkd25a4ywn42mlk5kq") (f (quote (("test_utils" "holochain_keystore/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "holochain_sqlite/test_utils" "holochain_p2p/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("fuzzing" "holochain_types/fuzzing" "holochain_zome_types/fuzzing") ("default"))))))

(define-public crate-holochain_state-0.4.0-dev.3 (c (n "holochain_state") (v "0.4.0-dev.3") (d (list (d (n "aitia") (r "^0.3.0-dev.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^1.1") (d #t) (k 0)) (d (n "base64") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.12") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.4.0-dev.3") (d #t) (k 0)) (d (n "holo_hash") (r "^0.4.0-dev.3") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.4.0-dev.3") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.4.0-dev.2") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.4.0-dev.3") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.54") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.4.0-dev.3") (d #t) (k 0)) (d (n "holochain_state_types") (r "^0.4.0-dev.3") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.4.0-dev.2") (d #t) (k 2)) (d (n "holochain_types") (r "^0.4.0-dev.3") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.4.0-dev.3") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.4.0-dev.3") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "nanoid") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)))) (h "1pljf97qwr291d0bnz2nlx4an32gi58smvm452nhk3q45rgqvqv9") (f (quote (("test_utils" "holochain_keystore/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "holochain_sqlite/test_utils" "holochain_p2p/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("fuzzing" "holochain_types/fuzzing" "holochain_zome_types/fuzzing") ("default"))))))

(define-public crate-holochain_state-0.3.1-rc.0 (c (n "holochain_state") (v "0.3.1-rc.0") (d (list (d (n "aitia") (r "^0.2.1-rc.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^1.1") (d #t) (k 0)) (d (n "base64") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.12") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.2.1-rc.0") (d #t) (k 0)) (d (n "holo_hash") (r "^0.3.1-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.3.1-rc.0") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.3.1-rc.0") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.3.1-rc.0") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.54") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.3.1-rc.0") (d #t) (k 0)) (d (n "holochain_state_types") (r "^0.3.1-rc.0") (d #t) (k 0)) (d (n "holochain_types") (r "^0.3.1-rc.0") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.3.1-rc.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.3.1-rc.0") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "nanoid") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)))) (h "0b9y03x55qpdd4wlmkgsawr1yvdz78sb2vj6861v70aw5r23h09s") (f (quote (("test_utils" "holochain_keystore/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "holochain_sqlite/test_utils" "holochain_p2p/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("fuzzing" "holochain_types/fuzzing" "holochain_zome_types/fuzzing") ("default"))))))

(define-public crate-holochain_state-0.4.0-dev.4 (c (n "holochain_state") (v "0.4.0-dev.4") (d (list (d (n "aitia") (r "^0.3.0-dev.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^1.1") (d #t) (k 0)) (d (n "base64") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.12") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.4.0-dev.4") (d #t) (k 0)) (d (n "holo_hash") (r "^0.4.0-dev.4") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.4.0-dev.4") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.4.0-dev.2") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.4.0-dev.4") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.54") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.4.0-dev.4") (d #t) (k 0)) (d (n "holochain_state_types") (r "^0.4.0-dev.4") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.4.0-dev.2") (d #t) (k 2)) (d (n "holochain_types") (r "^0.4.0-dev.4") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.4.0-dev.4") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.4.0-dev.4") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "nanoid") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)))) (h "0fx4dq78lf0jmd51k8dmhaiyi5lsf1cc6g4acj0dvyz0absrnya7") (f (quote (("test_utils" "holochain_keystore/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "holochain_sqlite/test_utils" "holochain_p2p/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("fuzzing" "holochain_types/fuzzing" "holochain_zome_types/fuzzing") ("default"))))))

(define-public crate-holochain_state-0.4.0-dev.5 (c (n "holochain_state") (v "0.4.0-dev.5") (d (list (d (n "aitia") (r "^0.3.0-dev.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "arbitrary") (r "^1.0") (d #t) (k 2)) (d (n "async-recursion") (r "^1.1") (d #t) (k 0)) (d (n "base64") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock" "std" "oldtime" "serde"))) (k 0)) (d (n "contrafact") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "cron") (r "^0.12") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "hc_sleuth") (r "^0.4.0-dev.5") (d #t) (k 0)) (d (n "holo_hash") (r "^0.4.0-dev.5") (f (quote ("full"))) (d #t) (k 0)) (d (n "holochain_keystore") (r "^0.4.0-dev.5") (d #t) (k 0)) (d (n "holochain_nonce") (r "^0.4.0-dev.2") (d #t) (k 0)) (d (n "holochain_p2p") (r "^0.4.0-dev.5") (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.54") (d #t) (k 0)) (d (n "holochain_sqlite") (r "^0.4.0-dev.5") (d #t) (k 0)) (d (n "holochain_state_types") (r "^0.4.0-dev.5") (d #t) (k 0)) (d (n "holochain_trace") (r "^0.4.0-dev.3") (d #t) (k 2)) (d (n "holochain_types") (r "^0.4.0-dev.5") (d #t) (k 0)) (d (n "holochain_zome_types") (r "^0.4.0-dev.5") (f (quote ("full"))) (d #t) (k 0)) (d (n "kitsune_p2p") (r "^0.4.0-dev.5") (d #t) (k 0)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "nanoid") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "one_err") (r "^0.0.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "shrinkwraprs") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)))) (h "0pnbqckd9fak08hkhz33d2hfrfgs15qyhbd4vwm0l7agj41sc5l0") (f (quote (("test_utils" "holochain_keystore/test_utils" "holochain_types/test_utils" "holochain_zome_types/test_utils" "holochain_sqlite/test_utils" "holochain_p2p/test_utils" "base64" "contrafact" "tempfile" "nanoid") ("sqlite-encrypted" "holo_hash/sqlite-encrypted" "holochain_sqlite/sqlite-encrypted" "holochain_keystore/sqlite-encrypted" "holochain_p2p/sqlite-encrypted" "holochain_types/sqlite-encrypted" "holochain_zome_types/sqlite-encrypted" "kitsune_p2p/sqlite-encrypted") ("sqlite" "holo_hash/sqlite" "holochain_sqlite/sqlite" "holochain_keystore/sqlite" "holochain_p2p/sqlite" "holochain_types/sqlite" "holochain_zome_types/sqlite" "kitsune_p2p/sqlite") ("fuzzing" "holochain_types/fuzzing" "holochain_zome_types/fuzzing") ("default"))))))

