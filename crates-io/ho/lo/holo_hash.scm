(define-module (crates-io ho lo holo_hash) #:use-module (crates-io))

(define-public crate-holo_hash-0.0.2-alpha.1 (c (n "holo_hash") (v "0.0.2-alpha.1") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.0.2-alpha.1") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.50") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1l4k7fi8x3yl3xbp1irmjvyaj6yb84q3gm4c6v1kszac7nd7hfs2") (f (quote (("string-encoding" "base64" "blake2b_simd" "derive_more") ("serialized-bytes" "holochain_serialized_bytes") ("hashing" "blake2b_simd" "serialized-bytes") ("full" "fixturators" "hashing" "string-encoding") ("fixturators" "fixt" "rand" "serialized-bytes" "string-encoding") ("default" "serialized-bytes" "fixturators"))))))

(define-public crate-holo_hash-0.0.3 (c (n "holo_hash") (v "0.0.3") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.50") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1gg5qjp9rqk4b58f9jkh9f7xik10fmqaghgiwq8agqrripl0ngaz") (f (quote (("test_utils") ("string-encoding" "base64" "blake2b_simd" "derive_more") ("serialized-bytes" "holochain_serialized_bytes") ("hashing" "blake2b_simd" "serialized-bytes") ("full" "fixturators" "hashing" "string-encoding" "rusqlite") ("fixturators" "fixt" "rand" "serialized-bytes" "string-encoding") ("default" "serialized-bytes" "fixturators"))))))

(define-public crate-holo_hash-0.0.4 (c (n "holo_hash") (v "0.0.4") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.0.4") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1v3f6nkjfcpyxpby6dgl6whj1xfbhfyaj3xq1w4xbc3zhv5gifr8") (f (quote (("test_utils") ("string-encoding" "base64" "blake2b_simd" "derive_more") ("serialized-bytes" "holochain_serialized_bytes") ("hashing" "blake2b_simd" "serialized-bytes") ("full" "fixturators" "hashing" "string-encoding" "rusqlite") ("fixturators" "fixt" "rand" "serialized-bytes" "string-encoding") ("default" "serialized-bytes" "fixturators"))))))

(define-public crate-holo_hash-0.0.5 (c (n "holo_hash") (v "0.0.5") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.0.5") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "02jsy69d77fs93vmykc81aycivi54yvllxj46w9ah8b56rgv85zp") (f (quote (("test_utils" "fixturators") ("string-encoding" "base64" "blake2b_simd" "derive_more") ("serialized-bytes" "holochain_serialized_bytes") ("hashing" "futures" "must_future" "blake2b_simd" "serialized-bytes") ("full" "fixturators" "hashing" "string-encoding" "rusqlite") ("fixturators" "fixt" "rand" "hashing" "string-encoding") ("default" "serialized-bytes" "fixturators"))))))

(define-public crate-holo_hash-0.0.6 (c (n "holo_hash") (v "0.0.6") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.0.5") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "05ls8hz32xjagx3g51xvqh5lz0b0j622p8h0dhc150cjg1w1jaaa") (f (quote (("test_utils" "fixturators") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "rusqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization"))))))

(define-public crate-holo_hash-0.0.7 (c (n "holo_hash") (v "0.0.7") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.0.6") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0af40fahpr3icryh2w9y50f065jz4a4d0qviqd3df06rzn6aj2z7") (f (quote (("test_utils" "fixturators") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "rusqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization"))))))

(define-public crate-holo_hash-0.0.8 (c (n "holo_hash") (v "0.0.8") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.0.6") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "11v00vbdcjrk3yr0hlrb51v0b9dic46ma7qhwmz9439zbfh0xng7") (f (quote (("test_utils" "fixturators") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "rusqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization"))))))

(define-public crate-holo_hash-0.0.9 (c (n "holo_hash") (v "0.0.9") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.0.7") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.0.6") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "07dwqsj6xq4dxnng35npwwqykri6zzzvhhlghyl0in7z68izd4yh") (f (quote (("test_utils" "fixturators") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "rusqlite" "kitsune_p2p_dht_arc/sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization"))))))

(define-public crate-holo_hash-0.0.10 (c (n "holo_hash") (v "0.0.10") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.0.7") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.0.6") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "05z1vfjh8pxqnph5gsfp7wpvcbc85fj65qd3dngdqy1qi26x30zf") (f (quote (("test_utils" "fixturators") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "rusqlite" "kitsune_p2p_dht_arc/sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization"))))))

(define-public crate-holo_hash-0.0.11 (c (n "holo_hash") (v "0.0.11") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.0.7") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.0.6") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1rkib10619vl681dlhdlqaf8180j5np7rf88lnj62avkyc221p8j") (f (quote (("test_utils" "fixturators") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "rusqlite" "kitsune_p2p_dht_arc/sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization"))))))

(define-public crate-holo_hash-0.0.12 (c (n "holo_hash") (v "0.0.12") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.0.7") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.0.7") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "06jpng1a4b7b0bcg9badkhrcwdh892bc2z8mswfkjp4jdzcfb9ik") (f (quote (("test_utils" "fixturators") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "rusqlite" "kitsune_p2p_dht_arc/sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization"))))))

(define-public crate-holo_hash-0.0.13 (c (n "holo_hash") (v "0.0.13") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.0.8") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.0.7") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0dfsn37m6wwqr2ndvglv4l8dzlkxwv85spazcc4pnn2f5q3wx0fd") (f (quote (("test_utils" "fixturators") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "rusqlite" "kitsune_p2p_dht_arc/sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization"))))))

(define-public crate-holo_hash-0.0.14 (c (n "holo_hash") (v "0.0.14") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.0.8") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.0.7") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "09xyxfr8xlspfaswxw9ngwr8gday3qb880cmckw79i4f0vwn879v") (f (quote (("test_utils" "fixturators") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "rusqlite" "kitsune_p2p_dht_arc/sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization"))))))

(define-public crate-holo_hash-0.0.15 (c (n "holo_hash") (v "0.0.15") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.0.8") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.0.7") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1xk8hgw7gmamglvy92ca4q9mgpbabdq1pbvbn932ib3cdjma15sk") (f (quote (("test_utils" "fixturators") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "rusqlite" "kitsune_p2p_dht_arc/sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization"))))))

(define-public crate-holo_hash-0.0.16 (c (n "holo_hash") (v "0.0.16") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.0.8") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.0.7") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0jl1n3yiy7dw8yjafzhv6824245nfw23wzh5gdx9bs8xgsl9i6zn") (f (quote (("test_utils" "fixturators") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "rusqlite" "kitsune_p2p_dht_arc/sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization"))))))

(define-public crate-holo_hash-0.0.17 (c (n "holo_hash") (v "0.0.17") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.0.8") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.0.7") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0lrxkg9z1iajhvf5m14210ygmjqn4a24ns3q649jzaxp7h8wmk9q") (f (quote (("test_utils" "fixturators") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "rusqlite" "kitsune_p2p_dht_arc/sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization"))))))

(define-public crate-holo_hash-0.0.18 (c (n "holo_hash") (v "0.0.18") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.0.8") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.0.8") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "109rj4fdpwj8njyhgsfm92drpyjz0k9s3pj1vyvgvbg4zakj5mb7") (f (quote (("test_utils" "fixturators") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "rusqlite" "kitsune_p2p_dht_arc/sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization"))))))

(define-public crate-holo_hash-0.0.19 (c (n "holo_hash") (v "0.0.19") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.0.8") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.0.9") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "069ahz39ql8cirrg0gx0i2arw37v56c12dccgzn8x8n5mipg85jf") (f (quote (("test_utils" "fixturators") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "rusqlite" "kitsune_p2p_dht_arc/sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization"))))))

(define-public crate-holo_hash-0.0.20 (c (n "holo_hash") (v "0.0.20") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.0.8") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.0.9") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1kl9v3h7av363m79yzdghcqwdq7kdqf7hqyjhkw7jp99mjbwg5hr") (f (quote (("test_utils" "fixturators") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "rusqlite" "kitsune_p2p_dht_arc/sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization"))))))

(define-public crate-holo_hash-0.0.21 (c (n "holo_hash") (v "0.0.21") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.0.9") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.0.10") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1ljalnf70ag7ihzpdby6090i9ar1x7a07v21zj13pdn7ndlcq30d") (f (quote (("test_utils" "fixturators") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "rusqlite" "kitsune_p2p_dht_arc/sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization"))))))

(define-public crate-holo_hash-0.0.22 (c (n "holo_hash") (v "0.0.22") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.0.10") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.0.11") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1snnszrbylkhh0vfvf8p2wn8d9crcc7z1rnbk976r6f4k90fvvrc") (f (quote (("test_utils" "fixturators") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "rusqlite" "kitsune_p2p_dht_arc/sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization"))))))

(define-public crate-holo_hash-0.0.23 (c (n "holo_hash") (v "0.0.23") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.0.10") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.0.11") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0b7yh5b1jhw063cq2zjpf8yng972187aa8armh1x5fraidflnl8v") (f (quote (("test_utils" "fixturators") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "rusqlite" "kitsune_p2p_dht_arc/sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization"))))))

(define-public crate-holo_hash-0.0.24 (c (n "holo_hash") (v "0.0.24") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.0.11") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.0.11") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "19m9a8g6wnqkr52clqdqv6s99lvbiqcpykz120ys2rsvx6r1nls1") (f (quote (("test_utils" "fixturators") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "rusqlite" "kitsune_p2p_dht_arc/sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization"))))))

(define-public crate-holo_hash-0.0.25 (c (n "holo_hash") (v "0.0.25") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.0.11") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.0.11") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0a277zjjaxa164kp7k95g1fkhqv6g29rq11a5h458v9awqv1q6vs") (f (quote (("test_utils" "fixturators") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "rusqlite" "kitsune_p2p_dht_arc/sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization"))))))

(define-public crate-holo_hash-0.0.26 (c (n "holo_hash") (v "0.0.26") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.0.11") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.0.11") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "090k28bpzr436l01jap2wd5bg7hv2fh85b8lr099xrazqn8pas71") (f (quote (("test_utils" "fixturators") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "rusqlite" "kitsune_p2p_dht_arc/sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization"))))))

(define-public crate-holo_hash-0.0.27 (c (n "holo_hash") (v "0.0.27") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.0.11") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.0.11") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0d173rfvs0cfnbqnwgkiz242fyn0nxn94q29kgycnni4820d49la") (f (quote (("test_utils" "fixturators") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "rusqlite" "kitsune_p2p_dht_arc/sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization"))))))

(define-public crate-holo_hash-0.0.28 (c (n "holo_hash") (v "0.0.28") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.0.12") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.0.11") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "17a2h824k7ky5lgqc76hvzrgymsjv5ca6fsd3v3myzvqlicqavmg") (f (quote (("test_utils" "fixturators") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "rusqlite" "kitsune_p2p_dht_arc/sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization"))))))

(define-public crate-holo_hash-0.0.29 (c (n "holo_hash") (v "0.0.29") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.0.13") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.0.12") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1qid34a34cpspap55c5zym78xis77xrph7khb3lbhn1myplsrfys") (f (quote (("test_utils" "fixturators") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "rusqlite" "kitsune_p2p_dht_arc/sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization"))))))

(define-public crate-holo_hash-0.0.30 (c (n "holo_hash") (v "0.0.30") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.0.13") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.0.13") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0gns6ancqsg85b33n936p8l65648prz99ra3cv0gc0xxkk457gkm") (f (quote (("test_utils" "fixturators") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "rusqlite" "kitsune_p2p_dht_arc/sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization"))))))

(define-public crate-holo_hash-0.0.31 (c (n "holo_hash") (v "0.0.31") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.0.14") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.0.14") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1n4ym9gbcqywf4rg1nlqhwx5qq7wbvgfricwxmz8zl9y4gnm05xl") (f (quote (("test_utils" "fixturators") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "rusqlite" "kitsune_p2p_dht_arc/sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization"))))))

(define-public crate-holo_hash-0.0.32 (c (n "holo_hash") (v "0.0.32") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.0.14") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.0.15") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0ridl2j0gp0vxrwcy0cl2nzn2hk2bdmmmfrqsvvgpv3qzg827sbv") (f (quote (("test_utils" "fixturators") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "rusqlite" "kitsune_p2p_dht_arc/sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization"))))))

(define-public crate-holo_hash-0.0.33 (c (n "holo_hash") (v "0.0.33") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.0.14") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.0.16") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0p4fkghyyy7phjyxfjqpy2prrcv495fjpyla1q36p0xhj67lyvi1") (f (quote (("test_utils" "fixturators") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "rusqlite" "kitsune_p2p_dht_arc/sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization"))))))

(define-public crate-holo_hash-0.0.34 (c (n "holo_hash") (v "0.0.34") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.0.14") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.0.16") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1pc7b6gm43y7ydk7knhv5a65pb8jf625iqpj6p7608zivz7rjv59") (f (quote (("test_utils" "fixturators") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "rusqlite" "kitsune_p2p_dht_arc/sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization"))))))

(define-public crate-holo_hash-0.0.35 (c (n "holo_hash") (v "0.0.35") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.0.14") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.0.16") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1hg6fpwzssm2ggml28jrrddn33n38vxns0dcamxldlsmn8p8m5pf") (f (quote (("test_utils" "fixturators") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "rusqlite" "kitsune_p2p_dht_arc/sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization"))))))

(define-public crate-holo_hash-0.1.0-beta-rc.0 (c (n "holo_hash") (v "0.1.0-beta-rc.0") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.1.0-beta-rc.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.1.0-beta-rc.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "14ibh6qz8a4g3zlarwj679l42cmav8a5w3ych74k7nmi7iw81v74") (f (quote (("test_utils" "fixturators") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "rusqlite" "kitsune_p2p_dht_arc/sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization"))))))

(define-public crate-holo_hash-0.1.0-beta-rc.1 (c (n "holo_hash") (v "0.1.0-beta-rc.1") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.1.0-beta-rc.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.1.0-beta-rc.1") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0slf3901qlbhnjs2n71wggj8c5h57iik0vh5q160bnli5ls32p5q") (f (quote (("test_utils" "fixturators") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "rusqlite" "kitsune_p2p_dht_arc/sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization"))))))

(define-public crate-holo_hash-0.1.0-beta-rc.2 (c (n "holo_hash") (v "0.1.0-beta-rc.2") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.1.0-beta-rc.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.1.0-beta-rc.1") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "17bfjk19r4h8f0wiikf75x799hf1n961ksh8pzmdc8v2hw3nvn0c") (f (quote (("test_utils" "fixturators") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "rusqlite" "kitsune_p2p_dht_arc/sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization"))))))

(define-public crate-holo_hash-0.1.0 (c (n "holo_hash") (v "0.1.0") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.1.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "06zfpwrlpgq0fdcx6p1mmxfqi8sq9yad7hxhxrqbwwlczbpnh0i7") (f (quote (("test_utils" "fixturators") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "rusqlite" "kitsune_p2p_dht_arc/sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization"))))))

(define-public crate-holo_hash-0.1.1 (c (n "holo_hash") (v "0.1.1") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.1.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0dkg15d3zabgwg94w2a75ycgd4nvbmi9vk6lk16cxlp1kkxv5zww") (f (quote (("test_utils" "fixturators") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "rusqlite" "kitsune_p2p_dht_arc/sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization"))))))

(define-public crate-holo_hash-0.2.0-beta-rc.0 (c (n "holo_hash") (v "0.2.0-beta-rc.0") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.2.0-beta-rc.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.2.0-beta-rc.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1kmsgv05hr7fivjgab2gpyk6r3k180bqj1y0ir17fzbf6vd53v4g") (f (quote (("test_utils" "fixturators") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "rusqlite" "kitsune_p2p_dht_arc/sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization"))))))

(define-public crate-holo_hash-0.2.0-beta-rc.1 (c (n "holo_hash") (v "0.2.0-beta-rc.1") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.2.0-beta-rc.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.2.0-beta-rc.1") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1n5jpydvppdxx2ip1ajk6lr3smwyrgc2q79d5pxp0zzw0i4z5q29") (f (quote (("test_utils" "fixturators") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "rusqlite" "kitsune_p2p_dht_arc/sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization"))))))

(define-public crate-holo_hash-0.2.0-beta-rc.2 (c (n "holo_hash") (v "0.2.0-beta-rc.2") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.2.0-beta-rc.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.2.0-beta-rc.1") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0mmgihkv3vz41dqkbs94h16dyf0cra619wsq8rjhxwplyg7jlagq") (f (quote (("test_utils" "fixturators") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "rusqlite" "kitsune_p2p_dht_arc/sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization"))))))

(define-public crate-holo_hash-0.2.0-beta-rc.3 (c (n "holo_hash") (v "0.2.0-beta-rc.3") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.2.0-beta-rc.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.2.0-beta-rc.1") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1lxx4rwbdbcs66mf89dhihnw9fhva6dbnixs25xip05z97vhwbkr") (f (quote (("test_utils" "fixturators") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "rusqlite" "kitsune_p2p_dht_arc/sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization"))))))

(define-public crate-holo_hash-0.1.2 (c (n "holo_hash") (v "0.1.2") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.1.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1zcdafah8inih1837zfkxcx6rw14rpxc8922kmrbza0w0ahpd01x") (f (quote (("test_utils" "fixturators") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "rusqlite" "kitsune_p2p_dht_arc/sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization"))))))

(define-public crate-holo_hash-0.2.0-beta-rc.4 (c (n "holo_hash") (v "0.2.0-beta-rc.4") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.2.0-beta-rc.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.2.0-beta-rc.2") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0q5a45rhknylp52yvxbrplqrgcsmmwdmh9fg3vxhzlbaszjl92il") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization"))))))

(define-public crate-holo_hash-0.1.3-beta-rc.0 (c (n "holo_hash") (v "0.1.3-beta-rc.0") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.1.2-beta-rc.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.1.1-beta-rc.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0ar4z2c6h42ml4hcs7vkpkfhlh8q1lgzxyhbqmgdcrxmn5s31bi9") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization"))))))

(define-public crate-holo_hash-0.2.0-beta-rc.5 (c (n "holo_hash") (v "0.2.0-beta-rc.5") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.2.0-beta-rc.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.2.0-beta-rc.3") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0lq13h9p8rdni5a7hjb5qbzphc4jias7g3axf15qzwvl7s7rai17") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization"))))))

(define-public crate-holo_hash-0.2.0 (c (n "holo_hash") (v "0.2.0") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "holochain_wasmer_common") (r "=0.0.84") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.2.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1bzyi5y8parzcd8gghi9rc4q8d6724ddn2bn7y8132jy9fgi29k2") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("holochain-wasmer" "holochain_wasmer_common") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization" "holochain-wasmer"))))))

(define-public crate-holo_hash-0.2.1-beta-dev.0 (c (n "holo_hash") (v "0.2.1-beta-dev.0") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.2.1-beta-dev.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "holochain_wasmer_common") (r "=0.0.84") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.2.1-beta-dev.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1vkpb5pcmv3ryjh77wj8wy9kq45b047np8fafcd0pyvv3mpnlnxl") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("holochain-wasmer" "holochain_wasmer_common") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization" "holochain-wasmer"))))))

(define-public crate-holo_hash-0.3.0-beta-dev.0 (c (n "holo_hash") (v "0.3.0-beta-dev.0") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "holochain_wasmer_common") (r "=0.0.84") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0dl50qvm8v1rwp7f8w02k4wv60dmi07jwrv1mm4ygg6ssnxkyxx7") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("holochain-wasmer" "holochain_wasmer_common") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization" "holochain-wasmer"))))))

(define-public crate-holo_hash-0.3.0-beta-dev.1 (c (n "holo_hash") (v "0.3.0-beta-dev.1") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "holochain_wasmer_common") (r "=0.0.84") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.3.0-beta-dev.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0g2k7fwd1yj2gzj0wwwrxd4036nkx15mq10x03gfp3vx3fxpwqrl") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("holochain-wasmer" "holochain_wasmer_common") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization" "holochain-wasmer"))))))

(define-public crate-holo_hash-0.3.0-beta-dev.2 (c (n "holo_hash") (v "0.3.0-beta-dev.2") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "holochain_wasmer_common") (r "=0.0.84") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.3.0-beta-dev.1") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1vldnf2xf7dpd9pmnmrs8if6g18016alhxr77v2ipdlf46igflla") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("holochain-wasmer" "holochain_wasmer_common") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization" "holochain-wasmer"))))))

(define-public crate-holo_hash-0.1.3 (c (n "holo_hash") (v "0.1.3") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.1.1") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0ldnnvz0b571wvab2j4vjy0c0ywbj54vx0fvnqxfvzk0ls3f6mnz") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization"))))))

(define-public crate-holo_hash-0.3.0-beta-dev.3 (c (n "holo_hash") (v "0.3.0-beta-dev.3") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "holochain_wasmer_common") (r "=0.0.84") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.3.0-beta-dev.2") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "04365b9qydcx29s29b5bz8mv9rvvdji8nfxpqwmpipf2npwwc8f0") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("holochain-wasmer" "holochain_wasmer_common") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization" "holochain-wasmer"))))))

(define-public crate-holo_hash-0.3.0-beta-dev.4 (c (n "holo_hash") (v "0.3.0-beta-dev.4") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "holochain_wasmer_common") (r "=0.0.84") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0k0jfxb2ngsmqpbx9cbcv2imn327ii9gp5gxxjqm9zz68ihkcxwg") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("holochain-wasmer" "holochain_wasmer_common") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization" "holochain-wasmer"))))))

(define-public crate-holo_hash-0.2.1-beta-rc.0 (c (n "holo_hash") (v "0.2.1-beta-rc.0") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.2.1-beta-rc.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "holochain_wasmer_common") (r "=0.0.84") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.2.1-beta-rc.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0xnkad21s97gnaq2z8silm4g4n8dqki25j0prdhb8i94ch4668kr") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("holochain-wasmer" "holochain_wasmer_common") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization" "holochain-wasmer"))))))

(define-public crate-holo_hash-0.3.0-beta-dev.5 (c (n "holo_hash") (v "0.3.0-beta-dev.5") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "holochain_wasmer_common") (r "=0.0.84") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1v48jhg5ilirij916q57aa5rqhakw6y1q0jhpjivmidaydpng7if") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("holochain-wasmer" "holochain_wasmer_common") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization" "holochain-wasmer"))))))

(define-public crate-holo_hash-0.2.1 (c (n "holo_hash") (v "0.2.1") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "holochain_wasmer_common") (r "=0.0.84") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.2.1") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0h09mvmrdgjg9r9xyg6msvqy4b7dars9hxddwlmxyfl9hl4p97x3") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("holochain-wasmer" "holochain_wasmer_common") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization" "holochain-wasmer"))))))

(define-public crate-holo_hash-0.3.0-beta-dev.6 (c (n "holo_hash") (v "0.3.0-beta-dev.6") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "holochain_wasmer_common") (r "=0.0.84") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.3.0-beta-dev.3") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0mpzxpcicdi7kh454m5g29crb5n0h78a1ylhqy6ff4rzacybpwnr") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("holochain-wasmer" "holochain_wasmer_common") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization" "holochain-wasmer"))))))

(define-public crate-holo_hash-0.1.4-beta-rc.0 (c (n "holo_hash") (v "0.1.4-beta-rc.0") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.1.3-beta-rc.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.1.1") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0j8c88wfssjk2jcdbykkvgsw09nwqwbvh4ka6aw11rz1psczai9c") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization"))))))

(define-public crate-holo_hash-0.1.4 (c (n "holo_hash") (v "0.1.4") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.1.2") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0mrhh466xsx9cpz6h24nn8s0acqzxb00yrhs66xm91674jqkb7hg") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization"))))))

(define-public crate-holo_hash-0.2.2-beta-rc.0 (c (n "holo_hash") (v "0.2.2-beta-rc.0") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.2-beta-rc.0") (k 0)) (d (n "holochain_wasmer_common") (r "=0.0.84") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.2.1") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0gqjhlgb71vaknpn6jnqnx145bbq0dgfj5c4rdb8xrqn4a9iv6c9") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("holochain-wasmer" "holochain_wasmer_common") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization" "holochain-wasmer"))))))

(define-public crate-holo_hash-0.3.0-beta-dev.7 (c (n "holo_hash") (v "0.3.0-beta-dev.7") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.0") (k 0)) (d (n "holochain_wasmer_common") (r "=0.0.84") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.3.0-beta-dev.4") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1s05a96dg0s1g82j8jngiw64dqx9ilsdy2jvv3hjnyqirh7b50mq") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("holochain-wasmer" "holochain_wasmer_common") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization" "holochain-wasmer"))))))

(define-public crate-holo_hash-0.2.2 (c (n "holo_hash") (v "0.2.2") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.2") (k 0)) (d (n "holochain_wasmer_common") (r "=0.0.84") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.2.2") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "03n0m81h477azjkm8jkj6s8askjx1p8yln4yfsk9pnf2nz3sania") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("holochain-wasmer" "holochain_wasmer_common") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization" "holochain-wasmer"))))))

(define-public crate-holo_hash-0.3.0-beta-dev.8 (c (n "holo_hash") (v "0.3.0-beta-dev.8") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.0") (k 0)) (d (n "holochain_wasmer_common") (r "=0.0.84") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.3.0-beta-dev.5") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1h4qgknwk6nynbn4fplcdskjsx0kig7c1maxlr5nbs2z45zb3ngc") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("holochain-wasmer" "holochain_wasmer_common") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization" "holochain-wasmer"))))))

(define-public crate-holo_hash-0.2.3-beta-rc.0 (c (n "holo_hash") (v "0.2.3-beta-rc.0") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.2") (k 0)) (d (n "holochain_wasmer_common") (r "=0.0.84") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.2.3-beta-rc.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0x1dbmsss3k2sb9is6r8z07byzajsyz7p8p0czj482vbh7zzsp23") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("holochain-wasmer" "holochain_wasmer_common") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization" "holochain-wasmer"))))))

(define-public crate-holo_hash-0.3.0-beta-dev.9 (c (n "holo_hash") (v "0.3.0-beta-dev.9") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (o #t) (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.1") (k 0)) (d (n "holochain_wasmer_common") (r "=0.0.85") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.3.0-beta-dev.6") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "00kw6qp0pgcxags72lww3q144yxmgdavvv1fl85526sjz5f2734r") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("holochain-wasmer" "holochain_wasmer_common") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization" "holochain-wasmer")))) (s 2) (e (quote (("fuzzing" "arbitrary" "proptest" "proptest-derive" "holochain_serialized_bytes?/fuzzing"))))))

(define-public crate-holo_hash-0.1.5-rc.0 (c (n "holo_hash") (v "0.1.5-rc.0") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.1.4-rc.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.1.3-rc.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0sjrmi4bil6vhqgl4h5vbcvc2f7lg5hlgsmjyhi1g35h48ivmr6p") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization"))))))

(define-public crate-holo_hash-0.3.0-beta-dev.10 (c (n "holo_hash") (v "0.3.0-beta-dev.10") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (o #t) (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.2") (k 0)) (d (n "holochain_wasmer_common") (r "=0.0.85") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.3.0-beta-dev.7") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "04vi5fwxzj2mm681hh60myw5lk6xciimz9qycg5kybzlwzaaacvy") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("holochain-wasmer" "holochain_wasmer_common") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization" "holochain-wasmer")))) (s 2) (e (quote (("fuzzing" "arbitrary" "proptest" "proptest-derive" "holochain_serialized_bytes?/fuzzing"))))))

(define-public crate-holo_hash-0.1.5 (c (n "holo_hash") (v "0.1.5") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.1.3") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0l35nyxwvhz0jz0qhrmxd502ry0g26vcnm5pdzcckdb387s4shrp") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization"))))))

(define-public crate-holo_hash-0.3.0-beta-dev.11 (c (n "holo_hash") (v "0.3.0-beta-dev.11") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (o #t) (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.2") (k 0)) (d (n "holochain_wasmer_common") (r "=0.0.85") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.3.0-beta-dev.8") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "16z7yjzak5hs14hisi9mr81l8gjqxwsmnbhfq43ghb63hgkzyv7k") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("holochain-wasmer" "holochain_wasmer_common") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization" "holochain-wasmer")))) (s 2) (e (quote (("fuzzing" "arbitrary" "proptest" "proptest-derive" "holochain_serialized_bytes?/fuzzing"))))))

(define-public crate-holo_hash-0.2.3-rc.0 (c (n "holo_hash") (v "0.2.3-rc.0") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.2.3-rc.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (o #t) (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.3-rc.0") (k 0)) (d (n "holochain_wasmer_common") (r "=0.0.86") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.2.3-rc.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "02v1xj8yp4471g3pb7gag5n4d4lbibk08ddwhrmr5am8bcvfinfp") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("holochain-wasmer" "holochain_wasmer_common") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization" "holochain-wasmer"))))))

(define-public crate-holo_hash-0.3.0-beta-dev.12 (c (n "holo_hash") (v "0.3.0-beta-dev.12") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (o #t) (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.2") (k 0)) (d (n "holochain_wasmer_common") (r "=0.0.86") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.3.0-beta-dev.8") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0zlj50z1wz5dg7spir72fg67ysy4v6w35l4w78cgirrir2wf60na") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("holochain-wasmer" "holochain_wasmer_common") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization" "holochain-wasmer")))) (s 2) (e (quote (("fuzzing" "arbitrary" "proptest" "proptest-derive" "holochain_serialized_bytes?/fuzzing"))))))

(define-public crate-holo_hash-0.2.3-rc.1 (c (n "holo_hash") (v "0.2.3-rc.1") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.2.3-rc.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.3-rc.0") (k 0)) (d (n "holochain_wasmer_common") (r "=0.0.84") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.2.3-rc.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "162awjapplhnk4b26ljr01b8jang8pql8z0f2azbiq4cyx9swaja") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("holochain-wasmer" "holochain_wasmer_common") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization" "holochain-wasmer"))))))

(define-public crate-holo_hash-0.3.0-beta-dev.13 (c (n "holo_hash") (v "0.3.0-beta-dev.13") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (o #t) (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.2") (k 0)) (d (n "holochain_wasmer_common") (r "=0.0.86") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.3.0-beta-dev.9") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "15mvrf124k2007fw868p3s7a4qqr3qsvn3vgsf3g3kx2m8ai6b08") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("holochain-wasmer" "holochain_wasmer_common") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization" "holochain-wasmer")))) (s 2) (e (quote (("fuzzing" "arbitrary" "proptest" "proptest-derive" "holochain_serialized_bytes?/fuzzing"))))))

(define-public crate-holo_hash-0.2.3 (c (n "holo_hash") (v "0.2.3") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.3") (k 0)) (d (n "holochain_wasmer_common") (r "=0.0.84") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.2.3") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1bqb6fnrczp7hk7z01d5cfb9wrh5zrpgq8j9s04br9k2h4xw8mlp") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("holochain-wasmer" "holochain_wasmer_common") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization" "holochain-wasmer"))))))

(define-public crate-holo_hash-0.3.0-beta-dev.14 (c (n "holo_hash") (v "0.3.0-beta-dev.14") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (o #t) (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.2") (k 0)) (d (n "holochain_wasmer_common") (r "=0.0.86") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.3.0-beta-dev.9") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0z0waz0vihry8gs841v53kmqdx7rbsikbz8m2h969ys8gss4zybp") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("holochain-wasmer" "holochain_wasmer_common") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization" "holochain-wasmer")))) (s 2) (e (quote (("fuzzing" "arbitrary" "proptest" "proptest-derive" "holochain_serialized_bytes?/fuzzing"))))))

(define-public crate-holo_hash-0.3.0-beta-dev.15 (c (n "holo_hash") (v "0.3.0-beta-dev.15") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (o #t) (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.2") (k 0)) (d (n "holochain_wasmer_common") (r "=0.0.90") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.3.0-beta-dev.9") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1xvlcn5xk8azlzkz626d5r8k5l4hr6shb1fzq7d583rjh45xdd1l") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("holochain-wasmer" "holochain_wasmer_common") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization" "holochain-wasmer")))) (s 2) (e (quote (("fuzzing" "arbitrary" "proptest" "proptest-derive" "holochain_serialized_bytes?/fuzzing"))))))

(define-public crate-holo_hash-0.2.4 (c (n "holo_hash") (v "0.2.4") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.4") (k 0)) (d (n "holochain_wasmer_common") (r "=0.0.84") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.2.4") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1z9hgq14ci73gyzcnbpdyk68c7fygcjdra4n5ygigkxz5m091yr5") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("holochain-wasmer" "holochain_wasmer_common") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization" "holochain-wasmer"))))))

(define-public crate-holo_hash-0.3.0-beta-dev.16 (c (n "holo_hash") (v "0.3.0-beta-dev.16") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (o #t) (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.3") (k 0)) (d (n "holochain_wasmer_common") (r "=0.0.91") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.3.0-beta-dev.10") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1j8c5g8ssw4imp7vk5kly788lqyvbibc72z1rbs7h12hwbnz8y2j") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("holochain-wasmer" "holochain_wasmer_common") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization" "holochain-wasmer")))) (s 2) (e (quote (("fuzzing" "arbitrary" "proptest" "proptest-derive" "holochain_serialized_bytes?/fuzzing"))))))

(define-public crate-holo_hash-0.3.0-beta-dev.17 (c (n "holo_hash") (v "0.3.0-beta-dev.17") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (o #t) (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.3") (k 0)) (d (n "holochain_wasmer_common") (r "=0.0.91") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.3.0-beta-dev.11") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "06m17yhb1z18krbl1qdvsamx9psznhx71c0w1w3rmk48c8wc9sjm") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("holochain-wasmer" "holochain_wasmer_common") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization" "holochain-wasmer")))) (s 2) (e (quote (("fuzzing" "arbitrary" "proptest" "proptest-derive" "holochain_serialized_bytes?/fuzzing"))))))

(define-public crate-holo_hash-0.3.0-beta-dev.18 (c (n "holo_hash") (v "0.3.0-beta-dev.18") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (o #t) (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.3") (k 0)) (d (n "holochain_wasmer_common") (r "=0.0.91") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.3.0-beta-dev.12") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0fjfq2dp9h4mnvqdjvh2i0jm38nf2nc51aqbc5vpcm3njkf855yw") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("holochain-wasmer" "holochain_wasmer_common") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization" "holochain-wasmer")))) (s 2) (e (quote (("fuzzing" "arbitrary" "proptest" "proptest-derive" "holochain_serialized_bytes?/fuzzing"))))))

(define-public crate-holo_hash-0.3.0-beta-dev.19 (c (n "holo_hash") (v "0.3.0-beta-dev.19") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (o #t) (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.3") (k 0)) (d (n "holochain_wasmer_common") (r "=0.0.91") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.3.0-beta-dev.13") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1yhmg5sy14l52a4f063zlc7bq6r27x0jq1cdqs29zn5wy8vkimcg") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("holochain-wasmer" "holochain_wasmer_common") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization" "holochain-wasmer")))) (s 2) (e (quote (("fuzzing" "arbitrary" "proptest" "proptest-derive" "holochain_serialized_bytes?/fuzzing"))))))

(define-public crate-holo_hash-0.2.5-rc.0 (c (n "holo_hash") (v "0.2.5-rc.0") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.2.5-rc.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (o #t) (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.4") (k 0)) (d (n "holochain_wasmer_common") (r "=0.0.92") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.2.4") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1fgxn4f8vlp7z7v8nr8cq2is0vywz6bdrwvg1a7ahlsfrhgjgn71") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("holochain-wasmer" "holochain_wasmer_common") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization" "holochain-wasmer"))))))

(define-public crate-holo_hash-0.3.0-beta-dev.20 (c (n "holo_hash") (v "0.3.0-beta-dev.20") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (o #t) (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.3") (k 0)) (d (n "holochain_wasmer_common") (r "=0.0.92") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.3.0-beta-dev.13") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1y41lrmjddkkbf1q2b8acsczgnpad2h6vyxr1ql5dayxn6mvq37r") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("holochain-wasmer" "holochain_wasmer_common") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization" "holochain-wasmer")))) (s 2) (e (quote (("fuzzing" "arbitrary" "proptest" "proptest-derive" "holochain_serialized_bytes?/fuzzing"))))))

(define-public crate-holo_hash-0.1.6 (c (n "holo_hash") (v "0.1.6") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.51") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.1.4") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "15x4kfqp5z3pw4mmj2gc9nqa9psmn1h794bjwb0xzm9lkp43a9nc") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization"))))))

(define-public crate-holo_hash-0.2.5 (c (n "holo_hash") (v "0.2.5") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.2.5") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (o #t) (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.5") (k 0)) (d (n "holochain_wasmer_common") (r "=0.0.92") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.2.5") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1q7k1vlh9n9nkp7k2p9g5wri0gcymibg9jb39kpgpayrvx090v2s") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("holochain-wasmer" "holochain_wasmer_common") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization" "holochain-wasmer"))))))

(define-public crate-holo_hash-0.3.0-beta-dev.21 (c (n "holo_hash") (v "0.3.0-beta-dev.21") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (o #t) (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.3") (k 0)) (d (n "holochain_wasmer_common") (r "=0.0.92") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.3.0-beta-dev.14") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0kzbqa8h4192l1kf9r2lkpnyq61sy6lb5ikhy9gpa4bx5wm00zza") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("holochain-wasmer" "holochain_wasmer_common") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization" "holochain-wasmer")))) (s 2) (e (quote (("fuzzing" "arbitrary" "proptest" "proptest-derive" "holochain_serialized_bytes?/fuzzing"))))))

(define-public crate-holo_hash-0.2.6-rc.0 (c (n "holo_hash") (v "0.2.6-rc.0") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.2.5") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (o #t) (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.5") (k 0)) (d (n "holochain_wasmer_common") (r "=0.0.92") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.2.6-rc.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "037ysbvzk4g0ljp7fwnw9qdnj085613cfqcqrcfzqqj14xx7snsf") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("holochain-wasmer" "holochain_wasmer_common") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization" "holochain-wasmer"))))))

(define-public crate-holo_hash-0.2.6 (c (n "holo_hash") (v "0.2.6") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (o #t) (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.6") (k 0)) (d (n "holochain_wasmer_common") (r "=0.0.92") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.2.6") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0q0acsyy4n0mk3p0niby71xs8vxp8pssyspp6ngkg9dcn11v0zb3") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("holochain-wasmer" "holochain_wasmer_common") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization" "holochain-wasmer"))))))

(define-public crate-holo_hash-0.3.0-beta-dev.22 (c (n "holo_hash") (v "0.3.0-beta-dev.22") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (o #t) (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.4") (k 0)) (d (n "holochain_wasmer_common") (r "=0.0.92") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.3.0-beta-dev.15") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1m19ybzz9hpb1zpgsq9j47w5kmmcnsf3jk3ri7hbpsxqx6h5nxy8") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("holochain-wasmer" "holochain_wasmer_common") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization" "holochain-wasmer")))) (s 2) (e (quote (("fuzzing" "arbitrary" "proptest" "proptest-derive" "holochain_serialized_bytes?/fuzzing"))))))

(define-public crate-holo_hash-0.3.0-beta-dev.23 (c (n "holo_hash") (v "0.3.0-beta-dev.23") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (o #t) (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.5") (k 0)) (d (n "holochain_wasmer_common") (r "=0.0.92") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.3.0-beta-dev.16") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1rwnd4mrl6jq75z7n7ifv7s2936lxm6bfjg9bwa3aqlf4p0563h5") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("holochain-wasmer" "holochain_wasmer_common") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization" "holochain-wasmer")))) (s 2) (e (quote (("fuzzing" "arbitrary" "proptest" "proptest-derive" "holochain_serialized_bytes?/fuzzing"))))))

(define-public crate-holo_hash-0.3.0-beta-dev.24 (c (n "holo_hash") (v "0.3.0-beta-dev.24") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (o #t) (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.5") (k 0)) (d (n "holochain_wasmer_common") (r "=0.0.92") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.3.0-beta-dev.17") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0ihmk5a9zi2g7xmdfw8h6fqkyijfmvs7dn1md32bwqq1xdz12c4q") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("holochain-wasmer" "holochain_wasmer_common") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization" "holochain-wasmer")))) (s 2) (e (quote (("fuzzing" "arbitrary" "proptest" "proptest-derive" "holochain_serialized_bytes?/fuzzing"))))))

(define-public crate-holo_hash-0.3.0-beta-dev.25 (c (n "holo_hash") (v "0.3.0-beta-dev.25") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.3") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (o #t) (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.6") (k 0)) (d (n "holochain_wasmer_common") (r "=0.0.92") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.3.0-beta-dev.18") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "145xlllr722pqnzvajifl967lvv5lfrqnzgbplk9wg36brnvvv43") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("holochain-wasmer" "holochain_wasmer_common") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization" "holochain-wasmer")))) (s 2) (e (quote (("fuzzing" "arbitrary" "proptest" "proptest-derive" "holochain_serialized_bytes?/fuzzing"))))))

(define-public crate-holo_hash-0.3.0-beta-dev.26 (c (n "holo_hash") (v "0.3.0-beta-dev.26") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.3") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (o #t) (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.6") (k 0)) (d (n "holochain_wasmer_common") (r "=0.0.92") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.3.0-beta-dev.18") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "014g8b9n04b6zycx2a6kbwkzzipaw2qh61b6877lkpsrqh7fwr4s") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("holochain-wasmer" "holochain_wasmer_common") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization" "holochain-wasmer")))) (s 2) (e (quote (("fuzzing" "arbitrary" "proptest" "proptest-derive" "holochain_serialized_bytes?/fuzzing"))))))

(define-public crate-holo_hash-0.2.7 (c (n "holo_hash") (v "0.2.7") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.2.7") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (o #t) (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.7") (k 0)) (d (n "holochain_wasmer_common") (r "=0.0.92") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.2.7") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "04d07sh6pcx9q87vnqw7xwmpn7zr2v3jxy4wwf2c3bcfnm9ixx9d") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("holochain-wasmer" "holochain_wasmer_common") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization" "holochain-wasmer"))))))

(define-public crate-holo_hash-0.3.0-beta-dev.27 (c (n "holo_hash") (v "0.3.0-beta-dev.27") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.3") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (o #t) (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.7") (k 0)) (d (n "holochain_wasmer_common") (r "=0.0.92") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.3.0-beta-dev.19") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "10kffdlsyiwqjx11mv8c5aiq318irgiqh6cz0ap57cnsh0r4zyzn") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("holochain-wasmer" "holochain_wasmer_common") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization" "holochain-wasmer")))) (s 2) (e (quote (("fuzzing" "arbitrary" "proptest" "proptest-derive" "holochain_serialized_bytes?/fuzzing"))))))

(define-public crate-holo_hash-0.3.0-beta-dev.28 (c (n "holo_hash") (v "0.3.0-beta-dev.28") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.3.0-beta-dev.4") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (o #t) (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-beta-dev.8") (k 0)) (d (n "holochain_wasmer_common") (r "=0.0.92") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.3.0-beta-dev.20") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1vjpikkr2v9sgx9pc9665hbl4scpkb13g1pa3w9prf1yk5q46vmg") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("holochain-wasmer" "holochain_wasmer_common") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization" "holochain-wasmer")))) (s 2) (e (quote (("fuzzing" "arbitrary" "proptest" "proptest-derive" "holochain_serialized_bytes?/fuzzing"))))))

(define-public crate-holo_hash-0.2.8 (c (n "holo_hash") (v "0.2.8") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.2.8") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.53") (o #t) (d #t) (k 0)) (d (n "holochain_util") (r "^0.2.8") (k 0)) (d (n "holochain_wasmer_common") (r "=0.0.92") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.2.8") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r ">=1.0, <=1.0.166") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0f03l8cpkgggmbg1ikmkb3kvnj13mhy1nflwnaqsf32nxmjpqggg") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("holochain-wasmer" "holochain_wasmer_common") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization" "holochain-wasmer"))))))

(define-public crate-holo_hash-0.4.0-dev.0 (c (n "holo_hash") (v "0.4.0-dev.0") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.4.0-dev.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.54") (o #t) (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.0-dev.0") (k 0)) (d (n "holochain_wasmer_common") (r "=0.0.93") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.4.0-dev.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "11lzw6bw8npyd531rwwl5rbfz3j36q97cfkb53rf1y7fdm0i5x74") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("holochain-wasmer" "holochain_wasmer_common") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization" "holochain-wasmer")))) (s 2) (e (quote (("fuzzing" "arbitrary" "proptest" "proptest-derive" "holochain_serialized_bytes?/fuzzing"))))))

(define-public crate-holo_hash-0.4.0-dev.1 (c (n "holo_hash") (v "0.4.0-dev.1") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.4.0-dev.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.54") (o #t) (d #t) (k 0)) (d (n "holochain_util") (r "^0.4.0-dev.1") (k 0)) (d (n "holochain_wasmer_common") (r "=0.0.93") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0rx3yycaixmyp4mk7va07q8951rc01layk8f53dysvmifsw8k4s3") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("holochain-wasmer" "holochain_wasmer_common") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization" "holochain-wasmer")))) (s 2) (e (quote (("fuzzing" "arbitrary" "proptest" "proptest-derive" "holochain_serialized_bytes?/fuzzing"))))))

(define-public crate-holo_hash-0.4.0-dev.2 (c (n "holo_hash") (v "0.4.0-dev.2") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.4.0-dev.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.54") (o #t) (d #t) (k 0)) (d (n "holochain_util") (r "^0.4.0-dev.1") (k 0)) (d (n "holochain_wasmer_common") (r "=0.0.93") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.4.0-dev.2") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0hjnwass9sgiqx7ky4z4rxkh3m4460bhz9ca7vdlmhjx75czn0xy") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("holochain-wasmer" "holochain_wasmer_common") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization" "holochain-wasmer")))) (s 2) (e (quote (("fuzzing" "arbitrary" "proptest" "proptest-derive" "holochain_serialized_bytes?/fuzzing"))))))

(define-public crate-holo_hash-0.4.0-dev.3 (c (n "holo_hash") (v "0.4.0-dev.3") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.4.0-dev.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.54") (o #t) (d #t) (k 0)) (d (n "holochain_util") (r "^0.4.0-dev.1") (k 0)) (d (n "holochain_wasmer_common") (r "=0.0.93") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.4.0-dev.3") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1s9y89zrvmnq7apd7dkzp2g3kbl8gv9xfxw7g95i7hb0y8yvv2av") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("holochain-wasmer" "holochain_wasmer_common") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization" "holochain-wasmer")))) (s 2) (e (quote (("fuzzing" "arbitrary" "proptest" "proptest-derive" "holochain_serialized_bytes?/fuzzing"))))))

(define-public crate-holo_hash-0.3.1-rc.0 (c (n "holo_hash") (v "0.3.1-rc.0") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.3.1-rc.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.54") (o #t) (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.1-rc.0") (k 0)) (d (n "holochain_wasmer_common") (r "=0.0.93") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.3.1-rc.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0iwhalz32vwajgmc3c1x3ap9agnv1rkbi9gjla7g0km2x5af6vz0") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("holochain-wasmer" "holochain_wasmer_common") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization" "holochain-wasmer")))) (s 2) (e (quote (("fuzzing" "arbitrary" "proptest" "proptest-derive" "holochain_serialized_bytes?/fuzzing"))))))

(define-public crate-holo_hash-0.4.0-dev.4 (c (n "holo_hash") (v "0.4.0-dev.4") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.4.0-dev.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.54") (o #t) (d #t) (k 0)) (d (n "holochain_util") (r "^0.4.0-dev.1") (k 0)) (d (n "holochain_wasmer_common") (r "=0.0.94") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.4.0-dev.4") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "169q9ix2k1kflh5d0rpjdycfmnv4dyd10njsfq39vq9nlmfzklji") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("holochain-wasmer" "holochain_wasmer_common") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization" "holochain-wasmer")))) (s 2) (e (quote (("fuzzing" "arbitrary" "proptest" "proptest-derive" "holochain_serialized_bytes?/fuzzing"))))))

(define-public crate-holo_hash-0.4.0-dev.5 (c (n "holo_hash") (v "0.4.0-dev.5") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.4.0-dev.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.54") (o #t) (d #t) (k 0)) (d (n "holochain_util") (r "^0.4.0-dev.1") (k 0)) (d (n "holochain_wasmer_common") (r "=0.0.94") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.4.0-dev.5") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "12802s7427m0zpkkf6r3vh2cy0a2lcylncxmlg2w3v1qvc1l7f40") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("holochain-wasmer" "holochain_wasmer_common") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization" "holochain-wasmer")))) (s 2) (e (quote (("fuzzing" "arbitrary" "proptest" "proptest-derive" "holochain_serialized_bytes?/fuzzing"))))))

(define-public crate-holo_hash-0.3.1-rc.1 (c (n "holo_hash") (v "0.3.1-rc.1") (d (list (d (n "arbitrary") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (o #t) (d #t) (k 0)) (d (n "fixt") (r "^0.3.1-rc.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "holochain_serialized_bytes") (r "=0.0.54") (o #t) (d #t) (k 0)) (d (n "holochain_util") (r "^0.3.1-rc.0") (k 0)) (d (n "holochain_wasmer_common") (r "=0.0.94") (o #t) (d #t) (k 0)) (d (n "kitsune_p2p_dht_arc") (r "^0.3.1-rc.0") (d #t) (k 0)) (d (n "must_future") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0x7qqfbvz1h1407ixyb358ir26h05j6vllxdh4rjqlk938ngp1dc") (f (quote (("test_utils" "fixturators") ("sqlite-encrypted" "rusqlite" "rusqlite/bundled-sqlcipher-vendored-openssl" "kitsune_p2p_dht_arc/sqlite-encrypted") ("sqlite" "rusqlite" "rusqlite/bundled" "kitsune_p2p_dht_arc/sqlite") ("serialization" "holochain_serialized_bytes" "serde" "serde_bytes") ("holochain-wasmer" "holochain_wasmer_common") ("hashing" "futures" "must_future" "blake2b_simd" "serialization") ("full" "fixturators" "hashing" "encoding" "sqlite") ("fixturators" "fixt" "rand" "hashing" "encoding") ("encoding" "base64" "blake2b_simd" "derive_more") ("default" "serialization" "holochain-wasmer")))) (s 2) (e (quote (("fuzzing" "arbitrary" "proptest" "proptest-derive" "holochain_serialized_bytes?/fuzzing"))))))

