(define-module (crates-io ho ok hooks) #:use-module (crates-io))

(define-public crate-hooks-1.0.0-alpha.1 (c (n "hooks") (v "1.0.0-alpha.1") (h "0gc040aazl7lm3m9wq8j6gfm3jy9ps0rzbjw1ihcxb103h220z5n")))

(define-public crate-hooks-1.0.0-alpha.2 (c (n "hooks") (v "1.0.0-alpha.2") (d (list (d (n "hooks-derive") (r "^1.0.0-alpha.1") (d #t) (k 0)))) (h "0rqsi3ccy84jhxy71whgl05b7siqwfhz0a1ly9a3lcmpl5yjd874")))

(define-public crate-hooks-1.0.0-alpha.4 (c (n "hooks") (v "1.0.0-alpha.4") (d (list (d (n "futures-lite") (r "^1.12.0") (d #t) (k 2)) (d (n "hooks-core") (r "^1.0.0-alpha.1") (d #t) (k 0)) (d (n "hooks-derive") (r "^1.0.0-alpha.2") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("const_generics"))) (d #t) (k 0)))) (h "19iacbar4cdf5dhx0k90ywff9wgwnfs3ax4r62s4h9v5yb9z6077") (f (quote (("derive" "hooks-derive") ("default" "derive"))))))

(define-public crate-hooks-1.0.0-alpha.5 (c (n "hooks") (v "1.0.0-alpha.5") (d (list (d (n "futures-lite") (r "^1.12.0") (d #t) (k 2)) (d (n "hooks-core") (r "^1.0.0-alpha.1") (d #t) (k 0)) (d (n "hooks-derive") (r "^1.0.0-alpha.2") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("const_generics"))) (d #t) (k 0)))) (h "0k83sqfghlqr96rjjcgjln7kddg4cw2pbq9lakpcf214in5vl2v3") (f (quote (("derive" "hooks-derive") ("default" "derive"))))))

(define-public crate-hooks-1.0.0-alpha.6 (c (n "hooks") (v "1.0.0-alpha.6") (d (list (d (n "futures-lite") (r "^1.12.0") (d #t) (k 2)) (d (n "hooks-core") (r "^1.0.0-alpha.2") (d #t) (k 0)) (d (n "hooks-derive") (r "^1.0.0-alpha.2") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("const_generics"))) (d #t) (k 0)))) (h "0w9afhamdc13yb37c5mlkv7mil8v8q2dqrpfb5bqwgqs98c09ja3") (f (quote (("derive" "hooks-derive") ("default" "derive"))))))

(define-public crate-hooks-1.0.0-alpha.7 (c (n "hooks") (v "1.0.0-alpha.7") (d (list (d (n "futures-lite") (r "^1.12.0") (d #t) (k 2)) (d (n "hooks-core") (r "^1.0.0-alpha.3") (d #t) (k 0)) (d (n "hooks-derive") (r "^1.0.0-alpha.2") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("const_generics"))) (d #t) (k 0)))) (h "1wlhajnhzh3ln3nxgj0v0wlpn4ryzh69w009ss0cyx2ascf39k00") (f (quote (("derive" "hooks-derive") ("default" "derive"))))))

(define-public crate-hooks-1.0.0-alpha.8 (c (n "hooks") (v "1.0.0-alpha.8") (d (list (d (n "futures-lite") (r "^1.12.0") (d #t) (k 2)) (d (n "hooks-core") (r "^1.0.0-alpha.4") (k 0)) (d (n "hooks-derive") (r "^1.0.0-alpha.2") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("const_generics"))) (d #t) (k 0)))) (h "1675px8ix3s00032qlzx6rqdnrwm049q1kmh0wschk4lrgcdps5a") (f (quote (("futures-core" "hooks-core/futures-core") ("derive" "hooks-derive") ("default" "derive" "futures-core"))))))

(define-public crate-hooks-1.0.0-alpha.9 (c (n "hooks") (v "1.0.0-alpha.9") (d (list (d (n "futures-lite") (r "^1.12.0") (d #t) (k 2)) (d (n "hooks-core") (r "^1.0.0-alpha.5") (k 0)) (d (n "hooks-derive") (r "^1.0.0-alpha.2") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("const_generics"))) (d #t) (k 0)))) (h "1zfgkdzbzvfib19wl68zhy7f2dc02g9yv1y55yyghcw6z39lg0d8") (f (quote (("futures-core" "hooks-core/futures-core") ("derive" "hooks-derive") ("default" "derive" "futures-core"))))))

(define-public crate-hooks-1.0.0-alpha.10 (c (n "hooks") (v "1.0.0-alpha.10") (d (list (d (n "futures-lite") (r "^1.12.0") (d #t) (k 2)) (d (n "hooks-core") (r "^1.0.0-alpha.5") (k 0)) (d (n "hooks-derive") (r "^1.0.0-alpha.3") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("const_generics"))) (d #t) (k 0)))) (h "1w5m3h8aqqijm9iyv9ccawr28y7xhdk10jwfcfs1myw1aa4n7hcp") (f (quote (("futures-core" "hooks-core/futures-core") ("derive" "hooks-derive") ("default" "derive" "futures-core"))))))

(define-public crate-hooks-1.0.0-alpha.11 (c (n "hooks") (v "1.0.0-alpha.11") (d (list (d (n "futures-lite") (r "^1.12.0") (d #t) (k 2)) (d (n "hooks-core") (r "^1.0.0-alpha.5") (k 0)) (d (n "hooks-derive") (r "^1.0.0-alpha.3") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("const_generics"))) (d #t) (k 0)))) (h "0lxn8jn52qfwykjafdkm524h3lgrasbgdkxdymg6xq1mwdxxwygw") (f (quote (("futures-core" "hooks-core/futures-core") ("derive" "hooks-derive") ("default" "derive" "futures-core"))))))

(define-public crate-hooks-1.0.0-alpha.12 (c (n "hooks") (v "1.0.0-alpha.12") (d (list (d (n "futures-lite") (r "^1.12.0") (d #t) (k 2)) (d (n "hooks-core") (r "^1.0.0-alpha.5") (k 0)) (d (n "hooks-derive") (r "^1.0.0-alpha.3") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("const_generics"))) (d #t) (k 0)))) (h "0dyvffx94g3wjaxbsb9r25qr79wj4srnfbnfhnhbpwx9hm2wgkgr") (f (quote (("futures-core" "hooks-core/futures-core") ("derive" "hooks-derive") ("default" "derive" "futures-core"))))))

(define-public crate-hooks-1.0.0-alpha.13 (c (n "hooks") (v "1.0.0-alpha.13") (d (list (d (n "futures-lite") (r "^1.12.0") (d #t) (k 2)) (d (n "hooks-core") (r "^1.0.0-alpha.6") (k 0)) (d (n "hooks-derive") (r "^1.0.0-alpha.3") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("const_generics"))) (d #t) (k 0)))) (h "17z30zg1kjkkggny2j9d4wn4pi8vsp8qlwizr5nzz04ab2cq07pg") (f (quote (("futures-core" "hooks-core/futures-core") ("derive" "hooks-derive") ("default" "derive" "futures-core"))))))

(define-public crate-hooks-1.0.0-alpha.14 (c (n "hooks") (v "1.0.0-alpha.14") (d (list (d (n "futures-lite") (r "^1.12.0") (d #t) (k 2)) (d (n "hooks-core") (r "^1.0.0-alpha.6") (k 0)) (d (n "hooks-derive") (r "^1.0.0-alpha.4") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("const_generics"))) (d #t) (k 0)))) (h "1651drp2hciial3z422m6jdkqmg75l0r8r9cw3qvrb1bi73y0xhs") (f (quote (("futures-core" "hooks-core/futures-core") ("derive" "hooks-derive") ("default" "derive" "futures-core"))))))

(define-public crate-hooks-1.0.0-alpha.15 (c (n "hooks") (v "1.0.0-alpha.15") (d (list (d (n "futures-lite") (r "^1.12.0") (d #t) (k 2)) (d (n "hooks-core") (r "^1.0.0-alpha.7") (k 0)) (d (n "hooks-derive") (r "^1.0.0-alpha.4") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("const_generics"))) (d #t) (k 0)))) (h "1m5rk13vhxyrnd4sghici2lzwv0nzg0i6m4pfbfch36km83qlgb4") (f (quote (("futures-core" "hooks-core/futures-core") ("derive" "hooks-derive") ("default" "derive" "futures-core"))))))

(define-public crate-hooks-1.0.0-alpha.16 (c (n "hooks") (v "1.0.0-alpha.16") (d (list (d (n "futures-lite") (r "^1.12.0") (d #t) (k 2)) (d (n "hooks-core") (r "^1.0.0-alpha.7") (k 0)) (d (n "hooks-derive") (r "^1.0.0-alpha.4") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("const_generics"))) (d #t) (k 0)))) (h "1shbyiiw8vkgis15d6c413qz0b083ldpiqjx6xmzlhirk0nl01kz") (f (quote (("futures-core" "hooks-core/futures-core") ("derive" "hooks-derive") ("default" "derive" "futures-core"))))))

(define-public crate-hooks-1.0.0-alpha.17 (c (n "hooks") (v "1.0.0-alpha.17") (d (list (d (n "futures-lite") (r "^1.12.0") (d #t) (k 2)) (d (n "hooks-core") (r "^1.0.0-alpha.7") (k 0)) (d (n "hooks-derive") (r "^1.0.0-alpha.5") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("const_generics"))) (d #t) (k 0)))) (h "0shmp3p0v6jz70yj4z1gkm619sjqnffpxh473nvnrxy3aaq85vc9") (f (quote (("futures-core" "hooks-core/futures-core") ("derive" "hooks-derive") ("default" "derive" "futures-core"))))))

(define-public crate-hooks-1.0.0-alpha.18 (c (n "hooks") (v "1.0.0-alpha.18") (d (list (d (n "futures-lite") (r "^1.12.0") (d #t) (k 2)) (d (n "hooks-core") (r "^1.0.0-alpha.8") (k 0)) (d (n "hooks-derive") (r "^1.0.0-alpha.6") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("const_generics"))) (d #t) (k 0)))) (h "0ab1b0iac2csj5n5adhkpgj97z3yivkg85vhipg7d8f593a64p44") (f (quote (("futures-core" "hooks-core/futures-core") ("derive" "hooks-derive") ("default" "derive" "futures-core"))))))

(define-public crate-hooks-1.0.0-alpha.19 (c (n "hooks") (v "1.0.0-alpha.19") (d (list (d (n "futures-lite") (r "^1.12.0") (d #t) (k 2)) (d (n "hooks-core") (r "^1.0.0-alpha.9") (k 0)) (d (n "hooks-derive") (r "^1.0.0-alpha.6") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("const_generics"))) (d #t) (k 0)))) (h "0acj5gdj91f2b901az8kykiaabbhwrkq6v47j9jbjhzqxawyv8k2") (f (quote (("futures-core" "hooks-core/futures-core") ("derive" "hooks-derive") ("default" "derive" "futures-core"))))))

(define-public crate-hooks-1.0.0-alpha.20 (c (n "hooks") (v "1.0.0-alpha.20") (d (list (d (n "futures-lite") (r "^1.12.0") (d #t) (k 2)) (d (n "hooks-core") (r "^1.0.0-alpha.9") (k 0)) (d (n "hooks-derive") (r "^1.0.0-alpha.7") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("const_generics"))) (d #t) (k 0)))) (h "11rfrr63da0fpq3gcj7hk0nlyv8qs045jbakjmb61qj5wz5342a0") (f (quote (("futures-core" "hooks-core/futures-core") ("derive" "hooks-derive") ("default" "derive" "futures-core"))))))

(define-public crate-hooks-1.0.0-alpha.21 (c (n "hooks") (v "1.0.0-alpha.21") (d (list (d (n "futures-lite") (r "^1.12.0") (d #t) (k 2)) (d (n "hooks-core") (r "^1.0.0-alpha.10") (k 0)) (d (n "hooks-derive") (r "^1.0.0-alpha.8") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("const_generics"))) (d #t) (k 0)))) (h "0kxafnjrp8gpv9nd68d01dnq1rfwj6gbcslz75xcsx5ahmi303h0") (f (quote (("futures-core" "hooks-core/futures-core") ("derive" "hooks-derive") ("default" "derive" "futures-core"))))))

(define-public crate-hooks-1.0.1-alpha.21 (c (n "hooks") (v "1.0.1-alpha.21") (d (list (d (n "futures-lite") (r "^1.12.0") (d #t) (k 2)) (d (n "hooks-core") (r "^1.0.0-alpha.10") (k 0)) (d (n "hooks-derive") (r "^1.0.1-alpha.8") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("const_generics"))) (d #t) (k 0)))) (h "0k8ay2dc35pwpak96d1p7a5p17n6b04ylh490zk1lly7cgf8bnh0") (f (quote (("futures-core" "hooks-core/futures-core") ("derive" "hooks-derive") ("default" "derive" "futures-core"))))))

(define-public crate-hooks-2.0.0-alpha (c (n "hooks") (v "2.0.0-alpha") (d (list (d (n "futures-lite") (r "^1.12.0") (d #t) (k 2)) (d (n "hooks-core") (r "^2.0.0-alpha") (k 0)) (d (n "hooks-macro") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "lazy-pinned") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("const_generics"))) (o #t) (d #t) (k 0)))) (h "157pgd5yrzpkv7mxl1is3bd0707ijbnfc5driqayix484db6vz8c") (f (quote (("use_uninitialized_hook") ("use_state" "smallvec") ("use_shared_state" "use_shared_ref") ("use_shared_ref" "ShareValue") ("use_poll_next_update") ("use_mut") ("use_memo") ("use_lazy_pinned_hook" "lazy-pinned") ("use_lazy_pinned" "lazy-pinned" "use_default_pinned") ("use_effect") ("use_default_pinned") ("use_debug") ("proc-macro" "hooks-macro") ("futures-core" "hooks-core/futures-core") ("default" "futures-core" "all") ("all" "use_debug" "use_default_pinned" "use_effect" "use_lazy_pinned" "use_lazy_pinned_hook" "use_memo" "use_mut" "use_poll_next_update" "use_shared_ref" "use_shared_state" "use_state" "use_uninitialized_hook") ("ShareValue"))))))

(define-public crate-hooks-2.0.1-alpha (c (n "hooks") (v "2.0.1-alpha") (d (list (d (n "futures-lite") (r "^1.12.0") (d #t) (k 2)) (d (n "hooks-core") (r "^2.0.1-alpha") (k 0)) (d (n "hooks-macro") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "lazy-pinned") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("const_generics"))) (o #t) (d #t) (k 0)))) (h "065xibm34bi4wwblpnxnxa9hm9wnbbp0v7m5kdjf4cmafhi8x9fg") (f (quote (("use_uninitialized_hook") ("use_state" "smallvec") ("use_shared_state" "use_shared_ref") ("use_shared_ref" "ShareValue") ("use_poll_next_update") ("use_mut") ("use_memo") ("use_lazy_pinned_hook" "lazy-pinned") ("use_lazy_pinned" "lazy-pinned" "use_default_pinned") ("use_effect") ("use_default_pinned") ("use_debug") ("proc-macro" "hooks-macro") ("futures-core" "hooks-core/futures-core") ("default" "futures-core" "all") ("all" "use_debug" "use_default_pinned" "use_effect" "use_lazy_pinned" "use_lazy_pinned_hook" "use_memo" "use_mut" "use_poll_next_update" "use_shared_ref" "use_shared_state" "use_state" "use_uninitialized_hook") ("ShareValue"))))))

(define-public crate-hooks-2.0.2-alpha (c (n "hooks") (v "2.0.2-alpha") (d (list (d (n "futures-lite") (r "^1.12.0") (d #t) (k 2)) (d (n "hooks-core") (r "^2.1.0-alpha") (k 0)) (d (n "hooks-macro") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "lazy-pinned") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("const_generics"))) (o #t) (d #t) (k 0)))) (h "0xr4z0bwwf3aqpkczn9djan0cv705yvcc3zq6qp5ilxc6v8bjlla") (f (quote (("use_uninitialized_hook") ("use_state" "smallvec") ("use_shared_state" "use_shared_ref") ("use_shared_ref" "ShareValue") ("use_poll_next_update") ("use_mut") ("use_memo") ("use_lazy_pinned_hook" "lazy-pinned") ("use_lazy_pinned" "lazy-pinned" "use_default_pinned") ("use_effect") ("use_default_pinned") ("use_debug") ("proc-macro" "hooks-macro") ("futures-core" "hooks-core/futures-core") ("default" "futures-core" "all") ("all" "use_debug" "use_default_pinned" "use_effect" "use_lazy_pinned" "use_lazy_pinned_hook" "use_memo" "use_mut" "use_poll_next_update" "use_shared_ref" "use_shared_state" "use_state" "use_uninitialized_hook") ("ShareValue"))))))

(define-public crate-hooks-2.1.0-alpha (c (n "hooks") (v "2.1.0-alpha") (d (list (d (n "futures-lite") (r "^1.12.0") (d #t) (k 2)) (d (n "hooks-core") (r "^2.2.0-alpha") (k 0)) (d (n "hooks-macro") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("const_generics"))) (o #t) (d #t) (k 0)))) (h "04037nw61vl88rvr9qpf2ny0fzpli05jsbw7m9hwd9pssgl4j7bw") (f (quote (("use_uninitialized_hook") ("use_state" "smallvec") ("use_shared_state" "use_shared_ref") ("use_shared_ref" "ShareValue") ("use_poll_next_update") ("use_mut") ("use_memo") ("use_lazy_pinned_hook") ("use_lazy_pinned" "use_default_pinned") ("use_effect") ("use_default_pinned") ("use_debug") ("proc-macro" "hooks-macro") ("futures-core" "hooks-core/futures-core") ("default" "futures-core" "all") ("all" "use_debug" "use_default_pinned" "use_effect" "use_lazy_pinned" "use_lazy_pinned_hook" "use_memo" "use_mut" "use_poll_next_update" "use_shared_ref" "use_shared_state" "use_state" "use_uninitialized_hook") ("ShareValue"))))))

(define-public crate-hooks-2.1.1-alpha (c (n "hooks") (v "2.1.1-alpha") (d (list (d (n "futures-lite") (r "^1.12.0") (d #t) (k 2)) (d (n "hooks-core") (r "^2.2.0-alpha") (k 0)) (d (n "hooks-macro") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("const_generics"))) (o #t) (d #t) (k 0)))) (h "0gfik37ga0adlizkzlb3qhpbc47gj9x5b0wi9fnkblr33vznia00") (f (quote (("use_uninitialized_hook") ("use_state" "smallvec") ("use_shared_state" "use_shared_ref") ("use_shared_ref" "ShareValue") ("use_poll_next_update") ("use_mut") ("use_memo") ("use_lazy_pinned_hook") ("use_lazy_pinned" "use_default_pinned") ("use_effect") ("use_default_pinned") ("use_debug") ("proc-macro" "hooks-macro") ("futures-core" "hooks-core/futures-core") ("default" "futures-core" "all") ("all" "use_debug" "use_default_pinned" "use_effect" "use_lazy_pinned" "use_lazy_pinned_hook" "use_memo" "use_mut" "use_poll_next_update" "use_shared_ref" "use_shared_state" "use_state" "use_uninitialized_hook") ("ShareValue"))))))

(define-public crate-hooks-2.2.0-alpha (c (n "hooks") (v "2.2.0-alpha") (d (list (d (n "futures-lite") (r "^1.12.0") (d #t) (k 2)) (d (n "hooks-core") (r "^2.2.0-alpha") (k 0)) (d (n "hooks-macro") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("const_generics"))) (o #t) (d #t) (k 0)))) (h "1dfnsnp9k4mzavjf0kdhq8wy48353cp5zp1n686yf61agfji4668") (f (quote (("use_uninitialized_hook") ("use_state" "smallvec") ("use_shared_state" "use_shared_ref") ("use_shared_ref" "ShareValue") ("use_poll_next_update") ("use_mut") ("use_memo") ("use_lazy_pinned_hook") ("use_lazy_pinned" "use_default_pinned") ("use_effect") ("use_default_pinned") ("use_debug") ("proc-macro" "hooks-macro") ("futures-core" "hooks-core/futures-core") ("default" "futures-core" "all") ("all" "use_debug" "use_default_pinned" "use_effect" "use_lazy_pinned" "use_lazy_pinned_hook" "use_memo" "use_mut" "use_poll_next_update" "use_shared_ref" "use_shared_state" "use_state" "use_uninitialized_hook") ("ShareValue"))))))

(define-public crate-hooks-2.3.0-alpha (c (n "hooks") (v "2.3.0-alpha") (d (list (d (n "futures-lite") (r "^1.12.0") (d #t) (k 2)) (d (n "hooks-core") (r "^2.2.0-alpha") (k 0)) (d (n "hooks-macro") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("const_generics"))) (o #t) (d #t) (k 0)))) (h "0i0hnypskhj7l0ckb8mp6r9qn5bsgf24gn9r5r7pk2w2nlb6cvh8") (f (quote (("use_uninitialized_hook") ("use_state" "smallvec") ("use_shared_state" "use_shared_ref") ("use_shared_ref" "ShareValue") ("use_poll_next_update") ("use_mut") ("use_memo") ("use_lazy_pinned_hook") ("use_lazy_pinned" "use_default_pinned") ("use_effect") ("use_default_pinned") ("use_debug") ("proc-macro" "hooks-macro") ("futures-core" "hooks-core/futures-core") ("default" "futures-core" "all") ("all" "use_debug" "use_default_pinned" "use_effect" "use_lazy_pinned" "use_lazy_pinned_hook" "use_memo" "use_mut" "use_poll_next_update" "use_shared_ref" "use_shared_state" "use_state" "use_uninitialized_hook") ("ShareValue"))))))

(define-public crate-hooks-3.0.0-alpha (c (n "hooks") (v "3.0.0-alpha") (d (list (d (n "futures-lite") (r "^1.12.0") (d #t) (k 2)) (d (n "hooks-core") (r "^2.2.0-alpha") (k 0)) (d (n "hooks-macro") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("const_generics"))) (o #t) (d #t) (k 0)))) (h "1nzgx1hbz5jqx9dyzgmb262w7lga2sqyb6inqk0bj0dnfm6w29zg") (f (quote (("use_uninitialized_hook") ("use_state" "smallvec") ("use_shared_state" "use_shared_ref") ("use_shared_ref" "ShareValue") ("use_poll_next_update") ("use_mut") ("use_memo") ("use_lazy_pinned_hook") ("use_lazy_pinned" "use_default_pinned") ("use_effect") ("use_default_pinned") ("use_debug") ("proc-macro" "hooks-macro") ("futures-core" "hooks-core/futures-core") ("default" "futures-core" "all") ("all" "use_debug" "use_default_pinned" "use_effect" "use_lazy_pinned" "use_lazy_pinned_hook" "use_memo" "use_mut" "use_poll_next_update" "use_shared_ref" "use_shared_state" "use_state" "use_uninitialized_hook") ("ShareValue"))))))

(define-public crate-hooks-3.0.0-alpha.1 (c (n "hooks") (v "3.0.0-alpha.1") (d (list (d (n "futures-lite") (r "^1.12.0") (d #t) (k 2)) (d (n "hooks-core") (r "^2.2.0-alpha") (k 0)) (d (n "hooks-macro") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("const_generics"))) (o #t) (d #t) (k 0)))) (h "04yryb8v7adz75zhzffr52hrxxnnzkk1mxshkhk6gfzv9sw3gh7c") (f (quote (("use_uninitialized_hook") ("use_state" "smallvec") ("use_shared_state" "use_shared_ref") ("use_shared_ref" "ShareValue") ("use_poll_next_update") ("use_mut") ("use_memo") ("use_lazy_pinned_hook") ("use_lazy_pinned" "use_default_pinned") ("use_effect") ("use_default_pinned") ("use_debug") ("proc-macro" "hooks-macro") ("futures-core" "hooks-core/futures-core") ("default" "futures-core" "all") ("all" "use_debug" "use_default_pinned" "use_effect" "use_lazy_pinned" "use_lazy_pinned_hook" "use_memo" "use_mut" "use_poll_next_update" "use_shared_ref" "use_shared_state" "use_state" "use_uninitialized_hook") ("ShareValue"))))))

(define-public crate-hooks-3.0.0-alpha.2 (c (n "hooks") (v "3.0.0-alpha.2") (d (list (d (n "futures-lite") (r "^1.12.0") (d #t) (k 2)) (d (n "hooks-core") (r "^2.2.0-alpha") (k 0)) (d (n "hooks-macro") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("const_generics"))) (o #t) (d #t) (k 0)))) (h "1i6dps6vh6b2n0x671xmv948yagqssi8nzbi3kjbk16w0gmjm28j") (f (quote (("use_uninitialized_hook") ("use_state" "smallvec") ("use_shared_state" "ShareValue") ("use_shared_ref" "ShareValue") ("use_reused") ("use_poll_next_update") ("use_mut") ("use_memo") ("use_lazy_pinned_hook") ("use_lazy_pinned" "use_default_pinned") ("use_effect") ("use_default_pinned") ("use_debug") ("proc-macro" "hooks-macro") ("futures-core" "hooks-core/futures-core") ("default" "futures-core" "all") ("all" "use_debug" "use_default_pinned" "use_effect" "use_lazy_pinned" "use_lazy_pinned_hook" "use_memo" "use_mut" "use_poll_next_update" "use_reused" "use_shared_ref" "use_shared_state" "use_state" "use_uninitialized_hook") ("ShareValue"))))))

(define-public crate-hooks-3.0.0-alpha.3 (c (n "hooks") (v "3.0.0-alpha.3") (d (list (d (n "futures-lite") (r "^1.12.0") (d #t) (k 2)) (d (n "hooks-core") (r "^3.0.0-alpha.1") (k 0)) (d (n "hooks-macro") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("const_generics"))) (o #t) (d #t) (k 0)))) (h "0v9b9ki429v7zb1g8gz84c23zmqs4fswa17n9p01psmw10af7vnz") (f (quote (("use_uninitialized_hook") ("use_state" "smallvec") ("use_shared_state" "ShareValue") ("use_shared_ref" "ShareValue") ("use_reused") ("use_poll_next_update") ("use_mut") ("use_memo") ("use_lazy_pinned_hook") ("use_lazy_pinned" "use_default_pinned") ("use_effect") ("use_default_pinned") ("use_debug") ("proc-macro" "hooks-macro") ("futures-core" "hooks-core/futures-core") ("default" "futures-core" "all") ("all" "use_debug" "use_default_pinned" "use_effect" "use_lazy_pinned" "use_lazy_pinned_hook" "use_memo" "use_mut" "use_poll_next_update" "use_reused" "use_shared_ref" "use_shared_state" "use_state" "use_uninitialized_hook") ("ShareValue"))))))

(define-public crate-hooks-3.0.0-alpha.4 (c (n "hooks") (v "3.0.0-alpha.4") (d (list (d (n "futures-lite") (r "^1.12.0") (d #t) (k 2)) (d (n "hooks-core") (r "^3.0.0-alpha.1") (k 0)) (d (n "hooks-macro") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("const_generics"))) (o #t) (d #t) (k 0)))) (h "09wykxs6hiv37dq8dfy6c6saykqgfjcsj3vf1zanzbngkz0p8kk0") (f (quote (("use_uninitialized_hook") ("use_state" "smallvec") ("use_shared_state" "ShareValue") ("use_shared_ref" "ShareValue") ("use_reused") ("use_poll_next_update") ("use_mut") ("use_memo") ("use_lazy_pinned_hook") ("use_lazy_pinned" "use_default_pinned") ("use_effect") ("use_default_pinned") ("use_debug") ("proc-macro" "hooks-macro") ("futures-core" "hooks-core/futures-core") ("default" "futures-core" "all") ("all" "use_debug" "use_default_pinned" "use_effect" "use_lazy_pinned" "use_lazy_pinned_hook" "use_memo" "use_mut" "use_poll_next_update" "use_reused" "use_shared_ref" "use_shared_state" "use_state" "use_uninitialized_hook") ("ShareValue"))))))

