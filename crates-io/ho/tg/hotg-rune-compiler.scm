(define-module (crates-io ho tg hotg-rune-compiler) #:use-module (crates-io))

(define-public crate-hotg-rune-compiler-0.8.0 (c (n "hotg-rune-compiler") (v "0.8.0") (d (list (d (n "atomic_refcell") (r "^0.1.7") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.10.0") (d #t) (k 0)) (d (n "codespan") (r "^0.11.0") (f (quote ("serialization"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "heck") (r "^0.3.3") (d #t) (k 0)) (d (n "hotg-rune-core") (r "^0.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "legion") (r "^0.4.0") (f (quote ("serialize" "codegen" "extended-tuple-impls"))) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0.29") (d #t) (k 0)) (d (n "quote") (r "^1.0.9") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.17") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)))) (h "0dws47hmksiq84vkrpvnw90mrvlrl1rl5nibmafb5nrnh3w9s5xm")))

(define-public crate-hotg-rune-compiler-0.9.0 (c (n "hotg-rune-compiler") (v "0.9.0") (d (list (d (n "atomic_refcell") (r "^0.1.7") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.10.0") (d #t) (k 0)) (d (n "codespan") (r "^0.11.0") (f (quote ("serialization"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "heck") (r "^0.3.3") (d #t) (k 0)) (d (n "hotg-rune-core") (r "^0.9.0") (d #t) (k 0)) (d (n "hotg-rune-proc-blocks") (r "^0.9.0") (k 0)) (d (n "indexmap") (r "^1.6.2") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "jsonschema") (r "^0.12.1") (k 2)) (d (n "legion") (r "^0.4.0") (f (quote ("serialize" "codegen" "extended-tuple-impls"))) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0.29") (d #t) (k 0)) (d (n "quote") (r "^1.0.9") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.6") (f (quote ("indexmap"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.17") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)))) (h "11g8fzsdc64n0p2qvpxawi8qihi8fw4rzgfa2pq4nlszmixafzqx")))

(define-public crate-hotg-rune-compiler-0.9.2 (c (n "hotg-rune-compiler") (v "0.9.2") (d (list (d (n "atomic_refcell") (r "^0.1.7") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.10.0") (d #t) (k 0)) (d (n "codespan") (r "^0.11.0") (f (quote ("serialization"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "heck") (r "^0.3.3") (d #t) (k 0)) (d (n "hotg-rune-core") (r "^0.9.0") (d #t) (k 0)) (d (n "hotg-rune-proc-blocks") (r "^0.9.0") (k 0)) (d (n "indexmap") (r "^1.6.2") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "jsonschema") (r "^0.12.1") (k 2)) (d (n "legion") (r "^0.4.0") (f (quote ("serialize" "codegen" "extended-tuple-impls"))) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0.29") (d #t) (k 0)) (d (n "quote") (r "^1.0.9") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.6") (f (quote ("indexmap"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.17") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)))) (h "1rl3p3da56qfhy6fay8kz47vhxnx629yk8khdl71ay00hwpgvw49")))

(define-public crate-hotg-rune-compiler-0.9.3 (c (n "hotg-rune-compiler") (v "0.9.3") (d (list (d (n "atomic_refcell") (r "^0.1.7") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.10.0") (d #t) (k 0)) (d (n "codespan") (r "^0.11.0") (f (quote ("serialization"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "heck") (r "^0.3.3") (d #t) (k 0)) (d (n "hotg-rune-core") (r "^0.9.2") (d #t) (k 0)) (d (n "hotg-rune-proc-blocks") (r "^0.9.2") (k 0)) (d (n "indexmap") (r "^1.6.2") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "indoc") (r "^1") (d #t) (k 0)) (d (n "jsonschema") (r "^0.12.1") (k 2)) (d (n "legion") (r "^0.4.0") (f (quote ("serialize" "codegen" "extended-tuple-impls"))) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0.29") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "schemars") (r "^0.8.6") (f (quote ("indexmap"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.17") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)))) (h "0szs1ly6sdrqh7iqhqpgfb7h56kch2znlsyhxlpchyg1xlh6byx0")))

(define-public crate-hotg-rune-compiler-0.10.0 (c (n "hotg-rune-compiler") (v "0.10.0") (d (list (d (n "atomic_refcell") (r "^0.1.7") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.10.0") (d #t) (k 0)) (d (n "codespan") (r "^0.11.0") (f (quote ("serialization"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "heck") (r "^0.3.3") (d #t) (k 0)) (d (n "hotg-rune-core") (r "^0.10.0") (d #t) (k 0)) (d (n "hotg-rune-proc-blocks") (r "^0.10.0") (k 0)) (d (n "indexmap") (r "^1.6.2") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "indoc") (r "^1") (d #t) (k 0)) (d (n "jsonschema") (r "^0.12.1") (k 2)) (d (n "legion") (r "^0.4.0") (f (quote ("serialize" "codegen" "extended-tuple-impls"))) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0.29") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "schemars") (r "^0.8.6") (f (quote ("indexmap"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.17") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)))) (h "1pz54s185pxix8985pns25lv63dyhllcfv8vzridbj2cpjqg8izd")))

(define-public crate-hotg-rune-compiler-0.9.4 (c (n "hotg-rune-compiler") (v "0.9.4") (d (list (d (n "atomic_refcell") (r "^0.1.7") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.10.0") (d #t) (k 0)) (d (n "codespan") (r "^0.11.0") (f (quote ("serialization"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "heck") (r "^0.3.3") (d #t) (k 0)) (d (n "hotg-rune-core") (r "^0.9.2") (d #t) (k 0)) (d (n "hotg-rune-proc-blocks") (r "^0.9.2") (k 0)) (d (n "indexmap") (r "^1.6.2") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "indoc") (r "^1") (d #t) (k 0)) (d (n "jsonschema") (r "^0.12.1") (k 2)) (d (n "legion") (r "^0.4.0") (f (quote ("serialize" "codegen" "extended-tuple-impls"))) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0.29") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "schemars") (r "^0.8.6") (f (quote ("indexmap"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.17") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)))) (h "1dyhyfc7h4ydc8f4q46gf20zpgwzvlnnysmsz3ff1m9kmy12s9ik")))

(define-public crate-hotg-rune-compiler-0.11.0 (c (n "hotg-rune-compiler") (v "0.11.0") (d (list (d (n "atomic_refcell") (r "^0.1.8") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.10.3") (d #t) (k 0)) (d (n "codespan") (r "^0.11.1") (f (quote ("serialization"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "heck") (r "^0.4.0") (d #t) (k 0)) (d (n "hotg-rune-core") (r "^0.11.0") (d #t) (k 0)) (d (n "hotg-rune-proc-blocks") (r "^0.11.0") (k 0)) (d (n "indexmap") (r "^1.8.0") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "indoc") (r "^1.0.3") (d #t) (k 0)) (d (n "jsonschema") (r "^0.13.3") (k 2)) (d (n "legion") (r "^0.4.0") (f (quote ("serialize" "codegen" "extended-tuple-impls"))) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0.36") (d #t) (k 0)) (d (n "quote") (r "^1.0.14") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (f (quote ("indexmap"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.74") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.23") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "zip") (r "^0.5.13") (d #t) (k 0)))) (h "0ddg9p3scaaswiakqwgzs9pmd41axaq24m1m475d4jkkx4a50rdk")))

(define-public crate-hotg-rune-compiler-0.11.2 (c (n "hotg-rune-compiler") (v "0.11.2") (d (list (d (n "atomic_refcell") (r "^0.1.8") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.10.3") (d #t) (k 0)) (d (n "codespan") (r "^0.11.1") (f (quote ("serialization"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "heck") (r "^0.4.0") (d #t) (k 0)) (d (n "hotg-rune-core") (r "^0.11.0") (d #t) (k 0)) (d (n "hotg-rune-proc-blocks") (r "^0.11.0") (k 0)) (d (n "indexmap") (r "^1.8.0") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "indoc") (r "^1.0.3") (d #t) (k 0)) (d (n "jsonschema") (r "^0.13.3") (k 2)) (d (n "legion") (r "^0.4.0") (f (quote ("serialize" "codegen" "extended-tuple-impls"))) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0.36") (d #t) (k 0)) (d (n "quote") (r "^1.0.14") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (f (quote ("indexmap"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.74") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.23") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "zip") (r "^0.5.13") (d #t) (k 0)))) (h "09q7mfvn9m7fja5hpayvghj1gxp1fcal5rkc8616p3s3md5ja2s2")))

(define-public crate-hotg-rune-compiler-0.11.3 (c (n "hotg-rune-compiler") (v "0.11.3") (d (list (d (n "atomic_refcell") (r "^0.1.8") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.10.3") (d #t) (k 0)) (d (n "codespan") (r "^0.11.1") (f (quote ("serialization"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "heck") (r "^0.4.0") (d #t) (k 0)) (d (n "hotg-rune-core") (r "^0.11.0") (d #t) (k 0)) (d (n "hotg-rune-proc-blocks") (r "^0.11.0") (k 0)) (d (n "indexmap") (r "^1.8.0") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "indoc") (r "^1.0.3") (d #t) (k 0)) (d (n "jsonschema") (r "^0.13.3") (k 2)) (d (n "legion") (r "^0.4.0") (f (quote ("serialize" "codegen" "extended-tuple-impls"))) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0.36") (d #t) (k 0)) (d (n "quote") (r "^1.0.14") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (f (quote ("indexmap"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.74") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.23") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "zip") (r "^0.5.13") (d #t) (k 0)))) (h "1nf49p0ikln9z7jklygmf7hkcpqljf58qx062ifiy0m94m8y7gnv")))

