(define-module (crates-io ho rn hornvale) #:use-module (crates-io))

(define-public crate-hornvale-0.1.1 (c (n "hornvale") (v "0.1.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 0)) (d (n "bevy") (r "^0.6.1") (d #t) (k 2)) (d (n "bevy_egui") (r "^0.12") (d #t) (k 2)) (d (n "bevy_fly_camera") (r "^0.8.0") (d #t) (k 2)) (d (n "bevy_pancam") (r "^0.2") (d #t) (k 2)) (d (n "bevy_prototype_lyon") (r "^0.4.0") (d #t) (k 2)) (d (n "bitfield") (r "^0.14.0") (d #t) (k 0)) (d (n "cpu-time") (r "^1.0.0") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "function_name") (r "^0.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("max_level_trace" "release_max_level_warn"))) (d #t) (k 0)) (d (n "plotters") (r "^0.3.4") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 2)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "test-generator") (r "^0.3.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0s676194y7ziamnxli9b056fzhlf5xs970j05w6y7mhsk8ki3k2v")))

