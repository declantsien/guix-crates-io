(define-module (crates-io ho me homestar-workspace-hack) #:use-module (crates-io))

(define-public crate-homestar-workspace-hack-0.1.0 (c (n "homestar-workspace-hack") (v "0.1.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("no-rng" "std"))) (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("no-rng" "std"))) (k 1)) (d (n "anyhow") (r "^1") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "anyhow") (r "^1") (f (quote ("backtrace"))) (d #t) (k 1)) (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (d #t) (k 1)) (d (n "base64") (r "^0.13") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "base64") (r "^0.13") (f (quote ("alloc"))) (d #t) (k 1)) (d (n "bitflags") (r "^2") (f (quote ("std"))) (k 0)) (d (n "bitflags") (r "^2") (f (quote ("std"))) (k 1)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 1)) (d (n "cc") (r "^1") (f (quote ("parallel"))) (k 1)) (d (n "clap") (r "^4") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "env"))) (d #t) (k 1)) (d (n "clap_builder") (r "^4") (f (quote ("color" "env" "help" "std" "suggestions" "usage"))) (k 0)) (d (n "clap_builder") (r "^4") (f (quote ("color" "env" "help" "std" "suggestions" "usage"))) (k 1)) (d (n "crossbeam-epoch") (r "^0.9") (d #t) (k 0)) (d (n "crossbeam-epoch") (r "^0.9") (d #t) (k 1)) (d (n "crunchy") (r "^0.2") (f (quote ("std"))) (d #t) (k 0)) (d (n "crunchy") (r "^0.2") (f (quote ("std"))) (d #t) (k 1)) (d (n "crypto-common") (r "^0.1") (f (quote ("std"))) (k 0)) (d (n "crypto-common") (r "^0.1") (f (quote ("getrandom"))) (t "wasm32-unknown-unknown") (k 0)) (d (n "crypto-common") (r "^0.1") (f (quote ("getrandom"))) (t "wasm32-wasi") (k 0)) (d (n "crypto-common") (r "^0.1") (f (quote ("std"))) (k 1)) (d (n "crypto-common") (r "^0.1") (f (quote ("getrandom"))) (t "wasm32-unknown-unknown") (k 1)) (d (n "crypto-common") (r "^0.1") (f (quote ("getrandom"))) (t "wasm32-wasi") (k 1)) (d (n "data-encoding") (r "^2") (d #t) (k 0)) (d (n "data-encoding") (r "^2") (d #t) (k 1)) (d (n "diesel") (r "^2") (f (quote ("chrono" "r2d2" "returning_clauses_for_sqlite_3_35" "sqlite" "with-deprecated"))) (k 0)) (d (n "diesel") (r "^2") (f (quote ("chrono" "r2d2" "returning_clauses_for_sqlite_3_35" "sqlite" "with-deprecated"))) (k 1)) (d (n "diesel_derives") (r "^2") (f (quote ("chrono" "r2d2" "sqlite" "with-deprecated"))) (d #t) (k 1)) (d (n "digest-274715c4dabd11b0") (r "^0.9") (f (quote ("std"))) (k 0) (p "digest")) (d (n "digest-274715c4dabd11b0") (r "^0.9") (f (quote ("std"))) (k 1) (p "digest")) (d (n "digest-93f6ce9d446188ac") (r "^0.10") (f (quote ("mac" "std"))) (d #t) (k 0) (p "digest")) (d (n "digest-93f6ce9d446188ac") (r "^0.10") (f (quote ("mac" "std"))) (d #t) (k 1) (p "digest")) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 1)) (d (n "futures") (r "^0.3") (f (quote ("bilock" "thread-pool" "unstable"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("bilock" "thread-pool" "unstable"))) (d #t) (k 1)) (d (n "futures-channel") (r "^0.3") (f (quote ("sink" "unstable"))) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3") (f (quote ("sink" "unstable"))) (d #t) (k 1)) (d (n "futures-core") (r "^0.3") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (f (quote ("unstable"))) (d #t) (k 1)) (d (n "futures-executor") (r "^0.3") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("thread-pool"))) (d #t) (k 1)) (d (n "futures-io") (r "^0.3") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "futures-io") (r "^0.3") (f (quote ("unstable"))) (d #t) (k 1)) (d (n "futures-sink") (r "^0.3") (d #t) (k 0)) (d (n "futures-sink") (r "^0.3") (d #t) (k 1)) (d (n "futures-task") (r "^0.3") (f (quote ("std" "unstable"))) (k 0)) (d (n "futures-task") (r "^0.3") (f (quote ("std" "unstable"))) (k 1)) (d (n "futures-timer") (r "^3") (f (quote ("wasm-bindgen"))) (k 0)) (d (n "futures-timer") (r "^3") (f (quote ("wasm-bindgen"))) (k 1)) (d (n "futures-util") (r "^0.3") (f (quote ("bilock" "channel" "io" "sink" "unstable"))) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("bilock" "channel" "io" "sink" "unstable"))) (d #t) (k 1)) (d (n "generic-array") (r "^0.14") (f (quote ("more_lengths"))) (k 0)) (d (n "generic-array") (r "^0.14") (f (quote ("more_lengths"))) (k 1)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "rdrand" "std"))) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "rdrand" "std"))) (k 1)) (d (n "gimli") (r "^0.28") (f (quote ("read" "std" "write"))) (t "aarch64-apple-darwin") (k 0)) (d (n "gimli") (r "^0.28") (f (quote ("read" "std" "write"))) (t "aarch64-unknown-linux-musl") (k 0)) (d (n "gimli") (r "^0.28") (f (quote ("read" "std" "write"))) (t "wasm32-unknown-unknown") (k 0)) (d (n "gimli") (r "^0.28") (f (quote ("read" "std" "write"))) (t "wasm32-wasi") (k 0)) (d (n "gimli") (r "^0.28") (f (quote ("read" "std" "write"))) (t "x86_64-apple-darwin") (k 0)) (d (n "gimli") (r "^0.28") (f (quote ("read" "std" "write"))) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "gimli") (r "^0.28") (f (quote ("read" "std" "write"))) (t "x86_64-unknown-linux-musl") (k 0)) (d (n "gimli") (r "^0.28") (f (quote ("read" "std" "write"))) (t "aarch64-apple-darwin") (k 1)) (d (n "gimli") (r "^0.28") (f (quote ("read" "std" "write"))) (t "aarch64-unknown-linux-musl") (k 1)) (d (n "gimli") (r "^0.28") (f (quote ("read" "std" "write"))) (t "wasm32-unknown-unknown") (k 1)) (d (n "gimli") (r "^0.28") (f (quote ("read" "std" "write"))) (t "wasm32-wasi") (k 1)) (d (n "gimli") (r "^0.28") (f (quote ("read" "std" "write"))) (t "x86_64-apple-darwin") (k 1)) (d (n "gimli") (r "^0.28") (f (quote ("read" "std" "write"))) (t "x86_64-unknown-linux-gnu") (k 1)) (d (n "gimli") (r "^0.28") (f (quote ("read" "std" "write"))) (t "x86_64-unknown-linux-musl") (k 1)) (d (n "half") (r "^2") (d #t) (k 0)) (d (n "half") (r "^2") (d #t) (k 1)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw"))) (d #t) (k 1)) (d (n "heck") (r "^0.4") (f (quote ("unicode"))) (d #t) (k 0)) (d (n "heck") (r "^0.4") (f (quote ("unicode"))) (d #t) (k 1)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 1)) (d (n "iana-time-zone") (r "^0.1") (f (quote ("fallback"))) (t "aarch64-apple-darwin") (k 0)) (d (n "iana-time-zone") (r "^0.1") (f (quote ("fallback"))) (t "aarch64-unknown-linux-musl") (k 0)) (d (n "iana-time-zone") (r "^0.1") (f (quote ("fallback"))) (t "x86_64-apple-darwin") (k 0)) (d (n "iana-time-zone") (r "^0.1") (f (quote ("fallback"))) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "iana-time-zone") (r "^0.1") (f (quote ("fallback"))) (t "x86_64-unknown-linux-musl") (k 0)) (d (n "iana-time-zone") (r "^0.1") (f (quote ("fallback"))) (t "aarch64-apple-darwin") (k 1)) (d (n "iana-time-zone") (r "^0.1") (f (quote ("fallback"))) (t "aarch64-unknown-linux-musl") (k 1)) (d (n "iana-time-zone") (r "^0.1") (f (quote ("fallback"))) (t "x86_64-apple-darwin") (k 1)) (d (n "iana-time-zone") (r "^0.1") (f (quote ("fallback"))) (t "x86_64-unknown-linux-gnu") (k 1)) (d (n "iana-time-zone") (r "^0.1") (f (quote ("fallback"))) (t "x86_64-unknown-linux-musl") (k 1)) (d (n "image") (r "^0.24") (f (quote ("jpeg" "openexr" "png"))) (k 0)) (d (n "image") (r "^0.24") (f (quote ("jpeg" "openexr" "png"))) (k 1)) (d (n "indexmap-dff4ba8e3ae991db") (r "^1") (f (quote ("serde"))) (k 0) (p "indexmap")) (d (n "indexmap-dff4ba8e3ae991db") (r "^1") (f (quote ("serde"))) (k 1) (p "indexmap")) (d (n "indexmap-f595c2ba2a3f28df") (r "^2") (f (quote ("serde"))) (d #t) (k 0) (p "indexmap")) (d (n "indexmap-f595c2ba2a3f28df") (r "^2") (f (quote ("serde"))) (d #t) (k 1) (p "indexmap")) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "itertools") (r "^0.11") (d #t) (k 1)) (d (n "jsonrpsee") (r "^0.21") (f (quote ("client" "server"))) (k 0)) (d (n "jsonrpsee") (r "^0.21") (f (quote ("client" "server"))) (k 1)) (d (n "jsonrpsee-core") (r "^0.21") (f (quote ("async-client" "async-wasm-client" "http-helpers" "server"))) (d #t) (k 0)) (d (n "jsonrpsee-core") (r "^0.21") (f (quote ("async-client" "async-wasm-client" "http-helpers" "server"))) (d #t) (k 1)) (d (n "libc") (r "^0.2") (f (quote ("extra_traits"))) (d #t) (k 0)) (d (n "libc") (r "^0.2") (f (quote ("extra_traits"))) (d #t) (k 1)) (d (n "libsecp256k1-core") (r "^0.3") (d #t) (k 0)) (d (n "libsecp256k1-core") (r "^0.3") (d #t) (k 1)) (d (n "libsqlite3-sys") (r "^0.27") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "libsqlite3-sys") (r "^0.27") (f (quote ("bundled"))) (d #t) (k 1)) (d (n "linux-raw-sys") (r "^0.4") (f (quote ("elf" "errno" "general" "if_ether" "ioctl" "net" "netlink" "no_std" "prctl" "xdp"))) (t "aarch64-unknown-linux-musl") (k 0)) (d (n "linux-raw-sys") (r "^0.4") (f (quote ("elf" "errno" "general" "if_ether" "ioctl" "net" "netlink" "no_std" "prctl" "xdp"))) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "linux-raw-sys") (r "^0.4") (f (quote ("elf" "errno" "general" "if_ether" "ioctl" "net" "netlink" "no_std" "prctl" "xdp"))) (t "x86_64-unknown-linux-musl") (k 0)) (d (n "linux-raw-sys") (r "^0.4") (f (quote ("elf" "errno" "general" "if_ether" "ioctl" "net" "netlink" "no_std" "prctl" "xdp"))) (t "aarch64-unknown-linux-musl") (k 1)) (d (n "linux-raw-sys") (r "^0.4") (f (quote ("elf" "errno" "general" "if_ether" "ioctl" "net" "netlink" "no_std" "prctl" "xdp"))) (t "x86_64-unknown-linux-gnu") (k 1)) (d (n "linux-raw-sys") (r "^0.4") (f (quote ("elf" "errno" "general" "if_ether" "ioctl" "net" "netlink" "no_std" "prctl" "xdp"))) (t "x86_64-unknown-linux-musl") (k 1)) (d (n "miette") (r "^5") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "miette") (r "^5") (f (quote ("fancy"))) (d #t) (k 1)) (d (n "miniz_oxide") (r "^0.7") (f (quote ("simd"))) (d #t) (k 0)) (d (n "miniz_oxide") (r "^0.7") (f (quote ("simd"))) (d #t) (k 1)) (d (n "multibase") (r "^0.9") (d #t) (k 0)) (d (n "multibase") (r "^0.9") (d #t) (k 1)) (d (n "num-traits") (r "^0.2") (f (quote ("i128" "libm"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128" "libm"))) (d #t) (k 1)) (d (n "object") (r "^0.32") (f (quote ("archive" "read_core" "unaligned" "write"))) (t "aarch64-apple-darwin") (k 0)) (d (n "object") (r "^0.32") (f (quote ("archive" "read_core" "unaligned" "write"))) (t "aarch64-unknown-linux-musl") (k 0)) (d (n "object") (r "^0.32") (f (quote ("archive" "read_core" "unaligned" "write"))) (t "wasm32-unknown-unknown") (k 0)) (d (n "object") (r "^0.32") (f (quote ("archive" "read_core" "unaligned" "write"))) (t "wasm32-wasi") (k 0)) (d (n "object") (r "^0.32") (f (quote ("archive" "read_core" "unaligned" "write"))) (t "x86_64-apple-darwin") (k 0)) (d (n "object") (r "^0.32") (f (quote ("archive" "read_core" "unaligned" "write"))) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "object") (r "^0.32") (f (quote ("archive" "read_core" "unaligned" "write"))) (t "x86_64-unknown-linux-musl") (k 0)) (d (n "object") (r "^0.32") (f (quote ("archive" "read_core" "unaligned" "write"))) (t "aarch64-apple-darwin") (k 1)) (d (n "object") (r "^0.32") (f (quote ("archive" "read_core" "unaligned" "write"))) (t "aarch64-unknown-linux-musl") (k 1)) (d (n "object") (r "^0.32") (f (quote ("archive" "read_core" "unaligned" "write"))) (t "wasm32-unknown-unknown") (k 1)) (d (n "object") (r "^0.32") (f (quote ("archive" "read_core" "unaligned" "write"))) (t "wasm32-wasi") (k 1)) (d (n "object") (r "^0.32") (f (quote ("archive" "read_core" "unaligned" "write"))) (t "x86_64-apple-darwin") (k 1)) (d (n "object") (r "^0.32") (f (quote ("archive" "read_core" "unaligned" "write"))) (t "x86_64-unknown-linux-gnu") (k 1)) (d (n "object") (r "^0.32") (f (quote ("archive" "read_core" "unaligned" "write"))) (t "x86_64-unknown-linux-musl") (k 1)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 1)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 1)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 1)) (d (n "regex-automata") (r "^0.4") (f (quote ("dfa-onepass" "dfa-search" "hybrid" "meta" "nfa-backtrack" "perf-inline" "perf-literal" "unicode"))) (k 0)) (d (n "regex-automata") (r "^0.4") (f (quote ("dfa-onepass" "dfa-search" "hybrid" "meta" "nfa-backtrack" "perf-inline" "perf-literal" "unicode"))) (k 1)) (d (n "regex-syntax") (r "^0.8") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8") (d #t) (k 1)) (d (n "retry") (r "^2") (d #t) (k 0)) (d (n "retry") (r "^2") (d #t) (k 1)) (d (n "ring") (r "^0.17") (f (quote ("std"))) (d #t) (t "aarch64-apple-darwin") (k 0)) (d (n "ring") (r "^0.17") (f (quote ("std"))) (d #t) (t "aarch64-unknown-linux-musl") (k 0)) (d (n "ring") (r "^0.17") (f (quote ("std"))) (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "ring") (r "^0.17") (f (quote ("std"))) (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "ring") (r "^0.17") (f (quote ("std"))) (d #t) (t "x86_64-unknown-linux-musl") (k 0)) (d (n "ring") (r "^0.17") (f (quote ("std"))) (d #t) (t "aarch64-apple-darwin") (k 1)) (d (n "ring") (r "^0.17") (f (quote ("std"))) (d #t) (t "aarch64-unknown-linux-musl") (k 1)) (d (n "ring") (r "^0.17") (f (quote ("std"))) (d #t) (t "x86_64-apple-darwin") (k 1)) (d (n "ring") (r "^0.17") (f (quote ("std"))) (d #t) (t "x86_64-unknown-linux-gnu") (k 1)) (d (n "ring") (r "^0.17") (f (quote ("std"))) (d #t) (t "x86_64-unknown-linux-musl") (k 1)) (d (n "rustc-hash") (r "^1") (d #t) (k 0)) (d (n "rustc-hash") (r "^1") (d #t) (k 1)) (d (n "rustix") (r "^0.38") (f (quote ("event" "mm" "net" "param" "process" "procfs" "termios" "time"))) (d #t) (t "aarch64-apple-darwin") (k 0)) (d (n "rustix") (r "^0.38") (f (quote ("event" "mm" "net" "param" "process" "procfs" "termios" "thread" "time"))) (d #t) (t "aarch64-unknown-linux-musl") (k 0)) (d (n "rustix") (r "^0.38") (f (quote ("net" "process" "procfs" "termios" "time"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "rustix") (r "^0.38") (f (quote ("net" "process" "procfs" "termios" "time"))) (d #t) (t "wasm32-wasi") (k 0)) (d (n "rustix") (r "^0.38") (f (quote ("event" "mm" "net" "param" "process" "procfs" "termios" "time"))) (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "rustix") (r "^0.38") (f (quote ("event" "mm" "net" "param" "process" "procfs" "termios" "thread" "time"))) (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "rustix") (r "^0.38") (f (quote ("event" "mm" "net" "param" "process" "procfs" "termios" "thread" "time"))) (d #t) (t "x86_64-unknown-linux-musl") (k 0)) (d (n "rustix") (r "^0.38") (f (quote ("event" "mm" "net" "param" "process" "procfs" "termios" "time"))) (d #t) (t "aarch64-apple-darwin") (k 1)) (d (n "rustix") (r "^0.38") (f (quote ("event" "mm" "net" "param" "process" "procfs" "termios" "thread" "time"))) (d #t) (t "aarch64-unknown-linux-musl") (k 1)) (d (n "rustix") (r "^0.38") (f (quote ("net" "process" "procfs" "termios" "time"))) (d #t) (t "wasm32-unknown-unknown") (k 1)) (d (n "rustix") (r "^0.38") (f (quote ("net" "process" "procfs" "termios" "time"))) (d #t) (t "wasm32-wasi") (k 1)) (d (n "rustix") (r "^0.38") (f (quote ("event" "mm" "net" "param" "process" "procfs" "termios" "time"))) (d #t) (t "x86_64-apple-darwin") (k 1)) (d (n "rustix") (r "^0.38") (f (quote ("event" "mm" "net" "param" "process" "procfs" "termios" "thread" "time"))) (d #t) (t "x86_64-unknown-linux-gnu") (k 1)) (d (n "rustix") (r "^0.38") (f (quote ("event" "mm" "net" "param" "process" "procfs" "termios" "thread" "time"))) (d #t) (t "x86_64-unknown-linux-musl") (k 1)) (d (n "scopeguard") (r "^1") (d #t) (k 0)) (d (n "scopeguard") (r "^1") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("alloc" "derive" "rc"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("alloc" "derive" "rc"))) (d #t) (k 1)) (d (n "serde_json") (r "^1") (f (quote ("alloc" "float_roundtrip" "raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc" "float_roundtrip" "raw_value"))) (d #t) (k 1)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 1)) (d (n "signature") (r "^2") (f (quote ("std"))) (k 0)) (d (n "signature") (r "^2") (f (quote ("std"))) (k 1)) (d (n "smallvec") (r "^1") (f (quote ("union"))) (k 0)) (d (n "smallvec") (r "^1") (f (quote ("union"))) (k 1)) (d (n "subtle") (r "^2") (d #t) (t "aarch64-apple-darwin") (k 0)) (d (n "subtle") (r "^2") (d #t) (t "aarch64-unknown-linux-musl") (k 0)) (d (n "subtle") (r "^2") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "subtle") (r "^2") (d #t) (t "wasm32-wasi") (k 0)) (d (n "subtle") (r "^2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "subtle") (r "^2") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "subtle") (r "^2") (d #t) (t "x86_64-unknown-linux-musl") (k 0)) (d (n "subtle") (r "^2") (d #t) (t "aarch64-apple-darwin") (k 1)) (d (n "subtle") (r "^2") (d #t) (t "aarch64-unknown-linux-musl") (k 1)) (d (n "subtle") (r "^2") (d #t) (t "wasm32-unknown-unknown") (k 1)) (d (n "subtle") (r "^2") (d #t) (t "wasm32-wasi") (k 1)) (d (n "subtle") (r "^2") (d #t) (t "x86_64-apple-darwin") (k 1)) (d (n "subtle") (r "^2") (d #t) (t "x86_64-unknown-linux-gnu") (k 1)) (d (n "subtle") (r "^2") (d #t) (t "x86_64-unknown-linux-musl") (k 1)) (d (n "syn-dff4ba8e3ae991db") (r "^1") (f (quote ("extra-traits" "full" "visit"))) (d #t) (k 1) (p "syn")) (d (n "syn-f595c2ba2a3f28df") (r "^2") (f (quote ("extra-traits" "fold" "full" "visit" "visit-mut"))) (d #t) (k 1) (p "syn")) (d (n "time") (r "^0.3") (f (quote ("formatting" "macros" "parsing"))) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "macros" "parsing"))) (d #t) (k 1)) (d (n "tokio") (r "^1") (f (quote ("fs" "io-std" "io-util" "macros" "net" "rt-multi-thread" "signal" "test-util" "tracing"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("fs" "io-std" "io-util" "macros" "net" "rt-multi-thread" "signal" "test-util" "tracing"))) (d #t) (k 1)) (d (n "tokio-stream") (r "^0.1") (f (quote ("net" "sync"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("net" "sync"))) (d #t) (k 1)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec" "compat" "io" "time"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec" "compat" "io" "time"))) (d #t) (k 1)) (d (n "tower") (r "^0.4") (f (quote ("balance" "buffer" "limit" "timeout" "util"))) (d #t) (k 0)) (d (n "tower") (r "^0.4") (f (quote ("balance" "buffer" "limit" "timeout" "util"))) (d #t) (k 1)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 1)) (d (n "tracing-core") (r "^0.1") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1") (d #t) (k 1)) (d (n "tracing-logfmt") (r "^0.3") (f (quote ("ansi_logs"))) (k 0)) (d (n "tracing-logfmt") (r "^0.3") (f (quote ("ansi_logs"))) (k 1)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt" "parking_lot"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt" "parking_lot"))) (k 1)) (d (n "typenum") (r "^1") (f (quote ("const-generics"))) (k 0)) (d (n "typenum") (r "^1") (f (quote ("const-generics"))) (k 1)) (d (n "unsigned-varint") (r "^0.7") (f (quote ("asynchronous_codec"))) (k 0)) (d (n "unsigned-varint") (r "^0.7") (f (quote ("asynchronous_codec"))) (k 1)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 1)) (d (n "uuid") (r "^1") (f (quote ("fast-rng" "v4"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("fast-rng" "v4"))) (d #t) (k 1)) (d (n "wasi") (r "^0.11") (d #t) (t "wasm32-wasi") (k 0)) (d (n "wasi") (r "^0.11") (d #t) (t "wasm32-wasi") (k 1)) (d (n "wasmtime") (r "^16") (f (quote ("component-model"))) (d #t) (k 0)) (d (n "wasmtime") (r "^16") (f (quote ("component-model"))) (d #t) (k 1)) (d (n "wasmtime-jit") (r "^16") (f (quote ("addr2line" "debug-builtins" "demangle" "profiling"))) (k 0)) (d (n "wasmtime-jit") (r "^16") (f (quote ("addr2line" "debug-builtins" "demangle" "profiling"))) (k 1)) (d (n "wasmtime-runtime") (r "^16") (f (quote ("async" "component-model" "debug-builtins" "pooling-allocator"))) (k 0)) (d (n "wasmtime-runtime") (r "^16") (f (quote ("async" "component-model" "debug-builtins" "pooling-allocator"))) (k 1)) (d (n "web-sys") (r "^0.3") (f (quote ("AbortController" "AbortSignal" "AddEventListenerOptions" "BinaryType" "BlobPropertyBag" "CanvasRenderingContext2d" "CloseEvent" "CloseEventInit" "Document" "DomRect" "ErrorEvent" "File" "FileReader" "FormData" "Headers" "History" "HtmlCanvasElement" "HtmlHeadElement" "Location" "MessageEvent" "Performance" "PerformanceTiming" "ProgressEvent" "ReadableStream" "Request" "RequestCredentials" "RequestInit" "RequestMode" "Response" "ServiceWorkerGlobalScope" "WebSocket" "Window" "Worker"))) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("AbortController" "AbortSignal" "AddEventListenerOptions" "BinaryType" "BlobPropertyBag" "CloseEvent" "CloseEventInit" "Document" "ErrorEvent" "File" "FileReader" "FormData" "Headers" "History" "HtmlHeadElement" "Location" "MessageEvent" "ProgressEvent" "ReadableStream" "Request" "RequestCredentials" "RequestInit" "RequestMode" "Response" "ServiceWorkerGlobalScope" "WebSocket" "Window" "Worker"))) (t "wasm32-wasi") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("AbortController" "AbortSignal" "AddEventListenerOptions" "BinaryType" "BlobPropertyBag" "CanvasRenderingContext2d" "CloseEvent" "CloseEventInit" "Document" "DomRect" "ErrorEvent" "File" "FileReader" "FormData" "Headers" "History" "HtmlCanvasElement" "HtmlHeadElement" "Location" "MessageEvent" "Performance" "PerformanceTiming" "ProgressEvent" "ReadableStream" "Request" "RequestCredentials" "RequestInit" "RequestMode" "Response" "ServiceWorkerGlobalScope" "WebSocket" "Window" "Worker"))) (t "wasm32-unknown-unknown") (k 1)) (d (n "web-sys") (r "^0.3") (f (quote ("AbortController" "AbortSignal" "AddEventListenerOptions" "BinaryType" "BlobPropertyBag" "CloseEvent" "CloseEventInit" "Document" "ErrorEvent" "File" "FileReader" "FormData" "Headers" "History" "HtmlHeadElement" "Location" "MessageEvent" "ProgressEvent" "ReadableStream" "Request" "RequestCredentials" "RequestInit" "RequestMode" "Response" "ServiceWorkerGlobalScope" "WebSocket" "Window" "Worker"))) (t "wasm32-wasi") (k 1)) (d (n "zeroize") (r "^1") (f (quote ("zeroize_derive"))) (d #t) (k 0)) (d (n "zeroize") (r "^1") (f (quote ("zeroize_derive"))) (d #t) (k 1)))) (h "1c9ifnywjr8nfh4lnfpn3nai1vyzvk01xwfds2sbw2mxy6l2l9pq")))

