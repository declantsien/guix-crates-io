(define-module (crates-io ho me homestar-invocation) #:use-module (crates-io))

(define-public crate-homestar-invocation-0.1.0 (c (n "homestar-invocation") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-recursion") (r "^1.0") (k 0)) (d (n "byte-unit") (r "^4.0") (k 0)) (d (n "diesel") (r "^2.1") (f (quote ("sqlite"))) (o #t) (k 0)) (d (n "enum-as-inner") (r "^0.6") (d #t) (k 0)) (d (n "enum-assoc") (r "^1.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "generic-array") (r "^1.0") (f (quote ("serde"))) (k 0)) (d (n "libipld") (r "^0.16") (f (quote ("serde-codec" "dag-cbor" "dag-json" "derive"))) (k 0)) (d (n "libsqlite3-sys") (r "^0.27") (f (quote ("bundled"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (k 2)) (d (n "signature") (r "^2.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "ucan") (r "^0.4") (k 0)) (d (n "url") (r "^2.3") (f (quote ("serde"))) (k 0)) (d (n "uuid") (r "^1.5") (f (quote ("v4" "fast-rng"))) (k 0)) (d (n "xid") (r "^1.0") (k 0)))) (h "1vhaz9l3zbk3kdfqv9kzca6yjq96pglgzqz29iwkp9i3g3jcs39w") (f (quote (("test-utils")))) (s 2) (e (quote (("diesel" "dep:diesel" "dep:libsqlite3-sys")))) (r "1.73.0")))

(define-public crate-homestar-invocation-0.1.1 (c (n "homestar-invocation") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-recursion") (r "^1.0") (k 0)) (d (n "byte-unit") (r "^4.0") (k 0)) (d (n "diesel") (r "^2.1") (f (quote ("sqlite"))) (o #t) (k 0)) (d (n "enum-as-inner") (r "^0.6") (d #t) (k 0)) (d (n "enum-assoc") (r "^1.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "generic-array") (r "^1.0") (f (quote ("serde"))) (k 0)) (d (n "libipld") (r "^0.16") (f (quote ("serde-codec" "dag-cbor" "dag-json" "derive"))) (k 0)) (d (n "libsqlite3-sys") (r "^0.27") (f (quote ("bundled"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (k 2)) (d (n "signature") (r "^2.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "ucan") (r "^0.4") (k 0)) (d (n "url") (r "^2.3") (f (quote ("serde"))) (k 0)) (d (n "uuid") (r "^1.5") (f (quote ("v4" "fast-rng"))) (k 0)) (d (n "xid") (r "^1.0") (k 0)))) (h "0hkaw5gn3xmrx4bpdc84dpcq5vq97imsw2jm5wjcjvj1n3vw7ks7") (f (quote (("test-utils")))) (s 2) (e (quote (("diesel" "dep:diesel" "dep:libsqlite3-sys")))) (r "1.73.0")))

(define-public crate-homestar-invocation-0.2.0 (c (n "homestar-invocation") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-recursion") (r "^1.0") (k 0)) (d (n "byte-unit") (r "^4.0") (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "diesel") (r "^2.1") (f (quote ("sqlite"))) (o #t) (k 0)) (d (n "enum-as-inner") (r "^0.6") (d #t) (k 0)) (d (n "enum-assoc") (r "^1.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "generic-array") (r "^1.0") (f (quote ("serde"))) (k 0)) (d (n "homestar-workspace-hack") (r "^0.1") (d #t) (k 0)) (d (n "libipld") (r "^0.16") (f (quote ("serde-codec" "dag-cbor" "dag-json" "derive"))) (k 0)) (d (n "libsqlite3-sys") (r "^0.27") (f (quote ("bundled"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("arrayvec" "url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (k 0)) (d (n "serde_json") (r "^1.0") (k 2)) (d (n "signature") (r "^2.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "ucan") (r "^0.4") (k 0)) (d (n "url") (r "^2.3") (f (quote ("serde"))) (k 0)) (d (n "uuid") (r "^1.5") (f (quote ("v4" "fast-rng"))) (k 0)) (d (n "xid") (r "^1.0") (k 0)))) (h "06mhv4wgmpaw8w0gmccy0r555f6s8l0j880c4m18n3jpx2083j3d") (f (quote (("test-utils")))) (s 2) (e (quote (("diesel" "dep:diesel" "dep:libsqlite3-sys")))) (r "1.75.0")))

(define-public crate-homestar-invocation-0.3.0 (c (n "homestar-invocation") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-recursion") (r "^1.0") (k 0)) (d (n "byte-unit") (r "^4.0") (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "diesel") (r "^2.1") (f (quote ("sqlite"))) (o #t) (k 0)) (d (n "enum-as-inner") (r "^0.6") (d #t) (k 0)) (d (n "enum-assoc") (r "^1.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "generic-array") (r "^1.0") (f (quote ("serde"))) (k 0)) (d (n "homestar-workspace-hack") (r "^0.1") (d #t) (k 0)) (d (n "libipld") (r "^0.16") (f (quote ("serde-codec" "dag-cbor" "dag-json" "derive"))) (k 0)) (d (n "libsqlite3-sys") (r "^0.27") (f (quote ("bundled"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("arrayvec" "url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (k 0)) (d (n "serde_json") (r "^1.0") (k 2)) (d (n "signature") (r "^2.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "ucan") (r "^0.4") (k 0)) (d (n "url") (r "^2.3") (f (quote ("serde"))) (k 0)) (d (n "uuid") (r "^1.5") (f (quote ("v4" "fast-rng"))) (k 0)) (d (n "xid") (r "^1.0") (k 0)))) (h "16zn7anj03q659735fwdnsw077wp23w5jcp1yl4mzqz44yfpx6kk") (f (quote (("test-utils")))) (s 2) (e (quote (("diesel" "dep:diesel" "dep:libsqlite3-sys")))) (r "1.75.0")))

