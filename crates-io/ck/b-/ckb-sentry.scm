(define-module (crates-io ck b- ckb-sentry) #:use-module (crates-io))

(define-public crate-ckb-sentry-0.21.0 (c (n "ckb-sentry") (v "0.21.0") (d (list (d (n "actix-web") (r "^3") (k 2)) (d (n "anyhow_") (r "^1.0.30") (d #t) (k 2) (p "anyhow")) (d (n "curl_") (r "^0.4.25") (o #t) (d #t) (k 0) (p "curl")) (d (n "error-chain_") (r "^0.12.1") (d #t) (k 2) (p "error-chain")) (d (n "failure_") (r "^0.1.6") (d #t) (k 2) (p "failure")) (d (n "failure_derive") (r "^0.1.6") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "httpdate") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "log_") (r "^0.4.8") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "log")) (d (n "log_") (r "^0.4.8") (f (quote ("std"))) (d #t) (k 2) (p "log")) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "reqwest_") (r "^0.10.8") (f (quote ("blocking" "json"))) (o #t) (k 0) (p "reqwest")) (d (n "sentry-anyhow") (r "^0.21.0") (o #t) (d #t) (k 0) (p "ckb-sentry-anyhow")) (d (n "sentry-anyhow") (r "^0.21.0") (d #t) (k 2) (p "ckb-sentry-anyhow")) (d (n "sentry-backtrace") (r "^0.21.0") (o #t) (d #t) (k 0) (p "ckb-sentry-backtrace")) (d (n "sentry-contexts") (r "^0.21.0") (o #t) (d #t) (k 0) (p "ckb-sentry-contexts")) (d (n "sentry-core") (r "^0.21.0") (f (quote ("client"))) (d #t) (k 0) (p "ckb-sentry-core")) (d (n "sentry-debug-images") (r "^0.21.0") (o #t) (d #t) (k 0) (p "ckb-sentry-debug-images")) (d (n "sentry-error-chain") (r "^0.21.0") (o #t) (d #t) (k 0) (p "ckb-sentry-error-chain")) (d (n "sentry-error-chain") (r "^0.21.0") (d #t) (k 2) (p "ckb-sentry-error-chain")) (d (n "sentry-failure") (r "^0.21.0") (o #t) (d #t) (k 0) (p "ckb-sentry-failure")) (d (n "sentry-failure") (r "^0.21.0") (d #t) (k 2) (p "ckb-sentry-failure")) (d (n "sentry-log") (r "^0.21.0") (o #t) (d #t) (k 0) (p "ckb-sentry-log")) (d (n "sentry-log") (r "^0.21.0") (d #t) (k 2) (p "ckb-sentry-log")) (d (n "sentry-panic") (r "^0.21.0") (o #t) (d #t) (k 0) (p "ckb-sentry-panic")) (d (n "sentry-slog") (r "^0.21.0") (o #t) (d #t) (k 0) (p "ckb-sentry-slog")) (d (n "sentry-slog") (r "^0.21.0") (d #t) (k 2) (p "ckb-sentry-slog")) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "slog_") (r "^2.5.2") (d #t) (k 2) (p "slog")) (d (n "surf_") (r "^2.0.0") (o #t) (d #t) (k 0) (p "surf")) (d (n "tokio") (r "^0.2") (f (quote ("macros"))) (d #t) (k 2)))) (h "1ig0zkv7ij99d9vq8r4nsx26m7a618i2i0ww630nqpjrsv9hsj91") (f (quote (("transport" "reqwest" "native-tls") ("test" "sentry-core/test") ("surf" "surf_" "httpdate" "futures") ("slog" "sentry-slog") ("rustls" "reqwest_/rustls-tls") ("reqwest" "reqwest_" "httpdate") ("panic" "sentry-panic") ("native-tls" "reqwest_/default-tls") ("log" "sentry-log") ("failure" "sentry-failure") ("error-chain" "sentry-error-chain") ("default" "backtrace" "contexts" "panic" "transport") ("debug-logs" "log_" "sentry-core/debug-logs") ("debug-images" "sentry-debug-images") ("curl" "curl_" "httpdate" "serde_json") ("contexts" "sentry-contexts") ("backtrace" "sentry-backtrace") ("anyhow" "sentry-anyhow"))))))

