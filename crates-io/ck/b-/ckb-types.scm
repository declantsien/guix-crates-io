(define-module (crates-io ck b- ckb-types) #:use-module (crates-io))

(define-public crate-ckb-types-0.37.0-pre (c (n "ckb-types") (v "0.37.0-pre") (d (list (d (n "bit-vec") (r "^0.5.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.37.0-pre") (d #t) (k 0)) (d (n "ckb-error") (r "=0.37.0-pre") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.37.0-pre") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.37.0-pre") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.37.0-pre") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.37.0-pre") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.6.0") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "proptest") (r "^0.9") (d #t) (k 2)))) (h "0ydzpsg02xjjyvjiw874h9lv9xwqbiv0rpx6ylparxygj1r8zgvk")))

(define-public crate-ckb-types-0.37.0 (c (n "ckb-types") (v "0.37.0") (d (list (d (n "bit-vec") (r "^0.5.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.37.0") (d #t) (k 0)) (d (n "ckb-error") (r "=0.37.0") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.37.0") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.37.0") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.37.0") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.37.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.6.0") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)))) (h "0m8bv6kqp0cmra2pvdraajjw2jf13ff9mn7zkpq8xyaiawqprbm7")))

(define-public crate-ckb-types-0.38.0 (c (n "ckb-types") (v "0.38.0") (d (list (d (n "bit-vec") (r "^0.5.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.38.0") (d #t) (k 0)) (d (n "ckb-error") (r "=0.38.0") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.38.0") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.38.0") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.38.0") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.38.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.6.0") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)))) (h "013slqrpn2sayj0mb0snkdp2k0r06qxc0fxrh21jqbl1p18m3q2w")))

(define-public crate-ckb-types-0.39.0 (c (n "ckb-types") (v "0.39.0") (d (list (d (n "bit-vec") (r "^0.5.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.39.0") (d #t) (k 0)) (d (n "ckb-error") (r "=0.39.0") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.39.0") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.39.0") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.39.0") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.39.0") (d #t) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.6.0") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)))) (h "0k85609c561wi35bqmqr14idy22j3a7i2qz3r38v7ikzx17fx01r")))

(define-public crate-ckb-types-0.39.1 (c (n "ckb-types") (v "0.39.1") (d (list (d (n "bit-vec") (r "^0.5.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.39.1") (d #t) (k 0)) (d (n "ckb-error") (r "=0.39.1") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.39.1") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.39.1") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.39.1") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.39.1") (d #t) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.6.0") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)))) (h "08xa248ly2wnw8xwpswbwn251my4qkpyf0l9xywigzj1b1rzp022")))

(define-public crate-ckb-types-0.40.0 (c (n "ckb-types") (v "0.40.0") (d (list (d (n "bit-vec") (r "^0.5.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.40.0") (d #t) (k 0)) (d (n "ckb-error") (r "=0.40.0") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.40.0") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.40.0") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.40.0") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.40.0") (d #t) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.6.0") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)))) (h "028s0ck16xc5r2lmk8njl4qsv77rhxng35pbbdyi57j7386azpwf")))

(define-public crate-ckb-types-0.42.0 (c (n "ckb-types") (v "0.42.0") (d (list (d (n "bit-vec") (r "^0.5.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.42.0") (d #t) (k 0)) (d (n "ckb-error") (r "=0.42.0") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.42.0") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.42.0") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.42.0") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.42.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.6.0") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)))) (h "0rihzsk382vksply3645zms6z8prj92r5yw3skk0yjvv7x6aw3xj")))

(define-public crate-ckb-types-0.43.0 (c (n "ckb-types") (v "0.43.0") (d (list (d (n "bit-vec") (r "^0.5.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.43.0") (d #t) (k 0)) (d (n "ckb-error") (r "=0.43.0") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.43.0") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.43.0") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.43.0") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.43.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.1") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)))) (h "12kznnb8ncaz5ic61pmbv7jsswxik578pjcfqsz9cg7n2013js14")))

(define-public crate-ckb-types-0.100.0-rc2 (c (n "ckb-types") (v "0.100.0-rc2") (d (list (d (n "bit-vec") (r "^0.5.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.100.0-rc2") (d #t) (k 0)) (d (n "ckb-error") (r "=0.100.0-rc2") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.100.0-rc2") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.100.0-rc2") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.100.0-rc2") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.100.0-rc2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.1") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)))) (h "0ap4zyq3wfbindns4n2sl0yczjzy78ifidhmv3bkp3nfahqqsn1i")))

(define-public crate-ckb-types-0.43.2 (c (n "ckb-types") (v "0.43.2") (d (list (d (n "bit-vec") (r "^0.5.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.43.2") (d #t) (k 0)) (d (n "ckb-error") (r "=0.43.2") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.43.2") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.43.2") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.43.2") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.43.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.2") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)))) (h "0iwclj62g7rakrmjlps3wilw9l49idavhcj3005f9x8qs0fg0zkl")))

(define-public crate-ckb-types-0.100.0-rc4 (c (n "ckb-types") (v "0.100.0-rc4") (d (list (d (n "bit-vec") (r "^0.5.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.100.0-rc4") (d #t) (k 0)) (d (n "ckb-error") (r "=0.100.0-rc4") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.100.0-rc4") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.100.0-rc4") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.100.0-rc4") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.100.0-rc4") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.2") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)))) (h "102m4iq0cws4ryvrc41lb3csl9wkvcxwrvm8sj3zsknamzi505y4")))

(define-public crate-ckb-types-0.100.0-rc5 (c (n "ckb-types") (v "0.100.0-rc5") (d (list (d (n "bit-vec") (r "^0.5.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.100.0-rc5") (d #t) (k 0)) (d (n "ckb-error") (r "=0.100.0-rc5") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.100.0-rc5") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.100.0-rc5") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.100.0-rc5") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.100.0-rc5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.2") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)))) (h "069l1j77l1c9ai9x4gd7hjbwk13lyqnr91jg13xrs435879k8abi")))

(define-public crate-ckb-types-0.100.0 (c (n "ckb-types") (v "0.100.0") (d (list (d (n "bit-vec") (r "^0.5.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.100.0") (d #t) (k 0)) (d (n "ckb-error") (r "=0.100.0") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.100.0") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.100.0") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.100.0") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.100.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.2") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)))) (h "07x3jmpnga6dl33qscb4xqc6s8frgwc3v1969l68w700dw8571h4")))

(define-public crate-ckb-types-0.101.0 (c (n "ckb-types") (v "0.101.0") (d (list (d (n "bit-vec") (r "^0.5.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.101.0") (d #t) (k 0)) (d (n "ckb-error") (r "=0.101.0") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.101.0") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.101.0") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.101.0") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.101.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.2") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)))) (h "0gmy1m5dsr15apj7xm4gs2gpz5m87jyb64frw2ndmnx2adc4rlsv")))

(define-public crate-ckb-types-0.101.1 (c (n "ckb-types") (v "0.101.1") (d (list (d (n "bit-vec") (r "^0.5.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.101.1") (d #t) (k 0)) (d (n "ckb-error") (r "=0.101.1") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.101.1") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.101.1") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.101.1") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.101.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.2") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)))) (h "1czh82gv122xxdl06x0xd49vhrlabn8mddjz6w482xzq2y18hj1y")))

(define-public crate-ckb-types-0.101.2-testnet1 (c (n "ckb-types") (v "0.101.2-testnet1") (d (list (d (n "bit-vec") (r "^0.5.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.101.2-testnet1") (d #t) (k 0)) (d (n "ckb-error") (r "=0.101.2-testnet1") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.101.2-testnet1") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.101.2-testnet1") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.101.2-testnet1") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.101.2-testnet1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.2") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)))) (h "1mxscd3kb8jz036yylyrzq6lyn15xjipg50fjdil566hbp31sbjl")))

(define-public crate-ckb-types-0.101.2 (c (n "ckb-types") (v "0.101.2") (d (list (d (n "bit-vec") (r "^0.5.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.101.2") (d #t) (k 0)) (d (n "ckb-error") (r "=0.101.2") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.101.2") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.101.2") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.101.2") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.101.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.2") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)))) (h "0b9r5i2x16hjjx5nqhqdjm8jfbhcmz6f35gz2zrmh6dr8dr5cksp")))

(define-public crate-ckb-types-0.101.3 (c (n "ckb-types") (v "0.101.3") (d (list (d (n "bit-vec") (r "^0.5.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.101.3") (d #t) (k 0)) (d (n "ckb-error") (r "=0.101.3") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.101.3") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.101.3") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.101.3") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.101.3") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.2") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)))) (h "1cc3rcwxz7xvm1qwxlvvwc3sk2qqj2v7bi783yiaz6rpr98b2pni")))

(define-public crate-ckb-types-0.101.4 (c (n "ckb-types") (v "0.101.4") (d (list (d (n "bit-vec") (r "^0.5.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.101.4") (d #t) (k 0)) (d (n "ckb-error") (r "=0.101.4") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.101.4") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.101.4") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.101.4") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.101.4") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.2") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)))) (h "1szmxwn85n793q047min68vh1pv4r9s7skl12ikpvak98jbz7821")))

(define-public crate-ckb-types-0.101.5 (c (n "ckb-types") (v "0.101.5") (d (list (d (n "bit-vec") (r "^0.5.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.101.5") (d #t) (k 0)) (d (n "ckb-error") (r "=0.101.5") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.101.5") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.101.5") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.101.5") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.101.5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.3") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)))) (h "1pwwzyz94cb75qbz3b8jzcnljvirxaq5sqx133mlvhznxvlj2l79") (y #t)))

(define-public crate-ckb-types-0.101.6 (c (n "ckb-types") (v "0.101.6") (d (list (d (n "bit-vec") (r "^0.5.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.101.6") (d #t) (k 0)) (d (n "ckb-error") (r "=0.101.6") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.101.6") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.101.6") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.101.6") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.101.6") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.3") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)))) (h "0y6sq85rvk05pz8gkjgh48sa9f9jjahb6v6234d3qgkrhkd49f9b")))

(define-public crate-ckb-types-0.101.7 (c (n "ckb-types") (v "0.101.7") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.101.7") (d #t) (k 0)) (d (n "ckb-error") (r "=0.101.7") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.101.7") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.101.7") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.101.7") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.101.7") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.3") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)))) (h "1viq5lxljj5bf65gsj1lhwg4vr2rzizjfsdax35a4vda865jsvxl")))

(define-public crate-ckb-types-0.101.8 (c (n "ckb-types") (v "0.101.8") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.101.8") (d #t) (k 0)) (d (n "ckb-error") (r "=0.101.8") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.101.8") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.101.8") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.101.8") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.101.8") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.3") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)))) (h "02lvigpzldrzcc6bmk9mp88azp3fdc0mwi6p2fh5sqy4lbs37j7l")))

(define-public crate-ckb-types-0.102.0 (c (n "ckb-types") (v "0.102.0") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.102.0") (d #t) (k 0)) (d (n "ckb-error") (r "=0.102.0") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.102.0") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.102.0") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.102.0") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.102.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.3") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)))) (h "0sqi5ap69mhq000lp5mks16qqjjk2xd1422h7g0phv27j8vd1p5d") (y #t)))

(define-public crate-ckb-types-0.103.0 (c (n "ckb-types") (v "0.103.0") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.103.0") (d #t) (k 0)) (d (n "ckb-error") (r "=0.103.0") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.103.0") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.103.0") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.103.0") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.103.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.3") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)))) (h "0rvfs1vn6xq8pj9vm2yg3s8mn7hk0kj3hddym5xkcjwss54lvhnj")))

(define-public crate-ckb-types-0.104.0 (c (n "ckb-types") (v "0.104.0") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.104.0") (d #t) (k 0)) (d (n "ckb-error") (r "=0.104.0") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.104.0") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.104.0") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.104.0") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.104.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.3") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)))) (h "1bz2cpql0rl5svy71d3w9hiimawy6yj3w2v7r5xjc01rr49kxfp9")))

(define-public crate-ckb-types-0.104.1 (c (n "ckb-types") (v "0.104.1") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.104.1") (d #t) (k 0)) (d (n "ckb-error") (r "=0.104.1") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.104.1") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.104.1") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.104.1") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.104.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.3") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)))) (h "0kpdm43k8kkd2f4qcrrngpzgwxza703crfh571qsfa8mnb352hfr")))

(define-public crate-ckb-types-0.105.0 (c (n "ckb-types") (v "0.105.0") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.105.0") (d #t) (k 0)) (d (n "ckb-error") (r "=0.105.0") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.105.0") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.105.0") (d #t) (k 0)) (d (n "ckb-merkle-mountain-range") (r "^0.5.2") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.105.0") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.105.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.3") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)))) (h "116wnh7zrcazjffngwbis8v567h5v65qm2fy6mfspasixnzywscb") (y #t)))

(define-public crate-ckb-types-0.105.1 (c (n "ckb-types") (v "0.105.1") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.105.1") (d #t) (k 0)) (d (n "ckb-error") (r "=0.105.1") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.105.1") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.105.1") (d #t) (k 0)) (d (n "ckb-merkle-mountain-range") (r "^0.5.2") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.105.1") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.105.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.3") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)))) (h "0k29c7365j2hvn9hvmzp3kawbq3lw0nxlgf9l775iylifi4i4s7h") (y #t)))

(define-public crate-ckb-types-0.106.0 (c (n "ckb-types") (v "0.106.0") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.106.0") (d #t) (k 0)) (d (n "ckb-error") (r "=0.106.0") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.106.0") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.106.0") (d #t) (k 0)) (d (n "ckb-merkle-mountain-range") (r "^0.5.2") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.106.0") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.106.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.3") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)))) (h "0y0kw1c1v8iw4vzyd0nhbf41mqyyifx9iv18qlrxgzh4gy6r37wg")))

(define-public crate-ckb-types-0.107.0 (c (n "ckb-types") (v "0.107.0") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.107.0") (d #t) (k 0)) (d (n "ckb-error") (r "=0.107.0") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.107.0") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.107.0") (d #t) (k 0)) (d (n "ckb-merkle-mountain-range") (r "^0.5.2") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.107.0") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.107.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.3") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)))) (h "0vw9mdwggib42ll8rh6czb3gawcximp85zfy55mgxyr0in667d8m")))

(define-public crate-ckb-types-0.108.0 (c (n "ckb-types") (v "0.108.0") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.108.0") (d #t) (k 0)) (d (n "ckb-error") (r "=0.108.0") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.108.0") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.108.0") (d #t) (k 0)) (d (n "ckb-merkle-mountain-range") (r "^0.5.2") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.108.0") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.108.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.3") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)))) (h "07i949f2cf313ijls70ydyf1qa050qf34wrgivsai24graqv68lw")))

(define-public crate-ckb-types-0.108.1 (c (n "ckb-types") (v "0.108.1") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.108.1") (d #t) (k 0)) (d (n "ckb-error") (r "=0.108.1") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.108.1") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.108.1") (d #t) (k 0)) (d (n "ckb-merkle-mountain-range") (r "^0.5.2") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.108.1") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.108.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.3") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)))) (h "13z1047vryrfw2hxhj5p9n78hzh8vxsydfc7i2yg9ncxqg9z72fv")))

(define-public crate-ckb-types-0.109.0 (c (n "ckb-types") (v "0.109.0") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.109.0") (d #t) (k 0)) (d (n "ckb-error") (r "=0.109.0") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.109.0") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.109.0") (d #t) (k 0)) (d (n "ckb-merkle-mountain-range") (r "^0.5.2") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.109.0") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.109.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "golomb-coded-set") (r "^0.2.0") (d #t) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.3") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)))) (h "1gjgr022g6xcip825xw46x2jg0mdvhg8vag712idywr4yl327wrc")))

(define-public crate-ckb-types-0.110.0 (c (n "ckb-types") (v "0.110.0") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.110.0") (d #t) (k 0)) (d (n "ckb-error") (r "=0.110.0") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.110.0") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.110.0") (d #t) (k 0)) (d (n "ckb-merkle-mountain-range") (r "^0.5.2") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.110.0") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.110.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "golomb-coded-set") (r "^0.2.0") (d #t) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.3") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)))) (h "1rlw16ngsljhdmqdwpjkh2pivjjrzjqsmq9lv8pq8axm8gcrahxv")))

(define-public crate-ckb-types-0.110.0-rc1 (c (n "ckb-types") (v "0.110.0-rc1") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.110.0-rc1") (d #t) (k 0)) (d (n "ckb-constant") (r "=0.110.0-rc1") (d #t) (k 0)) (d (n "ckb-error") (r "=0.110.0-rc1") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.110.0-rc1") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.110.0-rc1") (d #t) (k 0)) (d (n "ckb-merkle-mountain-range") (r "^0.5.2") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.110.0-rc1") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.110.0-rc1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "golomb-coded-set") (r "^0.2.0") (d #t) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.5") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)))) (h "00p0wv3xp8l9chagjdh2dvhibppk27mjdbsbz9086iggj5ybcgqb")))

(define-public crate-ckb-types-0.111.0-rc2 (c (n "ckb-types") (v "0.111.0-rc2") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.111.0-rc2") (d #t) (k 0)) (d (n "ckb-constant") (r "=0.111.0-rc2") (d #t) (k 0)) (d (n "ckb-error") (r "=0.111.0-rc2") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.111.0-rc2") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.111.0-rc2") (d #t) (k 0)) (d (n "ckb-merkle-mountain-range") (r "^0.5.2") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.111.0-rc2") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.111.0-rc2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "golomb-coded-set") (r "^0.2.0") (d #t) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.5") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)))) (h "16ssyid9hb7ryvwrjvlbkx4gi15wf5fma1ikmagq9wigpp0ihv85")))

(define-public crate-ckb-types-0.111.0-rc3 (c (n "ckb-types") (v "0.111.0-rc3") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.111.0-rc3") (d #t) (k 0)) (d (n "ckb-constant") (r "=0.111.0-rc3") (d #t) (k 0)) (d (n "ckb-error") (r "=0.111.0-rc3") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.111.0-rc3") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.111.0-rc3") (d #t) (k 0)) (d (n "ckb-merkle-mountain-range") (r "^0.5.2") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.111.0-rc3") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.111.0-rc3") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "golomb-coded-set") (r "^0.2.0") (d #t) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.5") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)))) (h "0vhzb0abjadw7fl2vd0g4mhqs5a8whp1zv7042mk12qwizshw7gc")))

(define-public crate-ckb-types-0.111.0-rc4 (c (n "ckb-types") (v "0.111.0-rc4") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.111.0-rc4") (d #t) (k 0)) (d (n "ckb-constant") (r "=0.111.0-rc4") (d #t) (k 0)) (d (n "ckb-error") (r "=0.111.0-rc4") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.111.0-rc4") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.111.0-rc4") (d #t) (k 0)) (d (n "ckb-merkle-mountain-range") (r "^0.5.2") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.111.0-rc4") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.111.0-rc4") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "golomb-coded-set") (r "^0.2.0") (d #t) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.5") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)))) (h "128sjvsknc4llx6z2xmdi698xl5sasldjaq8mv0nl2lhyf9a51j1")))

(define-public crate-ckb-types-0.111.0-rc5 (c (n "ckb-types") (v "0.111.0-rc5") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.111.0-rc5") (d #t) (k 0)) (d (n "ckb-constant") (r "=0.111.0-rc5") (d #t) (k 0)) (d (n "ckb-error") (r "=0.111.0-rc5") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.111.0-rc5") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.111.0-rc5") (d #t) (k 0)) (d (n "ckb-merkle-mountain-range") (r "^0.5.2") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.111.0-rc5") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.111.0-rc5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "golomb-coded-set") (r "^0.2.0") (d #t) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.5") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)))) (h "122h63irmfw0hhcxx7giaqainphyvgampin8iq4s108ij9cvia8s")))

(define-public crate-ckb-types-0.111.0-rc6 (c (n "ckb-types") (v "0.111.0-rc6") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.111.0-rc6") (d #t) (k 0)) (d (n "ckb-constant") (r "=0.111.0-rc6") (d #t) (k 0)) (d (n "ckb-error") (r "=0.111.0-rc6") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.111.0-rc6") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.111.0-rc6") (d #t) (k 0)) (d (n "ckb-merkle-mountain-range") (r "^0.5.2") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.111.0-rc6") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.111.0-rc6") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "golomb-coded-set") (r "^0.2.0") (d #t) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.5") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)))) (h "0dxymazn81g5z3g8032sp8c5zpc4802gpfm7fygjk9ahrqgsc1gf")))

(define-public crate-ckb-types-0.111.0-rc7 (c (n "ckb-types") (v "0.111.0-rc7") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.111.0-rc7") (d #t) (k 0)) (d (n "ckb-constant") (r "=0.111.0-rc7") (d #t) (k 0)) (d (n "ckb-error") (r "=0.111.0-rc7") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.111.0-rc7") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.111.0-rc7") (d #t) (k 0)) (d (n "ckb-merkle-mountain-range") (r "^0.5.2") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.111.0-rc7") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.111.0-rc7") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "golomb-coded-set") (r "^0.2.0") (d #t) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.5") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)))) (h "03rwxaa349m0872hw5rwzqfby7nlx42mmfkkgyvpyr8ja5i14i82")))

(define-public crate-ckb-types-0.111.0-rc8 (c (n "ckb-types") (v "0.111.0-rc8") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.111.0-rc8") (d #t) (k 0)) (d (n "ckb-constant") (r "=0.111.0-rc8") (d #t) (k 0)) (d (n "ckb-error") (r "=0.111.0-rc8") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.111.0-rc8") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.111.0-rc8") (d #t) (k 0)) (d (n "ckb-merkle-mountain-range") (r "^0.5.2") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.111.0-rc8") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.111.0-rc8") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "golomb-coded-set") (r "^0.2.0") (d #t) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.5") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)))) (h "087csgpslzyl3mby6g6f11mwzzmkf6ggvmyic65r4dh7r0m201gq")))

(define-public crate-ckb-types-0.110.1-rc1 (c (n "ckb-types") (v "0.110.1-rc1") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.110.1-rc1") (d #t) (k 0)) (d (n "ckb-error") (r "=0.110.1-rc1") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.110.1-rc1") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.110.1-rc1") (d #t) (k 0)) (d (n "ckb-merkle-mountain-range") (r "^0.5.2") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.110.1-rc1") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.110.1-rc1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "golomb-coded-set") (r "^0.2.0") (d #t) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.3") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)))) (h "188wcddksaj1x4h205nczyp5ibsvac9ckawfviw6naswayjwbarx")))

(define-public crate-ckb-types-0.110.1-rc2 (c (n "ckb-types") (v "0.110.1-rc2") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.110.1-rc2") (d #t) (k 0)) (d (n "ckb-error") (r "=0.110.1-rc2") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.110.1-rc2") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.110.1-rc2") (d #t) (k 0)) (d (n "ckb-merkle-mountain-range") (r "^0.5.2") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.110.1-rc2") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.110.1-rc2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "golomb-coded-set") (r "^0.2.0") (d #t) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.3") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)))) (h "0xa0gp9rs678m24kp1n9xxa2mhs76lhz3xh7m6m8y21fnfk193cx")))

(define-public crate-ckb-types-0.111.0-rc9 (c (n "ckb-types") (v "0.111.0-rc9") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.111.0-rc9") (d #t) (k 0)) (d (n "ckb-constant") (r "=0.111.0-rc9") (d #t) (k 0)) (d (n "ckb-error") (r "=0.111.0-rc9") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.111.0-rc9") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.111.0-rc9") (d #t) (k 0)) (d (n "ckb-merkle-mountain-range") (r "^0.5.2") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.111.0-rc9") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.111.0-rc9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "golomb-coded-set") (r "^0.2.0") (d #t) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.5") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)))) (h "04ndk6c2gk9hxx8yrajd76sgzcq7j9qxgqwi9x3mxlsqfgwsmbgq")))

(define-public crate-ckb-types-0.111.0-rc10 (c (n "ckb-types") (v "0.111.0-rc10") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.111.0-rc10") (d #t) (k 0)) (d (n "ckb-constant") (r "=0.111.0-rc10") (d #t) (k 0)) (d (n "ckb-error") (r "=0.111.0-rc10") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.111.0-rc10") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.111.0-rc10") (d #t) (k 0)) (d (n "ckb-merkle-mountain-range") (r "^0.5.2") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.111.0-rc10") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.111.0-rc10") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "golomb-coded-set") (r "^0.2.0") (d #t) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.5") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)))) (h "0i5chi7bqiln3fvclc7wjciq34kzq9px10yybzzn9appxplsmnbq")))

(define-public crate-ckb-types-0.110.1 (c (n "ckb-types") (v "0.110.1") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.110.1") (d #t) (k 0)) (d (n "ckb-error") (r "=0.110.1") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.110.1") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.110.1") (d #t) (k 0)) (d (n "ckb-merkle-mountain-range") (r "^0.5.2") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.110.1") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.110.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "golomb-coded-set") (r "^0.2.0") (d #t) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.3") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)))) (h "04v43rascf8mfxqamazr7jxmg4mb1wmrr76w9cd361lbbr58kdhd")))

(define-public crate-ckb-types-0.110.2-rc1 (c (n "ckb-types") (v "0.110.2-rc1") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.110.2-rc1") (d #t) (k 0)) (d (n "ckb-error") (r "=0.110.2-rc1") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.110.2-rc1") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.110.2-rc1") (d #t) (k 0)) (d (n "ckb-merkle-mountain-range") (r "^0.5.2") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.110.2-rc1") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.110.2-rc1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "golomb-coded-set") (r "^0.2.0") (d #t) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.3") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)))) (h "1kd2zyp1p5c8sxkzf7k457v9a9w1xba0xfgmmjjbn3gxcbjxwn7y")))

(define-public crate-ckb-types-0.111.0-rc11 (c (n "ckb-types") (v "0.111.0-rc11") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.111.0-rc11") (d #t) (k 0)) (d (n "ckb-constant") (r "=0.111.0-rc11") (d #t) (k 0)) (d (n "ckb-error") (r "=0.111.0-rc11") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.111.0-rc11") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.111.0-rc11") (d #t) (k 0)) (d (n "ckb-merkle-mountain-range") (r "^0.5.2") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.111.0-rc11") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.111.0-rc11") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "golomb-coded-set") (r "^0.2.0") (d #t) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.5") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)))) (h "1zir9c2xibw60j1wm2f04s0nv4ldil1aa95bm746vc854a98hxnx")))

(define-public crate-ckb-types-0.110.2-rc2 (c (n "ckb-types") (v "0.110.2-rc2") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.110.2-rc2") (d #t) (k 0)) (d (n "ckb-error") (r "=0.110.2-rc2") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.110.2-rc2") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.110.2-rc2") (d #t) (k 0)) (d (n "ckb-merkle-mountain-range") (r "^0.5.2") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.110.2-rc2") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.110.2-rc2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "golomb-coded-set") (r "^0.2.0") (d #t) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.3") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)))) (h "03dgzygmrqi36vc2ls10dmpkkazj90h2pv3nmr55v5qia50wli9y")))

(define-public crate-ckb-types-0.111.0-rc12 (c (n "ckb-types") (v "0.111.0-rc12") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.111.0-rc12") (d #t) (k 0)) (d (n "ckb-constant") (r "=0.111.0-rc12") (d #t) (k 0)) (d (n "ckb-error") (r "=0.111.0-rc12") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.111.0-rc12") (d #t) (k 0)) (d (n "ckb-gen-types") (r "=0.111.0-rc12") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.111.0-rc12") (d #t) (k 0)) (d (n "ckb-merkle-mountain-range") (r "^0.5.2") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.111.0-rc12") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.111.0-rc12") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "golomb-coded-set") (r "^0.2.0") (d #t) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.5") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)))) (h "1lpjns2yzcgq6ff2gkrcg5b6rhlysbnfs87vj6ii1vz5pand5s7h")))

(define-public crate-ckb-types-0.110.2 (c (n "ckb-types") (v "0.110.2") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.110.2") (d #t) (k 0)) (d (n "ckb-error") (r "=0.110.2") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.110.2") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.110.2") (d #t) (k 0)) (d (n "ckb-merkle-mountain-range") (r "^0.5.2") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.110.2") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.110.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "golomb-coded-set") (r "^0.2.0") (d #t) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.3") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)))) (h "15jdyn6gsjcl7nfbvjxi5r6zbkawy4dp0srg4rh9ib371f5r8sgh")))

(define-public crate-ckb-types-0.111.0 (c (n "ckb-types") (v "0.111.0") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.111.0") (d #t) (k 0)) (d (n "ckb-constant") (r "=0.111.0") (d #t) (k 0)) (d (n "ckb-error") (r "=0.111.0") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.111.0") (d #t) (k 0)) (d (n "ckb-gen-types") (r "=0.111.0") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.111.0") (d #t) (k 0)) (d (n "ckb-merkle-mountain-range") (r "^0.5.2") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.111.0") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.111.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "golomb-coded-set") (r "^0.2.0") (d #t) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.5") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)))) (h "0n2fwkqx2i0fh9h078ipzkvdifw9b9bfi4a01yyqnhap95z77v5n")))

(define-public crate-ckb-types-0.112.0-rc1 (c (n "ckb-types") (v "0.112.0-rc1") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.112.0-rc1") (d #t) (k 0)) (d (n "ckb-constant") (r "=0.112.0-rc1") (d #t) (k 0)) (d (n "ckb-error") (r "=0.112.0-rc1") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.112.0-rc1") (d #t) (k 0)) (d (n "ckb-gen-types") (r "=0.112.0-rc1") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.112.0-rc1") (d #t) (k 0)) (d (n "ckb-merkle-mountain-range") (r "^0.5.2") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.112.0-rc1") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.112.0-rc1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "golomb-coded-set") (r "^0.2.0") (d #t) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.5") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)))) (h "11x1mfyasr7hi6jlmslfb3whc75yd1iyvckn257r9lqzq84dlarx")))

(define-public crate-ckb-types-0.112.0-rc2 (c (n "ckb-types") (v "0.112.0-rc2") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.112.0-rc2") (d #t) (k 0)) (d (n "ckb-constant") (r "=0.112.0-rc2") (d #t) (k 0)) (d (n "ckb-error") (r "=0.112.0-rc2") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.112.0-rc2") (d #t) (k 0)) (d (n "ckb-gen-types") (r "=0.112.0-rc2") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.112.0-rc2") (d #t) (k 0)) (d (n "ckb-merkle-mountain-range") (r "^0.5.2") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.112.0-rc2") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.112.0-rc2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "golomb-coded-set") (r "^0.2.0") (d #t) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.5") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)))) (h "07hi019fzhjl95bfsdkvwa3rkfv0hqby14sf4svgn0p73fib6yph")))

(define-public crate-ckb-types-0.112.0 (c (n "ckb-types") (v "0.112.0") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.112.0") (d #t) (k 0)) (d (n "ckb-constant") (r "=0.112.0") (d #t) (k 0)) (d (n "ckb-error") (r "=0.112.0") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.112.0") (d #t) (k 0)) (d (n "ckb-gen-types") (r "=0.112.0") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.112.0") (d #t) (k 0)) (d (n "ckb-merkle-mountain-range") (r "^0.5.2") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.112.0") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.112.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "golomb-coded-set") (r "^0.2.0") (d #t) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.5") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)))) (h "0ljbpdskp5344fl8g9cdfxsq8d77j5g2zd102wgprj7xjzl4rdsf")))

(define-public crate-ckb-types-0.112.0-rc3 (c (n "ckb-types") (v "0.112.0-rc3") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.112.0-rc3") (d #t) (k 0)) (d (n "ckb-constant") (r "=0.112.0-rc3") (d #t) (k 0)) (d (n "ckb-error") (r "=0.112.0-rc3") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.112.0-rc3") (d #t) (k 0)) (d (n "ckb-gen-types") (r "=0.112.0-rc3") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.112.0-rc3") (d #t) (k 0)) (d (n "ckb-merkle-mountain-range") (r "^0.5.2") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.112.0-rc3") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.112.0-rc3") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "golomb-coded-set") (r "^0.2.0") (d #t) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.5") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)))) (h "1z4z9i1j3n1mlpww46md6d6riiyri99a1khj25cr2ybpgpc9d0a0")))

(define-public crate-ckb-types-0.112.1 (c (n "ckb-types") (v "0.112.1") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.112.1") (d #t) (k 0)) (d (n "ckb-constant") (r "=0.112.1") (d #t) (k 0)) (d (n "ckb-error") (r "=0.112.1") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.112.1") (d #t) (k 0)) (d (n "ckb-gen-types") (r "=0.112.1") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.112.1") (d #t) (k 0)) (d (n "ckb-merkle-mountain-range") (r "^0.5.2") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.112.1") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.112.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "golomb-coded-set") (r "^0.2.0") (d #t) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.5") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)))) (h "0x88zdx1jz648c0fnqsgzq8mgqn0qx75fg363dzr3g340r0wgxrd")))

(define-public crate-ckb-types-0.113.0-rc1 (c (n "ckb-types") (v "0.113.0-rc1") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.113.0-rc1") (d #t) (k 0)) (d (n "ckb-constant") (r "=0.113.0-rc1") (d #t) (k 0)) (d (n "ckb-error") (r "=0.113.0-rc1") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.113.0-rc1") (d #t) (k 0)) (d (n "ckb-gen-types") (r "=0.113.0-rc1") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.113.0-rc1") (d #t) (k 0)) (d (n "ckb-merkle-mountain-range") (r "^0.5.2") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.113.0-rc1") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.113.0-rc1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "golomb-coded-set") (r "^0.2.0") (d #t) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.5") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)))) (h "0wwi2m52hnjshmwr50v323hcvknqgi4768yp23rb82ai8pyccrvs")))

(define-public crate-ckb-types-0.113.0-rc2 (c (n "ckb-types") (v "0.113.0-rc2") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.113.0-rc2") (d #t) (k 0)) (d (n "ckb-constant") (r "=0.113.0-rc2") (d #t) (k 0)) (d (n "ckb-error") (r "=0.113.0-rc2") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.113.0-rc2") (d #t) (k 0)) (d (n "ckb-gen-types") (r "=0.113.0-rc2") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.113.0-rc2") (d #t) (k 0)) (d (n "ckb-merkle-mountain-range") (r "^0.5.2") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.113.0-rc2") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.113.0-rc2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "golomb-coded-set") (r "^0.2.0") (d #t) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.5") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)))) (h "0bkbrhc9agahzgnmwfgwmdq8rfxw9rmih1mkc326rns425qi7dfv")))

(define-public crate-ckb-types-0.113.0-rc3 (c (n "ckb-types") (v "0.113.0-rc3") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.113.0-rc3") (d #t) (k 0)) (d (n "ckb-constant") (r "=0.113.0-rc3") (d #t) (k 0)) (d (n "ckb-error") (r "=0.113.0-rc3") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.113.0-rc3") (d #t) (k 0)) (d (n "ckb-gen-types") (r "=0.113.0-rc3") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.113.0-rc3") (d #t) (k 0)) (d (n "ckb-merkle-mountain-range") (r "^0.5.2") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.113.0-rc3") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.113.0-rc3") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "golomb-coded-set") (r "^0.2.0") (d #t) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.5") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)))) (h "06j5f0qi7bhkyiyhmvyvmcs4y77ncymfmkxy2057z4qqd0a88g8x")))

(define-public crate-ckb-types-0.113.0 (c (n "ckb-types") (v "0.113.0") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.113.0") (d #t) (k 0)) (d (n "ckb-constant") (r "=0.113.0") (d #t) (k 0)) (d (n "ckb-error") (r "=0.113.0") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.113.0") (d #t) (k 0)) (d (n "ckb-gen-types") (r "=0.113.0") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.113.0") (d #t) (k 0)) (d (n "ckb-merkle-mountain-range") (r "^0.5.2") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.113.0") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.113.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "golomb-coded-set") (r "^0.2.0") (d #t) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.5") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)))) (h "1ww0xn1jkbx28r9ii4k2mgzrk4qwgla0cwz9q3giig5lxql1x2pb")))

(define-public crate-ckb-types-0.113.1-rc1 (c (n "ckb-types") (v "0.113.1-rc1") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.113.1-rc1") (d #t) (k 0)) (d (n "ckb-constant") (r "=0.113.1-rc1") (d #t) (k 0)) (d (n "ckb-error") (r "=0.113.1-rc1") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.113.1-rc1") (d #t) (k 0)) (d (n "ckb-gen-types") (r "=0.113.1-rc1") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.113.1-rc1") (d #t) (k 0)) (d (n "ckb-merkle-mountain-range") (r "^0.5.2") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.113.1-rc1") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.113.1-rc1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "golomb-coded-set") (r "^0.2.0") (d #t) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.5") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)))) (h "1jqzilwl8r76dcjc36wj143h11v7mv1k775zn5g0axg1ndkm3ykg")))

(define-public crate-ckb-types-0.114.0-rc1 (c (n "ckb-types") (v "0.114.0-rc1") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.114.0-rc1") (d #t) (k 0)) (d (n "ckb-constant") (r "=0.114.0-rc1") (d #t) (k 0)) (d (n "ckb-error") (r "=0.114.0-rc1") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.114.0-rc1") (d #t) (k 0)) (d (n "ckb-gen-types") (r "=0.114.0-rc1") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.114.0-rc1") (d #t) (k 0)) (d (n "ckb-merkle-mountain-range") (r "^0.5.2") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.114.0-rc1") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.114.0-rc1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "golomb-coded-set") (r "^0.2.0") (d #t) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.5") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)))) (h "13ar0azj5vc1n29qn98sxx5ic48fd8rfhh36nv74lahr789m7cdw")))

(define-public crate-ckb-types-0.113.1-rc2 (c (n "ckb-types") (v "0.113.1-rc2") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.113.1-rc2") (d #t) (k 0)) (d (n "ckb-constant") (r "=0.113.1-rc2") (d #t) (k 0)) (d (n "ckb-error") (r "=0.113.1-rc2") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.113.1-rc2") (d #t) (k 0)) (d (n "ckb-gen-types") (r "=0.113.1-rc2") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.113.1-rc2") (d #t) (k 0)) (d (n "ckb-merkle-mountain-range") (r "^0.5.2") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.113.1-rc2") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.113.1-rc2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "golomb-coded-set") (r "^0.2.0") (d #t) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.5") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)))) (h "1qpg7fv9fhgirggybqs2jz15gwgq13h0y21rlk5xb2bffrbk57bm")))

(define-public crate-ckb-types-0.113.1 (c (n "ckb-types") (v "0.113.1") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.113.1") (d #t) (k 0)) (d (n "ckb-constant") (r "=0.113.1") (d #t) (k 0)) (d (n "ckb-error") (r "=0.113.1") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.113.1") (d #t) (k 0)) (d (n "ckb-gen-types") (r "=0.113.1") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.113.1") (d #t) (k 0)) (d (n "ckb-merkle-mountain-range") (r "^0.5.2") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.113.1") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.113.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "golomb-coded-set") (r "^0.2.0") (d #t) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.5") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)))) (h "1chpkv4mdad98c7v9yybi6xl59g35as0sh1xkl0r9mjcw9zgzf8h")))

(define-public crate-ckb-types-0.114.0-rc2 (c (n "ckb-types") (v "0.114.0-rc2") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.114.0-rc2") (d #t) (k 0)) (d (n "ckb-constant") (r "=0.114.0-rc2") (d #t) (k 0)) (d (n "ckb-error") (r "=0.114.0-rc2") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.114.0-rc2") (d #t) (k 0)) (d (n "ckb-gen-types") (r "=0.114.0-rc2") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.114.0-rc2") (d #t) (k 0)) (d (n "ckb-merkle-mountain-range") (r "^0.5.2") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.114.0-rc2") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.114.0-rc2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "golomb-coded-set") (r "^0.2.0") (d #t) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.5") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)))) (h "196ila5fs80nz0sx8gll4z8f03nmc2d05l517xl2pm81d4ai8g4s")))

(define-public crate-ckb-types-0.114.0-rc3 (c (n "ckb-types") (v "0.114.0-rc3") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.114.0-rc3") (d #t) (k 0)) (d (n "ckb-constant") (r "=0.114.0-rc3") (d #t) (k 0)) (d (n "ckb-error") (r "=0.114.0-rc3") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.114.0-rc3") (d #t) (k 0)) (d (n "ckb-gen-types") (r "=0.114.0-rc3") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.114.0-rc3") (d #t) (k 0)) (d (n "ckb-merkle-mountain-range") (r "^0.5.2") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.114.0-rc3") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.114.0-rc3") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "golomb-coded-set") (r "^0.2.0") (d #t) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.5") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)))) (h "1cka0kkzipbi86f610civlzr4hla4hvg8hbiidmgwbfykc0rljh9")))

(define-public crate-ckb-types-0.114.0 (c (n "ckb-types") (v "0.114.0") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.114.0") (d #t) (k 0)) (d (n "ckb-constant") (r "=0.114.0") (d #t) (k 0)) (d (n "ckb-error") (r "=0.114.0") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.114.0") (d #t) (k 0)) (d (n "ckb-gen-types") (r "=0.114.0") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.114.0") (d #t) (k 0)) (d (n "ckb-merkle-mountain-range") (r "^0.5.2") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.114.0") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.114.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "golomb-coded-set") (r "^0.2.0") (d #t) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.5") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)))) (h "1d6jb6rwipy0pgmmal1kx0lymmlwl4li6wv2q6pb75gyrmx8aqhf")))

(define-public crate-ckb-types-0.115.0-pre (c (n "ckb-types") (v "0.115.0-pre") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.115.0-pre") (d #t) (k 0)) (d (n "ckb-constant") (r "=0.115.0-pre") (d #t) (k 0)) (d (n "ckb-error") (r "=0.115.0-pre") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.115.0-pre") (d #t) (k 0)) (d (n "ckb-gen-types") (r "=0.115.0-pre") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.115.0-pre") (d #t) (k 0)) (d (n "ckb-merkle-mountain-range") (r "^0.5.2") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.115.0-pre") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.115.0-pre") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "golomb-coded-set") (r "^0.2.0") (d #t) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.5") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)))) (h "1nsj89bq457shifsmvcjcnnnq0kdig8ryk9pjz7x0hwxi4yasbz6")))

(define-public crate-ckb-types-0.115.0-rc1 (c (n "ckb-types") (v "0.115.0-rc1") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.115.0-rc1") (d #t) (k 0)) (d (n "ckb-constant") (r "=0.115.0-rc1") (d #t) (k 0)) (d (n "ckb-error") (r "=0.115.0-rc1") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.115.0-rc1") (d #t) (k 0)) (d (n "ckb-gen-types") (r "=0.115.0-rc1") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.115.0-rc1") (d #t) (k 0)) (d (n "ckb-merkle-mountain-range") (r "^0.5.2") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.115.0-rc1") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.115.0-rc1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "golomb-coded-set") (r "^0.2.0") (d #t) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.5") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)))) (h "1q89gbc186p2s1wacaa1yc0s9i18a56gdv6c3vsnnkbiyqznwwvg")))

(define-public crate-ckb-types-0.115.0-rc2 (c (n "ckb-types") (v "0.115.0-rc2") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.115.0-rc2") (d #t) (k 0)) (d (n "ckb-constant") (r "=0.115.0-rc2") (d #t) (k 0)) (d (n "ckb-error") (r "=0.115.0-rc2") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.115.0-rc2") (d #t) (k 0)) (d (n "ckb-gen-types") (r "=0.115.0-rc2") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.115.0-rc2") (d #t) (k 0)) (d (n "ckb-merkle-mountain-range") (r "^0.5.2") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.115.0-rc2") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.115.0-rc2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "golomb-coded-set") (r "^0.2.0") (d #t) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.5") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)))) (h "1379nqjkca1jcn637rxjazi5d02nsabqh0mmqajb4bdpkf59c1av")))

(define-public crate-ckb-types-0.115.0 (c (n "ckb-types") (v "0.115.0") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.115.0") (d #t) (k 0)) (d (n "ckb-constant") (r "=0.115.0") (d #t) (k 0)) (d (n "ckb-error") (r "=0.115.0") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.115.0") (d #t) (k 0)) (d (n "ckb-gen-types") (r "=0.115.0") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.115.0") (d #t) (k 0)) (d (n "ckb-merkle-mountain-range") (r "^0.5.2") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.115.0") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.115.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "golomb-coded-set") (r "^0.2.0") (d #t) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.5") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)))) (h "18hjnjsvz3q4nihmic1sj3wkbyl28qwch82n03d9ih41gg8dr7kp")))

(define-public crate-ckb-types-0.116.0-rc1 (c (n "ckb-types") (v "0.116.0-rc1") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.116.0-rc1") (d #t) (k 0)) (d (n "ckb-constant") (r "=0.116.0-rc1") (d #t) (k 0)) (d (n "ckb-error") (r "=0.116.0-rc1") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.116.0-rc1") (d #t) (k 0)) (d (n "ckb-gen-types") (r "=0.116.0-rc1") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.116.0-rc1") (d #t) (k 0)) (d (n "ckb-merkle-mountain-range") (r "^0.5.2") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.116.0-rc1") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.116.0-rc1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "golomb-coded-set") (r "^0.2.0") (d #t) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.5") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)))) (h "1ar36pbv6sdgi74h6a42p26h3nzh1lanrj3jk9gfxmyq0sqb56gg")))

(define-public crate-ckb-types-0.116.0-rc2 (c (n "ckb-types") (v "0.116.0-rc2") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.116.0-rc2") (d #t) (k 0)) (d (n "ckb-constant") (r "=0.116.0-rc2") (d #t) (k 0)) (d (n "ckb-error") (r "=0.116.0-rc2") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.116.0-rc2") (d #t) (k 0)) (d (n "ckb-gen-types") (r "=0.116.0-rc2") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.116.0-rc2") (d #t) (k 0)) (d (n "ckb-merkle-mountain-range") (r "^0.5.2") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.116.0-rc2") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.116.0-rc2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "golomb-coded-set") (r "^0.2.0") (d #t) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.5") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)))) (h "07sppdxllfm7avvayc2891gjpyhi32sclcr9fr1q64liz7b67l0h")))

(define-public crate-ckb-types-0.116.0 (c (n "ckb-types") (v "0.116.0") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.116.0") (d #t) (k 0)) (d (n "ckb-constant") (r "=0.116.0") (d #t) (k 0)) (d (n "ckb-error") (r "=0.116.0") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.116.0") (d #t) (k 0)) (d (n "ckb-gen-types") (r "=0.116.0") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.116.0") (d #t) (k 0)) (d (n "ckb-merkle-mountain-range") (r "^0.5.2") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.116.0") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.116.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "golomb-coded-set") (r "^0.2.0") (d #t) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.5") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)))) (h "09i3cd5x2hyd48v3fvk03s216m0rldmw58ld43nia437w6jhwhb5") (y #t)))

(define-public crate-ckb-types-0.116.1 (c (n "ckb-types") (v "0.116.1") (d (list (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ckb-channel") (r "=0.116.1") (d #t) (k 0)) (d (n "ckb-constant") (r "=0.116.1") (d #t) (k 0)) (d (n "ckb-error") (r "=0.116.1") (d #t) (k 0)) (d (n "ckb-fixed-hash") (r "=0.116.1") (d #t) (k 0)) (d (n "ckb-gen-types") (r "=0.116.1") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.116.1") (d #t) (k 0)) (d (n "ckb-merkle-mountain-range") (r "^0.5.2") (d #t) (k 0)) (d (n "ckb-occupied-capacity") (r "=0.116.1") (d #t) (k 0)) (d (n "ckb-rational") (r "=0.116.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.0") (f (quote ("display"))) (k 0)) (d (n "golomb-coded-set") (r "^0.2.0") (d #t) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "molecule") (r "=0.7.5") (d #t) (k 0)) (d (n "numext-fixed-uint") (r "^0.1") (f (quote ("support_rand" "support_heapsize" "support_serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)))) (h "178ff0yqbc7is4s1lhxckxkrs3w6cxxn2cxj4frl035bd8fcq1cv")))

