(define-module (crates-io ck b- ckb-sdk) #:use-module (crates-io))

(define-public crate-ckb-sdk-0.1.0 (c (n "ckb-sdk") (v "0.1.0") (h "0i35g9d66b21jyqdyqrs8pw36xfgpbwrfzvakw7fnqh0qs4ldnsh")))

(define-public crate-ckb-sdk-0.39.1 (c (n "ckb-sdk") (v "0.39.1") (d (list (d (n "aes-ctr") (r "^0.3.0") (d #t) (k 0)) (d (n "bech32") (r "^0.6.0") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.3.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "ckb-crypto") (r "=0.39.1") (f (quote ("secp"))) (d #t) (k 0)) (d (n "ckb-error") (r "=0.39.1") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.39.1") (d #t) (k 0)) (d (n "ckb-jsonrpc-types") (r "=0.39.1") (d #t) (k 0)) (d (n "ckb-resource") (r "=0.39.1") (d #t) (k 0)) (d (n "ckb-script") (r "=0.39.1") (d #t) (k 0)) (d (n "ckb-sdk-types") (r "=0.39.1") (d #t) (k 0)) (d (n "ckb-types") (r "=0.39.1") (d #t) (k 0)) (d (n "ckb-vm") (r "=0.19.3") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "faster-hex") (r "^0.4") (d #t) (k 0)) (d (n "fnv") (r "^1.0.3") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.9") (d #t) (k 0)) (d (n "scrypt") (r "^0.2.0") (d #t) (k 0)) (d (n "secp256k1") (r "^0.19") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4") (d #t) (k 0)) (d (n "uuid") (r "^0.7.4") (f (quote ("v4"))) (d #t) (k 0)))) (h "096cjxzrhklmmjj6s190pjsz3slmcjgkv9b1kznkk6igfqdi1wqc")))

(define-public crate-ckb-sdk-0.40.0 (c (n "ckb-sdk") (v "0.40.0") (d (list (d (n "aes-ctr") (r "^0.6.0") (d #t) (k 0)) (d (n "bech32") (r "^0.6.0") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.3.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "ckb-crypto") (r "=0.40.0") (f (quote ("secp"))) (d #t) (k 0)) (d (n "ckb-error") (r "=0.40.0") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.40.0") (d #t) (k 0)) (d (n "ckb-jsonrpc-types") (r "=0.40.0") (d #t) (k 0)) (d (n "ckb-resource") (r "=0.40.0") (d #t) (k 0)) (d (n "ckb-script") (r "=0.40.0") (d #t) (k 0)) (d (n "ckb-sdk-types") (r "=0.40.0") (d #t) (k 0)) (d (n "ckb-types") (r "=0.40.0") (d #t) (k 0)) (d (n "ckb-vm") (r "=0.19.3") (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "faster-hex") (r "^0.4") (d #t) (k 0)) (d (n "fnv") (r "^1.0.3") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.2.0") (d #t) (k 0)) (d (n "secp256k1") (r "^0.19") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4") (d #t) (k 0)) (d (n "uuid") (r "^0.7.4") (f (quote ("v4"))) (d #t) (k 0)))) (h "1sh2m7ks9nm8kspl7pfdjyq00v28nirc871rgbwyz57bf5nfd52k")))

(define-public crate-ckb-sdk-0.42.0 (c (n "ckb-sdk") (v "0.42.0") (d (list (d (n "aes-ctr") (r "^0.6.0") (d #t) (k 0)) (d (n "bech32") (r "^0.6.0") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.3.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "ckb-crypto") (r "=0.42.0") (f (quote ("secp"))) (d #t) (k 0)) (d (n "ckb-error") (r "=0.42.0") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.42.0") (d #t) (k 0)) (d (n "ckb-jsonrpc-types") (r "=0.42.0") (d #t) (k 0)) (d (n "ckb-resource") (r "=0.42.0") (d #t) (k 0)) (d (n "ckb-script") (r "=0.42.0") (d #t) (k 0)) (d (n "ckb-sdk-types") (r "=0.42.0") (d #t) (k 0)) (d (n "ckb-types") (r "=0.42.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "faster-hex") (r "^0.4") (d #t) (k 0)) (d (n "fnv") (r "^1.0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.2.0") (d #t) (k 0)) (d (n "secp256k1") (r "^0.19") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tokio-util") (r "^0.6") (f (quote ("codec"))) (d #t) (k 0)) (d (n "uuid") (r "^0.7.4") (f (quote ("v4"))) (d #t) (k 0)))) (h "1i8ifd1jhqbkhh5apvphqssk77cz0n1pbl0s66v11rzxhal7d803")))

(define-public crate-ckb-sdk-0.43.0 (c (n "ckb-sdk") (v "0.43.0") (d (list (d (n "aes-ctr") (r "^0.6.0") (d #t) (k 0)) (d (n "bech32") (r "^0.6.0") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.3.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "ckb-crypto") (r "=0.43.0") (f (quote ("secp"))) (d #t) (k 0)) (d (n "ckb-error") (r "=0.43.0") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.43.0") (d #t) (k 0)) (d (n "ckb-jsonrpc-types") (r "=0.43.0") (d #t) (k 0)) (d (n "ckb-resource") (r "=0.43.0") (d #t) (k 0)) (d (n "ckb-script") (r "=0.43.0") (d #t) (k 0)) (d (n "ckb-sdk-types") (r "=0.43.0") (d #t) (k 0)) (d (n "ckb-types") (r "=0.43.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "faster-hex") (r "^0.4") (d #t) (k 0)) (d (n "fnv") (r "^1.0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.2.0") (d #t) (k 0)) (d (n "secp256k1") (r "^0.19") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tokio-util") (r "^0.6") (f (quote ("codec"))) (d #t) (k 0)) (d (n "uuid") (r "^0.7.4") (f (quote ("v4"))) (d #t) (k 0)))) (h "11ii2493ni8ws9r1ihd8ykcs874krhgqb7s7lyj1n4rcgxd29w7c")))

(define-public crate-ckb-sdk-0.100.0-rc2 (c (n "ckb-sdk") (v "0.100.0-rc2") (d (list (d (n "aes-ctr") (r "^0.6.0") (d #t) (k 0)) (d (n "bech32") (r "^0.6.0") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.3.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "ckb-chain-spec") (r "=0.100.0-rc2") (d #t) (k 0)) (d (n "ckb-crypto") (r "=0.100.0-rc2") (f (quote ("secp"))) (d #t) (k 0)) (d (n "ckb-error") (r "=0.100.0-rc2") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.100.0-rc2") (d #t) (k 0)) (d (n "ckb-jsonrpc-types") (r "=0.100.0-rc2") (d #t) (k 0)) (d (n "ckb-resource") (r "=0.100.0-rc2") (d #t) (k 0)) (d (n "ckb-script") (r "=0.100.0-rc2") (d #t) (k 0)) (d (n "ckb-sdk-types") (r "=0.100.0-rc2") (d #t) (k 0)) (d (n "ckb-types") (r "=0.100.0-rc2") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "faster-hex") (r "^0.4") (d #t) (k 0)) (d (n "fnv") (r "^1.0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "jsonrpc-core") (r "^17") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.2.0") (d #t) (k 0)) (d (n "secp256k1") (r "^0.19") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tokio-util") (r "^0.6") (f (quote ("codec"))) (d #t) (k 0)) (d (n "uuid") (r "^0.7.4") (f (quote ("v4"))) (d #t) (k 0)))) (h "0jyzvfyvlal0ndjwxaj4gqrjs6lmb7ylxxdh7pv5nbgm18279s26")))

(define-public crate-ckb-sdk-0.100.0-rc5 (c (n "ckb-sdk") (v "0.100.0-rc5") (d (list (d (n "aes-ctr") (r "^0.6.0") (d #t) (k 0)) (d (n "bech32") (r "^0.6.0") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.3.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "ckb-chain-spec") (r "=0.100.0-rc5") (d #t) (k 0)) (d (n "ckb-crypto") (r "=0.100.0-rc5") (f (quote ("secp"))) (d #t) (k 0)) (d (n "ckb-error") (r "=0.100.0-rc5") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.100.0-rc5") (d #t) (k 0)) (d (n "ckb-jsonrpc-types") (r "=0.100.0-rc5") (d #t) (k 0)) (d (n "ckb-resource") (r "=0.100.0-rc5") (d #t) (k 0)) (d (n "ckb-script") (r "=0.100.0-rc5") (d #t) (k 0)) (d (n "ckb-sdk-types") (r "=0.100.0-rc5") (d #t) (k 0)) (d (n "ckb-types") (r "=0.100.0-rc5") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "faster-hex") (r "^0.4") (d #t) (k 0)) (d (n "fnv") (r "^1.0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "jsonrpc-core") (r "^18") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.2.0") (d #t) (k 0)) (d (n "secp256k1") (r "^0.19") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tokio-util") (r "^0.6") (f (quote ("codec"))) (d #t) (k 0)) (d (n "uuid") (r "^0.7.4") (f (quote ("v4"))) (d #t) (k 0)))) (h "0qp7nh57bdd4kbxzfdbsac6a54kbkj4xwyfd752kwf8c6141py2g")))

(define-public crate-ckb-sdk-0.100.0 (c (n "ckb-sdk") (v "0.100.0") (d (list (d (n "aes-ctr") (r "^0.6.0") (d #t) (k 0)) (d (n "bech32") (r "^0.6.0") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.3.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "ckb-chain-spec") (r "=0.100.0") (d #t) (k 0)) (d (n "ckb-crypto") (r "=0.100.0") (f (quote ("secp"))) (d #t) (k 0)) (d (n "ckb-error") (r "=0.100.0") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.100.0") (d #t) (k 0)) (d (n "ckb-jsonrpc-types") (r "=0.100.0") (d #t) (k 0)) (d (n "ckb-resource") (r "=0.100.0") (d #t) (k 0)) (d (n "ckb-script") (r "=0.100.0") (d #t) (k 0)) (d (n "ckb-sdk-types") (r "=0.100.0") (d #t) (k 0)) (d (n "ckb-types") (r "=0.100.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "faster-hex") (r "^0.4") (d #t) (k 0)) (d (n "fnv") (r "^1.0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "jsonrpc-core") (r "^18") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.2.0") (d #t) (k 0)) (d (n "secp256k1") (r "^0.19") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tokio-util") (r "^0.6") (f (quote ("codec"))) (d #t) (k 0)) (d (n "uuid") (r "^0.7.4") (f (quote ("v4"))) (d #t) (k 0)))) (h "0mjdkrrb1ywcxjd5x0yhc1ixdx58lzrh9z6a7prg7214n0l4riqm")))

(define-public crate-ckb-sdk-0.101.0 (c (n "ckb-sdk") (v "0.101.0") (d (list (d (n "aes-ctr") (r "^0.6.0") (d #t) (k 0)) (d (n "bech32") (r "^0.8.1") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.3.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "ckb-chain-spec") (r "=0.101.0") (d #t) (k 0)) (d (n "ckb-crypto") (r "=0.101.0") (f (quote ("secp"))) (d #t) (k 0)) (d (n "ckb-error") (r "=0.101.0") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.101.0") (d #t) (k 0)) (d (n "ckb-jsonrpc-types") (r "=0.101.0") (d #t) (k 0)) (d (n "ckb-resource") (r "=0.101.0") (d #t) (k 0)) (d (n "ckb-script") (r "=0.101.0") (d #t) (k 0)) (d (n "ckb-sdk-types") (r "=0.101.0") (d #t) (k 0)) (d (n "ckb-types") (r "=0.101.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "faster-hex") (r "^0.4") (d #t) (k 0)) (d (n "fnv") (r "^1.0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "jsonrpc-core") (r "^18") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.2.0") (d #t) (k 0)) (d (n "secp256k1") (r "^0.19") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tokio-util") (r "^0.6") (f (quote ("codec"))) (d #t) (k 0)) (d (n "uuid") (r "^0.7.4") (f (quote ("v4"))) (d #t) (k 0)))) (h "1fi99lhl1ziihlw4sln5f6m2v567722zi6h3y0rxlv7n95m1bhpz")))

(define-public crate-ckb-sdk-0.101.1 (c (n "ckb-sdk") (v "0.101.1") (d (list (d (n "aes-ctr") (r "^0.6.0") (d #t) (k 0)) (d (n "bech32") (r "^0.8.1") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.3.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "ckb-chain-spec") (r "=0.101.0") (d #t) (k 0)) (d (n "ckb-crypto") (r "=0.101.0") (f (quote ("secp"))) (d #t) (k 0)) (d (n "ckb-error") (r "=0.101.0") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.101.0") (d #t) (k 0)) (d (n "ckb-jsonrpc-types") (r "=0.101.0") (d #t) (k 0)) (d (n "ckb-resource") (r "=0.101.0") (d #t) (k 0)) (d (n "ckb-script") (r "=0.101.0") (d #t) (k 0)) (d (n "ckb-sdk-types") (r "=0.101.0") (d #t) (k 0)) (d (n "ckb-types") (r "=0.101.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "faster-hex") (r "^0.4") (d #t) (k 0)) (d (n "fnv") (r "^1.0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "jsonrpc-core") (r "^18") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.2.0") (d #t) (k 0)) (d (n "secp256k1") (r "^0.19") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tokio-util") (r "^0.6") (f (quote ("codec"))) (d #t) (k 0)) (d (n "uuid") (r "^0.7.4") (f (quote ("v4"))) (d #t) (k 0)))) (h "1d1qm0ma6bhl8vphvk50skm5wa63908jvzbr4aj3f2xwcf7116hq")))

(define-public crate-ckb-sdk-0.101.3 (c (n "ckb-sdk") (v "0.101.3") (d (list (d (n "aes-ctr") (r "^0.6.0") (d #t) (k 0)) (d (n "bech32") (r "^0.8.1") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.3.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "ckb-chain-spec") (r "=0.101.3") (d #t) (k 0)) (d (n "ckb-crypto") (r "=0.101.3") (f (quote ("secp"))) (d #t) (k 0)) (d (n "ckb-error") (r "=0.101.3") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.101.3") (d #t) (k 0)) (d (n "ckb-jsonrpc-types") (r "=0.101.3") (d #t) (k 0)) (d (n "ckb-resource") (r "=0.101.3") (d #t) (k 0)) (d (n "ckb-script") (r "=0.101.3") (d #t) (k 0)) (d (n "ckb-sdk-types") (r "=0.101.3") (d #t) (k 0)) (d (n "ckb-types") (r "=0.101.3") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "faster-hex") (r "^0.6") (d #t) (k 0)) (d (n "fnv") (r "^1.0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "jsonrpc-core") (r "^18") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.2.0") (d #t) (k 0)) (d (n "secp256k1") (r "^0.19") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tokio-util") (r "^0.6") (f (quote ("codec"))) (d #t) (k 0)) (d (n "uuid") (r "^0.7.4") (f (quote ("v4"))) (d #t) (k 0)))) (h "0ds7wvz8vbasz6plhv1mbwb03j29vvgx06sgrcpnplxkcv6va245")))

(define-public crate-ckb-sdk-1.0.0 (c (n "ckb-sdk") (v "1.0.0") (d (list (d (n "bech32") (r "^0.8.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "ckb-chain-spec") (r "=0.103.0") (o #t) (d #t) (k 0)) (d (n "ckb-crypto") (r "=0.103.0") (f (quote ("secp"))) (d #t) (k 0)) (d (n "ckb-dao-utils") (r "=0.103.0") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.103.0") (d #t) (k 0)) (d (n "ckb-jsonrpc-types") (r "=0.103.0") (d #t) (k 0)) (d (n "ckb-mock-tx-types") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "ckb-resource") (r "=0.103.0") (d #t) (k 0)) (d (n "ckb-script") (r "=0.103.0") (o #t) (d #t) (k 0)) (d (n "ckb-traits") (r "=0.103.0") (d #t) (k 0)) (d (n "ckb-types") (r "=0.103.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.9") (f (quote ("derive"))) (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "httpmock") (r "^0.6") (d #t) (k 2)) (d (n "jsonrpc-core") (r "^18") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (d #t) (k 0)) (d (n "secp256k1") (r "^0.20") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tokio-util") (r "^0.6") (f (quote ("codec"))) (d #t) (k 0)))) (h "0z4m4a7kav7kqb2a2bb8bzpkaznpyr7rpda11as03nx1g0sdd5sz") (f (quote (("test") ("default"))))))

(define-public crate-ckb-sdk-1.0.1 (c (n "ckb-sdk") (v "1.0.1") (d (list (d (n "bech32") (r "^0.8.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "ckb-chain-spec") (r "=0.103.0") (o #t) (d #t) (k 0)) (d (n "ckb-crypto") (r "=0.103.0") (f (quote ("secp"))) (d #t) (k 0)) (d (n "ckb-dao-utils") (r "=0.103.0") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.103.0") (d #t) (k 0)) (d (n "ckb-jsonrpc-types") (r "=0.103.0") (d #t) (k 0)) (d (n "ckb-mock-tx-types") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "ckb-resource") (r "=0.103.0") (d #t) (k 0)) (d (n "ckb-script") (r "=0.103.0") (o #t) (d #t) (k 0)) (d (n "ckb-traits") (r "=0.103.0") (d #t) (k 0)) (d (n "ckb-types") (r "=0.103.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.9") (f (quote ("derive"))) (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "httpmock") (r "^0.6") (d #t) (k 2)) (d (n "jsonrpc-core") (r "^18") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (d #t) (k 0)) (d (n "secp256k1") (r "^0.20") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tokio-util") (r "^0.6") (f (quote ("codec"))) (d #t) (k 0)))) (h "0yc0lzsc2n4pz922hyz3aax4vx0wm45i7p0jjg6yirrsfflxb2aw") (f (quote (("test") ("default"))))))

(define-public crate-ckb-sdk-1.1.0 (c (n "ckb-sdk") (v "1.1.0") (d (list (d (n "async-global-executor") (r "=2.0.4") (d #t) (k 2)) (d (n "bech32") (r "^0.8.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "ckb-chain-spec") (r "=0.104.0") (o #t) (d #t) (k 0)) (d (n "ckb-crypto") (r "=0.104.0") (f (quote ("secp"))) (d #t) (k 0)) (d (n "ckb-dao-utils") (r "=0.104.0") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.104.0") (d #t) (k 0)) (d (n "ckb-jsonrpc-types") (r "=0.104.0") (d #t) (k 0)) (d (n "ckb-mock-tx-types") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ckb-resource") (r "=0.104.0") (d #t) (k 0)) (d (n "ckb-script") (r "=0.104.0") (o #t) (d #t) (k 0)) (d (n "ckb-traits") (r "=0.104.0") (d #t) (k 0)) (d (n "ckb-types") (r "=0.104.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.9") (f (quote ("derive"))) (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "httpmock") (r "^0.6") (d #t) (k 2)) (d (n "jsonrpc-core") (r "^18") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (d #t) (k 0)) (d (n "secp256k1") (r "^0.20") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tokio-util") (r "^0.6") (f (quote ("codec"))) (d #t) (k 0)))) (h "0vq2sy1g1r8xcss4l8ll71c31i3fl076a71jd6qj4phr28gcswqy") (f (quote (("test") ("default"))))))

(define-public crate-ckb-sdk-2.0.0 (c (n "ckb-sdk") (v "2.0.0") (d (list (d (n "async-global-executor") (r "=2.0.4") (d #t) (k 2)) (d (n "bech32") (r "^0.8.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "ckb-chain-spec") (r "=0.104.0") (o #t) (d #t) (k 0)) (d (n "ckb-crypto") (r "=0.104.0") (f (quote ("secp"))) (d #t) (k 0)) (d (n "ckb-dao-utils") (r "=0.104.0") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.104.0") (d #t) (k 0)) (d (n "ckb-jsonrpc-types") (r "=0.104.0") (d #t) (k 0)) (d (n "ckb-mock-tx-types") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ckb-resource") (r "=0.104.0") (d #t) (k 0)) (d (n "ckb-script") (r "=0.104.0") (o #t) (d #t) (k 0)) (d (n "ckb-traits") (r "=0.104.0") (d #t) (k 0)) (d (n "ckb-types") (r "=0.104.0") (d #t) (k 0)) (d (n "ckb-vm-definitions") (r "=0.21.3") (d #t) (k 2)) (d (n "clap") (r "^3.1.9") (f (quote ("derive"))) (d #t) (k 2)) (d (n "enum-repr-derive") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "httpmock") (r "^0.6") (d #t) (k 2)) (d (n "jsonrpc-core") (r "^18") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (d #t) (k 0)) (d (n "secp256k1") (r "^0.20") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (d #t) (k 0)) (d (n "sparse-merkle-tree") (r "^0.5.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tokio-util") (r "^0.6") (f (quote ("codec"))) (d #t) (k 0)))) (h "0fg2zjjgkqzw19p74shrw75a7si3hd9lqpsih0a06994gaqwcbz9") (f (quote (("test") ("default"))))))

(define-public crate-ckb-sdk-2.1.0 (c (n "ckb-sdk") (v "2.1.0") (d (list (d (n "anyhow") (r "^1.0.63") (d #t) (k 0)) (d (n "async-global-executor") (r "=2.0.4") (d #t) (k 2)) (d (n "bech32") (r "^0.8.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "ckb-chain-spec") (r "=0.104.0") (o #t) (d #t) (k 0)) (d (n "ckb-crypto") (r "=0.104.0") (f (quote ("secp"))) (d #t) (k 0)) (d (n "ckb-dao-utils") (r "=0.104.0") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.104.0") (d #t) (k 0)) (d (n "ckb-jsonrpc-types") (r "=0.104.0") (d #t) (k 0)) (d (n "ckb-mock-tx-types") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ckb-resource") (r "=0.104.0") (d #t) (k 0)) (d (n "ckb-script") (r "=0.104.0") (o #t) (d #t) (k 0)) (d (n "ckb-traits") (r "=0.104.0") (d #t) (k 0)) (d (n "ckb-types") (r "=0.104.0") (d #t) (k 0)) (d (n "ckb-vm-definitions") (r "=0.21.3") (d #t) (k 2)) (d (n "clap") (r "^3.1.9") (f (quote ("derive"))) (d #t) (k 2)) (d (n "enum-repr-derive") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "httpmock") (r "^0.6") (d #t) (k 2)) (d (n "jsonrpc-core") (r "^18") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (d #t) (k 0)) (d (n "secp256k1") (r "^0.20") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (d #t) (k 0)) (d (n "sparse-merkle-tree") (r "^0.5.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tokio-util") (r "^0.6") (f (quote ("codec"))) (d #t) (k 0)))) (h "1izdkzcvhnaxhd9l3qdhja5q1lac4yczx37brv5s829bhlgmnvaa") (f (quote (("test") ("default"))))))

(define-public crate-ckb-sdk-2.2.0 (c (n "ckb-sdk") (v "2.2.0") (d (list (d (n "anyhow") (r "^1.0.63") (d #t) (k 0)) (d (n "async-global-executor") (r "=2.0.4") (d #t) (k 2)) (d (n "bech32") (r "^0.8.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "ckb-chain-spec") (r "=0.104.0") (o #t) (d #t) (k 0)) (d (n "ckb-crypto") (r "=0.104.0") (f (quote ("secp"))) (d #t) (k 0)) (d (n "ckb-dao-utils") (r "=0.104.0") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.104.0") (d #t) (k 0)) (d (n "ckb-jsonrpc-types") (r "=0.104.0") (d #t) (k 0)) (d (n "ckb-mock-tx-types") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ckb-resource") (r "=0.104.0") (d #t) (k 0)) (d (n "ckb-script") (r "=0.104.0") (o #t) (d #t) (k 0)) (d (n "ckb-traits") (r "=0.104.0") (d #t) (k 0)) (d (n "ckb-types") (r "=0.104.0") (d #t) (k 0)) (d (n "ckb-vm-definitions") (r "=0.21.3") (d #t) (k 2)) (d (n "clap") (r "^3.1.9") (f (quote ("derive"))) (d #t) (k 2)) (d (n "enum-repr-derive") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "httpmock") (r "^0.6") (d #t) (k 2)) (d (n "jsonrpc-core") (r "^18") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (d #t) (k 0)) (d (n "secp256k1") (r "^0.20") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (d #t) (k 0)) (d (n "sparse-merkle-tree") (r "^0.5.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tokio-util") (r "^0.6") (f (quote ("codec"))) (d #t) (k 0)))) (h "1j48mqdj3as4nifh5jhy955zg954k7xh9k74g25chii5l1z0a5nn") (f (quote (("test") ("default"))))))

(define-public crate-ckb-sdk-2.3.0 (c (n "ckb-sdk") (v "2.3.0") (d (list (d (n "anyhow") (r "^1.0.63") (d #t) (k 0)) (d (n "async-global-executor") (r "=2.0.4") (d #t) (k 2)) (d (n "bech32") (r "^0.8.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "ckb-chain-spec") (r "=0.105.1") (o #t) (d #t) (k 0)) (d (n "ckb-crypto") (r "=0.105.1") (f (quote ("secp"))) (d #t) (k 0)) (d (n "ckb-dao-utils") (r "=0.105.1") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.105.1") (d #t) (k 0)) (d (n "ckb-jsonrpc-types") (r "=0.105.1") (d #t) (k 0)) (d (n "ckb-mock-tx-types") (r "^0.105.1") (o #t) (d #t) (k 0)) (d (n "ckb-resource") (r "=0.105.1") (d #t) (k 0)) (d (n "ckb-script") (r "=0.105.1") (o #t) (d #t) (k 0)) (d (n "ckb-traits") (r "=0.105.1") (d #t) (k 0)) (d (n "ckb-types") (r "=0.105.1") (d #t) (k 0)) (d (n "clap") (r "^3.1.9") (f (quote ("derive"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4") (d #t) (k 0)) (d (n "enum-repr-derive") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "httpmock") (r "^0.6") (d #t) (k 2)) (d (n "jsonrpc-core") (r "^18") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (d #t) (k 0)) (d (n "secp256k1") (r "^0.24") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (d #t) (k 0)) (d (n "sparse-merkle-tree") (r "^0.5.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tokio-util") (r "^0.6") (f (quote ("codec"))) (d #t) (k 0)))) (h "1hq6990f6897rwd69vnldac810vq1a44pajyaql3pq4d9ac1c6r9") (f (quote (("test") ("default"))))))

(define-public crate-ckb-sdk-2.3.1 (c (n "ckb-sdk") (v "2.3.1") (d (list (d (n "anyhow") (r "^1.0.63") (d #t) (k 0)) (d (n "async-global-executor") (r "=2.0.4") (d #t) (k 2)) (d (n "bech32") (r "^0.8.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "ckb-chain-spec") (r "=0.105.1") (o #t) (d #t) (k 0)) (d (n "ckb-crypto") (r "=0.105.1") (f (quote ("secp"))) (d #t) (k 0)) (d (n "ckb-dao-utils") (r "=0.105.1") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.105.1") (d #t) (k 0)) (d (n "ckb-jsonrpc-types") (r "=0.105.1") (d #t) (k 0)) (d (n "ckb-mock-tx-types") (r "^0.105.1") (o #t) (d #t) (k 0)) (d (n "ckb-resource") (r "=0.105.1") (d #t) (k 0)) (d (n "ckb-script") (r "=0.105.1") (o #t) (d #t) (k 0)) (d (n "ckb-traits") (r "=0.105.1") (d #t) (k 0)) (d (n "ckb-types") (r "=0.105.1") (d #t) (k 0)) (d (n "clap") (r "^3.1.9") (f (quote ("derive"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4") (d #t) (k 0)) (d (n "enum-repr-derive") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "httpmock") (r "^0.6") (d #t) (k 2)) (d (n "jsonrpc-core") (r "^18") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (d #t) (k 0)) (d (n "secp256k1") (r "^0.24") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (d #t) (k 0)) (d (n "sparse-merkle-tree") (r "^0.5.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tokio-util") (r "^0.6") (f (quote ("codec"))) (d #t) (k 0)))) (h "0rf5cwpr7fby37v64z4amsva0yl5a85dg6q32dag8z895aavjw0n") (f (quote (("test") ("default"))))))

(define-public crate-ckb-sdk-2.4.0 (c (n "ckb-sdk") (v "2.4.0") (d (list (d (n "anyhow") (r "^1.0.63") (d #t) (k 0)) (d (n "async-global-executor") (r "=2.0.4") (d #t) (k 2)) (d (n "bech32") (r "^0.8.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "ckb-chain-spec") (r "=0.106.0") (o #t) (d #t) (k 0)) (d (n "ckb-crypto") (r "=0.106.0") (f (quote ("secp"))) (d #t) (k 0)) (d (n "ckb-dao-utils") (r "=0.106.0") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.106.0") (d #t) (k 0)) (d (n "ckb-jsonrpc-types") (r "=0.106.0") (d #t) (k 0)) (d (n "ckb-mock-tx-types") (r "^0.106.0") (o #t) (d #t) (k 0)) (d (n "ckb-resource") (r "=0.106.0") (d #t) (k 0)) (d (n "ckb-script") (r "=0.106.0") (d #t) (k 0)) (d (n "ckb-traits") (r "=0.106.0") (d #t) (k 0)) (d (n "ckb-types") (r "=0.106.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.9") (f (quote ("derive"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4") (d #t) (k 0)) (d (n "enum-repr-derive") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "httpmock") (r "^0.6") (d #t) (k 2)) (d (n "jsonrpc-core") (r "^18") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (d #t) (k 0)) (d (n "secp256k1") (r "^0.24") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (d #t) (k 0)) (d (n "sparse-merkle-tree") (r "^0.5.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tokio-util") (r "^0.6") (f (quote ("codec"))) (d #t) (k 0)))) (h "13a474sdzpl6dmg4hczicpnzs553kmrpwrvrcaaiayycj27hpjfd") (f (quote (("test") ("default"))))))

(define-public crate-ckb-sdk-2.5.0 (c (n "ckb-sdk") (v "2.5.0") (d (list (d (n "anyhow") (r "^1.0.63") (d #t) (k 0)) (d (n "async-global-executor") (r "^2.3.1") (d #t) (k 2)) (d (n "bech32") (r "^0.8.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "ckb-chain-spec") (r "^0.108.0") (o #t) (d #t) (k 0)) (d (n "ckb-crypto") (r "=0.108.0") (f (quote ("secp"))) (d #t) (k 0)) (d (n "ckb-dao-utils") (r "=0.108.0") (d #t) (k 0)) (d (n "ckb-hash") (r "=0.108.0") (d #t) (k 0)) (d (n "ckb-jsonrpc-types") (r "=0.108.0") (d #t) (k 0)) (d (n "ckb-mock-tx-types") (r "^0.108.0") (o #t) (d #t) (k 0)) (d (n "ckb-resource") (r "=0.108.0") (d #t) (k 0)) (d (n "ckb-script") (r "=0.108.0") (d #t) (k 0)) (d (n "ckb-traits") (r "=0.108.0") (d #t) (k 0)) (d (n "ckb-types") (r "=0.108.0") (d #t) (k 0)) (d (n "clap") (r "^4.1.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4") (d #t) (k 0)) (d (n "enum-repr-derive") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "httpmock") (r "^0.6") (d #t) (k 2)) (d (n "jsonrpc-core") (r "^18") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (d #t) (k 0)) (d (n "secp256k1") (r "^0.24") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (d #t) (k 0)) (d (n "sparse-merkle-tree") (r "^0.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.7") (f (quote ("codec"))) (d #t) (k 0)))) (h "1haway8ljr0p2pspvh8n9j96lapf9hybryqkjczkaqjpmhh1484b") (f (quote (("test") ("default"))))))

(define-public crate-ckb-sdk-3.0.0 (c (n "ckb-sdk") (v "3.0.0") (d (list (d (n "anyhow") (r "^1.0.63") (d #t) (k 0)) (d (n "async-global-executor") (r "^2.3.1") (d #t) (k 2)) (d (n "bech32") (r "^0.8.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "ckb-chain-spec") (r "^0.111.0") (d #t) (k 0)) (d (n "ckb-crypto") (r "=0.111.0") (f (quote ("secp"))) (d #t) (k 0)) (d (n "ckb-dao-utils") (r "^0.111.0") (d #t) (k 0)) (d (n "ckb-hash") (r "^0.111.0") (d #t) (k 0)) (d (n "ckb-jsonrpc-types") (r "^0.111.0") (d #t) (k 0)) (d (n "ckb-mock-tx-types") (r "^0.111.0") (d #t) (k 0)) (d (n "ckb-resource") (r "^0.111.0") (d #t) (k 0)) (d (n "ckb-script") (r "^0.111.0") (d #t) (k 0)) (d (n "ckb-traits") (r "^0.111.0") (d #t) (k 0)) (d (n "ckb-types") (r "^0.111.0") (d #t) (k 0)) (d (n "clap") (r "^4.1.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4") (d #t) (k 0)) (d (n "derive-getters") (r "^0.2.1") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (d #t) (k 0)) (d (n "enum-repr-derive") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "httpmock") (r "^0.6") (d #t) (k 2)) (d (n "jsonrpc-core") (r "^18") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (k 0)) (d (n "secp256k1") (r "^0.24") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (d #t) (k 0)) (d (n "sparse-merkle-tree") (r "^0.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.7") (f (quote ("codec"))) (d #t) (k 0)))) (h "1m2rnvk9wzci50cyrbpkb53a41165xsiyypiaq2g413vhr131vcx") (f (quote (("test") ("rustls-tls" "reqwest/rustls-tls") ("native-tls-vendored" "reqwest/native-tls-vendored") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-ckb-sdk-3.0.1 (c (n "ckb-sdk") (v "3.0.1") (d (list (d (n "anyhow") (r "^1.0.63") (d #t) (k 0)) (d (n "async-global-executor") (r "^2.3.1") (d #t) (k 2)) (d (n "bech32") (r "^0.8.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "ckb-chain-spec") (r "^0.111.0") (d #t) (k 0)) (d (n "ckb-crypto") (r "=0.111.0") (f (quote ("secp"))) (d #t) (k 0)) (d (n "ckb-dao-utils") (r "^0.111.0") (d #t) (k 0)) (d (n "ckb-hash") (r "^0.111.0") (d #t) (k 0)) (d (n "ckb-jsonrpc-types") (r "^0.111.0") (d #t) (k 0)) (d (n "ckb-mock-tx-types") (r "^0.111.0") (d #t) (k 0)) (d (n "ckb-resource") (r "^0.111.0") (d #t) (k 0)) (d (n "ckb-script") (r "^0.111.0") (d #t) (k 0)) (d (n "ckb-traits") (r "^0.111.0") (d #t) (k 0)) (d (n "ckb-types") (r "^0.111.0") (d #t) (k 0)) (d (n "clap") (r "^4.1.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4") (d #t) (k 0)) (d (n "derive-getters") (r "^0.2.1") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (d #t) (k 0)) (d (n "enum-repr-derive") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "httpmock") (r "^0.6") (d #t) (k 2)) (d (n "jsonrpc-core") (r "^18") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (k 0)) (d (n "secp256k1") (r "^0.24") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (d #t) (k 0)) (d (n "sparse-merkle-tree") (r "^0.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.7") (f (quote ("codec"))) (d #t) (k 0)))) (h "1623ax5qsmm213735kksq66wm0xcd00xmikci91rx7g3x7g1533i") (f (quote (("test") ("rustls-tls" "reqwest/rustls-tls") ("native-tls-vendored" "reqwest/native-tls-vendored") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-ckb-sdk-3.1.0 (c (n "ckb-sdk") (v "3.1.0") (d (list (d (n "anyhow") (r "^1.0.63") (d #t) (k 0)) (d (n "async-global-executor") (r "^2.3.1") (d #t) (k 2)) (d (n "bech32") (r "^0.8.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "ckb-chain-spec") (r "^0.114.0") (d #t) (k 0)) (d (n "ckb-crypto") (r "=0.114.0") (f (quote ("secp"))) (d #t) (k 0)) (d (n "ckb-dao-utils") (r "^0.114.0") (d #t) (k 0)) (d (n "ckb-hash") (r "^0.114.0") (d #t) (k 0)) (d (n "ckb-jsonrpc-types") (r "^0.114.0") (d #t) (k 0)) (d (n "ckb-mock-tx-types") (r "^0.114.0") (d #t) (k 0)) (d (n "ckb-resource") (r "^0.114.0") (d #t) (k 0)) (d (n "ckb-script") (r "^0.114.0") (d #t) (k 0)) (d (n "ckb-traits") (r "^0.114.0") (d #t) (k 0)) (d (n "ckb-types") (r "^0.114.0") (d #t) (k 0)) (d (n "clap") (r "=4.4.18") (f (quote ("derive"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4") (d #t) (k 0)) (d (n "derive-getters") (r "^0.2.1") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (d #t) (k 0)) (d (n "enum-repr-derive") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "httpmock") (r "^0.6") (d #t) (k 2)) (d (n "jsonrpc-core") (r "^18") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (k 0)) (d (n "secp256k1") (r "^0.24") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (d #t) (k 0)) (d (n "sparse-merkle-tree") (r "^0.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.7") (f (quote ("codec"))) (d #t) (k 0)))) (h "1jhk4ih4chpwxdp52yn361kpij4k7y7sl4n86d6vqyx7q2rdx1w4") (f (quote (("test") ("rustls-tls" "reqwest/rustls-tls") ("native-tls-vendored" "reqwest/native-tls-vendored") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-ckb-sdk-3.1.1 (c (n "ckb-sdk") (v "3.1.1") (d (list (d (n "anyhow") (r "^1.0.63") (d #t) (k 0)) (d (n "async-global-executor") (r "^2.3.1") (d #t) (k 2)) (d (n "bech32") (r "^0.8.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "ckb-chain-spec") (r "^0.115.0-rc2") (d #t) (k 0)) (d (n "ckb-crypto") (r "=0.115.0-rc2") (f (quote ("secp"))) (d #t) (k 0)) (d (n "ckb-dao-utils") (r "^0.115.0-rc2") (d #t) (k 0)) (d (n "ckb-hash") (r "^0.115.0-rc2") (d #t) (k 0)) (d (n "ckb-jsonrpc-types") (r "^0.115.0-rc2") (d #t) (k 0)) (d (n "ckb-mock-tx-types") (r "^0.115.0-rc2") (d #t) (k 0)) (d (n "ckb-resource") (r "^0.115.0-rc2") (d #t) (k 0)) (d (n "ckb-script") (r "^0.115.0-rc2") (d #t) (k 0)) (d (n "ckb-traits") (r "^0.115.0-rc2") (d #t) (k 0)) (d (n "ckb-types") (r "^0.115.0-rc2") (d #t) (k 0)) (d (n "clap") (r "=4.4.18") (f (quote ("derive"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4") (d #t) (k 0)) (d (n "derive-getters") (r "^0.2.1") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (d #t) (k 0)) (d (n "enum-repr-derive") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "httpmock") (r "^0.6") (d #t) (k 2)) (d (n "jsonrpc-core") (r "^18") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (k 0)) (d (n "secp256k1") (r "^0.24") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (d #t) (k 0)) (d (n "sparse-merkle-tree") (r "^0.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.7") (f (quote ("codec"))) (d #t) (k 0)))) (h "0jxpyd07m4vhpdksdw9xqgh3br0ysyq43ip3d7wql1bfaklfmjp1") (f (quote (("test") ("rustls-tls" "reqwest/rustls-tls") ("native-tls-vendored" "reqwest/native-tls-vendored") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

(define-public crate-ckb-sdk-3.2.0 (c (n "ckb-sdk") (v "3.2.0") (d (list (d (n "anyhow") (r "^1.0.63") (d #t) (k 0)) (d (n "async-global-executor") (r "^2.3.1") (d #t) (k 2)) (d (n "bech32") (r "^0.8.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "ckb-chain-spec") (r "^0.116.1") (d #t) (k 0)) (d (n "ckb-crypto") (r "=0.116.1") (f (quote ("secp"))) (d #t) (k 0)) (d (n "ckb-dao-utils") (r "^0.116.1") (d #t) (k 0)) (d (n "ckb-hash") (r "^0.116.1") (d #t) (k 0)) (d (n "ckb-jsonrpc-types") (r "^0.116.1") (d #t) (k 0)) (d (n "ckb-mock-tx-types") (r "^0.116.1") (d #t) (k 0)) (d (n "ckb-resource") (r "^0.116.1") (d #t) (k 0)) (d (n "ckb-script") (r "^0.116.1") (d #t) (k 0)) (d (n "ckb-traits") (r "^0.116.1") (d #t) (k 0)) (d (n "ckb-types") (r "^0.116.1") (d #t) (k 0)) (d (n "clap") (r "=4.4.18") (f (quote ("derive"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4") (d #t) (k 0)) (d (n "derive-getters") (r "^0.2.1") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (d #t) (k 0)) (d (n "enum-repr-derive") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "httpmock") (r "^0.6") (d #t) (k 2)) (d (n "jsonrpc-core") (r "^18") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "lru") (r "^0.7.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (k 0)) (d (n "secp256k1") (r "^0.24") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (d #t) (k 0)) (d (n "sparse-merkle-tree") (r "^0.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1") (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.7") (f (quote ("codec"))) (d #t) (k 0)))) (h "1xxgjvi6z8wlrqi7viwzss5d6gsqcw3jrk3mfgackiyjggdnvwj8") (f (quote (("test") ("rustls-tls" "reqwest/rustls-tls") ("native-tls-vendored" "reqwest/native-tls-vendored") ("default-tls" "reqwest/default-tls") ("default" "default-tls"))))))

