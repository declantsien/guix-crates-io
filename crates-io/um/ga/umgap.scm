(define-module (crates-io um ga umgap) #:use-module (crates-io))

(define-public crate-umgap-0.3.3 (c (n "umgap") (v "0.3.3") (d (list (d (n "assert_matches") (r "^1.3") (d #t) (k 2)) (d (n "clap") (r "^2.32") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "fst") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1") (d #t) (k 0)) (d (n "ordered-float") (r "^1.0") (d #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.2") (d #t) (k 0)) (d (n "strum") (r "^0.11.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.11.0") (d #t) (k 0)))) (h "1h5xgkabhwxarn77iccclhbg2yhvib37c4m8rmcq7zs1dawnq3xk")))

(define-public crate-umgap-0.3.7 (c (n "umgap") (v "0.3.7") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "attohttpc") (r "^0.15.0") (f (quote ("json"))) (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "csv") (r "^1.1.2") (d #t) (k 0)) (d (n "error-chain") (r "^0.12.4") (d #t) (k 0)) (d (n "fst") (r "^0.3.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "ordered-float") (r "^1.0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "structopt") (r "^0.3.7") (d #t) (k 0)) (d (n "strum") (r "^0.17.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.17.1") (d #t) (k 0)))) (h "1655prka18vj502qa48kjv2xkqvdcqdhr7hs5shbq6l51jy52b8b")))

(define-public crate-umgap-1.0.0 (c (n "umgap") (v "1.0.0") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "attohttpc") (r "^0.15.0") (f (quote ("json"))) (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "csv") (r "^1.1.2") (d #t) (k 0)) (d (n "error-chain") (r "^0.12.4") (d #t) (k 0)) (d (n "fst") (r "^0.3.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "ordered-float") (r "^1.0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "structopt") (r "^0.3.23") (d #t) (k 0)) (d (n "strum") (r "^0.17.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.17.1") (d #t) (k 0)))) (h "1ls7ic1v6c0bygkyn05i3sv8l0w24w4kdv8aj44a5b4k5qbgqgs4")))

(define-public crate-umgap-1.1.0 (c (n "umgap") (v "1.1.0") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "attohttpc") (r "^0.15.0") (f (quote ("json"))) (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "csv") (r "^1.1.2") (d #t) (k 0)) (d (n "error-chain") (r "^0.12.4") (d #t) (k 0)) (d (n "fst") (r "^0.3.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "ordered-float") (r "^1.0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "structopt") (r "^0.3.23") (d #t) (k 0)) (d (n "strum") (r "^0.17.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.17.1") (d #t) (k 0)))) (h "088lfiis2vn0vvf9w31zfdjkwdra0y1q49m3g84hwzl2r8ck2h6v")))

