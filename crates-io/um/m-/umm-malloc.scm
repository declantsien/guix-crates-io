(define-module (crates-io um m- umm-malloc) #:use-module (crates-io))

(define-public crate-umm-malloc-0.1.0 (c (n "umm-malloc") (v "0.1.0") (d (list (d (n "cortex-m") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6") (d #t) (k 2)) (d (n "umm-malloc-sys") (r "^0.1.0") (d #t) (k 0)))) (h "036bq1wfxz2y35s0j989b9j6dh9vwvyh7bh87b6r6yw38qb55a94") (f (quote (("sync" "umm-malloc-sys/sync") ("first-fit" "umm-malloc-sys/first-fit"))))))

(define-public crate-umm-malloc-0.1.1 (c (n "umm-malloc") (v "0.1.1") (d (list (d (n "cortex-m") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6") (d #t) (k 2)) (d (n "umm-malloc-sys") (r "^0.1.0") (d #t) (k 0)))) (h "13vy2j1n1p2rjpzpm3xpb01j7w6di5habmd0n8nd12nq1rn58591") (f (quote (("sync" "umm-malloc-sys/sync") ("first-fit" "umm-malloc-sys/first-fit"))))))

(define-public crate-umm-malloc-0.1.2 (c (n "umm-malloc") (v "0.1.2") (d (list (d (n "cortex-m") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6") (d #t) (k 2)) (d (n "umm-malloc-sys") (r "^0.1.0") (d #t) (k 0)))) (h "1l34wgkysqbh84gcvzpp6d73p6f2aafqmfdgllh8ari5rpyzlli0") (f (quote (("sync" "umm-malloc-sys/sync") ("first-fit" "umm-malloc-sys/first-fit"))))))

(define-public crate-umm-malloc-0.2.0 (c (n "umm-malloc") (v "0.2.0") (d (list (d (n "cortex-m") (r ">=0.6.13, <0.8") (o #t) (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.7") (d #t) (k 2)) (d (n "umm-malloc-sys") (r "^0.2.0") (d #t) (k 0)))) (h "04vkjiwxa4p25f77ywivn2y83j1gvvi4xk39df2hnaf37mkjhxwc") (f (quote (("unsafe-no-critical-section") ("init-if-uninitialized" "umm-malloc-sys/init-if-uninitialized") ("hang-if-uninitialized" "umm-malloc-sys/hang-if-uninitialized") ("first-fit" "umm-malloc-sys/first-fit") ("extern-critical-section" "umm-malloc-sys/extern-critical-section"))))))

(define-public crate-umm-malloc-0.3.0 (c (n "umm-malloc") (v "0.3.0") (d (list (d (n "cortex-m-rt") (r "^0.7") (d #t) (k 2)) (d (n "umm-malloc-sys") (r "^0.3.0") (d #t) (k 0)))) (h "0w0cp940a47xfqrvsnww8g24vzmngs864wq1jic9lcphml72zgx2") (f (quote (("unsafe-no-critical-section") ("init-if-uninitialized" "umm-malloc-sys/init-if-uninitialized") ("hang-if-uninitialized" "umm-malloc-sys/hang-if-uninitialized") ("first-fit" "umm-malloc-sys/first-fit") ("extern-critical-section" "umm-malloc-sys/extern-critical-section") ("cortex-m-interrupt-critical-section" "umm-malloc-sys/cortex-m-interrupt-critical-section"))))))

(define-public crate-umm-malloc-0.3.1 (c (n "umm-malloc") (v "0.3.1") (d (list (d (n "cortex-m-rt") (r "^0.7") (d #t) (k 2)) (d (n "umm-malloc-sys") (r "^0.3.0") (d #t) (k 0)))) (h "1i3kib49qqf0xsidfqmss8v21hig7cfzm0591r6pkg5qgkv34af8") (f (quote (("unsafe-no-critical-section") ("init-if-uninitialized" "umm-malloc-sys/init-if-uninitialized") ("hang-if-uninitialized" "umm-malloc-sys/hang-if-uninitialized") ("first-fit" "umm-malloc-sys/first-fit") ("extern-critical-section" "umm-malloc-sys/extern-critical-section") ("cortex-m-interrupt-critical-section" "umm-malloc-sys/cortex-m-interrupt-critical-section"))))))

(define-public crate-umm-malloc-0.3.2 (c (n "umm-malloc") (v "0.3.2") (d (list (d (n "umm-malloc-sys") (r "^0.3.2") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.7") (d #t) (k 2)))) (h "1n76lq8hqkbfjwz0xf6q20ysxpsi4nbfsq7hrinclfhqf2fid8jk") (f (quote (("unsafe-no-critical-section") ("init-if-uninitialized" "umm-malloc-sys/init-if-uninitialized") ("hang-if-uninitialized" "umm-malloc-sys/hang-if-uninitialized") ("first-fit" "umm-malloc-sys/first-fit") ("extern-critical-section" "umm-malloc-sys/extern-critical-section") ("enable-pie" "umm-malloc-sys/enable-pie") ("cortex-m-interrupt-critical-section" "umm-malloc-sys/cortex-m-interrupt-critical-section"))))))

