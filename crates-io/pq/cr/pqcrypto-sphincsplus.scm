(define-module (crates-io pq cr pqcrypto-sphincsplus) #:use-module (crates-io))

(define-public crate-pqcrypto-sphincsplus-0.1.0 (c (n "pqcrypto-sphincsplus") (v "0.1.0") (d (list (d (n "cc") (r "^1.0") (d #t) (k 1)) (d (n "glob") (r "^0.3.0") (d #t) (k 1)) (d (n "libc") (r "^0.2.0") (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.1.0") (d #t) (k 0)) (d (n "rand") (r "^0.5.0") (d #t) (k 2)))) (h "131fdm2p2jc73s3rxq0gf9sbifqp5i6yqqh3xggwfvmg896d7w2r")))

(define-public crate-pqcrypto-sphincsplus-0.2.0 (c (n "pqcrypto-sphincsplus") (v "0.2.0") (d (list (d (n "cc") (r "^1.0") (d #t) (k 1)) (d (n "glob") (r "^0.3.0") (d #t) (k 1)) (d (n "libc") (r "^0.2.0") (d #t) (k 0)) (d (n "pqcrypto-internals") (r "^0.1.0") (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.5.0") (d #t) (k 2)))) (h "177bb5whygwq1nm8x75lnq5y2sq3nll27zymcqpcxl37zdcrr6p3")))

(define-public crate-pqcrypto-sphincsplus-0.3.0 (c (n "pqcrypto-sphincsplus") (v "0.3.0") (d (list (d (n "cc") (r "^1.0") (d #t) (k 1)) (d (n "glob") (r "^0.3.0") (d #t) (k 1)) (d (n "libc") (r "^0.2.0") (d #t) (k 0)) (d (n "pqcrypto-internals") (r "^0.1.0") (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.5.0") (d #t) (k 2)))) (h "1azvayxzfimxa6wvcg96igvg4kxlyc8svq17j4yqv8c0qnkmh0iv")))

(define-public crate-pqcrypto-sphincsplus-0.3.1 (c (n "pqcrypto-sphincsplus") (v "0.3.1") (d (list (d (n "cc") (r "^1.0") (d #t) (k 1)) (d (n "glob") (r "^0.3.0") (d #t) (k 1)) (d (n "libc") (r "^0.2.0") (d #t) (k 0)) (d (n "pqcrypto-internals") (r "^0.1.0") (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.5.0") (d #t) (k 2)))) (h "1hxsjq70l66jlghl90y3d0jxjf06ajqmzkxhxhwnps48s4jfjhsv")))

(define-public crate-pqcrypto-sphincsplus-0.3.2 (c (n "pqcrypto-sphincsplus") (v "0.3.2") (d (list (d (n "cc") (r "^1.0") (d #t) (k 1)) (d (n "glob") (r "^0.3.0") (d #t) (k 1)) (d (n "libc") (r "^0.2.0") (d #t) (k 0)) (d (n "pqcrypto-internals") (r "^0.1.0") (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.5.0") (d #t) (k 2)))) (h "0jszvsaili6vh2scc0rg20hh1q2yg31yq49vcdmdrwbiyh4wgcjw")))

(define-public crate-pqcrypto-sphincsplus-0.4.1 (c (n "pqcrypto-sphincsplus") (v "0.4.1") (d (list (d (n "cc") (r "^1.0") (d #t) (k 1)) (d (n "glob") (r "^0.3.0") (d #t) (k 1)) (d (n "libc") (r "^0.2.0") (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.3.0") (d #t) (k 0)) (d (n "rand") (r "^0.6.0") (d #t) (k 2)))) (h "09gv06mzrqx3zw4x2csz0ycln7y9m4xlzjb61ihvvbpcr6vq74dj")))

(define-public crate-pqcrypto-sphincsplus-0.4.2 (c (n "pqcrypto-sphincsplus") (v "0.4.2") (d (list (d (n "cc") (r "^1.0") (d #t) (k 1)) (d (n "glob") (r "^0.3.0") (d #t) (k 1)) (d (n "libc") (r "^0.2.0") (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.3.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)))) (h "1hvp60vrlswn6r80ajr3zqxi1mdsj0ra52j467h3swqnb4k0cr13")))

(define-public crate-pqcrypto-sphincsplus-0.4.3 (c (n "pqcrypto-sphincsplus") (v "0.4.3") (d (list (d (n "cc") (r "^1.0") (d #t) (k 1)) (d (n "glob") (r "^0.3.0") (d #t) (k 1)) (d (n "libc") (r "^0.2.0") (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.3.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)))) (h "1d8a23q15iiz9pk4zjw85isqb4rs2r60qq2h8smw3887hnh4w58n")))

(define-public crate-pqcrypto-sphincsplus-0.5.0 (c (n "pqcrypto-sphincsplus") (v "0.5.0") (d (list (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "glob") (r "^0.3.0") (d #t) (k 1)) (d (n "libc") (r "^0.2.0") (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.3.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)))) (h "1zprmpf2025cw1bvx12h2lnssvvy3dk3py33vjlda86sq054fiki")))

(define-public crate-pqcrypto-sphincsplus-0.5.1 (c (n "pqcrypto-sphincsplus") (v "0.5.1") (d (list (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "glob") (r "^0.3.0") (d #t) (k 1)) (d (n "libc") (r "^0.2.0") (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.3.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)))) (h "1kbwpv4rpyf5gpicry3kyi1dcwlrmm0rvdb33328ahdwh0i863x3")))

(define-public crate-pqcrypto-sphincsplus-0.5.2 (c (n "pqcrypto-sphincsplus") (v "0.5.2") (d (list (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "glob") (r "^0.3.0") (d #t) (k 1)) (d (n "libc") (r "^0.2.0") (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.3.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)))) (h "1kn78148r10zym5sw45xhkx26jnxasf54480kw3kqp39vd47mbn9") (f (quote (("default" "avx2") ("avx2"))))))

(define-public crate-pqcrypto-sphincsplus-0.5.3 (c (n "pqcrypto-sphincsplus") (v "0.5.3") (d (list (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "glob") (r "^0.3.0") (d #t) (k 1)) (d (n "libc") (r "^0.2.0") (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.3.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)))) (h "0i16lq80h5z37c49zxkm7fx3q072yf0az9z1z1n4qq62cnia438l") (f (quote (("default" "avx2") ("avx2"))))))

(define-public crate-pqcrypto-sphincsplus-0.6.0 (c (n "pqcrypto-sphincsplus") (v "0.6.0") (d (list (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "glob") (r "^0.3.0") (d #t) (k 1)) (d (n "libc") (r "^0.2.0") (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.3.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.3.2") (f (quote ("const-generics"))) (o #t) (d #t) (k 0)))) (h "0vakb5dx8rc12f0kl1yb0f45x5w61wa4m12ygrv9cixir953c3q9") (f (quote (("serialization" "serde" "serde-big-array") ("default" "avx2") ("avx2"))))))

(define-public crate-pqcrypto-sphincsplus-0.6.2 (c (n "pqcrypto-sphincsplus") (v "0.6.2") (d (list (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "glob") (r "^0.3.0") (d #t) (k 1)) (d (n "libc") (r "^0.2.0") (d #t) (k 0)) (d (n "pqcrypto-internals") (r "^0.2") (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.3.4") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.3.2") (f (quote ("const-generics"))) (o #t) (d #t) (k 0)))) (h "1cc0ygl8rhamz6i8jg0y4nz0h519r40jxjmmisfg1m6r3wis0ia6") (f (quote (("std" "pqcrypto-traits/std") ("serialization" "serde" "serde-big-array") ("default" "avx2" "std") ("avx2" "std"))))))

(define-public crate-pqcrypto-sphincsplus-0.6.3 (c (n "pqcrypto-sphincsplus") (v "0.6.3") (d (list (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "glob") (r "^0.3.0") (d #t) (k 1)) (d (n "libc") (r "^0.2.0") (d #t) (k 0)) (d (n "pqcrypto-internals") (r "^0.2") (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.3.4") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.3.2") (f (quote ("const-generics"))) (o #t) (d #t) (k 0)))) (h "1j6205czyvvl8hmdq2dxyp0g63da6nyias0651m5n08l4yy7x35f") (f (quote (("std" "pqcrypto-traits/std") ("serialization" "serde" "serde-big-array") ("default" "avx2" "aes" "std") ("avx2" "std") ("aes" "std"))))))

(define-public crate-pqcrypto-sphincsplus-0.6.4 (c (n "pqcrypto-sphincsplus") (v "0.6.4") (d (list (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "glob") (r "^0.3.0") (d #t) (k 1)) (d (n "libc") (r "^0.2.0") (d #t) (k 0)) (d (n "pqcrypto-internals") (r "^0.2") (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.3.4") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.3.2") (f (quote ("const-generics"))) (o #t) (d #t) (k 0)))) (h "0ii9cg2w7jr11b74a8gq7xg9g1l3h15g3zn4ip554pvazjnwj6hv") (f (quote (("std" "pqcrypto-traits/std") ("serialization" "serde" "serde-big-array") ("default" "avx2" "aes" "std") ("avx2" "std") ("aes" "std"))))))

(define-public crate-pqcrypto-sphincsplus-0.7.0 (c (n "pqcrypto-sphincsplus") (v "0.7.0") (d (list (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "glob") (r "^0.3.0") (d #t) (k 1)) (d (n "libc") (r "^0.2.0") (d #t) (k 0)) (d (n "pqcrypto-internals") (r "^0.2") (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.3.5") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.5.1") (o #t) (d #t) (k 0)))) (h "1hqnjg661pddh5svhpckbv32aaz679vy41qg8rig48vn9fhigsl2") (f (quote (("std" "pqcrypto-traits/std") ("serialization" "serde" "serde-big-array") ("default" "avx2" "std") ("avx2" "std"))))))

