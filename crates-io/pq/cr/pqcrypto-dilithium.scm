(define-module (crates-io pq cr pqcrypto-dilithium) #:use-module (crates-io))

(define-public crate-pqcrypto-dilithium-0.1.0 (c (n "pqcrypto-dilithium") (v "0.1.0") (d (list (d (n "cc") (r "^1.0") (d #t) (k 1)) (d (n "glob") (r "^0.3.0") (d #t) (k 1)) (d (n "libc") (r "^0.2.0") (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.3.0") (d #t) (k 0)) (d (n "rand") (r "^0.6.0") (d #t) (k 2)))) (h "16w3ay86ppa3imfb0qhsbgg07kq6ix2yq5fs3x054f02bmiih4cv")))

(define-public crate-pqcrypto-dilithium-0.1.1 (c (n "pqcrypto-dilithium") (v "0.1.1") (d (list (d (n "cc") (r "^1.0") (d #t) (k 1)) (d (n "glob") (r "^0.3.0") (d #t) (k 1)) (d (n "libc") (r "^0.2.0") (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.3.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)))) (h "06qy913lmhrzgb4abrv9j0nd2y0azmqk2h0cy37vlsj3dakmgwwd")))

(define-public crate-pqcrypto-dilithium-0.3.0 (c (n "pqcrypto-dilithium") (v "0.3.0") (d (list (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "glob") (r "^0.3.0") (d #t) (k 1)) (d (n "libc") (r "^0.2.0") (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.3.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)))) (h "1zfgvslr32sdw4ya0zbbxa6h98hblz43fh3zdmabhy4983drjlfy")))

(define-public crate-pqcrypto-dilithium-0.3.1 (c (n "pqcrypto-dilithium") (v "0.3.1") (d (list (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "glob") (r "^0.3.0") (d #t) (k 1)) (d (n "libc") (r "^0.2.0") (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.3.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)))) (h "133bn13ilsym1llj0z33rhdfqrm670cc3ab3q6dkqy32qs2k8y7b")))

(define-public crate-pqcrypto-dilithium-0.3.2 (c (n "pqcrypto-dilithium") (v "0.3.2") (d (list (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "glob") (r "^0.3.0") (d #t) (k 1)) (d (n "libc") (r "^0.2.0") (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.3.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)))) (h "1rvn99zmdxs5nzw9qhvcvr130zfsjamr789dak64qi2fdvy92iw9")))

(define-public crate-pqcrypto-dilithium-0.3.3 (c (n "pqcrypto-dilithium") (v "0.3.3") (d (list (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "glob") (r "^0.3.0") (d #t) (k 1)) (d (n "libc") (r "^0.2.0") (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.3.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)))) (h "0bc0sjs70apybcmy8d33fdk1vx5bxzzgwnvgn119gjvgjbii52h8") (f (quote (("default" "avx2") ("avx2"))))))

(define-public crate-pqcrypto-dilithium-0.4.0 (c (n "pqcrypto-dilithium") (v "0.4.0") (d (list (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "glob") (r "^0.3.0") (d #t) (k 1)) (d (n "libc") (r "^0.2.0") (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.3.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)))) (h "0n1xv8nl3h50ygi7xk34fm1mr30q25xp2xf7jg9l9rpg91a4wgar") (f (quote (("default" "avx2") ("avx2"))))))

(define-public crate-pqcrypto-dilithium-0.4.1 (c (n "pqcrypto-dilithium") (v "0.4.1") (d (list (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "glob") (r "^0.3.0") (d #t) (k 1)) (d (n "libc") (r "^0.2.0") (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.3.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.3.2") (f (quote ("const-generics"))) (o #t) (d #t) (k 0)))) (h "11rf64ww33xxg0h3nqv5lr1wlgg3nbmrd7mwmf79cv380cvc8vyz") (f (quote (("serialization" "serde" "serde-big-array") ("default" "avx2") ("avx2"))))))

(define-public crate-pqcrypto-dilithium-0.4.3 (c (n "pqcrypto-dilithium") (v "0.4.3") (d (list (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "glob") (r "^0.3.0") (d #t) (k 1)) (d (n "libc") (r "^0.2.0") (d #t) (k 0)) (d (n "pqcrypto-internals") (r "^0.2") (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.3.4") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.3.2") (f (quote ("const-generics"))) (o #t) (d #t) (k 0)))) (h "0chy2x0d6nxssq6131gcxrjdhb16fj3s14c25fwrsdf5vkkcxqc4") (f (quote (("std" "pqcrypto-traits/std") ("serialization" "serde" "serde-big-array") ("default" "avx2" "std") ("avx2" "std"))))))

(define-public crate-pqcrypto-dilithium-0.4.4 (c (n "pqcrypto-dilithium") (v "0.4.4") (d (list (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "glob") (r "^0.3.0") (d #t) (k 1)) (d (n "libc") (r "^0.2.0") (d #t) (k 0)) (d (n "pqcrypto-internals") (r "^0.2") (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.3.4") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.3.2") (f (quote ("const-generics"))) (o #t) (d #t) (k 0)))) (h "031jsbglm99f8s1iz2n6h2wgg46ldyxc8hc05rrffyvakn42s3zf") (f (quote (("std" "pqcrypto-traits/std") ("serialization" "serde" "serde-big-array") ("default" "avx2" "std") ("avx2" "std"))))))

(define-public crate-pqcrypto-dilithium-0.4.5 (c (n "pqcrypto-dilithium") (v "0.4.5") (d (list (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "glob") (r "^0.3.0") (d #t) (k 1)) (d (n "libc") (r "^0.2.0") (d #t) (k 0)) (d (n "pqcrypto-internals") (r "^0.2") (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.3.4") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.3.2") (f (quote ("const-generics"))) (o #t) (d #t) (k 0)))) (h "0gqjdpaxax87v4rm2syi109n8fsb3l5iq5h0gllqac8p4sirljxa") (f (quote (("std" "pqcrypto-traits/std") ("serialization" "serde" "serde-big-array") ("neon" "std") ("default" "avx2" "neon" "std") ("avx2" "std"))))))

(define-public crate-pqcrypto-dilithium-0.4.6 (c (n "pqcrypto-dilithium") (v "0.4.6") (d (list (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "glob") (r "^0.3.0") (d #t) (k 1)) (d (n "libc") (r "^0.2.0") (d #t) (k 0)) (d (n "pqcrypto-internals") (r "^0.2") (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.3.4") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.3.2") (f (quote ("const-generics"))) (o #t) (d #t) (k 0)))) (h "1crcbcfiqkr0xi7n198x908kvzaysrmv88fx1z202gnj04clnsch") (f (quote (("std" "pqcrypto-traits/std") ("serialization" "serde" "serde-big-array") ("neon" "std") ("default" "avx2" "neon" "std") ("avx2" "std"))))))

(define-public crate-pqcrypto-dilithium-0.5.0 (c (n "pqcrypto-dilithium") (v "0.5.0") (d (list (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "glob") (r "^0.3.0") (d #t) (k 1)) (d (n "libc") (r "^0.2.0") (d #t) (k 0)) (d (n "pqcrypto-internals") (r "^0.2") (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.3.5") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.5.1") (o #t) (d #t) (k 0)))) (h "0vvjfv94qhnp7f162bqnblzyys6dy0aa9npwsmcnay66d3xf0pb8") (f (quote (("std" "pqcrypto-traits/std") ("serialization" "serde" "serde-big-array") ("neon" "std") ("default" "avx2" "neon" "std") ("avx2" "std"))))))

