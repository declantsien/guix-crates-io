(define-module (crates-io pq cr pqcrypto-rainbow) #:use-module (crates-io))

(define-public crate-pqcrypto-rainbow-0.0.1 (c (n "pqcrypto-rainbow") (v "0.0.1") (d (list (d (n "cc") (r "^1.0") (d #t) (k 1)) (d (n "glob") (r "^0.3.0") (d #t) (k 1)) (d (n "libc") (r "^0.2.0") (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.3.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)))) (h "1jzdxkjad08wb64p789ha9g6zn2dqpbf7fnqarap5s03v08z0f1a")))

(define-public crate-pqcrypto-rainbow-0.1.0 (c (n "pqcrypto-rainbow") (v "0.1.0") (d (list (d (n "cc") (r "^1.0") (d #t) (k 1)) (d (n "glob") (r "^0.3.0") (d #t) (k 1)) (d (n "libc") (r "^0.2.0") (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.3.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)))) (h "1vi0pq3dk93fmvj3ds2acdby4jm6ijnkgcs6hwrv3kk87zn61mgp")))

(define-public crate-pqcrypto-rainbow-0.1.1 (c (n "pqcrypto-rainbow") (v "0.1.1") (d (list (d (n "cc") (r "^1.0") (d #t) (k 1)) (d (n "glob") (r "^0.3.0") (d #t) (k 1)) (d (n "libc") (r "^0.2.0") (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.3.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)))) (h "1x1z8hl981bywifrzjlx8y6s2yblhjfczafjify17iq58jpc749p")))

(define-public crate-pqcrypto-rainbow-0.1.2 (c (n "pqcrypto-rainbow") (v "0.1.2") (d (list (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "glob") (r "^0.3.0") (d #t) (k 1)) (d (n "libc") (r "^0.2.0") (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.3.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)))) (h "1cgykjdwh76nqnxajngkdialri51is9fja3xj6p8w4i8ndxqg65j")))

(define-public crate-pqcrypto-rainbow-0.1.3 (c (n "pqcrypto-rainbow") (v "0.1.3") (d (list (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "glob") (r "^0.3.0") (d #t) (k 1)) (d (n "libc") (r "^0.2.0") (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.3.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)))) (h "019m1kpl6qr0mfn6ppsa5js6bp6zh6i07wd2b60fc21pgimlb7hi")))

(define-public crate-pqcrypto-rainbow-0.2.0 (c (n "pqcrypto-rainbow") (v "0.2.0") (d (list (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "glob") (r "^0.3.0") (d #t) (k 1)) (d (n "libc") (r "^0.2.0") (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.3.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)))) (h "1wya9gpzi28h8r1mwimnp7slpmd5x6mx3p5x0blfn80m2wdkq0vg")))

(define-public crate-pqcrypto-rainbow-0.2.1 (c (n "pqcrypto-rainbow") (v "0.2.1") (d (list (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "glob") (r "^0.3.0") (d #t) (k 1)) (d (n "libc") (r "^0.2.0") (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.3.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.3.2") (f (quote ("const-generics"))) (o #t) (d #t) (k 0)))) (h "1farp4w41wxag6k42aff4xpyq127xpx4cwwm5wcsayz2w5biwwgl") (f (quote (("serialization" "serde" "serde-big-array") ("default"))))))

(define-public crate-pqcrypto-rainbow-0.2.3 (c (n "pqcrypto-rainbow") (v "0.2.3") (d (list (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "glob") (r "^0.3.0") (d #t) (k 1)) (d (n "libc") (r "^0.2.0") (d #t) (k 0)) (d (n "pqcrypto-internals") (r "^0.2") (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.3.4") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.3.2") (f (quote ("const-generics"))) (o #t) (d #t) (k 0)))) (h "1rdj7ap20wd942d19vrf1nl68fw2rcg3m3ggpsw2cfadmadiacq1") (f (quote (("std" "pqcrypto-traits/std") ("serialization" "serde" "serde-big-array") ("default" "std"))))))

(define-public crate-pqcrypto-rainbow-0.2.4 (c (n "pqcrypto-rainbow") (v "0.2.4") (d (list (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "glob") (r "^0.3.0") (d #t) (k 1)) (d (n "libc") (r "^0.2.0") (d #t) (k 0)) (d (n "pqcrypto-internals") (r "^0.2") (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.3.4") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.3.2") (f (quote ("const-generics"))) (o #t) (d #t) (k 0)))) (h "01ykfnnxgf33n8vcj9dcg8p4k9ysgac14m0q1mndmxys4laz66b6") (f (quote (("std" "pqcrypto-traits/std") ("serialization" "serde" "serde-big-array") ("default" "std"))))))

(define-public crate-pqcrypto-rainbow-0.3.0 (c (n "pqcrypto-rainbow") (v "0.3.0") (d (list (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "glob") (r "^0.3.0") (d #t) (k 1)) (d (n "libc") (r "^0.2.0") (d #t) (k 0)) (d (n "pqcrypto-internals") (r "^0.2") (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.3.4") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.3.2") (f (quote ("const-generics"))) (o #t) (d #t) (k 0)))) (h "1hraz5kpzhhrm32c4jpvjklz8ilik15aha0ravrcwldhvv02y0kj") (f (quote (("std" "pqcrypto-traits/std") ("serialization" "serde" "serde-big-array") ("default" "std") ("cryptographically-insecure"))))))

