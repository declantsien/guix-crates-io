(define-module (crates-io pq cr pqcrypto-dilithium-wasi) #:use-module (crates-io))

(define-public crate-pqcrypto-dilithium-wasi-0.4.3 (c (n "pqcrypto-dilithium-wasi") (v "0.4.3") (d (list (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "glob") (r "^0.3.0") (d #t) (k 1)) (d (n "libc") (r "^0.2.0") (d #t) (k 0)) (d (n "pqcrypto-internals-wasi") (r "^0.2") (d #t) (k 0)) (d (n "pqcrypto-traits-wasi") (r "^0.3.4") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.3.2") (f (quote ("const-generics"))) (o #t) (d #t) (k 0)))) (h "0r1rgd2q6n9jc5kxjr9bq312gnrji2va3dwzldfbgm238anh4175") (f (quote (("std" "pqcrypto-traits-wasi/std") ("serialization" "serde" "serde-big-array") ("default" "avx2" "std") ("avx2" "std")))) (y #t)))

(define-public crate-pqcrypto-dilithium-wasi-0.4.4 (c (n "pqcrypto-dilithium-wasi") (v "0.4.4") (d (list (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "glob") (r "^0.3.0") (d #t) (k 1)) (d (n "libc") (r "^0.2.0") (d #t) (k 0)) (d (n "pqcrypto-internals-wasi") (r "^0.2") (d #t) (k 0)) (d (n "pqcrypto-traits-wasi") (r "^0.3.4") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.3.2") (f (quote ("const-generics"))) (o #t) (d #t) (k 0)))) (h "11gm4q9bc7xx9wxl2bzwqfkyh2g8m9v5dpm34j81pfs2l2fzrh4n") (f (quote (("std" "pqcrypto-traits-wasi/std") ("serialization" "serde" "serde-big-array") ("default" "avx2" "std") ("avx2" "std")))) (y #t)))

(define-public crate-pqcrypto-dilithium-wasi-0.4.6 (c (n "pqcrypto-dilithium-wasi") (v "0.4.6") (d (list (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "glob") (r "^0.3.0") (d #t) (k 1)) (d (n "libc") (r "^0.2.0") (d #t) (k 0)) (d (n "pqcrypto-internals-wasi") (r "^0.2") (d #t) (k 0)) (d (n "pqcrypto-traits-wasi") (r "^0.3.4") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.3.2") (f (quote ("const-generics"))) (o #t) (d #t) (k 0)))) (h "1gpi2dwxkgx53bxq1vckc0j6jng0j0k9qph3ils4cjqcx1jbg9zl") (f (quote (("std" "pqcrypto-traits-wasi/std") ("serialization" "serde" "serde-big-array") ("default" "avx2" "std") ("avx2" "std")))) (y #t)))

(define-public crate-pqcrypto-dilithium-wasi-0.4.7 (c (n "pqcrypto-dilithium-wasi") (v "0.4.7") (d (list (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "glob") (r "^0.3.0") (d #t) (k 1)) (d (n "libc") (r "^0.2.0") (d #t) (k 0)) (d (n "pqcrypto-internals-wasi") (r "^0.2") (d #t) (k 0)) (d (n "pqcrypto-traits-wasi") (r "^0.3.4") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.3.2") (f (quote ("const-generics"))) (o #t) (d #t) (k 0)))) (h "1qfy92r5vhbxcviirm6npfxyh35dvdc1q0hzr94lzhp0i7yn9i70") (f (quote (("std" "pqcrypto-traits-wasi/std") ("serialization" "serde" "serde-big-array") ("default" "avx2" "std") ("avx2" "std")))) (y #t)))

