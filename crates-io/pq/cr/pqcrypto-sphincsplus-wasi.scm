(define-module (crates-io pq cr pqcrypto-sphincsplus-wasi) #:use-module (crates-io))

(define-public crate-pqcrypto-sphincsplus-wasi-0.6.2 (c (n "pqcrypto-sphincsplus-wasi") (v "0.6.2") (d (list (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "glob") (r "^0.3.0") (d #t) (k 1)) (d (n "libc") (r "^0.2.0") (d #t) (k 0)) (d (n "pqcrypto-internals-wasi") (r "^0.2") (d #t) (k 0)) (d (n "pqcrypto-traits-wasi") (r "^0.3.4") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.3.2") (f (quote ("const-generics"))) (o #t) (d #t) (k 0)))) (h "1f07qpvzjxnfl61sxly7rp3qf3csl3cwjmmlsfgq7g2cmxpvbflg") (f (quote (("std" "pqcrypto-traits-wasi/std") ("serialization" "serde" "serde-big-array") ("default" "avx2" "std") ("avx2" "std")))) (y #t)))

(define-public crate-pqcrypto-sphincsplus-wasi-0.6.3 (c (n "pqcrypto-sphincsplus-wasi") (v "0.6.3") (d (list (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "glob") (r "^0.3.0") (d #t) (k 1)) (d (n "libc") (r "^0.2.0") (d #t) (k 0)) (d (n "pqcrypto-internals-wasi") (r "^0.2") (d #t) (k 0)) (d (n "pqcrypto-traits-wasi") (r "^0.3.4") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.3.2") (f (quote ("const-generics"))) (o #t) (d #t) (k 0)))) (h "1mf7dvm6m8wnyjlymhmq66bgwcgq6i56sxa118mbripzgq1zqkxm") (f (quote (("std" "pqcrypto-traits-wasi/std") ("serialization" "serde" "serde-big-array") ("default" "avx2" "std") ("avx2" "std")))) (y #t)))

(define-public crate-pqcrypto-sphincsplus-wasi-0.6.4 (c (n "pqcrypto-sphincsplus-wasi") (v "0.6.4") (d (list (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "glob") (r "^0.3.0") (d #t) (k 1)) (d (n "libc") (r "^0.2.0") (d #t) (k 0)) (d (n "pqcrypto-internals-wasi") (r "^0.2") (d #t) (k 0)) (d (n "pqcrypto-traits-wasi") (r "^0.3.4") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.3.2") (f (quote ("const-generics"))) (o #t) (d #t) (k 0)))) (h "113py6z0msq2pk5h7a26vjypjcfl7cwdkcs5h5nb2yvkgv48dyk5") (f (quote (("std" "pqcrypto-traits-wasi/std") ("serialization" "serde" "serde-big-array") ("default" "avx2" "std") ("avx2" "std")))) (y #t)))

(define-public crate-pqcrypto-sphincsplus-wasi-0.6.5 (c (n "pqcrypto-sphincsplus-wasi") (v "0.6.5") (d (list (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "glob") (r "^0.3.0") (d #t) (k 1)) (d (n "libc") (r "^0.2.0") (d #t) (k 0)) (d (n "pqcrypto-internals-wasi") (r "^0.2") (d #t) (k 0)) (d (n "pqcrypto-traits-wasi") (r "^0.3.4") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.3.2") (f (quote ("const-generics"))) (o #t) (d #t) (k 0)))) (h "1l6q8gy6mhvg8spkd0lcksgw33gmvg3vapkpb02a9sq2fjynfa0f") (f (quote (("std" "pqcrypto-traits-wasi/std") ("serialization" "serde" "serde-big-array") ("default" "avx2" "std") ("avx2" "std")))) (y #t)))

