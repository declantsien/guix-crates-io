(define-module (crates-io po in pointcloud) #:use-module (crates-io))

(define-public crate-pointcloud-0.1.0 (c (n "pointcloud") (v "0.1.0") (d (list (d (n "assert_approx_eq") (r "^1.0.0") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.2.11") (d #t) (k 0)) (d (n "indexmap") (r "^1.0.2") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.3") (d #t) (k 0)) (d (n "rayon") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "yaml-rust") (r "^0.4") (d #t) (k 0)))) (h "1i0nm67dhvwgk2pjirdxfanikavyl44c1pb0jqnlwp8zzcbvr5f0")))

(define-public crate-pointcloud-0.1.1 (c (n "pointcloud") (v "0.1.1") (d (list (d (n "assert_approx_eq") (r "^1.0.0") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.2.11") (d #t) (k 0)) (d (n "indexmap") (r "^1.0.2") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.3") (d #t) (k 0)) (d (n "rayon") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "yaml-rust") (r "^0.4") (d #t) (k 0)))) (h "030vchxlpxf6xml1rfh1m7b85baf0ihfhb62wxh1hfl2xs2f5pgk")))

(define-public crate-pointcloud-0.1.2 (c (n "pointcloud") (v "0.1.2") (d (list (d (n "assert_approx_eq") (r "^1.0.0") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.2.11") (d #t) (k 0)) (d (n "indexmap") (r "^1.0.2") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.3") (d #t) (k 0)) (d (n "rayon") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "yaml-rust") (r "^0.4") (d #t) (k 0)))) (h "09qybfvxb1sar3l9xpfmz54sng9xfr51s4m8lm04mqz4ibj62l2b")))

(define-public crate-pointcloud-0.2.0 (c (n "pointcloud") (v "0.2.0") (d (list (d (n "assert_approx_eq") (r "^1.0.0") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.0.2") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.3") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rayon") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.48") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "yaml-rust") (r "^0.4") (d #t) (k 0)))) (h "03yb2bvp0scqrlwnhvfpggynggg53bsckj6dgg0l91hn0bam4gxd")))

(define-public crate-pointcloud-0.3.0 (c (n "pointcloud") (v "0.3.0") (d (list (d (n "assert_approx_eq") (r "^1.0.0") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.8") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.3") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rayon") (r "^1.3.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.55") (d #t) (k 0)) (d (n "smallvec") (r "^1.3.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "yaml-rust") (r "^0.4") (d #t) (k 0)))) (h "1wbprssnjr41w99b0fy26xh6ywv6r30kx8ss9mxpvajzjgaphyfq")))

(define-public crate-pointcloud-0.3.3 (c (n "pointcloud") (v "0.3.3") (d (list (d (n "assert_approx_eq") (r "^1.0.0") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1.0.16") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.8") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.72") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.3") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rayon") (r "^1.3.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 0)) (d (n "smallvec") (r "^1.3.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "handleapi" "memoryapi" "minwindef" "std" "sysinfoapi"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "yaml-rust") (r "^0.4") (d #t) (k 0)))) (h "1l0ih7a83zh91x79r670rwz3lmmmgcwc8a7b6wv690dkc1lpf2y6")))

(define-public crate-pointcloud-0.3.4 (c (n "pointcloud") (v "0.3.4") (d (list (d (n "assert_approx_eq") (r "^1.0.0") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1.0.16") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.8") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.72") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.3") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rayon") (r "^1.3.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 0)) (d (n "smallvec") (r "^1.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "handleapi" "memoryapi" "minwindef" "std" "sysinfoapi"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "yaml-rust") (r "^0.4") (d #t) (k 0)))) (h "077738728s0hh563wf04n59bhdcximv3hhqjrlidhswbjqhr93z9")))

(define-public crate-pointcloud-0.3.5 (c (n "pointcloud") (v "0.3.5") (d (list (d (n "assert_approx_eq") (r "^1.0.0") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1.0.16") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.8") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.72") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.3") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rayon") (r "^1.3.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 0)) (d (n "smallvec") (r "^1.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "handleapi" "memoryapi" "minwindef" "std" "sysinfoapi"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "yaml-rust") (r "^0.4") (d #t) (k 0)))) (h "15k94lsg57awv3z4x85ljllhaxai0sg882dg69q6yn66kwv71xaf")))

(define-public crate-pointcloud-0.3.6 (c (n "pointcloud") (v "0.3.6") (d (list (d (n "assert_approx_eq") (r "^1.0.0") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1.0.17") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.8.2") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.76") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.3") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rayon") (r "^1.3.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.115") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "smallvec") (r "^1.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "handleapi" "memoryapi" "minwindef" "std" "sysinfoapi"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "yaml-rust") (r "^0.4") (d #t) (k 0)))) (h "1ky863acrlyxb80pg2xm7gvkrckgf00p5qikvhkij2icvk6nkk7w")))

(define-public crate-pointcloud-0.3.7 (c (n "pointcloud") (v "0.3.7") (d (list (d (n "assert_approx_eq") (r "^1.0.0") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1.0.17") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.9.0") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.76") (d #t) (k 0)) (d (n "ndarray") (r "^0.13.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.3") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rayon") (r "^1.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.115") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "smallvec") (r "^1.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "handleapi" "memoryapi" "minwindef" "std" "sysinfoapi"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "yaml-rust") (r "^0.4") (d #t) (k 0)))) (h "0igq74kx145l05sgrdz68vczvvzhzjmjjvwcpfybhqzg7c4k0v7z") (f (quote (("default"))))))

(define-public crate-pointcloud-0.3.8 (c (n "pointcloud") (v "0.3.8") (d (list (d (n "assert_approx_eq") (r "^1.0.0") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1.0.17") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.9.0") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.76") (d #t) (k 0)) (d (n "ndarray") (r "^0.13.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.3") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rayon") (r "^1.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.115") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "smallvec") (r "^1.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "handleapi" "memoryapi" "minwindef" "std" "sysinfoapi"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "yaml-rust") (r "^0.4") (d #t) (k 0)))) (h "0glz02zryn7mc3rii45km0nza4984f6qdyal5vph4bl4rwa7l5fl") (f (quote (("default"))))))

(define-public crate-pointcloud-0.3.9 (c (n "pointcloud") (v "0.3.9") (d (list (d (n "assert_approx_eq") (r "^1.0.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1.0.17") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.9.0") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.76") (d #t) (k 0)) (d (n "ndarray") (r "^0.13.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.3") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rayon") (r "^1.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.115") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "smallvec") (r "^1.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "handleapi" "memoryapi" "minwindef" "std" "sysinfoapi"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "yaml-rust") (r "^0.4") (d #t) (k 0)))) (h "14jh1zr4qjq2hcs2k2zyh0n4wzj2wqxjy2pdyqhib78j2gz4v7wf") (f (quote (("default"))))))

(define-public crate-pointcloud-0.5.0 (c (n "pointcloud") (v "0.5.0") (d (list (d (n "assert_approx_eq") (r "^1.0.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1.0.17") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.9.0") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.77") (d #t) (k 0)) (d (n "ndarray") (r "^0.14.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.4") (d #t) (k 0) (p "packed_simd_2")) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rayon") (r "^1.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.116") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "smallvec") (r "^1.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "handleapi" "memoryapi" "minwindef" "std" "sysinfoapi"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "yaml-rust") (r "^0.4") (d #t) (k 0)))) (h "0fx5fy2kvmhwjyyji0mck5dqj7p2sb2grvfpbqgi7wij8r7ck7sl") (f (quote (("default"))))))

(define-public crate-pointcloud-0.5.1 (c (n "pointcloud") (v "0.5.1") (d (list (d (n "assert_approx_eq") (r "^1.0.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1.0.17") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.9.0") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.77") (d #t) (k 0)) (d (n "ndarray") (r "^0.14.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.4") (d #t) (k 0) (p "packed_simd_2")) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rayon") (r "^1.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.116") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "smallvec") (r "^1.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "handleapi" "memoryapi" "minwindef" "std" "sysinfoapi"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "yaml-rust") (r "^0.4") (d #t) (k 0)))) (h "03xiw4a7hy6w635i57mw4vxsdr9x4aj6xzj299qbfzg8vz1rd486") (f (quote (("default"))))))

(define-public crate-pointcloud-0.5.2 (c (n "pointcloud") (v "0.5.2") (d (list (d (n "assert_approx_eq") (r "^1.0.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1.0.17") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.9.0") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.77") (d #t) (k 0)) (d (n "ndarray") (r "^0.14.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.4") (d #t) (k 0) (p "packed_simd_2")) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rayon") (r "^1.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.116") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "smallvec") (r "^1.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "handleapi" "memoryapi" "minwindef" "std" "sysinfoapi"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "yaml-rust") (r "^0.4") (d #t) (k 0)))) (h "173c6skr6mdkg7q3vbva2rx8rrxmf4cd8xa2baga0gxdzx2ksnz1") (f (quote (("default"))))))

(define-public crate-pointcloud-0.5.3 (c (n "pointcloud") (v "0.5.3") (d (list (d (n "assert_approx_eq") (r "^1.0.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1.0.17") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.9.0") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.77") (d #t) (k 0)) (d (n "ndarray") (r "^0.14.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.4") (d #t) (k 0) (p "packed_simd_2")) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rayon") (r "^1.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.116") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "smallvec") (r "^1.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "handleapi" "memoryapi" "minwindef" "std" "sysinfoapi"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "yaml-rust") (r "^0.4") (d #t) (k 0)))) (h "0fis9xv9hr3bvsdhk953yi59k0krcnppqddpw4wadanx560gddph") (f (quote (("default"))))))

(define-public crate-pointcloud-0.5.4 (c (n "pointcloud") (v "0.5.4") (d (list (d (n "assert_approx_eq") (r "^1.0.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1.0.17") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.9.0") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.77") (d #t) (k 0)) (d (n "ndarray") (r "^0.14.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.4") (d #t) (k 0) (p "packed_simd_2")) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rayon") (r "^1.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.116") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "smallvec") (r "^1.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "handleapi" "memoryapi" "minwindef" "std" "sysinfoapi"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "yaml-rust") (r "^0.4") (d #t) (k 0)))) (h "0q9b2nhm3wly94b4fhsljhlq7a15mhsh067hrbnlqw2r2nlyzxgf") (f (quote (("default"))))))

(define-public crate-pointcloud-0.5.5 (c (n "pointcloud") (v "0.5.5") (d (list (d (n "assert_approx_eq") (r "^1.0.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv") (r "^1.1.6") (d #t) (k 0)) (d (n "flate2") (r "^1.0.17") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.11.2") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.4") (d #t) (k 0) (p "packed_simd_2")) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "rayon") (r "^1.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.116") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "smallvec") (r "^1.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "handleapi" "memoryapi" "minwindef" "std" "sysinfoapi"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "yaml-rust") (r "^0.4") (d #t) (k 0)))) (h "0wk48mf6link0gpjbawhxyaqkq1f2ds7g19mqdirajb1awyls81b") (f (quote (("default"))))))

