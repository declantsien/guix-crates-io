(define-module (crates-io po ds podsync) #:use-module (crates-io))

(define-public crate-podsync-0.0.1 (c (n "podsync") (v "0.0.1") (h "1phiq80yyivxpazdqxkbfn3apdrn6jf67kwxi4cz4fn39k5zdlzf") (y #t)))

(define-public crate-podsync-0.1.0 (c (n "podsync") (v "0.1.0") (d (list (d (n "base64_light") (r "^0.1.5") (d #t) (k 0)) (d (n "clap") (r "^4.1.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cookie") (r "^0.17.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.1") (d #t) (k 0)) (d (n "sha256") (r "^1.1.2") (d #t) (k 0)) (d (n "sqlx") (r "^0.6.2") (f (quote ("runtime-tokio-native-tls" "sqlite" "time" "offline"))) (d #t) (k 0)) (d (n "time") (r "^0.3.20") (f (quote ("serde" "formatting" "parsing" "macros" "local-offset" "std"))) (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^1.3.0") (f (quote ("v4"))) (d #t) (k 0)) (d (n "warp") (r "^0.3.3") (d #t) (k 0)))) (h "19lsqlbr469kkhx887f5mv2i9cmz4qzfwh6cyhcvpsrs9q4klhkn")))

(define-public crate-podsync-0.1.1 (c (n "podsync") (v "0.1.1") (d (list (d (n "base64_light") (r "^0.1.5") (d #t) (k 0)) (d (n "clap") (r "^4.1.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cookie") (r "^0.17.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.1") (d #t) (k 0)) (d (n "sha256") (r "^1.1.2") (d #t) (k 0)) (d (n "sqlx") (r "^0.6.2") (f (quote ("runtime-tokio-native-tls" "sqlite" "time" "offline"))) (d #t) (k 0)) (d (n "time") (r "^0.3.20") (f (quote ("serde" "formatting" "parsing" "macros" "local-offset" "std"))) (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^1.3.0") (f (quote ("v4"))) (d #t) (k 0)) (d (n "warp") (r "^0.3.3") (d #t) (k 0)))) (h "13izn7z4142r5psmws05hybfhpy4k3lhvh9r2m2qfdc0b25sxzjg")))

(define-public crate-podsync-0.1.2 (c (n "podsync") (v "0.1.2") (d (list (d (n "base64_light") (r "^0.1.5") (d #t) (k 0)) (d (n "clap") (r "^4.1.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cookie") (r "^0.17.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.1") (d #t) (k 0)) (d (n "sha256") (r "^1.1.2") (d #t) (k 0)) (d (n "sqlx") (r "^0.6.2") (f (quote ("runtime-tokio-native-tls" "sqlite" "time" "offline"))) (d #t) (k 0)) (d (n "time") (r "^0.3.20") (f (quote ("serde" "formatting" "parsing" "macros" "local-offset" "std"))) (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^1.3.0") (f (quote ("v4"))) (d #t) (k 0)) (d (n "warp") (r "^0.3.3") (d #t) (k 0)))) (h "012nlnsjgg9y6v16psy1arbpjfj73b1z6158jzpxy9mnp8hzvd66")))

(define-public crate-podsync-0.1.3 (c (n "podsync") (v "0.1.3") (d (list (d (n "base64_light") (r "^0.1.5") (d #t) (k 0)) (d (n "clap") (r "^4.1.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cookie") (r "^0.17.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.1") (d #t) (k 0)) (d (n "sha256") (r "^1.1.2") (d #t) (k 0)) (d (n "sqlx") (r "^0.6.2") (f (quote ("sqlite" "time" "offline"))) (d #t) (k 0)) (d (n "time") (r "^0.3.20") (f (quote ("serde" "formatting" "parsing" "macros" "local-offset" "std"))) (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^1.3.0") (f (quote ("v4"))) (d #t) (k 0)) (d (n "warp") (r "^0.3.3") (d #t) (k 0)))) (h "1ni7qpssahh7zh7y35xg26j8k3i7ic34am1ai49gfdykq54y1yr2") (f (quote (("rustls" "sqlx/runtime-tokio-rustls" "warp/tokio-rustls") ("native-tls" "sqlx/runtime-tokio-native-tls") ("default" "rustls"))))))

(define-public crate-podsync-0.1.4 (c (n "podsync") (v "0.1.4") (d (list (d (n "base64_light") (r "^0.1.5") (d #t) (k 0)) (d (n "clap") (r "^4.4.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cookie") (r "^0.18.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_with") (r "^3.3.0") (d #t) (k 0)) (d (n "sha256") (r "^1.4.0") (d #t) (k 0)) (d (n "sqlx") (r "^0.6.3") (f (quote ("sqlite" "time" "offline"))) (d #t) (k 0)) (d (n "time") (r "^0.3.29") (f (quote ("serde" "formatting" "parsing" "macros" "local-offset" "std"))) (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "warp") (r "^0.3.6") (d #t) (k 0)))) (h "0zkl1fk0nf0k1j5njpa86kcjakslys43v7sd2scd0cygajpkrx0x") (f (quote (("rustls" "sqlx/runtime-tokio-rustls" "warp/tokio-rustls") ("native-tls" "sqlx/runtime-tokio-native-tls") ("default" "rustls"))))))

(define-public crate-podsync-0.1.5 (c (n "podsync") (v "0.1.5") (d (list (d (n "base64_light") (r "^0.1.5") (d #t) (k 0)) (d (n "clap") (r "^4.4.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cookie") (r "^0.18.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_with") (r "^3.3.0") (d #t) (k 0)) (d (n "sha256") (r "^1.4.0") (d #t) (k 0)) (d (n "sqlx") (r "^0.6.3") (f (quote ("sqlite" "time" "offline"))) (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3.29") (f (quote ("serde" "formatting" "parsing" "macros" "local-offset" "std"))) (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "warp") (r "^0.3.6") (d #t) (k 0)))) (h "1k0ga142a5cqd77yfgpwj81yqx93pd3xwm8kpq9ija2agi617h43") (f (quote (("rustls" "sqlx/runtime-tokio-rustls" "warp/tokio-rustls") ("native-tls" "sqlx/runtime-tokio-native-tls") ("default" "rustls") ("backend-file")))) (s 2) (e (quote (("backend-sql" "dep:sqlx"))))))

