(define-module (crates-io po ly poly_swc_emotion) #:use-module (crates-io))

(define-public crate-poly_swc_emotion-0.7.0 (c (n "poly_swc_emotion") (v "0.7.0") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "radix_fmt") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "sourcemap") (r "^6.0.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.11") (d #t) (k 0)) (d (n "swc_common") (r "^0.18.7") (f (quote ("concurrent" "sourcemap"))) (d #t) (k 0)) (d (n "swc_ecma_transforms_testing") (r "^0.89.0") (d #t) (k 2)) (d (n "swc_ecmascript") (r "^0.161.0") (f (quote ("codegen" "utils" "visit"))) (d #t) (k 0)) (d (n "swc_trace_macro") (r "^0.1.1") (d #t) (k 0)) (d (n "testing") (r "^0.20.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (f (quote ("release_max_level_info"))) (d #t) (k 0)))) (h "0zfpv06x4jnybd27b5my7bxj1lclxvqmsc3cm5ibanw2r57ifx8d")))

(define-public crate-poly_swc_emotion-0.7.1 (c (n "poly_swc_emotion") (v "0.7.1") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "radix_fmt") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "sourcemap") (r "^6.0.1") (d #t) (k 0)) (d (n "swc_atoms") (r "^0.2.11") (d #t) (k 0)) (d (n "swc_common") (r "^0.18.7") (f (quote ("concurrent" "sourcemap"))) (d #t) (k 0)) (d (n "swc_ecma_transforms_testing") (r "^0.91.0") (d #t) (k 2)) (d (n "swc_ecmascript") (r "^0.163.0") (f (quote ("codegen" "utils" "visit"))) (d #t) (k 0)) (d (n "swc_trace_macro") (r "^0.1.1") (d #t) (k 0)) (d (n "testing") (r "^0.20.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (f (quote ("release_max_level_info"))) (d #t) (k 0)))) (h "19fh9fchb7k1lckhkz2ppxnan8in8lmb28lzn8sqdd8vvlz5rh2b")))

