(define-module (crates-io po ly polyhash) #:use-module (crates-io))

(define-public crate-polyhash-0.1.0 (c (n "polyhash") (v "0.1.0") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "cpufeatures") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("std_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "subtle") (r "^2.5") (d #t) (k 0)) (d (n "zeroize") (r "^1.6") (f (quote ("derive"))) (o #t) (k 0)))) (h "0zz0hys7cly33zfjz4pnvskf0y50q0ggw9dnsn3byx8lnfcbdyyd") (f (quote (("std") ("soft") ("error_in_core") ("default" "zeroize")))) (s 2) (e (quote (("zeroize" "dep:zeroize"))))))

(define-public crate-polyhash-0.1.1 (c (n "polyhash") (v "0.1.1") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "cpufeatures") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("std_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "subtle") (r "^2.5") (d #t) (k 0)) (d (n "zeroize") (r "^1.6") (f (quote ("derive"))) (o #t) (k 0)))) (h "15y0rjrgksl5l0k7zgwlpmkbi22lrf36j3h7nbai8j1v3mxk2g5p") (f (quote (("std") ("soft") ("error_in_core") ("default" "zeroize")))) (s 2) (e (quote (("zeroize" "dep:zeroize"))))))

(define-public crate-polyhash-0.1.2 (c (n "polyhash") (v "0.1.2") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "cpufeatures") (r "^0.2") (d #t) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("std_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "subtle") (r "^2.5") (d #t) (k 0)) (d (n "zeroize") (r "^1.6") (f (quote ("derive"))) (o #t) (k 0)))) (h "1i7hr0jnzaw1kb75gvd8jimp24dxp4gxxzc631qirl6y2v5wrwfi") (f (quote (("std") ("soft") ("error_in_core") ("default" "zeroize")))) (s 2) (e (quote (("zeroize" "dep:zeroize"))))))

