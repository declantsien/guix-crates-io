(define-module (crates-io po ly polymer) #:use-module (crates-io))

(define-public crate-polymer-0.2.0 (c (n "polymer") (v "0.2.0") (d (list (d (n "alloc-cortex-m") (r "^0.4.0") (d #t) (k 0)) (d (n "cortex-m") (r "^0.6.3") (d #t) (k 0)) (d (n "cortex-m-async") (r "^0.1.0") (d #t) (k 0)) (d (n "cortex-m-logger") (r "^0.0.0-alpha.1") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.13") (d #t) (k 0)) (d (n "cortex-m-rtic") (r "^0.5.5") (d #t) (k 0)) (d (n "either") (r "^1.6.1") (k 0)) (d (n "embedded-executor") (r "^0.6.1") (f (quote ("alloc"))) (k 0)) (d (n "embedded-hal") (r "^0.2.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.7") (k 0)) (d (n "futures-intrusive") (r "^0.3.1") (k 0)) (d (n "keebrs") (r "^0.3.0") (d #t) (k 0)) (d (n "lock_api") (r "^0.4.1") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "newtype") (r "^0.2.1") (d #t) (k 0)) (d (n "panic-abort") (r "^0.3.2") (d #t) (k 0)) (d (n "panic-itm") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "panic-semihosting") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "pin-utils") (r "^0.1.0") (d #t) (k 0)) (d (n "stm32-usbd") (r "^0.5.1") (d #t) (k 0)) (d (n "stm32f1xx-futures") (r "^0.1.0") (f (quote ("stm32f103" "stm32-usbd"))) (d #t) (k 0)) (d (n "usb-device") (r "^0.2.7") (d #t) (k 0)))) (h "0xbifzv376lcb72hw2gr1z90xpsxjpjskm62chrvdsahdlf2kg78") (f (quote (("semihosting" "panic-semihosting" "cortex-m-logger/semihosting") ("log_warn" "log/release_max_level_warn") ("log_trace" "log/release_max_level_trace") ("log_off" "log/release_max_level_off") ("log_info" "log/release_max_level_info") ("log_error" "log/release_max_level_error") ("log_debug" "log/release_max_level_debug") ("itm" "panic-itm") ("default" "log_off"))))))

