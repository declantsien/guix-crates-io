(define-module (crates-io po ly polyanya) #:use-module (crates-io))

(define-public crate-polyanya-0.1.0 (c (n "polyanya") (v "0.1.0") (d (list (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "glam") (r "^0.21.3") (f (quote ("approx"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (d #t) (k 0)) (d (n "indexmap") (r "^1.9") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)) (d (n "tracing-tracy") (r "^0.10") (d #t) (k 2)))) (h "0awkw9z2n1x5x0qcqiqcxqyzgs11fjkpar14xdzf7p4rhg26k7sr") (f (quote (("verbose") ("stats"))))))

(define-public crate-polyanya-0.1.1 (c (n "polyanya") (v "0.1.1") (d (list (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "glam") (r "^0.21.3") (f (quote ("approx"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (d #t) (k 0)) (d (n "indexmap") (r "^1.9") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)) (d (n "tracing-tracy") (r "^0.10") (d #t) (k 2)))) (h "0lhhvx0dlfapiwwc7acbhpg164b90q94yiifpq1zzvfhbji0p61w") (f (quote (("verbose") ("stats"))))))

(define-public crate-polyanya-0.1.2 (c (n "polyanya") (v "0.1.2") (d (list (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "glam") (r "^0.21.3") (f (quote ("approx"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (d #t) (k 0)) (d (n "indexmap") (r "^1.9") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)) (d (n "tracing-tracy") (r "^0.10") (d #t) (k 2)))) (h "1lb09i7xdlh5pd238j25738kvnyg9xaxhnw78bsivilmkir4q9bg") (f (quote (("verbose") ("stats"))))))

(define-public crate-polyanya-0.1.3 (c (n "polyanya") (v "0.1.3") (d (list (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "glam") (r "^0.21.3") (f (quote ("approx"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (d #t) (k 0)) (d (n "indexmap") (r "^1.9") (d #t) (k 0)) (d (n "smallvec") (r "^1.9") (f (quote ("union" "const_generics"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)) (d (n "tracing-tracy") (r "^0.10") (d #t) (k 2)))) (h "0zgd2355dg042ydjwn0101vdlybqn1ds3r8q2b7rmd9l5v1cdgp4") (f (quote (("verbose") ("stats"))))))

(define-public crate-polyanya-0.1.4 (c (n "polyanya") (v "0.1.4") (d (list (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "glam") (r "^0.21.3") (f (quote ("approx"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (d #t) (k 0)) (d (n "indexmap") (r "^1.9") (d #t) (k 0)) (d (n "smallvec") (r "^1.9") (f (quote ("union" "const_generics"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)) (d (n "tracing-tracy") (r "^0.10") (d #t) (k 2)))) (h "0pj5r923bgr9h4bxzg20xmb0ssr8y740jnqv85y70djhl1v0w01a") (f (quote (("verbose") ("stats"))))))

(define-public crate-polyanya-0.1.5 (c (n "polyanya") (v "0.1.5") (d (list (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "glam") (r "^0.21.3") (f (quote ("approx"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (d #t) (k 0)) (d (n "indexmap") (r "^1.9") (d #t) (k 0)) (d (n "smallvec") (r "^1.9") (f (quote ("union" "const_generics"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)) (d (n "tracing-tracy") (r "^0.10") (d #t) (k 2)))) (h "180spcv84p3y0pwi6nfqzgbb0a2rxhiczdd341r2xrpandy0p20j") (f (quote (("verbose") ("stats") ("default" "async") ("async"))))))

(define-public crate-polyanya-0.1.6 (c (n "polyanya") (v "0.1.6") (d (list (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "glam") (r "^0.21.3") (f (quote ("approx"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (d #t) (k 0)) (d (n "indexmap") (r "^1.9") (d #t) (k 0)) (d (n "smallvec") (r "^1.9") (f (quote ("union" "const_generics"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)) (d (n "tracing-tracy") (r "^0.10") (d #t) (k 2)))) (h "0d6a7k8vganx5mc5kb1avrdmwysrvxri42mmz8w5ffxfkqzbhii5") (f (quote (("verbose") ("stats") ("default" "async") ("async"))))))

(define-public crate-polyanya-0.1.7 (c (n "polyanya") (v "0.1.7") (d (list (d (n "bvh2d") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "glam") (r "^0.21.3") (f (quote ("approx"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (d #t) (k 0)) (d (n "smallvec") (r "^1.9") (f (quote ("union" "const_generics"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)) (d (n "tracing-tracy") (r "^0.10") (d #t) (k 2)))) (h "01qhb1hji3fxzw3cblc84rmgq5hczmq0drlcxpgmxc1kpipka8v3") (f (quote (("verbose") ("stats") ("no-default-baking") ("default" "async") ("async"))))))

(define-public crate-polyanya-0.2.0 (c (n "polyanya") (v "0.2.0") (d (list (d (n "bvh2d") (r "^0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "glam") (r "^0.22") (f (quote ("approx"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.13") (d #t) (k 0)) (d (n "smallvec") (r "^1.9") (f (quote ("union" "const_generics"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)) (d (n "tracing-tracy") (r "^0.10") (d #t) (k 2)))) (h "1wz1bkj1sfxi7hqcqr5b6ympr6ac2289ghmjkqqpbp72knq8ggii") (f (quote (("verbose") ("stats") ("no-default-baking") ("default" "async") ("async"))))))

(define-public crate-polyanya-0.2.1 (c (n "polyanya") (v "0.2.1") (d (list (d (n "bvh2d") (r "^0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "glam") (r "^0.22") (f (quote ("approx"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.13") (d #t) (k 0)) (d (n "smallvec") (r "^1.9") (f (quote ("union" "const_generics"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)) (d (n "tracing-tracy") (r "^0.10") (d #t) (k 2)))) (h "1if1v77yg51hi8grr510j6ysxh1xxd85sq1h5alp7graxnl2ffbk") (f (quote (("verbose") ("stats") ("no-default-baking") ("default" "async") ("async"))))))

(define-public crate-polyanya-0.3.0 (c (n "polyanya") (v "0.3.0") (d (list (d (n "bvh2d") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "glam") (r "^0.23") (f (quote ("approx"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.13") (d #t) (k 0)) (d (n "smallvec") (r "^1.9") (f (quote ("union" "const_generics"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)) (d (n "tracing-tracy") (r "^0.10") (d #t) (k 2)))) (h "1l89w15p72zlpykhxv9digm566hyzq0w6j7zn2b81sz31va0rpf0") (f (quote (("verbose") ("stats") ("no-default-baking") ("default" "async") ("async"))))))

(define-public crate-polyanya-0.4.0 (c (n "polyanya") (v "0.4.0") (d (list (d (n "bvh2d") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "glam") (r "^0.24") (f (quote ("approx"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.13") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.9") (f (quote ("union" "const_generics"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)) (d (n "tracing-tracy") (r "^0.10") (d #t) (k 2)))) (h "0xvw7wz8v9h1qgylh52041pg119cvp8qpd03li9zfmgm6mnhakw5") (f (quote (("verbose") ("stats") ("no-default-baking") ("default" "async") ("async")))) (s 2) (e (quote (("serde" "glam/serde" "bvh2d/serde" "dep:serde"))))))

(define-public crate-polyanya-0.5.0 (c (n "polyanya") (v "0.5.0") (d (list (d (n "bvh2d") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "geo") (r "^0.26.0") (d #t) (k 0)) (d (n "glam") (r "^0.24") (f (quote ("approx"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.9") (f (quote ("union" "const_generics"))) (d #t) (k 0)) (d (n "spade") (r "^2.2") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)) (d (n "tracing-tracy") (r "^0.10") (d #t) (k 2)))) (h "0rqb6f2qfj3jzwxnwyw2mwnbvlpzz750g3za6hdmhalzimir9v57") (f (quote (("verbose") ("stats") ("no-default-baking") ("default" "async") ("async")))) (y #t) (s 2) (e (quote (("serde" "glam/serde" "bvh2d/serde" "dep:serde"))))))

(define-public crate-polyanya-0.5.1 (c (n "polyanya") (v "0.5.1") (d (list (d (n "bvh2d") (r "^0.4") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "geo") (r "^0.26.0") (d #t) (k 0)) (d (n "glam") (r "^0.25") (f (quote ("approx"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.9") (f (quote ("union" "const_generics"))) (d #t) (k 0)) (d (n "spade") (r "^2.2") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)) (d (n "tracing-tracy") (r "^0.10") (d #t) (k 2)))) (h "1q1rbfbdy1ixb4pbsikrj4dpw0wvp6lzi2sixlrzlnq1614sgj27") (f (quote (("verbose") ("stats") ("no-default-baking") ("default" "async") ("async")))) (s 2) (e (quote (("serde" "glam/serde" "bvh2d/serde" "dep:serde"))))))

(define-public crate-polyanya-0.5.2 (c (n "polyanya") (v "0.5.2") (d (list (d (n "bvh2d") (r "^0.4") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "geo") (r "^0.26.0") (d #t) (k 0)) (d (n "glam") (r "^0.25") (f (quote ("approx"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.9") (f (quote ("union" "const_generics"))) (d #t) (k 0)) (d (n "spade") (r "^2.2") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)) (d (n "tracing-tracy") (r "^0.10") (d #t) (k 2)))) (h "1z16c1s2cbwx04lrrchzscwa0hbcxal34ziybrhdijfjyq15kwj6") (f (quote (("verbose") ("stats") ("no-default-baking") ("default" "async") ("async")))) (s 2) (e (quote (("serde" "glam/serde" "bvh2d/serde" "dep:serde"))))))

