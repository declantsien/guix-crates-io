(define-module (crates-io po ly polyio) #:use-module (crates-io))

(define-public crate-polyio-0.0.0 (c (n "polyio") (v "0.0.0") (h "10d8g0hs4xr839fl1l3s087nfhwl54c2bjgblgmbr4a057qmh40g")))

(define-public crate-polyio-0.1.0 (c (n "polyio") (v "0.1.0") (d (list (d (n "futures") (r "^0.3") (k 0)) (d (n "http-endpoint") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.13") (k 0)) (d (n "hyper-tls") (r "^0.4") (k 0)) (d (n "num-decimal") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.2") (f (quote ("trace"))) (k 2)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "macros"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes" "std"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future"))) (k 0)) (d (n "tracing-subscriber") (r "^0.1.6") (f (quote ("ansi" "chrono" "env-filter" "fmt"))) (k 2)) (d (n "tungstenite") (r "^0.3") (f (quote ("tokio-runtime" "tokio-tls"))) (k 0) (p "async-tungstenite")) (d (n "url") (r "^2.0") (d #t) (k 0)) (d (n "websocket-util") (r "^0.2") (d #t) (k 0)) (d (n "websocket-util") (r "^0.2") (f (quote ("test"))) (d #t) (k 2)))) (h "0dv90i38i5h8ig3g1bzix8q6hv5mndl19910gslxfcpx49jcf4ma")))

(define-public crate-polyio-0.1.1 (c (n "polyio") (v "0.1.1") (d (list (d (n "chrono") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "http-endpoint") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.13") (k 0)) (d (n "hyper-tls") (r "^0.4") (k 0)) (d (n "maplit") (r "^1.0") (k 2)) (d (n "num-decimal") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.2") (f (quote ("trace"))) (k 2)) (d (n "time-util") (r "^0.1") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "macros"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes" "std"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future"))) (k 0)) (d (n "tracing-subscriber") (r "^0.1.6") (f (quote ("ansi" "chrono" "env-filter" "fmt"))) (k 2)) (d (n "tungstenite") (r "^0.3") (f (quote ("tokio-runtime" "tokio-tls"))) (k 0) (p "async-tungstenite")) (d (n "url") (r "^2.0") (d #t) (k 0)) (d (n "websocket-util") (r "^0.2") (d #t) (k 0)) (d (n "websocket-util") (r "^0.2") (f (quote ("test"))) (d #t) (k 2)))) (h "0pdqxqip711g83sjc651kjprcac9r7glz8xppwg14mfm996w0hra")))

(define-public crate-polyio-0.1.2 (c (n "polyio") (v "0.1.2") (d (list (d (n "chrono") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "http-endpoint") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.13") (k 0)) (d (n "hyper-tls") (r "^0.4") (k 0)) (d (n "maplit") (r "^1.0") (k 2)) (d (n "num-decimal") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.2") (f (quote ("trace"))) (k 2)) (d (n "time-util") (r "^0.1") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "macros"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes" "std"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future"))) (k 0)) (d (n "tracing-subscriber") (r "^0.1.6") (f (quote ("ansi" "chrono" "env-filter" "fmt"))) (k 2)) (d (n "tungstenite") (r "^0.3") (f (quote ("tokio-runtime" "tokio-tls"))) (k 0) (p "async-tungstenite")) (d (n "url") (r "^2.0") (d #t) (k 0)) (d (n "websocket-util") (r "^0.2") (d #t) (k 0)) (d (n "websocket-util") (r "^0.2") (f (quote ("test"))) (d #t) (k 2)))) (h "1x680hv5ilrf92mbczms646wqiwgkrhq6mjk0fngqr5dl152zay2")))

(define-public crate-polyio-0.2.0 (c (n "polyio") (v "0.2.0") (d (list (d (n "chrono") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "http-endpoint") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.13") (k 0)) (d (n "hyper-tls") (r "^0.4") (k 0)) (d (n "maplit") (r "^1.0") (k 2)) (d (n "num-decimal") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.2") (f (quote ("trace"))) (k 2)) (d (n "time-util") (r "^0.2") (f (quote ("chrono" "serde"))) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "macros"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes" "std"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future"))) (k 0)) (d (n "tracing-subscriber") (r "^0.1.6") (f (quote ("ansi" "chrono" "env-filter" "fmt"))) (k 2)) (d (n "tungstenite") (r "^0.4") (f (quote ("tokio-runtime" "tokio-tls"))) (k 0) (p "async-tungstenite")) (d (n "url") (r "^2.0") (d #t) (k 0)) (d (n "websocket-util") (r "^0.3") (d #t) (k 0)) (d (n "websocket-util") (r "^0.3") (f (quote ("test"))) (d #t) (k 2)))) (h "177mw7ay0bmqmlmc36gr6wz7kp5iljsqxd8i8831xp2a8xr9pjxj")))

(define-public crate-polyio-0.3.0 (c (n "polyio") (v "0.3.0") (d (list (d (n "chrono") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "http-endpoint") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.13") (k 0)) (d (n "hyper-tls") (r "^0.4") (k 0)) (d (n "maplit") (r "^1.0") (k 2)) (d (n "num-decimal") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.2") (f (quote ("trace"))) (k 2)) (d (n "time-util") (r "^0.2") (f (quote ("chrono" "serde"))) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "macros"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes" "std"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future"))) (k 0)) (d (n "tracing-subscriber") (r "^0.1.6") (f (quote ("ansi" "chrono" "env-filter" "fmt"))) (k 2)) (d (n "tungstenite") (r "^0.4") (f (quote ("tokio-runtime" "tokio-tls"))) (k 0) (p "async-tungstenite")) (d (n "url") (r "^2.0") (d #t) (k 0)) (d (n "websocket-util") (r "^0.3") (d #t) (k 0)) (d (n "websocket-util") (r "^0.3") (f (quote ("test"))) (d #t) (k 2)))) (h "0z4rn7widfhd52c8k40ib8xh3wz69mgl4lj4045bp9l7rl4rbqkx")))

(define-public crate-polyio-0.4.0 (c (n "polyio") (v "0.4.0") (d (list (d (n "chrono") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "http-endpoint") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.13") (k 0)) (d (n "hyper-tls") (r "^0.4") (k 0)) (d (n "maplit") (r "^1.0") (k 2)) (d (n "num-decimal") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.2") (f (quote ("trace"))) (k 2)) (d (n "time-util") (r "^0.2") (f (quote ("chrono" "serde"))) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "macros"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes" "std"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future"))) (k 0)) (d (n "tracing-subscriber") (r "^0.1.6") (f (quote ("ansi" "chrono" "env-filter" "fmt"))) (k 2)) (d (n "tungstenite") (r "^0.4") (f (quote ("tokio-runtime" "tokio-tls"))) (k 0) (p "async-tungstenite")) (d (n "url") (r "^2.0") (d #t) (k 0)) (d (n "websocket-util") (r "^0.3") (d #t) (k 0)) (d (n "websocket-util") (r "^0.3") (f (quote ("test"))) (d #t) (k 2)))) (h "1hxb2cvqr4naasz3vh5bw6s1b86ikqnbkypy26c3v1y0jsv61i7v")))

(define-public crate-polyio-0.5.0 (c (n "polyio") (v "0.5.0") (d (list (d (n "chrono") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "http") (r "^0.2") (k 0)) (d (n "http-endpoint") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.13") (k 0)) (d (n "hyper-tls") (r "^0.4") (k 0)) (d (n "maplit") (r "^1.0") (k 2)) (d (n "num-decimal") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.2") (f (quote ("trace"))) (k 2)) (d (n "time-util") (r "^0.2") (f (quote ("chrono" "serde"))) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "macros"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes" "std"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future"))) (k 0)) (d (n "tracing-subscriber") (r "^0.1.6") (f (quote ("ansi" "chrono" "env-filter" "fmt"))) (k 2)) (d (n "tungstenite") (r "^0.4") (f (quote ("tokio-runtime" "tokio-tls"))) (k 0) (p "async-tungstenite")) (d (n "url") (r "^2.0") (d #t) (k 0)) (d (n "websocket-util") (r "^0.4") (d #t) (k 0)) (d (n "websocket-util") (r "^0.4") (f (quote ("test"))) (d #t) (k 2)))) (h "088vv93cyr978427b5f0rvsyn8z2sxiq9ig5zg0bxd567xcnl9fa")))

(define-public crate-polyio-0.6.0 (c (n "polyio") (v "0.6.0") (d (list (d (n "chrono") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "http") (r "^0.2") (k 0)) (d (n "http-endpoint") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.13") (k 0)) (d (n "hyper-tls") (r "^0.4") (k 0)) (d (n "maplit") (r "^1.0") (k 2)) (d (n "num-decimal") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.2") (f (quote ("trace"))) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time-util") (r "^0.2") (f (quote ("chrono" "serde"))) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "macros"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes" "std"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future"))) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("ansi" "chrono" "env-filter" "fmt"))) (k 2)) (d (n "tungstenite") (r "^0.5") (f (quote ("tokio-runtime" "tokio-tls"))) (k 0) (p "async-tungstenite")) (d (n "url") (r "^2.0") (d #t) (k 0)) (d (n "websocket-util") (r "^0.5") (d #t) (k 0)) (d (n "websocket-util") (r "^0.5") (f (quote ("test"))) (d #t) (k 2)))) (h "1s4l6p60i7i4nbx4fwr70d5mi887dvp6jrbajg9ss68prk4ndw9n")))

(define-public crate-polyio-0.7.0 (c (n "polyio") (v "0.7.0") (d (list (d (n "chrono") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "http") (r "^0.2") (k 0)) (d (n "http-endpoint") (r "^0.4") (d #t) (k 0)) (d (n "hyper") (r "^0.13") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-tls") (r "^0.4") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "maplit") (r "^1.0") (k 2)) (d (n "num-decimal") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.2") (f (quote ("trace"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time-util") (r "^0.2") (f (quote ("chrono" "serde"))) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "macros"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes" "std"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future"))) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("ansi" "chrono" "env-filter" "fmt"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tungstenite") (r "^0.8") (f (quote ("tokio-runtime" "tokio-native-tls"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "async-tungstenite")) (d (n "url") (r "^2.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("std" "serde-serialize"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Headers" "Request" "RequestInit" "RequestMode" "Response" "Window"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "websocket-util") (r "^0.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "websocket-util") (r "^0.6") (f (quote ("test"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)))) (h "1wwv7yiv4ylcr5n1qp067p42gvzjfrbhyk51g8r1ri7pc4wz4v61")))

(define-public crate-polyio-0.8.0 (c (n "polyio") (v "0.8.0") (d (list (d (n "chrono") (r ">=0.4.0, <0.5.0") (k 0)) (d (n "futures") (r ">=0.3.0, <0.4.0") (k 0)) (d (n "http") (r ">=0.2.0, <0.3.0") (k 0)) (d (n "http-endpoint") (r ">=0.4.0, <0.5.0") (d #t) (k 0)) (d (n "hyper") (r ">=0.13.0, <0.14.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-tls") (r ">=0.4.0, <0.5.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r ">=0.3.0, <0.4.0") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "maplit") (r ">=1.0.0, <2.0.0") (k 2)) (d (n "num-decimal") (r ">=0.2.0, <0.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r ">=1.0.0, <2.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "test-env-log") (r ">=0.2.2, <0.3.0") (f (quote ("trace"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "time-util") (r ">=0.3.0, <0.4.0") (f (quote ("chrono" "chrono-tz" "serde"))) (d #t) (k 0)) (d (n "tokio") (r ">=0.2.0, <0.3.0") (f (quote ("rt-core" "macros"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing") (r ">=0.1.0, <0.2.0") (f (quote ("attributes" "std"))) (k 0)) (d (n "tracing-futures") (r ">=0.2.0, <0.3.0") (f (quote ("std-future"))) (k 0)) (d (n "tracing-subscriber") (r ">=0.2.0, <0.3.0") (f (quote ("ansi" "chrono" "env-filter" "fmt"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tungstenite") (r ">=0.8.0, <0.9.0") (f (quote ("tokio-runtime" "tokio-native-tls"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "async-tungstenite")) (d (n "url") (r ">=2.0.0, <3.0.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r ">=0.2.0, <0.3.0") (f (quote ("std" "serde-serialize"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r ">=0.4.0, <0.5.0") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r ">=0.3.0, <0.4.0") (f (quote ("Headers" "Request" "RequestInit" "RequestMode" "Response" "Window"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "websocket-util") (r ">=0.6.0, <0.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "websocket-util") (r ">=0.6.0, <0.7.0") (f (quote ("test"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)))) (h "1m5s7h1l3xcqnf76fky571p23h29ya4fn2yzzs8gi1m0xh46vw49")))

(define-public crate-polyio-0.8.1 (c (n "polyio") (v "0.8.1") (d (list (d (n "chrono") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "http") (r "^0.2") (k 0)) (d (n "http-endpoint") (r "^0.4") (d #t) (k 0)) (d (n "hyper") (r "^0.13") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-tls") (r "^0.4") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "maplit") (r "^1.0") (k 2)) (d (n "num-decimal") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.2") (f (quote ("trace"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time-util") (r "^0.3") (f (quote ("chrono" "chrono-tz" "serde"))) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "macros"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes" "std"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future"))) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("ansi" "chrono" "env-filter" "fmt"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tungstenite") (r "^0.8") (f (quote ("tokio-runtime" "tokio-native-tls"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "async-tungstenite")) (d (n "url") (r "^2.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("std" "serde-serialize"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Headers" "Request" "RequestInit" "RequestMode" "Response" "Window"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "websocket-util") (r "^0.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "websocket-util") (r "^0.6") (f (quote ("test"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)))) (h "1z8as4c4y47hif35pp5k7ign0gwafzxh1lr3fzdl1xgl9iyb4yxa")))

(define-public crate-polyio-0.9.0 (c (n "polyio") (v "0.9.0") (d (list (d (n "chrono") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "http") (r "^0.2") (k 0)) (d (n "http-endpoint") (r "^0.4") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("client" "http1"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-tls") (r "^0.5") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "maplit") (r "^1.0") (k 2)) (d (n "num-decimal") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.2") (f (quote ("trace"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time-util") (r "^0.3") (f (quote ("chrono" "chrono-tz" "serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes" "std"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future"))) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("ansi" "chrono" "env-filter" "fmt"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tungstenite") (r "^0.13") (f (quote ("connect" "tls"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "tokio-tungstenite")) (d (n "url") (r "^2.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("std" "serde-serialize"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Headers" "Request" "RequestInit" "RequestMode" "Response" "Window"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "websocket-util") (r "^0.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "websocket-util") (r "^0.7") (f (quote ("test"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)))) (h "06r2m5q6iqi2yj8cvbhbgipdnhh2wbm8mbgbf07vbjszqaz0f09d")))

(define-public crate-polyio-0.10.0 (c (n "polyio") (v "0.10.0") (d (list (d (n "chrono") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "http") (r "^0.2") (k 0)) (d (n "http-endpoint") (r "^0.4") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("client" "http1"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-tls") (r "^0.5") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "maplit") (r "^1.0") (k 2)) (d (n "num-decimal") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.2") (f (quote ("trace"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time-util") (r "^0.3") (f (quote ("chrono" "chrono-tz" "serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes" "std"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future"))) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("ansi" "chrono" "env-filter" "fmt"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tungstenite") (r "^0.14") (f (quote ("connect" "native-tls"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "tokio-tungstenite")) (d (n "url") (r "^2.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("std" "serde-serialize"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Headers" "Request" "RequestInit" "RequestMode" "Response" "Window"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "websocket-util") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "websocket-util") (r "^0.8") (f (quote ("test"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)))) (h "0wangra7lyf5bh3z2vj51rq851f5i4bmq8izivvwzk6sav74hpi5")))

(define-public crate-polyio-0.11.0 (c (n "polyio") (v "0.11.0") (d (list (d (n "chrono") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "http") (r "^0.2") (k 0)) (d (n "http-endpoint") (r "^0.4") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("client" "http1"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-tls") (r "^0.5") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "maplit") (r "^1.0") (k 2)) (d (n "num-decimal") (r "^0.2.4") (f (quote ("num-v04" "serde"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.2") (f (quote ("trace"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time-util") (r "^0.3") (f (quote ("chrono" "chrono-tz" "serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes" "std"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future"))) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("ansi" "chrono" "env-filter" "fmt"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tungstenite") (r "^0.14") (f (quote ("connect" "native-tls"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "tokio-tungstenite")) (d (n "url") (r "^2.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("std" "serde-serialize"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Headers" "Request" "RequestInit" "RequestMode" "Response" "Window"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "websocket-util") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "websocket-util") (r "^0.8") (f (quote ("test"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)))) (h "0d3wxyj9345bxzvw6nrs9nzx1ln0n1rgwkwaks0wdzcg3v799536")))

(define-public crate-polyio-0.12.0 (c (n "polyio") (v "0.12.0") (d (list (d (n "chrono") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "http") (r "^0.2") (k 0)) (d (n "http-endpoint") (r "^0.4") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("client" "http1"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-tls") (r "^0.5") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "maplit") (r "^1.0") (k 2)) (d (n "num-decimal") (r "^0.2.4") (f (quote ("num-v04" "serde"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "test-log") (r "^0.2.8") (f (quote ("trace"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time-util") (r "^0.3") (f (quote ("chrono" "chrono-tz" "serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes" "std"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future"))) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("ansi" "chrono" "env-filter" "fmt"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tungstenite") (r "^0.16") (f (quote ("connect" "native-tls"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "tokio-tungstenite")) (d (n "url") (r "^2.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("std" "serde-serialize"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Headers" "Request" "RequestInit" "RequestMode" "Response" "Window"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "websocket-util") (r "^0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "websocket-util") (r "^0.9") (f (quote ("test"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)))) (h "0phd902n7nygcrwwj4cxyg12d8h5a2cljpvsr1pbdr6v99y286fx")))

(define-public crate-polyio-0.13.0 (c (n "polyio") (v "0.13.0") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (k 2)) (d (n "futures") (r "^0.3") (k 0)) (d (n "http") (r "^0.2") (k 0)) (d (n "http-endpoint") (r "^0.5") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("client" "http1"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-tls") (r "^0.5") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "maplit") (r "^1.0") (k 2)) (d (n "num-decimal") (r "^0.2.4") (f (quote ("num-v04" "serde"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "test-log") (r "^0.2.8") (f (quote ("trace"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "macros"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("attributes" "std"))) (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std-future"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "fmt"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tungstenite") (r "^0.16") (f (quote ("connect" "native-tls"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "tokio-tungstenite")) (d (n "url") (r "^2.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("std" "serde-serialize"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Headers" "Request" "RequestInit" "RequestMode" "Response" "Window"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "websocket-util") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "websocket-util") (r "^0.10.1") (f (quote ("test"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)))) (h "0iw8829gw5kf9kf4v3c00wndaisr8pfpczj4xb3f6h5ckb6jz5b2")))

