(define-module (crates-io po ly polyfit-residuals) #:use-module (crates-io))

(define-public crate-polyfit-residuals-0.1.0 (c (n "polyfit-residuals") (v "0.1.0") (d (list (d (n "approx") (r "^0.5.1") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "ndarray") (r "^0.15.6") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (f (quote ("approx-0_5"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)))) (h "012gvgzfjc6dzsnnsr7xp0x2xc3gxl43n48ajkx9qbxsjfpbkcy9")))

(define-public crate-polyfit-residuals-0.2.0 (c (n "polyfit-residuals") (v "0.2.0") (d (list (d (n "approx") (r "^0.5.1") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "ndarray") (r "^0.15.6") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (f (quote ("approx-0_5"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)))) (h "0xydbkld7kkf9zacgmhqfyz93j7zby6nxzvv3knxb28hlvcp25jd")))

(define-public crate-polyfit-residuals-0.3.0 (c (n "polyfit-residuals") (v "0.3.0") (d (list (d (n "approx") (r "^0.5.1") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "ndarray") (r "^0.15.6") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (f (quote ("approx-0_5"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)))) (h "0qxjh1dmrphwqykdpffi1ln98a1sa9n0n03icafb8r75v25wcjmm")))

(define-public crate-polyfit-residuals-0.3.1 (c (n "polyfit-residuals") (v "0.3.1") (d (list (d (n "approx") (r "^0.5.1") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "ndarray") (r "^0.15.6") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (f (quote ("approx-0_5"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)))) (h "01hlz82xydh4cfi2r3186lh15jl1gj72iz6xz3y5fyi38kjbmz3m")))

(define-public crate-polyfit-residuals-0.3.2 (c (n "polyfit-residuals") (v "0.3.2") (d (list (d (n "approx") (r "^0.5.1") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "ndarray") (r "^0.15.6") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (f (quote ("approx-0_5"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)))) (h "12l4dhzrs7d2yiwr91ll8b5pwwdc9bha35i2vpaxp9xi1d6fws2r")))

(define-public crate-polyfit-residuals-0.3.3 (c (n "polyfit-residuals") (v "0.3.3") (d (list (d (n "approx") (r "^0.5.1") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "ndarray") (r "^0.15.6") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (f (quote ("approx-0_5"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "rayon") (r "^1.6.1") (o #t) (d #t) (k 0)))) (h "1pddxw7nvrvgy6b87a6l6blb1xn5zrsb43a811qaaz18r70n7hp8") (s 2) (e (quote (("parallel_rayon" "dep:rayon"))))))

(define-public crate-polyfit-residuals-0.3.4 (c (n "polyfit-residuals") (v "0.3.4") (d (list (d (n "approx") (r "^0.5.1") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "ndarray") (r "^0.15.6") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (f (quote ("approx-0_5"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "rayon") (r "^1.6.1") (o #t) (d #t) (k 0)))) (h "1z3d6dc9859l533vpmvh2vnk2v8sx6k5didhj2g6z766ddxz2a77") (s 2) (e (quote (("parallel_rayon" "dep:rayon"))))))

(define-public crate-polyfit-residuals-0.4.0 (c (n "polyfit-residuals") (v "0.4.0") (d (list (d (n "approx") (r "^0.5.1") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "ndarray") (r "^0.15.6") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (f (quote ("approx-0_5"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "rayon") (r "^1.6.1") (o #t) (d #t) (k 0)))) (h "0c23hm3wsi56m5smx3d3ydvk9a8yqfsxkbb9l722ghy0a3902q2c") (f (quote (("nightly-only") ("default" "parallel_rayon")))) (s 2) (e (quote (("parallel_rayon" "dep:rayon"))))))

(define-public crate-polyfit-residuals-0.5.0 (c (n "polyfit-residuals") (v "0.5.0") (d (list (d (n "approx") (r "^0.5.1") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "maybe-debug") (r "^0.1.0") (d #t) (k 2)) (d (n "ndarray") (r "^0.15.6") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (f (quote ("approx-0_5"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "rayon") (r "^1.6.1") (o #t) (d #t) (k 0)))) (h "1nd4j8axjihdi2q7mni3y2i1xnwykn6ccf8fql5yakka53bwnlsb") (f (quote (("nightly-only") ("default" "parallel_rayon")))) (s 2) (e (quote (("parallel_rayon" "dep:rayon"))))))

(define-public crate-polyfit-residuals-0.6.0 (c (n "polyfit-residuals") (v "0.6.0") (d (list (d (n "approx") (r "^0.5.1") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "maybe-debug") (r "^0.1.0") (d #t) (k 2)) (d (n "ndarray") (r "^0.15.6") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (f (quote ("approx-0_5"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "rayon") (r "^1.6.1") (o #t) (d #t) (k 0)))) (h "077jz33h1v4hwma1zw63rnvq2nlz1qc0k6k1naczcxwipqh00qa2") (f (quote (("nightly-only") ("default" "parallel_rayon")))) (s 2) (e (quote (("parallel_rayon" "dep:rayon"))))))

(define-public crate-polyfit-residuals-0.6.1 (c (n "polyfit-residuals") (v "0.6.1") (d (list (d (n "approx") (r "^0.5.1") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "maybe-debug") (r "^0.1.0") (d #t) (k 2)) (d (n "ndarray") (r "^0.15.6") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (f (quote ("approx-0_5"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "rayon") (r "^1.6.1") (o #t) (d #t) (k 0)))) (h "0z0yh03nb5jhgmjbrbdp5vrv9q8hlsbgccskk6rpbc9h1ssw7nin") (f (quote (("nightly-only") ("default" "parallel_rayon")))) (s 2) (e (quote (("parallel_rayon" "dep:rayon"))))))

(define-public crate-polyfit-residuals-0.6.2 (c (n "polyfit-residuals") (v "0.6.2") (d (list (d (n "approx") (r "^0.5.1") (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "itertools") (r "^0.13.0") (d #t) (k 0)) (d (n "maybe-debug") (r "^0.1.0") (d #t) (k 2)) (d (n "ndarray") (r "^0.15.6") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (f (quote ("approx-0_5"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "rayon") (r "^1.6.1") (o #t) (d #t) (k 0)))) (h "0ywdlzfyjnsnp8cqgdlj5i79xwdzc91kg7xpvdaygbvvdhk9svfd") (f (quote (("nightly-only") ("default" "parallel_rayon")))) (s 2) (e (quote (("parallel_rayon" "dep:rayon"))))))

(define-public crate-polyfit-residuals-0.6.3 (c (n "polyfit-residuals") (v "0.6.3") (d (list (d (n "approx") (r "^0.5.1") (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "itertools") (r "^0.13.0") (d #t) (k 0)) (d (n "maybe-debug") (r "^0.1.0") (d #t) (k 2)) (d (n "ndarray") (r "^0.15.6") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (f (quote ("approx-0_5"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "rayon") (r "^1.6.1") (o #t) (d #t) (k 0)))) (h "1nx3mjbj7ccajdj93w2sc2nwsjhc9hymzf5rgcw1mzfwfz09wr3q") (f (quote (("nightly-only") ("default" "parallel_rayon")))) (s 2) (e (quote (("parallel_rayon" "dep:rayon"))))))

