(define-module (crates-io po lk polkadot-runtime-common) #:use-module (crates-io))

(define-public crate-polkadot-runtime-common-0.0.0 (c (n "polkadot-runtime-common") (v "0.0.0") (h "0q8s0n16shn6vrq5p30a0rz5595b964j0cnk1kx3bmnzxd5p7d89") (y #t)))

(define-public crate-polkadot-runtime-common-0.1.0-dev.6 (c (n "polkadot-runtime-common") (v "0.1.0-dev.6") (d (list (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (k 0)) (d (n "frame-benchmarking") (r "=21.1.0-dev.6") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "=21.1.0-dev.6") (k 0)) (d (n "frame-support") (r "=21.1.0-dev.6") (k 0)) (d (n "frame-system") (r "=21.1.0-dev.6") (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "inherents") (r "=19.1.0-dev.6") (k 0) (p "sp-inherents")) (d (n "libsecp256k1") (r "^0.7.0") (k 0)) (d (n "libsecp256k1") (r "^0.7.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "=21.1.0-dev.6") (k 0)) (d (n "pallet-babe") (r "=21.1.0-dev.6") (o #t) (k 0)) (d (n "pallet-babe") (r "=21.1.0-dev.6") (d #t) (k 2)) (d (n "pallet-balances") (r "=21.1.0-dev.6") (k 0)) (d (n "pallet-election-provider-multi-phase") (r "=20.1.0-dev.6") (k 0)) (d (n "pallet-fast-unstake") (r "=20.1.0-dev.6") (k 0)) (d (n "pallet-session") (r "=21.1.0-dev.6") (k 0)) (d (n "pallet-staking") (r "=21.1.0-dev.6") (k 0)) (d (n "pallet-staking-reward-fn") (r "=12.1.0-dev.6") (k 0)) (d (n "pallet-timestamp") (r "=20.1.0-dev.6") (k 0)) (d (n "pallet-transaction-payment") (r "=21.1.0-dev.6") (k 0)) (d (n "pallet-treasury") (r "=20.1.0-dev.6") (k 0)) (d (n "pallet-treasury") (r "=20.1.0-dev.6") (d #t) (k 2)) (d (n "pallet-vesting") (r "=21.1.0-dev.6") (k 0)) (d (n "parity-scale-codec") (r "^3.6.1") (f (quote ("derive"))) (k 0)) (d (n "primitives") (r "=0.1.0-dev.6") (k 0) (p "polkadot-primitives")) (d (n "runtime-parachains") (r "=0.1.0-dev.6") (k 0) (p "polkadot-runtime-parachains")) (d (n "rustc-hex") (r "^2.1.0") (k 0)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("alloc"))) (k 0)) (d (n "serde_derive") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 2)) (d (n "slot-range-helper") (r "=0.1.0-dev.6") (k 0)) (d (n "sp-api") (r "=19.1.0-dev.6") (k 0)) (d (n "sp-core") (r "=21.1.0-dev.6") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "=23.1.0-dev.6") (k 0)) (d (n "sp-keyring") (r "=24.1.0-dev.6") (d #t) (k 2)) (d (n "sp-keystore") (r "=0.28.0-dev.6") (d #t) (k 2)) (d (n "sp-npos-elections") (r "=19.1.0-dev.6") (f (quote ("serde"))) (k 0)) (d (n "sp-runtime") (r "=24.1.0-dev.6") (f (quote ("serde"))) (k 0)) (d (n "sp-session") (r "=20.1.0-dev.6") (k 0)) (d (n "sp-staking") (r "=19.1.0-dev.6") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "=8.1.0-dev.6") (k 0) (p "sp-std")) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "xcm") (r "=0.1.0-dev.6") (k 0) (p "staging-xcm")))) (h "13cn77af6xawg2qppqw73qi771as2xjyjqm115xsw5vg27zmb652") (f (quote (("try-runtime" "runtime-parachains/try-runtime" "pallet-authorship/try-runtime" "pallet-balances/try-runtime" "pallet-session/try-runtime" "pallet-staking/try-runtime" "pallet-timestamp/try-runtime" "pallet-vesting/try-runtime" "pallet-transaction-payment/try-runtime" "pallet-treasury/try-runtime" "pallet-fast-unstake/try-runtime") ("std" "bitvec/std" "parity-scale-codec/std" "scale-info/std" "log/std" "rustc-hex/std" "serde/std" "primitives/std" "inherents/std" "sp-core/std" "sp-api/std" "sp-std/std" "sp-io/std" "frame-support/std" "pallet-authorship/std" "pallet-balances/std" "pallet-session/std" "pallet-fast-unstake/std" "pallet-staking/std" "pallet-staking-reward-fn/std" "pallet-timestamp/std" "pallet-vesting/std" "pallet-transaction-payment/std" "pallet-treasury/std" "pallet-election-provider-multi-phase/std" "slot-range-helper/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "frame-system/std" "libsecp256k1/std" "runtime-parachains/std" "xcm/std" "sp-npos-elections/std") ("runtime-benchmarks" "libsecp256k1/hmac" "libsecp256k1/static-context" "frame-benchmarking/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "runtime-parachains/runtime-benchmarks" "pallet-babe/runtime-benchmarks" "pallet-fast-unstake/runtime-benchmarks") ("no_std") ("default" "std"))))))

(define-public crate-polkadot-runtime-common-1.0.0 (c (n "polkadot-runtime-common") (v "1.0.0") (d (list (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (k 0)) (d (n "frame-benchmarking") (r "^22.0.0") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^22.0.0") (k 0)) (d (n "frame-support") (r "^22.0.0") (k 0)) (d (n "frame-system") (r "^22.0.0") (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "inherents") (r "^20.0.0") (k 0) (p "sp-inherents")) (d (n "libsecp256k1") (r "^0.7.0") (k 0)) (d (n "libsecp256k1") (r "^0.7.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^22.0.0") (k 0)) (d (n "pallet-babe") (r "^22.0.0") (o #t) (k 0)) (d (n "pallet-babe") (r "^22.0.0") (d #t) (k 2)) (d (n "pallet-balances") (r "^22.0.0") (k 0)) (d (n "pallet-election-provider-multi-phase") (r "^21.0.0") (k 0)) (d (n "pallet-fast-unstake") (r "^21.0.0") (k 0)) (d (n "pallet-session") (r "^22.0.0") (k 0)) (d (n "pallet-staking") (r "^22.0.0") (k 0)) (d (n "pallet-staking-reward-fn") (r "^13.0.0") (k 0)) (d (n "pallet-timestamp") (r "^21.0.0") (k 0)) (d (n "pallet-transaction-payment") (r "^22.0.0") (k 0)) (d (n "pallet-treasury") (r "^21.0.0") (k 0)) (d (n "pallet-treasury") (r "^21.0.0") (d #t) (k 2)) (d (n "pallet-vesting") (r "^22.0.0") (k 0)) (d (n "parity-scale-codec") (r "^3.6.1") (f (quote ("derive"))) (k 0)) (d (n "primitives") (r "^1.0.0") (k 0) (p "polkadot-primitives")) (d (n "runtime-parachains") (r "^1.0.0") (k 0) (p "polkadot-runtime-parachains")) (d (n "rustc-hex") (r "^2.1.0") (k 0)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("alloc"))) (k 0)) (d (n "serde_derive") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 2)) (d (n "slot-range-helper") (r "^1.0.0") (k 0)) (d (n "sp-api") (r "^20.0.0") (k 0)) (d (n "sp-core") (r "^22.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "^24.0.0") (k 0)) (d (n "sp-keyring") (r "^25.0.0") (d #t) (k 2)) (d (n "sp-keystore") (r "^0.28.0") (d #t) (k 2)) (d (n "sp-npos-elections") (r "^20.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-runtime") (r "^25.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-session") (r "^21.0.0") (k 0)) (d (n "sp-staking") (r "^20.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "^9.0.0") (k 0) (p "sp-std")) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "xcm") (r "^1.0.0") (k 0) (p "staging-xcm")))) (h "0r2p7snkl3rfsnfhp3z754rljcd13chjagw1bh2q05h38h671fvy") (f (quote (("try-runtime" "runtime-parachains/try-runtime" "pallet-authorship/try-runtime" "pallet-balances/try-runtime" "pallet-session/try-runtime" "pallet-staking/try-runtime" "pallet-timestamp/try-runtime" "pallet-vesting/try-runtime" "pallet-transaction-payment/try-runtime" "pallet-treasury/try-runtime" "pallet-fast-unstake/try-runtime") ("std" "bitvec/std" "parity-scale-codec/std" "scale-info/std" "log/std" "rustc-hex/std" "serde/std" "primitives/std" "inherents/std" "sp-core/std" "sp-api/std" "sp-std/std" "sp-io/std" "frame-support/std" "pallet-authorship/std" "pallet-balances/std" "pallet-session/std" "pallet-fast-unstake/std" "pallet-staking/std" "pallet-staking-reward-fn/std" "pallet-timestamp/std" "pallet-vesting/std" "pallet-transaction-payment/std" "pallet-treasury/std" "pallet-election-provider-multi-phase/std" "slot-range-helper/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "frame-system/std" "libsecp256k1/std" "runtime-parachains/std" "xcm/std" "sp-npos-elections/std") ("runtime-benchmarks" "libsecp256k1/hmac" "libsecp256k1/static-context" "frame-benchmarking/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "runtime-parachains/runtime-benchmarks" "pallet-babe/runtime-benchmarks" "pallet-fast-unstake/runtime-benchmarks") ("no_std") ("default" "std"))))))

(define-public crate-polkadot-runtime-common-2.0.0 (c (n "polkadot-runtime-common") (v "2.0.0") (d (list (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (k 0)) (d (n "frame-benchmarking") (r "^23.0.0") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^23.0.0") (k 0)) (d (n "frame-support") (r "^23.0.0") (k 0)) (d (n "frame-system") (r "^23.0.0") (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "inherents") (r "^21.0.0") (k 0) (p "sp-inherents")) (d (n "libsecp256k1") (r "^0.7.0") (k 0)) (d (n "libsecp256k1") (r "^0.7.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^23.0.0") (k 0)) (d (n "pallet-babe") (r "^23.0.0") (o #t) (k 0)) (d (n "pallet-balances") (r "^23.0.0") (k 0)) (d (n "pallet-election-provider-multi-phase") (r "^22.0.0") (k 0)) (d (n "pallet-fast-unstake") (r "^22.0.0") (k 0)) (d (n "pallet-session") (r "^23.0.0") (k 0)) (d (n "pallet-staking") (r "^23.0.0") (k 0)) (d (n "pallet-staking-reward-fn") (r "^14.0.0") (k 0)) (d (n "pallet-timestamp") (r "^22.0.0") (k 0)) (d (n "pallet-transaction-payment") (r "^23.0.0") (k 0)) (d (n "pallet-treasury") (r "^22.0.0") (k 0)) (d (n "pallet-vesting") (r "^23.0.0") (k 0)) (d (n "parity-scale-codec") (r "^3.6.1") (f (quote ("derive"))) (k 0)) (d (n "primitives") (r "^2.0.0") (k 0) (p "polkadot-primitives")) (d (n "runtime-parachains") (r "^2.0.0") (k 0) (p "polkadot-runtime-parachains")) (d (n "rustc-hex") (r "^2.1.0") (k 0)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("alloc"))) (k 0)) (d (n "serde_derive") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 2)) (d (n "slot-range-helper") (r "^2.0.0") (k 0)) (d (n "sp-api") (r "^21.0.0") (k 0)) (d (n "sp-core") (r "^23.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "^25.0.0") (k 0)) (d (n "sp-npos-elections") (r "^21.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-runtime") (r "^26.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-session") (r "^22.0.0") (k 0)) (d (n "sp-staking") (r "^21.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "^10.0.0") (k 0) (p "sp-std")) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "xcm") (r "^2.0.0") (k 0) (p "staging-xcm")))) (h "1s2y6lginrm49114kq6psn94ksc00klh03hm39af0rldlshbjam9") (f (quote (("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "libsecp256k1/hmac" "libsecp256k1/static-context" "pallet-babe/runtime-benchmarks" "pallet-balances/runtime-benchmarks" "pallet-election-provider-multi-phase/runtime-benchmarks" "pallet-fast-unstake/runtime-benchmarks" "pallet-staking/runtime-benchmarks" "pallet-timestamp/runtime-benchmarks" "pallet-treasury/runtime-benchmarks" "pallet-vesting/runtime-benchmarks" "primitives/runtime-benchmarks" "runtime-parachains/runtime-benchmarks" "sp-runtime/runtime-benchmarks" "sp-staking/runtime-benchmarks") ("no_std") ("experimental" "frame-support/experimental") ("default" "std")))) (s 2) (e (quote (("try-runtime" "frame-election-provider-support/try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-authorship/try-runtime" "pallet-babe?/try-runtime" "pallet-balances/try-runtime" "pallet-election-provider-multi-phase/try-runtime" "pallet-fast-unstake/try-runtime" "pallet-session/try-runtime" "pallet-staking/try-runtime" "pallet-timestamp/try-runtime" "pallet-transaction-payment/try-runtime" "pallet-treasury/try-runtime" "pallet-vesting/try-runtime" "runtime-parachains/try-runtime" "sp-runtime/try-runtime") ("std" "bitvec/std" "frame-benchmarking?/std" "frame-election-provider-support/std" "frame-support/std" "frame-system/std" "inherents/std" "libsecp256k1/std" "log/std" "pallet-authorship/std" "pallet-balances/std" "pallet-election-provider-multi-phase/std" "pallet-fast-unstake/std" "pallet-session/std" "pallet-staking-reward-fn/std" "pallet-staking/std" "pallet-timestamp/std" "pallet-transaction-payment/std" "pallet-treasury/std" "pallet-vesting/std" "parity-scale-codec/std" "primitives/std" "runtime-parachains/std" "rustc-hex/std" "scale-info/std" "serde/std" "slot-range-helper/std" "sp-api/std" "sp-core/std" "sp-io/std" "sp-npos-elections/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std" "xcm/std"))))))

(define-public crate-polkadot-runtime-common-3.0.0-dev.1 (c (n "polkadot-runtime-common") (v "3.0.0-dev.1") (d (list (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (k 0)) (d (n "frame-benchmarking") (r "=24.0.0-dev.1") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "=24.0.0-dev.1") (k 0)) (d (n "frame-support") (r "=24.0.0-dev.1") (k 0)) (d (n "frame-system") (r "=24.0.0-dev.1") (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "inherents") (r "=22.0.0-dev.1") (k 0) (p "sp-inherents")) (d (n "libsecp256k1") (r "^0.7.0") (k 0)) (d (n "libsecp256k1") (r "^0.7.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "=24.0.0-dev.1") (k 0)) (d (n "pallet-babe") (r "=24.0.0-dev.1") (o #t) (k 0)) (d (n "pallet-balances") (r "=24.0.0-dev.1") (k 0)) (d (n "pallet-election-provider-multi-phase") (r "=23.0.0-dev.1") (k 0)) (d (n "pallet-fast-unstake") (r "=23.0.0-dev.1") (k 0)) (d (n "pallet-session") (r "=24.0.0-dev.1") (k 0)) (d (n "pallet-staking") (r "=24.0.0-dev.1") (k 0)) (d (n "pallet-staking-reward-fn") (r "=15.0.0-dev.1") (k 0)) (d (n "pallet-timestamp") (r "=23.0.0-dev.1") (k 0)) (d (n "pallet-transaction-payment") (r "=24.0.0-dev.1") (k 0)) (d (n "pallet-treasury") (r "=23.0.0-dev.1") (k 0)) (d (n "pallet-vesting") (r "=24.0.0-dev.1") (k 0)) (d (n "parity-scale-codec") (r "^3.6.1") (f (quote ("derive"))) (k 0)) (d (n "primitives") (r "=3.0.0-dev.1") (k 0) (p "polkadot-primitives")) (d (n "runtime-parachains") (r "=3.0.0-dev.1") (k 0) (p "polkadot-runtime-parachains")) (d (n "rustc-hex") (r "^2.1.0") (k 0)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("alloc"))) (k 0)) (d (n "serde_derive") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "slot-range-helper") (r "=3.0.0-dev.1") (k 0)) (d (n "sp-api") (r "=22.0.0-dev.1") (k 0)) (d (n "sp-core") (r "=24.0.0-dev.1") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "=26.0.0-dev.1") (k 0)) (d (n "sp-npos-elections") (r "=22.0.0-dev.1") (f (quote ("serde"))) (k 0)) (d (n "sp-runtime") (r "=27.0.0-dev.1") (f (quote ("serde"))) (k 0)) (d (n "sp-session") (r "=23.0.0-dev.1") (k 0)) (d (n "sp-staking") (r "=22.0.0-dev.1") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "=11.0.0-dev.1") (k 0) (p "sp-std")) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "xcm") (r "=3.0.0-dev.1") (k 0) (p "staging-xcm")))) (h "0sn8v8wys8s11dw6113387yfbhh3yhvs8nxf9lnarzcvks8s7pss") (f (quote (("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "libsecp256k1/hmac" "libsecp256k1/static-context" "pallet-babe/runtime-benchmarks" "pallet-balances/runtime-benchmarks" "pallet-election-provider-multi-phase/runtime-benchmarks" "pallet-fast-unstake/runtime-benchmarks" "pallet-staking/runtime-benchmarks" "pallet-timestamp/runtime-benchmarks" "pallet-treasury/runtime-benchmarks" "pallet-vesting/runtime-benchmarks" "primitives/runtime-benchmarks" "runtime-parachains/runtime-benchmarks" "sp-runtime/runtime-benchmarks" "sp-staking/runtime-benchmarks") ("no_std") ("default" "std")))) (s 2) (e (quote (("try-runtime" "frame-election-provider-support/try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-authorship/try-runtime" "pallet-babe?/try-runtime" "pallet-balances/try-runtime" "pallet-election-provider-multi-phase/try-runtime" "pallet-fast-unstake/try-runtime" "pallet-session/try-runtime" "pallet-staking/try-runtime" "pallet-timestamp/try-runtime" "pallet-transaction-payment/try-runtime" "pallet-treasury/try-runtime" "pallet-vesting/try-runtime" "runtime-parachains/try-runtime" "sp-runtime/try-runtime") ("std" "bitvec/std" "frame-benchmarking?/std" "frame-election-provider-support/std" "frame-support/std" "frame-system/std" "inherents/std" "libsecp256k1/std" "log/std" "pallet-authorship/std" "pallet-balances/std" "pallet-election-provider-multi-phase/std" "pallet-fast-unstake/std" "pallet-session/std" "pallet-staking-reward-fn/std" "pallet-staking/std" "pallet-timestamp/std" "pallet-transaction-payment/std" "pallet-treasury/std" "pallet-vesting/std" "parity-scale-codec/std" "primitives/std" "runtime-parachains/std" "rustc-hex/std" "scale-info/std" "serde/std" "slot-range-helper/std" "sp-api/std" "sp-core/std" "sp-io/std" "sp-npos-elections/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std" "xcm/std"))))))

(define-public crate-polkadot-runtime-common-3.0.0 (c (n "polkadot-runtime-common") (v "3.0.0") (d (list (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (k 0)) (d (n "frame-benchmarking") (r "^24.0.0") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^24.0.0") (k 0)) (d (n "frame-support") (r "^24.0.0") (k 0)) (d (n "frame-system") (r "^24.0.0") (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "inherents") (r "^22.0.0") (k 0) (p "sp-inherents")) (d (n "libsecp256k1") (r "^0.7.0") (k 0)) (d (n "libsecp256k1") (r "^0.7.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^24.0.0") (k 0)) (d (n "pallet-babe") (r "^24.0.0") (o #t) (k 0)) (d (n "pallet-balances") (r "^24.0.0") (k 0)) (d (n "pallet-election-provider-multi-phase") (r "^23.0.0") (k 0)) (d (n "pallet-fast-unstake") (r "^23.0.0") (k 0)) (d (n "pallet-session") (r "^24.0.0") (k 0)) (d (n "pallet-staking") (r "^24.0.0") (k 0)) (d (n "pallet-staking-reward-fn") (r "^15.0.0") (k 0)) (d (n "pallet-timestamp") (r "^23.0.0") (k 0)) (d (n "pallet-transaction-payment") (r "^24.0.0") (k 0)) (d (n "pallet-treasury") (r "^23.0.0") (k 0)) (d (n "pallet-vesting") (r "^24.0.0") (k 0)) (d (n "parity-scale-codec") (r "^3.6.1") (f (quote ("derive"))) (k 0)) (d (n "primitives") (r "^3.0.0") (k 0) (p "polkadot-primitives")) (d (n "runtime-parachains") (r "^3.0.0") (k 0) (p "polkadot-runtime-parachains")) (d (n "rustc-hex") (r "^2.1.0") (k 0)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("alloc"))) (k 0)) (d (n "serde_derive") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "slot-range-helper") (r "^3.0.0") (k 0)) (d (n "sp-api") (r "^22.0.0") (k 0)) (d (n "sp-core") (r "^24.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "^26.0.0") (k 0)) (d (n "sp-npos-elections") (r "^22.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-runtime") (r "^27.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-session") (r "^23.0.0") (k 0)) (d (n "sp-staking") (r "^22.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "^11.0.0") (k 0) (p "sp-std")) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "xcm") (r "^3.0.0") (k 0) (p "staging-xcm")))) (h "0hrm0m8gggvrbdimzd4acspnnfdn50arrr7zmpbka51yisajm4mc") (f (quote (("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "libsecp256k1/hmac" "libsecp256k1/static-context" "pallet-babe/runtime-benchmarks" "pallet-balances/runtime-benchmarks" "pallet-election-provider-multi-phase/runtime-benchmarks" "pallet-fast-unstake/runtime-benchmarks" "pallet-staking/runtime-benchmarks" "pallet-timestamp/runtime-benchmarks" "pallet-treasury/runtime-benchmarks" "pallet-vesting/runtime-benchmarks" "primitives/runtime-benchmarks" "runtime-parachains/runtime-benchmarks" "sp-runtime/runtime-benchmarks" "sp-staking/runtime-benchmarks") ("no_std") ("default" "std")))) (s 2) (e (quote (("try-runtime" "frame-election-provider-support/try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-authorship/try-runtime" "pallet-babe?/try-runtime" "pallet-balances/try-runtime" "pallet-election-provider-multi-phase/try-runtime" "pallet-fast-unstake/try-runtime" "pallet-session/try-runtime" "pallet-staking/try-runtime" "pallet-timestamp/try-runtime" "pallet-transaction-payment/try-runtime" "pallet-treasury/try-runtime" "pallet-vesting/try-runtime" "runtime-parachains/try-runtime" "sp-runtime/try-runtime") ("std" "bitvec/std" "frame-benchmarking?/std" "frame-election-provider-support/std" "frame-support/std" "frame-system/std" "inherents/std" "libsecp256k1/std" "log/std" "pallet-authorship/std" "pallet-balances/std" "pallet-election-provider-multi-phase/std" "pallet-fast-unstake/std" "pallet-session/std" "pallet-staking-reward-fn/std" "pallet-staking/std" "pallet-timestamp/std" "pallet-transaction-payment/std" "pallet-treasury/std" "pallet-vesting/std" "parity-scale-codec/std" "primitives/std" "runtime-parachains/std" "rustc-hex/std" "scale-info/std" "serde/std" "slot-range-helper/std" "sp-api/std" "sp-core/std" "sp-io/std" "sp-npos-elections/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std" "xcm/std"))))))

(define-public crate-polkadot-runtime-common-4.0.0 (c (n "polkadot-runtime-common") (v "4.0.0") (d (list (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (k 0)) (d (n "frame-benchmarking") (r "^25.0.0") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^25.0.0") (k 0)) (d (n "frame-support") (r "^25.0.0") (k 0)) (d (n "frame-system") (r "^25.0.0") (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "inherents") (r "^23.0.0") (k 0) (p "sp-inherents")) (d (n "libsecp256k1") (r "^0.7.0") (k 0)) (d (n "libsecp256k1") (r "^0.7.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-asset-rate") (r "^4.0.0") (k 0)) (d (n "pallet-authorship") (r "^25.0.0") (k 0)) (d (n "pallet-babe") (r "^25.0.0") (o #t) (k 0)) (d (n "pallet-balances") (r "^25.0.0") (k 0)) (d (n "pallet-election-provider-multi-phase") (r "^24.0.0") (k 0)) (d (n "pallet-fast-unstake") (r "^24.0.0") (k 0)) (d (n "pallet-session") (r "^25.0.0") (k 0)) (d (n "pallet-staking") (r "^25.0.0") (k 0)) (d (n "pallet-staking-reward-fn") (r "^16.0.0") (k 0)) (d (n "pallet-timestamp") (r "^24.0.0") (k 0)) (d (n "pallet-transaction-payment") (r "^25.0.0") (k 0)) (d (n "pallet-treasury") (r "^24.0.0") (k 0)) (d (n "pallet-vesting") (r "^25.0.0") (k 0)) (d (n "pallet-xcm-benchmarks") (r "^4.0.0") (o #t) (k 0)) (d (n "parity-scale-codec") (r "^3.6.1") (f (quote ("derive"))) (k 0)) (d (n "primitives") (r "^4.0.0") (k 0) (p "polkadot-primitives")) (d (n "runtime-parachains") (r "^4.0.0") (k 0) (p "polkadot-runtime-parachains")) (d (n "rustc-hex") (r "^2.1.0") (k 0)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("alloc"))) (k 0)) (d (n "serde_derive") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "slot-range-helper") (r "^4.0.0") (k 0)) (d (n "sp-api") (r "^23.0.0") (k 0)) (d (n "sp-core") (r "^25.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "^27.0.0") (k 0)) (d (n "sp-npos-elections") (r "^23.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-runtime") (r "^28.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-session") (r "^24.0.0") (k 0)) (d (n "sp-staking") (r "^23.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "^12.0.0") (k 0) (p "sp-std")) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "xcm") (r "^4.0.0") (k 0) (p "staging-xcm")) (d (n "xcm-builder") (r "^4.0.0") (k 0) (p "staging-xcm-builder")) (d (n "xcm-executor") (r "^4.0.0") (o #t) (k 0) (p "staging-xcm-executor")))) (h "1jjbwhg1i4ha011swy1i6c6y94ardi0y6y1dywrjq9ikignzi257") (f (quote (("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "libsecp256k1/hmac" "libsecp256k1/static-context" "pallet-asset-rate/runtime-benchmarks" "pallet-babe/runtime-benchmarks" "pallet-balances/runtime-benchmarks" "pallet-election-provider-multi-phase/runtime-benchmarks" "pallet-fast-unstake/runtime-benchmarks" "pallet-staking/runtime-benchmarks" "pallet-timestamp/runtime-benchmarks" "pallet-treasury/runtime-benchmarks" "pallet-vesting/runtime-benchmarks" "pallet-xcm-benchmarks/runtime-benchmarks" "primitives/runtime-benchmarks" "runtime-parachains/runtime-benchmarks" "sp-runtime/runtime-benchmarks" "sp-staking/runtime-benchmarks" "xcm-builder/runtime-benchmarks" "xcm-executor/runtime-benchmarks") ("no_std") ("default" "std")))) (s 2) (e (quote (("try-runtime" "frame-election-provider-support/try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-asset-rate/try-runtime" "pallet-authorship/try-runtime" "pallet-babe?/try-runtime" "pallet-balances/try-runtime" "pallet-election-provider-multi-phase/try-runtime" "pallet-fast-unstake/try-runtime" "pallet-session/try-runtime" "pallet-staking/try-runtime" "pallet-timestamp/try-runtime" "pallet-transaction-payment/try-runtime" "pallet-treasury/try-runtime" "pallet-vesting/try-runtime" "runtime-parachains/try-runtime" "sp-runtime/try-runtime") ("std" "bitvec/std" "frame-benchmarking?/std" "frame-election-provider-support/std" "frame-support/std" "frame-system/std" "inherents/std" "libsecp256k1/std" "log/std" "pallet-asset-rate/std" "pallet-authorship/std" "pallet-balances/std" "pallet-election-provider-multi-phase/std" "pallet-fast-unstake/std" "pallet-session/std" "pallet-staking-reward-fn/std" "pallet-staking/std" "pallet-timestamp/std" "pallet-transaction-payment/std" "pallet-treasury/std" "pallet-vesting/std" "pallet-xcm-benchmarks/std" "parity-scale-codec/std" "primitives/std" "runtime-parachains/std" "rustc-hex/std" "scale-info/std" "serde/std" "slot-range-helper/std" "sp-api/std" "sp-core/std" "sp-io/std" "sp-npos-elections/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std" "xcm-builder/std" "xcm-executor/std" "xcm/std"))))))

(define-public crate-polkadot-runtime-common-5.0.0 (c (n "polkadot-runtime-common") (v "5.0.0") (d (list (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (k 0)) (d (n "frame-benchmarking") (r "^26.0.0") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^26.0.0") (k 0)) (d (n "frame-support") (r "^26.0.0") (k 0)) (d (n "frame-system") (r "^26.0.0") (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "inherents") (r "^24.0.0") (k 0) (p "sp-inherents")) (d (n "libsecp256k1") (r "^0.7.0") (k 0)) (d (n "libsecp256k1") (r "^0.7.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-asset-rate") (r "^5.0.0") (o #t) (k 0)) (d (n "pallet-authorship") (r "^26.0.0") (k 0)) (d (n "pallet-babe") (r "^26.0.0") (o #t) (k 0)) (d (n "pallet-balances") (r "^26.0.0") (k 0)) (d (n "pallet-election-provider-multi-phase") (r "^25.0.0") (k 0)) (d (n "pallet-fast-unstake") (r "^25.0.0") (k 0)) (d (n "pallet-identity") (r "^26.0.0") (k 0)) (d (n "pallet-session") (r "^26.0.0") (k 0)) (d (n "pallet-staking") (r "^26.0.0") (k 0)) (d (n "pallet-staking-reward-fn") (r "^17.0.0") (k 0)) (d (n "pallet-timestamp") (r "^25.0.0") (k 0)) (d (n "pallet-transaction-payment") (r "^26.0.0") (k 0)) (d (n "pallet-treasury") (r "^25.0.0") (k 0)) (d (n "pallet-vesting") (r "^26.0.0") (k 0)) (d (n "pallet-xcm-benchmarks") (r "^5.0.0") (o #t) (k 0)) (d (n "parity-scale-codec") (r "^3.6.1") (f (quote ("derive"))) (k 0)) (d (n "primitives") (r "^5.0.0") (k 0) (p "polkadot-primitives")) (d (n "runtime-parachains") (r "^5.0.0") (k 0) (p "polkadot-runtime-parachains")) (d (n "rustc-hex") (r "^2.1.0") (k 0)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("alloc"))) (k 0)) (d (n "serde_derive") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 2)) (d (n "slot-range-helper") (r "^5.0.0") (k 0)) (d (n "sp-api") (r "^24.0.0") (k 0)) (d (n "sp-core") (r "^26.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "^28.0.0") (k 0)) (d (n "sp-npos-elections") (r "^24.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-runtime") (r "^29.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-session") (r "^25.0.0") (k 0)) (d (n "sp-staking") (r "^24.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "^12.0.0") (k 0) (p "sp-std")) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "xcm") (r "^5.0.0") (k 0) (p "staging-xcm")) (d (n "xcm-builder") (r "^5.0.0") (k 0) (p "staging-xcm-builder")) (d (n "xcm-executor") (r "^5.0.0") (o #t) (k 0) (p "staging-xcm-executor")))) (h "0qr2qsz17q55298pz5mdwxkx6jb7fzncnqwj7mvm4cfavnqb84jn") (f (quote (("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "libsecp256k1/hmac" "libsecp256k1/static-context" "pallet-asset-rate/runtime-benchmarks" "pallet-babe/runtime-benchmarks" "pallet-balances/runtime-benchmarks" "pallet-election-provider-multi-phase/runtime-benchmarks" "pallet-fast-unstake/runtime-benchmarks" "pallet-identity/runtime-benchmarks" "pallet-staking/runtime-benchmarks" "pallet-timestamp/runtime-benchmarks" "pallet-treasury/runtime-benchmarks" "pallet-vesting/runtime-benchmarks" "pallet-xcm-benchmarks/runtime-benchmarks" "primitives/runtime-benchmarks" "runtime-parachains/runtime-benchmarks" "sp-runtime/runtime-benchmarks" "sp-staking/runtime-benchmarks" "xcm-builder/runtime-benchmarks" "xcm-executor/runtime-benchmarks") ("no_std") ("default" "std")))) (s 2) (e (quote (("try-runtime" "frame-election-provider-support/try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-asset-rate/try-runtime" "pallet-authorship/try-runtime" "pallet-babe?/try-runtime" "pallet-balances/try-runtime" "pallet-election-provider-multi-phase/try-runtime" "pallet-fast-unstake/try-runtime" "pallet-identity/try-runtime" "pallet-session/try-runtime" "pallet-staking/try-runtime" "pallet-timestamp/try-runtime" "pallet-transaction-payment/try-runtime" "pallet-treasury/try-runtime" "pallet-vesting/try-runtime" "runtime-parachains/try-runtime" "sp-runtime/try-runtime") ("std" "bitvec/std" "frame-benchmarking?/std" "frame-election-provider-support/std" "frame-support/std" "frame-system/std" "inherents/std" "libsecp256k1/std" "log/std" "pallet-asset-rate?/std" "pallet-authorship/std" "pallet-balances/std" "pallet-election-provider-multi-phase/std" "pallet-fast-unstake/std" "pallet-identity/std" "pallet-session/std" "pallet-staking-reward-fn/std" "pallet-staking/std" "pallet-timestamp/std" "pallet-transaction-payment/std" "pallet-treasury/std" "pallet-vesting/std" "pallet-xcm-benchmarks/std" "parity-scale-codec/std" "primitives/std" "runtime-parachains/std" "rustc-hex/std" "scale-info/std" "serde/std" "slot-range-helper/std" "sp-api/std" "sp-core/std" "sp-io/std" "sp-npos-elections/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std" "xcm-builder/std" "xcm-executor/std" "xcm/std"))))))

(define-public crate-polkadot-runtime-common-6.0.0 (c (n "polkadot-runtime-common") (v "6.0.0") (d (list (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (k 0)) (d (n "frame-benchmarking") (r "^27.0.0") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^27.0.0") (k 0)) (d (n "frame-support") (r "^27.0.0") (k 0)) (d (n "frame-system") (r "^27.0.0") (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "inherents") (r "^25.0.0") (k 0) (p "sp-inherents")) (d (n "libsecp256k1") (r "^0.7.0") (k 0)) (d (n "libsecp256k1") (r "^0.7.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-asset-rate") (r "^6.0.0") (o #t) (k 0)) (d (n "pallet-authorship") (r "^27.0.0") (k 0)) (d (n "pallet-babe") (r "^27.0.0") (o #t) (k 0)) (d (n "pallet-balances") (r "^27.0.0") (k 0)) (d (n "pallet-election-provider-multi-phase") (r "^26.0.0") (k 0)) (d (n "pallet-fast-unstake") (r "^26.0.0") (k 0)) (d (n "pallet-identity") (r "^27.0.0") (k 0)) (d (n "pallet-session") (r "^27.0.0") (k 0)) (d (n "pallet-staking") (r "^27.0.0") (k 0)) (d (n "pallet-staking-reward-fn") (r "^18.0.0") (k 0)) (d (n "pallet-timestamp") (r "^26.0.0") (k 0)) (d (n "pallet-transaction-payment") (r "^27.0.0") (k 0)) (d (n "pallet-treasury") (r "^26.0.0") (k 0)) (d (n "pallet-vesting") (r "^27.0.0") (k 0)) (d (n "pallet-xcm-benchmarks") (r "^6.0.0") (o #t) (k 0)) (d (n "parity-scale-codec") (r "^3.6.1") (f (quote ("derive"))) (k 0)) (d (n "primitives") (r "^6.0.0") (k 0) (p "polkadot-primitives")) (d (n "runtime-parachains") (r "^6.0.0") (k 0) (p "polkadot-runtime-parachains")) (d (n "rustc-hex") (r "^2.1.0") (k 0)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("alloc"))) (k 0)) (d (n "serde_derive") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 2)) (d (n "slot-range-helper") (r "^6.0.0") (k 0)) (d (n "sp-api") (r "^25.0.0") (k 0)) (d (n "sp-core") (r "^27.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "^29.0.0") (k 0)) (d (n "sp-npos-elections") (r "^25.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-runtime") (r "^30.0.1") (f (quote ("serde"))) (k 0)) (d (n "sp-session") (r "^26.0.0") (k 0)) (d (n "sp-staking") (r "^25.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "^13.0.0") (k 0) (p "sp-std")) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "xcm") (r "^6.0.0") (k 0) (p "staging-xcm")) (d (n "xcm-builder") (r "^6.0.0") (k 0) (p "staging-xcm-builder")) (d (n "xcm-executor") (r "^6.0.0") (o #t) (k 0) (p "staging-xcm-executor")))) (h "11p6bdnww5bpvkg9wcsxv2aa4gfihx137l9mnjljashz9mc7wa4n") (f (quote (("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "libsecp256k1/hmac" "libsecp256k1/static-context" "pallet-asset-rate/runtime-benchmarks" "pallet-babe/runtime-benchmarks" "pallet-balances/runtime-benchmarks" "pallet-election-provider-multi-phase/runtime-benchmarks" "pallet-fast-unstake/runtime-benchmarks" "pallet-identity/runtime-benchmarks" "pallet-staking/runtime-benchmarks" "pallet-timestamp/runtime-benchmarks" "pallet-treasury/runtime-benchmarks" "pallet-vesting/runtime-benchmarks" "pallet-xcm-benchmarks/runtime-benchmarks" "primitives/runtime-benchmarks" "runtime-parachains/runtime-benchmarks" "sp-runtime/runtime-benchmarks" "sp-staking/runtime-benchmarks" "xcm-builder/runtime-benchmarks" "xcm-executor/runtime-benchmarks") ("no_std") ("default" "std")))) (s 2) (e (quote (("try-runtime" "frame-election-provider-support/try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-asset-rate/try-runtime" "pallet-authorship/try-runtime" "pallet-babe?/try-runtime" "pallet-balances/try-runtime" "pallet-election-provider-multi-phase/try-runtime" "pallet-fast-unstake/try-runtime" "pallet-identity/try-runtime" "pallet-session/try-runtime" "pallet-staking/try-runtime" "pallet-timestamp/try-runtime" "pallet-transaction-payment/try-runtime" "pallet-treasury/try-runtime" "pallet-vesting/try-runtime" "runtime-parachains/try-runtime" "sp-runtime/try-runtime") ("std" "bitvec/std" "frame-benchmarking?/std" "frame-election-provider-support/std" "frame-support/std" "frame-system/std" "inherents/std" "libsecp256k1/std" "log/std" "pallet-asset-rate?/std" "pallet-authorship/std" "pallet-balances/std" "pallet-election-provider-multi-phase/std" "pallet-fast-unstake/std" "pallet-identity/std" "pallet-session/std" "pallet-staking-reward-fn/std" "pallet-staking/std" "pallet-timestamp/std" "pallet-transaction-payment/std" "pallet-treasury/std" "pallet-vesting/std" "pallet-xcm-benchmarks/std" "parity-scale-codec/std" "primitives/std" "runtime-parachains/std" "rustc-hex/std" "scale-info/std" "serde/std" "slot-range-helper/std" "sp-api/std" "sp-core/std" "sp-io/std" "sp-npos-elections/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std" "xcm-builder/std" "xcm-executor/std" "xcm/std"))))))

(define-public crate-polkadot-runtime-common-7.0.0 (c (n "polkadot-runtime-common") (v "7.0.0") (d (list (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (k 0)) (d (n "frame-benchmarking") (r "^28.0.0") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^28.0.0") (k 0)) (d (n "frame-support") (r "^28.0.0") (k 0)) (d (n "frame-system") (r "^28.0.0") (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "inherents") (r "^26.0.0") (k 0) (p "sp-inherents")) (d (n "libsecp256k1") (r "^0.7.0") (k 0)) (d (n "libsecp256k1") (r "^0.7.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-asset-rate") (r "^7.0.0") (o #t) (k 0)) (d (n "pallet-authorship") (r "^28.0.0") (k 0)) (d (n "pallet-babe") (r "^28.0.0") (o #t) (k 0)) (d (n "pallet-balances") (r "^28.0.0") (k 0)) (d (n "pallet-broker") (r "^0.6.0") (k 0)) (d (n "pallet-election-provider-multi-phase") (r "^27.0.0") (k 0)) (d (n "pallet-fast-unstake") (r "^27.0.0") (k 0)) (d (n "pallet-identity") (r "^28.0.0") (k 0)) (d (n "pallet-session") (r "^28.0.0") (k 0)) (d (n "pallet-staking") (r "^28.0.0") (k 0)) (d (n "pallet-staking-reward-fn") (r "^19.0.0") (k 0)) (d (n "pallet-timestamp") (r "^27.0.0") (k 0)) (d (n "pallet-transaction-payment") (r "^28.0.0") (k 0)) (d (n "pallet-treasury") (r "^27.0.0") (k 0)) (d (n "pallet-vesting") (r "^28.0.0") (k 0)) (d (n "pallet-xcm-benchmarks") (r "^7.0.0") (o #t) (k 0)) (d (n "parity-scale-codec") (r "^3.6.1") (f (quote ("derive"))) (k 0)) (d (n "primitives") (r "^7.0.0") (k 0) (p "polkadot-primitives")) (d (n "runtime-parachains") (r "^7.0.0") (k 0) (p "polkadot-runtime-parachains")) (d (n "rustc-hex") (r "^2.1.0") (k 0)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("alloc"))) (k 0)) (d (n "serde_derive") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 2)) (d (n "slot-range-helper") (r "^7.0.0") (k 0)) (d (n "sp-api") (r "^26.0.0") (k 0)) (d (n "sp-core") (r "^28.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "^30.0.0") (k 0)) (d (n "sp-npos-elections") (r "^26.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-runtime") (r "^31.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-session") (r "^27.0.0") (k 0)) (d (n "sp-staking") (r "^26.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0) (p "sp-std")) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "xcm") (r "^7.0.0") (k 0) (p "staging-xcm")) (d (n "xcm-builder") (r "^7.0.0") (k 0) (p "staging-xcm-builder")) (d (n "xcm-executor") (r "^7.0.0") (o #t) (k 0) (p "staging-xcm-executor")))) (h "0w0xjv4bs9f44yj2bf5j1hlajxzd8fianqnjdgjl4nj1nx8ahha6") (f (quote (("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "libsecp256k1/hmac" "libsecp256k1/static-context" "pallet-asset-rate/runtime-benchmarks" "pallet-babe/runtime-benchmarks" "pallet-balances/runtime-benchmarks" "pallet-broker/runtime-benchmarks" "pallet-election-provider-multi-phase/runtime-benchmarks" "pallet-fast-unstake/runtime-benchmarks" "pallet-identity/runtime-benchmarks" "pallet-staking/runtime-benchmarks" "pallet-timestamp/runtime-benchmarks" "pallet-treasury/runtime-benchmarks" "pallet-vesting/runtime-benchmarks" "pallet-xcm-benchmarks/runtime-benchmarks" "primitives/runtime-benchmarks" "runtime-parachains/runtime-benchmarks" "sp-runtime/runtime-benchmarks" "sp-staking/runtime-benchmarks" "xcm-builder/runtime-benchmarks" "xcm-executor/runtime-benchmarks") ("no_std") ("default" "std")))) (s 2) (e (quote (("try-runtime" "frame-election-provider-support/try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-asset-rate/try-runtime" "pallet-authorship/try-runtime" "pallet-babe?/try-runtime" "pallet-balances/try-runtime" "pallet-broker/try-runtime" "pallet-election-provider-multi-phase/try-runtime" "pallet-fast-unstake/try-runtime" "pallet-identity/try-runtime" "pallet-session/try-runtime" "pallet-staking/try-runtime" "pallet-timestamp/try-runtime" "pallet-transaction-payment/try-runtime" "pallet-treasury/try-runtime" "pallet-vesting/try-runtime" "runtime-parachains/try-runtime" "sp-runtime/try-runtime") ("std" "bitvec/std" "frame-benchmarking?/std" "frame-election-provider-support/std" "frame-support/std" "frame-system/std" "inherents/std" "libsecp256k1/std" "log/std" "pallet-asset-rate?/std" "pallet-authorship/std" "pallet-balances/std" "pallet-broker/std" "pallet-election-provider-multi-phase/std" "pallet-fast-unstake/std" "pallet-identity/std" "pallet-session/std" "pallet-staking-reward-fn/std" "pallet-staking/std" "pallet-timestamp/std" "pallet-transaction-payment/std" "pallet-treasury/std" "pallet-vesting/std" "pallet-xcm-benchmarks/std" "parity-scale-codec/std" "primitives/std" "runtime-parachains/std" "rustc-hex/std" "scale-info/std" "serde/std" "slot-range-helper/std" "sp-api/std" "sp-core/std" "sp-io/std" "sp-npos-elections/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std" "xcm-builder/std" "xcm-executor/std" "xcm/std"))))))

(define-public crate-polkadot-runtime-common-8.0.0 (c (n "polkadot-runtime-common") (v "8.0.0") (d (list (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (k 0)) (d (n "frame-benchmarking") (r "^29.0.0") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^29.0.0") (k 0)) (d (n "frame-support") (r "^29.0.0") (k 0)) (d (n "frame-system") (r "^29.0.0") (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "inherents") (r "^27.0.0") (k 0) (p "sp-inherents")) (d (n "libsecp256k1") (r "^0.7.0") (k 0)) (d (n "libsecp256k1") (r "^0.7.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-asset-rate") (r "^8.0.0") (o #t) (k 0)) (d (n "pallet-authorship") (r "^29.0.0") (k 0)) (d (n "pallet-babe") (r "^29.0.0") (o #t) (k 0)) (d (n "pallet-balances") (r "^29.0.0") (k 0)) (d (n "pallet-broker") (r "^0.7.0") (k 0)) (d (n "pallet-election-provider-multi-phase") (r "^28.0.0") (k 0)) (d (n "pallet-fast-unstake") (r "^28.0.0") (k 0)) (d (n "pallet-identity") (r "^29.0.0") (k 0)) (d (n "pallet-session") (r "^29.0.0") (k 0)) (d (n "pallet-staking") (r "^29.0.0") (k 0)) (d (n "pallet-staking-reward-fn") (r "^20.0.0") (k 0)) (d (n "pallet-timestamp") (r "^28.0.0") (k 0)) (d (n "pallet-transaction-payment") (r "^29.0.0") (k 0)) (d (n "pallet-treasury") (r "^28.0.0") (k 0)) (d (n "pallet-vesting") (r "^29.0.0") (k 0)) (d (n "pallet-xcm-benchmarks") (r "^8.0.0") (o #t) (k 0)) (d (n "parity-scale-codec") (r "^3.6.1") (f (quote ("derive"))) (k 0)) (d (n "primitives") (r "^8.0.0") (k 0) (p "polkadot-primitives")) (d (n "runtime-parachains") (r "^8.0.0") (k 0) (p "polkadot-runtime-parachains")) (d (n "rustc-hex") (r "^2.1.0") (k 0)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("alloc"))) (k 0)) (d (n "serde_derive") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 2)) (d (n "slot-range-helper") (r "^8.0.0") (k 0)) (d (n "sp-api") (r "^27.0.0") (k 0)) (d (n "sp-core") (r "^29.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "^31.0.0") (k 0)) (d (n "sp-npos-elections") (r "^27.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-runtime") (r "^32.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-session") (r "^28.0.0") (k 0)) (d (n "sp-staking") (r "^27.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0) (p "sp-std")) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "xcm") (r "^8.0.0") (k 0) (p "staging-xcm")) (d (n "xcm-builder") (r "^8.0.0") (k 0) (p "staging-xcm-builder")) (d (n "xcm-executor") (r "^8.0.0") (o #t) (k 0) (p "staging-xcm-executor")))) (h "1bq5mx9zp3p9qp7jwfc5w70n99w6yrl0znylcqprr1grddrjycyl") (f (quote (("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "libsecp256k1/hmac" "libsecp256k1/static-context" "pallet-asset-rate/runtime-benchmarks" "pallet-babe/runtime-benchmarks" "pallet-balances/runtime-benchmarks" "pallet-broker/runtime-benchmarks" "pallet-election-provider-multi-phase/runtime-benchmarks" "pallet-fast-unstake/runtime-benchmarks" "pallet-identity/runtime-benchmarks" "pallet-staking/runtime-benchmarks" "pallet-timestamp/runtime-benchmarks" "pallet-treasury/runtime-benchmarks" "pallet-vesting/runtime-benchmarks" "pallet-xcm-benchmarks/runtime-benchmarks" "primitives/runtime-benchmarks" "runtime-parachains/runtime-benchmarks" "sp-runtime/runtime-benchmarks" "sp-staking/runtime-benchmarks" "xcm-builder/runtime-benchmarks" "xcm-executor/runtime-benchmarks") ("no_std") ("default" "std")))) (s 2) (e (quote (("try-runtime" "frame-election-provider-support/try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-asset-rate/try-runtime" "pallet-authorship/try-runtime" "pallet-babe?/try-runtime" "pallet-balances/try-runtime" "pallet-broker/try-runtime" "pallet-election-provider-multi-phase/try-runtime" "pallet-fast-unstake/try-runtime" "pallet-identity/try-runtime" "pallet-session/try-runtime" "pallet-staking/try-runtime" "pallet-timestamp/try-runtime" "pallet-transaction-payment/try-runtime" "pallet-treasury/try-runtime" "pallet-vesting/try-runtime" "runtime-parachains/try-runtime" "sp-runtime/try-runtime") ("std" "bitvec/std" "frame-benchmarking?/std" "frame-election-provider-support/std" "frame-support/std" "frame-system/std" "inherents/std" "libsecp256k1/std" "log/std" "pallet-asset-rate?/std" "pallet-authorship/std" "pallet-balances/std" "pallet-broker/std" "pallet-election-provider-multi-phase/std" "pallet-fast-unstake/std" "pallet-identity/std" "pallet-session/std" "pallet-staking-reward-fn/std" "pallet-staking/std" "pallet-timestamp/std" "pallet-transaction-payment/std" "pallet-treasury/std" "pallet-vesting/std" "pallet-xcm-benchmarks/std" "parity-scale-codec/std" "primitives/std" "runtime-parachains/std" "rustc-hex/std" "scale-info/std" "serde/std" "slot-range-helper/std" "sp-api/std" "sp-core/std" "sp-io/std" "sp-npos-elections/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std" "xcm-builder/std" "xcm-executor/std" "xcm/std"))))))

(define-public crate-polkadot-runtime-common-9.0.0 (c (n "polkadot-runtime-common") (v "9.0.0") (d (list (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (k 0)) (d (n "frame-benchmarking") (r "^30.0.0") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^30.0.0") (k 0)) (d (n "frame-support") (r "^30.0.0") (k 0)) (d (n "frame-system") (r "^30.0.0") (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "inherents") (r "^28.0.0") (k 0) (p "sp-inherents")) (d (n "libsecp256k1") (r "^0.7.0") (k 0)) (d (n "libsecp256k1") (r "^0.7.0") (d #t) (k 2)) (d (n "log") (r "^0.4.20") (k 0)) (d (n "pallet-asset-rate") (r "^9.0.0") (o #t) (k 0)) (d (n "pallet-authorship") (r "^30.0.0") (k 0)) (d (n "pallet-babe") (r "^30.0.0") (o #t) (k 0)) (d (n "pallet-balances") (r "^30.0.0") (k 0)) (d (n "pallet-broker") (r "^0.8.0") (k 0)) (d (n "pallet-election-provider-multi-phase") (r "^29.0.0") (k 0)) (d (n "pallet-fast-unstake") (r "^29.0.0") (k 0)) (d (n "pallet-identity") (r "^30.0.0") (k 0)) (d (n "pallet-session") (r "^30.0.0") (k 0)) (d (n "pallet-staking") (r "^30.0.0") (k 0)) (d (n "pallet-staking-reward-fn") (r "^21.0.0") (k 0)) (d (n "pallet-timestamp") (r "^29.0.0") (k 0)) (d (n "pallet-transaction-payment") (r "^30.0.0") (k 0)) (d (n "pallet-treasury") (r "^29.0.0") (k 0)) (d (n "pallet-vesting") (r "^30.0.0") (k 0)) (d (n "parity-scale-codec") (r "^3.6.1") (f (quote ("derive"))) (k 0)) (d (n "primitives") (r "^9.0.0") (k 0) (p "polkadot-primitives")) (d (n "runtime-parachains") (r "^9.0.0") (k 0) (p "polkadot-runtime-parachains")) (d (n "rustc-hex") (r "^2.1.0") (k 0)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("alloc"))) (k 0)) (d (n "serde_derive") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 2)) (d (n "slot-range-helper") (r "^9.0.0") (k 0)) (d (n "sp-api") (r "^28.0.0") (k 0)) (d (n "sp-core") (r "^30.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "^32.0.0") (k 0)) (d (n "sp-npos-elections") (r "^28.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-runtime") (r "^33.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-session") (r "^29.0.0") (k 0)) (d (n "sp-staking") (r "^28.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0) (p "sp-std")) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "xcm") (r "^9.0.0") (k 0) (p "staging-xcm")) (d (n "xcm-builder") (r "^9.0.0") (k 0) (p "staging-xcm-builder")) (d (n "xcm-executor") (r "^9.0.0") (o #t) (k 0) (p "staging-xcm-executor")))) (h "0ymaqrzn1nz5myc9h3rfprlj3h4id141q33fkkqh6fn1ha0cwzk4") (f (quote (("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "libsecp256k1/hmac" "libsecp256k1/static-context" "pallet-asset-rate/runtime-benchmarks" "pallet-babe/runtime-benchmarks" "pallet-balances/runtime-benchmarks" "pallet-broker/runtime-benchmarks" "pallet-election-provider-multi-phase/runtime-benchmarks" "pallet-fast-unstake/runtime-benchmarks" "pallet-identity/runtime-benchmarks" "pallet-staking/runtime-benchmarks" "pallet-timestamp/runtime-benchmarks" "pallet-treasury/runtime-benchmarks" "pallet-vesting/runtime-benchmarks" "primitives/runtime-benchmarks" "runtime-parachains/runtime-benchmarks" "sp-runtime/runtime-benchmarks" "sp-staking/runtime-benchmarks" "xcm-builder/runtime-benchmarks" "xcm-executor/runtime-benchmarks") ("no_std") ("default" "std")))) (s 2) (e (quote (("try-runtime" "frame-election-provider-support/try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-asset-rate/try-runtime" "pallet-authorship/try-runtime" "pallet-babe?/try-runtime" "pallet-balances/try-runtime" "pallet-broker/try-runtime" "pallet-election-provider-multi-phase/try-runtime" "pallet-fast-unstake/try-runtime" "pallet-identity/try-runtime" "pallet-session/try-runtime" "pallet-staking/try-runtime" "pallet-timestamp/try-runtime" "pallet-transaction-payment/try-runtime" "pallet-treasury/try-runtime" "pallet-vesting/try-runtime" "runtime-parachains/try-runtime" "sp-runtime/try-runtime") ("std" "bitvec/std" "frame-benchmarking?/std" "frame-election-provider-support/std" "frame-support/std" "frame-system/std" "inherents/std" "libsecp256k1/std" "log/std" "pallet-asset-rate?/std" "pallet-authorship/std" "pallet-balances/std" "pallet-broker/std" "pallet-election-provider-multi-phase/std" "pallet-fast-unstake/std" "pallet-identity/std" "pallet-session/std" "pallet-staking-reward-fn/std" "pallet-staking/std" "pallet-timestamp/std" "pallet-transaction-payment/std" "pallet-treasury/std" "pallet-vesting/std" "parity-scale-codec/std" "primitives/std" "runtime-parachains/std" "rustc-hex/std" "scale-info/std" "serde/std" "slot-range-helper/std" "sp-api/std" "sp-core/std" "sp-io/std" "sp-npos-elections/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std" "xcm-builder/std" "xcm-executor/std" "xcm/std"))))))

(define-public crate-polkadot-runtime-common-8.0.1 (c (n "polkadot-runtime-common") (v "8.0.1") (d (list (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (k 0)) (d (n "frame-benchmarking") (r "^29.0.0") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^29.0.0") (k 0)) (d (n "frame-support") (r "^29.0.0") (k 0)) (d (n "frame-system") (r "^29.0.0") (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "inherents") (r "^27.0.0") (k 0) (p "sp-inherents")) (d (n "libsecp256k1") (r "^0.7.0") (k 0)) (d (n "libsecp256k1") (r "^0.7.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-asset-rate") (r "^8.0.0") (o #t) (k 0)) (d (n "pallet-authorship") (r "^29.0.0") (k 0)) (d (n "pallet-babe") (r "^29.0.0") (o #t) (k 0)) (d (n "pallet-balances") (r "^29.0.0") (k 0)) (d (n "pallet-broker") (r "^0.7.0") (k 0)) (d (n "pallet-election-provider-multi-phase") (r "^28.0.0") (k 0)) (d (n "pallet-fast-unstake") (r "^28.0.0") (k 0)) (d (n "pallet-identity") (r "^29.0.0") (k 0)) (d (n "pallet-session") (r "^29.0.0") (k 0)) (d (n "pallet-staking") (r "^29.0.0") (k 0)) (d (n "pallet-staking-reward-fn") (r "^20.0.0") (k 0)) (d (n "pallet-timestamp") (r "^28.0.0") (k 0)) (d (n "pallet-transaction-payment") (r "^29.0.0") (k 0)) (d (n "pallet-treasury") (r "^28.0.0") (k 0)) (d (n "pallet-vesting") (r "^29.0.0") (k 0)) (d (n "parity-scale-codec") (r "^3.6.1") (f (quote ("derive"))) (k 0)) (d (n "primitives") (r "^8.0.0") (k 0) (p "polkadot-primitives")) (d (n "runtime-parachains") (r "^8.0.0") (k 0) (p "polkadot-runtime-parachains")) (d (n "rustc-hex") (r "^2.1.0") (k 0)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("alloc"))) (k 0)) (d (n "serde_derive") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 2)) (d (n "slot-range-helper") (r "^8.0.0") (k 0)) (d (n "sp-api") (r "^27.0.0") (k 0)) (d (n "sp-core") (r "^29.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "^31.0.0") (k 0)) (d (n "sp-npos-elections") (r "^27.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-runtime") (r "^32.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-session") (r "^28.0.0") (k 0)) (d (n "sp-staking") (r "^27.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0) (p "sp-std")) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "xcm") (r "^8.0.0") (k 0) (p "staging-xcm")) (d (n "xcm-builder") (r "^8.0.1") (k 0) (p "staging-xcm-builder")) (d (n "xcm-executor") (r "^8.0.1") (o #t) (k 0) (p "staging-xcm-executor")))) (h "0a84ikrc3ksvpj1872vk17ic3h63zzfrhai40wcssi82s4xvpbq6") (f (quote (("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "libsecp256k1/hmac" "libsecp256k1/static-context" "pallet-asset-rate/runtime-benchmarks" "pallet-babe/runtime-benchmarks" "pallet-balances/runtime-benchmarks" "pallet-broker/runtime-benchmarks" "pallet-election-provider-multi-phase/runtime-benchmarks" "pallet-fast-unstake/runtime-benchmarks" "pallet-identity/runtime-benchmarks" "pallet-staking/runtime-benchmarks" "pallet-timestamp/runtime-benchmarks" "pallet-treasury/runtime-benchmarks" "pallet-vesting/runtime-benchmarks" "primitives/runtime-benchmarks" "runtime-parachains/runtime-benchmarks" "sp-runtime/runtime-benchmarks" "sp-staking/runtime-benchmarks" "xcm-builder/runtime-benchmarks" "xcm-executor/runtime-benchmarks") ("no_std") ("default" "std")))) (s 2) (e (quote (("try-runtime" "frame-election-provider-support/try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-asset-rate/try-runtime" "pallet-authorship/try-runtime" "pallet-babe?/try-runtime" "pallet-balances/try-runtime" "pallet-broker/try-runtime" "pallet-election-provider-multi-phase/try-runtime" "pallet-fast-unstake/try-runtime" "pallet-identity/try-runtime" "pallet-session/try-runtime" "pallet-staking/try-runtime" "pallet-timestamp/try-runtime" "pallet-transaction-payment/try-runtime" "pallet-treasury/try-runtime" "pallet-vesting/try-runtime" "runtime-parachains/try-runtime" "sp-runtime/try-runtime") ("std" "bitvec/std" "frame-benchmarking?/std" "frame-election-provider-support/std" "frame-support/std" "frame-system/std" "inherents/std" "libsecp256k1/std" "log/std" "pallet-asset-rate?/std" "pallet-authorship/std" "pallet-balances/std" "pallet-broker/std" "pallet-election-provider-multi-phase/std" "pallet-fast-unstake/std" "pallet-identity/std" "pallet-session/std" "pallet-staking-reward-fn/std" "pallet-staking/std" "pallet-timestamp/std" "pallet-transaction-payment/std" "pallet-treasury/std" "pallet-vesting/std" "parity-scale-codec/std" "primitives/std" "runtime-parachains/std" "rustc-hex/std" "scale-info/std" "serde/std" "slot-range-helper/std" "sp-api/std" "sp-core/std" "sp-io/std" "sp-npos-elections/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std" "xcm-builder/std" "xcm-executor/std" "xcm/std"))))))

(define-public crate-polkadot-runtime-common-10.0.0 (c (n "polkadot-runtime-common") (v "10.0.0") (d (list (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (k 0)) (d (n "frame-benchmarking") (r "^31.0.0") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^31.0.0") (k 0)) (d (n "frame-support") (r "^31.0.0") (k 0)) (d (n "frame-system") (r "^31.0.0") (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "inherents") (r "^29.0.0") (k 0) (p "sp-inherents")) (d (n "libsecp256k1") (r "^0.7.0") (k 0)) (d (n "libsecp256k1") (r "^0.7.0") (d #t) (k 2)) (d (n "log") (r "^0.4.20") (k 0)) (d (n "pallet-asset-rate") (r "^10.0.0") (o #t) (k 0)) (d (n "pallet-authorship") (r "^31.0.0") (k 0)) (d (n "pallet-babe") (r "^31.0.0") (o #t) (k 0)) (d (n "pallet-balances") (r "^31.0.0") (k 0)) (d (n "pallet-broker") (r "^0.9.0") (k 0)) (d (n "pallet-election-provider-multi-phase") (r "^30.0.0") (k 0)) (d (n "pallet-fast-unstake") (r "^30.0.0") (k 0)) (d (n "pallet-identity") (r "^31.0.0") (k 0)) (d (n "pallet-session") (r "^31.0.0") (k 0)) (d (n "pallet-staking") (r "^31.0.0") (k 0)) (d (n "pallet-staking-reward-fn") (r "^21.0.0") (k 0)) (d (n "pallet-timestamp") (r "^30.0.0") (k 0)) (d (n "pallet-transaction-payment") (r "^31.0.0") (k 0)) (d (n "pallet-treasury") (r "^30.0.0") (k 0)) (d (n "pallet-vesting") (r "^31.0.0") (k 0)) (d (n "parity-scale-codec") (r "^3.6.1") (f (quote ("derive"))) (k 0)) (d (n "primitives") (r "^10.0.0") (k 0) (p "polkadot-primitives")) (d (n "runtime-parachains") (r "^10.0.0") (k 0) (p "polkadot-runtime-parachains")) (d (n "rustc-hex") (r "^2.1.0") (k 0)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("alloc"))) (k 0)) (d (n "serde_derive") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 2)) (d (n "slot-range-helper") (r "^10.0.0") (k 0)) (d (n "sp-api") (r "^29.0.0") (k 0)) (d (n "sp-core") (r "^31.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "^33.0.0") (k 0)) (d (n "sp-npos-elections") (r "^29.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-runtime") (r "^34.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-session") (r "^30.0.0") (k 0)) (d (n "sp-staking") (r "^29.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0) (p "sp-std")) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "xcm") (r "^10.0.0") (k 0) (p "staging-xcm")) (d (n "xcm-builder") (r "^10.0.0") (k 0) (p "staging-xcm-builder")) (d (n "xcm-executor") (r "^10.0.0") (o #t) (k 0) (p "staging-xcm-executor")))) (h "1wi7w89a1629wj6i7bm8z1zgvz7ybpssy0g0lhjy05qfyazxgaxi") (f (quote (("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "libsecp256k1/hmac" "libsecp256k1/static-context" "pallet-asset-rate/runtime-benchmarks" "pallet-babe/runtime-benchmarks" "pallet-balances/runtime-benchmarks" "pallet-broker/runtime-benchmarks" "pallet-election-provider-multi-phase/runtime-benchmarks" "pallet-fast-unstake/runtime-benchmarks" "pallet-identity/runtime-benchmarks" "pallet-staking/runtime-benchmarks" "pallet-timestamp/runtime-benchmarks" "pallet-treasury/runtime-benchmarks" "pallet-vesting/runtime-benchmarks" "primitives/runtime-benchmarks" "runtime-parachains/runtime-benchmarks" "sp-runtime/runtime-benchmarks" "sp-staking/runtime-benchmarks" "xcm-builder/runtime-benchmarks" "xcm-executor/runtime-benchmarks") ("no_std") ("default" "std")))) (s 2) (e (quote (("try-runtime" "frame-election-provider-support/try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-asset-rate/try-runtime" "pallet-authorship/try-runtime" "pallet-babe?/try-runtime" "pallet-balances/try-runtime" "pallet-broker/try-runtime" "pallet-election-provider-multi-phase/try-runtime" "pallet-fast-unstake/try-runtime" "pallet-identity/try-runtime" "pallet-session/try-runtime" "pallet-staking/try-runtime" "pallet-timestamp/try-runtime" "pallet-transaction-payment/try-runtime" "pallet-treasury/try-runtime" "pallet-vesting/try-runtime" "runtime-parachains/try-runtime" "sp-runtime/try-runtime") ("std" "bitvec/std" "frame-benchmarking?/std" "frame-election-provider-support/std" "frame-support/std" "frame-system/std" "inherents/std" "libsecp256k1/std" "log/std" "pallet-asset-rate?/std" "pallet-authorship/std" "pallet-balances/std" "pallet-broker/std" "pallet-election-provider-multi-phase/std" "pallet-fast-unstake/std" "pallet-identity/std" "pallet-session/std" "pallet-staking-reward-fn/std" "pallet-staking/std" "pallet-timestamp/std" "pallet-transaction-payment/std" "pallet-treasury/std" "pallet-vesting/std" "parity-scale-codec/std" "primitives/std" "runtime-parachains/std" "rustc-hex/std" "scale-info/std" "serde/std" "slot-range-helper/std" "sp-api/std" "sp-core/std" "sp-io/std" "sp-npos-elections/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std" "xcm-builder/std" "xcm-executor/std" "xcm/std"))))))

(define-public crate-polkadot-runtime-common-11.0.0 (c (n "polkadot-runtime-common") (v "11.0.0") (d (list (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (k 0)) (d (n "frame-benchmarking") (r "^32.0.0") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^32.0.0") (k 0)) (d (n "frame-support") (r "^32.0.0") (k 0)) (d (n "frame-system") (r "^32.0.0") (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "inherents") (r "^30.0.0") (k 0) (p "sp-inherents")) (d (n "libsecp256k1") (r "^0.7.0") (k 0)) (d (n "libsecp256k1") (r "^0.7.0") (d #t) (k 2)) (d (n "log") (r "^0.4.21") (k 0)) (d (n "pallet-asset-rate") (r "^11.0.0") (o #t) (k 0)) (d (n "pallet-authorship") (r "^32.0.0") (k 0)) (d (n "pallet-babe") (r "^32.0.0") (o #t) (k 0)) (d (n "pallet-balances") (r "^33.0.0") (k 0)) (d (n "pallet-broker") (r "^0.10.0") (k 0)) (d (n "pallet-election-provider-multi-phase") (r "^31.0.0") (k 0)) (d (n "pallet-fast-unstake") (r "^31.0.0") (k 0)) (d (n "pallet-identity") (r "^32.0.0") (k 0)) (d (n "pallet-session") (r "^32.0.0") (k 0)) (d (n "pallet-staking") (r "^32.0.0") (k 0)) (d (n "pallet-staking-reward-fn") (r "^22.0.0") (k 0)) (d (n "pallet-timestamp") (r "^31.0.0") (k 0)) (d (n "pallet-transaction-payment") (r "^32.0.0") (k 0)) (d (n "pallet-treasury") (r "^31.0.0") (k 0)) (d (n "pallet-vesting") (r "^32.0.0") (k 0)) (d (n "parity-scale-codec") (r "^3.6.1") (f (quote ("derive"))) (k 0)) (d (n "primitives") (r "^11.0.0") (k 0) (p "polkadot-primitives")) (d (n "runtime-parachains") (r "^11.0.0") (k 0) (p "polkadot-runtime-parachains")) (d (n "rustc-hex") (r "^2.1.0") (k 0)) (d (n "scale-info") (r "^2.11.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("alloc"))) (k 0)) (d (n "serde_derive") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 2)) (d (n "slot-range-helper") (r "^11.0.0") (k 0)) (d (n "sp-api") (r "^30.0.0") (k 0)) (d (n "sp-core") (r "^32.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "^34.0.0") (k 0)) (d (n "sp-npos-elections") (r "^30.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-runtime") (r "^35.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-session") (r "^31.0.0") (k 0)) (d (n "sp-staking") (r "^30.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0) (p "sp-std")) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "xcm") (r "^11.0.0") (k 0) (p "staging-xcm")) (d (n "xcm-builder") (r "^11.0.0") (k 0) (p "staging-xcm-builder")) (d (n "xcm-executor") (r "^11.0.0") (o #t) (k 0) (p "staging-xcm-executor")))) (h "0j1qr9dnln17fpwc0a045ad2p6sjppqis1dzif2fy6wy2ydldj97") (f (quote (("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "libsecp256k1/hmac" "libsecp256k1/static-context" "pallet-asset-rate/runtime-benchmarks" "pallet-babe/runtime-benchmarks" "pallet-balances/runtime-benchmarks" "pallet-broker/runtime-benchmarks" "pallet-election-provider-multi-phase/runtime-benchmarks" "pallet-fast-unstake/runtime-benchmarks" "pallet-identity/runtime-benchmarks" "pallet-staking/runtime-benchmarks" "pallet-timestamp/runtime-benchmarks" "pallet-treasury/runtime-benchmarks" "pallet-vesting/runtime-benchmarks" "primitives/runtime-benchmarks" "runtime-parachains/runtime-benchmarks" "sp-runtime/runtime-benchmarks" "sp-staking/runtime-benchmarks" "xcm-builder/runtime-benchmarks" "xcm-executor/runtime-benchmarks") ("no_std") ("default" "std")))) (s 2) (e (quote (("try-runtime" "frame-election-provider-support/try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-asset-rate/try-runtime" "pallet-authorship/try-runtime" "pallet-babe?/try-runtime" "pallet-balances/try-runtime" "pallet-broker/try-runtime" "pallet-election-provider-multi-phase/try-runtime" "pallet-fast-unstake/try-runtime" "pallet-identity/try-runtime" "pallet-session/try-runtime" "pallet-staking/try-runtime" "pallet-timestamp/try-runtime" "pallet-transaction-payment/try-runtime" "pallet-treasury/try-runtime" "pallet-vesting/try-runtime" "runtime-parachains/try-runtime" "sp-runtime/try-runtime") ("std" "bitvec/std" "frame-benchmarking?/std" "frame-election-provider-support/std" "frame-support/std" "frame-system/std" "inherents/std" "libsecp256k1/std" "log/std" "pallet-asset-rate?/std" "pallet-authorship/std" "pallet-balances/std" "pallet-broker/std" "pallet-election-provider-multi-phase/std" "pallet-fast-unstake/std" "pallet-identity/std" "pallet-session/std" "pallet-staking-reward-fn/std" "pallet-staking/std" "pallet-timestamp/std" "pallet-transaction-payment/std" "pallet-treasury/std" "pallet-vesting/std" "parity-scale-codec/std" "primitives/std" "runtime-parachains/std" "rustc-hex/std" "scale-info/std" "serde/std" "slot-range-helper/std" "sp-api/std" "sp-core/std" "sp-io/std" "sp-npos-elections/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std" "xcm-builder/std" "xcm-executor/std" "xcm/std"))))))

(define-public crate-polkadot-runtime-common-12.0.0 (c (n "polkadot-runtime-common") (v "12.0.0") (d (list (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (k 0)) (d (n "frame-benchmarking") (r "^33.0.0") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^33.0.0") (k 0)) (d (n "frame-support") (r "^33.0.0") (k 0)) (d (n "frame-system") (r "^33.0.0") (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "inherents") (r "^31.0.0") (k 0) (p "sp-inherents")) (d (n "libsecp256k1") (r "^0.7.0") (k 0)) (d (n "libsecp256k1") (r "^0.7.0") (d #t) (k 2)) (d (n "log") (r "^0.4.21") (k 0)) (d (n "pallet-asset-rate") (r "^12.0.0") (o #t) (k 0)) (d (n "pallet-authorship") (r "^33.0.0") (k 0)) (d (n "pallet-babe") (r "^33.0.0") (o #t) (k 0)) (d (n "pallet-balances") (r "^34.0.0") (k 0)) (d (n "pallet-broker") (r "^0.11.0") (k 0)) (d (n "pallet-election-provider-multi-phase") (r "^32.0.0") (k 0)) (d (n "pallet-fast-unstake") (r "^32.0.0") (k 0)) (d (n "pallet-identity") (r "^33.0.0") (k 0)) (d (n "pallet-session") (r "^33.0.0") (k 0)) (d (n "pallet-staking") (r "^33.0.0") (k 0)) (d (n "pallet-staking-reward-fn") (r "^22.0.0") (k 0)) (d (n "pallet-timestamp") (r "^32.0.0") (k 0)) (d (n "pallet-transaction-payment") (r "^33.0.0") (k 0)) (d (n "pallet-treasury") (r "^32.0.0") (k 0)) (d (n "pallet-vesting") (r "^33.0.0") (k 0)) (d (n "parity-scale-codec") (r "^3.6.1") (f (quote ("derive"))) (k 0)) (d (n "primitives") (r "^12.0.0") (k 0) (p "polkadot-primitives")) (d (n "runtime-parachains") (r "^12.0.0") (k 0) (p "polkadot-runtime-parachains")) (d (n "rustc-hex") (r "^2.1.0") (k 0)) (d (n "scale-info") (r "^2.11.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("alloc"))) (k 0)) (d (n "serde_derive") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 2)) (d (n "slot-range-helper") (r "^12.0.0") (k 0)) (d (n "sp-api") (r "^31.0.0") (k 0)) (d (n "sp-core") (r "^32.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "^35.0.0") (k 0)) (d (n "sp-npos-elections") (r "^31.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-runtime") (r "^36.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-session") (r "^32.0.0") (k 0)) (d (n "sp-staking") (r "^31.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0) (p "sp-std")) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "xcm") (r "^12.0.0") (k 0) (p "staging-xcm")) (d (n "xcm-builder") (r "^12.0.0") (k 0) (p "staging-xcm-builder")) (d (n "xcm-executor") (r "^12.0.0") (o #t) (k 0) (p "staging-xcm-executor")))) (h "1falbgrmrlj4av61xvhi1qbrabi9bibykg2a74fdw7i3zg5cbzry") (f (quote (("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "libsecp256k1/hmac" "libsecp256k1/static-context" "pallet-asset-rate/runtime-benchmarks" "pallet-babe/runtime-benchmarks" "pallet-balances/runtime-benchmarks" "pallet-broker/runtime-benchmarks" "pallet-election-provider-multi-phase/runtime-benchmarks" "pallet-fast-unstake/runtime-benchmarks" "pallet-identity/runtime-benchmarks" "pallet-staking/runtime-benchmarks" "pallet-timestamp/runtime-benchmarks" "pallet-treasury/runtime-benchmarks" "pallet-vesting/runtime-benchmarks" "primitives/runtime-benchmarks" "runtime-parachains/runtime-benchmarks" "sp-runtime/runtime-benchmarks" "sp-staking/runtime-benchmarks" "xcm-builder/runtime-benchmarks" "xcm-executor/runtime-benchmarks") ("no_std") ("default" "std")))) (s 2) (e (quote (("try-runtime" "frame-election-provider-support/try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-asset-rate/try-runtime" "pallet-authorship/try-runtime" "pallet-babe?/try-runtime" "pallet-balances/try-runtime" "pallet-broker/try-runtime" "pallet-election-provider-multi-phase/try-runtime" "pallet-fast-unstake/try-runtime" "pallet-identity/try-runtime" "pallet-session/try-runtime" "pallet-staking/try-runtime" "pallet-timestamp/try-runtime" "pallet-transaction-payment/try-runtime" "pallet-treasury/try-runtime" "pallet-vesting/try-runtime" "runtime-parachains/try-runtime" "sp-runtime/try-runtime") ("std" "bitvec/std" "frame-benchmarking?/std" "frame-election-provider-support/std" "frame-support/std" "frame-system/std" "inherents/std" "libsecp256k1/std" "log/std" "pallet-asset-rate?/std" "pallet-authorship/std" "pallet-balances/std" "pallet-broker/std" "pallet-election-provider-multi-phase/std" "pallet-fast-unstake/std" "pallet-identity/std" "pallet-session/std" "pallet-staking-reward-fn/std" "pallet-staking/std" "pallet-timestamp/std" "pallet-transaction-payment/std" "pallet-treasury/std" "pallet-vesting/std" "parity-scale-codec/std" "primitives/std" "runtime-parachains/std" "rustc-hex/std" "scale-info/std" "serde/std" "slot-range-helper/std" "sp-api/std" "sp-core/std" "sp-io/std" "sp-npos-elections/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std" "xcm-builder/std" "xcm-executor/std" "xcm/std"))))))

(define-public crate-polkadot-runtime-common-13.0.0 (c (n "polkadot-runtime-common") (v "13.0.0") (d (list (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (k 0)) (d (n "frame-benchmarking") (r "^34.0.0") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^34.0.0") (k 0)) (d (n "frame-support") (r "^34.0.0") (k 0)) (d (n "frame-system") (r "^34.0.0") (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "inherents") (r "^32.0.0") (k 0) (p "sp-inherents")) (d (n "libsecp256k1") (r "^0.7.0") (k 0)) (d (n "libsecp256k1") (r "^0.7.0") (d #t) (k 2)) (d (n "log") (r "^0.4.21") (k 0)) (d (n "pallet-asset-rate") (r "^13.0.0") (o #t) (k 0)) (d (n "pallet-authorship") (r "^34.0.0") (k 0)) (d (n "pallet-babe") (r "^34.0.0") (o #t) (k 0)) (d (n "pallet-balances") (r "^35.0.0") (k 0)) (d (n "pallet-broker") (r "^0.12.0") (k 0)) (d (n "pallet-election-provider-multi-phase") (r "^33.0.0") (k 0)) (d (n "pallet-fast-unstake") (r "^33.0.0") (k 0)) (d (n "pallet-identity") (r "^34.0.0") (k 0)) (d (n "pallet-session") (r "^34.0.0") (k 0)) (d (n "pallet-staking") (r "^34.0.0") (k 0)) (d (n "pallet-staking-reward-fn") (r "^22.0.0") (k 0)) (d (n "pallet-timestamp") (r "^33.0.0") (k 0)) (d (n "pallet-transaction-payment") (r "^34.0.0") (k 0)) (d (n "pallet-treasury") (r "^33.0.0") (k 0)) (d (n "pallet-vesting") (r "^34.0.0") (k 0)) (d (n "parity-scale-codec") (r "^3.6.1") (f (quote ("derive"))) (k 0)) (d (n "primitives") (r "^13.0.0") (k 0) (p "polkadot-primitives")) (d (n "runtime-parachains") (r "^13.0.0") (k 0) (p "polkadot-runtime-parachains")) (d (n "rustc-hex") (r "^2.1.0") (k 0)) (d (n "scale-info") (r "^2.11.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("alloc"))) (k 0)) (d (n "serde_derive") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 2)) (d (n "slot-range-helper") (r "^13.0.0") (k 0)) (d (n "sp-api") (r "^32.0.0") (k 0)) (d (n "sp-core") (r "^33.0.1") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "^36.0.0") (k 0)) (d (n "sp-npos-elections") (r "^32.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-runtime") (r "^37.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-session") (r "^33.0.0") (k 0)) (d (n "sp-staking") (r "^32.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0) (p "sp-std")) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "xcm") (r "^13.0.1") (k 0) (p "staging-xcm")) (d (n "xcm-builder") (r "^13.0.0") (k 0) (p "staging-xcm-builder")) (d (n "xcm-executor") (r "^13.0.0") (o #t) (k 0) (p "staging-xcm-executor")))) (h "0241cxx61sl0y6w7pq7rd3c76wrlj274ja2wh6na5ycmr4kgn58j") (f (quote (("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "libsecp256k1/hmac" "libsecp256k1/static-context" "pallet-asset-rate/runtime-benchmarks" "pallet-babe/runtime-benchmarks" "pallet-balances/runtime-benchmarks" "pallet-broker/runtime-benchmarks" "pallet-election-provider-multi-phase/runtime-benchmarks" "pallet-fast-unstake/runtime-benchmarks" "pallet-identity/runtime-benchmarks" "pallet-staking/runtime-benchmarks" "pallet-timestamp/runtime-benchmarks" "pallet-treasury/runtime-benchmarks" "pallet-vesting/runtime-benchmarks" "primitives/runtime-benchmarks" "runtime-parachains/runtime-benchmarks" "sp-runtime/runtime-benchmarks" "sp-staking/runtime-benchmarks" "xcm-builder/runtime-benchmarks" "xcm-executor/runtime-benchmarks") ("no_std") ("default" "std")))) (s 2) (e (quote (("try-runtime" "frame-election-provider-support/try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-asset-rate/try-runtime" "pallet-authorship/try-runtime" "pallet-babe?/try-runtime" "pallet-balances/try-runtime" "pallet-broker/try-runtime" "pallet-election-provider-multi-phase/try-runtime" "pallet-fast-unstake/try-runtime" "pallet-identity/try-runtime" "pallet-session/try-runtime" "pallet-staking/try-runtime" "pallet-timestamp/try-runtime" "pallet-transaction-payment/try-runtime" "pallet-treasury/try-runtime" "pallet-vesting/try-runtime" "runtime-parachains/try-runtime" "sp-runtime/try-runtime") ("std" "bitvec/std" "frame-benchmarking?/std" "frame-election-provider-support/std" "frame-support/std" "frame-system/std" "inherents/std" "libsecp256k1/std" "log/std" "pallet-asset-rate?/std" "pallet-authorship/std" "pallet-balances/std" "pallet-broker/std" "pallet-election-provider-multi-phase/std" "pallet-fast-unstake/std" "pallet-identity/std" "pallet-session/std" "pallet-staking-reward-fn/std" "pallet-staking/std" "pallet-timestamp/std" "pallet-transaction-payment/std" "pallet-treasury/std" "pallet-vesting/std" "parity-scale-codec/std" "primitives/std" "runtime-parachains/std" "rustc-hex/std" "scale-info/std" "serde/std" "slot-range-helper/std" "sp-api/std" "sp-core/std" "sp-io/std" "sp-npos-elections/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std" "xcm-builder/std" "xcm-executor/std" "xcm/std"))))))

(define-public crate-polkadot-runtime-common-8.0.2 (c (n "polkadot-runtime-common") (v "8.0.2") (d (list (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (k 0)) (d (n "frame-benchmarking") (r "^29.0.0") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^29.0.0") (k 0)) (d (n "frame-support") (r "^29.0.2") (k 0)) (d (n "frame-system") (r "^29.0.0") (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "inherents") (r "^27.0.0") (k 0) (p "sp-inherents")) (d (n "libsecp256k1") (r "^0.7.0") (k 0)) (d (n "libsecp256k1") (r "^0.7.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-asset-rate") (r "^8.0.0") (o #t) (k 0)) (d (n "pallet-authorship") (r "^29.0.0") (k 0)) (d (n "pallet-babe") (r "^29.0.0") (o #t) (k 0)) (d (n "pallet-balances") (r "^29.0.2") (k 0)) (d (n "pallet-broker") (r "^0.7.1") (k 0)) (d (n "pallet-election-provider-multi-phase") (r "^28.0.0") (k 0)) (d (n "pallet-fast-unstake") (r "^28.0.0") (k 0)) (d (n "pallet-identity") (r "^29.0.1") (k 0)) (d (n "pallet-session") (r "^29.0.0") (k 0)) (d (n "pallet-staking") (r "^29.0.3") (k 0)) (d (n "pallet-staking-reward-fn") (r "^20.0.0") (k 0)) (d (n "pallet-timestamp") (r "^28.0.0") (k 0)) (d (n "pallet-transaction-payment") (r "^29.0.1") (k 0)) (d (n "pallet-treasury") (r "^28.0.1") (k 0)) (d (n "pallet-vesting") (r "^29.0.0") (k 0)) (d (n "parity-scale-codec") (r "^3.6.1") (f (quote ("derive"))) (k 0)) (d (n "primitives") (r "^8.0.1") (k 0) (p "polkadot-primitives")) (d (n "runtime-parachains") (r "^8.0.3") (k 0) (p "polkadot-runtime-parachains")) (d (n "rustc-hex") (r "^2.1.0") (k 0)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("alloc"))) (k 0)) (d (n "serde_derive") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 2)) (d (n "slot-range-helper") (r "^8.0.0") (k 0)) (d (n "sp-api") (r "^27.0.0") (k 0)) (d (n "sp-core") (r "^29.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "^31.0.0") (k 0)) (d (n "sp-npos-elections") (r "^27.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-runtime") (r "^32.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-session") (r "^28.0.0") (k 0)) (d (n "sp-staking") (r "^27.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0) (p "sp-std")) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "xcm") (r "^8.0.1") (k 0) (p "staging-xcm")) (d (n "xcm-builder") (r "^8.0.1") (k 0) (p "staging-xcm-builder")) (d (n "xcm-executor") (r "^8.0.2") (o #t) (k 0) (p "staging-xcm-executor")))) (h "0jjdwzi7jy6w5n0b8lhjpaf45dxqwbaygij2bliygp391bzz05fq") (f (quote (("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "libsecp256k1/hmac" "libsecp256k1/static-context" "pallet-asset-rate/runtime-benchmarks" "pallet-babe/runtime-benchmarks" "pallet-balances/runtime-benchmarks" "pallet-broker/runtime-benchmarks" "pallet-election-provider-multi-phase/runtime-benchmarks" "pallet-fast-unstake/runtime-benchmarks" "pallet-identity/runtime-benchmarks" "pallet-staking/runtime-benchmarks" "pallet-timestamp/runtime-benchmarks" "pallet-treasury/runtime-benchmarks" "pallet-vesting/runtime-benchmarks" "primitives/runtime-benchmarks" "runtime-parachains/runtime-benchmarks" "sp-runtime/runtime-benchmarks" "sp-staking/runtime-benchmarks" "xcm-builder/runtime-benchmarks" "xcm-executor/runtime-benchmarks") ("no_std") ("default" "std")))) (s 2) (e (quote (("try-runtime" "frame-election-provider-support/try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-asset-rate/try-runtime" "pallet-authorship/try-runtime" "pallet-babe?/try-runtime" "pallet-balances/try-runtime" "pallet-broker/try-runtime" "pallet-election-provider-multi-phase/try-runtime" "pallet-fast-unstake/try-runtime" "pallet-identity/try-runtime" "pallet-session/try-runtime" "pallet-staking/try-runtime" "pallet-timestamp/try-runtime" "pallet-transaction-payment/try-runtime" "pallet-treasury/try-runtime" "pallet-vesting/try-runtime" "runtime-parachains/try-runtime" "sp-runtime/try-runtime") ("std" "bitvec/std" "frame-benchmarking?/std" "frame-election-provider-support/std" "frame-support/std" "frame-system/std" "inherents/std" "libsecp256k1/std" "log/std" "pallet-asset-rate?/std" "pallet-authorship/std" "pallet-balances/std" "pallet-broker/std" "pallet-election-provider-multi-phase/std" "pallet-fast-unstake/std" "pallet-identity/std" "pallet-session/std" "pallet-staking-reward-fn/std" "pallet-staking/std" "pallet-timestamp/std" "pallet-transaction-payment/std" "pallet-treasury/std" "pallet-vesting/std" "parity-scale-codec/std" "primitives/std" "runtime-parachains/std" "rustc-hex/std" "scale-info/std" "serde/std" "slot-range-helper/std" "sp-api/std" "sp-core/std" "sp-io/std" "sp-npos-elections/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std" "xcm-builder/std" "xcm-executor/std" "xcm/std"))))))

