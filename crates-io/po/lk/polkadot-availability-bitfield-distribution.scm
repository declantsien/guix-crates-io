(define-module (crates-io po lk polkadot-availability-bitfield-distribution) #:use-module (crates-io))

(define-public crate-polkadot-availability-bitfield-distribution-0.0.0 (c (n "polkadot-availability-bitfield-distribution") (v "0.0.0") (h "1g5lfxfcmi8w9d636if0b5bmzp8cahysvy3i8cxv23y9sf1dzzlk") (y #t)))

(define-public crate-polkadot-availability-bitfield-distribution-0.1.0-dev.6 (c (n "polkadot-availability-bitfield-distribution") (v "0.1.0-dev.6") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "gum") (r "=0.1.0-dev.6") (d #t) (k 0) (p "tracing-gum")) (d (n "log") (r "^0.4.17") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "polkadot-node-network-protocol") (r "=0.1.0-dev.6") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "=0.1.0-dev.6") (d #t) (k 0)) (d (n "polkadot-node-subsystem-util") (r "=0.1.0-dev.6") (d #t) (k 0)) (d (n "polkadot-primitives") (r "=0.1.0-dev.6") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "sp-application-crypto") (r "=23.1.0-dev.6") (d #t) (k 2)) (d (n "sp-authority-discovery") (r "=19.1.0-dev.6") (d #t) (k 2)) (d (n "sp-core") (r "=21.1.0-dev.6") (d #t) (k 2)) (d (n "sp-keyring") (r "=24.1.0-dev.6") (d #t) (k 2)) (d (n "sp-keystore") (r "=0.28.0-dev.6") (d #t) (k 2)))) (h "0igsh1dyh89p8dhr112pgs0fww8vkswsdi1pqn6ga95mznbs8hzw")))

(define-public crate-polkadot-availability-bitfield-distribution-1.0.0 (c (n "polkadot-availability-bitfield-distribution") (v "1.0.0") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "gum") (r "^1.0.0") (d #t) (k 0) (p "tracing-gum")) (d (n "log") (r "^0.4.17") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "polkadot-node-network-protocol") (r "^1.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "^1.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem-util") (r "^1.0.0") (d #t) (k 0)) (d (n "polkadot-primitives") (r "^1.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "sp-application-crypto") (r "^24.0.0") (d #t) (k 2)) (d (n "sp-authority-discovery") (r "^20.0.0") (d #t) (k 2)) (d (n "sp-core") (r "^22.0.0") (d #t) (k 2)) (d (n "sp-keyring") (r "^25.0.0") (d #t) (k 2)) (d (n "sp-keystore") (r "^0.28.0") (d #t) (k 2)))) (h "10r30p3lafr5q7kgxnfrh3m2gwp1pvczpnbqnyknlh6sfh99wzp9")))

(define-public crate-polkadot-availability-bitfield-distribution-2.0.0 (c (n "polkadot-availability-bitfield-distribution") (v "2.0.0") (d (list (d (n "always-assert") (r "^0.1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "gum") (r "^2.0.0") (d #t) (k 0) (p "tracing-gum")) (d (n "log") (r "^0.4.17") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "polkadot-node-network-protocol") (r "^2.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "^2.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem-util") (r "^2.0.0") (d #t) (k 0)) (d (n "polkadot-primitives") (r "^2.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)))) (h "0vh7lhdlqc4xgc4lj6570xikqv8372lk7isldzk0r5nl0lpnkfn8")))

(define-public crate-polkadot-availability-bitfield-distribution-3.0.0-dev.1 (c (n "polkadot-availability-bitfield-distribution") (v "3.0.0-dev.1") (d (list (d (n "always-assert") (r "^0.1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "gum") (r "=3.0.0-dev.1") (d #t) (k 0) (p "tracing-gum")) (d (n "log") (r "^0.4.17") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "polkadot-node-network-protocol") (r "=3.0.0-dev.1") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "=3.0.0-dev.1") (d #t) (k 0)) (d (n "polkadot-node-subsystem-util") (r "=3.0.0-dev.1") (d #t) (k 0)) (d (n "polkadot-primitives") (r "=3.0.0-dev.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)))) (h "06mkwz0h4q0q25782pwbg39x6hliy82c3hs7d6z6zaka5lqa670v")))

(define-public crate-polkadot-availability-bitfield-distribution-3.0.0 (c (n "polkadot-availability-bitfield-distribution") (v "3.0.0") (d (list (d (n "always-assert") (r "^0.1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "gum") (r "^3.0.0") (d #t) (k 0) (p "tracing-gum")) (d (n "log") (r "^0.4.17") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "polkadot-node-network-protocol") (r "^3.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "^3.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem-util") (r "^3.0.0") (d #t) (k 0)) (d (n "polkadot-primitives") (r "^3.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)))) (h "0sazfgqm2dx38i7bmp2s44jj85s31l3ffbk453427jyzz269qkhq")))

(define-public crate-polkadot-availability-bitfield-distribution-4.0.0 (c (n "polkadot-availability-bitfield-distribution") (v "4.0.0") (d (list (d (n "always-assert") (r "^0.1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "gum") (r "^4.0.0") (d #t) (k 0) (p "tracing-gum")) (d (n "log") (r "^0.4.17") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "polkadot-node-network-protocol") (r "^4.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "^4.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem-util") (r "^4.0.0") (d #t) (k 0)) (d (n "polkadot-primitives") (r "^4.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)))) (h "0b3r053ihabmfq09l2par40jmz6ffgzw4bcdaxqg9hrsfxgs4vri")))

(define-public crate-polkadot-availability-bitfield-distribution-5.0.0 (c (n "polkadot-availability-bitfield-distribution") (v "5.0.0") (d (list (d (n "always-assert") (r "^0.1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "gum") (r "^5.0.0") (d #t) (k 0) (p "tracing-gum")) (d (n "log") (r "^0.4.17") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "polkadot-node-network-protocol") (r "^5.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "^5.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem-util") (r "^5.0.0") (d #t) (k 0)) (d (n "polkadot-primitives") (r "^5.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)))) (h "14p6a368mg9lr5dxwin1qzbzg53vk0j7shi7mvnjqry81mvq025m")))

(define-public crate-polkadot-availability-bitfield-distribution-6.0.0 (c (n "polkadot-availability-bitfield-distribution") (v "6.0.0") (d (list (d (n "always-assert") (r "^0.1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "gum") (r "^6.0.0") (d #t) (k 0) (p "tracing-gum")) (d (n "log") (r "^0.4.17") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "polkadot-node-network-protocol") (r "^6.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "^6.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem-util") (r "^6.0.0") (d #t) (k 0)) (d (n "polkadot-primitives") (r "^6.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)))) (h "0p75wng4hg0r96w43zcr68gjal1163g53fcji87l1dmvaw2gdlvf")))

(define-public crate-polkadot-availability-bitfield-distribution-7.0.0 (c (n "polkadot-availability-bitfield-distribution") (v "7.0.0") (d (list (d (n "always-assert") (r "^0.1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "gum") (r "^7.0.0") (d #t) (k 0) (p "tracing-gum")) (d (n "log") (r "^0.4.17") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "polkadot-node-network-protocol") (r "^7.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "^7.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem-util") (r "^7.0.0") (d #t) (k 0)) (d (n "polkadot-primitives") (r "^7.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)))) (h "0vl4f7g9n47yv49b45bm10j6ayfc9ivpm4f3yysdyiycw1a3xi2i")))

(define-public crate-polkadot-availability-bitfield-distribution-8.0.0 (c (n "polkadot-availability-bitfield-distribution") (v "8.0.0") (d (list (d (n "always-assert") (r "^0.1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "gum") (r "^8.0.0") (d #t) (k 0) (p "tracing-gum")) (d (n "log") (r "^0.4.17") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "polkadot-node-network-protocol") (r "^8.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "^8.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem-util") (r "^8.0.0") (d #t) (k 0)) (d (n "polkadot-primitives") (r "^8.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)))) (h "198mvsw34a5xi7s1gcllavfvgp90wd584q2pc9w13cxxvxbcizw0")))

(define-public crate-polkadot-availability-bitfield-distribution-9.0.0 (c (n "polkadot-availability-bitfield-distribution") (v "9.0.0") (d (list (d (n "always-assert") (r "^0.1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "gum") (r "^9.0.0") (d #t) (k 0) (p "tracing-gum")) (d (n "log") (r "^0.4.20") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "polkadot-node-network-protocol") (r "^9.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "^9.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem-util") (r "^9.0.0") (d #t) (k 0)) (d (n "polkadot-primitives") (r "^9.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)))) (h "1lhxs4rg2jr6i67s86hvvna9yvzbqrcdsxkn9z9x61vd76167d0i")))

(define-public crate-polkadot-availability-bitfield-distribution-10.0.0 (c (n "polkadot-availability-bitfield-distribution") (v "10.0.0") (d (list (d (n "always-assert") (r "^0.1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "gum") (r "^10.0.0") (d #t) (k 0) (p "tracing-gum")) (d (n "log") (r "^0.4.20") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "polkadot-node-network-protocol") (r "^10.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "^10.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem-util") (r "^10.0.0") (d #t) (k 0)) (d (n "polkadot-primitives") (r "^10.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)))) (h "1v0gdywc6rs56dzz06nglj06370lv5d8csr65s2wvzr019d6y5cv")))

(define-public crate-polkadot-availability-bitfield-distribution-11.0.0 (c (n "polkadot-availability-bitfield-distribution") (v "11.0.0") (d (list (d (n "always-assert") (r "^0.1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (k 2)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "gum") (r "^11.0.0") (d #t) (k 0) (p "tracing-gum")) (d (n "log") (r "^0.4.21") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "polkadot-node-network-protocol") (r "^11.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "^11.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem-util") (r "^11.0.0") (d #t) (k 0)) (d (n "polkadot-primitives") (r "^11.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)))) (h "1n203ghdsmvs84m6w7nz1yyxn9s8248xll2yb28apslf3f6x02v3")))

(define-public crate-polkadot-availability-bitfield-distribution-12.0.0 (c (n "polkadot-availability-bitfield-distribution") (v "12.0.0") (d (list (d (n "always-assert") (r "^0.1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (k 2)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "gum") (r "^12.0.0") (d #t) (k 0) (p "tracing-gum")) (d (n "log") (r "^0.4.21") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "polkadot-node-network-protocol") (r "^12.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "^12.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem-util") (r "^12.0.0") (d #t) (k 0)) (d (n "polkadot-primitives") (r "^12.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)))) (h "0y5g3z1gzdkawblc9gk1y9qsr7scd4vjb9iccnp4xv217f4sdxhs")))

(define-public crate-polkadot-availability-bitfield-distribution-13.0.0 (c (n "polkadot-availability-bitfield-distribution") (v "13.0.0") (d (list (d (n "always-assert") (r "^0.1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (k 2)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "gum") (r "^13.0.0") (d #t) (k 0) (p "tracing-gum")) (d (n "log") (r "^0.4.21") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "polkadot-node-network-protocol") (r "^13.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "^13.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem-util") (r "^13.0.0") (d #t) (k 0)) (d (n "polkadot-primitives") (r "^13.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)))) (h "0zn4xxbv4qw41qs20hlqzsc4vb8m06c377q7drcg5gxrhxpy1pyb")))

