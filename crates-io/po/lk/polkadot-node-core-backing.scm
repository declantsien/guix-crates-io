(define-module (crates-io po lk polkadot-node-core-backing) #:use-module (crates-io))

(define-public crate-polkadot-node-core-backing-0.0.0 (c (n "polkadot-node-core-backing") (v "0.0.0") (h "1iqkf08cmy5pzvzj7bz0x9i2ziypz2mrgrffmk4jxdwl2piml3vx") (y #t)))

(define-public crate-polkadot-node-core-backing-0.1.0-dev.6 (c (n "polkadot-node-core-backing") (v "0.1.0-dev.6") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (k 0)) (d (n "erasure-coding") (r "=0.1.0-dev.6") (d #t) (k 0) (p "polkadot-erasure-coding")) (d (n "fatality") (r "^0.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (f (quote ("thread-pool"))) (d #t) (k 2)) (d (n "gum") (r "=0.1.0-dev.6") (d #t) (k 0) (p "tracing-gum")) (d (n "polkadot-node-primitives") (r "=0.1.0-dev.6") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "=0.1.0-dev.6") (d #t) (k 0)) (d (n "polkadot-node-subsystem-util") (r "=0.1.0-dev.6") (d #t) (k 0)) (d (n "polkadot-primitives") (r "=0.1.0-dev.6") (d #t) (k 0)) (d (n "sc-keystore") (r "=18.1.0-dev.6") (d #t) (k 2)) (d (n "sp-application-crypto") (r "=23.1.0-dev.6") (d #t) (k 2)) (d (n "sp-core") (r "=21.1.0-dev.6") (d #t) (k 2)) (d (n "sp-keyring") (r "=24.1.0-dev.6") (d #t) (k 2)) (d (n "sp-keystore") (r "=0.28.0-dev.6") (d #t) (k 0)) (d (n "sp-tracing") (r "=10.1.0-dev.6") (d #t) (k 2)) (d (n "statement-table") (r "=0.1.0-dev.6") (d #t) (k 0) (p "polkadot-statement-table")) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)))) (h "1fck2nk5ccmswrw675kp71f5ad65nmdss1bgl0v7kq83xc3jzlpm")))

(define-public crate-polkadot-node-core-backing-1.0.0 (c (n "polkadot-node-core-backing") (v "1.0.0") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (k 0)) (d (n "erasure-coding") (r "^1.0.0") (d #t) (k 0) (p "polkadot-erasure-coding")) (d (n "fatality") (r "^0.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (f (quote ("thread-pool"))) (d #t) (k 2)) (d (n "gum") (r "^1.0.0") (d #t) (k 0) (p "tracing-gum")) (d (n "polkadot-node-primitives") (r "^1.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "^1.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem-util") (r "^1.0.0") (d #t) (k 0)) (d (n "polkadot-primitives") (r "^1.0.0") (d #t) (k 0)) (d (n "sc-keystore") (r "^19.0.0") (d #t) (k 2)) (d (n "sp-application-crypto") (r "^24.0.0") (d #t) (k 2)) (d (n "sp-core") (r "^22.0.0") (d #t) (k 2)) (d (n "sp-keyring") (r "^25.0.0") (d #t) (k 2)) (d (n "sp-keystore") (r "^0.28.0") (d #t) (k 0)) (d (n "sp-tracing") (r "^11.0.0") (d #t) (k 2)) (d (n "statement-table") (r "^1.0.0") (d #t) (k 0) (p "polkadot-statement-table")) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)))) (h "1ihigkbhndwkrdrhvf8hq0r1dqmzrjprdqi3xfy5v35y4za01ds6")))

(define-public crate-polkadot-node-core-backing-2.0.0 (c (n "polkadot-node-core-backing") (v "2.0.0") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (k 0)) (d (n "erasure-coding") (r "^2.0.0") (d #t) (k 0) (p "polkadot-erasure-coding")) (d (n "fatality") (r "^0.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (f (quote ("thread-pool"))) (d #t) (k 2)) (d (n "gum") (r "^2.0.0") (d #t) (k 0) (p "tracing-gum")) (d (n "polkadot-node-primitives") (r "^2.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "^2.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem-util") (r "^2.0.0") (d #t) (k 0)) (d (n "polkadot-primitives") (r "^2.0.0") (d #t) (k 0)) (d (n "sp-keystore") (r "^0.29.0") (d #t) (k 0)) (d (n "statement-table") (r "^2.0.0") (d #t) (k 0) (p "polkadot-statement-table")) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)))) (h "0w5g5m8m0yzlfypglhblfsdwhfz9wblipd2qhz6wrmivjnw2qcbj")))

(define-public crate-polkadot-node-core-backing-3.0.0-dev.1 (c (n "polkadot-node-core-backing") (v "3.0.0-dev.1") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (k 0)) (d (n "erasure-coding") (r "=3.0.0-dev.1") (d #t) (k 0) (p "polkadot-erasure-coding")) (d (n "fatality") (r "^0.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (f (quote ("thread-pool"))) (d #t) (k 2)) (d (n "gum") (r "=3.0.0-dev.1") (d #t) (k 0) (p "tracing-gum")) (d (n "polkadot-node-primitives") (r "=3.0.0-dev.1") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "=3.0.0-dev.1") (d #t) (k 0)) (d (n "polkadot-node-subsystem-util") (r "=3.0.0-dev.1") (d #t) (k 0)) (d (n "polkadot-primitives") (r "=3.0.0-dev.1") (d #t) (k 0)) (d (n "sp-keystore") (r "=0.30.0-dev.1") (d #t) (k 0)) (d (n "statement-table") (r "=3.0.0-dev.1") (d #t) (k 0) (p "polkadot-statement-table")) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)))) (h "1s50813xzcwy7x0k52d507hfjldj7qznii165mcggh8l035i1jsg")))

(define-public crate-polkadot-node-core-backing-3.0.0 (c (n "polkadot-node-core-backing") (v "3.0.0") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (k 0)) (d (n "erasure-coding") (r "^3.0.0") (d #t) (k 0) (p "polkadot-erasure-coding")) (d (n "fatality") (r "^0.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (f (quote ("thread-pool"))) (d #t) (k 2)) (d (n "gum") (r "^3.0.0") (d #t) (k 0) (p "tracing-gum")) (d (n "polkadot-node-primitives") (r "^3.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "^3.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem-util") (r "^3.0.0") (d #t) (k 0)) (d (n "polkadot-primitives") (r "^3.0.0") (d #t) (k 0)) (d (n "sp-keystore") (r "^0.30.0") (d #t) (k 0)) (d (n "statement-table") (r "^3.0.0") (d #t) (k 0) (p "polkadot-statement-table")) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)))) (h "0gfdp9q5z7il9vnnamfn7wzd6hqqmdkqk8zxpsds3idvy9cjh29s")))

(define-public crate-polkadot-node-core-backing-4.0.0 (c (n "polkadot-node-core-backing") (v "4.0.0") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (k 0)) (d (n "erasure-coding") (r "^4.0.0") (d #t) (k 0) (p "polkadot-erasure-coding")) (d (n "fatality") (r "^0.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (f (quote ("thread-pool"))) (d #t) (k 2)) (d (n "gum") (r "^4.0.0") (d #t) (k 0) (p "tracing-gum")) (d (n "polkadot-node-primitives") (r "^4.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "^4.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem-util") (r "^4.0.0") (d #t) (k 0)) (d (n "polkadot-primitives") (r "^4.0.0") (d #t) (k 0)) (d (n "sp-keystore") (r "^0.31.0") (d #t) (k 0)) (d (n "statement-table") (r "^4.0.0") (d #t) (k 0) (p "polkadot-statement-table")) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)))) (h "1lkjlbi4nqh53zzsj7k42rrjrnic0m1ddskp00vwqk91yzs40685")))

(define-public crate-polkadot-node-core-backing-5.0.0 (c (n "polkadot-node-core-backing") (v "5.0.0") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (k 0)) (d (n "erasure-coding") (r "^5.0.0") (d #t) (k 0) (p "polkadot-erasure-coding")) (d (n "fatality") (r "^0.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (f (quote ("thread-pool"))) (d #t) (k 2)) (d (n "gum") (r "^5.0.0") (d #t) (k 0) (p "tracing-gum")) (d (n "polkadot-node-primitives") (r "^5.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "^5.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem-util") (r "^5.0.0") (d #t) (k 0)) (d (n "polkadot-primitives") (r "^5.0.0") (d #t) (k 0)) (d (n "sp-keystore") (r "^0.32.0") (d #t) (k 0)) (d (n "statement-table") (r "^5.0.0") (d #t) (k 0) (p "polkadot-statement-table")) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)))) (h "11p3px3f08chz08n4qswnrdsgsay4ccp2j18bcar230ad0k80nc0")))

(define-public crate-polkadot-node-core-backing-6.0.0 (c (n "polkadot-node-core-backing") (v "6.0.0") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (k 0)) (d (n "erasure-coding") (r "^6.0.0") (d #t) (k 0) (p "polkadot-erasure-coding")) (d (n "fatality") (r "^0.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (f (quote ("thread-pool"))) (d #t) (k 2)) (d (n "gum") (r "^6.0.0") (d #t) (k 0) (p "tracing-gum")) (d (n "polkadot-node-primitives") (r "^6.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "^6.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem-util") (r "^6.0.0") (d #t) (k 0)) (d (n "polkadot-primitives") (r "^6.0.0") (d #t) (k 0)) (d (n "sp-keystore") (r "^0.33.0") (d #t) (k 0)) (d (n "statement-table") (r "^6.0.0") (d #t) (k 0) (p "polkadot-statement-table")) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)))) (h "159ckrdjnrvsx35swqzv1167apwa121ywr9p1sixabwdi8pnd55d")))

(define-public crate-polkadot-node-core-backing-7.0.0 (c (n "polkadot-node-core-backing") (v "7.0.0") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (k 0)) (d (n "erasure-coding") (r "^7.0.0") (d #t) (k 0) (p "polkadot-erasure-coding")) (d (n "fatality") (r "^0.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (f (quote ("thread-pool"))) (d #t) (k 2)) (d (n "gum") (r "^7.0.0") (d #t) (k 0) (p "tracing-gum")) (d (n "polkadot-node-primitives") (r "^7.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "^7.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem-util") (r "^7.0.0") (d #t) (k 0)) (d (n "polkadot-primitives") (r "^7.0.0") (d #t) (k 0)) (d (n "sp-keystore") (r "^0.34.0") (d #t) (k 0)) (d (n "statement-table") (r "^7.0.0") (d #t) (k 0) (p "polkadot-statement-table")) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)))) (h "05wbvvwr4cg42z0njbh1yi8hni5r50n3s1qvc6sbxk0qls7lddfp")))

(define-public crate-polkadot-node-core-backing-8.0.0 (c (n "polkadot-node-core-backing") (v "8.0.0") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (k 0)) (d (n "erasure-coding") (r "^8.0.0") (d #t) (k 0) (p "polkadot-erasure-coding")) (d (n "fatality") (r "^0.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (f (quote ("thread-pool"))) (d #t) (k 2)) (d (n "gum") (r "^8.0.0") (d #t) (k 0) (p "tracing-gum")) (d (n "polkadot-node-primitives") (r "^8.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "^8.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem-util") (r "^8.0.0") (d #t) (k 0)) (d (n "polkadot-primitives") (r "^8.0.0") (d #t) (k 0)) (d (n "sp-keystore") (r "^0.35.0") (d #t) (k 0)) (d (n "statement-table") (r "^8.0.0") (d #t) (k 0) (p "polkadot-statement-table")) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)))) (h "0k9n4k48vi8b7n605hvhc4zmznsvizyak8v7yv99pxikk8vfw928")))

(define-public crate-polkadot-node-core-backing-9.0.0 (c (n "polkadot-node-core-backing") (v "9.0.0") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (k 0)) (d (n "erasure-coding") (r "^9.0.0") (d #t) (k 0) (p "polkadot-erasure-coding")) (d (n "fatality") (r "^0.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (f (quote ("thread-pool"))) (d #t) (k 2)) (d (n "gum") (r "^9.0.0") (d #t) (k 0) (p "tracing-gum")) (d (n "polkadot-node-primitives") (r "^9.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "^9.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem-util") (r "^9.0.0") (d #t) (k 0)) (d (n "polkadot-primitives") (r "^9.0.0") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "schnellru") (r "^0.2.1") (d #t) (k 0)) (d (n "sp-keystore") (r "^0.36.0") (d #t) (k 0)) (d (n "statement-table") (r "^9.0.0") (d #t) (k 0) (p "polkadot-statement-table")) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)))) (h "1dxky03bkd50gkfk4qzd1j261c7199d74q2qbylqwbxqmwwdmviy")))

(define-public crate-polkadot-node-core-backing-8.0.1 (c (n "polkadot-node-core-backing") (v "8.0.1") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (k 0)) (d (n "erasure-coding") (r "^8.0.0") (d #t) (k 0) (p "polkadot-erasure-coding")) (d (n "fatality") (r "^0.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (f (quote ("thread-pool"))) (d #t) (k 2)) (d (n "gum") (r "^8.0.0") (d #t) (k 0) (p "tracing-gum")) (d (n "polkadot-node-primitives") (r "^8.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "^8.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem-util") (r "^8.0.0") (d #t) (k 0)) (d (n "polkadot-primitives") (r "^8.0.1") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "schnellru") (r "^0.2.1") (d #t) (k 0)) (d (n "sp-keystore") (r "^0.35.0") (d #t) (k 0)) (d (n "statement-table") (r "^8.0.1") (d #t) (k 0) (p "polkadot-statement-table")) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)))) (h "05a1rxrxgdl4sphm4ndnmzwjbjcr3i3ww62c4vkbxw7jyd08hzzh")))

(define-public crate-polkadot-node-core-backing-10.0.0 (c (n "polkadot-node-core-backing") (v "10.0.0") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (k 0)) (d (n "erasure-coding") (r "^10.0.0") (d #t) (k 0) (p "polkadot-erasure-coding")) (d (n "fatality") (r "^0.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (f (quote ("thread-pool"))) (d #t) (k 2)) (d (n "gum") (r "^10.0.0") (d #t) (k 0) (p "tracing-gum")) (d (n "polkadot-node-primitives") (r "^10.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "^10.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem-util") (r "^10.0.0") (d #t) (k 0)) (d (n "polkadot-primitives") (r "^10.0.0") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "schnellru") (r "^0.2.1") (d #t) (k 0)) (d (n "sp-keystore") (r "^0.37.0") (d #t) (k 0)) (d (n "statement-table") (r "^10.0.0") (d #t) (k 0) (p "polkadot-statement-table")) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)))) (h "12a8rrx04pjvm0jnj28hzphgvx388g3xggwbhxgjzzbmch0chzih")))

(define-public crate-polkadot-node-core-backing-11.0.0 (c (n "polkadot-node-core-backing") (v "11.0.0") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (k 0)) (d (n "erasure-coding") (r "^11.0.0") (d #t) (k 0) (p "polkadot-erasure-coding")) (d (n "fatality") (r "^0.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (f (quote ("thread-pool"))) (d #t) (k 2)) (d (n "gum") (r "^11.0.0") (d #t) (k 0) (p "tracing-gum")) (d (n "polkadot-node-primitives") (r "^11.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "^11.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem-util") (r "^11.0.0") (d #t) (k 0)) (d (n "polkadot-primitives") (r "^11.0.0") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "schnellru") (r "^0.2.1") (d #t) (k 0)) (d (n "sp-keystore") (r "^0.38.0") (d #t) (k 0)) (d (n "statement-table") (r "^11.0.0") (d #t) (k 0) (p "polkadot-statement-table")) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)))) (h "0mpircrach1irh9r0gjxrham9ypi6l0j8izqcpb8x55m937ifm1b")))

(define-public crate-polkadot-node-core-backing-12.0.0 (c (n "polkadot-node-core-backing") (v "12.0.0") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (k 0)) (d (n "erasure-coding") (r "^12.0.0") (d #t) (k 0) (p "polkadot-erasure-coding")) (d (n "fatality") (r "^0.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (f (quote ("thread-pool"))) (d #t) (k 2)) (d (n "gum") (r "^12.0.0") (d #t) (k 0) (p "tracing-gum")) (d (n "polkadot-node-primitives") (r "^12.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "^12.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem-util") (r "^12.0.0") (d #t) (k 0)) (d (n "polkadot-primitives") (r "^12.0.0") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "schnellru") (r "^0.2.1") (d #t) (k 0)) (d (n "sp-keystore") (r "^0.38.0") (d #t) (k 0)) (d (n "statement-table") (r "^12.0.0") (d #t) (k 0) (p "polkadot-statement-table")) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)))) (h "0g806cm7qgvjllv6h9bqvd74sbn9dqw386sqizs2a27qxsmyi1c7")))

(define-public crate-polkadot-node-core-backing-13.0.0 (c (n "polkadot-node-core-backing") (v "13.0.0") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (k 0)) (d (n "erasure-coding") (r "^13.0.0") (d #t) (k 0) (p "polkadot-erasure-coding")) (d (n "fatality") (r "^0.1.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (f (quote ("thread-pool"))) (d #t) (k 2)) (d (n "gum") (r "^13.0.0") (d #t) (k 0) (p "tracing-gum")) (d (n "polkadot-node-primitives") (r "^13.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "^13.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem-util") (r "^13.0.0") (d #t) (k 0)) (d (n "polkadot-primitives") (r "^13.0.0") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "schnellru") (r "^0.2.1") (d #t) (k 0)) (d (n "sp-keystore") (r "^0.39.0") (d #t) (k 0)) (d (n "statement-table") (r "^13.0.0") (d #t) (k 0) (p "polkadot-statement-table")) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)))) (h "03wmqpzrvbbbd3gysp2cb18i8l4dcy1bccfvyp81iymgr18zpmzg")))

