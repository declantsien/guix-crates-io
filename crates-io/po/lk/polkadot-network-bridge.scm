(define-module (crates-io po lk polkadot-network-bridge) #:use-module (crates-io))

(define-public crate-polkadot-network-bridge-0.0.0 (c (n "polkadot-network-bridge") (v "0.0.0") (h "12bc80ivn5s9mb5df4p63bi3g1gdyv9vkyrz1b7fzyygydy1afvl") (y #t)))

(define-public crate-polkadot-network-bridge-0.1.0-dev.6 (c (n "polkadot-network-bridge") (v "0.1.0-dev.6") (d (list (d (n "always-assert") (r "^0.1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "fatality") (r "^0.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-timer") (r "^3") (d #t) (k 2)) (d (n "gum") (r "=0.1.0-dev.6") (d #t) (k 0) (p "tracing-gum")) (d (n "parity-scale-codec") (r "^3.6.1") (f (quote ("derive"))) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "polkadot-node-metrics") (r "=0.1.0-dev.6") (d #t) (k 0)) (d (n "polkadot-node-network-protocol") (r "=0.1.0-dev.6") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "=0.1.0-dev.6") (d #t) (k 0)) (d (n "polkadot-overseer") (r "=0.1.0-dev.6") (d #t) (k 0)) (d (n "polkadot-primitives") (r "=0.1.0-dev.6") (d #t) (k 0)) (d (n "sc-network") (r "=0.28.0-dev.6") (d #t) (k 0)) (d (n "sp-consensus") (r "=0.26.0-dev.6") (d #t) (k 0)) (d (n "sp-core") (r "=21.1.0-dev.6") (d #t) (k 2)) (d (n "sp-keyring") (r "=24.1.0-dev.6") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "15fn8drlyfg1mrchbhmk1mqlqp5n09mmcdpyg2dj52sv09cngzfm")))

(define-public crate-polkadot-network-bridge-1.0.0 (c (n "polkadot-network-bridge") (v "1.0.0") (d (list (d (n "always-assert") (r "^0.1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "fatality") (r "^0.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-timer") (r "^3") (d #t) (k 2)) (d (n "gum") (r "^1.0.0") (d #t) (k 0) (p "tracing-gum")) (d (n "parity-scale-codec") (r "^3.6.1") (f (quote ("derive"))) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "polkadot-node-metrics") (r "^1.0.0") (d #t) (k 0)) (d (n "polkadot-node-network-protocol") (r "^1.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "^1.0.0") (d #t) (k 0)) (d (n "polkadot-overseer") (r "^1.0.0") (d #t) (k 0)) (d (n "polkadot-primitives") (r "^1.0.0") (d #t) (k 0)) (d (n "sc-network") (r "^0.28.0") (d #t) (k 0)) (d (n "sp-consensus") (r "^0.26.0") (d #t) (k 0)) (d (n "sp-core") (r "^22.0.0") (d #t) (k 2)) (d (n "sp-keyring") (r "^25.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1r6iffx2bwd050bad605zxx2sq40g499bid2dj1ngcg45j22bcx7")))

(define-public crate-polkadot-network-bridge-2.0.0 (c (n "polkadot-network-bridge") (v "2.0.0") (d (list (d (n "always-assert") (r "^0.1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "fatality") (r "^0.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-timer") (r "^3") (d #t) (k 2)) (d (n "gum") (r "^2.0.0") (d #t) (k 0) (p "tracing-gum")) (d (n "parity-scale-codec") (r "^3.6.1") (f (quote ("derive"))) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "polkadot-node-metrics") (r "^2.0.0") (d #t) (k 0)) (d (n "polkadot-node-network-protocol") (r "^2.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "^2.0.0") (d #t) (k 0)) (d (n "polkadot-overseer") (r "^2.0.0") (d #t) (k 0)) (d (n "polkadot-primitives") (r "^2.0.0") (d #t) (k 0)) (d (n "sc-network") (r "^0.29.0") (d #t) (k 0)) (d (n "sp-consensus") (r "^0.27.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1fzfm1lpw1g8hl5nj83y8j1119nn466w7s6bp0aa1i1y4rfmd7jv")))

(define-public crate-polkadot-network-bridge-3.0.0-dev.1 (c (n "polkadot-network-bridge") (v "3.0.0-dev.1") (d (list (d (n "always-assert") (r "^0.1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "fatality") (r "^0.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-timer") (r "^3") (d #t) (k 2)) (d (n "gum") (r "=3.0.0-dev.1") (d #t) (k 0) (p "tracing-gum")) (d (n "parity-scale-codec") (r "^3.6.1") (f (quote ("derive"))) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "polkadot-node-metrics") (r "=3.0.0-dev.1") (d #t) (k 0)) (d (n "polkadot-node-network-protocol") (r "=3.0.0-dev.1") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "=3.0.0-dev.1") (d #t) (k 0)) (d (n "polkadot-overseer") (r "=3.0.0-dev.1") (d #t) (k 0)) (d (n "polkadot-primitives") (r "=3.0.0-dev.1") (d #t) (k 0)) (d (n "sc-network") (r "=0.30.0-dev.1") (d #t) (k 0)) (d (n "sp-consensus") (r "=0.28.0-dev.1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1a1b6b1rwfqfnqa46y6x8pz95hqbba26cgqz8ic2pvkgb2dppdfa")))

(define-public crate-polkadot-network-bridge-3.0.0 (c (n "polkadot-network-bridge") (v "3.0.0") (d (list (d (n "always-assert") (r "^0.1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "fatality") (r "^0.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-timer") (r "^3") (d #t) (k 2)) (d (n "gum") (r "^3.0.0") (d #t) (k 0) (p "tracing-gum")) (d (n "parity-scale-codec") (r "^3.6.1") (f (quote ("derive"))) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "polkadot-node-metrics") (r "^3.0.0") (d #t) (k 0)) (d (n "polkadot-node-network-protocol") (r "^3.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "^3.0.0") (d #t) (k 0)) (d (n "polkadot-overseer") (r "^3.0.0") (d #t) (k 0)) (d (n "polkadot-primitives") (r "^3.0.0") (d #t) (k 0)) (d (n "sc-network") (r "^0.30.0") (d #t) (k 0)) (d (n "sp-consensus") (r "^0.28.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0si1zb3jnpz7qrfpyy7ivawl3c2rvj92lhq2vvvw3wv25m4b3ngx")))

(define-public crate-polkadot-network-bridge-4.0.0 (c (n "polkadot-network-bridge") (v "4.0.0") (d (list (d (n "always-assert") (r "^0.1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "fatality") (r "^0.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-timer") (r "^3") (d #t) (k 2)) (d (n "gum") (r "^4.0.0") (d #t) (k 0) (p "tracing-gum")) (d (n "parity-scale-codec") (r "^3.6.1") (f (quote ("derive"))) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "polkadot-node-metrics") (r "^4.0.0") (d #t) (k 0)) (d (n "polkadot-node-network-protocol") (r "^4.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "^4.0.0") (d #t) (k 0)) (d (n "polkadot-overseer") (r "^4.0.0") (d #t) (k 0)) (d (n "polkadot-primitives") (r "^4.0.0") (d #t) (k 0)) (d (n "sc-network") (r "^0.31.0") (d #t) (k 0)) (d (n "sp-consensus") (r "^0.29.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1hvfdi63v8wh33i49p2li1kr9sm2ms96wycr93zfbj6az7kmawxz")))

(define-public crate-polkadot-network-bridge-5.0.0 (c (n "polkadot-network-bridge") (v "5.0.0") (d (list (d (n "always-assert") (r "^0.1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "fatality") (r "^0.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-timer") (r "^3") (d #t) (k 2)) (d (n "gum") (r "^5.0.0") (d #t) (k 0) (p "tracing-gum")) (d (n "parity-scale-codec") (r "^3.6.1") (f (quote ("derive"))) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "polkadot-node-metrics") (r "^5.0.0") (d #t) (k 0)) (d (n "polkadot-node-network-protocol") (r "^5.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "^5.0.0") (d #t) (k 0)) (d (n "polkadot-overseer") (r "^5.0.0") (d #t) (k 0)) (d (n "polkadot-primitives") (r "^5.0.0") (d #t) (k 0)) (d (n "sc-network") (r "^0.32.0") (d #t) (k 0)) (d (n "sp-consensus") (r "^0.30.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1v91m50lg04sdm6q52gk3w0s8n5q2a8r7xcwsd32i06p2n0h9ypd")))

(define-public crate-polkadot-network-bridge-6.0.0 (c (n "polkadot-network-bridge") (v "6.0.0") (d (list (d (n "always-assert") (r "^0.1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "fatality") (r "^0.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-timer") (r "^3") (d #t) (k 2)) (d (n "gum") (r "^6.0.0") (d #t) (k 0) (p "tracing-gum")) (d (n "parity-scale-codec") (r "^3.6.1") (f (quote ("derive"))) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "polkadot-node-metrics") (r "^6.0.0") (d #t) (k 0)) (d (n "polkadot-node-network-protocol") (r "^6.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "^6.0.0") (d #t) (k 0)) (d (n "polkadot-overseer") (r "^6.0.0") (d #t) (k 0)) (d (n "polkadot-primitives") (r "^6.0.0") (d #t) (k 0)) (d (n "sc-network") (r "^0.33.0") (d #t) (k 0)) (d (n "sp-consensus") (r "^0.31.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0amak5cnvd7qnr1xid8cf7ybqgpp2hpwsp9vji414yw3z6g1r2lp")))

(define-public crate-polkadot-network-bridge-7.0.0 (c (n "polkadot-network-bridge") (v "7.0.0") (d (list (d (n "always-assert") (r "^0.1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "fatality") (r "^0.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-timer") (r "^3") (d #t) (k 2)) (d (n "gum") (r "^7.0.0") (d #t) (k 0) (p "tracing-gum")) (d (n "parity-scale-codec") (r "^3.6.1") (f (quote ("derive"))) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "polkadot-node-metrics") (r "^7.0.0") (d #t) (k 0)) (d (n "polkadot-node-network-protocol") (r "^7.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "^7.0.0") (d #t) (k 0)) (d (n "polkadot-overseer") (r "^7.0.0") (d #t) (k 0)) (d (n "polkadot-primitives") (r "^7.0.0") (d #t) (k 0)) (d (n "sc-network") (r "^0.34.0") (d #t) (k 0)) (d (n "sp-consensus") (r "^0.32.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1vnpipbb8nllnz86m55qqc0cap40803pqap8047pq0dw1p8ck625")))

(define-public crate-polkadot-network-bridge-8.0.0 (c (n "polkadot-network-bridge") (v "8.0.0") (d (list (d (n "always-assert") (r "^0.1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "fatality") (r "^0.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-timer") (r "^3") (d #t) (k 2)) (d (n "gum") (r "^8.0.0") (d #t) (k 0) (p "tracing-gum")) (d (n "parity-scale-codec") (r "^3.6.1") (f (quote ("derive"))) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "polkadot-node-metrics") (r "^8.0.0") (d #t) (k 0)) (d (n "polkadot-node-network-protocol") (r "^8.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "^8.0.0") (d #t) (k 0)) (d (n "polkadot-overseer") (r "^8.0.0") (d #t) (k 0)) (d (n "polkadot-primitives") (r "^8.0.0") (d #t) (k 0)) (d (n "sc-network") (r "^0.35.0") (d #t) (k 0)) (d (n "sp-consensus") (r "^0.33.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1g4aax3ks6d3sxnmvawq68xygvnf9a3da34q9p7npsf6i8lw37h4")))

(define-public crate-polkadot-network-bridge-9.0.0 (c (n "polkadot-network-bridge") (v "9.0.0") (d (list (d (n "always-assert") (r "^0.1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "fatality") (r "^0.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-timer") (r "^3") (d #t) (k 2)) (d (n "gum") (r "^9.0.0") (d #t) (k 0) (p "tracing-gum")) (d (n "parity-scale-codec") (r "^3.6.1") (f (quote ("derive"))) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "polkadot-node-metrics") (r "^9.0.0") (d #t) (k 0)) (d (n "polkadot-node-network-protocol") (r "^9.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "^9.0.0") (d #t) (k 0)) (d (n "polkadot-overseer") (r "^9.0.0") (d #t) (k 0)) (d (n "polkadot-primitives") (r "^9.0.0") (d #t) (k 0)) (d (n "sc-network") (r "^0.36.0") (d #t) (k 0)) (d (n "sp-consensus") (r "^0.34.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)))) (h "18qrws70bs1cc5kqpshz1ql5cymxk4g1gsgkcp2sa91w45998cb7")))

(define-public crate-polkadot-network-bridge-10.0.0 (c (n "polkadot-network-bridge") (v "10.0.0") (d (list (d (n "always-assert") (r "^0.1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "fatality") (r "^0.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-timer") (r "^3") (d #t) (k 2)) (d (n "gum") (r "^10.0.0") (d #t) (k 0) (p "tracing-gum")) (d (n "parity-scale-codec") (r "^3.6.1") (f (quote ("derive"))) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "polkadot-node-metrics") (r "^10.0.0") (d #t) (k 0)) (d (n "polkadot-node-network-protocol") (r "^10.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "^10.0.0") (d #t) (k 0)) (d (n "polkadot-overseer") (r "^10.0.0") (d #t) (k 0)) (d (n "polkadot-primitives") (r "^10.0.0") (d #t) (k 0)) (d (n "sc-network") (r "^0.37.0") (d #t) (k 0)) (d (n "sp-consensus") (r "^0.35.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)))) (h "1xh1jpbc5g5nzhbk7w1z39a1rz6bk70kgjzagb1l63fygldlvws8")))

(define-public crate-polkadot-network-bridge-11.0.0 (c (n "polkadot-network-bridge") (v "11.0.0") (d (list (d (n "always-assert") (r "^0.1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.79") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "fatality") (r "^0.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "futures-timer") (r "^3") (d #t) (k 2)) (d (n "gum") (r "^11.0.0") (d #t) (k 0) (p "tracing-gum")) (d (n "parity-scale-codec") (r "^3.6.1") (f (quote ("derive"))) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "polkadot-node-metrics") (r "^11.0.0") (d #t) (k 0)) (d (n "polkadot-node-network-protocol") (r "^11.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "^11.0.0") (d #t) (k 0)) (d (n "polkadot-overseer") (r "^11.0.0") (d #t) (k 0)) (d (n "polkadot-primitives") (r "^11.0.0") (d #t) (k 0)) (d (n "sc-network") (r "^0.38.0") (d #t) (k 0)) (d (n "sp-consensus") (r "^0.36.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)))) (h "08bfij7h383ca62fsmz3yv45zww15i0ka17i326z6y8174fk1nms")))

(define-public crate-polkadot-network-bridge-12.0.0 (c (n "polkadot-network-bridge") (v "12.0.0") (d (list (d (n "always-assert") (r "^0.1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.79") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "fatality") (r "^0.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "futures-timer") (r "^3") (d #t) (k 2)) (d (n "gum") (r "^12.0.0") (d #t) (k 0) (p "tracing-gum")) (d (n "parity-scale-codec") (r "^3.6.1") (f (quote ("derive"))) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "polkadot-node-metrics") (r "^12.0.0") (d #t) (k 0)) (d (n "polkadot-node-network-protocol") (r "^12.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "^12.0.0") (d #t) (k 0)) (d (n "polkadot-overseer") (r "^12.0.0") (d #t) (k 0)) (d (n "polkadot-primitives") (r "^12.0.0") (d #t) (k 0)) (d (n "sc-network") (r "^0.39.0") (d #t) (k 0)) (d (n "sp-consensus") (r "^0.37.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)))) (h "074vmw5v3hk1ikvslqzvxxa6bmpkkwya2h80npfkw34y0bx1zgn5")))

(define-public crate-polkadot-network-bridge-13.0.0 (c (n "polkadot-network-bridge") (v "13.0.0") (d (list (d (n "always-assert") (r "^0.1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.79") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "fatality") (r "^0.1.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "futures-timer") (r "^3") (d #t) (k 2)) (d (n "gum") (r "^13.0.0") (d #t) (k 0) (p "tracing-gum")) (d (n "parity-scale-codec") (r "^3.6.1") (f (quote ("derive"))) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "polkadot-node-metrics") (r "^13.0.0") (d #t) (k 0)) (d (n "polkadot-node-network-protocol") (r "^13.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "^13.0.0") (d #t) (k 0)) (d (n "polkadot-overseer") (r "^13.0.0") (d #t) (k 0)) (d (n "polkadot-primitives") (r "^13.0.0") (d #t) (k 0)) (d (n "sc-network") (r "^0.40.0") (d #t) (k 0)) (d (n "sp-consensus") (r "^0.38.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)))) (h "1ji92v8zr1c9zpi90jyfblcklspcl27r5q6y58g0lv9g2hwac5dl")))

