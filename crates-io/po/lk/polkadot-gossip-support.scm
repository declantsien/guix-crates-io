(define-module (crates-io po lk polkadot-gossip-support) #:use-module (crates-io))

(define-public crate-polkadot-gossip-support-0.0.0 (c (n "polkadot-gossip-support") (v "0.0.0") (h "1kb5m39k1c4gzv8w98w247zp6hqdb2galkkjddzdg4lnc6kp92nq") (y #t)))

(define-public crate-polkadot-gossip-support-0.1.0-dev.6 (c (n "polkadot-gossip-support") (v "0.1.0-dev.6") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "gum") (r "=0.1.0-dev.6") (d #t) (k 0) (p "tracing-gum")) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "polkadot-node-network-protocol") (r "=0.1.0-dev.6") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "=0.1.0-dev.6") (d #t) (k 0)) (d (n "polkadot-node-subsystem-util") (r "=0.1.0-dev.6") (d #t) (k 0)) (d (n "polkadot-primitives") (r "=0.1.0-dev.6") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "rand_chacha") (r "^0.3.1") (k 0)) (d (n "sc-network") (r "=0.28.0-dev.6") (d #t) (k 0)) (d (n "sp-application-crypto") (r "=23.1.0-dev.6") (d #t) (k 0)) (d (n "sp-authority-discovery") (r "=19.1.0-dev.6") (d #t) (k 2)) (d (n "sp-consensus-babe") (r "=0.26.0-dev.6") (d #t) (k 2)) (d (n "sp-core") (r "=21.1.0-dev.6") (d #t) (k 0)) (d (n "sp-keyring") (r "=24.1.0-dev.6") (d #t) (k 2)) (d (n "sp-keystore") (r "=0.28.0-dev.6") (d #t) (k 0)) (d (n "sp-tracing") (r "=10.1.0-dev.6") (d #t) (k 2)))) (h "0kb69dclxyy5f2bzf1myk0h0v1ag3hdl49l6irkfb7w73vna1nfc")))

(define-public crate-polkadot-gossip-support-1.0.0 (c (n "polkadot-gossip-support") (v "1.0.0") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "gum") (r "^1.0.0") (d #t) (k 0) (p "tracing-gum")) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "polkadot-node-network-protocol") (r "^1.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "^1.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem-util") (r "^1.0.0") (d #t) (k 0)) (d (n "polkadot-primitives") (r "^1.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "rand_chacha") (r "^0.3.1") (k 0)) (d (n "sc-network") (r "^0.28.0") (d #t) (k 0)) (d (n "sp-application-crypto") (r "^24.0.0") (d #t) (k 0)) (d (n "sp-authority-discovery") (r "^20.0.0") (d #t) (k 2)) (d (n "sp-consensus-babe") (r "^0.26.0") (d #t) (k 2)) (d (n "sp-core") (r "^22.0.0") (d #t) (k 0)) (d (n "sp-keyring") (r "^25.0.0") (d #t) (k 2)) (d (n "sp-keystore") (r "^0.28.0") (d #t) (k 0)) (d (n "sp-tracing") (r "^11.0.0") (d #t) (k 2)))) (h "1ywi94ndq9h1wvgrd47jc5l7xsy1yzilal00czv8k2vsyp70x1jr")))

(define-public crate-polkadot-gossip-support-2.0.0 (c (n "polkadot-gossip-support") (v "2.0.0") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "gum") (r "^2.0.0") (d #t) (k 0) (p "tracing-gum")) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "polkadot-node-network-protocol") (r "^2.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "^2.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem-util") (r "^2.0.0") (d #t) (k 0)) (d (n "polkadot-primitives") (r "^2.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "rand_chacha") (r "^0.3.1") (k 0)) (d (n "sc-network") (r "^0.29.0") (d #t) (k 0)) (d (n "sc-network-common") (r "^0.28.0") (d #t) (k 0)) (d (n "sp-application-crypto") (r "^25.0.0") (d #t) (k 0)) (d (n "sp-core") (r "^23.0.0") (d #t) (k 0)) (d (n "sp-keystore") (r "^0.29.0") (d #t) (k 0)))) (h "1dswqqi1vqfh48jdi1ial3j80sfsnbhvzqlfbjx55jgvwqdfixi0")))

(define-public crate-polkadot-gossip-support-3.0.0-dev.1 (c (n "polkadot-gossip-support") (v "3.0.0-dev.1") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "gum") (r "=3.0.0-dev.1") (d #t) (k 0) (p "tracing-gum")) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "polkadot-node-network-protocol") (r "=3.0.0-dev.1") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "=3.0.0-dev.1") (d #t) (k 0)) (d (n "polkadot-node-subsystem-util") (r "=3.0.0-dev.1") (d #t) (k 0)) (d (n "polkadot-primitives") (r "=3.0.0-dev.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "rand_chacha") (r "^0.3.1") (k 0)) (d (n "sc-network") (r "=0.30.0-dev.1") (d #t) (k 0)) (d (n "sc-network-common") (r "=0.29.0-dev.1") (d #t) (k 0)) (d (n "sp-application-crypto") (r "=26.0.0-dev.1") (d #t) (k 0)) (d (n "sp-core") (r "=24.0.0-dev.1") (d #t) (k 0)) (d (n "sp-keystore") (r "=0.30.0-dev.1") (d #t) (k 0)))) (h "0zzfrq1alf6d78zb4ski4rp192haxgh03lh7994in5s49kd1r8ij")))

(define-public crate-polkadot-gossip-support-3.0.0 (c (n "polkadot-gossip-support") (v "3.0.0") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "gum") (r "^3.0.0") (d #t) (k 0) (p "tracing-gum")) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "polkadot-node-network-protocol") (r "^3.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "^3.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem-util") (r "^3.0.0") (d #t) (k 0)) (d (n "polkadot-primitives") (r "^3.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "rand_chacha") (r "^0.3.1") (k 0)) (d (n "sc-network") (r "^0.30.0") (d #t) (k 0)) (d (n "sc-network-common") (r "^0.29.0") (d #t) (k 0)) (d (n "sp-application-crypto") (r "^26.0.0") (d #t) (k 0)) (d (n "sp-core") (r "^24.0.0") (d #t) (k 0)) (d (n "sp-keystore") (r "^0.30.0") (d #t) (k 0)))) (h "1xja35a42ckhfj4c7wd412lbi0njayfyc85akmldsf3arrxk9qqb")))

(define-public crate-polkadot-gossip-support-4.0.0 (c (n "polkadot-gossip-support") (v "4.0.0") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "gum") (r "^4.0.0") (d #t) (k 0) (p "tracing-gum")) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "polkadot-node-network-protocol") (r "^4.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "^4.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem-util") (r "^4.0.0") (d #t) (k 0)) (d (n "polkadot-primitives") (r "^4.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "rand_chacha") (r "^0.3.1") (k 0)) (d (n "sc-network") (r "^0.31.0") (d #t) (k 0)) (d (n "sc-network-common") (r "^0.30.0") (d #t) (k 0)) (d (n "sp-application-crypto") (r "^27.0.0") (d #t) (k 0)) (d (n "sp-core") (r "^25.0.0") (d #t) (k 0)) (d (n "sp-keystore") (r "^0.31.0") (d #t) (k 0)))) (h "09fm6q4z4fh483lnbinzfflmb0j91jsljnijrh4hiyqf9hppik4s")))

(define-public crate-polkadot-gossip-support-5.0.0 (c (n "polkadot-gossip-support") (v "5.0.0") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "gum") (r "^5.0.0") (d #t) (k 0) (p "tracing-gum")) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "polkadot-node-network-protocol") (r "^5.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "^5.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem-util") (r "^5.0.0") (d #t) (k 0)) (d (n "polkadot-primitives") (r "^5.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "rand_chacha") (r "^0.3.1") (k 0)) (d (n "sc-network") (r "^0.32.0") (d #t) (k 0)) (d (n "sc-network-common") (r "^0.31.0") (d #t) (k 0)) (d (n "sp-application-crypto") (r "^28.0.0") (d #t) (k 0)) (d (n "sp-core") (r "^26.0.0") (d #t) (k 0)) (d (n "sp-keystore") (r "^0.32.0") (d #t) (k 0)))) (h "0vp8kf4j4pwh0gkmpprsiqbw163vbzp4aphzkkmzwvsdr4fxwzx8")))

(define-public crate-polkadot-gossip-support-6.0.0 (c (n "polkadot-gossip-support") (v "6.0.0") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "gum") (r "^6.0.0") (d #t) (k 0) (p "tracing-gum")) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "polkadot-node-network-protocol") (r "^6.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "^6.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem-util") (r "^6.0.0") (d #t) (k 0)) (d (n "polkadot-primitives") (r "^6.0.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "rand_chacha") (r "^0.3.1") (k 0)) (d (n "sc-network") (r "^0.33.0") (d #t) (k 0)) (d (n "sc-network-common") (r "^0.32.0") (d #t) (k 0)) (d (n "sp-application-crypto") (r "^29.0.0") (d #t) (k 0)) (d (n "sp-core") (r "^27.0.0") (d #t) (k 0)) (d (n "sp-keystore") (r "^0.33.0") (d #t) (k 0)))) (h "03rp876jrab6mddjqi69g9y1cahmk0g2sn4y60mibk892d8nvw86")))

(define-public crate-polkadot-gossip-support-7.0.0 (c (n "polkadot-gossip-support") (v "7.0.0") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "gum") (r "^7.0.0") (d #t) (k 0) (p "tracing-gum")) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "polkadot-node-network-protocol") (r "^7.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "^7.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem-util") (r "^7.0.0") (d #t) (k 0)) (d (n "polkadot-primitives") (r "^7.0.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "rand_chacha") (r "^0.3.1") (k 0)) (d (n "sc-network") (r "^0.34.0") (d #t) (k 0)) (d (n "sc-network-common") (r "^0.33.0") (d #t) (k 0)) (d (n "sp-application-crypto") (r "^30.0.0") (d #t) (k 0)) (d (n "sp-core") (r "^28.0.0") (d #t) (k 0)) (d (n "sp-keystore") (r "^0.34.0") (d #t) (k 0)))) (h "1n40kf8gnf3zy0mb6avd063qbs7yblccgrcdhhvg1dd4f69p7ppl")))

(define-public crate-polkadot-gossip-support-8.0.0 (c (n "polkadot-gossip-support") (v "8.0.0") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "gum") (r "^8.0.0") (d #t) (k 0) (p "tracing-gum")) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "polkadot-node-network-protocol") (r "^8.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "^8.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem-util") (r "^8.0.0") (d #t) (k 0)) (d (n "polkadot-primitives") (r "^8.0.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "rand_chacha") (r "^0.3.1") (k 0)) (d (n "sc-network") (r "^0.35.0") (d #t) (k 0)) (d (n "sc-network-common") (r "^0.34.0") (d #t) (k 0)) (d (n "sp-application-crypto") (r "^31.0.0") (d #t) (k 0)) (d (n "sp-core") (r "^29.0.0") (d #t) (k 0)) (d (n "sp-crypto-hashing") (r "^0.1.0") (d #t) (k 0)) (d (n "sp-keystore") (r "^0.35.0") (d #t) (k 0)))) (h "1am47vkp62pzz2ha91i0l3z2irsagry1yks163mlnb82c1zmzw01")))

(define-public crate-polkadot-gossip-support-9.0.0 (c (n "polkadot-gossip-support") (v "9.0.0") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "gum") (r "^9.0.0") (d #t) (k 0) (p "tracing-gum")) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 2)) (d (n "polkadot-node-network-protocol") (r "^9.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "^9.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem-util") (r "^9.0.0") (d #t) (k 0)) (d (n "polkadot-primitives") (r "^9.0.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "rand_chacha") (r "^0.3.1") (k 0)) (d (n "sc-network") (r "^0.36.0") (d #t) (k 0)) (d (n "sc-network-common") (r "^0.35.0") (d #t) (k 0)) (d (n "sp-application-crypto") (r "^32.0.0") (d #t) (k 0)) (d (n "sp-core") (r "^30.0.0") (d #t) (k 0)) (d (n "sp-crypto-hashing") (r "^0.1.0") (d #t) (k 0)) (d (n "sp-keystore") (r "^0.36.0") (d #t) (k 0)))) (h "0zg8k2z3fvkl3mj2l02lr819v7gdwchmb2wbixxrwnl6wv5ciwlh")))

(define-public crate-polkadot-gossip-support-10.0.0 (c (n "polkadot-gossip-support") (v "10.0.0") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "gum") (r "^10.0.0") (d #t) (k 0) (p "tracing-gum")) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 2)) (d (n "polkadot-node-network-protocol") (r "^10.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "^10.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem-util") (r "^10.0.0") (d #t) (k 0)) (d (n "polkadot-primitives") (r "^10.0.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "rand_chacha") (r "^0.3.1") (k 0)) (d (n "sc-network") (r "^0.37.0") (d #t) (k 0)) (d (n "sc-network-common") (r "^0.36.0") (d #t) (k 0)) (d (n "sp-application-crypto") (r "^33.0.0") (d #t) (k 0)) (d (n "sp-core") (r "^31.0.0") (d #t) (k 0)) (d (n "sp-crypto-hashing") (r "^0.1.0") (d #t) (k 0)) (d (n "sp-keystore") (r "^0.37.0") (d #t) (k 0)))) (h "10rnjl2s13pbpziflpyf389hf7a634dp187844yz8xfr3znwqr9i")))

(define-public crate-polkadot-gossip-support-11.0.0 (c (n "polkadot-gossip-support") (v "11.0.0") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.79") (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "gum") (r "^11.0.0") (d #t) (k 0) (p "tracing-gum")) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 2)) (d (n "polkadot-node-network-protocol") (r "^11.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "^11.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem-util") (r "^11.0.0") (d #t) (k 0)) (d (n "polkadot-primitives") (r "^11.0.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "rand_chacha") (r "^0.3.1") (k 0)) (d (n "sc-network") (r "^0.38.0") (d #t) (k 0)) (d (n "sc-network-common") (r "^0.37.0") (d #t) (k 0)) (d (n "sp-application-crypto") (r "^34.0.0") (d #t) (k 0)) (d (n "sp-core") (r "^32.0.0") (d #t) (k 0)) (d (n "sp-crypto-hashing") (r "^0.1.0") (d #t) (k 0)) (d (n "sp-keystore") (r "^0.38.0") (d #t) (k 0)))) (h "0pm8gpxlz0gqmqxpzzv88vndyf0dc4ys6l7yzpy6rpgfqgl98zs7")))

(define-public crate-polkadot-gossip-support-12.0.0 (c (n "polkadot-gossip-support") (v "12.0.0") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.79") (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "gum") (r "^12.0.0") (d #t) (k 0) (p "tracing-gum")) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 2)) (d (n "polkadot-node-network-protocol") (r "^12.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "^12.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem-util") (r "^12.0.0") (d #t) (k 0)) (d (n "polkadot-primitives") (r "^12.0.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "rand_chacha") (r "^0.3.1") (k 0)) (d (n "sc-network") (r "^0.39.0") (d #t) (k 0)) (d (n "sc-network-common") (r "^0.38.0") (d #t) (k 0)) (d (n "sp-application-crypto") (r "^35.0.0") (d #t) (k 0)) (d (n "sp-core") (r "^32.0.0") (d #t) (k 0)) (d (n "sp-crypto-hashing") (r "^0.1.0") (d #t) (k 0)) (d (n "sp-keystore") (r "^0.38.0") (d #t) (k 0)))) (h "03z5zd9bm2rrirj3kms55x9y5f79cmxk4ncm3kh6j6l0ydarbsw5")))

(define-public crate-polkadot-gossip-support-13.0.0 (c (n "polkadot-gossip-support") (v "13.0.0") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.79") (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "gum") (r "^13.0.0") (d #t) (k 0) (p "tracing-gum")) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 2)) (d (n "polkadot-node-network-protocol") (r "^13.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem") (r "^13.0.0") (d #t) (k 0)) (d (n "polkadot-node-subsystem-util") (r "^13.0.0") (d #t) (k 0)) (d (n "polkadot-primitives") (r "^13.0.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "rand_chacha") (r "^0.3.1") (k 0)) (d (n "sc-network") (r "^0.40.0") (d #t) (k 0)) (d (n "sc-network-common") (r "^0.39.0") (d #t) (k 0)) (d (n "sp-application-crypto") (r "^36.0.0") (d #t) (k 0)) (d (n "sp-core") (r "^33.0.1") (d #t) (k 0)) (d (n "sp-crypto-hashing") (r "^0.1.0") (d #t) (k 0)) (d (n "sp-keystore") (r "^0.39.0") (d #t) (k 0)))) (h "02p3dfvnqg0qfkp5py49b0g7fzwp2if14q3120w6039qk5sg2jw2")))

