(define-module (crates-io po we power-protobuf) #:use-module (crates-io))

(define-public crate-power-protobuf-0.1.0 (c (n "power-protobuf") (v "0.1.0") (d (list (d (n "convert_case") (r "^0.6") (d #t) (k 0)) (d (n "http") (r "^1.1.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.0") (d #t) (k 0)) (d (n "nom") (r "^7") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "prost") (r "^0.12.4") (d #t) (k 2)) (d (n "prost-types") (r "^0.12.4") (d #t) (k 2)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "syn") (r "^2") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "syn-prelude") (r "^0.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tonic") (r "^0.11.0") (d #t) (k 2)))) (h "00xr5srzlzxcxhgc5hq1wx42jsn6kzc2v6awzsm6z2dhlrc4w7iw") (f (quote (("tagless") ("simplize_rpc_params") ("impl_protobuf_rs") ("impl_prost") ("derive_serde") ("default" "impl_prost" "tagless" "simplize_rpc_params" "derive_serde"))))))

(define-public crate-power-protobuf-0.1.1 (c (n "power-protobuf") (v "0.1.1") (d (list (d (n "convert_case") (r "^0.6") (d #t) (k 0)) (d (n "http") (r "^1.1.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.0") (d #t) (k 0)) (d (n "nom") (r "^7") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "prost") (r "^0.12.4") (d #t) (k 2)) (d (n "prost-types") (r "^0.12.4") (d #t) (k 2)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "syn") (r "^2") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "syn-prelude") (r "^0.1.1") (d #t) (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tonic") (r "^0.11.0") (d #t) (k 2)))) (h "1s6lc5w2m7fpffj0x4jfxsbx1yd0pvh8m8vwdjpsh3d6rn06scmk") (f (quote (("tagless") ("simplize_rpc_params") ("impl_protobuf_rs") ("impl_prost") ("derive_serde") ("default" "impl_prost" "tagless" "simplize_rpc_params" "derive_serde"))))))

(define-public crate-power-protobuf-0.1.3 (c (n "power-protobuf") (v "0.1.3") (d (list (d (n "http") (r "^1.1.0") (d #t) (k 2)) (d (n "power-protobuf-lib") (r "^0.1.3") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "prost") (r "^0.12.4") (d #t) (k 2)) (d (n "prost-types") (r "^0.12.4") (d #t) (k 2)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "syn") (r "^2") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tonic") (r "^0.11.0") (d #t) (k 2)))) (h "0mg0kmqix1jpznh45im4cjlwp8vbbl1m4ndaxdrnm9mcb34cfy52") (f (quote (("tagless") ("simplize_rpc_params") ("impl_protobuf_rs") ("impl_prost") ("derive_serde") ("default" "impl_prost" "tagless" "simplize_rpc_params" "derive_serde"))))))

(define-public crate-power-protobuf-0.1.4 (c (n "power-protobuf") (v "0.1.4") (d (list (d (n "http") (r "^1.1.0") (d #t) (k 2)) (d (n "power-protobuf-lib") (r "^0.1.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "prost") (r "^0.12.4") (d #t) (k 2)) (d (n "prost-types") (r "^0.12.4") (d #t) (k 2)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "syn") (r "^2") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tonic") (r "^0.11.0") (d #t) (k 2)))) (h "131mfpjn35s33g4fhaf9swy5pkzczhkvzh3qs47sjwjjij6d0iiq") (f (quote (("tagless") ("simplize_rpc_params") ("impl_protobuf_rs") ("impl_prost") ("derive_serde") ("default" "impl_prost" "tagless" "simplize_rpc_params" "derive_serde"))))))

(define-public crate-power-protobuf-0.1.5 (c (n "power-protobuf") (v "0.1.5") (d (list (d (n "http") (r "^1.1.0") (d #t) (k 2)) (d (n "power-protobuf-lib") (r "^0.1.5") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "prost") (r "^0.12.4") (d #t) (k 2)) (d (n "prost-types") (r "^0.12.4") (d #t) (k 2)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "syn") (r "^2") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tonic") (r "^0.11.0") (d #t) (k 2)))) (h "02kbx9j3hg8w1xjz5r0mlhrwg4xg8dc6ylxrv72dyi26r31siqhl") (f (quote (("tagless") ("simplize_rpc_params") ("impl_protobuf_rs") ("impl_prost") ("derive_serde") ("default" "impl_prost" "tagless" "simplize_rpc_params" "derive_serde"))))))

(define-public crate-power-protobuf-0.1.6 (c (n "power-protobuf") (v "0.1.6") (d (list (d (n "http") (r "^1.1.0") (d #t) (k 2)) (d (n "power-protobuf-lib") (r "^0.1.6") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "prost") (r "^0.12.4") (d #t) (k 2)) (d (n "prost-types") (r "^0.12.4") (d #t) (k 2)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "syn") (r "^2") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tonic") (r "^0.11.0") (d #t) (k 2)))) (h "1614n4rf1zay2rgv9gqim6zscz4jjravqrvxvi2l3shzpv0d5l94") (f (quote (("tagless" "power-protobuf-lib/tagless") ("simplize_rpc_params" "power-protobuf-lib/simplize_rpc_params") ("impl_protobuf_rs" "power-protobuf-lib/impl_protobuf_rs") ("impl_prost" "power-protobuf-lib/impl_prost") ("derive_serde" "power-protobuf-lib/derive_serde") ("default" "impl_prost" "tagless" "simplize_rpc_params" "derive_serde"))))))

(define-public crate-power-protobuf-0.1.7 (c (n "power-protobuf") (v "0.1.7") (d (list (d (n "http") (r "^1.1.0") (d #t) (k 2)) (d (n "power-protobuf-lib") (r "^0.1.7") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "prost") (r "^0.12.4") (d #t) (k 2)) (d (n "prost-types") (r "^0.12.4") (d #t) (k 2)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "syn") (r "^2") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tonic") (r "^0.11.0") (d #t) (k 2)))) (h "1vbr55hss94fbwimnkzp0fb0r8fy6r7qx4d1my4hzvq7bgr7j0ny") (f (quote (("tagless" "power-protobuf-lib/tagless") ("simplize_rpc_params" "power-protobuf-lib/simplize_rpc_params") ("impl_protobuf_rs" "power-protobuf-lib/impl_protobuf_rs") ("impl_prost" "power-protobuf-lib/impl_prost") ("derive_serde" "power-protobuf-lib/derive_serde") ("default" "impl_prost" "tagless" "simplize_rpc_params" "derive_serde"))))))

(define-public crate-power-protobuf-0.1.8 (c (n "power-protobuf") (v "0.1.8") (d (list (d (n "http") (r "^1.1.0") (d #t) (k 2)) (d (n "power-protobuf-lib") (r "^0.1.8") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "prost") (r "^0.12.4") (d #t) (k 2)) (d (n "prost-types") (r "^0.12.4") (d #t) (k 2)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "syn") (r "^2") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tonic") (r "^0.11.0") (d #t) (k 2)))) (h "0bn8v9fv3zyak9hn10p514alvcdcwhxbadla3qkqvqmd2accfjcj") (f (quote (("tagless" "power-protobuf-lib/tagless") ("simplize_rpc_params" "power-protobuf-lib/simplize_rpc_params") ("impl_protobuf_rs" "power-protobuf-lib/impl_protobuf_rs") ("impl_prost" "power-protobuf-lib/impl_prost") ("derive_serde" "power-protobuf-lib/derive_serde") ("default" "impl_prost" "tagless" "simplize_rpc_params" "derive_serde"))))))

(define-public crate-power-protobuf-0.1.9 (c (n "power-protobuf") (v "0.1.9") (d (list (d (n "http") (r "^1.1.0") (d #t) (k 2)) (d (n "power-protobuf-lib") (r "^0.1.9") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "prost") (r "^0.12.4") (d #t) (k 2)) (d (n "prost-types") (r "^0.12.4") (d #t) (k 2)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "syn") (r "^2") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tonic") (r "^0.11.0") (d #t) (k 2)))) (h "0bmlix399d038gf0k148llvshaaxbd3k53gip2h908ghy00jx8sx") (f (quote (("tagless" "power-protobuf-lib/tagless") ("simplize_rpc_params" "power-protobuf-lib/simplize_rpc_params") ("impl_protobuf_rs" "power-protobuf-lib/impl_protobuf_rs") ("impl_prost" "power-protobuf-lib/impl_prost") ("derive_serde" "power-protobuf-lib/derive_serde") ("default" "impl_prost" "tagless" "simplize_rpc_params" "derive_serde"))))))

(define-public crate-power-protobuf-0.1.10 (c (n "power-protobuf") (v "0.1.10") (d (list (d (n "http") (r "^1.1.0") (d #t) (k 2)) (d (n "power-protobuf-lib") (r "^0.1.10") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "prost") (r "^0.12.4") (d #t) (k 2)) (d (n "prost-types") (r "^0.12.4") (d #t) (k 2)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "syn") (r "^2") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tonic") (r "^0.11.0") (d #t) (k 2)))) (h "1xq59d8zk3vbklp75xzpsgvnpkf17grbkn325g6q1bm3qnlkb7x1") (f (quote (("tagless" "power-protobuf-lib/tagless") ("simplize_rpc_params" "power-protobuf-lib/simplize_rpc_params") ("impl_protobuf_rs" "power-protobuf-lib/impl_protobuf_rs") ("impl_prost" "power-protobuf-lib/impl_prost") ("derive_serde" "power-protobuf-lib/derive_serde") ("default" "impl_prost" "tagless" "simplize_rpc_params" "derive_serde"))))))

(define-public crate-power-protobuf-0.1.11 (c (n "power-protobuf") (v "0.1.11") (d (list (d (n "http") (r "^1.1.0") (d #t) (k 2)) (d (n "power-protobuf-lib") (r "^0.1.11") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "prost") (r "^0.12.4") (d #t) (k 2)) (d (n "prost-types") (r "^0.12.4") (d #t) (k 2)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "syn") (r "^2") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tonic") (r "^0.11.0") (d #t) (k 2)))) (h "124lvlgmqbc2cv5crvg4sbwkpnv5wi9p9xbcy1b8v2b9bym8pm9l") (f (quote (("tagless" "power-protobuf-lib/tagless") ("simplize_rpc_params" "power-protobuf-lib/simplize_rpc_params") ("impl_protobuf_rs" "power-protobuf-lib/impl_protobuf_rs") ("impl_prost" "power-protobuf-lib/impl_prost") ("derive_serde" "power-protobuf-lib/derive_serde") ("default" "impl_prost" "tagless" "simplize_rpc_params" "derive_serde"))))))

