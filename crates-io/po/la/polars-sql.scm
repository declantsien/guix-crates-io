(define-module (crates-io po la polars-sql) #:use-module (crates-io))

(define-public crate-polars-sql-0.1.0 (c (n "polars-sql") (v "0.1.0") (d (list (d (n "polars-arrow") (r "^0.24.4") (f (quote ("like"))) (d #t) (k 0)) (d (n "polars-core") (r "^0.24.4") (d #t) (k 0)) (d (n "polars-lazy") (r "^0.24.4") (f (quote ("compile" "strings" "cross_join"))) (d #t) (k 0)) (d (n "polars-plan") (r "^0.24.4") (f (quote ("compile"))) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sqlparser") (r "^0.19") (d #t) (k 0)))) (h "0g6219nq27zl73c4x13gp7s75cnkacnh27q2rxj2g2b3rkc1vpjb")))

(define-public crate-polars-sql-0.2.0 (c (n "polars-sql") (v "0.2.0") (d (list (d (n "polars-arrow") (r "^0.25.0") (f (quote ("like"))) (d #t) (k 0)) (d (n "polars-core") (r "^0.25.0") (d #t) (k 0)) (d (n "polars-lazy") (r "^0.25.0") (f (quote ("compile" "strings" "cross_join"))) (d #t) (k 0)) (d (n "polars-plan") (r "^0.25.0") (f (quote ("compile"))) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sqlparser") (r "^0.19") (d #t) (k 0)))) (h "14q83ivh1psw9yv7ks0vyib9fgqxp7x8np2a0z7znbl49v3yiml2")))

(define-public crate-polars-sql-0.2.1 (c (n "polars-sql") (v "0.2.1") (d (list (d (n "polars-arrow") (r "^0.25.1") (f (quote ("like"))) (d #t) (k 0)) (d (n "polars-core") (r "^0.25.1") (d #t) (k 0)) (d (n "polars-lazy") (r "^0.25.1") (f (quote ("compile" "strings" "cross_join"))) (d #t) (k 0)) (d (n "polars-plan") (r "^0.25.1") (f (quote ("compile"))) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sqlparser") (r "^0.19") (d #t) (k 0)))) (h "0xqfjifshw6gcsykn85lg3g6fb1l3i9w24rsspxxk71p07x9rv5k")))

(define-public crate-polars-sql-0.2.2 (c (n "polars-sql") (v "0.2.2") (d (list (d (n "atty") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "jemallocator") (r "^0.5") (f (quote ("disable_initial_exec_tls"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "polars-arrow") (r "^0.26.0") (f (quote ("like"))) (d #t) (k 0)) (d (n "polars-core") (r "^0.26.0") (d #t) (k 0)) (d (n "polars-lazy") (r "^0.26.0") (f (quote ("compile" "strings" "cross_join"))) (d #t) (k 0)) (d (n "polars-plan") (r "^0.26.0") (f (quote ("compile"))) (d #t) (k 0)) (d (n "rustyline") (r "^10.0.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sqlparser") (r "^0.19") (d #t) (k 0)))) (h "0pl1y1qbcrg7pk321z2pfpj6xyki6qmmbxl80vb2xz2l69fvnjid") (f (quote (("parquet" "polars-lazy/parquet" "polars-lazy/dtype-binary") ("ipc" "polars-lazy/ipc") ("default") ("csv" "polars-lazy/csv-file") ("cli" "csv" "polars-lazy/fmt" "atty" "rustyline"))))))

(define-public crate-polars-sql-0.2.3 (c (n "polars-sql") (v "0.2.3") (d (list (d (n "atty") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "jemallocator") (r "^0.5") (f (quote ("disable_initial_exec_tls"))) (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "polars-arrow") (r "^0.27.1") (f (quote ("like"))) (d #t) (k 0)) (d (n "polars-core") (r "^0.27.1") (d #t) (k 0)) (d (n "polars-lazy") (r "^0.27.1") (f (quote ("compile" "strings" "cross_join"))) (d #t) (k 0)) (d (n "polars-plan") (r "^0.27.1") (f (quote ("compile"))) (d #t) (k 0)) (d (n "rustyline") (r "^10.0.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sqlparser") (r "^0.19") (d #t) (k 0)))) (h "1r3fq3snvfzj3wpm50vlgfic3kv326bwlm9frlj3x69b4nnhyzcd") (f (quote (("parquet" "polars-lazy/parquet" "polars-lazy/dtype-binary") ("ipc" "polars-lazy/ipc") ("default") ("csv" "polars-lazy/csv-file") ("cli" "csv" "polars-lazy/fmt" "atty" "rustyline" "jemallocator"))))))

(define-public crate-polars-sql-0.28.0 (c (n "polars-sql") (v "0.28.0") (d (list (d (n "atty") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "jemallocator") (r "^0.5") (f (quote ("disable_initial_exec_tls"))) (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "polars-arrow") (r "^0.28.0") (f (quote ("like"))) (d #t) (k 0)) (d (n "polars-core") (r "^0.28.0") (d #t) (k 0)) (d (n "polars-lazy") (r "^0.28.0") (f (quote ("compile" "strings" "cross_join" "trigonometry" "abs" "round_series" "log" "regex" "is_in" "meta"))) (d #t) (k 0)) (d (n "polars-plan") (r "^0.28.0") (f (quote ("compile"))) (d #t) (k 0)) (d (n "rustyline") (r "^11.0.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sqlparser") (r "^0.30") (d #t) (k 0)))) (h "146fxhgzd7cnphn6714zhsx54djkbqh1nb6y8d0x4y2m0brl5g9z") (f (quote (("parquet" "polars-lazy/parquet") ("ipc" "polars-lazy/ipc") ("default") ("csv" "polars-lazy/csv-file") ("cli" "csv" "polars-lazy/fmt" "atty" "rustyline" "jemallocator"))))))

(define-public crate-polars-sql-0.29.0 (c (n "polars-sql") (v "0.29.0") (d (list (d (n "polars-arrow") (r "^0.29.0") (f (quote ("like"))) (d #t) (k 0)) (d (n "polars-core") (r "^0.29.0") (d #t) (k 0)) (d (n "polars-lazy") (r "^0.29.0") (f (quote ("compile" "strings" "cross_join" "trigonometry" "abs" "round_series" "log" "regex" "is_in" "meta" "cum_agg"))) (d #t) (k 0)) (d (n "polars-plan") (r "^0.29.0") (f (quote ("compile"))) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sqlparser") (r "^0.30") (d #t) (k 0)))) (h "14kj01xxpfvjnnc807kygdljrf1jfa5kn6f33zmg4mn8nziz884m") (f (quote (("private") ("parquet" "polars-lazy/parquet") ("json" "polars-lazy/json") ("ipc" "polars-lazy/ipc") ("default") ("csv" "polars-lazy/csv"))))))

(define-public crate-polars-sql-0.30.0 (c (n "polars-sql") (v "0.30.0") (d (list (d (n "polars-arrow") (r "^0.30.0") (f (quote ("like"))) (d #t) (k 0)) (d (n "polars-core") (r "^0.30.0") (d #t) (k 0)) (d (n "polars-lazy") (r "^0.30.0") (f (quote ("compile" "strings" "cross_join" "trigonometry" "abs" "round_series" "log" "regex" "is_in" "meta" "cum_agg"))) (d #t) (k 0)) (d (n "polars-plan") (r "^0.30.0") (f (quote ("compile"))) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sqlparser") (r "^0.34") (d #t) (k 0)))) (h "1rf70ng1qys4vvf4rhh55hcv0r81daa7r2jw0qxi4rsfcv4x11c4") (f (quote (("private") ("parquet" "polars-lazy/parquet") ("json" "polars-lazy/json") ("ipc" "polars-lazy/ipc") ("default") ("csv" "polars-lazy/csv"))))))

(define-public crate-polars-sql-0.31.0 (c (n "polars-sql") (v "0.31.0") (d (list (d (n "polars-arrow") (r "^0.31.0") (f (quote ("like"))) (d #t) (k 0)) (d (n "polars-core") (r "^0.31.0") (d #t) (k 0)) (d (n "polars-lazy") (r "^0.31.0") (f (quote ("compile" "strings" "cross_join" "trigonometry" "abs" "round_series" "log" "regex" "is_in" "meta" "cum_agg"))) (d #t) (k 0)) (d (n "polars-plan") (r "^0.31.0") (f (quote ("compile"))) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sqlparser") (r "^0.34") (d #t) (k 0)))) (h "1d2q8nnw0fgpdvhzz254l2wkms6rmx0adq4s8840yzr22r4if66b") (f (quote (("parquet" "polars-lazy/parquet") ("json" "polars-lazy/json") ("ipc" "polars-lazy/ipc") ("default") ("csv" "polars-lazy/csv"))))))

(define-public crate-polars-sql-0.31.1 (c (n "polars-sql") (v "0.31.1") (d (list (d (n "polars-arrow") (r "^0.31.1") (f (quote ("like"))) (d #t) (k 0)) (d (n "polars-core") (r "^0.31.1") (d #t) (k 0)) (d (n "polars-lazy") (r "^0.31.1") (f (quote ("compile" "strings" "cross_join" "trigonometry" "abs" "round_series" "log" "regex" "is_in" "meta" "cum_agg"))) (d #t) (k 0)) (d (n "polars-plan") (r "^0.31.1") (f (quote ("compile"))) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sqlparser") (r "^0.34") (d #t) (k 0)))) (h "1vcvhgl8caq74iy78h63jag5k2n9l1ycrgxxdvdx33lf3ikidxzp") (f (quote (("parquet" "polars-lazy/parquet") ("json" "polars-lazy/json") ("ipc" "polars-lazy/ipc") ("default") ("csv" "polars-lazy/csv"))))))

(define-public crate-polars-sql-0.32.0 (c (n "polars-sql") (v "0.32.0") (d (list (d (n "polars-arrow") (r "^0.32.0") (f (quote ("like"))) (d #t) (k 0)) (d (n "polars-core") (r "^0.32.0") (d #t) (k 0)) (d (n "polars-lazy") (r "^0.32.0") (f (quote ("compile" "strings" "cross_join" "trigonometry" "abs" "round_series" "log" "regex" "is_in" "meta" "cum_agg"))) (d #t) (k 0)) (d (n "polars-plan") (r "^0.32.0") (f (quote ("compile"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sqlparser") (r "^0.36") (d #t) (k 0)))) (h "15n0qr0pca8m878h670jdxl72kg5l3778bqzx2zfvcm2mav29bnh") (f (quote (("parquet" "polars-lazy/parquet") ("json" "polars-lazy/json") ("ipc" "polars-lazy/ipc") ("default") ("csv" "polars-lazy/csv"))))))

(define-public crate-polars-sql-0.32.1 (c (n "polars-sql") (v "0.32.1") (d (list (d (n "polars-arrow") (r "^0.32.1") (f (quote ("like"))) (d #t) (k 0)) (d (n "polars-core") (r "^0.32.1") (d #t) (k 0)) (d (n "polars-lazy") (r "^0.32.1") (f (quote ("compile" "strings" "cross_join" "trigonometry" "abs" "round_series" "log" "regex" "is_in" "meta" "cum_agg"))) (d #t) (k 0)) (d (n "polars-plan") (r "^0.32.1") (f (quote ("compile"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sqlparser") (r "^0.36") (d #t) (k 0)))) (h "1x7jzkkv8dh7bxc90qijqs2d8z41ac0rs4142zm2bggfz1fb3z6v") (f (quote (("parquet" "polars-lazy/parquet") ("json" "polars-lazy/json") ("ipc" "polars-lazy/ipc") ("default") ("csv" "polars-lazy/csv"))))))

(define-public crate-polars-sql-0.33.0 (c (n "polars-sql") (v "0.33.0") (d (list (d (n "polars-arrow") (r "^0.33.0") (f (quote ("like"))) (k 0)) (d (n "polars-core") (r "^0.33.0") (k 0)) (d (n "polars-lazy") (r "^0.33.0") (f (quote ("compile" "strings" "cross_join" "trigonometry" "abs" "round_series" "log" "regex" "is_in" "meta" "cum_agg"))) (k 0)) (d (n "polars-plan") (r "^0.33.0") (f (quote ("compile"))) (k 0)) (d (n "serde") (r "^1.0.160") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sqlparser") (r "^0.36") (d #t) (k 0)))) (h "067kgwjpwhnm06k3mfxw4bxl7ycialqj5m4jrc20i0dfa5qdfm6n") (f (quote (("parquet" "polars-lazy/parquet") ("json" "polars-lazy/json") ("ipc" "polars-lazy/ipc") ("default") ("csv" "polars-lazy/csv"))))))

(define-public crate-polars-sql-0.33.1 (c (n "polars-sql") (v "0.33.1") (d (list (d (n "polars-arrow") (r "^0.33.1") (f (quote ("like"))) (k 0)) (d (n "polars-core") (r "^0.33.1") (k 0)) (d (n "polars-lazy") (r "^0.33.1") (f (quote ("strings" "cross_join" "trigonometry" "abs" "round_series" "log" "regex" "is_in" "meta" "cum_agg"))) (k 0)) (d (n "polars-plan") (r "^0.33.1") (k 0)) (d (n "serde") (r "^1.0.160") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sqlparser") (r "^0.36") (d #t) (k 0)))) (h "1q8ll0jpl1qpw3dvcfik54xp1i354blski32bpgx2186rshczrgm") (f (quote (("parquet" "polars-lazy/parquet") ("json" "polars-lazy/json") ("ipc" "polars-lazy/ipc") ("default") ("csv" "polars-lazy/csv"))))))

(define-public crate-polars-sql-0.33.2 (c (n "polars-sql") (v "0.33.2") (d (list (d (n "polars-arrow") (r "^0.33.2") (f (quote ("like"))) (k 0)) (d (n "polars-core") (r "^0.33.2") (k 0)) (d (n "polars-lazy") (r "^0.33.2") (f (quote ("strings" "cross_join" "trigonometry" "abs" "round_series" "log" "regex" "is_in" "meta" "cum_agg"))) (k 0)) (d (n "polars-plan") (r "^0.33.2") (k 0)) (d (n "serde") (r "^1.0.160") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sqlparser") (r "^0.36") (d #t) (k 0)))) (h "1z2n2i3h41k8kskq7pwpf4zy6l76237nhzr84bvicdby4ranhwad") (f (quote (("parquet" "polars-lazy/parquet") ("json" "polars-lazy/json") ("ipc" "polars-lazy/ipc") ("default") ("csv" "polars-lazy/csv"))))))

(define-public crate-polars-sql-0.34.0 (c (n "polars-sql") (v "0.34.0") (d (list (d (n "arrow") (r "^0.34.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "polars-core") (r "^0.34.0") (k 0)) (d (n "polars-error") (r "^0.34.0") (k 0)) (d (n "polars-lazy") (r "^0.34.0") (f (quote ("strings" "cross_join" "trigonometry" "abs" "round_series" "log" "regex" "is_in" "meta" "cum_agg" "dtype-date"))) (k 0)) (d (n "polars-plan") (r "^0.34.0") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sqlparser") (r "^0.38") (d #t) (k 0)))) (h "03r8rnpfdiyfrdlvl0a90nc2879x5fc5nv46pkwp4c0ggzzdhryv") (f (quote (("semi_anti_join" "polars-lazy/semi_anti_join") ("parquet" "polars-lazy/parquet") ("json" "polars-lazy/json") ("ipc" "polars-lazy/ipc") ("diagonal_concat" "polars-lazy/diagonal_concat") ("default") ("csv" "polars-lazy/csv"))))))

(define-public crate-polars-sql-0.34.1 (c (n "polars-sql") (v "0.34.1") (d (list (d (n "arrow") (r "^0.34.1") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "polars-core") (r "^0.34.1") (k 0)) (d (n "polars-error") (r "^0.34.1") (k 0)) (d (n "polars-lazy") (r "^0.34.1") (f (quote ("strings" "cross_join" "trigonometry" "abs" "round_series" "log" "regex" "is_in" "meta" "cum_agg" "dtype-date"))) (k 0)) (d (n "polars-plan") (r "^0.34.1") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sqlparser") (r "^0.38") (d #t) (k 0)))) (h "04kraxlmv5avb9pxkaza5g7ivhr7v58g53zb7qpv2659w1r7s3ls") (f (quote (("semi_anti_join" "polars-lazy/semi_anti_join") ("parquet" "polars-lazy/parquet") ("json" "polars-lazy/json") ("ipc" "polars-lazy/ipc") ("diagonal_concat" "polars-lazy/diagonal_concat") ("default") ("csv" "polars-lazy/csv"))))))

(define-public crate-polars-sql-0.34.2 (c (n "polars-sql") (v "0.34.2") (d (list (d (n "arrow") (r "^0.34.2") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "polars-core") (r "^0.34.2") (k 0)) (d (n "polars-error") (r "^0.34.2") (k 0)) (d (n "polars-lazy") (r "^0.34.2") (f (quote ("strings" "cross_join" "trigonometry" "abs" "round_series" "log" "regex" "is_in" "meta" "cum_agg" "dtype-date"))) (k 0)) (d (n "polars-plan") (r "^0.34.2") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sqlparser") (r "^0.38") (d #t) (k 0)))) (h "0zwqhcnppvbjc95dj9647whszpf45swpk36310n0nzzyiff5zxkp") (f (quote (("semi_anti_join" "polars-lazy/semi_anti_join") ("parquet" "polars-lazy/parquet") ("nightly") ("json" "polars-lazy/json") ("ipc" "polars-lazy/ipc") ("diagonal_concat" "polars-lazy/diagonal_concat") ("default") ("csv" "polars-lazy/csv"))))))

(define-public crate-polars-sql-0.35.0 (c (n "polars-sql") (v "0.35.0") (d (list (d (n "arrow") (r "^0.35.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "polars-core") (r "^0.35.0") (k 0)) (d (n "polars-error") (r "^0.35.0") (k 0)) (d (n "polars-lazy") (r "^0.35.0") (f (quote ("strings" "cross_join" "trigonometry" "abs" "round_series" "log" "regex" "is_in" "meta" "cum_agg" "dtype-date"))) (k 0)) (d (n "polars-plan") (r "^0.35.0") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sqlparser") (r "^0.39") (d #t) (k 0)))) (h "140ijgi48s2q0i8nsh9icc5vzpgfdja1hhmsmkq4123a3yasj5rn") (f (quote (("semi_anti_join" "polars-lazy/semi_anti_join") ("parquet" "polars-lazy/parquet") ("nightly") ("json" "polars-lazy/json") ("ipc" "polars-lazy/ipc") ("diagonal_concat" "polars-lazy/diagonal_concat") ("default") ("csv" "polars-lazy/csv"))))))

(define-public crate-polars-sql-0.35.1 (c (n "polars-sql") (v "0.35.1") (d (list (d (n "arrow") (r "^0.35.1") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "polars-core") (r "^0.35.1") (k 0)) (d (n "polars-error") (r "^0.35.1") (k 0)) (d (n "polars-lazy") (r "^0.35.1") (f (quote ("strings" "cross_join" "trigonometry" "abs" "round_series" "log" "regex" "is_in" "meta" "cum_agg" "dtype-date"))) (k 0)) (d (n "polars-plan") (r "^0.35.1") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sqlparser") (r "^0.39") (d #t) (k 0)))) (h "05w5y6sf9fcz9w6d1ang126c7kxbg2wy2zm9j9bz1alw1x4jlvki") (f (quote (("semi_anti_join" "polars-lazy/semi_anti_join") ("parquet" "polars-lazy/parquet") ("nightly") ("json" "polars-lazy/json") ("ipc" "polars-lazy/ipc") ("diagonal_concat" "polars-lazy/diagonal_concat") ("default") ("csv" "polars-lazy/csv"))))))

(define-public crate-polars-sql-0.35.2 (c (n "polars-sql") (v "0.35.2") (d (list (d (n "arrow") (r "^0.35.2") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "polars-core") (r "^0.35.2") (k 0)) (d (n "polars-error") (r "^0.35.2") (k 0)) (d (n "polars-lazy") (r "^0.35.2") (f (quote ("strings" "cross_join" "trigonometry" "abs" "round_series" "log" "regex" "is_in" "meta" "cum_agg" "dtype-date"))) (k 0)) (d (n "polars-plan") (r "^0.35.2") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sqlparser") (r "^0.39") (d #t) (k 0)))) (h "0195596xv3zld3rydbb06i8rb17gcz5f6hhb4c3s9hjmvdhcqmwk") (f (quote (("semi_anti_join" "polars-lazy/semi_anti_join") ("parquet" "polars-lazy/parquet") ("nightly") ("json" "polars-lazy/json") ("ipc" "polars-lazy/ipc") ("diagonal_concat" "polars-lazy/diagonal_concat") ("default") ("csv" "polars-lazy/csv"))))))

(define-public crate-polars-sql-0.35.3 (c (n "polars-sql") (v "0.35.3") (d (list (d (n "arrow") (r "^0.35.3") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "polars-core") (r "^0.35.3") (k 0)) (d (n "polars-error") (r "^0.35.3") (k 0)) (d (n "polars-lazy") (r "^0.35.3") (f (quote ("strings" "cross_join" "trigonometry" "abs" "round_series" "log" "regex" "is_in" "meta" "cum_agg" "dtype-date"))) (k 0)) (d (n "polars-plan") (r "^0.35.3") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sqlparser") (r "^0.39") (d #t) (k 0)))) (h "1sshh6nkvnk1y20rbdrmmp5g6g2fyv4qxbkfp7427vr5qjhzfyln") (f (quote (("semi_anti_join" "polars-lazy/semi_anti_join") ("parquet" "polars-lazy/parquet") ("nightly") ("json" "polars-lazy/json") ("ipc" "polars-lazy/ipc") ("diagonal_concat" "polars-lazy/diagonal_concat") ("default") ("csv" "polars-lazy/csv"))))))

(define-public crate-polars-sql-0.35.4 (c (n "polars-sql") (v "0.35.4") (d (list (d (n "arrow") (r "^0.35.4") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "polars-core") (r "^0.35.4") (k 0)) (d (n "polars-error") (r "^0.35.4") (k 0)) (d (n "polars-lazy") (r "^0.35.4") (f (quote ("strings" "cross_join" "trigonometry" "abs" "round_series" "log" "regex" "is_in" "meta" "cum_agg" "dtype-date"))) (k 0)) (d (n "polars-plan") (r "^0.35.4") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sqlparser") (r "^0.39") (d #t) (k 0)))) (h "17jiflfmyymz1fdk2mrsdri2yqs1h7rqn66y3yny79a9d1wdgnxq") (f (quote (("semi_anti_join" "polars-lazy/semi_anti_join") ("parquet" "polars-lazy/parquet") ("nightly") ("json" "polars-lazy/json") ("ipc" "polars-lazy/ipc") ("diagonal_concat" "polars-lazy/diagonal_concat") ("default") ("csv" "polars-lazy/csv"))))))

(define-public crate-polars-sql-0.36.0 (c (n "polars-sql") (v "0.36.0") (d (list (d (n "arrow") (r "^0.36.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "polars-core") (r "^0.36.0") (k 0)) (d (n "polars-error") (r "^0.36.0") (k 0)) (d (n "polars-lazy") (r "^0.36.0") (f (quote ("strings" "cross_join" "trigonometry" "abs" "round_series" "log" "regex" "is_in" "meta" "cum_agg" "dtype-date"))) (k 0)) (d (n "polars-plan") (r "^0.36.0") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sqlparser") (r "^0.39") (d #t) (k 0)))) (h "0csq5bblah32q5wgiikqf9dvs27ki7y3rxyvnvhl294ikcsnrmg5") (f (quote (("semi_anti_join" "polars-lazy/semi_anti_join") ("parquet" "polars-lazy/parquet") ("nightly") ("json" "polars-lazy/json") ("ipc" "polars-lazy/ipc") ("diagonal_concat" "polars-lazy/diagonal_concat") ("default") ("csv" "polars-lazy/csv"))))))

(define-public crate-polars-sql-0.36.2 (c (n "polars-sql") (v "0.36.2") (d (list (d (n "arrow") (r "^0.36.2") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "polars-core") (r "^0.36.2") (k 0)) (d (n "polars-error") (r "^0.36.2") (k 0)) (d (n "polars-lazy") (r "^0.36.2") (f (quote ("strings" "cross_join" "trigonometry" "abs" "round_series" "log" "regex" "is_in" "meta" "cum_agg" "dtype-date"))) (k 0)) (d (n "polars-plan") (r "^0.36.2") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sqlparser") (r "^0.39") (d #t) (k 0)))) (h "1dcmm993gycw75a6c5hxcr6h2cy6fa2r3hsbx19h9zgxvxnlq2wz") (f (quote (("semi_anti_join" "polars-lazy/semi_anti_join") ("parquet" "polars-lazy/parquet") ("nightly") ("json" "polars-lazy/json") ("ipc" "polars-lazy/ipc") ("diagonal_concat" "polars-lazy/diagonal_concat") ("default") ("csv" "polars-lazy/csv"))))))

(define-public crate-polars-sql-0.37.0 (c (n "polars-sql") (v "0.37.0") (d (list (d (n "arrow") (r "^0.37.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "polars-core") (r "^0.37.0") (k 0)) (d (n "polars-core") (r "^0.37.0") (f (quote ("fmt"))) (k 2)) (d (n "polars-error") (r "^0.37.0") (k 0)) (d (n "polars-lazy") (r "^0.37.0") (f (quote ("abs" "binary_encoding" "concat_str" "cross_join" "cum_agg" "dtype-date" "dtype-decimal" "is_in" "list_eval" "log" "meta" "regex" "round_series" "sign" "string_reverse" "strings" "timezones" "trigonometry"))) (k 0)) (d (n "polars-plan") (r "^0.37.0") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sqlparser") (r "^0.39") (d #t) (k 0)))) (h "0jllznqx496lzndl8ph32204w5zbgvbl1wrfxg0nw54kiy5jmxkp") (f (quote (("timezones" "polars-lazy/timezones") ("semi_anti_join" "polars-lazy/semi_anti_join") ("parquet" "polars-lazy/parquet") ("nightly") ("list_eval" "polars-lazy/list_eval") ("json" "polars-lazy/json") ("ipc" "polars-lazy/ipc") ("dtype-decimal" "polars-lazy/dtype-decimal") ("diagonal_concat" "polars-lazy/diagonal_concat") ("default") ("csv" "polars-lazy/csv") ("binary_encoding" "polars-lazy/binary_encoding"))))))

(define-public crate-polars-sql-0.38.0 (c (n "polars-sql") (v "0.38.0") (d (list (d (n "arrow") (r "^0.38.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "polars-core") (r "^0.38.0") (k 0)) (d (n "polars-core") (r "^0.38.0") (f (quote ("fmt"))) (k 2)) (d (n "polars-error") (r "^0.38.0") (k 0)) (d (n "polars-lazy") (r "^0.38.0") (f (quote ("abs" "binary_encoding" "concat_str" "cross_join" "cum_agg" "dtype-date" "dtype-decimal" "is_in" "list_eval" "log" "meta" "regex" "round_series" "sign" "string_reverse" "strings" "timezones" "trigonometry"))) (k 0)) (d (n "polars-plan") (r "^0.38.0") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sqlparser") (r "^0.39") (d #t) (k 0)))) (h "19z6xkr918cjvbny1y6a7x5yb7pqp437dfgpnw3mnnwnhc8df8w5") (f (quote (("timezones" "polars-lazy/timezones") ("semi_anti_join" "polars-lazy/semi_anti_join") ("parquet" "polars-lazy/parquet") ("nightly") ("list_eval" "polars-lazy/list_eval") ("json" "polars-lazy/json" "polars-plan/extract_jsonpath") ("ipc" "polars-lazy/ipc") ("dtype-decimal" "polars-lazy/dtype-decimal") ("diagonal_concat" "polars-lazy/diagonal_concat") ("default") ("csv" "polars-lazy/csv") ("binary_encoding" "polars-lazy/binary_encoding"))))))

(define-public crate-polars-sql-0.38.1 (c (n "polars-sql") (v "0.38.1") (d (list (d (n "arrow") (r "^0.38.1") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "polars-core") (r "^0.38.1") (k 0)) (d (n "polars-core") (r "^0.38.1") (f (quote ("fmt"))) (k 2)) (d (n "polars-error") (r "^0.38.1") (k 0)) (d (n "polars-lazy") (r "^0.38.1") (f (quote ("abs" "binary_encoding" "concat_str" "cross_join" "cum_agg" "dtype-date" "dtype-decimal" "is_in" "list_eval" "log" "meta" "regex" "round_series" "sign" "string_reverse" "strings" "timezones" "trigonometry"))) (k 0)) (d (n "polars-plan") (r "^0.38.1") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sqlparser") (r "^0.39") (d #t) (k 0)))) (h "0k3w9aii73z9qb1nnr07x24bwjkjmypppjy4nqh0l5x8vklpv7ag") (f (quote (("timezones" "polars-lazy/timezones") ("semi_anti_join" "polars-lazy/semi_anti_join") ("parquet" "polars-lazy/parquet") ("nightly") ("list_eval" "polars-lazy/list_eval") ("json" "polars-lazy/json" "polars-plan/extract_jsonpath") ("ipc" "polars-lazy/ipc") ("dtype-decimal" "polars-lazy/dtype-decimal") ("diagonal_concat" "polars-lazy/diagonal_concat") ("default") ("csv" "polars-lazy/csv") ("binary_encoding" "polars-lazy/binary_encoding"))))))

(define-public crate-polars-sql-0.38.2 (c (n "polars-sql") (v "0.38.2") (d (list (d (n "arrow") (r "^0.38.2") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "polars-core") (r "^0.38.2") (k 0)) (d (n "polars-core") (r "^0.38.2") (f (quote ("fmt"))) (k 2)) (d (n "polars-error") (r "^0.38.2") (k 0)) (d (n "polars-lazy") (r "^0.38.2") (f (quote ("abs" "binary_encoding" "concat_str" "cross_join" "cum_agg" "dtype-date" "dtype-decimal" "is_in" "list_eval" "log" "meta" "regex" "round_series" "sign" "string_reverse" "strings" "timezones" "trigonometry"))) (k 0)) (d (n "polars-plan") (r "^0.38.2") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sqlparser") (r "^0.39") (d #t) (k 0)))) (h "1zcsagg9h5vn630frz0d8mi10i2ll9pi361iq92xpnv0vjckh37s") (f (quote (("timezones" "polars-lazy/timezones") ("semi_anti_join" "polars-lazy/semi_anti_join") ("parquet" "polars-lazy/parquet") ("nightly") ("list_eval" "polars-lazy/list_eval") ("json" "polars-lazy/json" "polars-plan/extract_jsonpath") ("ipc" "polars-lazy/ipc") ("dtype-decimal" "polars-lazy/dtype-decimal") ("diagonal_concat" "polars-lazy/diagonal_concat") ("default") ("csv" "polars-lazy/csv") ("binary_encoding" "polars-lazy/binary_encoding"))))))

(define-public crate-polars-sql-0.38.3 (c (n "polars-sql") (v "0.38.3") (d (list (d (n "arrow") (r "^0.38.3") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison"))) (k 0) (p "polars-arrow")) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "polars-core") (r "^0.38.3") (k 0)) (d (n "polars-core") (r "^0.38.3") (f (quote ("fmt"))) (k 2)) (d (n "polars-error") (r "^0.38.3") (k 0)) (d (n "polars-lazy") (r "^0.38.3") (f (quote ("abs" "binary_encoding" "concat_str" "cross_join" "cum_agg" "dtype-date" "dtype-decimal" "is_in" "list_eval" "log" "meta" "regex" "round_series" "sign" "string_reverse" "strings" "timezones" "trigonometry"))) (k 0)) (d (n "polars-plan") (r "^0.38.3") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sqlparser") (r "^0.39") (d #t) (k 0)))) (h "0aq586w0cxmz76n8df32jn551jrs3qyrfsqrjw98sq4zjmic6lin") (f (quote (("timezones" "polars-lazy/timezones") ("semi_anti_join" "polars-lazy/semi_anti_join") ("parquet" "polars-lazy/parquet") ("nightly") ("list_eval" "polars-lazy/list_eval") ("json" "polars-lazy/json" "polars-plan/extract_jsonpath") ("ipc" "polars-lazy/ipc") ("dtype-decimal" "polars-lazy/dtype-decimal") ("diagonal_concat" "polars-lazy/diagonal_concat") ("default") ("csv" "polars-lazy/csv") ("binary_encoding" "polars-lazy/binary_encoding"))))))

(define-public crate-polars-sql-0.39.0 (c (n "polars-sql") (v "0.39.0") (d (list (d (n "arrow") (r "^0.39.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison"))) (k 0) (p "polars-arrow")) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "polars-core") (r "^0.39.0") (k 0)) (d (n "polars-core") (r "^0.39.0") (f (quote ("fmt"))) (k 2)) (d (n "polars-error") (r "^0.39.0") (k 0)) (d (n "polars-lazy") (r "^0.39.0") (f (quote ("abs" "binary_encoding" "concat_str" "cross_join" "cum_agg" "dtype-date" "dtype-decimal" "is_in" "list_eval" "log" "meta" "regex" "round_series" "sign" "string_reverse" "strings" "timezones" "trigonometry"))) (k 0)) (d (n "polars-plan") (r "^0.39.0") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sqlparser") (r "^0.39") (d #t) (k 0)))) (h "1b8yv2y34liya3y6ghkbcl05mirvz61hq842kxbs6647px64p8mc") (f (quote (("timezones" "polars-lazy/timezones") ("semi_anti_join" "polars-lazy/semi_anti_join") ("parquet" "polars-lazy/parquet") ("nightly") ("list_eval" "polars-lazy/list_eval") ("json" "polars-lazy/json" "polars-plan/extract_jsonpath") ("ipc" "polars-lazy/ipc") ("dtype-decimal" "polars-lazy/dtype-decimal") ("diagonal_concat" "polars-lazy/diagonal_concat") ("default") ("csv" "polars-lazy/csv") ("binary_encoding" "polars-lazy/binary_encoding"))))))

(define-public crate-polars-sql-0.39.1 (c (n "polars-sql") (v "0.39.1") (d (list (d (n "arrow") (r "^0.39.1") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison"))) (k 0) (p "polars-arrow")) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "polars-core") (r "^0.39.1") (k 0)) (d (n "polars-core") (r "^0.39.1") (f (quote ("fmt"))) (k 2)) (d (n "polars-error") (r "^0.39.1") (k 0)) (d (n "polars-lazy") (r "^0.39.1") (f (quote ("abs" "binary_encoding" "concat_str" "cross_join" "cum_agg" "dtype-date" "dtype-decimal" "is_in" "list_eval" "log" "meta" "regex" "round_series" "sign" "string_reverse" "strings" "timezones" "trigonometry"))) (k 0)) (d (n "polars-plan") (r "^0.39.1") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sqlparser") (r "^0.39") (d #t) (k 0)))) (h "09kydbkmz6grzc1srpwrbpdw7blhnqp6ay7csd700w6s3fsg7kgp") (f (quote (("timezones" "polars-lazy/timezones") ("semi_anti_join" "polars-lazy/semi_anti_join") ("parquet" "polars-lazy/parquet") ("nightly") ("list_eval" "polars-lazy/list_eval") ("json" "polars-lazy/json" "polars-plan/extract_jsonpath") ("ipc" "polars-lazy/ipc") ("dtype-decimal" "polars-lazy/dtype-decimal") ("diagonal_concat" "polars-lazy/diagonal_concat") ("default") ("csv" "polars-lazy/csv") ("binary_encoding" "polars-lazy/binary_encoding"))))))

(define-public crate-polars-sql-0.39.2 (c (n "polars-sql") (v "0.39.2") (d (list (d (n "arrow") (r "^0.39.2") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison"))) (k 0) (p "polars-arrow")) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "polars-core") (r "^0.39.2") (k 0)) (d (n "polars-core") (r "^0.39.2") (f (quote ("fmt"))) (k 2)) (d (n "polars-error") (r "^0.39.2") (k 0)) (d (n "polars-lazy") (r "^0.39.2") (f (quote ("abs" "binary_encoding" "concat_str" "cross_join" "cum_agg" "dtype-date" "dtype-decimal" "is_in" "list_eval" "log" "meta" "regex" "round_series" "sign" "string_reverse" "strings" "timezones" "trigonometry"))) (k 0)) (d (n "polars-plan") (r "^0.39.2") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sqlparser") (r "^0.39") (d #t) (k 0)))) (h "1drd4f1b1cv796zs59b9h7yyh585qpgg3cjk34yh5hq43k6bfjvv") (f (quote (("timezones" "polars-lazy/timezones") ("semi_anti_join" "polars-lazy/semi_anti_join") ("parquet" "polars-lazy/parquet") ("nightly") ("list_eval" "polars-lazy/list_eval") ("json" "polars-lazy/json" "polars-plan/extract_jsonpath") ("ipc" "polars-lazy/ipc") ("dtype-decimal" "polars-lazy/dtype-decimal") ("diagonal_concat" "polars-lazy/diagonal_concat") ("default") ("csv" "polars-lazy/csv") ("binary_encoding" "polars-lazy/binary_encoding"))))))

(define-public crate-polars-sql-0.40.0 (c (n "polars-sql") (v "0.40.0") (d (list (d (n "arrow") (r "^0.40.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison"))) (k 0) (p "polars-arrow")) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-core") (r "^0.40.0") (k 0)) (d (n "polars-core") (r "^0.40.0") (f (quote ("fmt"))) (k 2)) (d (n "polars-error") (r "^0.40.0") (k 0)) (d (n "polars-lazy") (r "^0.40.0") (f (quote ("abs" "binary_encoding" "concat_str" "cross_join" "cum_agg" "dtype-date" "dtype-decimal" "is_in" "list_eval" "log" "meta" "regex" "round_series" "sign" "string_reverse" "strings" "timezones" "trigonometry"))) (k 0)) (d (n "polars-plan") (r "^0.40.0") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sqlparser") (r "^0.39") (d #t) (k 0)))) (h "1naa3mbfr24ydcpy97m8y63z6xsdglpq7lr4a7105jwls6czc957") (f (quote (("timezones" "polars-lazy/timezones") ("serde") ("semi_anti_join" "polars-lazy/semi_anti_join") ("parquet" "polars-lazy/parquet") ("nightly") ("list_eval" "polars-lazy/list_eval") ("json" "polars-lazy/json" "polars-plan/extract_jsonpath") ("ipc" "polars-lazy/ipc") ("dtype-decimal" "polars-lazy/dtype-decimal") ("diagonal_concat" "polars-lazy/diagonal_concat") ("default") ("csv" "polars-lazy/csv") ("binary_encoding" "polars-lazy/binary_encoding"))))))

