(define-module (crates-io po la polars-arrow) #:use-module (crates-io))

(define-public crate-polars-arrow-0.12.0 (c (n "polars-arrow") (v "0.12.0") (d (list (d (n "arrow") (r "^3.0.0") (d #t) (k 0)) (d (n "num") (r "^0.3.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.16") (d #t) (k 0)))) (h "0i6299agkk6b1zh2r1sclbzz4i2y2n2fmxh88zg82mar2jrrgy33")))

(define-public crate-polars-arrow-0.12.1 (c (n "polars-arrow") (v "0.12.1") (d (list (d (n "arrow") (r "^3.0.0") (d #t) (k 0)) (d (n "num") (r "^0.3.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.16") (d #t) (k 0)))) (h "0dsa2ag4z247x4gvq1hvrxzwmxs040yn7gib9fksfs2pchi5j5m9")))

(define-public crate-polars-arrow-0.13.0 (c (n "polars-arrow") (v "0.13.0") (d (list (d (n "arrow") (r "^4.0.0") (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.16") (d #t) (k 0)))) (h "0nqywsl5wvj9xmnx3a1zxfsc4mcvv2pnas9q9wx92in4dwza428x")))

(define-public crate-polars-arrow-0.13.3 (c (n "polars-arrow") (v "0.13.3") (d (list (d (n "arrow") (r "^4.0.0") (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.16") (d #t) (k 0)))) (h "09lkx7csvzq2gi0b52l0schncx5d67rs21img2fcmymslxv4qly3")))

(define-public crate-polars-arrow-0.13.4 (c (n "polars-arrow") (v "0.13.4") (d (list (d (n "arrow") (r "^4.1") (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0r6k2zm9f3nngjszdjnjz7r7c91qpq88lwjfgsbwfi8383xxbcjk")))

(define-public crate-polars-arrow-0.14.0 (c (n "polars-arrow") (v "0.14.0") (d (list (d (n "arrow") (r "^4.2") (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "01l0p5accs5as441n8887rvf0ahqizyyxxfpclsxmc2nqwzsbwwc")))

(define-public crate-polars-arrow-0.14.1 (c (n "polars-arrow") (v "0.14.1") (d (list (d (n "arrow") (r "^4.2") (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0bfcz3g4qa41c4y6bdrbd6h4fqzvysk5rv522za4dz88ny1k277k")))

(define-public crate-polars-arrow-0.14.2 (c (n "polars-arrow") (v "0.14.2") (d (list (d (n "arrow") (r "^4.2") (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1f7ng5rmzfk0fwskl8b5bphzdsw7vbkm4ga0ay08v9vnhnmdpgli")))

(define-public crate-polars-arrow-0.14.3 (c (n "polars-arrow") (v "0.14.3") (d (list (d (n "arrow") (r "^4.3") (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0haaw3j4j3qzgzxg9v0y2pzgxf0cpq6q3mcgw97v2jxw9sy8yp0y")))

(define-public crate-polars-arrow-0.14.4 (c (n "polars-arrow") (v "0.14.4") (d (list (d (n "arrow") (r "^4.3") (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1v3bx1a1m7s0lcl7p6cyrar3dygk1b1g2b7v1wifjp6y9jgqy1bw")))

(define-public crate-polars-arrow-0.14.5 (c (n "polars-arrow") (v "0.14.5") (d (list (d (n "arrow") (r "^4.4") (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1gypjmriiwd0j3v7xdl9yfaqv50r0mbric558hbcaq5nc27gh7pc")))

(define-public crate-polars-arrow-0.14.6 (c (n "polars-arrow") (v "0.14.6") (d (list (d (n "arrow") (r "^4.4") (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0nys7paxb4ljpyg72c2apb5hrydnh7rn2gmyhxgzwdc87wzw44xi")))

(define-public crate-polars-arrow-0.14.7 (c (n "polars-arrow") (v "0.14.7") (d (list (d (n "arrow") (r "^4.4") (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0y6ih6117klixvnii4jpnzl807mjqk92g0bvkgq7db56ans3dm6i")))

(define-public crate-polars-arrow-0.14.8 (c (n "polars-arrow") (v "0.14.8") (d (list (d (n "arrow") (r "^4.4") (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1wk6qfj821w6qqs35n9f0zhp9n7mffxzah12nqk1xlpv2ci2ahsr")))

(define-public crate-polars-arrow-0.15.0 (c (n "polars-arrow") (v "0.15.0") (d (list (d (n "arrow") (r "^5.0") (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0jpdsadcipix6475v9yla2daya45ra42n6p0j333nqqb462iq2sv")))

(define-public crate-polars-arrow-0.15.1 (c (n "polars-arrow") (v "0.15.1") (d (list (d (n "arrow") (r "^5.0") (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0d8ir9dajywfqg6ck557vbvzsdmndc1ipn9mgrqi15yini1qmw2z")))

(define-public crate-polars-arrow-0.16.0 (c (n "polars-arrow") (v "0.16.0") (d (list (d (n "arrow") (r "^0.5.3") (k 0) (p "arrow2")) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0pwx7nsayn526r9gw16yzqq3r6mn6ivcdxzsj8737whk04qy3ssb")))

(define-public crate-polars-arrow-0.17.0 (c (n "polars-arrow") (v "0.17.0") (d (list (d (n "arrow") (r "^0.7") (k 0) (p "arrow2")) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "16aakfkiaqk71c3n3274r9ra44v0jrc8wwp5nqdr0srd5y6lii0w") (f (quote (("strings"))))))

(define-public crate-polars-arrow-0.18.0 (c (n "polars-arrow") (v "0.18.0") (d (list (d (n "arrow") (r "^0.8") (k 0) (p "arrow2")) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1kxhy093x8f08dw2r5k51ysnjwd0yl7sivwq7y4l6rmzhp1yjpps") (f (quote (("strings") ("compute" "arrow/compute_cast"))))))

(define-public crate-polars-arrow-0.19.0 (c (n "polars-arrow") (v "0.19.0") (d (list (d (n "arrow") (r "^0.9") (f (quote ("compute_concatenate"))) (k 0) (p "arrow2")) (d (n "hashbrown") (r "^0.11") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0569bvcck9xwh2xg6plyf5h28hgbgsr85j0g53svpalz0y468ylc") (f (quote (("strings") ("compute" "arrow/compute_cast"))))))

(define-public crate-polars-arrow-0.19.1 (c (n "polars-arrow") (v "0.19.1") (d (list (d (n "arrow") (r "^0.9") (f (quote ("compute_concatenate"))) (k 0) (p "arrow2")) (d (n "hashbrown") (r "^0.12") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1xi5z6sxw1bfyvxrciwffzijxraq9jknrq7y72pp0x13b4wp4gc6") (f (quote (("strings") ("compute" "arrow/compute_cast"))))))

(define-public crate-polars-arrow-0.20.0 (c (n "polars-arrow") (v "0.20.0") (d (list (d (n "arrow") (r "^0.10") (f (quote ("compute_concatenate"))) (k 0) (p "arrow2")) (d (n "hashbrown") (r "^0.12") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "01yszahnh6zd0bq3chfwc7lqi5s5mi1x7j8ix1lhrdhmgd5g9vgw") (f (quote (("strings") ("compute" "arrow/compute_cast") ("bigidx"))))))

(define-public crate-polars-arrow-0.21.0 (c (n "polars-arrow") (v "0.21.0") (d (list (d (n "arrow") (r "^0.11") (f (quote ("compute_concatenate"))) (k 0) (p "arrow2")) (d (n "hashbrown") (r "^0.12") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1vlfzra2s4d72x6pps4ymxd4ghim9b89nnp5n77q45vq7mmi576d") (f (quote (("strings") ("compute" "arrow/compute_cast") ("bigidx"))))))

(define-public crate-polars-arrow-0.21.1 (c (n "polars-arrow") (v "0.21.1") (d (list (d (n "arrow") (r "^0.11") (f (quote ("compute_concatenate"))) (k 0) (p "arrow2")) (d (n "hashbrown") (r "^0.12") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0xwhr1z64d0ia3df358rhy3bi1yf0mz4xmdfypb6p598xq8xy9vd") (f (quote (("strings") ("compute" "arrow/compute_cast") ("bigidx"))))))

(define-public crate-polars-arrow-0.22.0 (c (n "polars-arrow") (v "0.22.0") (d (list (d (n "arrow") (r "^0.12") (f (quote ("compute_concatenate"))) (k 0) (p "arrow2")) (d (n "hashbrown") (r "^0.12") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0i62sc49vk2dnwh0l06r27l4jm975cmv9841i7a54jickyahf27b") (f (quote (("temporal" "arrow/compute_temporal") ("strings") ("compute" "arrow/compute_cast") ("bigidx"))))))

(define-public crate-polars-arrow-0.22.2 (c (n "polars-arrow") (v "0.22.2") (d (list (d (n "arrow") (r "^0.12") (f (quote ("compute_concatenate"))) (k 0) (p "arrow2")) (d (n "hashbrown") (r "^0.12") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1zhmkznqn4x4gr31gr3shd1qqmz4b01d67qbbk714ryzg2m1ahyb") (f (quote (("temporal" "arrow/compute_temporal") ("strings") ("compute" "arrow/compute_cast") ("bigidx"))))))

(define-public crate-polars-arrow-0.22.4 (c (n "polars-arrow") (v "0.22.4") (d (list (d (n "arrow") (r "^0.12") (f (quote ("compute_concatenate"))) (k 0) (p "arrow2")) (d (n "hashbrown") (r "^0.12") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1rf9pz9qg8g0m3yd299w195dy4n4jc704cc49yq4gvzw21rvr8ir") (f (quote (("temporal" "arrow/compute_temporal") ("strings") ("compute" "arrow/compute_cast") ("bigidx"))))))

(define-public crate-polars-arrow-0.22.5 (c (n "polars-arrow") (v "0.22.5") (d (list (d (n "arrow") (r "^0.12") (f (quote ("compute_concatenate"))) (k 0) (p "arrow2")) (d (n "hashbrown") (r "^0.12") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1qd2n66f88748pyfb0c8mh8q6ig5jjhj27cw46p6z79dha8a225z") (f (quote (("temporal" "arrow/compute_temporal") ("strings") ("compute" "arrow/compute_cast") ("bigidx"))))))

(define-public crate-polars-arrow-0.22.6 (c (n "polars-arrow") (v "0.22.6") (d (list (d (n "arrow") (r "^0.12") (f (quote ("compute_concatenate"))) (k 0) (p "arrow2")) (d (n "hashbrown") (r "^0.12") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1w79lnyp096qh0qs29b10hp78nxxxd7vx8p50xm1rj5i6n29lkbf") (f (quote (("temporal" "arrow/compute_temporal") ("strings") ("compute" "arrow/compute_cast") ("bigidx"))))))

(define-public crate-polars-arrow-0.22.7 (c (n "polars-arrow") (v "0.22.7") (d (list (d (n "arrow") (r "^0.12") (f (quote ("compute_concatenate"))) (k 0) (p "arrow2")) (d (n "hashbrown") (r "^0.12") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "11s22hzgqyr0pxpdqfg61dbjyydc5y0fgnwl289hj2n1l8ypsv7n") (f (quote (("temporal" "arrow/compute_temporal") ("strings") ("compute" "arrow/compute_cast") ("bigidx"))))))

(define-public crate-polars-arrow-0.23.0 (c (n "polars-arrow") (v "0.23.0") (d (list (d (n "arrow") (r "^0.13") (f (quote ("compute_concatenate"))) (k 0) (p "arrow2")) (d (n "hashbrown") (r "^0.12") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0mqqv0dalwdhs8ypm97n5aw8h81x1y7rx3hq1izx4kw6yj4jwdkh") (f (quote (("temporal" "arrow/compute_temporal") ("strings") ("compute" "arrow/compute_cast") ("bigidx"))))))

(define-public crate-polars-arrow-0.23.1 (c (n "polars-arrow") (v "0.23.1") (d (list (d (n "arrow") (r "^0.13") (f (quote ("compute_concatenate"))) (k 0) (p "arrow2")) (d (n "hashbrown") (r "^0.12") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0x2vnz61i7yr1w8nrgvq4r3f2wvca4ki8liqqqab8441bmjsxcgd") (f (quote (("temporal" "arrow/compute_temporal") ("strings") ("compute" "arrow/compute_cast") ("bigidx"))))))

(define-public crate-polars-arrow-0.23.2 (c (n "polars-arrow") (v "0.23.2") (d (list (d (n "arrow") (r "^0.13") (f (quote ("compute_concatenate"))) (k 0) (p "arrow2")) (d (n "hashbrown") (r "^0.12") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "12ybifsmx11g2xzqi0zpz82jgmilpqirlq3r0rakc915if2qzcpp") (f (quote (("temporal" "arrow/compute_temporal") ("strings") ("performant") ("compute" "arrow/compute_cast") ("bigidx"))))))

(define-public crate-polars-arrow-0.24.0 (c (n "polars-arrow") (v "0.24.0") (d (list (d (n "arrow") (r "^0.14") (f (quote ("compute_concatenate"))) (k 0) (p "arrow2")) (d (n "hashbrown") (r "^0.12") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0md736cc0msyxl11a4fgp0knsp04l8pklsw49gbkgk6fik3jjvfc") (f (quote (("temporal" "arrow/compute_temporal") ("strings") ("performant") ("compute" "arrow/compute_cast") ("bigidx"))))))

(define-public crate-polars-arrow-0.24.1 (c (n "polars-arrow") (v "0.24.1") (d (list (d (n "arrow") (r "^0.14") (f (quote ("compute_concatenate"))) (k 0) (p "arrow2")) (d (n "hashbrown") (r "^0.12") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0fd82yx43xxh5igm1b449702hv80j27j4h58cz953pwn3x9917xs") (f (quote (("temporal" "arrow/compute_temporal") ("strings") ("performant") ("compute" "arrow/compute_cast") ("bigidx"))))))

(define-public crate-polars-arrow-0.24.2 (c (n "polars-arrow") (v "0.24.2") (d (list (d (n "arrow") (r "^0.14") (f (quote ("compute_concatenate"))) (k 0) (p "arrow2")) (d (n "hashbrown") (r "^0.12") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0zn8wgrnp884rzmc47vlysw12xpkplcf6fsw2h65c4vcxysar4j7") (f (quote (("temporal" "arrow/compute_temporal") ("strings") ("performant") ("like" "arrow/compute_like") ("compute" "arrow/compute_cast") ("bigidx"))))))

(define-public crate-polars-arrow-0.24.3 (c (n "polars-arrow") (v "0.24.3") (d (list (d (n "arrow") (r "^0.14.1") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "hashbrown") (r "^0.12") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1gwbrb4d3vh68g9yjb2i4srls648vsxbpnc38fvj0ja2spk1af7d") (f (quote (("temporal" "arrow/compute_temporal") ("strings") ("performant") ("like" "arrow/compute_like") ("compute" "arrow/compute_cast") ("bigidx"))))))

(define-public crate-polars-arrow-0.24.4 (c (n "polars-arrow") (v "0.24.4") (d (list (d (n "arrow") (r "^0.14.1") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "hashbrown") (r "^0.12") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1ccf2akd7fb6cg9wjc2n9xd1d4jzx8q6gn4hjydlaa0f0is28blk") (f (quote (("temporal" "arrow/compute_temporal") ("strings") ("performant") ("nightly" "hashbrown/nightly") ("like" "arrow/compute_like") ("compute" "arrow/compute_cast") ("bigidx"))))))

(define-public crate-polars-arrow-0.25.0 (c (n "polars-arrow") (v "0.25.0") (d (list (d (n "arrow") (r "^0.14.1") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "hashbrown") (r "^0.12") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0b4qxhwyqnjbrfjg7djhb5i6anw3gy7kdv25784ca40xzinr95i4") (f (quote (("temporal" "arrow/compute_temporal") ("strings") ("performant") ("nightly" "hashbrown/nightly") ("like" "arrow/compute_like") ("compute" "arrow/compute_cast") ("bigidx"))))))

(define-public crate-polars-arrow-0.25.1 (c (n "polars-arrow") (v "0.25.1") (d (list (d (n "arrow") (r "^0.14.1") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "hashbrown") (r "^0.12") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0r2sbx0wcqs5l5bacd8lmg2hc0lckm4bsn29vnlcv0y6f0frmb3s") (f (quote (("temporal" "arrow/compute_temporal") ("strings") ("performant") ("nightly" "hashbrown/nightly") ("like" "arrow/compute_like") ("compute" "arrow/compute_cast") ("bigidx"))))))

(define-public crate-polars-arrow-0.26.0 (c (n "polars-arrow") (v "0.26.0") (d (list (d (n "arrow") (r "^0.15") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.1") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1xz5bavmg2j10ag7zm1qg9vwa29hpmw7z6wbs3ah1zykc3m0mzwa") (f (quote (("timezones" "chrono-tz" "chrono") ("temporal" "arrow/compute_temporal") ("strings") ("performant") ("nightly" "hashbrown/nightly") ("like" "arrow/compute_like") ("compute" "arrow/compute_cast") ("bigidx"))))))

(define-public crate-polars-arrow-0.26.1 (c (n "polars-arrow") (v "0.26.1") (d (list (d (n "arrow") (r "^0.15") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.1") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1dqicn008733b0nndfjimya4nkwlqacqsv5m4km8ilh8d55qjpkd") (f (quote (("timezones" "chrono-tz" "chrono") ("temporal" "arrow/compute_temporal") ("strings") ("performant") ("nightly" "hashbrown/nightly") ("like" "arrow/compute_like") ("compute" "arrow/compute_cast") ("bigidx"))))))

(define-public crate-polars-arrow-0.27.0 (c (n "polars-arrow") (v "0.27.0") (d (list (d (n "arrow") (r "^0.16") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.1") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "10skh4yrfnjk56anb99jfkjjx1f6f3zkg77mhj3cs97y0y1ij1dv") (f (quote (("timezones" "chrono-tz" "chrono") ("temporal" "arrow/compute_temporal") ("strings") ("performant") ("nightly" "hashbrown/nightly") ("like" "arrow/compute_like") ("compute" "arrow/compute_cast") ("bigidx"))))))

(define-public crate-polars-arrow-0.27.1 (c (n "polars-arrow") (v "0.27.1") (d (list (d (n "arrow") (r "^0.16") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.1") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "14rgsv0inxalq9j978azzigscp5vzi6kspaxjgl22gjd9n5x1yiq") (f (quote (("timezones" "chrono-tz" "chrono") ("temporal" "arrow/compute_temporal") ("strings") ("performant") ("nightly" "hashbrown/nightly") ("like" "arrow/compute_like") ("compute" "arrow/compute_cast") ("bigidx"))))))

(define-public crate-polars-arrow-0.27.2 (c (n "polars-arrow") (v "0.27.2") (d (list (d (n "arrow") (r "^0.16") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.1") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1xm0v9qdf9v1rim4fmcl997z2ljisdikzg2x8xrnrpwyj9xpmr86") (f (quote (("timezones" "chrono-tz" "chrono") ("temporal" "arrow/compute_temporal") ("strings") ("performant") ("nightly" "hashbrown/nightly") ("like" "arrow/compute_like") ("compute" "arrow/compute_cast") ("bigidx"))))))

(define-public crate-polars-arrow-0.28.0 (c (n "polars-arrow") (v "0.28.0") (d (list (d (n "arrow") (r "^0.17") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.1") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "multiversion") (r "^0.7") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-error") (r "^0.28.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1n4vby93m23y4xlwq0sjcl3yjp6iwsizs3582a7g2z6cw2gigkga") (f (quote (("timezones" "chrono-tz" "chrono") ("temporal" "arrow/compute_temporal") ("strings") ("simd") ("performant") ("nightly" "hashbrown/nightly") ("like" "arrow/compute_like") ("compute" "arrow/compute_cast") ("bigidx"))))))

(define-public crate-polars-arrow-0.29.0 (c (n "polars-arrow") (v "0.29.0") (d (list (d (n "arrow") (r "^0.17") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.1") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "multiversion") (r "^0.7") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-error") (r "^0.29.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0nzd85mkjjfj1qzxvja11pbq5aphbx1srg56zi5cwzj4igb0491x") (f (quote (("timezones" "chrono-tz" "chrono") ("temporal" "arrow/compute_temporal") ("strings") ("simd") ("performant") ("nightly" "hashbrown/nightly") ("like" "arrow/compute_like") ("compute" "arrow/compute_cast") ("bigidx"))))))

(define-public crate-polars-arrow-0.30.0 (c (n "polars-arrow") (v "0.30.0") (d (list (d (n "arrow") (r "^0.17") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.1") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "multiversion") (r "^0.7") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-error") (r "^0.30.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "158gy1dk5m5a1i70bv1r8ky89xdsh70x9gqhm3b09vzvv1zpl62g") (f (quote (("timezones" "chrono-tz" "chrono") ("temporal" "arrow/compute_temporal") ("strings") ("simd") ("performant") ("nightly" "hashbrown/nightly") ("like" "arrow/compute_like") ("dtype-array") ("compute" "arrow/compute_cast") ("bigidx"))))))

(define-public crate-polars-arrow-0.31.0 (c (n "polars-arrow") (v "0.31.0") (d (list (d (n "arrow") (r "^0.17") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "atoi") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "ethnum") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.0") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "multiversion") (r "^0.7") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-error") (r "^0.31.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "172l667dhnlwca9mrzhwp5ymgy9bll9qgy7r5l7hx3rlcbskwvf2") (f (quote (("timezones" "chrono-tz" "chrono") ("temporal" "arrow/compute_temporal") ("strings") ("simd") ("performant") ("nightly" "hashbrown/nightly") ("like" "arrow/compute_like") ("dtype-decimal" "atoi" "ethnum") ("dtype-array") ("compute" "arrow/compute_cast") ("bigidx"))))))

(define-public crate-polars-arrow-0.31.1 (c (n "polars-arrow") (v "0.31.1") (d (list (d (n "arrow") (r "^0.17.2") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "atoi") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "ethnum") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.0") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "multiversion") (r "^0.7") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-error") (r "^0.31.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0xjb22b8ykhrv4pxsgq80psb3zj9n7gy66w89hcdg7aqbj47nbym") (f (quote (("timezones" "chrono-tz" "chrono") ("temporal" "arrow/compute_temporal") ("strings") ("simd") ("performant") ("nightly" "hashbrown/nightly") ("like" "arrow/compute_like") ("dtype-decimal" "atoi" "ethnum") ("dtype-array") ("compute" "arrow/compute_cast") ("bigidx"))))))

(define-public crate-polars-arrow-0.32.0 (c (n "polars-arrow") (v "0.32.0") (d (list (d (n "arrow") (r "^0.17.4") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "atoi") (r "^2") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "ethnum") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "multiversion") (r "^0.7") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-error") (r "^0.32.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "1mg7fgpsx9cq55yyxp75ml7gf7xxipjqgv38akyh82cbkp3f25kd") (f (quote (("timezones" "chrono-tz" "chrono") ("temporal" "arrow/compute_temporal") ("strings") ("simd") ("performant") ("nightly" "hashbrown/nightly") ("like" "arrow/compute_like") ("dtype-decimal" "atoi" "ethnum") ("dtype-array") ("compute" "arrow/compute_cast") ("bigidx"))))))

(define-public crate-polars-arrow-0.32.1 (c (n "polars-arrow") (v "0.32.1") (d (list (d (n "arrow") (r "^0.17.4") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "atoi") (r "^2") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "ethnum") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "multiversion") (r "^0.7") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-error") (r "^0.32.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "0f0ig8cir1gzg72yyk00nglrgfl8hhkd24z8cizwm92xz80wjrzr") (f (quote (("timezones" "chrono-tz" "chrono") ("temporal" "arrow/compute_temporal") ("strings") ("simd") ("performant") ("nightly" "hashbrown/nightly") ("like" "arrow/compute_like") ("dtype-decimal" "atoi" "ethnum") ("dtype-array") ("compute" "arrow/compute_cast") ("bigidx"))))))

(define-public crate-polars-arrow-0.33.0 (c (n "polars-arrow") (v "0.33.0") (d (list (d (n "arrow") (r "^0.18.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "atoi") (r "^2") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "ethnum") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "multiversion") (r "^0.7") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-error") (r "^0.33.0") (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "1c04dg259s4ljf986dxq50mj0mv4y4mfq0hsmc1jk5saqqnp0ldd") (f (quote (("timezones" "chrono-tz" "chrono") ("temporal" "arrow/compute_temporal") ("strings") ("simd") ("performant") ("nightly" "hashbrown/nightly") ("like" "arrow/compute_like") ("dtype-decimal" "atoi" "ethnum") ("dtype-array") ("compute" "arrow/compute_cast") ("bigidx"))))))

(define-public crate-polars-arrow-0.33.1 (c (n "polars-arrow") (v "0.33.1") (d (list (d (n "arrow") (r "^0.18.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "atoi") (r "^2") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "ethnum") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "multiversion") (r "^0.7") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-error") (r "^0.33.1") (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "1wm0q50631264a5zm20lhdxkhhavm5xjsvdcp5y719lxcz0j4gk3") (f (quote (("timezones" "chrono-tz" "chrono") ("temporal" "arrow/compute_temporal") ("strings") ("simd") ("performant") ("nightly" "hashbrown/nightly") ("like" "arrow/compute_like") ("dtype-decimal" "atoi" "ethnum") ("dtype-array") ("compute" "arrow/compute_cast") ("bigidx"))))))

(define-public crate-polars-arrow-0.33.2 (c (n "polars-arrow") (v "0.33.2") (d (list (d (n "arrow") (r "^0.18.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "atoi") (r "^2") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "ethnum") (r "^1.3.2") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "multiversion") (r "^0.7") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-error") (r "^0.33.2") (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "0a0qgzcf8p9vz3z3nd8xk1f9j71k6qx47zaf1sczv2dk9yk3ik9m") (f (quote (("timezones" "chrono-tz" "chrono") ("temporal" "arrow/compute_temporal") ("strings") ("simd") ("performant") ("nightly" "hashbrown/nightly") ("like" "arrow/compute_like") ("dtype-decimal" "atoi" "ethnum") ("dtype-array") ("compute" "arrow/compute_cast") ("bigidx"))))))

(define-public crate-polars-arrow-0.34.0 (c (n "polars-arrow") (v "0.34.0") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow-array") (r ">=41") (o #t) (k 0)) (d (n "arrow-buffer") (r ">=41") (o #t) (k 0)) (d (n "arrow-data") (r ">=41") (o #t) (k 0)) (d (n "arrow-format") (r "^0.8") (f (quote ("ipc"))) (o #t) (d #t) (k 0)) (d (n "arrow-schema") (r ">=41") (o #t) (k 0)) (d (n "async-stream") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "atoi") (r "^2") (o #t) (d #t) (k 0)) (d (n "avro-rs") (r "^0.13") (f (quote ("snappy"))) (d #t) (k 2)) (d (n "avro-schema") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.2") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "ethnum") (r "^1.3.2") (d #t) (k 0)) (d (n "fallible-streaming-iterator") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "foreign_vec") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "lexical-core") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.24") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parquet2") (r "^0.17.2") (f (quote ("async" "async"))) (o #t) (d #t) (k 0)) (d (n "polars-error") (r "^0.34.0") (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "sample-arrow2") (r "^0.17") (d #t) (k 2)) (d (n "sample-std") (r "^0.1") (d #t) (k 2)) (d (n "sample-test") (r "^0.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.4") (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1.9") (d #t) (k 0)) (d (n "strength_reduce") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.26") (f (quote ("macros" "rt" "fs" "io-util"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("compat"))) (d #t) (k 2)) (d (n "zstd") (r "^0.13") (o #t) (d #t) (k 0)))) (h "1im49yqhxbrn6gv250ksdcjbzw5bhpi7bsq6wyaxip3f25jpa3w0") (f (quote (("timezones") ("temporal") ("strings") ("simd") ("performant") ("nightly") ("io_parquet_zstd" "parquet2/zstd") ("io_parquet_snappy" "parquet2/snappy") ("io_parquet_sample_test" "io_parquet") ("io_parquet_lz4" "parquet2/lz4") ("io_parquet_gzip" "parquet2/gzip") ("io_parquet_compression" "io_parquet_zstd" "io_parquet_gzip" "io_parquet_snappy" "io_parquet_lz4" "io_parquet_brotli") ("io_parquet_brotli" "parquet2/brotli") ("io_parquet_bloom_filter" "parquet2/bloom_filter") ("io_parquet" "parquet2" "parquet2/async" "polars-error/parquet2" "io_ipc" "base64" "futures" "fallible-streaming-iterator") ("io_ipc_write_async" "io_ipc" "futures") ("io_ipc_read_async" "io_ipc" "futures" "async-stream") ("io_ipc_compression" "lz4" "zstd") ("io_ipc" "arrow-format" "polars-error/arrow-format") ("io_flight" "io_ipc" "arrow-format/flight-data") ("io_avro_compression" "avro-schema/compression") ("io_avro_async" "avro-schema/async") ("io_avro" "avro-schema" "polars-error/avro-schema") ("full" "arrow_rs" "io_ipc" "io_flight" "io_ipc_write_async" "io_ipc_read_async" "io_ipc_compression" "io_parquet" "io_parquet_compression" "io_avro" "io_avro_compression" "io_avro_async" "regex-syntax" "compute" "chrono-tz") ("dtype-decimal" "atoi") ("dtype-array") ("default") ("compute_temporal") ("compute_take") ("compute_if_then_else") ("compute_hash" "multiversion") ("compute_filter") ("compute_concatenate") ("compute_comparison" "compute_take" "compute_boolean") ("compute_cast" "lexical-core" "compute_take") ("compute_boolean_kleene") ("compute_boolean") ("compute_bitwise") ("compute_arithmetics_decimal" "strength_reduce") ("compute_arithmetics" "strength_reduce" "compute_arithmetics_decimal") ("compute_aggregate" "multiversion") ("compute" "compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_hash" "compute_if_then_else" "compute_take" "compute_temporal") ("bigidx") ("arrow_rs" "arrow-buffer" "arrow-schema" "arrow-data" "arrow-array"))))))

(define-public crate-polars-arrow-0.34.1 (c (n "polars-arrow") (v "0.34.1") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow-array") (r ">=41") (o #t) (k 0)) (d (n "arrow-buffer") (r ">=41") (o #t) (k 0)) (d (n "arrow-data") (r ">=41") (o #t) (k 0)) (d (n "arrow-format") (r "^0.8") (f (quote ("ipc"))) (o #t) (d #t) (k 0)) (d (n "arrow-schema") (r ">=41") (o #t) (k 0)) (d (n "async-stream") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "atoi") (r "^2") (o #t) (d #t) (k 0)) (d (n "avro-rs") (r "^0.13") (f (quote ("snappy"))) (d #t) (k 2)) (d (n "avro-schema") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.2") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "ethnum") (r "^1.3.2") (d #t) (k 0)) (d (n "fallible-streaming-iterator") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "foreign_vec") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "lexical-core") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.24") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parquet2") (r "^0.17.2") (f (quote ("async" "async"))) (o #t) (d #t) (k 0)) (d (n "polars-error") (r "^0.34.1") (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "sample-arrow2") (r "^0.17") (d #t) (k 2)) (d (n "sample-std") (r "^0.1") (d #t) (k 2)) (d (n "sample-test") (r "^0.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.4") (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1.9") (d #t) (k 0)) (d (n "strength_reduce") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.26") (f (quote ("macros" "rt" "fs" "io-util"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("compat"))) (d #t) (k 2)) (d (n "zstd") (r "^0.13") (o #t) (d #t) (k 0)))) (h "1dhm35lxb7k8dw725gavf47nd8jp7z3bdv0vnq7wrp63pl7yj0pw") (f (quote (("timezones") ("temporal") ("strings") ("simd") ("performant") ("nightly") ("io_parquet_zstd" "parquet2/zstd") ("io_parquet_snappy" "parquet2/snappy") ("io_parquet_sample_test" "io_parquet") ("io_parquet_lz4" "parquet2/lz4") ("io_parquet_gzip" "parquet2/gzip") ("io_parquet_compression" "io_parquet_zstd" "io_parquet_gzip" "io_parquet_snappy" "io_parquet_lz4" "io_parquet_brotli") ("io_parquet_brotli" "parquet2/brotli") ("io_parquet_bloom_filter" "parquet2/bloom_filter") ("io_parquet" "parquet2" "parquet2/async" "polars-error/parquet2" "io_ipc" "base64" "futures" "fallible-streaming-iterator") ("io_ipc_write_async" "io_ipc" "futures") ("io_ipc_read_async" "io_ipc" "futures" "async-stream") ("io_ipc_compression" "lz4" "zstd") ("io_ipc" "arrow-format" "polars-error/arrow-format") ("io_flight" "io_ipc" "arrow-format/flight-data") ("io_avro_compression" "avro-schema/compression") ("io_avro_async" "avro-schema/async") ("io_avro" "avro-schema" "polars-error/avro-schema") ("full" "arrow_rs" "io_ipc" "io_flight" "io_ipc_write_async" "io_ipc_read_async" "io_ipc_compression" "io_parquet" "io_parquet_compression" "io_avro" "io_avro_compression" "io_avro_async" "regex-syntax" "compute" "chrono-tz") ("dtype-decimal" "atoi") ("dtype-array") ("default") ("compute_temporal") ("compute_take") ("compute_if_then_else") ("compute_hash" "multiversion") ("compute_filter") ("compute_concatenate") ("compute_comparison" "compute_take" "compute_boolean") ("compute_cast" "lexical-core" "compute_take") ("compute_boolean_kleene") ("compute_boolean") ("compute_bitwise") ("compute_arithmetics_decimal" "strength_reduce") ("compute_arithmetics" "strength_reduce" "compute_arithmetics_decimal") ("compute_aggregate" "multiversion") ("compute" "compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_hash" "compute_if_then_else" "compute_take" "compute_temporal") ("bigidx") ("arrow_rs" "arrow-buffer" "arrow-schema" "arrow-data" "arrow-array"))))))

(define-public crate-polars-arrow-0.34.2 (c (n "polars-arrow") (v "0.34.2") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow-array") (r ">=41") (o #t) (k 0)) (d (n "arrow-buffer") (r ">=41") (o #t) (k 0)) (d (n "arrow-data") (r ">=41") (o #t) (k 0)) (d (n "arrow-format") (r "^0.8") (f (quote ("ipc"))) (o #t) (d #t) (k 0)) (d (n "arrow-schema") (r ">=41") (o #t) (k 0)) (d (n "async-stream") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "atoi") (r "^2") (o #t) (d #t) (k 0)) (d (n "avro-rs") (r "^0.13") (f (quote ("snappy"))) (d #t) (k 2)) (d (n "avro-schema") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.2") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "ethnum") (r "^1.3.2") (d #t) (k 0)) (d (n "fallible-streaming-iterator") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "foreign_vec") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "lexical-core") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.24") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parquet2") (r "^0.17.2") (f (quote ("async" "async"))) (o #t) (d #t) (k 0)) (d (n "polars-error") (r "^0.34.2") (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "sample-arrow2") (r "^0.17") (d #t) (k 2)) (d (n "sample-std") (r "^0.1") (d #t) (k 2)) (d (n "sample-test") (r "^0.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.4") (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1.9") (d #t) (k 0)) (d (n "strength_reduce") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.26") (f (quote ("macros" "rt" "fs" "io-util"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("compat"))) (d #t) (k 2)) (d (n "zstd") (r "^0.13") (o #t) (d #t) (k 0)))) (h "18vwbzmdb9pr47cyganf4qc0lvqmy0i78iqra6n4dy3pvdihrrfi") (f (quote (("timezones") ("temporal") ("strings") ("simd") ("performant") ("nightly") ("io_parquet_zstd" "parquet2/zstd") ("io_parquet_snappy" "parquet2/snappy") ("io_parquet_sample_test" "io_parquet") ("io_parquet_lz4" "parquet2/lz4") ("io_parquet_gzip" "parquet2/gzip") ("io_parquet_compression" "io_parquet_zstd" "io_parquet_gzip" "io_parquet_snappy" "io_parquet_lz4" "io_parquet_brotli") ("io_parquet_brotli" "parquet2/brotli") ("io_parquet_bloom_filter" "parquet2/bloom_filter") ("io_parquet" "parquet2" "parquet2/async" "polars-error/parquet2" "io_ipc" "base64" "futures" "fallible-streaming-iterator") ("io_ipc_write_async" "io_ipc" "futures") ("io_ipc_read_async" "io_ipc" "futures" "async-stream") ("io_ipc_compression" "lz4" "zstd") ("io_ipc" "arrow-format" "polars-error/arrow-format") ("io_flight" "io_ipc" "arrow-format/flight-data") ("io_avro_compression" "avro-schema/compression") ("io_avro_async" "avro-schema/async") ("io_avro" "avro-schema" "polars-error/avro-schema") ("full" "arrow_rs" "io_ipc" "io_flight" "io_ipc_write_async" "io_ipc_read_async" "io_ipc_compression" "io_parquet" "io_parquet_compression" "io_avro" "io_avro_compression" "io_avro_async" "regex-syntax" "compute" "chrono-tz") ("dtype-decimal" "atoi") ("dtype-array") ("default") ("compute_temporal") ("compute_take") ("compute_if_then_else") ("compute_hash" "multiversion") ("compute_filter") ("compute_concatenate") ("compute_comparison" "compute_take" "compute_boolean") ("compute_cast" "lexical-core" "compute_take") ("compute_boolean_kleene") ("compute_boolean") ("compute_bitwise") ("compute_arithmetics_decimal" "strength_reduce") ("compute_arithmetics" "strength_reduce" "compute_arithmetics_decimal") ("compute_aggregate" "multiversion") ("compute" "compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_hash" "compute_if_then_else" "compute_take" "compute_temporal") ("bigidx") ("arrow_rs" "arrow-buffer" "arrow-schema" "arrow-data" "arrow-array"))))))

(define-public crate-polars-arrow-0.35.0 (c (n "polars-arrow") (v "0.35.0") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "apache-avro") (r "^0.16") (f (quote ("snappy"))) (d #t) (k 2)) (d (n "arrow-array") (r ">=41") (o #t) (k 0)) (d (n "arrow-buffer") (r ">=41") (o #t) (k 0)) (d (n "arrow-data") (r ">=41") (o #t) (k 0)) (d (n "arrow-format") (r "^0.8") (f (quote ("ipc"))) (o #t) (d #t) (k 0)) (d (n "arrow-schema") (r ">=41") (o #t) (k 0)) (d (n "async-stream") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "atoi") (r "^2") (o #t) (d #t) (k 0)) (d (n "atoi_simd") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "avro-schema") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "ethnum") (r "^1.3.2") (d #t) (k 0)) (d (n "fast-float") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "foreign_vec") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "itoa") (r "^1.0.6") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.24") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-error") (r "^0.35.0") (k 0)) (d (n "polars-utils") (r "^0.35.0") (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "ryu") (r "^1.0.13") (o #t) (d #t) (k 0)) (d (n "sample-arrow2") (r "^0.17") (d #t) (k 2)) (d (n "sample-std") (r "^0.1") (d #t) (k 2)) (d (n "sample-test") (r "^0.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.4") (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1.9") (d #t) (k 0)) (d (n "strength_reduce") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.26") (f (quote ("macros" "rt" "fs" "io-util"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("compat"))) (d #t) (k 2)) (d (n "zstd") (r "^0.13") (o #t) (d #t) (k 0)))) (h "1x09vvgrmlajg49gzjbf1c4xwmrp9ix5v4k9wzvb4hvqqvb1jxl9") (f (quote (("timezones") ("temporal") ("strings") ("simd") ("performant") ("nightly") ("io_ipc_write_async" "io_ipc" "futures") ("io_ipc_read_async" "io_ipc" "futures" "async-stream") ("io_ipc_compression" "lz4" "zstd") ("io_ipc" "arrow-format" "polars-error/arrow-format") ("io_flight" "io_ipc" "arrow-format/flight-data") ("io_avro_compression" "avro-schema/compression") ("io_avro_async" "avro-schema/async") ("io_avro" "avro-schema" "polars-error/avro-schema") ("full" "arrow_rs" "io_ipc" "io_flight" "io_ipc_write_async" "io_ipc_read_async" "io_ipc_compression" "io_avro" "io_avro_compression" "io_avro_async" "regex-syntax" "compute" "chrono-tz") ("dtype-decimal" "atoi") ("dtype-array") ("default") ("compute_temporal") ("compute_take") ("compute_if_then_else") ("compute_hash" "multiversion") ("compute_filter") ("compute_concatenate") ("compute_comparison" "compute_take" "compute_boolean") ("compute_cast" "compute_take" "ryu" "atoi_simd" "itoa" "fast-float") ("compute_boolean_kleene") ("compute_boolean") ("compute_bitwise") ("compute_arithmetics_decimal" "strength_reduce") ("compute_arithmetics" "strength_reduce" "compute_arithmetics_decimal") ("compute_aggregate" "multiversion") ("compute" "compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_hash" "compute_if_then_else" "compute_take" "compute_temporal") ("bigidx") ("arrow_rs" "arrow-buffer" "arrow-schema" "arrow-data" "arrow-array"))))))

(define-public crate-polars-arrow-0.35.1 (c (n "polars-arrow") (v "0.35.1") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "apache-avro") (r "^0.16") (f (quote ("snappy"))) (d #t) (k 2)) (d (n "arrow-array") (r ">=41") (o #t) (k 0)) (d (n "arrow-buffer") (r ">=41") (o #t) (k 0)) (d (n "arrow-data") (r ">=41") (o #t) (k 0)) (d (n "arrow-format") (r "^0.8") (f (quote ("ipc"))) (o #t) (d #t) (k 0)) (d (n "arrow-schema") (r ">=41") (o #t) (k 0)) (d (n "async-stream") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "atoi") (r "^2") (o #t) (d #t) (k 0)) (d (n "atoi_simd") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "avro-schema") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "ethnum") (r "^1.3.2") (d #t) (k 0)) (d (n "fast-float") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "foreign_vec") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "itoa") (r "^1.0.6") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.24") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-error") (r "^0.35.1") (k 0)) (d (n "polars-utils") (r "^0.35.1") (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "ryu") (r "^1.0.13") (o #t) (d #t) (k 0)) (d (n "sample-arrow2") (r "^0.17") (d #t) (k 2)) (d (n "sample-std") (r "^0.1") (d #t) (k 2)) (d (n "sample-test") (r "^0.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.4") (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1.9") (d #t) (k 0)) (d (n "strength_reduce") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.26") (f (quote ("macros" "rt" "fs" "io-util"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("compat"))) (d #t) (k 2)) (d (n "zstd") (r "^0.13") (o #t) (d #t) (k 0)))) (h "1g4cbjdrwbikv6an86cb4l63m4y9w1zhmhj2m2zya4yr4zmj67wz") (f (quote (("timezones") ("temporal") ("strings") ("simd") ("performant") ("nightly") ("io_ipc_write_async" "io_ipc" "futures") ("io_ipc_read_async" "io_ipc" "futures" "async-stream") ("io_ipc_compression" "lz4" "zstd") ("io_ipc" "arrow-format" "polars-error/arrow-format") ("io_flight" "io_ipc" "arrow-format/flight-data") ("io_avro_compression" "avro-schema/compression") ("io_avro_async" "avro-schema/async") ("io_avro" "avro-schema" "polars-error/avro-schema") ("full" "arrow_rs" "io_ipc" "io_flight" "io_ipc_write_async" "io_ipc_read_async" "io_ipc_compression" "io_avro" "io_avro_compression" "io_avro_async" "regex-syntax" "compute" "chrono-tz") ("dtype-decimal" "atoi") ("dtype-array") ("default") ("compute_temporal") ("compute_take") ("compute_if_then_else") ("compute_hash" "multiversion") ("compute_filter") ("compute_concatenate") ("compute_comparison" "compute_take" "compute_boolean") ("compute_cast" "compute_take" "ryu" "atoi_simd" "itoa" "fast-float") ("compute_boolean_kleene") ("compute_boolean") ("compute_bitwise") ("compute_arithmetics_decimal" "strength_reduce") ("compute_arithmetics" "strength_reduce" "compute_arithmetics_decimal") ("compute_aggregate" "multiversion") ("compute" "compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_hash" "compute_if_then_else" "compute_take" "compute_temporal") ("bigidx") ("arrow_rs" "arrow-buffer" "arrow-schema" "arrow-data" "arrow-array"))))))

(define-public crate-polars-arrow-0.35.2 (c (n "polars-arrow") (v "0.35.2") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "apache-avro") (r "^0.16") (f (quote ("snappy"))) (d #t) (k 2)) (d (n "arrow-array") (r ">=41") (o #t) (k 0)) (d (n "arrow-buffer") (r ">=41") (o #t) (k 0)) (d (n "arrow-data") (r ">=41") (o #t) (k 0)) (d (n "arrow-format") (r "^0.8") (f (quote ("ipc"))) (o #t) (d #t) (k 0)) (d (n "arrow-schema") (r ">=41") (o #t) (k 0)) (d (n "async-stream") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "atoi") (r "^2") (o #t) (d #t) (k 0)) (d (n "atoi_simd") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "avro-schema") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "ethnum") (r "^1.3.2") (d #t) (k 0)) (d (n "fast-float") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "foreign_vec") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "itoa") (r "^1.0.6") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.24") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-error") (r "^0.35.2") (k 0)) (d (n "polars-utils") (r "^0.35.2") (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "ryu") (r "^1.0.13") (o #t) (d #t) (k 0)) (d (n "sample-arrow2") (r "^0.17") (d #t) (k 2)) (d (n "sample-std") (r "^0.1") (d #t) (k 2)) (d (n "sample-test") (r "^0.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.4") (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1.9") (d #t) (k 0)) (d (n "strength_reduce") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.26") (f (quote ("macros" "rt" "fs" "io-util"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("compat"))) (d #t) (k 2)) (d (n "zstd") (r "^0.13") (o #t) (d #t) (k 0)))) (h "1gv3y2xi24nnfk07hdqw4j4gw2kx0gn7bnhj04n8h1gwnv5j8b38") (f (quote (("timezones") ("temporal") ("strings") ("simd") ("performant") ("nightly") ("io_ipc_write_async" "io_ipc" "futures") ("io_ipc_read_async" "io_ipc" "futures" "async-stream") ("io_ipc_compression" "lz4" "zstd") ("io_ipc" "arrow-format" "polars-error/arrow-format") ("io_flight" "io_ipc" "arrow-format/flight-data") ("io_avro_compression" "avro-schema/compression") ("io_avro_async" "avro-schema/async") ("io_avro" "avro-schema" "polars-error/avro-schema") ("full" "arrow_rs" "io_ipc" "io_flight" "io_ipc_write_async" "io_ipc_read_async" "io_ipc_compression" "io_avro" "io_avro_compression" "io_avro_async" "regex-syntax" "compute" "chrono-tz") ("dtype-decimal" "atoi") ("dtype-array") ("default") ("compute_temporal") ("compute_take") ("compute_if_then_else") ("compute_hash" "multiversion") ("compute_filter") ("compute_concatenate") ("compute_comparison" "compute_take" "compute_boolean") ("compute_cast" "compute_take" "ryu" "atoi_simd" "itoa" "fast-float") ("compute_boolean_kleene") ("compute_boolean") ("compute_bitwise") ("compute_arithmetics_decimal" "strength_reduce") ("compute_arithmetics" "strength_reduce" "compute_arithmetics_decimal") ("compute_aggregate" "multiversion") ("compute" "compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_hash" "compute_if_then_else" "compute_take" "compute_temporal") ("bigidx") ("arrow_rs" "arrow-buffer" "arrow-schema" "arrow-data" "arrow-array"))))))

(define-public crate-polars-arrow-0.35.3 (c (n "polars-arrow") (v "0.35.3") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "apache-avro") (r "^0.16") (f (quote ("snappy"))) (d #t) (k 2)) (d (n "arrow-array") (r ">=41") (o #t) (k 0)) (d (n "arrow-buffer") (r ">=41") (o #t) (k 0)) (d (n "arrow-data") (r ">=41") (o #t) (k 0)) (d (n "arrow-format") (r "^0.8") (f (quote ("ipc"))) (o #t) (d #t) (k 0)) (d (n "arrow-schema") (r ">=41") (o #t) (k 0)) (d (n "async-stream") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "atoi") (r "^2") (o #t) (d #t) (k 0)) (d (n "atoi_simd") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "avro-schema") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "ethnum") (r "^1.3.2") (d #t) (k 0)) (d (n "fast-float") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "foreign_vec") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "itoa") (r "^1.0.6") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.24") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-error") (r "^0.35.3") (k 0)) (d (n "polars-utils") (r "^0.35.3") (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "ryu") (r "^1.0.13") (o #t) (d #t) (k 0)) (d (n "sample-arrow2") (r "^0.17") (d #t) (k 2)) (d (n "sample-std") (r "^0.1") (d #t) (k 2)) (d (n "sample-test") (r "^0.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.4") (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1.9") (d #t) (k 0)) (d (n "strength_reduce") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.26") (f (quote ("macros" "rt" "fs" "io-util"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("compat"))) (d #t) (k 2)) (d (n "zstd") (r "^0.13") (o #t) (d #t) (k 0)))) (h "14rbnw3wnpm995q4y2clz4y5fn5bkp0kyznc229cmxgz8nhmwjfj") (f (quote (("timezones") ("temporal") ("strings") ("simd") ("performant") ("nightly") ("io_ipc_write_async" "io_ipc" "futures") ("io_ipc_read_async" "io_ipc" "futures" "async-stream") ("io_ipc_compression" "lz4" "zstd") ("io_ipc" "arrow-format" "polars-error/arrow-format") ("io_flight" "io_ipc" "arrow-format/flight-data") ("io_avro_compression" "avro-schema/compression") ("io_avro_async" "avro-schema/async") ("io_avro" "avro-schema" "polars-error/avro-schema") ("full" "arrow_rs" "io_ipc" "io_flight" "io_ipc_write_async" "io_ipc_read_async" "io_ipc_compression" "io_avro" "io_avro_compression" "io_avro_async" "regex-syntax" "compute" "chrono-tz") ("dtype-decimal" "atoi") ("dtype-array") ("default") ("compute_temporal") ("compute_take") ("compute_if_then_else") ("compute_hash" "multiversion") ("compute_filter") ("compute_concatenate") ("compute_comparison" "compute_take" "compute_boolean") ("compute_cast" "compute_take" "ryu" "atoi_simd" "itoa" "fast-float") ("compute_boolean_kleene") ("compute_boolean") ("compute_bitwise") ("compute_arithmetics_decimal" "strength_reduce") ("compute_arithmetics" "strength_reduce" "compute_arithmetics_decimal") ("compute_aggregate" "multiversion") ("compute" "compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_hash" "compute_if_then_else" "compute_take" "compute_temporal") ("bigidx") ("arrow_rs" "arrow-buffer" "arrow-schema" "arrow-data" "arrow-array")))) (y #t)))

(define-public crate-polars-arrow-0.35.4 (c (n "polars-arrow") (v "0.35.4") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "apache-avro") (r "^0.16") (f (quote ("snappy"))) (d #t) (k 2)) (d (n "arrow-array") (r ">=41") (o #t) (k 0)) (d (n "arrow-buffer") (r ">=41") (o #t) (k 0)) (d (n "arrow-data") (r ">=41") (o #t) (k 0)) (d (n "arrow-format") (r "^0.8") (f (quote ("ipc"))) (o #t) (d #t) (k 0)) (d (n "arrow-schema") (r ">=41") (o #t) (k 0)) (d (n "async-stream") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "atoi") (r "^2") (o #t) (d #t) (k 0)) (d (n "atoi_simd") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "avro-schema") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "ethnum") (r "^1.3.2") (d #t) (k 0)) (d (n "fast-float") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "foreign_vec") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "itoa") (r "^1.0.6") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.24") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-error") (r "^0.35.4") (k 0)) (d (n "polars-utils") (r "^0.35.4") (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "ryu") (r "^1.0.13") (o #t) (d #t) (k 0)) (d (n "sample-arrow2") (r "^0.17") (d #t) (k 2)) (d (n "sample-std") (r "^0.1") (d #t) (k 2)) (d (n "sample-test") (r "^0.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.4") (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1.9") (d #t) (k 0)) (d (n "strength_reduce") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.26") (f (quote ("macros" "rt" "fs" "io-util"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("compat"))) (d #t) (k 2)) (d (n "zstd") (r "^0.13") (o #t) (d #t) (k 0)))) (h "1rxa9dfsqy7mh4w9gy7y7kpig0wrzrjqi1axj43rnxyrlqq38l6x") (f (quote (("timezones") ("temporal") ("strings") ("simd") ("performant") ("nightly") ("io_ipc_write_async" "io_ipc" "futures") ("io_ipc_read_async" "io_ipc" "futures" "async-stream") ("io_ipc_compression" "lz4" "zstd") ("io_ipc" "arrow-format" "polars-error/arrow-format") ("io_flight" "io_ipc" "arrow-format/flight-data") ("io_avro_compression" "avro-schema/compression") ("io_avro_async" "avro-schema/async") ("io_avro" "avro-schema" "polars-error/avro-schema") ("full" "arrow_rs" "io_ipc" "io_flight" "io_ipc_write_async" "io_ipc_read_async" "io_ipc_compression" "io_avro" "io_avro_compression" "io_avro_async" "regex-syntax" "compute" "chrono-tz") ("dtype-decimal" "atoi") ("dtype-array") ("default") ("compute_temporal") ("compute_take") ("compute_if_then_else") ("compute_hash" "multiversion") ("compute_filter") ("compute_concatenate") ("compute_comparison" "compute_take" "compute_boolean") ("compute_cast" "compute_take" "ryu" "atoi_simd" "itoa" "fast-float") ("compute_boolean_kleene") ("compute_boolean") ("compute_bitwise") ("compute_arithmetics_decimal" "strength_reduce") ("compute_arithmetics" "strength_reduce" "compute_arithmetics_decimal") ("compute_aggregate" "multiversion") ("compute" "compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_hash" "compute_if_then_else" "compute_take" "compute_temporal") ("bigidx") ("arrow_rs" "arrow-buffer" "arrow-schema" "arrow-data" "arrow-array"))))))

(define-public crate-polars-arrow-0.36.0 (c (n "polars-arrow") (v "0.36.0") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "apache-avro") (r "^0.16") (f (quote ("snappy"))) (d #t) (k 2)) (d (n "arrow-array") (r ">=41") (o #t) (k 0)) (d (n "arrow-buffer") (r ">=41") (o #t) (k 0)) (d (n "arrow-data") (r ">=41") (o #t) (k 0)) (d (n "arrow-format") (r "^0.8") (f (quote ("ipc"))) (o #t) (d #t) (k 0)) (d (n "arrow-schema") (r ">=41") (o #t) (k 0)) (d (n "async-stream") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "atoi") (r "^2") (o #t) (d #t) (k 0)) (d (n "atoi_simd") (r "^0.15.5") (o #t) (d #t) (k 0)) (d (n "avro-schema") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "ethnum") (r "^1.3.2") (d #t) (k 0)) (d (n "fast-float") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "foreign_vec") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "itoa") (r "^1.0.6") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.24") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-error") (r "^0.36.0") (k 0)) (d (n "polars-utils") (r "^0.36.0") (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "ryu") (r "^1.0.13") (o #t) (d #t) (k 0)) (d (n "sample-arrow2") (r "^0.17") (d #t) (k 2)) (d (n "sample-std") (r "^0.1") (d #t) (k 2)) (d (n "sample-test") (r "^0.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.4") (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1.9") (d #t) (k 0)) (d (n "strength_reduce") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.26") (f (quote ("macros" "rt" "fs" "io-util"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("compat"))) (d #t) (k 2)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)) (d (n "zstd") (r "^0.13") (o #t) (d #t) (k 0)))) (h "0lzk9anvmy4ypkpnzdzmhgn0hyzcvyi7zsmdzbv5jw50s8prx8p7") (f (quote (("timezones") ("temporal") ("strings") ("simd") ("performant") ("nightly") ("io_ipc_write_async" "io_ipc" "futures") ("io_ipc_read_async" "io_ipc" "futures" "async-stream") ("io_ipc_compression" "lz4" "zstd") ("io_ipc" "arrow-format" "polars-error/arrow-format") ("io_flight" "io_ipc" "arrow-format/flight-data") ("io_avro_compression" "avro-schema/compression") ("io_avro_async" "avro-schema/async") ("io_avro" "avro-schema" "polars-error/avro-schema") ("full" "arrow_rs" "io_ipc" "io_flight" "io_ipc_write_async" "io_ipc_read_async" "io_ipc_compression" "io_avro" "io_avro_compression" "io_avro_async" "regex-syntax" "compute" "chrono-tz") ("dtype-decimal" "atoi") ("dtype-array") ("default") ("compute_temporal") ("compute_take") ("compute_if_then_else") ("compute_hash" "multiversion") ("compute_filter") ("compute_concatenate") ("compute_comparison" "compute_take" "compute_boolean") ("compute_cast" "compute_take" "ryu" "atoi_simd" "itoa" "fast-float") ("compute_boolean_kleene") ("compute_boolean") ("compute_bitwise") ("compute_arithmetics_decimal" "strength_reduce") ("compute_arithmetics" "strength_reduce" "compute_arithmetics_decimal") ("compute_aggregate" "multiversion") ("compute" "compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_hash" "compute_if_then_else" "compute_take" "compute_temporal") ("bigidx") ("arrow_rs" "arrow-buffer" "arrow-schema" "arrow-data" "arrow-array"))))))

(define-public crate-polars-arrow-0.36.2 (c (n "polars-arrow") (v "0.36.2") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "apache-avro") (r "^0.16") (f (quote ("snappy"))) (d #t) (k 2)) (d (n "arrow-array") (r ">=41") (o #t) (k 0)) (d (n "arrow-buffer") (r ">=41") (o #t) (k 0)) (d (n "arrow-data") (r ">=41") (o #t) (k 0)) (d (n "arrow-format") (r "^0.8") (f (quote ("ipc"))) (o #t) (d #t) (k 0)) (d (n "arrow-schema") (r ">=41") (o #t) (k 0)) (d (n "async-stream") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "atoi") (r "^2") (o #t) (d #t) (k 0)) (d (n "atoi_simd") (r "^0.15.5") (o #t) (d #t) (k 0)) (d (n "avro-schema") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "ethnum") (r "^1.3.2") (d #t) (k 0)) (d (n "fast-float") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "foreign_vec") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "itoa") (r "^1.0.6") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.24") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-error") (r "^0.36.2") (k 0)) (d (n "polars-utils") (r "^0.36.2") (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "ryu") (r "^1.0.13") (o #t) (d #t) (k 0)) (d (n "sample-arrow2") (r "^0.17") (d #t) (k 2)) (d (n "sample-std") (r "^0.1") (d #t) (k 2)) (d (n "sample-test") (r "^0.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.4") (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1.9") (d #t) (k 0)) (d (n "strength_reduce") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.26") (f (quote ("macros" "rt" "fs" "io-util"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("compat"))) (d #t) (k 2)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)) (d (n "zstd") (r "^0.13") (o #t) (d #t) (k 0)))) (h "0vxql6amvwyp6qj0w87vm21y33qa0i61pshs4ry7ixwgd4ps0s6f") (f (quote (("timezones") ("temporal") ("strings") ("simd") ("performant") ("nightly") ("io_ipc_write_async" "io_ipc" "futures") ("io_ipc_read_async" "io_ipc" "futures" "async-stream") ("io_ipc_compression" "lz4" "zstd") ("io_ipc" "arrow-format" "polars-error/arrow-format") ("io_flight" "io_ipc" "arrow-format/flight-data") ("io_avro_compression" "avro-schema/compression") ("io_avro_async" "avro-schema/async") ("io_avro" "avro-schema" "polars-error/avro-schema") ("full" "arrow_rs" "io_ipc" "io_flight" "io_ipc_write_async" "io_ipc_read_async" "io_ipc_compression" "io_avro" "io_avro_compression" "io_avro_async" "regex-syntax" "compute" "chrono-tz") ("dtype-decimal" "atoi") ("dtype-array") ("default") ("compute_temporal") ("compute_take") ("compute_if_then_else") ("compute_hash" "multiversion") ("compute_filter") ("compute_concatenate") ("compute_comparison" "compute_take" "compute_boolean") ("compute_cast" "compute_take" "ryu" "atoi_simd" "itoa" "fast-float") ("compute_boolean_kleene") ("compute_boolean") ("compute_bitwise") ("compute_arithmetics_decimal" "strength_reduce") ("compute_arithmetics" "strength_reduce" "compute_arithmetics_decimal") ("compute_aggregate" "multiversion") ("compute" "compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_hash" "compute_if_then_else" "compute_take" "compute_temporal") ("bigidx") ("arrow_rs" "arrow-buffer" "arrow-schema" "arrow-data" "arrow-array"))))))

(define-public crate-polars-arrow-0.37.0 (c (n "polars-arrow") (v "0.37.0") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "apache-avro") (r "^0.16") (f (quote ("snappy"))) (d #t) (k 2)) (d (n "arrow-array") (r ">=41") (o #t) (k 0)) (d (n "arrow-buffer") (r ">=41") (o #t) (k 0)) (d (n "arrow-data") (r ">=41") (o #t) (k 0)) (d (n "arrow-format") (r "^0.1.0") (f (quote ("ipc"))) (o #t) (d #t) (k 0) (p "polars-arrow-format")) (d (n "arrow-schema") (r ">=41") (o #t) (k 0)) (d (n "async-stream") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "atoi") (r "^2") (o #t) (d #t) (k 0)) (d (n "atoi_simd") (r "^0.15.5") (o #t) (d #t) (k 0)) (d (n "avro-schema") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "ethnum") (r "^1.3.2") (d #t) (k 0)) (d (n "fast-float") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "foreign_vec") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "itoa") (r "^1.0.6") (o #t) (d #t) (k 0)) (d (n "itoap") (r "^1") (f (quote ("simd"))) (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.24") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-error") (r "^0.37.0") (k 0)) (d (n "polars-utils") (r "^0.37.0") (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "ryu") (r "^1.0.13") (o #t) (d #t) (k 0)) (d (n "sample-arrow2") (r "^0.17") (d #t) (k 2)) (d (n "sample-std") (r "^0.1") (d #t) (k 2)) (d (n "sample-test") (r "^0.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.4") (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1.9") (d #t) (k 0)) (d (n "strength_reduce") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.26") (f (quote ("macros" "rt" "fs" "io-util"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("compat"))) (d #t) (k 2)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)) (d (n "zstd") (r "^0.13") (o #t) (d #t) (k 0)))) (h "03wvwh80cvs3gxdm9if6yfh2kq589538ssrdqx86vyj84ldd5b7s") (f (quote (("timezones") ("temporal") ("strings") ("simd") ("performant") ("nightly") ("io_ipc_write_async" "io_ipc" "futures") ("io_ipc_read_async" "io_ipc" "futures" "async-stream") ("io_ipc_compression" "lz4" "zstd" "io_ipc") ("io_ipc" "arrow-format" "polars-error/arrow-format") ("io_flight" "io_ipc" "arrow-format/flight-data") ("io_avro_compression" "avro-schema/compression") ("io_avro_async" "avro-schema/async") ("io_avro" "avro-schema" "polars-error/avro-schema") ("full" "arrow_rs" "io_ipc" "io_flight" "io_ipc_write_async" "io_ipc_read_async" "io_ipc_compression" "io_avro" "io_avro_compression" "io_avro_async" "regex-syntax" "compute" "chrono-tz") ("dtype-decimal" "atoi" "itoap") ("dtype-array") ("default") ("compute_temporal") ("compute_take") ("compute_if_then_else") ("compute_hash" "multiversion") ("compute_comparison" "compute_take" "compute_boolean") ("compute_cast" "compute_take" "ryu" "atoi_simd" "itoa" "fast-float") ("compute_boolean_kleene") ("compute_boolean") ("compute_bitwise") ("compute_arithmetics_decimal" "strength_reduce") ("compute_arithmetics" "strength_reduce" "compute_arithmetics_decimal") ("compute_aggregate" "multiversion") ("compute" "compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_hash" "compute_if_then_else" "compute_take" "compute_temporal") ("bigidx") ("arrow_rs" "arrow-buffer" "arrow-schema" "arrow-data" "arrow-array"))))))

(define-public crate-polars-arrow-0.38.0 (c (n "polars-arrow") (v "0.38.0") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow-array") (r ">=41") (o #t) (k 0)) (d (n "arrow-buffer") (r ">=41") (o #t) (k 0)) (d (n "arrow-data") (r ">=41") (o #t) (k 0)) (d (n "arrow-format") (r "^0.1.0") (f (quote ("ipc"))) (o #t) (d #t) (k 0) (p "polars-arrow-format")) (d (n "arrow-schema") (r ">=41") (o #t) (k 0)) (d (n "async-stream") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "atoi") (r "^2") (o #t) (d #t) (k 0)) (d (n "atoi_simd") (r "^0.15.5") (o #t) (d #t) (k 0)) (d (n "avro-schema") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "ethnum") (r "^1.3.2") (d #t) (k 0)) (d (n "fast-float") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "foreign_vec") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "itoa") (r "^1.0.6") (o #t) (d #t) (k 0)) (d (n "itoap") (r "^1") (f (quote ("simd"))) (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.24") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-error") (r "^0.38.0") (k 0)) (d (n "polars-utils") (r "^0.38.0") (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "ryu") (r "^1.0.13") (o #t) (d #t) (k 0)) (d (n "sample-arrow2") (r "^0.17") (d #t) (k 2)) (d (n "sample-std") (r "^0.1") (d #t) (k 2)) (d (n "sample-test") (r "^0.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.4") (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1.9") (d #t) (k 0)) (d (n "strength_reduce") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.26") (f (quote ("macros" "rt" "fs" "io-util"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("compat"))) (d #t) (k 2)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)) (d (n "zstd") (r "^0.13") (o #t) (d #t) (k 0)))) (h "17rgpjs90l4mb9fzbpk08fdh4azv591b0hkvf5c2kwmvfqcf44f1") (f (quote (("timezones") ("temporal") ("strings") ("simd") ("performant") ("nightly") ("io_ipc_write_async" "io_ipc" "futures") ("io_ipc_read_async" "io_ipc" "futures" "async-stream") ("io_ipc_compression" "lz4" "zstd" "io_ipc") ("io_ipc" "arrow-format" "polars-error/arrow-format") ("io_flight" "io_ipc" "arrow-format/flight-data") ("io_avro_compression" "avro-schema/compression") ("io_avro_async" "avro-schema/async") ("io_avro" "avro-schema" "polars-error/avro-schema") ("full" "arrow_rs" "io_ipc" "io_flight" "io_ipc_write_async" "io_ipc_read_async" "io_ipc_compression" "io_avro" "io_avro_compression" "io_avro_async" "regex-syntax" "compute" "chrono-tz") ("dtype-decimal" "atoi" "itoap") ("dtype-array") ("default") ("compute_temporal") ("compute_take") ("compute_if_then_else") ("compute_hash" "multiversion") ("compute_comparison" "compute_take" "compute_boolean") ("compute_cast" "compute_take" "ryu" "atoi_simd" "itoa" "fast-float") ("compute_boolean_kleene") ("compute_boolean") ("compute_bitwise") ("compute_arithmetics_decimal" "strength_reduce") ("compute_arithmetics" "strength_reduce" "compute_arithmetics_decimal") ("compute_aggregate" "multiversion") ("compute" "compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_hash" "compute_if_then_else" "compute_take" "compute_temporal") ("bigidx") ("arrow_rs" "arrow-buffer" "arrow-schema" "arrow-data" "arrow-array"))))))

(define-public crate-polars-arrow-0.38.1 (c (n "polars-arrow") (v "0.38.1") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow-array") (r ">=41") (o #t) (k 0)) (d (n "arrow-buffer") (r ">=41") (o #t) (k 0)) (d (n "arrow-data") (r ">=41") (o #t) (k 0)) (d (n "arrow-format") (r "^0.1.0") (f (quote ("ipc"))) (o #t) (d #t) (k 0) (p "polars-arrow-format")) (d (n "arrow-schema") (r ">=41") (o #t) (k 0)) (d (n "async-stream") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "atoi") (r "^2") (o #t) (d #t) (k 0)) (d (n "atoi_simd") (r "^0.15.5") (o #t) (d #t) (k 0)) (d (n "avro-schema") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "ethnum") (r "^1.3.2") (d #t) (k 0)) (d (n "fast-float") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "foreign_vec") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "itoa") (r "^1.0.6") (o #t) (d #t) (k 0)) (d (n "itoap") (r "^1") (f (quote ("simd"))) (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.24") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-error") (r "^0.38.1") (k 0)) (d (n "polars-utils") (r "^0.38.1") (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "ryu") (r "^1.0.13") (o #t) (d #t) (k 0)) (d (n "sample-arrow2") (r "^0.17") (d #t) (k 2)) (d (n "sample-std") (r "^0.1") (d #t) (k 2)) (d (n "sample-test") (r "^0.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.4") (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1.9") (d #t) (k 0)) (d (n "strength_reduce") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.26") (f (quote ("macros" "rt" "fs" "io-util"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("compat"))) (d #t) (k 2)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)) (d (n "zstd") (r "^0.13") (o #t) (d #t) (k 0)))) (h "0nj2fnsyfp27kpxsf3m58b205m08iz2b9wxgpb1knl7sm4q1vrs8") (f (quote (("timezones") ("temporal") ("strings") ("simd") ("performant") ("nightly") ("io_ipc_write_async" "io_ipc" "futures") ("io_ipc_read_async" "io_ipc" "futures" "async-stream") ("io_ipc_compression" "lz4" "zstd" "io_ipc") ("io_ipc" "arrow-format" "polars-error/arrow-format") ("io_flight" "io_ipc" "arrow-format/flight-data") ("io_avro_compression" "avro-schema/compression") ("io_avro_async" "avro-schema/async") ("io_avro" "avro-schema" "polars-error/avro-schema") ("full" "arrow_rs" "io_ipc" "io_flight" "io_ipc_write_async" "io_ipc_read_async" "io_ipc_compression" "io_avro" "io_avro_compression" "io_avro_async" "regex-syntax" "compute" "chrono-tz") ("dtype-decimal" "atoi" "itoap") ("dtype-array") ("default") ("compute_temporal") ("compute_take") ("compute_if_then_else") ("compute_hash" "multiversion") ("compute_comparison" "compute_take" "compute_boolean") ("compute_cast" "compute_take" "ryu" "atoi_simd" "itoa" "fast-float") ("compute_boolean_kleene") ("compute_boolean") ("compute_bitwise") ("compute_arithmetics_decimal" "strength_reduce") ("compute_arithmetics" "strength_reduce" "compute_arithmetics_decimal") ("compute_aggregate" "multiversion") ("compute" "compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_hash" "compute_if_then_else" "compute_take" "compute_temporal") ("bigidx") ("arrow_rs" "arrow-buffer" "arrow-schema" "arrow-data" "arrow-array"))))))

(define-public crate-polars-arrow-0.38.2 (c (n "polars-arrow") (v "0.38.2") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow-array") (r ">=41") (o #t) (k 0)) (d (n "arrow-buffer") (r ">=41") (o #t) (k 0)) (d (n "arrow-data") (r ">=41") (o #t) (k 0)) (d (n "arrow-format") (r "^0.1.0") (f (quote ("ipc"))) (o #t) (d #t) (k 0) (p "polars-arrow-format")) (d (n "arrow-schema") (r ">=41") (o #t) (k 0)) (d (n "async-stream") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "atoi") (r "^2") (o #t) (d #t) (k 0)) (d (n "atoi_simd") (r "^0.15.5") (o #t) (d #t) (k 0)) (d (n "avro-schema") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "ethnum") (r "^1.3.2") (d #t) (k 0)) (d (n "fast-float") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "foreign_vec") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "itoa") (r "^1.0.6") (o #t) (d #t) (k 0)) (d (n "itoap") (r "^1") (f (quote ("simd"))) (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.24") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-error") (r "^0.38.2") (k 0)) (d (n "polars-utils") (r "^0.38.2") (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "ryu") (r "^1.0.13") (o #t) (d #t) (k 0)) (d (n "sample-arrow2") (r "^0.17") (d #t) (k 2)) (d (n "sample-std") (r "^0.1") (d #t) (k 2)) (d (n "sample-test") (r "^0.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.4") (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1.9") (d #t) (k 0)) (d (n "strength_reduce") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.26") (f (quote ("macros" "rt" "fs" "io-util"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("compat"))) (d #t) (k 2)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)) (d (n "zstd") (r "^0.13") (o #t) (d #t) (k 0)))) (h "1rlpihq9nlzaia5r8v599fs4ahav89n28qfap5cc3jbqmbvvhhwx") (f (quote (("timezones" "chrono-tz") ("temporal") ("strings") ("simd") ("performant") ("nightly") ("io_ipc_write_async" "io_ipc" "futures") ("io_ipc_read_async" "io_ipc" "futures" "async-stream") ("io_ipc_compression" "lz4" "zstd" "io_ipc") ("io_ipc" "arrow-format" "polars-error/arrow-format") ("io_flight" "io_ipc" "arrow-format/flight-data") ("io_avro_compression" "avro-schema/compression") ("io_avro_async" "avro-schema/async") ("io_avro" "avro-schema" "polars-error/avro-schema") ("full" "arrow_rs" "io_ipc" "io_flight" "io_ipc_write_async" "io_ipc_read_async" "io_ipc_compression" "io_avro" "io_avro_compression" "io_avro_async" "regex-syntax" "compute" "chrono-tz") ("dtype-decimal" "atoi" "itoap") ("dtype-array") ("default") ("compute_temporal") ("compute_take") ("compute_if_then_else") ("compute_hash" "multiversion") ("compute_comparison" "compute_take" "compute_boolean") ("compute_cast" "compute_take" "ryu" "atoi_simd" "itoa" "fast-float") ("compute_boolean_kleene") ("compute_boolean") ("compute_bitwise") ("compute_arithmetics_decimal" "strength_reduce") ("compute_arithmetics" "strength_reduce" "compute_arithmetics_decimal") ("compute_aggregate" "multiversion") ("compute" "compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_hash" "compute_if_then_else" "compute_take" "compute_temporal") ("bigidx") ("arrow_rs" "arrow-buffer" "arrow-schema" "arrow-data" "arrow-array"))))))

(define-public crate-polars-arrow-0.38.3 (c (n "polars-arrow") (v "0.38.3") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow-array") (r ">=41") (o #t) (k 0)) (d (n "arrow-buffer") (r ">=41") (o #t) (k 0)) (d (n "arrow-data") (r ">=41") (o #t) (k 0)) (d (n "arrow-format") (r "^0.1.0") (f (quote ("ipc"))) (o #t) (d #t) (k 0) (p "polars-arrow-format")) (d (n "arrow-schema") (r ">=41") (o #t) (k 0)) (d (n "async-stream") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "atoi") (r "^2") (o #t) (d #t) (k 0)) (d (n "atoi_simd") (r "^0.15.5") (o #t) (d #t) (k 0)) (d (n "avro-schema") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "ethnum") (r "^1.3.2") (d #t) (k 0)) (d (n "fast-float") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "foreign_vec") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "itoa") (r "^1.0.6") (o #t) (d #t) (k 0)) (d (n "itoap") (r "^1") (f (quote ("simd"))) (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.24") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-error") (r "^0.38.3") (k 0)) (d (n "polars-utils") (r "^0.38.3") (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "ryu") (r "^1.0.13") (o #t) (d #t) (k 0)) (d (n "sample-arrow2") (r "^0.17") (d #t) (k 2)) (d (n "sample-std") (r "^0.1") (d #t) (k 2)) (d (n "sample-test") (r "^0.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.4") (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1.9") (d #t) (k 0)) (d (n "strength_reduce") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.26") (f (quote ("macros" "rt" "fs" "io-util"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("compat"))) (d #t) (k 2)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)) (d (n "zstd") (r "^0.13") (o #t) (d #t) (k 0)))) (h "1bcn3v3j31ri50n0bpdi9p7c2g2xalzg155kkgvv50hzsx07y695") (f (quote (("timezones" "chrono-tz") ("temporal") ("strings") ("simd") ("performant") ("nightly") ("io_ipc_write_async" "io_ipc" "futures") ("io_ipc_read_async" "io_ipc" "futures" "async-stream") ("io_ipc_compression" "lz4" "zstd" "io_ipc") ("io_ipc" "arrow-format" "polars-error/arrow-format") ("io_flight" "io_ipc" "arrow-format/flight-data") ("io_avro_compression" "avro-schema/compression") ("io_avro_async" "avro-schema/async") ("io_avro" "avro-schema" "polars-error/avro-schema") ("full" "arrow_rs" "io_ipc" "io_flight" "io_ipc_write_async" "io_ipc_read_async" "io_ipc_compression" "io_avro" "io_avro_compression" "io_avro_async" "regex-syntax" "compute" "chrono-tz") ("dtype-decimal" "atoi" "itoap") ("dtype-array") ("default") ("compute_temporal") ("compute_take") ("compute_hash" "multiversion") ("compute_comparison" "compute_take" "compute_boolean") ("compute_cast" "compute_take" "ryu" "atoi_simd" "itoa" "fast-float") ("compute_boolean_kleene") ("compute_boolean") ("compute_bitwise") ("compute_arithmetics_decimal" "strength_reduce") ("compute_arithmetics" "strength_reduce" "compute_arithmetics_decimal") ("compute_aggregate" "multiversion") ("compute" "compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_hash" "compute_take" "compute_temporal") ("bigidx") ("arrow_rs" "arrow-buffer" "arrow-schema" "arrow-data" "arrow-array"))))))

(define-public crate-polars-arrow-0.39.0 (c (n "polars-arrow") (v "0.39.0") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow-array") (r ">=41") (o #t) (k 0)) (d (n "arrow-buffer") (r ">=41") (o #t) (k 0)) (d (n "arrow-data") (r ">=41") (o #t) (k 0)) (d (n "arrow-format") (r "^0.1.0") (f (quote ("ipc"))) (o #t) (d #t) (k 0) (p "polars-arrow-format")) (d (n "arrow-schema") (r ">=41") (o #t) (k 0)) (d (n "async-stream") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "atoi") (r "^2") (o #t) (d #t) (k 0)) (d (n "atoi_simd") (r "^0.15.5") (o #t) (d #t) (k 0)) (d (n "avro-schema") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "ethnum") (r "^1.3.2") (d #t) (k 0)) (d (n "fast-float") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "foreign_vec") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "itoa") (r "^1.0.6") (o #t) (d #t) (k 0)) (d (n "itoap") (r "^1") (f (quote ("simd"))) (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.24") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-error") (r "^0.39.0") (k 0)) (d (n "polars-utils") (r "^0.39.0") (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "ryu") (r "^1.0.13") (o #t) (d #t) (k 0)) (d (n "sample-arrow2") (r "^0.17") (d #t) (k 2)) (d (n "sample-std") (r "^0.2") (d #t) (k 2)) (d (n "sample-test") (r "^0.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.4") (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1.9") (d #t) (k 0)) (d (n "strength_reduce") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.26") (f (quote ("macros" "rt" "fs" "io-util"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("compat"))) (d #t) (k 2)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)) (d (n "zstd") (r "^0.13") (o #t) (d #t) (k 0)))) (h "1p2xa00aj9aa1m5xk9l6fh4b6dv0xd82bgqn25kv14ncf7wc8im4") (f (quote (("timezones" "chrono-tz") ("temporal") ("strings") ("simd") ("performant") ("nightly") ("io_ipc_write_async" "io_ipc" "futures") ("io_ipc_read_async" "io_ipc" "futures" "async-stream") ("io_ipc_compression" "lz4" "zstd" "io_ipc") ("io_ipc" "arrow-format" "polars-error/arrow-format") ("io_flight" "io_ipc" "arrow-format/flight-data") ("io_avro_compression" "avro-schema/compression") ("io_avro_async" "avro-schema/async") ("io_avro" "avro-schema" "polars-error/avro-schema") ("full" "arrow_rs" "io_ipc" "io_flight" "io_ipc_write_async" "io_ipc_read_async" "io_ipc_compression" "io_avro" "io_avro_compression" "io_avro_async" "regex-syntax" "compute" "chrono-tz") ("dtype-decimal" "atoi" "itoap") ("dtype-array") ("default") ("compute_temporal") ("compute_take") ("compute_hash" "multiversion") ("compute_comparison" "compute_take" "compute_boolean") ("compute_cast" "compute_take" "ryu" "atoi_simd" "itoa" "fast-float") ("compute_boolean_kleene") ("compute_boolean") ("compute_bitwise") ("compute_arithmetics_decimal" "strength_reduce") ("compute_arithmetics" "strength_reduce" "compute_arithmetics_decimal") ("compute_aggregate" "multiversion") ("compute" "compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_hash" "compute_take" "compute_temporal") ("bigidx") ("arrow_rs" "arrow-buffer" "arrow-schema" "arrow-data" "arrow-array"))))))

(define-public crate-polars-arrow-0.39.1 (c (n "polars-arrow") (v "0.39.1") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow-array") (r ">=41") (o #t) (k 0)) (d (n "arrow-buffer") (r ">=41") (o #t) (k 0)) (d (n "arrow-data") (r ">=41") (o #t) (k 0)) (d (n "arrow-format") (r "^0.1.0") (f (quote ("ipc"))) (o #t) (d #t) (k 0) (p "polars-arrow-format")) (d (n "arrow-schema") (r ">=41") (o #t) (k 0)) (d (n "async-stream") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "atoi") (r "^2") (o #t) (d #t) (k 0)) (d (n "atoi_simd") (r "^0.15.5") (o #t) (d #t) (k 0)) (d (n "avro-schema") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "ethnum") (r "^1.3.2") (d #t) (k 0)) (d (n "fast-float") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "foreign_vec") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "itoa") (r "^1.0.6") (o #t) (d #t) (k 0)) (d (n "itoap") (r "^1") (f (quote ("simd"))) (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.24") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-error") (r "^0.39.1") (k 0)) (d (n "polars-utils") (r "^0.39.1") (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "ryu") (r "^1.0.13") (o #t) (d #t) (k 0)) (d (n "sample-arrow2") (r "^0.17") (d #t) (k 2)) (d (n "sample-std") (r "^0.2") (d #t) (k 2)) (d (n "sample-test") (r "^0.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.4") (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1.9") (d #t) (k 0)) (d (n "strength_reduce") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.26") (f (quote ("macros" "rt" "fs" "io-util"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("compat"))) (d #t) (k 2)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)) (d (n "zstd") (r "^0.13") (o #t) (d #t) (k 0)))) (h "06gcl3sk3v5kxm1yi8jqbf6g7vhdf1zx7x550dpi03shdgy3r3gq") (f (quote (("timezones" "chrono-tz") ("temporal") ("strings") ("simd") ("performant") ("nightly") ("io_ipc_write_async" "io_ipc" "futures") ("io_ipc_read_async" "io_ipc" "futures" "async-stream") ("io_ipc_compression" "lz4" "zstd" "io_ipc") ("io_ipc" "arrow-format" "polars-error/arrow-format") ("io_flight" "io_ipc" "arrow-format/flight-data") ("io_avro_compression" "avro-schema/compression") ("io_avro_async" "avro-schema/async") ("io_avro" "avro-schema" "polars-error/avro-schema") ("full" "arrow_rs" "io_ipc" "io_flight" "io_ipc_write_async" "io_ipc_read_async" "io_ipc_compression" "io_avro" "io_avro_compression" "io_avro_async" "regex-syntax" "compute" "chrono-tz") ("dtype-decimal" "atoi" "itoap") ("dtype-array") ("default") ("compute_temporal") ("compute_take") ("compute_hash" "multiversion") ("compute_comparison" "compute_take" "compute_boolean") ("compute_cast" "compute_take" "ryu" "atoi_simd" "itoa" "fast-float") ("compute_boolean_kleene") ("compute_boolean") ("compute_bitwise") ("compute_arithmetics_decimal" "strength_reduce") ("compute_arithmetics" "strength_reduce" "compute_arithmetics_decimal") ("compute_aggregate" "multiversion") ("compute" "compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_hash" "compute_take" "compute_temporal") ("bigidx") ("arrow_rs" "arrow-buffer" "arrow-schema" "arrow-data" "arrow-array"))))))

(define-public crate-polars-arrow-0.39.2 (c (n "polars-arrow") (v "0.39.2") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow-array") (r ">=41") (o #t) (k 0)) (d (n "arrow-buffer") (r ">=41") (o #t) (k 0)) (d (n "arrow-data") (r ">=41") (o #t) (k 0)) (d (n "arrow-format") (r "^0.1.0") (f (quote ("ipc"))) (o #t) (d #t) (k 0) (p "polars-arrow-format")) (d (n "arrow-schema") (r ">=41") (o #t) (k 0)) (d (n "async-stream") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "atoi") (r "^2") (o #t) (d #t) (k 0)) (d (n "atoi_simd") (r "^0.15.5") (o #t) (d #t) (k 0)) (d (n "avro-schema") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "ethnum") (r "^1.3.2") (d #t) (k 0)) (d (n "fast-float") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "foreign_vec") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "itoa") (r "^1.0.6") (o #t) (d #t) (k 0)) (d (n "itoap") (r "^1") (f (quote ("simd"))) (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.24") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-error") (r "^0.39.2") (k 0)) (d (n "polars-utils") (r "^0.39.2") (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "ryu") (r "^1.0.13") (o #t) (d #t) (k 0)) (d (n "sample-arrow2") (r "^0.17") (d #t) (k 2)) (d (n "sample-std") (r "^0.2") (d #t) (k 2)) (d (n "sample-test") (r "^0.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.4") (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1.9") (d #t) (k 0)) (d (n "strength_reduce") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.26") (f (quote ("macros" "rt" "fs" "io-util"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("compat"))) (d #t) (k 2)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)) (d (n "zstd") (r "^0.13") (o #t) (d #t) (k 0)))) (h "0x8gx2aspsn78qgnpdlncs7rvm2q7jvblyz2csdjfcggnpr0jnvj") (f (quote (("timezones" "chrono-tz") ("temporal") ("strings") ("simd") ("performant") ("nightly") ("io_ipc_write_async" "io_ipc" "futures") ("io_ipc_read_async" "io_ipc" "futures" "async-stream") ("io_ipc_compression" "lz4" "zstd" "io_ipc") ("io_ipc" "arrow-format" "polars-error/arrow-format") ("io_flight" "io_ipc" "arrow-format/flight-data") ("io_avro_compression" "avro-schema/compression") ("io_avro_async" "avro-schema/async") ("io_avro" "avro-schema" "polars-error/avro-schema") ("full" "arrow_rs" "io_ipc" "io_flight" "io_ipc_write_async" "io_ipc_read_async" "io_ipc_compression" "io_avro" "io_avro_compression" "io_avro_async" "regex-syntax" "compute" "chrono-tz") ("dtype-decimal" "atoi" "itoap") ("dtype-array") ("default") ("compute_temporal") ("compute_take") ("compute_hash" "multiversion") ("compute_comparison" "compute_take" "compute_boolean") ("compute_cast" "compute_take" "ryu" "atoi_simd" "itoa" "fast-float") ("compute_boolean_kleene") ("compute_boolean") ("compute_bitwise") ("compute_arithmetics_decimal" "strength_reduce") ("compute_arithmetics" "strength_reduce" "compute_arithmetics_decimal") ("compute_aggregate" "multiversion") ("compute" "compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_hash" "compute_take" "compute_temporal") ("bigidx") ("arrow_rs" "arrow-buffer" "arrow-schema" "arrow-data" "arrow-array"))))))

(define-public crate-polars-arrow-0.40.0 (c (n "polars-arrow") (v "0.40.0") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow-array") (r ">=41") (o #t) (k 0)) (d (n "arrow-buffer") (r ">=41") (o #t) (k 0)) (d (n "arrow-data") (r ">=41") (o #t) (k 0)) (d (n "arrow-format") (r "^0.1.0") (f (quote ("ipc"))) (o #t) (d #t) (k 0) (p "polars-arrow-format")) (d (n "arrow-schema") (r ">=41") (o #t) (k 0)) (d (n "async-stream") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "atoi") (r "^2") (o #t) (d #t) (k 0)) (d (n "atoi_simd") (r "^0.15.5") (o #t) (d #t) (k 0)) (d (n "avro-schema") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1.11") (d #t) (k 0)) (d (n "ethnum") (r "^1.3.2") (d #t) (k 0)) (d (n "fast-float") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "foreign_vec") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash" "serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "itoa") (r "^1.0.6") (o #t) (d #t) (k 0)) (d (n "itoap") (r "^1") (f (quote ("simd"))) (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.24") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-error") (r "^0.40.0") (k 0)) (d (n "polars-utils") (r "^0.40.0") (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "ryu") (r "^1.0.13") (o #t) (d #t) (k 0)) (d (n "sample-arrow2") (r "^0.17") (d #t) (k 2)) (d (n "sample-std") (r "^0.2") (d #t) (k 2)) (d (n "sample-test") (r "^0.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.4") (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1.9") (d #t) (k 0)) (d (n "strength_reduce") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.26") (f (quote ("macros" "rt" "fs" "io-util"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("compat"))) (d #t) (k 2)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)) (d (n "zstd") (r "^0.13") (o #t) (d #t) (k 0)))) (h "0gihm17hzfwgh8sh2g75ghdk1c0l1ajsz8vcz8if0akms0ff3d8w") (f (quote (("timezones" "chrono-tz") ("temporal") ("strings") ("simd") ("performant") ("nightly") ("io_ipc_write_async" "io_ipc" "futures") ("io_ipc_read_async" "io_ipc" "futures" "async-stream") ("io_ipc_compression" "lz4" "zstd" "io_ipc") ("io_ipc" "arrow-format" "polars-error/arrow-format") ("io_flight" "io_ipc" "arrow-format/flight-data") ("io_avro_compression" "avro-schema/compression") ("io_avro_async" "avro-schema/async") ("io_avro" "avro-schema" "polars-error/avro-schema") ("full" "arrow_rs" "io_ipc" "io_flight" "io_ipc_write_async" "io_ipc_read_async" "io_ipc_compression" "io_avro" "io_avro_compression" "io_avro_async" "regex-syntax" "compute" "serde" "chrono-tz") ("dtype-decimal" "atoi" "itoap") ("dtype-array") ("default") ("compute_temporal") ("compute_take") ("compute_hash" "multiversion") ("compute_comparison" "compute_take" "compute_boolean") ("compute_cast" "compute_take" "ryu" "atoi_simd" "itoa" "fast-float") ("compute_boolean_kleene") ("compute_boolean") ("compute_bitwise") ("compute_arithmetics_decimal" "strength_reduce") ("compute_arithmetics" "strength_reduce" "compute_arithmetics_decimal") ("compute_aggregate" "multiversion") ("compute" "compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_hash" "compute_take" "compute_temporal") ("bigidx") ("arrow_rs" "arrow-buffer" "arrow-schema" "arrow-data" "arrow-array")))) (s 2) (e (quote (("serde" "dep:serde"))))))

