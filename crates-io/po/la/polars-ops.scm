(define-module (crates-io po la polars-ops) #:use-module (crates-io))

(define-public crate-polars-ops-0.21.0 (c (n "polars-ops") (v "0.21.0") (d (list (d (n "polars-core") (r "^0.21.0") (f (quote ("private"))) (k 0)))) (h "0lb9npx8h65y2m0bksv1m87nd4pxrv3fh70x398876c9hcr9lmx9") (f (quote (("to_dummies") ("object" "polars-core/object") ("dtype-u8" "polars-core/dtype-u8") ("dtype-time" "polars-core/dtype-time") ("dtype-struct" "polars-core/dtype-struct") ("dtype-duration" "polars-core/dtype-duration") ("dtype-datetime" "polars-core/dtype-datetime") ("dtype-date" "polars-core/dtype-date") ("dtype-categorical" "polars-core/dtype-categorical"))))))

(define-public crate-polars-ops-0.21.1 (c (n "polars-ops") (v "0.21.1") (d (list (d (n "polars-core") (r "^0.21.1") (f (quote ("private"))) (k 0)))) (h "0ylpb2mc5k4p5ynfyqmrwgc7dyx691bg3l899wi5z5cj167ydyl6") (f (quote (("to_dummies") ("object" "polars-core/object") ("dtype-u8" "polars-core/dtype-u8") ("dtype-time" "polars-core/dtype-time") ("dtype-struct" "polars-core/dtype-struct") ("dtype-duration" "polars-core/dtype-duration") ("dtype-datetime" "polars-core/dtype-datetime") ("dtype-date" "polars-core/dtype-date") ("dtype-categorical" "polars-core/dtype-categorical"))))))

(define-public crate-polars-ops-0.22.0 (c (n "polars-ops") (v "0.22.0") (d (list (d (n "polars-arrow") (r "^0.22.0") (k 0)) (d (n "polars-core") (r "^0.22.0") (f (quote ("private" "strings"))) (k 0)))) (h "18qkb4rk2585n6zbqg5qmd562qhcq7wsqhrsbnfs5i4vf0x0pd2a") (f (quote (("to_dummies") ("strings" "polars-core/strings") ("object" "polars-core/object") ("list_to_struct" "polars-core/dtype-struct" "list") ("list") ("dtype-u8" "polars-core/dtype-u8") ("dtype-time" "polars-core/dtype-time" "polars-core/temporal") ("dtype-struct" "polars-core/dtype-struct" "polars-core/temporal") ("dtype-duration" "polars-core/dtype-duration" "polars-core/temporal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-core/temporal") ("dtype-date" "polars-core/dtype-date" "polars-core/temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("diff"))))))

(define-public crate-polars-ops-0.22.1 (c (n "polars-ops") (v "0.22.1") (d (list (d (n "polars-arrow") (r "^0.22.0") (k 0)) (d (n "polars-core") (r "^0.22.1") (f (quote ("private"))) (k 0)))) (h "18i0ml8rpb1bqdxnxwkprfy7xn1g21wjy5qqgmybnl2hd7gb473c") (f (quote (("to_dummies") ("strings" "polars-core/strings") ("object" "polars-core/object") ("list_to_struct" "polars-core/dtype-struct" "list") ("list") ("dtype-u8" "polars-core/dtype-u8") ("dtype-time" "polars-core/dtype-time" "polars-core/temporal") ("dtype-struct" "polars-core/dtype-struct" "polars-core/temporal") ("dtype-duration" "polars-core/dtype-duration" "polars-core/temporal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-core/temporal") ("dtype-date" "polars-core/dtype-date" "polars-core/temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("diff"))))))

(define-public crate-polars-ops-0.22.4 (c (n "polars-ops") (v "0.22.4") (d (list (d (n "polars-arrow") (r "^0.22.4") (k 0)) (d (n "polars-core") (r "^0.22.4") (f (quote ("private"))) (k 0)))) (h "1mf9ccwjs5qbdfryzvarcdaggbsmwl1zr5f5r3y0m68hpn2kklaw") (f (quote (("to_dummies") ("strings" "polars-core/strings") ("string_justify" "polars-core/strings") ("object" "polars-core/object") ("log") ("list_to_struct" "polars-core/dtype-struct" "list") ("list") ("dtype-u8" "polars-core/dtype-u8") ("dtype-time" "polars-core/dtype-time" "polars-core/temporal") ("dtype-struct" "polars-core/dtype-struct" "polars-core/temporal") ("dtype-duration" "polars-core/dtype-duration" "polars-core/temporal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-core/temporal") ("dtype-date" "polars-core/dtype-date" "polars-core/temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("diff"))))))

(define-public crate-polars-ops-0.22.5 (c (n "polars-ops") (v "0.22.5") (d (list (d (n "polars-arrow") (r "^0.22.5") (k 0)) (d (n "polars-core") (r "^0.22.5") (f (quote ("private"))) (k 0)))) (h "0ikfqz8an1xl8n85rc4ial0xx3ai0ipbmjr9ml4k8hjzpcscd7cb") (f (quote (("to_dummies") ("strings" "polars-core/strings") ("string_justify" "polars-core/strings") ("object" "polars-core/object") ("log") ("list_to_struct" "polars-core/dtype-struct" "list") ("list") ("dtype-u8" "polars-core/dtype-u8") ("dtype-time" "polars-core/dtype-time" "polars-core/temporal") ("dtype-struct" "polars-core/dtype-struct" "polars-core/temporal") ("dtype-duration" "polars-core/dtype-duration" "polars-core/temporal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-core/temporal") ("dtype-date" "polars-core/dtype-date" "polars-core/temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("diff"))))))

(define-public crate-polars-ops-0.22.6 (c (n "polars-ops") (v "0.22.6") (d (list (d (n "polars-arrow") (r "^0.22.6") (k 0)) (d (n "polars-core") (r "^0.22.6") (f (quote ("private"))) (k 0)))) (h "08xi58yy4vkwgwrsppawhcyijfwpkm0m441hp05cgw0fgvsxinf4") (f (quote (("to_dummies") ("strings" "polars-core/strings") ("string_justify" "polars-core/strings") ("object" "polars-core/object") ("log") ("list_to_struct" "polars-core/dtype-struct" "list") ("list") ("dtype-u8" "polars-core/dtype-u8") ("dtype-time" "polars-core/dtype-time" "polars-core/temporal") ("dtype-struct" "polars-core/dtype-struct" "polars-core/temporal") ("dtype-duration" "polars-core/dtype-duration" "polars-core/temporal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-core/temporal") ("dtype-date" "polars-core/dtype-date" "polars-core/temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("diff"))))))

(define-public crate-polars-ops-0.22.7 (c (n "polars-ops") (v "0.22.7") (d (list (d (n "polars-arrow") (r "^0.22.7") (k 0)) (d (n "polars-core") (r "^0.22.7") (f (quote ("private"))) (k 0)))) (h "016gjb1cnnf8abfbjpanz89gli5877g1kg7ich1cs4z17d3ws3h3") (f (quote (("to_dummies") ("strings" "polars-core/strings") ("string_justify" "polars-core/strings") ("object" "polars-core/object") ("log") ("list_to_struct" "polars-core/dtype-struct" "list") ("list") ("dtype-u8" "polars-core/dtype-u8") ("dtype-time" "polars-core/dtype-time" "polars-core/temporal") ("dtype-struct" "polars-core/dtype-struct" "polars-core/temporal") ("dtype-duration" "polars-core/dtype-duration" "polars-core/temporal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-core/temporal") ("dtype-date" "polars-core/dtype-date" "polars-core/temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("diff"))))))

(define-public crate-polars-ops-0.23.0 (c (n "polars-ops") (v "0.23.0") (d (list (d (n "polars-arrow") (r "^0.23.0") (k 0)) (d (n "polars-core") (r "^0.23.0") (f (quote ("private"))) (k 0)))) (h "120rykk75grhw25dqqmpjl6hnaxvl0bnhfq0q4aafqmyxh5wqkd5") (f (quote (("to_dummies") ("strings" "polars-core/strings") ("string_justify" "polars-core/strings") ("rolling_window" "polars-core/rolling_window") ("object" "polars-core/object") ("moment" "polars-core/moment") ("log") ("list_to_struct" "polars-core/dtype-struct" "list") ("list") ("hash") ("dtype-u8" "polars-core/dtype-u8") ("dtype-time" "polars-core/dtype-time" "polars-core/temporal") ("dtype-struct" "polars-core/dtype-struct" "polars-core/temporal") ("dtype-duration" "polars-core/dtype-duration" "polars-core/temporal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-core/temporal") ("dtype-date" "polars-core/dtype-date" "polars-core/temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("diff" "polars-core/diff"))))))

(define-public crate-polars-ops-0.23.1 (c (n "polars-ops") (v "0.23.1") (d (list (d (n "polars-arrow") (r "^0.23.1") (k 0)) (d (n "polars-core") (r "^0.23.1") (f (quote ("private"))) (k 0)))) (h "04ycd8hzq6k4hlglrsjiqi3yimnahwivrbaqdhiihw3bfq5wm8cr") (f (quote (("to_dummies") ("strings" "polars-core/strings") ("string_justify" "polars-core/strings") ("rolling_window" "polars-core/rolling_window") ("object" "polars-core/object") ("moment" "polars-core/moment") ("log") ("list_to_struct" "polars-core/dtype-struct" "list") ("list") ("hash") ("dtype-u8" "polars-core/dtype-u8") ("dtype-time" "polars-core/dtype-time" "polars-core/temporal") ("dtype-struct" "polars-core/dtype-struct" "polars-core/temporal") ("dtype-duration" "polars-core/dtype-duration" "polars-core/temporal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-core/temporal") ("dtype-date" "polars-core/dtype-date" "polars-core/temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("diff" "polars-core/diff"))))))

(define-public crate-polars-ops-0.23.2 (c (n "polars-ops") (v "0.23.2") (d (list (d (n "polars-arrow") (r "^0.23.2") (k 0)) (d (n "polars-core") (r "^0.23.2") (f (quote ("private"))) (k 0)))) (h "16lwa4m6zyzsyn7mn18dqn180l6lig6rvn7q4fyxb2g5spji462a") (f (quote (("to_dummies") ("strings" "polars-core/strings") ("string_justify" "polars-core/strings") ("rolling_window" "polars-core/rolling_window") ("object" "polars-core/object") ("moment" "polars-core/moment") ("log") ("list_to_struct" "polars-core/dtype-struct" "list") ("list") ("hash") ("dtype-u8" "polars-core/dtype-u8") ("dtype-time" "polars-core/dtype-time" "polars-core/temporal") ("dtype-struct" "polars-core/dtype-struct" "polars-core/temporal") ("dtype-duration" "polars-core/dtype-duration" "polars-core/temporal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-core/temporal") ("dtype-date" "polars-core/dtype-date" "polars-core/temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("diff" "polars-core/diff"))))))

(define-public crate-polars-ops-0.24.0 (c (n "polars-ops") (v "0.24.0") (d (list (d (n "polars-arrow") (r "^0.24.0") (k 0)) (d (n "polars-core") (r "^0.24.0") (f (quote ("private"))) (k 0)))) (h "0f4niwgfdr7s8rvg0rsfz559hhgj4a2f4n2cnr95kf99lnmx5ra4") (f (quote (("top_k") ("to_dummies") ("strings" "polars-core/strings") ("string_justify" "polars-core/strings") ("search_sorted") ("rolling_window" "polars-core/rolling_window") ("pivot") ("object" "polars-core/object") ("moment" "polars-core/moment") ("log") ("list_to_struct" "polars-core/dtype-struct" "list") ("list") ("hash") ("dtype-u8" "polars-core/dtype-u8") ("dtype-time" "polars-core/dtype-time" "polars-core/temporal") ("dtype-struct" "polars-core/dtype-struct" "polars-core/temporal") ("dtype-duration" "polars-core/dtype-duration" "polars-core/temporal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-core/temporal") ("dtype-date" "polars-core/dtype-date" "polars-core/temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("diff" "polars-core/diff"))))))

(define-public crate-polars-ops-0.24.1 (c (n "polars-ops") (v "0.24.1") (d (list (d (n "polars-arrow") (r "^0.24.1") (k 0)) (d (n "polars-core") (r "^0.24.1") (f (quote ("private"))) (k 0)))) (h "17n5ryk7q7kvr6f7ffka5fiwv7l4lqqbs56lmp6hdqydn9fhs5qa") (f (quote (("top_k") ("to_dummies") ("strings" "polars-core/strings") ("string_justify" "polars-core/strings") ("search_sorted") ("rolling_window" "polars-core/rolling_window") ("propagate_nans") ("pivot") ("object" "polars-core/object") ("moment" "polars-core/moment") ("log") ("list_to_struct" "polars-core/dtype-struct" "list") ("list") ("hash") ("dtype-u8" "polars-core/dtype-u8") ("dtype-time" "polars-core/dtype-time" "polars-core/temporal") ("dtype-struct" "polars-core/dtype-struct" "polars-core/temporal") ("dtype-duration" "polars-core/dtype-duration" "polars-core/temporal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-core/temporal") ("dtype-date" "polars-core/dtype-date" "polars-core/temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("diff" "polars-core/diff"))))))

(define-public crate-polars-ops-0.24.2 (c (n "polars-ops") (v "0.24.2") (d (list (d (n "polars-arrow") (r "^0.24.2") (k 0)) (d (n "polars-core") (r "^0.24.2") (f (quote ("private"))) (k 0)))) (h "0lppay7abd1qywgwb3ry6v7l3glak190z6zv7hkx3dagnpsss7h6") (f (quote (("top_k") ("to_dummies") ("strings" "polars-core/strings") ("string_justify" "polars-core/strings") ("search_sorted") ("rolling_window" "polars-core/rolling_window") ("propagate_nans") ("pivot") ("object" "polars-core/object") ("moment" "polars-core/moment") ("log") ("list_to_struct" "polars-core/dtype-struct" "list") ("list") ("hash") ("dtype-u8" "polars-core/dtype-u8") ("dtype-time" "polars-core/dtype-time" "polars-core/temporal") ("dtype-struct" "polars-core/dtype-struct" "polars-core/temporal") ("dtype-duration" "polars-core/dtype-duration" "polars-core/temporal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-core/temporal") ("dtype-date" "polars-core/dtype-date" "polars-core/temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("diff" "polars-core/diff"))))))

(define-public crate-polars-ops-0.24.3 (c (n "polars-ops") (v "0.24.3") (d (list (d (n "polars-arrow") (r "^0.24.3") (k 0)) (d (n "polars-core") (r "^0.24.3") (f (quote ("private"))) (k 0)))) (h "0ikryn18va10mib1kb19bh4l778qmhr6y6mk6xswkznzc09x7xln") (f (quote (("top_k") ("to_dummies") ("strings" "polars-core/strings") ("string_justify" "polars-core/strings") ("search_sorted") ("rolling_window" "polars-core/rolling_window") ("propagate_nans") ("pivot") ("object" "polars-core/object") ("moment" "polars-core/moment") ("log") ("list_to_struct" "polars-core/dtype-struct" "list") ("list") ("hash") ("dtype-u8" "polars-core/dtype-u8") ("dtype-time" "polars-core/dtype-time" "polars-core/temporal") ("dtype-struct" "polars-core/dtype-struct" "polars-core/temporal") ("dtype-duration" "polars-core/dtype-duration" "polars-core/temporal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-core/temporal") ("dtype-date" "polars-core/dtype-date" "polars-core/temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("diff" "polars-core/diff"))))))

(define-public crate-polars-ops-0.24.4 (c (n "polars-ops") (v "0.24.4") (d (list (d (n "arrow") (r "^0.14.1") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "jsonpath_lib") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "polars-arrow") (r "^0.24.4") (k 0)) (d (n "polars-core") (r "^0.24.4") (f (quote ("private"))) (k 0)) (d (n "polars-utils") (r "^0.24.4") (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)))) (h "0byfm9jqxj7p5iwbk4i7z20ig3w50z0l8khi8b7a189hisckiqqf") (f (quote (("top_k") ("to_dummies") ("strings" "polars-core/strings") ("string_justify" "polars-core/strings") ("search_sorted") ("rolling_window" "polars-core/rolling_window") ("propagate_nans") ("pivot") ("object" "polars-core/object") ("nightly" "polars-utils/nightly") ("moment" "polars-core/moment") ("log") ("list_to_struct" "polars-core/dtype-struct") ("hash") ("extract_jsonpath" "arrow/io_json" "serde_json" "jsonpath_lib") ("dtype-u8" "polars-core/dtype-u8") ("dtype-time" "polars-core/dtype-time" "polars-core/temporal") ("dtype-struct" "polars-core/dtype-struct" "polars-core/temporal") ("dtype-duration" "polars-core/dtype-duration" "polars-core/temporal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-core/temporal") ("dtype-date" "polars-core/dtype-date" "polars-core/temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-binary" "polars-core/dtype-binary" "polars-core/dtype-binary") ("diff" "polars-core/diff"))))))

(define-public crate-polars-ops-0.25.0 (c (n "polars-ops") (v "0.25.0") (d (list (d (n "arrow") (r "^0.14.1") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "jsonpath_lib") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "polars-arrow") (r "^0.25.0") (k 0)) (d (n "polars-core") (r "^0.25.0") (f (quote ("private"))) (k 0)) (d (n "polars-utils") (r "^0.25.0") (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)))) (h "165viy3sy3pvcm3i4094fbz7xzc1rravnr4a64rcnzj2394iqan1") (f (quote (("top_k") ("to_dummies") ("strings" "polars-core/strings") ("string_justify" "polars-core/strings") ("search_sorted") ("rolling_window" "polars-core/rolling_window") ("propagate_nans") ("pivot") ("object" "polars-core/object") ("nightly" "polars-utils/nightly") ("moment" "polars-core/moment") ("log") ("list_to_struct" "polars-core/dtype-struct") ("hash") ("extract_jsonpath" "arrow/io_json" "serde_json" "jsonpath_lib") ("dtype-u8" "polars-core/dtype-u8") ("dtype-time" "polars-core/dtype-time" "polars-core/temporal") ("dtype-struct" "polars-core/dtype-struct" "polars-core/temporal") ("dtype-duration" "polars-core/dtype-duration" "polars-core/temporal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-core/temporal") ("dtype-date" "polars-core/dtype-date" "polars-core/temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-binary" "polars-core/dtype-binary" "polars-core/dtype-binary") ("diff" "polars-core/diff"))))))

(define-public crate-polars-ops-0.25.1 (c (n "polars-ops") (v "0.25.1") (d (list (d (n "arrow") (r "^0.14.1") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "jsonpath_lib") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "polars-arrow") (r "^0.25.1") (k 0)) (d (n "polars-core") (r "^0.25.1") (f (quote ("private"))) (k 0)) (d (n "polars-utils") (r "^0.25.1") (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)))) (h "1cxypj5va2k7wk5nzhvmgwibccdk5lvpy11m9iikk59y5dazdlxz") (f (quote (("top_k") ("to_dummies") ("strings" "polars-core/strings") ("string_justify" "polars-core/strings") ("search_sorted") ("rolling_window" "polars-core/rolling_window") ("propagate_nans") ("pivot") ("object" "polars-core/object") ("nightly" "polars-utils/nightly") ("moment" "polars-core/moment") ("log") ("list_to_struct" "polars-core/dtype-struct") ("hash") ("extract_jsonpath" "arrow/io_json" "serde_json" "jsonpath_lib") ("dtype-u8" "polars-core/dtype-u8") ("dtype-time" "polars-core/dtype-time" "polars-core/temporal") ("dtype-struct" "polars-core/dtype-struct" "polars-core/temporal") ("dtype-duration" "polars-core/dtype-duration" "polars-core/temporal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-core/temporal") ("dtype-date" "polars-core/dtype-date" "polars-core/temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-binary" "polars-core/dtype-binary" "polars-core/dtype-binary") ("diff" "polars-core/diff"))))))

(define-public crate-polars-ops-0.26.0 (c (n "polars-ops") (v "0.26.0") (d (list (d (n "arrow") (r "^0.15") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "jsonpath_lib") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "polars-arrow") (r "^0.26.0") (k 0)) (d (n "polars-core") (r "^0.26.0") (f (quote ("private"))) (k 0)) (d (n "polars-utils") (r "^0.26.0") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)))) (h "0basxfd1wpk91knlj15d1pqz9ismdb26yfr2i1r6vwlxfnrs1rsh") (f (quote (("top_k") ("to_dummies") ("strings" "polars-core/strings") ("string_justify" "polars-core/strings") ("semi_anti_join" "polars-core/semi_anti_join") ("search_sorted") ("rolling_window" "polars-core/rolling_window") ("propagate_nans") ("pivot") ("performant" "polars-core/performant") ("object" "polars-core/object") ("nightly" "polars-utils/nightly") ("moment" "polars-core/moment") ("log") ("list_to_struct" "polars-core/dtype-struct") ("interpolate") ("hash") ("extract_jsonpath" "arrow/io_json" "serde_json" "jsonpath_lib") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-core/temporal") ("dtype-struct" "polars-core/dtype-struct" "polars-core/temporal") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-core/temporal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-core/temporal") ("dtype-date" "polars-core/dtype-date" "polars-core/temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-binary" "polars-core/dtype-binary" "polars-core/dtype-binary") ("diff" "polars-core/diff") ("cross_join" "polars-core/cross_join") ("chunked_ids" "polars-core/chunked_ids") ("asof_join" "polars-core/asof_join"))))))

(define-public crate-polars-ops-0.26.1 (c (n "polars-ops") (v "0.26.1") (d (list (d (n "arrow") (r "^0.15") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "jsonpath_lib") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "polars-arrow") (r "^0.26.1") (k 0)) (d (n "polars-core") (r "^0.26.1") (f (quote ("private"))) (k 0)) (d (n "polars-utils") (r "^0.26.1") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)))) (h "1mh59xhqqwmb9g3bkizc4zi1g80hjjwsfd6568b81rl41x7l06kp") (f (quote (("top_k") ("to_dummies") ("strings" "polars-core/strings") ("string_justify" "polars-core/strings") ("semi_anti_join" "polars-core/semi_anti_join") ("search_sorted") ("rolling_window" "polars-core/rolling_window") ("propagate_nans") ("pivot") ("performant" "polars-core/performant") ("object" "polars-core/object") ("nightly" "polars-utils/nightly") ("moment" "polars-core/moment") ("log") ("list_to_struct" "polars-core/dtype-struct") ("interpolate") ("hash") ("extract_jsonpath" "arrow/io_json" "serde_json" "jsonpath_lib") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-core/temporal") ("dtype-struct" "polars-core/dtype-struct" "polars-core/temporal") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-core/temporal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-core/temporal") ("dtype-date" "polars-core/dtype-date" "polars-core/temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-binary" "polars-core/dtype-binary" "polars-core/dtype-binary") ("diff" "polars-core/diff") ("cross_join" "polars-core/cross_join") ("chunked_ids" "polars-core/chunked_ids") ("asof_join" "polars-core/asof_join"))))))

(define-public crate-polars-ops-0.27.1 (c (n "polars-ops") (v "0.27.1") (d (list (d (n "arrow") (r "^0.16") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2") (o #t) (d #t) (k 0)) (d (n "polars-arrow") (r "^0.27.1") (k 0)) (d (n "polars-core") (r "^0.27.1") (f (quote ("private"))) (k 0)) (d (n "polars-utils") (r "^0.27.1") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)))) (h "05dfyc0kwhkm3560bzqb7z1fzzz92npm6jyc9pfbipgdls8qn5ii") (f (quote (("top_k") ("to_dummies") ("strings" "polars-core/strings") ("string_justify" "polars-core/strings") ("string_from_radix" "polars-core/strings") ("string_encoding" "base64" "hex") ("semi_anti_join" "polars-core/semi_anti_join") ("search_sorted") ("round_series") ("rolling_window" "polars-core/rolling_window") ("propagate_nans") ("pivot" "polars-core/reinterpret") ("performant" "polars-core/performant") ("object" "polars-core/object") ("nightly" "polars-utils/nightly") ("moment" "polars-core/moment") ("merge_sorted") ("log") ("list_to_struct" "polars-core/dtype-struct") ("list_take") ("is_first") ("interpolate") ("hash") ("extract_jsonpath" "arrow/io_json" "serde_json" "jsonpath_lib") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-core/temporal") ("dtype-struct" "polars-core/dtype-struct" "polars-core/temporal") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-i128" "polars-core/dtype-i128") ("dtype-duration" "polars-core/dtype-duration" "polars-core/temporal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-core/temporal") ("dtype-date" "polars-core/dtype-date" "polars-core/temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-binary" "polars-core/dtype-binary" "polars-core/dtype-binary" "memchr") ("diff" "polars-core/diff") ("cross_join" "polars-core/cross_join") ("chunked_ids" "polars-core/chunked_ids") ("binary_encoding" "base64" "hex" "dtype-binary") ("big_idx" "polars-core/bigidx") ("asof_join" "polars-core/asof_join"))))))

(define-public crate-polars-ops-0.27.2 (c (n "polars-ops") (v "0.27.2") (d (list (d (n "arrow") (r "^0.16") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2") (o #t) (d #t) (k 0)) (d (n "polars-arrow") (r "^0.27.2") (k 0)) (d (n "polars-core") (r "^0.27.2") (f (quote ("private"))) (k 0)) (d (n "polars-utils") (r "^0.27.2") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)))) (h "02i8wmvdx10mfwma6pmjr4xsrgdmxdvphc0zn7d7fhwzzm086qrn") (f (quote (("top_k") ("to_dummies") ("strings" "polars-core/strings") ("string_justify" "polars-core/strings") ("string_from_radix" "polars-core/strings") ("string_encoding" "base64" "hex") ("semi_anti_join" "polars-core/semi_anti_join") ("search_sorted") ("round_series") ("rolling_window" "polars-core/rolling_window") ("propagate_nans") ("pivot" "polars-core/reinterpret") ("performant" "polars-core/performant") ("object" "polars-core/object") ("nightly" "polars-utils/nightly") ("moment" "polars-core/moment") ("merge_sorted") ("log") ("list_to_struct" "polars-core/dtype-struct") ("list_take") ("is_first") ("interpolate") ("hash") ("extract_jsonpath" "arrow/io_json" "serde_json" "jsonpath_lib") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-core/temporal") ("dtype-struct" "polars-core/dtype-struct" "polars-core/temporal") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-i128" "polars-core/dtype-i128") ("dtype-duration" "polars-core/dtype-duration" "polars-core/temporal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-core/temporal") ("dtype-date" "polars-core/dtype-date" "polars-core/temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-binary" "polars-core/dtype-binary" "polars-core/dtype-binary" "memchr") ("diff" "polars-core/diff") ("cross_join" "polars-core/cross_join") ("chunked_ids" "polars-core/chunked_ids") ("binary_encoding" "base64" "hex" "dtype-binary") ("big_idx" "polars-core/bigidx") ("asof_join" "polars-core/asof_join"))))))

(define-public crate-polars-ops-0.28.0 (c (n "polars-ops") (v "0.28.0") (d (list (d (n "arrow") (r "^0.17") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.28.0") (k 0)) (d (n "polars-core") (r "^0.28.0") (f (quote ("private"))) (k 0)) (d (n "polars-utils") (r "^0.28.0") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)))) (h "19wbnhkr8yvh3mn3b7ikgcpabish4qnqa0vi4figbmja0j4sxgmq") (f (quote (("top_k") ("to_dummies") ("strings" "polars-core/strings") ("string_justify" "polars-core/strings") ("string_from_radix" "polars-core/strings") ("string_encoding" "base64" "hex") ("semi_anti_join" "polars-core/semi_anti_join") ("search_sorted") ("round_series") ("rolling_window" "polars-core/rolling_window") ("propagate_nans") ("pivot" "polars-core/reinterpret") ("performant" "polars-core/performant") ("object" "polars-core/object") ("nightly" "polars-utils/nightly") ("moment" "polars-core/moment") ("merge_sorted") ("log") ("list_to_struct" "polars-core/dtype-struct") ("list_take") ("list_count") ("is_unique") ("is_first") ("interpolate") ("hash") ("extract_jsonpath" "arrow/io_json" "serde_json" "jsonpath_lib") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-core/temporal") ("dtype-struct" "polars-core/dtype-struct" "polars-core/temporal") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-core/temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-core/temporal") ("dtype-date" "polars-core/dtype-date" "polars-core/temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("diff" "polars-core/diff") ("cross_join" "polars-core/cross_join") ("chunked_ids" "polars-core/chunked_ids") ("binary_encoding" "base64" "hex") ("big_idx" "polars-core/bigidx") ("asof_join" "polars-core/asof_join"))))))

(define-public crate-polars-ops-0.29.0 (c (n "polars-ops") (v "0.29.0") (d (list (d (n "argminmax") (r "^0.6.1") (f (quote ("float"))) (k 0)) (d (n "arrow") (r "^0.17") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.29.0") (k 0)) (d (n "polars-core") (r "^0.29.0") (f (quote ("private"))) (k 0)) (d (n "polars-utils") (r "^0.29.0") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)))) (h "1qba309s4z67593kmp1j25sxm2bky8r199gpc48mnb1ga9qihbhr") (f (quote (("top_k") ("to_dummies") ("strings" "polars-core/strings") ("string_justify" "polars-core/strings") ("string_from_radix" "polars-core/strings") ("string_encoding" "base64" "hex") ("simd" "argminmax/nightly_simd") ("semi_anti_join" "polars-core/semi_anti_join") ("search_sorted") ("round_series") ("rolling_window" "polars-core/rolling_window") ("propagate_nans") ("pivot" "polars-core/reinterpret") ("performant" "polars-core/performant" "fused") ("object" "polars-core/object") ("nightly" "polars-utils/nightly") ("moment" "polars-core/moment") ("merge_sorted") ("log") ("list_to_struct" "polars-core/dtype-struct") ("list_take") ("list_count") ("is_unique") ("is_first") ("interpolate") ("hash") ("fused") ("extract_jsonpath" "arrow/io_json" "serde_json" "jsonpath_lib") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-core/temporal") ("dtype-struct" "polars-core/dtype-struct" "polars-core/temporal") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-core/temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-core/temporal") ("dtype-date" "polars-core/dtype-date" "polars-core/temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("diff" "polars-core/diff") ("cross_join" "polars-core/cross_join") ("chunked_ids" "polars-core/chunked_ids") ("binary_encoding" "base64" "hex") ("big_idx" "polars-core/bigidx") ("asof_join" "polars-core/asof_join") ("approx_unique"))))))

(define-public crate-polars-ops-0.30.0 (c (n "polars-ops") (v "0.30.0") (d (list (d (n "argminmax") (r "^0.6.1") (f (quote ("float"))) (k 0)) (d (n "arrow") (r "^0.17") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.30.0") (k 0)) (d (n "polars-core") (r "^0.30.0") (f (quote ("private"))) (k 0)) (d (n "polars-json") (r "^0.30.0") (o #t) (k 0)) (d (n "polars-utils") (r "^0.30.0") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)))) (h "0hlr304ircsjbh64yhal56zj826wdwb29cmgmdbi9ww8bdb32g6n") (f (quote (("top_k") ("to_dummies") ("strings" "polars-core/strings") ("string_justify" "polars-core/strings") ("string_from_radix" "polars-core/strings") ("string_encoding" "base64" "hex") ("simd" "argminmax/nightly_simd") ("semi_anti_join" "polars-core/semi_anti_join") ("search_sorted") ("round_series") ("rolling_window" "polars-core/rolling_window") ("propagate_nans") ("pivot" "polars-core/reinterpret") ("performant" "polars-core/performant" "fused") ("object" "polars-core/object") ("nightly" "polars-utils/nightly") ("moment" "polars-core/moment") ("merge_sorted") ("log") ("list_to_struct" "polars-core/dtype-struct") ("list_take") ("list_count") ("is_unique") ("is_first") ("interpolate") ("hash") ("fused") ("extract_jsonpath" "serde_json" "jsonpath_lib" "polars-json") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-core/temporal") ("dtype-struct" "polars-core/dtype-struct" "polars-core/temporal") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-core/temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-core/temporal") ("dtype-date" "polars-core/dtype-date" "polars-core/temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-array" "polars-core/dtype-array") ("diff" "polars-core/diff") ("cross_join" "polars-core/cross_join") ("chunked_ids" "polars-core/chunked_ids") ("binary_encoding" "base64" "hex") ("big_idx" "polars-core/bigidx") ("asof_join" "polars-core/asof_join") ("approx_unique"))))))

(define-public crate-polars-ops-0.31.0 (c (n "polars-ops") (v "0.31.0") (d (list (d (n "argminmax") (r "^0.6.1") (f (quote ("float"))) (k 0)) (d (n "arrow") (r "^0.17") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.31.0") (k 0)) (d (n "polars-core") (r "^0.31.0") (k 0)) (d (n "polars-json") (r "^0.31.0") (o #t) (k 0)) (d (n "polars-utils") (r "^0.31.0") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)))) (h "1h584s5zadqgqxlqpzw43yh51f74l28yvym376v26ks0h9r8xd45") (f (quote (("top_k") ("to_dummies") ("strings" "polars-core/strings") ("string_justify" "polars-core/strings") ("string_from_radix" "polars-core/strings") ("string_encoding" "base64" "hex") ("simd" "argminmax/nightly_simd") ("semi_anti_join" "polars-core/semi_anti_join") ("search_sorted") ("round_series") ("rolling_window" "polars-core/rolling_window") ("rle" "dtype-struct") ("propagate_nans") ("pivot" "polars-core/reinterpret") ("performant" "polars-core/performant" "fused") ("object" "polars-core/object") ("nightly" "polars-utils/nightly") ("moment" "polars-core/moment") ("merge_sorted") ("log") ("list_to_struct" "polars-core/dtype-struct") ("list_take") ("list_sets") ("list_count") ("list_any_all") ("is_unique") ("is_first") ("interpolate") ("hash") ("fused") ("extract_jsonpath" "serde_json" "jsonpath_lib" "polars-json") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-core/temporal") ("dtype-struct" "polars-core/dtype-struct" "polars-core/temporal") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-core/temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-core/temporal") ("dtype-date" "polars-core/dtype-date" "polars-core/temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-array" "polars-core/dtype-array") ("diff" "polars-core/diff") ("cutqcut" "dtype-categorical" "dtype-struct") ("cross_join" "polars-core/cross_join") ("chunked_ids" "polars-core/chunked_ids") ("binary_encoding" "base64" "hex") ("big_idx" "polars-core/bigidx") ("asof_join" "polars-core/asof_join") ("approx_unique"))))))

(define-public crate-polars-ops-0.31.1 (c (n "polars-ops") (v "0.31.1") (d (list (d (n "argminmax") (r "^0.6.1") (f (quote ("float"))) (k 0)) (d (n "arrow") (r "^0.17.2") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.31.1") (k 0)) (d (n "polars-core") (r "^0.31.1") (k 0)) (d (n "polars-json") (r "^0.31.1") (o #t) (k 0)) (d (n "polars-utils") (r "^0.31.1") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)))) (h "0vpx3zvhqpyfacqna5mvds88i2zvqnbh0hkhcs41ggx7hjy9bp86") (f (quote (("top_k") ("to_dummies") ("strings" "polars-core/strings") ("string_justify" "polars-core/strings") ("string_from_radix" "polars-core/strings") ("string_encoding" "base64" "hex") ("simd" "argminmax/nightly_simd") ("semi_anti_join" "polars-core/semi_anti_join") ("search_sorted") ("round_series") ("rolling_window" "polars-core/rolling_window") ("rle" "dtype-struct") ("propagate_nans") ("pivot" "polars-core/reinterpret") ("performant" "polars-core/performant" "fused") ("object" "polars-core/object") ("nightly" "polars-utils/nightly") ("moment" "polars-core/moment") ("merge_sorted") ("log") ("list_to_struct" "polars-core/dtype-struct") ("list_take") ("list_sets") ("list_count") ("list_any_all") ("is_unique") ("is_first") ("interpolate") ("hash") ("fused") ("extract_jsonpath" "serde_json" "jsonpath_lib" "polars-json") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-core/temporal") ("dtype-struct" "polars-core/dtype-struct" "polars-core/temporal") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-core/temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-core/temporal") ("dtype-date" "polars-core/dtype-date" "polars-core/temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-array" "polars-core/dtype-array") ("diff" "polars-core/diff") ("cutqcut" "dtype-categorical" "dtype-struct") ("cross_join" "polars-core/cross_join") ("chunked_ids" "polars-core/chunked_ids") ("binary_encoding" "base64" "hex") ("big_idx" "polars-core/bigidx") ("asof_join" "polars-core/asof_join") ("approx_unique"))))))

(define-public crate-polars-ops-0.32.0 (c (n "polars-ops") (v "0.32.0") (d (list (d (n "argminmax") (r "^0.6.1") (f (quote ("float"))) (k 0)) (d (n "arrow") (r "^0.17.4") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.32.0") (k 0)) (d (n "polars-core") (r "^0.32.0") (k 0)) (d (n "polars-json") (r "^0.32.0") (o #t) (k 0)) (d (n "polars-utils") (r "^0.32.0") (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "058xx46br2vi4nkxv5l2w8ssi75mbmf0rjf8pvil6wsrmq84krnl") (f (quote (("top_k") ("to_dummies") ("timezones" "chrono-tz" "chrono") ("strings" "polars-core/strings") ("string_justify" "polars-core/strings") ("string_from_radix" "polars-core/strings") ("string_encoding" "base64" "hex") ("simd" "argminmax/nightly_simd") ("semi_anti_join" "polars-core/semi_anti_join") ("search_sorted") ("round_series") ("rolling_window" "polars-core/rolling_window") ("rle" "dtype-struct") ("propagate_nans") ("pivot" "polars-core/reinterpret") ("performant" "polars-core/performant" "fused") ("object" "polars-core/object") ("nightly" "polars-utils/nightly") ("moment" "polars-core/moment") ("merge_sorted") ("log") ("list_to_struct" "polars-core/dtype-struct") ("list_take") ("list_sets") ("list_count") ("list_any_all") ("is_unique") ("is_first") ("interpolate") ("hash") ("fused") ("extract_jsonpath" "serde_json" "jsonpath_lib" "polars-json") ("extract_groups" "dtype-struct" "polars-core/regex") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-core/temporal") ("dtype-struct" "polars-core/dtype-struct" "polars-core/temporal") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-core/temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-core/temporal") ("dtype-date" "polars-core/dtype-date" "polars-core/temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-array" "polars-core/dtype-array") ("diff" "polars-core/diff") ("cutqcut" "dtype-categorical" "dtype-struct") ("cross_join" "polars-core/cross_join") ("chunked_ids" "polars-core/chunked_ids") ("binary_encoding" "base64" "hex") ("big_idx" "polars-core/bigidx") ("asof_join" "polars-core/asof_join") ("approx_unique"))))))

(define-public crate-polars-ops-0.32.1 (c (n "polars-ops") (v "0.32.1") (d (list (d (n "argminmax") (r "^0.6.1") (f (quote ("float"))) (k 0)) (d (n "arrow") (r "^0.17.4") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.32.1") (k 0)) (d (n "polars-core") (r "^0.32.1") (k 0)) (d (n "polars-json") (r "^0.32.1") (o #t) (k 0)) (d (n "polars-utils") (r "^0.32.1") (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "1l4yhkcd82g1qjpnmkavqn93q0w0443a01f2vyp2sb9hjrf5f9g8") (f (quote (("top_k") ("to_dummies") ("timezones" "chrono-tz" "chrono") ("strings" "polars-core/strings") ("string_justify" "polars-core/strings") ("string_from_radix" "polars-core/strings") ("string_encoding" "base64" "hex") ("simd" "argminmax/nightly_simd") ("semi_anti_join" "polars-core/semi_anti_join") ("search_sorted") ("round_series") ("rolling_window" "polars-core/rolling_window") ("rle" "dtype-struct") ("propagate_nans") ("pivot" "polars-core/reinterpret") ("performant" "polars-core/performant" "fused") ("object" "polars-core/object") ("nightly" "polars-utils/nightly") ("moment" "polars-core/moment") ("merge_sorted") ("log") ("list_to_struct" "polars-core/dtype-struct") ("list_take") ("list_sets") ("list_count") ("list_any_all") ("is_unique") ("is_first") ("interpolate") ("hash") ("fused") ("extract_jsonpath" "serde_json" "jsonpath_lib" "polars-json") ("extract_groups" "dtype-struct" "polars-core/regex") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-core/temporal") ("dtype-struct" "polars-core/dtype-struct" "polars-core/temporal") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-core/temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-core/temporal") ("dtype-date" "polars-core/dtype-date" "polars-core/temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-array" "polars-core/dtype-array") ("diff" "polars-core/diff") ("cutqcut" "dtype-categorical" "dtype-struct") ("cross_join" "polars-core/cross_join") ("chunked_ids" "polars-core/chunked_ids") ("binary_encoding" "base64" "hex") ("big_idx" "polars-core/bigidx") ("asof_join" "polars-core/asof_join") ("approx_unique"))))))

(define-public crate-polars-ops-0.33.0 (c (n "polars-ops") (v "0.33.0") (d (list (d (n "argminmax") (r "^0.6.1") (f (quote ("float"))) (k 0)) (d (n "arrow") (r "^0.18.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.6.1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.33.0") (k 0)) (d (n "polars-core") (r "^0.33.0") (f (quote ("algorithm_group_by" "algorithm_join"))) (k 0)) (d (n "polars-json") (r "^0.33.0") (o #t) (k 0)) (d (n "polars-utils") (r "^0.33.0") (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "11p72nmp11x0sjlp920l09dgp5fqy24xf9iw42m1wg43jfr45s02") (f (quote (("top_k") ("to_dummies") ("timezones" "chrono-tz" "chrono") ("strings" "polars-core/strings") ("string_justify" "polars-core/strings") ("string_from_radix" "polars-core/strings") ("string_encoding" "base64" "hex") ("simd" "argminmax/nightly_simd") ("semi_anti_join" "polars-core/semi_anti_join") ("search_sorted") ("round_series") ("rolling_window" "polars-core/rolling_window") ("rle" "dtype-struct") ("propagate_nans") ("pivot" "polars-core/reinterpret") ("performant" "polars-core/performant" "fused") ("object" "polars-core/object") ("nightly" "polars-utils/nightly") ("moment" "polars-core/moment") ("merge_sorted") ("log") ("list_to_struct" "polars-core/dtype-struct") ("list_take") ("list_sets") ("list_count") ("list_any_all") ("is_unique") ("is_last_distinct") ("is_in" "polars-core/reinterpret") ("is_first_distinct") ("interpolate") ("hash") ("group_by_list" "polars-core/group_by_list") ("fused") ("extract_jsonpath" "serde_json" "jsonpath_lib" "polars-json") ("extract_groups" "dtype-struct" "polars-core/regex") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-core/temporal") ("dtype-struct" "polars-core/dtype-struct" "polars-core/temporal") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-core/temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-core/temporal") ("dtype-date" "polars-core/dtype-date" "polars-core/temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-array" "polars-core/dtype-array") ("diff" "polars-core/diff") ("cutqcut" "dtype-categorical" "dtype-struct") ("cross_join" "polars-core/cross_join") ("convert_index") ("chunked_ids" "polars-core/chunked_ids") ("binary_encoding" "base64" "hex") ("big_idx" "polars-core/bigidx") ("asof_join" "polars-core/asof_join") ("approx_unique"))))))

(define-public crate-polars-ops-0.33.1 (c (n "polars-ops") (v "0.33.1") (d (list (d (n "argminmax") (r "^0.6.1") (f (quote ("float"))) (k 0)) (d (n "arrow") (r "^0.18.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.6.1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.33.1") (k 0)) (d (n "polars-core") (r "^0.33.1") (f (quote ("algorithm_group_by" "algorithm_join"))) (k 0)) (d (n "polars-json") (r "^0.33.1") (o #t) (k 0)) (d (n "polars-utils") (r "^0.33.1") (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "1m5awyiynkrvf48a8298np7mwxghr3hzihi3ql7cxfaxnh4z4yb5") (f (quote (("top_k") ("to_dummies") ("timezones" "chrono-tz" "chrono") ("strings" "polars-core/strings") ("string_justify" "polars-core/strings") ("string_from_radix" "polars-core/strings") ("string_encoding" "base64" "hex") ("simd" "argminmax/nightly_simd") ("semi_anti_join" "polars-core/semi_anti_join") ("search_sorted") ("round_series") ("rolling_window" "polars-core/rolling_window") ("rle" "dtype-struct") ("propagate_nans") ("pivot" "polars-core/reinterpret") ("performant" "polars-core/performant" "fused") ("object" "polars-core/object") ("nightly" "polars-utils/nightly") ("moment" "polars-core/moment") ("merge_sorted") ("log") ("list_to_struct" "polars-core/dtype-struct") ("list_take") ("list_sets") ("list_count") ("list_any_all") ("is_unique") ("is_last_distinct") ("is_in" "polars-core/reinterpret") ("is_first_distinct") ("interpolate") ("hash") ("group_by_list" "polars-core/group_by_list") ("fused") ("extract_jsonpath" "serde_json" "jsonpath_lib" "polars-json") ("extract_groups" "dtype-struct" "polars-core/regex") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-core/temporal") ("dtype-struct" "polars-core/dtype-struct" "polars-core/temporal") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-core/temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-core/temporal") ("dtype-date" "polars-core/dtype-date" "polars-core/temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-array" "polars-core/dtype-array") ("diff" "polars-core/diff") ("cutqcut" "dtype-categorical" "dtype-struct") ("cross_join" "polars-core/cross_join") ("convert_index") ("chunked_ids" "polars-core/chunked_ids") ("binary_encoding" "base64" "hex") ("big_idx" "polars-core/bigidx") ("asof_join" "polars-core/asof_join") ("approx_unique"))))))

(define-public crate-polars-ops-0.33.2 (c (n "polars-ops") (v "0.33.2") (d (list (d (n "argminmax") (r "^0.6.1") (f (quote ("float"))) (k 0)) (d (n "arrow") (r "^0.18.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.6.1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.33.2") (k 0)) (d (n "polars-core") (r "^0.33.2") (f (quote ("algorithm_group_by" "algorithm_join"))) (k 0)) (d (n "polars-json") (r "^0.33.2") (o #t) (k 0)) (d (n "polars-utils") (r "^0.33.2") (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "0lj2rv391qwqnrs1j3g8hzbdgz8nw4w9cnggz528181c9jydfh3p") (f (quote (("top_k") ("to_dummies") ("timezones" "chrono-tz" "chrono") ("strings" "polars-core/strings") ("string_justify" "polars-core/strings") ("string_from_radix" "polars-core/strings") ("string_encoding" "base64" "hex") ("simd" "argminmax/nightly_simd") ("semi_anti_join" "polars-core/semi_anti_join") ("search_sorted") ("round_series") ("rolling_window" "polars-core/rolling_window") ("rle" "dtype-struct") ("propagate_nans") ("pivot" "polars-core/reinterpret") ("performant" "polars-core/performant" "fused") ("object" "polars-core/object") ("nightly" "polars-utils/nightly") ("moment" "polars-core/moment") ("merge_sorted") ("log") ("list_to_struct" "polars-core/dtype-struct") ("list_take") ("list_sets") ("list_count") ("list_any_all") ("is_unique") ("is_last_distinct") ("is_in" "polars-core/reinterpret") ("is_first_distinct") ("interpolate") ("hash") ("group_by_list" "polars-core/group_by_list") ("fused") ("extract_jsonpath" "serde_json" "jsonpath_lib" "polars-json") ("extract_groups" "dtype-struct" "polars-core/regex") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-core/temporal") ("dtype-struct" "polars-core/dtype-struct" "polars-core/temporal") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-core/temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-core/temporal") ("dtype-date" "polars-core/dtype-date" "polars-core/temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-array" "polars-core/dtype-array") ("diff" "polars-core/diff") ("cutqcut" "dtype-categorical" "dtype-struct") ("cross_join" "polars-core/cross_join") ("convert_index") ("chunked_ids" "polars-core/chunked_ids") ("binary_encoding" "base64" "hex") ("big_idx" "polars-core/bigidx") ("asof_join" "polars-core/asof_join") ("approx_unique"))))))

(define-public crate-polars-ops-0.34.0 (c (n "polars-ops") (v "0.34.0") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "argminmax") (r "^0.6.1") (f (quote ("float"))) (k 0)) (d (n "arrow") (r "^0.34.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "base64") (r "^0.21.2") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-core") (r "^0.34.0") (f (quote ("algorithm_group_by"))) (k 0)) (d (n "polars-error") (r "^0.34.0") (k 0)) (d (n "polars-json") (r "^0.34.0") (o #t) (k 0)) (d (n "polars-utils") (r "^0.34.0") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "1hzs753i4c2ai45m4cfh5885djcd27hygy8k2xh7yyhay1sp24c0") (f (quote (("zip_with" "polars-core/zip_with") ("unique_counts") ("top_k") ("to_dummies") ("timezones" "chrono-tz" "chrono") ("strings" "polars-core/strings") ("string_justify" "polars-core/strings") ("string_from_radix" "polars-core/strings") ("string_encoding" "base64" "hex") ("simd" "argminmax/nightly_simd") ("semi_anti_join") ("search_sorted") ("round_series") ("rolling_window" "polars-core/rolling_window") ("rle" "dtype-struct") ("repeat_by") ("rank" "rand") ("random" "rand" "rand_distr") ("propagate_nans") ("pivot" "polars-core/reinterpret") ("performant" "polars-core/performant" "fused") ("peaks") ("pct_change" "diff") ("object" "polars-core/object") ("nightly" "polars-utils/nightly") ("moment") ("mode") ("merge_sorted") ("log") ("list_to_struct" "polars-core/dtype-struct") ("list_take") ("list_sets") ("list_sample") ("list_drop_nulls") ("list_count") ("list_any_all") ("is_unique") ("is_last_distinct") ("is_in" "polars-core/reinterpret") ("is_first_distinct") ("interpolate") ("hash") ("group_by_list" "polars-core/group_by_list") ("fused") ("extract_jsonpath" "serde_json" "jsonpath_lib" "polars-json") ("extract_groups" "dtype-struct" "polars-core/regex") ("ewma") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-core/temporal") ("dtype-struct" "polars-core/dtype-struct" "polars-core/temporal") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-core/temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-core/temporal") ("dtype-date" "polars-core/dtype-date" "polars-core/temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-array" "polars-core/dtype-array") ("diff") ("cutqcut" "dtype-categorical" "dtype-struct") ("cum_agg") ("cross_join") ("convert_index") ("chunked_ids" "polars-core/chunked_ids") ("binary_encoding" "base64" "hex") ("big_idx" "polars-core/bigidx") ("asof_join" "polars-core/asof_join") ("approx_unique"))))))

(define-public crate-polars-ops-0.34.1 (c (n "polars-ops") (v "0.34.1") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "argminmax") (r "^0.6.1") (f (quote ("float"))) (k 0)) (d (n "arrow") (r "^0.34.1") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "base64") (r "^0.21.2") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-core") (r "^0.34.1") (f (quote ("algorithm_group_by"))) (k 0)) (d (n "polars-error") (r "^0.34.1") (k 0)) (d (n "polars-json") (r "^0.34.1") (o #t) (k 0)) (d (n "polars-utils") (r "^0.34.1") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "058v80fnrcmqq7z3jyf4nl0gixh8ya4blr2sa61szb05ywsgb6ig") (f (quote (("zip_with" "polars-core/zip_with") ("unique_counts") ("top_k") ("to_dummies") ("timezones" "chrono-tz" "chrono") ("strings" "polars-core/strings") ("string_pad" "polars-core/strings") ("string_from_radix" "polars-core/strings") ("string_encoding" "base64" "hex") ("simd" "argminmax/nightly_simd") ("semi_anti_join") ("search_sorted") ("round_series") ("rolling_window" "polars-core/rolling_window") ("rle" "dtype-struct") ("repeat_by") ("rank" "rand") ("random" "rand" "rand_distr") ("propagate_nans") ("pivot" "polars-core/reinterpret") ("performant" "polars-core/performant" "fused") ("peaks") ("pct_change" "diff") ("object" "polars-core/object") ("nightly" "polars-utils/nightly") ("moment") ("mode") ("merge_sorted") ("log") ("list_to_struct" "polars-core/dtype-struct") ("list_take") ("list_sets") ("list_sample") ("list_drop_nulls") ("list_count") ("list_any_all") ("is_unique") ("is_last_distinct") ("is_in" "polars-core/reinterpret") ("is_first_distinct") ("interpolate") ("hash") ("group_by_list" "polars-core/group_by_list") ("fused") ("extract_jsonpath" "serde_json" "jsonpath_lib" "polars-json") ("extract_groups" "dtype-struct" "polars-core/regex") ("ewma") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-core/temporal") ("dtype-struct" "polars-core/dtype-struct" "polars-core/temporal") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-core/temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-core/temporal") ("dtype-date" "polars-core/dtype-date" "polars-core/temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-array" "polars-core/dtype-array") ("diff") ("cutqcut" "dtype-categorical" "dtype-struct") ("cum_agg") ("cross_join") ("convert_index") ("chunked_ids" "polars-core/chunked_ids") ("binary_encoding" "base64" "hex") ("big_idx" "polars-core/bigidx") ("asof_join" "polars-core/asof_join") ("approx_unique"))))))

(define-public crate-polars-ops-0.34.2 (c (n "polars-ops") (v "0.34.2") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "argminmax") (r "^0.6.1") (f (quote ("float"))) (k 0)) (d (n "arrow") (r "^0.34.2") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "base64") (r "^0.21.2") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-core") (r "^0.34.2") (f (quote ("algorithm_group_by"))) (k 0)) (d (n "polars-error") (r "^0.34.2") (k 0)) (d (n "polars-json") (r "^0.34.2") (o #t) (k 0)) (d (n "polars-utils") (r "^0.34.2") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "14l2vs4dpf509af7mzkc9va2vrj00zlcxbj3km4miwryd9xd7qhg") (f (quote (("zip_with" "polars-core/zip_with") ("unique_counts") ("top_k") ("to_dummies") ("timezones" "chrono-tz" "chrono") ("strings" "polars-core/strings") ("string_pad" "polars-core/strings") ("string_from_radix" "polars-core/strings") ("string_encoding" "base64" "hex") ("simd" "argminmax/nightly_simd") ("semi_anti_join") ("search_sorted") ("round_series") ("rolling_window" "polars-core/rolling_window") ("rle" "dtype-struct") ("repeat_by") ("rank" "rand") ("random" "rand" "rand_distr") ("propagate_nans") ("pivot" "polars-core/reinterpret") ("performant" "polars-core/performant" "fused") ("peaks") ("pct_change" "diff") ("object" "polars-core/object") ("nightly" "polars-utils/nightly") ("moment") ("mode") ("merge_sorted") ("log") ("list_to_struct" "polars-core/dtype-struct") ("list_take") ("list_sets") ("list_sample") ("list_drop_nulls") ("list_count") ("list_any_all") ("is_unique") ("is_last_distinct") ("is_in" "polars-core/reinterpret") ("is_first_distinct") ("interpolate") ("hash") ("group_by_list" "polars-core/group_by_list") ("fused") ("extract_jsonpath" "serde_json" "jsonpath_lib" "polars-json") ("extract_groups" "dtype-struct" "polars-core/regex") ("ewma") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-core/temporal") ("dtype-struct" "polars-core/dtype-struct" "polars-core/temporal") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-core/temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-core/temporal") ("dtype-date" "polars-core/dtype-date" "polars-core/temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-array" "polars-core/dtype-array") ("diff") ("cutqcut" "dtype-categorical" "dtype-struct") ("cum_agg") ("cross_join") ("convert_index") ("chunked_ids" "polars-core/chunked_ids") ("binary_encoding" "base64" "hex") ("big_idx" "polars-core/bigidx") ("asof_join" "polars-core/asof_join") ("approx_unique"))))))

(define-public crate-polars-ops-0.35.0 (c (n "polars-ops") (v "0.35.0") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "argminmax") (r "^0.6.1") (f (quote ("float"))) (k 0)) (d (n "arrow") (r "^0.35.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "base64") (r "^0.21.2") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-core") (r "^0.35.0") (f (quote ("algorithm_group_by"))) (k 0)) (d (n "polars-error") (r "^0.35.0") (k 0)) (d (n "polars-json") (r "^0.35.0") (o #t) (k 0)) (d (n "polars-utils") (r "^0.35.0") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "13z63gh0jhrqj8zxsair5m7k3r7jzf4k5y1rns42sm5nw7lgggqi") (f (quote (("zip_with" "polars-core/zip_with") ("unique_counts") ("top_k") ("to_dummies") ("timezones" "chrono-tz" "chrono") ("strings" "polars-core/strings") ("string_to_integer" "polars-core/strings") ("string_pad" "polars-core/strings") ("string_encoding" "base64" "hex") ("simd" "argminmax/nightly_simd") ("semi_anti_join") ("search_sorted") ("round_series") ("rolling_window" "polars-core/rolling_window") ("rle" "dtype-struct") ("repeat_by") ("rank" "rand") ("random" "rand" "rand_distr") ("propagate_nans") ("pivot" "polars-core/reinterpret") ("performant" "polars-core/performant" "fused") ("peaks") ("pct_change" "diff") ("object" "polars-core/object") ("nightly" "polars-utils/nightly") ("moment") ("mode") ("merge_sorted") ("log") ("list_to_struct" "polars-core/dtype-struct") ("list_sets") ("list_sample") ("list_gather") ("list_drop_nulls") ("list_count") ("list_any_all") ("is_unique") ("is_last_distinct") ("is_in" "polars-core/reinterpret") ("is_first_distinct") ("interpolate") ("hash") ("group_by_list" "polars-core/group_by_list") ("fused") ("extract_jsonpath" "serde_json" "jsonpath_lib" "polars-json") ("extract_groups" "dtype-struct" "polars-core/regex") ("ewma") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-core/temporal") ("dtype-struct" "polars-core/dtype-struct" "polars-core/temporal") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-core/temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-core/temporal") ("dtype-date" "polars-core/dtype-date" "polars-core/temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-array" "polars-core/dtype-array") ("diff") ("cutqcut" "dtype-categorical" "dtype-struct") ("cum_agg") ("cross_join") ("cov") ("convert_index") ("chunked_ids" "polars-core/chunked_ids") ("binary_encoding" "base64" "hex") ("big_idx" "polars-core/bigidx") ("asof_join" "polars-core/asof_join") ("approx_unique") ("abs"))))))

(define-public crate-polars-ops-0.35.1 (c (n "polars-ops") (v "0.35.1") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "argminmax") (r "^0.6.1") (f (quote ("float"))) (k 0)) (d (n "arrow") (r "^0.35.1") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "base64") (r "^0.21.2") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-core") (r "^0.35.1") (f (quote ("algorithm_group_by"))) (k 0)) (d (n "polars-error") (r "^0.35.1") (k 0)) (d (n "polars-json") (r "^0.35.1") (o #t) (k 0)) (d (n "polars-utils") (r "^0.35.1") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "18k6mxrjqs3jblkb7kd9xn98vci70vbbfsx8ig6i04y8pr2z6afq") (f (quote (("zip_with" "polars-core/zip_with") ("unique_counts") ("top_k") ("to_dummies") ("timezones" "chrono-tz" "chrono") ("strings" "polars-core/strings") ("string_to_integer" "polars-core/strings") ("string_pad" "polars-core/strings") ("string_encoding" "base64" "hex") ("simd" "argminmax/nightly_simd") ("semi_anti_join") ("search_sorted") ("round_series") ("rolling_window" "polars-core/rolling_window") ("rle" "dtype-struct") ("repeat_by") ("rank" "rand") ("random" "rand" "rand_distr") ("propagate_nans") ("pivot" "polars-core/reinterpret") ("performant" "polars-core/performant" "fused") ("peaks") ("pct_change" "diff") ("object" "polars-core/object") ("nightly" "polars-utils/nightly") ("moment") ("mode") ("merge_sorted") ("log") ("list_to_struct" "polars-core/dtype-struct") ("list_sets") ("list_sample") ("list_gather") ("list_drop_nulls") ("list_count") ("list_any_all") ("is_unique") ("is_last_distinct") ("is_in" "polars-core/reinterpret") ("is_first_distinct") ("interpolate") ("hash") ("group_by_list" "polars-core/group_by_list") ("fused") ("extract_jsonpath" "serde_json" "jsonpath_lib" "polars-json") ("extract_groups" "dtype-struct" "polars-core/regex") ("ewma") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-core/temporal") ("dtype-struct" "polars-core/dtype-struct" "polars-core/temporal") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-core/temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-core/temporal") ("dtype-date" "polars-core/dtype-date" "polars-core/temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-array" "polars-core/dtype-array") ("diff") ("cutqcut" "dtype-categorical" "dtype-struct") ("cum_agg") ("cross_join") ("cov") ("convert_index") ("chunked_ids" "polars-core/chunked_ids") ("binary_encoding" "base64" "hex") ("big_idx" "polars-core/bigidx") ("asof_join" "polars-core/asof_join") ("approx_unique") ("abs"))))))

(define-public crate-polars-ops-0.35.2 (c (n "polars-ops") (v "0.35.2") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "argminmax") (r "^0.6.1") (f (quote ("float"))) (k 0)) (d (n "arrow") (r "^0.35.2") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "base64") (r "^0.21.2") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-core") (r "^0.35.2") (f (quote ("algorithm_group_by"))) (k 0)) (d (n "polars-error") (r "^0.35.2") (k 0)) (d (n "polars-json") (r "^0.35.2") (o #t) (k 0)) (d (n "polars-utils") (r "^0.35.2") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "1681873jmwsl1sj4m8h92zvxi77kpgrf006pz1sx4m5qkcp45bc2") (f (quote (("zip_with" "polars-core/zip_with") ("unique_counts") ("top_k") ("to_dummies") ("timezones" "chrono-tz" "chrono") ("strings" "polars-core/strings") ("string_to_integer" "polars-core/strings") ("string_pad" "polars-core/strings") ("string_encoding" "base64" "hex") ("simd" "argminmax/nightly_simd") ("semi_anti_join") ("search_sorted") ("round_series") ("rolling_window" "polars-core/rolling_window") ("rle" "dtype-struct") ("repeat_by") ("rank" "rand") ("random" "rand" "rand_distr") ("propagate_nans") ("pivot" "polars-core/reinterpret") ("performant" "polars-core/performant" "fused") ("peaks") ("pct_change" "diff") ("object" "polars-core/object") ("nightly" "polars-utils/nightly") ("moment") ("mode") ("merge_sorted") ("log") ("list_to_struct" "polars-core/dtype-struct") ("list_sets") ("list_sample") ("list_gather") ("list_drop_nulls") ("list_count") ("list_any_all") ("is_unique") ("is_last_distinct") ("is_in" "polars-core/reinterpret") ("is_first_distinct") ("interpolate") ("hash") ("group_by_list" "polars-core/group_by_list") ("fused") ("extract_jsonpath" "serde_json" "jsonpath_lib" "polars-json") ("extract_groups" "dtype-struct" "polars-core/regex") ("ewma") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-core/temporal") ("dtype-struct" "polars-core/dtype-struct" "polars-core/temporal") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-core/temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-core/temporal") ("dtype-date" "polars-core/dtype-date" "polars-core/temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-array" "polars-core/dtype-array") ("diff") ("cutqcut" "dtype-categorical" "dtype-struct") ("cum_agg") ("cross_join") ("cov") ("convert_index") ("chunked_ids" "polars-core/chunked_ids") ("binary_encoding" "base64" "hex") ("big_idx" "polars-core/bigidx") ("asof_join" "polars-core/asof_join") ("approx_unique") ("abs"))))))

(define-public crate-polars-ops-0.35.3 (c (n "polars-ops") (v "0.35.3") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "argminmax") (r "^0.6.1") (f (quote ("float"))) (k 0)) (d (n "arrow") (r "^0.35.3") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "base64") (r "^0.21.2") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-core") (r "^0.35.3") (f (quote ("algorithm_group_by"))) (k 0)) (d (n "polars-error") (r "^0.35.3") (k 0)) (d (n "polars-json") (r "^0.35.3") (o #t) (k 0)) (d (n "polars-utils") (r "^0.35.3") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "19r2jj44v2f16sn8q9shg38i4d83ksip1k517pwzg8zvrmbg75hw") (f (quote (("zip_with" "polars-core/zip_with") ("unique_counts") ("top_k") ("to_dummies") ("timezones" "chrono-tz" "chrono") ("strings" "polars-core/strings") ("string_to_integer" "polars-core/strings") ("string_pad" "polars-core/strings") ("string_encoding" "base64" "hex") ("simd" "argminmax/nightly_simd") ("semi_anti_join") ("search_sorted") ("round_series") ("rolling_window" "polars-core/rolling_window") ("rle" "dtype-struct") ("repeat_by") ("rank" "rand") ("random" "rand" "rand_distr") ("propagate_nans") ("pivot" "polars-core/reinterpret") ("performant" "polars-core/performant" "fused") ("peaks") ("pct_change" "diff") ("object" "polars-core/object") ("nightly" "polars-utils/nightly") ("moment") ("mode") ("merge_sorted") ("log") ("list_to_struct" "polars-core/dtype-struct") ("list_sets") ("list_sample") ("list_gather") ("list_drop_nulls") ("list_count") ("list_any_all") ("is_unique") ("is_last_distinct") ("is_in" "polars-core/reinterpret") ("is_first_distinct") ("interpolate") ("hash") ("group_by_list" "polars-core/group_by_list") ("fused") ("extract_jsonpath" "serde_json" "jsonpath_lib" "polars-json") ("extract_groups" "dtype-struct" "polars-core/regex") ("ewma") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-core/temporal") ("dtype-struct" "polars-core/dtype-struct" "polars-core/temporal") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-core/temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-core/temporal") ("dtype-date" "polars-core/dtype-date" "polars-core/temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-array" "polars-core/dtype-array") ("diff") ("cutqcut" "dtype-categorical" "dtype-struct") ("cum_agg") ("cross_join") ("cov") ("convert_index") ("chunked_ids" "polars-core/chunked_ids") ("binary_encoding" "base64" "hex") ("big_idx" "polars-core/bigidx") ("asof_join" "polars-core/asof_join") ("approx_unique") ("abs"))))))

(define-public crate-polars-ops-0.35.4 (c (n "polars-ops") (v "0.35.4") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "argminmax") (r "^0.6.1") (f (quote ("float"))) (k 0)) (d (n "arrow") (r "^0.35.4") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "base64") (r "^0.21.2") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-core") (r "^0.35.4") (f (quote ("algorithm_group_by"))) (k 0)) (d (n "polars-error") (r "^0.35.4") (k 0)) (d (n "polars-json") (r "^0.35.4") (o #t) (k 0)) (d (n "polars-utils") (r "^0.35.4") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "0dpnxcgc57k8xvp4jmjhz8jwz8rclf62h22zjiwpzaka54cb4zhs") (f (quote (("zip_with" "polars-core/zip_with") ("unique_counts") ("top_k") ("to_dummies") ("timezones" "chrono-tz" "chrono") ("strings" "polars-core/strings") ("string_to_integer" "polars-core/strings") ("string_pad" "polars-core/strings") ("string_encoding" "base64" "hex") ("simd" "argminmax/nightly_simd") ("semi_anti_join") ("search_sorted") ("round_series") ("rolling_window" "polars-core/rolling_window") ("rle" "dtype-struct") ("repeat_by") ("rank" "rand") ("random" "rand" "rand_distr") ("propagate_nans") ("pivot" "polars-core/reinterpret") ("performant" "polars-core/performant" "fused") ("peaks") ("pct_change" "diff") ("object" "polars-core/object") ("nightly" "polars-utils/nightly") ("moment") ("mode") ("merge_sorted") ("log") ("list_to_struct" "polars-core/dtype-struct") ("list_sets") ("list_sample") ("list_gather") ("list_drop_nulls") ("list_count") ("list_any_all") ("is_unique") ("is_last_distinct") ("is_in" "polars-core/reinterpret") ("is_first_distinct") ("interpolate") ("hash") ("group_by_list" "polars-core/group_by_list") ("fused") ("extract_jsonpath" "serde_json" "jsonpath_lib" "polars-json") ("extract_groups" "dtype-struct" "polars-core/regex") ("ewma") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-core/temporal") ("dtype-struct" "polars-core/dtype-struct" "polars-core/temporal") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-core/temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-core/temporal") ("dtype-date" "polars-core/dtype-date" "polars-core/temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-array" "polars-core/dtype-array") ("diff") ("cutqcut" "dtype-categorical" "dtype-struct") ("cum_agg") ("cross_join") ("cov") ("convert_index") ("chunked_ids" "polars-core/chunked_ids") ("binary_encoding" "base64" "hex") ("big_idx" "polars-core/bigidx") ("asof_join" "polars-core/asof_join") ("approx_unique") ("abs"))))))

(define-public crate-polars-ops-0.36.0 (c (n "polars-ops") (v "0.36.0") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "aho-corasick") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "argminmax") (r "^0.6.1") (f (quote ("float"))) (k 0)) (d (n "arrow") (r "^0.36.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "base64") (r "^0.21.2") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-compute") (r "^0.36.0") (k 0)) (d (n "polars-core") (r "^0.36.0") (f (quote ("algorithm_group_by" "zip_with"))) (k 0)) (d (n "polars-error") (r "^0.36.0") (k 0)) (d (n "polars-json") (r "^0.36.0") (o #t) (k 0)) (d (n "polars-utils") (r "^0.36.0") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "unicode-reverse") (r "^1.0.8") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "0209pk2bcn825ic5hh4akla8y4zpg3xs0dq98f4sx6hzvl98c92x") (f (quote (("unique_counts") ("top_k") ("to_dummies") ("timezones" "chrono-tz" "chrono") ("strings" "polars-core/strings") ("string_to_integer" "polars-core/strings") ("string_reverse" "polars-core/strings" "unicode-reverse") ("string_pad" "polars-core/strings") ("string_encoding" "base64" "hex") ("simd" "argminmax/nightly_simd") ("semi_anti_join") ("search_sorted") ("round_series") ("rolling_window" "polars-core/rolling_window") ("rle" "dtype-struct") ("replace" "is_in") ("repeat_by") ("rank" "rand") ("random" "rand" "rand_distr") ("propagate_nans") ("pivot" "polars-core/reinterpret") ("performant" "polars-core/performant" "fused") ("peaks") ("pct_change" "diff") ("object" "polars-core/object") ("nightly" "polars-utils/nightly") ("moment") ("mode") ("merge_sorted") ("log") ("list_to_struct" "polars-core/dtype-struct") ("list_sets") ("list_sample") ("list_gather") ("list_drop_nulls") ("list_count") ("list_any_all") ("is_unique") ("is_last_distinct") ("is_in" "polars-core/reinterpret") ("is_first_distinct") ("interpolate") ("hist" "dtype-categorical" "dtype-struct") ("hash") ("group_by_list" "polars-core/group_by_list") ("gather") ("fused") ("find_many" "aho-corasick") ("extract_jsonpath" "serde_json" "jsonpath_lib" "polars-json") ("extract_groups" "dtype-struct" "polars-core/regex") ("ewma") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-core/temporal") ("dtype-struct" "polars-core/dtype-struct" "polars-core/temporal") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-core/temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-core/temporal") ("dtype-date" "polars-core/dtype-date" "polars-core/temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-array" "polars-core/dtype-array") ("diff") ("cutqcut" "dtype-categorical" "dtype-struct") ("cum_agg") ("cross_join") ("cov") ("chunked_ids" "polars-core/chunked_ids") ("binary_encoding" "base64" "hex") ("big_idx" "polars-core/bigidx") ("asof_join" "polars-core/asof_join") ("array_any_all" "dtype-array") ("approx_unique") ("abs"))))))

(define-public crate-polars-ops-0.36.2 (c (n "polars-ops") (v "0.36.2") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "aho-corasick") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "argminmax") (r "^0.6.1") (f (quote ("float"))) (k 0)) (d (n "arrow") (r "^0.36.2") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "base64") (r "^0.21.2") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-compute") (r "^0.36.2") (k 0)) (d (n "polars-core") (r "^0.36.2") (f (quote ("algorithm_group_by" "zip_with"))) (k 0)) (d (n "polars-error") (r "^0.36.2") (k 0)) (d (n "polars-json") (r "^0.36.2") (o #t) (k 0)) (d (n "polars-utils") (r "^0.36.2") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "unicode-reverse") (r "^1.0.8") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "13m7dh4vpdmcah04a7kql933l7y7045f0hybbmgff4dbav2ay29f") (f (quote (("unique_counts") ("top_k") ("to_dummies") ("timezones" "chrono-tz" "chrono") ("strings" "polars-core/strings") ("string_to_integer" "polars-core/strings") ("string_reverse" "polars-core/strings" "unicode-reverse") ("string_pad" "polars-core/strings") ("string_encoding" "base64" "hex") ("simd" "argminmax/nightly_simd") ("semi_anti_join") ("search_sorted") ("round_series") ("rolling_window" "polars-core/rolling_window") ("rle" "dtype-struct") ("replace" "is_in") ("repeat_by") ("rank" "rand") ("random" "rand" "rand_distr") ("propagate_nans") ("pivot" "polars-core/reinterpret") ("performant" "polars-core/performant" "fused") ("peaks") ("pct_change" "diff") ("object" "polars-core/object") ("nightly" "polars-utils/nightly") ("moment") ("mode") ("merge_sorted") ("log") ("list_to_struct" "polars-core/dtype-struct") ("list_sets") ("list_sample") ("list_gather") ("list_drop_nulls") ("list_count") ("list_any_all") ("is_unique") ("is_last_distinct") ("is_in" "polars-core/reinterpret") ("is_first_distinct") ("interpolate") ("hist" "dtype-categorical" "dtype-struct") ("hash") ("group_by_list" "polars-core/group_by_list") ("gather") ("fused") ("find_many" "aho-corasick") ("extract_jsonpath" "serde_json" "jsonpath_lib" "polars-json") ("extract_groups" "dtype-struct" "polars-core/regex") ("ewma") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-core/temporal") ("dtype-struct" "polars-core/dtype-struct" "polars-core/temporal") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-core/temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-core/temporal") ("dtype-date" "polars-core/dtype-date" "polars-core/temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-array" "polars-core/dtype-array") ("diff") ("cutqcut" "dtype-categorical" "dtype-struct") ("cum_agg") ("cross_join") ("cov") ("chunked_ids" "polars-core/chunked_ids") ("binary_encoding" "base64" "hex") ("big_idx" "polars-core/bigidx") ("asof_join" "polars-core/asof_join") ("array_any_all" "dtype-array") ("approx_unique") ("abs"))))))

(define-public crate-polars-ops-0.37.0 (c (n "polars-ops") (v "0.37.0") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "aho-corasick") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "argminmax") (r "^0.6.1") (f (quote ("float"))) (k 0)) (d (n "arrow") (r "^0.37.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "base64") (r "^0.21.2") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-compute") (r "^0.37.0") (k 0)) (d (n "polars-core") (r "^0.37.0") (f (quote ("algorithm_group_by" "zip_with"))) (k 0)) (d (n "polars-error") (r "^0.37.0") (k 0)) (d (n "polars-json") (r "^0.37.0") (o #t) (k 0)) (d (n "polars-utils") (r "^0.37.0") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "unicode-reverse") (r "^1.0.8") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "02ii63ba0l6zgilb4id1lx4s7hc1654hlg20srph3pqsbvyzb5b3") (f (quote (("unique_counts") ("top_k") ("to_dummies") ("timezones" "chrono-tz" "chrono") ("strings" "polars-core/strings") ("string_to_integer" "polars-core/strings") ("string_reverse" "polars-core/strings" "unicode-reverse") ("string_pad" "polars-core/strings") ("string_encoding" "base64" "hex") ("simd" "argminmax/nightly_simd") ("semi_anti_join") ("search_sorted") ("round_series") ("rolling_window" "polars-core/rolling_window") ("rle" "dtype-struct") ("replace" "is_in") ("repeat_by") ("reinterpret" "polars-core/reinterpret") ("rank" "rand") ("random" "rand" "rand_distr") ("propagate_nans") ("pivot" "polars-core/reinterpret") ("performant" "polars-core/performant" "fused") ("peaks") ("pct_change" "diff") ("object" "polars-core/object") ("nightly" "polars-utils/nightly") ("moment") ("mode") ("merge_sorted") ("log") ("list_to_struct" "polars-core/dtype-struct") ("list_sets") ("list_sample") ("list_gather") ("list_drop_nulls") ("list_count") ("list_any_all") ("is_unique") ("is_last_distinct") ("is_in" "polars-core/reinterpret") ("is_first_distinct") ("is_between") ("interpolate") ("hist" "dtype-categorical" "dtype-struct") ("hash") ("group_by_list" "polars-core/group_by_list") ("gather") ("fused") ("find_many" "aho-corasick") ("extract_jsonpath" "serde_json" "jsonpath_lib" "polars-json") ("extract_groups" "dtype-struct" "polars-core/regex") ("ewma") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-core/temporal") ("dtype-struct" "polars-core/dtype-struct" "polars-core/temporal") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-core/temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-core/temporal") ("dtype-date" "polars-core/dtype-date" "polars-core/temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-array" "polars-core/dtype-array") ("diff") ("cutqcut" "dtype-categorical" "dtype-struct") ("cum_agg") ("cross_join") ("cov") ("chunked_ids" "polars-core/chunked_ids") ("binary_encoding" "base64" "hex") ("big_idx" "polars-core/bigidx") ("asof_join" "polars-core/asof_join") ("array_count" "dtype-array") ("array_any_all" "dtype-array") ("approx_unique") ("abs"))))))

(define-public crate-polars-ops-0.38.0 (c (n "polars-ops") (v "0.38.0") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "aho-corasick") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "argminmax") (r "^0.6.1") (f (quote ("float"))) (k 0)) (d (n "arrow") (r "^0.38.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "base64") (r "^0.21.2") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.0.1") (o #t) (d #t) (k 0) (p "jsonpath_lib_polars_vendor")) (d (n "memchr") (r "^2.6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-compute") (r "^0.38.0") (k 0)) (d (n "polars-core") (r "^0.38.0") (f (quote ("algorithm_group_by" "zip_with"))) (k 0)) (d (n "polars-error") (r "^0.38.0") (k 0)) (d (n "polars-json") (r "^0.38.0") (o #t) (k 0)) (d (n "polars-utils") (r "^0.38.0") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "unicode-reverse") (r "^1.0.8") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "1djglwhp4lnazhfyxkwjqszlr3l1214mqyz3ng0ndmqsrqw6zkwk") (f (quote (("unique_counts") ("top_k") ("to_dummies") ("timezones" "chrono-tz" "chrono") ("strings" "polars-core/strings") ("string_to_integer" "polars-core/strings") ("string_reverse" "polars-core/strings" "unicode-reverse") ("string_pad" "polars-core/strings") ("string_encoding" "base64" "hex") ("simd") ("semi_anti_join") ("search_sorted") ("round_series") ("rolling_window" "polars-core/rolling_window") ("rle" "dtype-struct") ("replace" "is_in") ("repeat_by") ("reinterpret" "polars-core/reinterpret") ("rank" "rand") ("random" "rand" "rand_distr") ("propagate_nans") ("pivot" "polars-core/reinterpret") ("performant" "polars-core/performant" "fused") ("peaks") ("pct_change" "diff") ("object" "polars-core/object") ("nightly" "polars-utils/nightly") ("moment") ("mode") ("merge_sorted") ("log") ("list_to_struct" "polars-core/dtype-struct") ("list_sets") ("list_sample") ("list_gather") ("list_drop_nulls") ("list_count") ("list_any_all") ("is_unique") ("is_last_distinct") ("is_in" "polars-core/reinterpret") ("is_first_distinct") ("is_between") ("interpolate") ("hist" "dtype-categorical" "dtype-struct") ("hash") ("group_by_list" "polars-core/group_by_list") ("gather") ("fused") ("find_many" "aho-corasick") ("extract_jsonpath" "serde_json" "jsonpath_lib" "polars-json") ("extract_groups" "dtype-struct" "polars-core/regex") ("ewma") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-core/temporal") ("dtype-struct" "polars-core/dtype-struct" "polars-core/temporal") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-core/temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-core/temporal") ("dtype-date" "polars-core/dtype-date" "polars-core/temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-array" "polars-core/dtype-array") ("diff") ("cutqcut" "dtype-categorical" "dtype-struct") ("cum_agg") ("cross_join") ("cov") ("chunked_ids") ("binary_encoding" "base64" "hex") ("big_idx" "polars-core/bigidx") ("asof_join" "polars-core/asof_join") ("array_to_struct" "polars-core/dtype-array" "polars-core/dtype-struct") ("array_count" "dtype-array") ("array_any_all" "dtype-array") ("approx_unique") ("abs"))))))

(define-public crate-polars-ops-0.38.1 (c (n "polars-ops") (v "0.38.1") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "aho-corasick") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "argminmax") (r "^0.6.1") (f (quote ("float"))) (k 0)) (d (n "arrow") (r "^0.38.1") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "base64") (r "^0.21.2") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.0.1") (o #t) (d #t) (k 0) (p "jsonpath_lib_polars_vendor")) (d (n "memchr") (r "^2.6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-compute") (r "^0.38.1") (k 0)) (d (n "polars-core") (r "^0.38.1") (f (quote ("algorithm_group_by" "zip_with"))) (k 0)) (d (n "polars-error") (r "^0.38.1") (k 0)) (d (n "polars-json") (r "^0.38.1") (o #t) (k 0)) (d (n "polars-utils") (r "^0.38.1") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.9") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "unicode-reverse") (r "^1.0.8") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "0gl4z2fmyqdr78dvj1hivy7912znsh99ywdvcpmpf6gsq9hssnyd") (f (quote (("unique_counts") ("top_k") ("to_dummies") ("timezones" "chrono-tz" "chrono") ("strings" "polars-core/strings") ("string_to_integer" "polars-core/strings") ("string_reverse" "polars-core/strings" "unicode-reverse") ("string_pad" "polars-core/strings") ("string_encoding" "base64" "hex") ("simd") ("semi_anti_join") ("search_sorted") ("round_series") ("rolling_window" "polars-core/rolling_window") ("rle" "dtype-struct") ("replace" "is_in") ("repeat_by") ("reinterpret" "polars-core/reinterpret") ("rank" "rand") ("random" "rand" "rand_distr") ("propagate_nans") ("pivot" "polars-core/reinterpret") ("performant" "polars-core/performant" "fused") ("peaks") ("pct_change" "diff") ("object" "polars-core/object") ("nightly" "polars-utils/nightly") ("moment") ("mode") ("merge_sorted") ("log") ("list_to_struct" "polars-core/dtype-struct") ("list_sets") ("list_sample") ("list_gather") ("list_drop_nulls") ("list_count") ("list_any_all") ("is_unique") ("is_last_distinct") ("is_in" "polars-core/reinterpret") ("is_first_distinct") ("is_between") ("interpolate") ("hist" "dtype-categorical" "dtype-struct") ("hash") ("group_by_list" "polars-core/group_by_list") ("gather") ("fused") ("find_many" "aho-corasick") ("extract_jsonpath" "serde_json" "jsonpath_lib" "polars-json") ("extract_groups" "dtype-struct" "polars-core/regex") ("ewma") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-core/temporal") ("dtype-struct" "polars-core/dtype-struct" "polars-core/temporal") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-core/temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-core/temporal") ("dtype-date" "polars-core/dtype-date" "polars-core/temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-array" "polars-core/dtype-array") ("diff") ("cutqcut" "dtype-categorical" "dtype-struct") ("cum_agg") ("cross_join") ("cov") ("chunked_ids") ("binary_encoding" "base64" "hex") ("big_idx" "polars-core/bigidx") ("asof_join" "polars-core/asof_join") ("array_to_struct" "polars-core/dtype-array" "polars-core/dtype-struct") ("array_count" "dtype-array") ("array_any_all" "dtype-array") ("approx_unique") ("abs"))))))

(define-public crate-polars-ops-0.38.2 (c (n "polars-ops") (v "0.38.2") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "aho-corasick") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "argminmax") (r "^0.6.2") (f (quote ("float"))) (k 0)) (d (n "arrow") (r "^0.38.2") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "base64") (r "^0.21.2") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.0.1") (o #t) (d #t) (k 0) (p "jsonpath_lib_polars_vendor")) (d (n "memchr") (r "^2.6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-compute") (r "^0.38.2") (k 0)) (d (n "polars-core") (r "^0.38.2") (f (quote ("algorithm_group_by" "zip_with"))) (k 0)) (d (n "polars-error") (r "^0.38.2") (k 0)) (d (n "polars-json") (r "^0.38.2") (o #t) (k 0)) (d (n "polars-utils") (r "^0.38.2") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.9") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "unicode-reverse") (r "^1.0.8") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "0c2qhgfs8wykdwrkfam4ar6dkqbb2wnz91mpca63111bzm7lvfhm") (f (quote (("unique_counts") ("top_k") ("to_dummies") ("timezones" "chrono-tz" "chrono") ("strings" "polars-core/strings") ("string_to_integer" "polars-core/strings") ("string_reverse" "polars-core/strings" "unicode-reverse") ("string_pad" "polars-core/strings") ("string_encoding" "base64" "hex") ("simd" "argminmax/nightly_simd") ("semi_anti_join") ("search_sorted") ("round_series") ("rolling_window" "polars-core/rolling_window") ("rle" "dtype-struct") ("replace" "is_in") ("repeat_by") ("reinterpret" "polars-core/reinterpret") ("rank" "rand") ("random" "rand" "rand_distr") ("propagate_nans") ("pivot" "polars-core/reinterpret") ("performant" "polars-core/performant" "fused") ("peaks") ("pct_change" "diff") ("object" "polars-core/object") ("nightly" "polars-utils/nightly") ("moment") ("mode") ("merge_sorted") ("log") ("list_to_struct" "polars-core/dtype-struct") ("list_sets") ("list_sample") ("list_gather") ("list_drop_nulls") ("list_count") ("list_any_all") ("is_unique") ("is_last_distinct") ("is_in" "polars-core/reinterpret") ("is_first_distinct") ("is_between") ("interpolate") ("hist" "dtype-categorical" "dtype-struct") ("hash") ("group_by_list" "polars-core/group_by_list") ("gather") ("fused") ("find_many" "aho-corasick") ("extract_jsonpath" "serde_json" "jsonpath_lib" "polars-json") ("extract_groups" "dtype-struct" "polars-core/regex") ("ewma") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-core/temporal") ("dtype-struct" "polars-core/dtype-struct" "polars-core/temporal") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-core/temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-core/temporal") ("dtype-date" "polars-core/dtype-date" "polars-core/temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-array" "polars-core/dtype-array") ("diff") ("cutqcut" "dtype-categorical" "dtype-struct") ("cum_agg") ("cross_join") ("cov") ("chunked_ids") ("binary_encoding" "base64" "hex") ("big_idx" "polars-core/bigidx") ("asof_join") ("array_to_struct" "polars-core/dtype-array" "polars-core/dtype-struct") ("array_count" "dtype-array") ("array_any_all" "dtype-array") ("approx_unique") ("abs"))))))

(define-public crate-polars-ops-0.38.3 (c (n "polars-ops") (v "0.38.3") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "aho-corasick") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "argminmax") (r "^0.6.2") (f (quote ("float"))) (k 0)) (d (n "arrow") (r "^0.38.3") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison"))) (k 0) (p "polars-arrow")) (d (n "base64") (r "^0.21.2") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.0.1") (o #t) (d #t) (k 0) (p "jsonpath_lib_polars_vendor")) (d (n "memchr") (r "^2.6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-compute") (r "^0.38.3") (k 0)) (d (n "polars-core") (r "^0.38.3") (f (quote ("algorithm_group_by" "zip_with"))) (k 0)) (d (n "polars-error") (r "^0.38.3") (k 0)) (d (n "polars-json") (r "^0.38.3") (o #t) (k 0)) (d (n "polars-utils") (r "^0.38.3") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.9") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "unicode-reverse") (r "^1.0.8") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "1p33iq8wfxjbyam5c5zvmbjk98bxn4y5qvzzjr0w7ry9pp1m32kz") (f (quote (("unique_counts") ("top_k") ("to_dummies") ("timezones" "chrono-tz" "chrono") ("strings" "polars-core/strings") ("string_to_integer" "polars-core/strings") ("string_reverse" "polars-core/strings" "unicode-reverse") ("string_pad" "polars-core/strings") ("string_encoding" "base64" "hex") ("simd" "argminmax/nightly_simd") ("semi_anti_join") ("search_sorted") ("round_series") ("rolling_window" "polars-core/rolling_window") ("rle" "dtype-struct") ("replace" "is_in") ("repeat_by") ("reinterpret" "polars-core/reinterpret") ("rank" "rand") ("random" "rand" "rand_distr") ("propagate_nans") ("pivot" "polars-core/reinterpret") ("performant" "polars-core/performant" "fused") ("peaks") ("pct_change" "diff") ("object" "polars-core/object") ("nightly" "polars-utils/nightly") ("moment") ("mode") ("merge_sorted") ("log") ("list_to_struct" "polars-core/dtype-struct") ("list_sets") ("list_sample") ("list_gather") ("list_drop_nulls") ("list_count") ("list_any_all") ("is_unique") ("is_last_distinct") ("is_in" "polars-core/reinterpret") ("is_first_distinct") ("is_between") ("interpolate") ("hist" "dtype-categorical" "dtype-struct") ("hash") ("group_by_list" "polars-core/group_by_list") ("gather") ("fused") ("find_many" "aho-corasick") ("extract_jsonpath" "serde_json" "jsonpath_lib" "polars-json") ("extract_groups" "dtype-struct" "polars-core/regex") ("ewma") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-core/temporal") ("dtype-struct" "polars-core/dtype-struct" "polars-core/temporal") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-core/temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-core/temporal") ("dtype-date" "polars-core/dtype-date" "polars-core/temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-array" "polars-core/dtype-array") ("diff") ("cutqcut" "dtype-categorical" "dtype-struct") ("cum_agg") ("cross_join") ("cov") ("chunked_ids") ("binary_encoding" "base64" "hex") ("big_idx" "polars-core/bigidx") ("asof_join") ("array_to_struct" "polars-core/dtype-array" "polars-core/dtype-struct") ("array_count" "dtype-array") ("array_any_all" "dtype-array") ("approx_unique") ("abs"))))))

(define-public crate-polars-ops-0.39.0 (c (n "polars-ops") (v "0.39.0") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "aho-corasick") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "argminmax") (r "^0.6.2") (f (quote ("float"))) (k 0)) (d (n "arrow") (r "^0.39.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison"))) (k 0) (p "polars-arrow")) (d (n "base64") (r "^0.21.2") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.0.1") (o #t) (d #t) (k 0) (p "jsonpath_lib_polars_vendor")) (d (n "memchr") (r "^2.6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-compute") (r "^0.39.0") (k 0)) (d (n "polars-core") (r "^0.39.0") (f (quote ("algorithm_group_by" "zip_with"))) (k 0)) (d (n "polars-error") (r "^0.39.0") (k 0)) (d (n "polars-json") (r "^0.39.0") (o #t) (k 0)) (d (n "polars-utils") (r "^0.39.0") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.9") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "unicode-reverse") (r "^1.0.8") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "0x7iyk3lf6rr15wjkma4m5k857l0x422r9xbl6z7kmq7kzx5h4yd") (f (quote (("unique_counts") ("top_k") ("to_dummies") ("timezones" "chrono-tz" "chrono") ("strings" "polars-core/strings") ("string_to_integer" "polars-core/strings") ("string_reverse" "polars-core/strings" "unicode-reverse") ("string_pad" "polars-core/strings") ("string_encoding" "base64" "hex") ("simd" "argminmax/nightly_simd") ("semi_anti_join") ("search_sorted") ("round_series") ("rolling_window" "polars-core/rolling_window") ("rle" "dtype-struct") ("replace" "is_in") ("repeat_by") ("reinterpret" "polars-core/reinterpret") ("rank" "rand") ("random" "rand" "rand_distr") ("propagate_nans") ("pivot" "polars-core/reinterpret") ("performant" "polars-core/performant" "fused") ("peaks") ("pct_change" "diff") ("object" "polars-core/object") ("nightly" "polars-utils/nightly") ("moment") ("mode") ("merge_sorted") ("log") ("list_to_struct" "polars-core/dtype-struct") ("list_sets") ("list_sample") ("list_gather") ("list_drop_nulls") ("list_count") ("list_any_all") ("is_unique") ("is_last_distinct") ("is_in" "polars-core/reinterpret") ("is_first_distinct") ("is_between") ("interpolate") ("hist" "dtype-categorical" "dtype-struct") ("hash") ("gather") ("fused") ("find_many" "aho-corasick") ("extract_jsonpath" "serde_json" "jsonpath_lib" "polars-json") ("extract_groups" "dtype-struct" "polars-core/regex") ("ewma") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-core/temporal") ("dtype-struct" "polars-core/dtype-struct" "polars-core/temporal") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-core/temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-core/temporal") ("dtype-date" "polars-core/dtype-date" "polars-core/temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-array" "polars-core/dtype-array") ("diff") ("cutqcut" "dtype-categorical" "dtype-struct") ("cum_agg") ("cross_join") ("cov") ("chunked_ids") ("business" "dtype-date" "chrono") ("binary_encoding" "base64" "hex") ("big_idx" "polars-core/bigidx") ("asof_join") ("array_to_struct" "polars-core/dtype-array" "polars-core/dtype-struct") ("array_count" "dtype-array") ("array_any_all" "dtype-array") ("approx_unique") ("abs"))))))

(define-public crate-polars-ops-0.39.1 (c (n "polars-ops") (v "0.39.1") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "aho-corasick") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "argminmax") (r "^0.6.2") (f (quote ("float"))) (k 0)) (d (n "arrow") (r "^0.39.1") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison"))) (k 0) (p "polars-arrow")) (d (n "base64") (r "^0.21.2") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.0.1") (o #t) (d #t) (k 0) (p "jsonpath_lib_polars_vendor")) (d (n "memchr") (r "^2.6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-compute") (r "^0.39.1") (k 0)) (d (n "polars-core") (r "^0.39.1") (f (quote ("algorithm_group_by" "zip_with"))) (k 0)) (d (n "polars-error") (r "^0.39.1") (k 0)) (d (n "polars-json") (r "^0.39.1") (o #t) (k 0)) (d (n "polars-utils") (r "^0.39.1") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.9") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "unicode-reverse") (r "^1.0.8") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "1fw3ccjb091a4raavvjghp6f03kl3iyg89fzcxc3h38i1qz584gk") (f (quote (("unique_counts") ("top_k") ("to_dummies") ("timezones" "chrono-tz" "chrono") ("strings" "polars-core/strings") ("string_to_integer" "polars-core/strings") ("string_reverse" "polars-core/strings" "unicode-reverse") ("string_pad" "polars-core/strings") ("string_encoding" "base64" "hex") ("simd" "argminmax/nightly_simd") ("semi_anti_join") ("search_sorted") ("round_series") ("rolling_window" "polars-core/rolling_window") ("rle" "dtype-struct") ("replace" "is_in") ("repeat_by") ("reinterpret" "polars-core/reinterpret") ("rank" "rand") ("random" "rand" "rand_distr") ("propagate_nans") ("pivot" "polars-core/reinterpret") ("performant" "polars-core/performant" "fused") ("peaks") ("pct_change" "diff") ("object" "polars-core/object") ("nightly" "polars-utils/nightly") ("moment") ("mode") ("merge_sorted") ("log") ("list_to_struct" "polars-core/dtype-struct") ("list_sets") ("list_sample") ("list_gather") ("list_drop_nulls") ("list_count") ("list_any_all") ("is_unique") ("is_last_distinct") ("is_in" "polars-core/reinterpret") ("is_first_distinct") ("is_between") ("interpolate") ("hist" "dtype-categorical" "dtype-struct") ("hash") ("gather") ("fused") ("find_many" "aho-corasick") ("extract_jsonpath" "serde_json" "jsonpath_lib" "polars-json") ("extract_groups" "dtype-struct" "polars-core/regex") ("ewma_by") ("ewma") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-core/temporal") ("dtype-struct" "polars-core/dtype-struct" "polars-core/temporal") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-core/temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-core/temporal") ("dtype-date" "polars-core/dtype-date" "polars-core/temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-array" "polars-core/dtype-array") ("diff") ("cutqcut" "dtype-categorical" "dtype-struct") ("cum_agg") ("cross_join") ("cov") ("chunked_ids") ("business" "dtype-date" "chrono") ("binary_encoding" "base64" "hex") ("big_idx" "polars-core/bigidx") ("asof_join") ("array_to_struct" "polars-core/dtype-array" "polars-core/dtype-struct") ("array_count" "dtype-array") ("array_any_all" "dtype-array") ("approx_unique") ("abs"))))))

(define-public crate-polars-ops-0.39.2 (c (n "polars-ops") (v "0.39.2") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "aho-corasick") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "argminmax") (r "^0.6.2") (f (quote ("float"))) (k 0)) (d (n "arrow") (r "^0.39.2") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison"))) (k 0) (p "polars-arrow")) (d (n "base64") (r "^0.21.2") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.0.1") (o #t) (d #t) (k 0) (p "jsonpath_lib_polars_vendor")) (d (n "memchr") (r "^2.6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-compute") (r "^0.39.2") (k 0)) (d (n "polars-core") (r "^0.39.2") (f (quote ("algorithm_group_by" "zip_with"))) (k 0)) (d (n "polars-error") (r "^0.39.2") (k 0)) (d (n "polars-json") (r "^0.39.2") (o #t) (k 0)) (d (n "polars-utils") (r "^0.39.2") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.9") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "unicode-reverse") (r "^1.0.8") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "0py9zg8zzbphfhfrvvmpnlxn9az8bapig3nfw319n44jk96xpnzg") (f (quote (("unique_counts") ("top_k") ("to_dummies") ("timezones" "chrono-tz" "chrono") ("strings" "polars-core/strings") ("string_to_integer" "polars-core/strings") ("string_reverse" "polars-core/strings" "unicode-reverse") ("string_pad" "polars-core/strings") ("string_encoding" "base64" "hex") ("simd" "argminmax/nightly_simd") ("semi_anti_join") ("search_sorted") ("round_series") ("rolling_window" "polars-core/rolling_window") ("rle" "dtype-struct") ("replace" "is_in") ("repeat_by") ("reinterpret" "polars-core/reinterpret") ("rank" "rand") ("random" "rand" "rand_distr") ("propagate_nans") ("pivot" "polars-core/reinterpret") ("performant" "polars-core/performant" "fused") ("peaks") ("pct_change" "diff") ("object" "polars-core/object") ("nightly" "polars-utils/nightly") ("moment") ("mode") ("merge_sorted") ("log") ("list_to_struct" "polars-core/dtype-struct") ("list_sets") ("list_sample") ("list_gather") ("list_drop_nulls") ("list_count") ("list_any_all") ("is_unique") ("is_last_distinct") ("is_in" "polars-core/reinterpret") ("is_first_distinct") ("is_between") ("interpolate") ("hist" "dtype-categorical" "dtype-struct") ("hash") ("gather") ("fused") ("find_many" "aho-corasick") ("extract_jsonpath" "serde_json" "jsonpath_lib" "polars-json") ("extract_groups" "dtype-struct" "polars-core/regex") ("ewma_by") ("ewma") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-core/temporal") ("dtype-struct" "polars-core/dtype-struct" "polars-core/temporal") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-core/temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-core/temporal") ("dtype-date" "polars-core/dtype-date" "polars-core/temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-array" "polars-core/dtype-array") ("diff") ("cutqcut" "dtype-categorical" "dtype-struct") ("cum_agg") ("cross_join") ("cov") ("chunked_ids") ("business" "dtype-date" "chrono") ("binary_encoding" "base64" "hex") ("big_idx" "polars-core/bigidx") ("asof_join") ("array_to_struct" "polars-core/dtype-array" "polars-core/dtype-struct") ("array_count" "dtype-array") ("array_any_all" "dtype-array") ("approx_unique") ("abs"))))))

(define-public crate-polars-ops-0.40.0 (c (n "polars-ops") (v "0.40.0") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "aho-corasick") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "argminmax") (r "^0.6.2") (f (quote ("float"))) (k 0)) (d (n "arrow") (r "^0.40.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison"))) (k 0) (p "polars-arrow")) (d (n "base64") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "either") (r "^1.11") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash" "serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.0.1") (o #t) (d #t) (k 0) (p "jsonpath_lib_polars_vendor")) (d (n "memchr") (r "^2.6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-compute") (r "^0.40.0") (k 0)) (d (n "polars-core") (r "^0.40.0") (f (quote ("algorithm_group_by" "zip_with"))) (k 0)) (d (n "polars-error") (r "^0.40.0") (k 0)) (d (n "polars-json") (r "^0.40.0") (o #t) (k 0)) (d (n "polars-utils") (r "^0.40.0") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.9") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "unicode-reverse") (r "^1.0.8") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "0n0dy26z7ldbhgkc45l9csd26lhz4lmzh734ay2bk0cw2rzfs2kv") (f (quote (("unique_counts") ("top_k") ("to_dummies") ("timezones" "chrono-tz" "chrono") ("strings" "polars-core/strings") ("string_to_integer" "polars-core/strings") ("string_reverse" "polars-core/strings" "unicode-reverse") ("string_pad" "polars-core/strings") ("string_encoding" "base64" "hex") ("simd" "argminmax/nightly_simd") ("semi_anti_join") ("search_sorted") ("round_series") ("rolling_window_by" "polars-core/rolling_window_by") ("rolling_window" "polars-core/rolling_window") ("rle" "dtype-struct") ("replace" "is_in") ("repeat_by") ("reinterpret" "polars-core/reinterpret") ("rank" "rand") ("random" "rand" "rand_distr") ("propagate_nans") ("pivot" "polars-core/reinterpret") ("performant" "polars-core/performant" "fused") ("peaks") ("pct_change" "diff") ("object" "polars-core/object") ("nightly" "polars-utils/nightly") ("moment") ("mode") ("merge_sorted") ("log") ("list_to_struct" "polars-core/dtype-struct") ("list_sets") ("list_sample") ("list_gather") ("list_drop_nulls") ("list_count") ("list_any_all") ("is_unique") ("is_last_distinct") ("is_in" "polars-core/reinterpret") ("is_first_distinct") ("is_between") ("interpolate") ("hist" "dtype-categorical" "dtype-struct") ("hash") ("gather") ("fused") ("find_many" "aho-corasick") ("extract_jsonpath" "serde_json" "jsonpath_lib" "polars-json") ("extract_groups" "dtype-struct" "polars-core/regex") ("ewma_by") ("ewma") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-core/temporal") ("dtype-struct" "polars-core/dtype-struct" "polars-core/temporal") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-core/temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-core/temporal") ("dtype-date" "polars-core/dtype-date" "polars-core/temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-array" "polars-core/dtype-array") ("diff") ("cutqcut" "dtype-categorical" "dtype-struct") ("cum_agg") ("cross_join") ("cov") ("chunked_ids") ("business" "dtype-date" "chrono") ("binary_encoding" "base64" "hex") ("big_idx" "polars-core/bigidx") ("asof_join") ("array_to_struct" "polars-core/dtype-array" "polars-core/dtype-struct") ("array_count" "dtype-array") ("array_any_all" "dtype-array") ("approx_unique") ("abs"))))))

