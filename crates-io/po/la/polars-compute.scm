(define-module (crates-io po la polars-compute) #:use-module (crates-io))

(define-public crate-polars-compute-0.36.0 (c (n "polars-compute") (v "0.36.0") (d (list (d (n "arrow") (r "^0.36.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "bytemuck") (r "^1.11") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-utils") (r "^0.36.0") (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "1nx124diqjmwswyambwjn67s3rzq8cw1gfp9j3vb7b7dw84fz2jb") (f (quote (("simd") ("nightly") ("dtype-array"))))))

(define-public crate-polars-compute-0.36.2 (c (n "polars-compute") (v "0.36.2") (d (list (d (n "arrow") (r "^0.36.2") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "bytemuck") (r "^1.11") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-utils") (r "^0.36.2") (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "1pa4l1w41gdzdff81ih1z05z3gz568k81i6flibbca8v2igvqkxi") (f (quote (("simd") ("nightly") ("dtype-array"))))))

(define-public crate-polars-compute-0.37.0 (c (n "polars-compute") (v "0.37.0") (d (list (d (n "arrow") (r "^0.37.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "bytemuck") (r "^1.11") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-error") (r "^0.37.0") (k 0)) (d (n "polars-utils") (r "^0.37.0") (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "1p868zl3l4cn8kbdlyp1pf058d1a5g4rmbgmxvny0fh0z23xrn9j") (f (quote (("simd") ("nightly") ("dtype-array"))))))

(define-public crate-polars-compute-0.38.0 (c (n "polars-compute") (v "0.38.0") (d (list (d (n "arrow") (r "^0.38.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "bytemuck") (r "^1.11") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-error") (r "^0.38.0") (k 0)) (d (n "polars-utils") (r "^0.38.0") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "strength_reduce") (r "^0.2") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "0cnjfa15wh4k29r51gfl9dzn4zdf9hkqca5yp6jmgpvirfh9n7j9") (f (quote (("simd" "arrow/simd") ("nightly") ("dtype-array"))))))

(define-public crate-polars-compute-0.38.1 (c (n "polars-compute") (v "0.38.1") (d (list (d (n "arrow") (r "^0.38.1") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "bytemuck") (r "^1.11") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-error") (r "^0.38.1") (k 0)) (d (n "polars-utils") (r "^0.38.1") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "strength_reduce") (r "^0.2") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "1bjfkdahndagni7wwasiblc4kyn2d4l0d17l48rqlbjh8vm2sd16") (f (quote (("simd" "arrow/simd") ("nightly") ("dtype-array"))))))

(define-public crate-polars-compute-0.38.2 (c (n "polars-compute") (v "0.38.2") (d (list (d (n "arrow") (r "^0.38.2") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "bytemuck") (r "^1.11") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-error") (r "^0.38.2") (k 0)) (d (n "polars-utils") (r "^0.38.2") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "strength_reduce") (r "^0.2") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "1zm1aa9g57ji4s7n0vgid90kc4dckm4j7r74cpzw30r1s87w2sig") (f (quote (("simd" "arrow/simd") ("nightly") ("dtype-array"))))))

(define-public crate-polars-compute-0.38.3 (c (n "polars-compute") (v "0.38.3") (d (list (d (n "arrow") (r "^0.38.3") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison"))) (k 0) (p "polars-arrow")) (d (n "bytemuck") (r "^1.11") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-error") (r "^0.38.3") (k 0)) (d (n "polars-utils") (r "^0.38.3") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "strength_reduce") (r "^0.2") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "1fs6rq4cpa68mdak0l7cnd1mk0p6d36kywmzq81svfydfdgm2m63") (f (quote (("simd" "arrow/simd") ("nightly") ("dtype-array"))))))

(define-public crate-polars-compute-0.39.0 (c (n "polars-compute") (v "0.39.0") (d (list (d (n "arrow") (r "^0.39.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison"))) (k 0) (p "polars-arrow")) (d (n "bytemuck") (r "^1.11") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-error") (r "^0.39.0") (k 0)) (d (n "polars-utils") (r "^0.39.0") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "strength_reduce") (r "^0.2") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "1gibd5i0634443vzwz8cw14f2vmr67icxfpqrw24w4q52rr131zi") (f (quote (("simd" "arrow/simd") ("nightly") ("dtype-array"))))))

(define-public crate-polars-compute-0.39.1 (c (n "polars-compute") (v "0.39.1") (d (list (d (n "arrow") (r "^0.39.1") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison"))) (k 0) (p "polars-arrow")) (d (n "bytemuck") (r "^1.11") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-error") (r "^0.39.1") (k 0)) (d (n "polars-utils") (r "^0.39.1") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "strength_reduce") (r "^0.2") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "0ya0x35dj7x7rry1fdicair0x18x0px8g6p1ky2vmbiacgxln9ng") (f (quote (("simd" "arrow/simd") ("nightly") ("dtype-array"))))))

(define-public crate-polars-compute-0.39.2 (c (n "polars-compute") (v "0.39.2") (d (list (d (n "arrow") (r "^0.39.2") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison"))) (k 0) (p "polars-arrow")) (d (n "bytemuck") (r "^1.11") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-error") (r "^0.39.2") (k 0)) (d (n "polars-utils") (r "^0.39.2") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "strength_reduce") (r "^0.2") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "1zmlxwv7vvnnllggi2g86vk2pjnxdxp41w0yp5wvnkxi2idr95m7") (f (quote (("simd" "arrow/simd") ("nightly") ("dtype-array"))))))

(define-public crate-polars-compute-0.40.0 (c (n "polars-compute") (v "0.40.0") (d (list (d (n "arrow") (r "^0.40.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison"))) (k 0) (p "polars-arrow")) (d (n "bytemuck") (r "^1.11") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "either") (r "^1.11") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-error") (r "^0.40.0") (k 0)) (d (n "polars-utils") (r "^0.40.0") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "strength_reduce") (r "^0.2") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "184vc1phpirrnjkr85pqff9w97a7kjm54abqrgg4q8r6z1w4bz49") (f (quote (("simd" "arrow/simd") ("nightly") ("dtype-array"))))))

