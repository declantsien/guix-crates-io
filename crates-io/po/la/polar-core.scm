(define-module (crates-io po la polar-core) #:use-module (crates-io))

(define-public crate-polar-core-0.1.0 (c (n "polar-core") (v "0.1.0") (h "0ssa448pg697xw2fm4yg8h89kqgzwhpg80z42pw09r808s3dmhaj")))

(define-public crate-polar-core-0.1.0-alpha (c (n "polar-core") (v "0.1.0-alpha") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "indoc") (r "^0.3.5") (d #t) (k 2)) (d (n "js-sys") (r "^0.3") (d #t) (k 0)) (d (n "lalrpop") (r "^0.18.1") (f (quote ("lexer"))) (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.18.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "permute") (r "^0.1.0") (d #t) (k 2)) (d (n "pipe") (r "^0.3.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.9.6") (d #t) (k 2)) (d (n "regex") (r "^1.3.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "1wv6hszcz0aqgkpahvhbp64bk1101nrcmfaii1b3ry8wv4y22bjd") (f (quote (("default"))))))

(define-public crate-polar-core-0.6.0 (c (n "polar-core") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "indoc") (r "^0.3.5") (d #t) (k 2)) (d (n "js-sys") (r "^0.3") (d #t) (k 0)) (d (n "lalrpop") (r "^0.18.1") (f (quote ("lexer"))) (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.18.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "permute") (r "^0.1.0") (d #t) (k 2)) (d (n "pipe") (r "^0.3.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.9.6") (d #t) (k 2)) (d (n "regex") (r "^1.3.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0jwlspidpj2xqfb6fa56ayihkcmdrvyal38kjzwwdrxczrfxcp67") (f (quote (("default"))))))

(define-public crate-polar-core-0.7.0 (c (n "polar-core") (v "0.7.0") (d (list (d (n "anyhow") (r "^1.0.33") (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "indoc") (r "^1.0.3") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.45") (d #t) (k 0)) (d (n "lalrpop") (r "^0.19.1") (f (quote ("lexer"))) (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "permute") (r "^0.1.0") (d #t) (k 2)) (d (n "pipe") (r "^0.3.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "regex") (r "^1.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.116") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0.58") (d #t) (k 0)))) (h "11qi51vcn1dqf1lbl4zcrm5721y8a2gjpwl225ih4vmx6vjsfpqn") (f (quote (("default"))))))

(define-public crate-polar-core-0.7.1 (c (n "polar-core") (v "0.7.1") (d (list (d (n "anyhow") (r "^1.0.33") (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "indoc") (r "^1.0.3") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.45") (d #t) (k 0)) (d (n "lalrpop") (r "^0.19.1") (f (quote ("lexer"))) (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "permute") (r "^0.1.0") (d #t) (k 2)) (d (n "pipe") (r "^0.3.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "regex") (r "^1.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.116") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0.58") (d #t) (k 0)))) (h "1sg7fzqidl9h19cs7qwv8ppn3j5p4yhy97d09r62awhabp2vjs4v") (f (quote (("default"))))))

(define-public crate-polar-core-0.8.0 (c (n "polar-core") (v "0.8.0") (d (list (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "indoc") (r "^1.0.3") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.45") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lalrpop") (r "^0.19.1") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "permute") (r "^0.1.0") (d #t) (k 2)) (d (n "pipe") (r "^0.3.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0.59") (d #t) (k 0)))) (h "1664q72jbyvjwxy3nkzd9pc014zpd0gcb84cxqyh5yqvc7qay8c9") (f (quote (("default"))))))

(define-public crate-polar-core-0.8.1 (c (n "polar-core") (v "0.8.1") (d (list (d (n "criterion") (r ">=0.3.3, <0.4.0") (d #t) (k 2)) (d (n "indoc") (r ">=1.0.3, <2.0.0") (d #t) (k 2)) (d (n "js-sys") (r ">=0.3.45, <0.4.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lalrpop") (r ">=0.19.1, <0.20.0") (d #t) (k 1)) (d (n "lalrpop-util") (r ">=0.19.1, <0.20.0") (d #t) (k 0)) (d (n "maplit") (r ">=1.0.2, <2.0.0") (d #t) (k 2)) (d (n "permute") (r ">=0.1.0, <0.2.0") (d #t) (k 2)) (d (n "pipe") (r ">=0.3.0, <0.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r ">=0.6.1, <0.7.0") (d #t) (k 2)) (d (n "proptest") (r ">=0.10.1, <0.11.0") (d #t) (k 2)) (d (n "regex") (r ">=1.4.1, <2.0.0") (d #t) (k 0)) (d (n "serde") (r ">=1.0.117, <2.0.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive") (r ">=1.0.0, <2.0.0") (d #t) (k 1)) (d (n "serde_json") (r ">=1.0.59, <2.0.0") (d #t) (k 0)))) (h "06arj8bbb17kz5fa4phq07sns30hwrfiwwgcjzm61fbl1di6ch71") (f (quote (("default"))))))

(define-public crate-polar-core-0.8.2 (c (n "polar-core") (v "0.8.2") (d (list (d (n "criterion") (r ">=0.3.3, <0.4.0") (d #t) (k 2)) (d (n "indoc") (r ">=1.0.3, <2.0.0") (d #t) (k 2)) (d (n "js-sys") (r ">=0.3.45, <0.4.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lalrpop") (r ">=0.19.1, <0.20.0") (d #t) (k 1)) (d (n "lalrpop-util") (r ">=0.19.1, <0.20.0") (d #t) (k 0)) (d (n "maplit") (r ">=1.0.2, <2.0.0") (d #t) (k 2)) (d (n "permute") (r ">=0.1.0, <0.2.0") (d #t) (k 2)) (d (n "pipe") (r ">=0.3.0, <0.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r ">=0.6.1, <0.7.0") (d #t) (k 2)) (d (n "proptest") (r ">=0.10.1, <0.11.0") (d #t) (k 2)) (d (n "regex") (r ">=1.4.1, <2.0.0") (d #t) (k 0)) (d (n "serde") (r ">=1.0.117, <2.0.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive") (r ">=1.0.0, <2.0.0") (d #t) (k 1)) (d (n "serde_json") (r ">=1.0.59, <2.0.0") (d #t) (k 0)))) (h "0g8n516pzhnpiqqr5wrzhp7f6hb8isdwf28i2yl686p5a8j0a0ba") (f (quote (("default"))))))

(define-public crate-polar-core-0.9.0 (c (n "polar-core") (v "0.9.0") (d (list (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "indoc") (r "^1.0.3") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.45") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lalrpop") (r "^0.19.1") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "permute") (r "^0.1.0") (d #t) (k 2)) (d (n "pipe") (r "^0.3.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "regex") (r "^1.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0.59") (d #t) (k 0)))) (h "0pydza0gc9yamkfzcfnl6cdap5hdxdbqq0rilrmcjppnpvkigkrh") (f (quote (("default"))))))

(define-public crate-polar-core-0.10.0 (c (n "polar-core") (v "0.10.0") (d (list (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "indoc") (r "^1.0.3") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.46") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lalrpop") (r "^0.19.1") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "permute") (r "^0.1.0") (d #t) (k 2)) (d (n "pipe") (r "^0.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.119") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)))) (h "0r3iwkp12sbj58m6232pyj01d0dzzqrafzv43d4day17g27i6g60") (f (quote (("default"))))))

(define-public crate-polar-core-0.10.1 (c (n "polar-core") (v "0.10.1") (d (list (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "indoc") (r "^1.0.3") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.46") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lalrpop") (r "^0.19.1") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "permute") (r "^0.1.0") (d #t) (k 2)) (d (n "pipe") (r "^0.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.119") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)))) (h "0044v247gdi8whz9nql3q85m40chwz30csfkri5vjajaaiqhiisj") (f (quote (("default"))))))

(define-public crate-polar-core-0.11.0 (c (n "polar-core") (v "0.11.0") (d (list (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "indoc") (r "^1.0.3") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.46") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lalrpop") (r "^0.19.1") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "permute") (r "^0.1.0") (d #t) (k 2)) (d (n "pipe") (r "^0.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.119") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)))) (h "0xxd3r6x08z68qpfcjsa1lwzf855y858i9b3jc2vhybadarjakw5") (f (quote (("default"))))))

(define-public crate-polar-core-0.11.1 (c (n "polar-core") (v "0.11.1") (d (list (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "indoc") (r "^1.0.3") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.46") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lalrpop") (r "^0.19.1") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "permute") (r "^0.1.0") (d #t) (k 2)) (d (n "pipe") (r "^0.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.119") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)))) (h "0j3b3drzl0ghn28vmsnh43z1gblfsmj62a78z2160hlayksnd447") (f (quote (("default"))))))

(define-public crate-polar-core-0.11.2 (c (n "polar-core") (v "0.11.2") (d (list (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "indoc") (r "^1.0.3") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.46") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lalrpop") (r "^0.19.1") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "permute") (r "^0.1.0") (d #t) (k 2)) (d (n "pipe") (r "^0.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.119") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.69") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0s2gn0k8rjm6ba9va44v3x1cnmckzz575p31ikp8zylmjz4hyh6f") (f (quote (("default"))))))

(define-public crate-polar-core-0.11.3 (c (n "polar-core") (v "0.11.3") (d (list (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "indoc") (r "^1.0.3") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.46") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lalrpop") (r "^0.19.1") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "permute") (r "^0.1.0") (d #t) (k 2)) (d (n "pipe") (r "^0.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.119") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.69") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0smn5098x9f9g5cj2h9p9188qc98vjfkcy9n7x6kzmvc4c6h7v76") (f (quote (("default"))))))

(define-public crate-polar-core-0.12.0 (c (n "polar-core") (v "0.12.0") (d (list (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "indoc") (r "^1.0.3") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.46") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lalrpop") (r "^0.19.1") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "permute") (r "^0.1.0") (d #t) (k 2)) (d (n "pipe") (r "^0.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.119") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.69") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1xv1yw5s8wbndl01ahv7iwx50wckk4bw7kvwzk4gdsvw6sbb267m") (f (quote (("default"))))))

(define-public crate-polar-core-0.12.1 (c (n "polar-core") (v "0.12.1") (d (list (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "indoc") (r "^1.0.3") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.46") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lalrpop") (r "^0.19.1") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "permute") (r "^0.1.0") (d #t) (k 2)) (d (n "pipe") (r "^0.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.119") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.69") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1mfmgb16alm30yvr39kv347z9zq8msgr6as116ld5bw3ffs0njbq") (f (quote (("default"))))))

(define-public crate-polar-core-0.12.2 (c (n "polar-core") (v "0.12.2") (d (list (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "indoc") (r "^1.0.3") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.46") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lalrpop") (r "^0.19.1") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "permute") (r "^0.1.0") (d #t) (k 2)) (d (n "pipe") (r "^0.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.119") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.69") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1x1mlap53cgh718fvdmclvw0h2r28wbi8y50w8rz1ax0a01f7rdh") (f (quote (("default"))))))

(define-public crate-polar-core-0.12.3 (c (n "polar-core") (v "0.12.3") (d (list (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "indoc") (r "^1.0.3") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.46") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lalrpop") (r "^0.19.1") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "permute") (r "^0.1.0") (d #t) (k 2)) (d (n "pipe") (r "^0.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.119") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.69") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0n67s6n4svnx2clp61cp9rbnx0gd28f879s54rlfqg1wigkf2q3s") (f (quote (("default"))))))

(define-public crate-polar-core-0.12.4 (c (n "polar-core") (v "0.12.4") (d (list (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "indoc") (r "^1.0.3") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.46") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lalrpop") (r "^0.19.1") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "permute") (r "^0.1.0") (d #t) (k 2)) (d (n "pipe") (r "^0.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.119") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.69") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "16x6xhk5g0cd71ar0y8w0jy75323pmgsfasylln33xjzbgpbdljk") (f (quote (("default"))))))

(define-public crate-polar-core-0.13.0 (c (n "polar-core") (v "0.13.0") (d (list (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "indoc") (r "^1.0.3") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.46") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lalrpop") (r "^0.19.1") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "permute") (r "^0.1.0") (d #t) (k 2)) (d (n "pipe") (r "^0.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.119") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.69") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1yl8n29g81d3q4wq7wpi8a4gi1wr02jppgnx9v0i7rbx2m4k2jj6") (f (quote (("default"))))))

(define-public crate-polar-core-0.13.1 (c (n "polar-core") (v "0.13.1") (d (list (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "indoc") (r "^1.0.3") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.46") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lalrpop") (r "^0.19.1") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "permute") (r "^0.1.0") (d #t) (k 2)) (d (n "pipe") (r "^0.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.119") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.69") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "142vg76hz2vddb1rqsmcfrpfkbdljdxxyl66j8iqfwmar6hw4fi7") (f (quote (("default"))))))

(define-public crate-polar-core-0.14.0 (c (n "polar-core") (v "0.14.0") (d (list (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "indoc") (r "^1.0.3") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.46") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lalrpop") (r "^0.19.1") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "permute") (r "^0.1.0") (d #t) (k 2)) (d (n "pipe") (r "^0.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.119") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.69") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "19p3lm60l3bjrzpn00lfzqmpfvpyaynjv8hnlgv67pilh1cygr9a") (f (quote (("default"))))))

(define-public crate-polar-core-0.14.1 (c (n "polar-core") (v "0.14.1") (d (list (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "indoc") (r "^1.0.3") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.46") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lalrpop") (r "^0.19.1") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "permute") (r "^0.1.0") (d #t) (k 2)) (d (n "pipe") (r "^0.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.119") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.69") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1b9dg8yib9rflj2i7sws33gqi0v7nbwm1qgfh4bq4ad47whn6fvh") (f (quote (("default"))))))

(define-public crate-polar-core-0.14.2 (c (n "polar-core") (v "0.14.2") (d (list (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "indoc") (r "^1.0.3") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.46") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lalrpop") (r "^0.19.1") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "permute") (r "^0.1.0") (d #t) (k 2)) (d (n "pipe") (r "^0.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.119") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.69") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0dizws2yi3n533ga58pp0vs10bv2b82jddxpylvgzvlpi93yd3f4") (f (quote (("default")))) (y #t)))

(define-public crate-polar-core-0.15.0 (c (n "polar-core") (v "0.15.0") (d (list (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "indoc") (r "^1.0.3") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.46") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lalrpop") (r "^0.19.1") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "permute") (r "^0.1.0") (d #t) (k 2)) (d (n "pipe") (r "^0.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.119") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.69") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0cj1w0p7xggm96ixnjnpscr3ll8ab4ravs0il0b9zgydhs5yskkc") (f (quote (("default"))))))

(define-public crate-polar-core-0.20.0-beta (c (n "polar-core") (v "0.20.0-beta") (d (list (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "indoc") (r "^1.0.3") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.46") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lalrpop") (r "^0.19.1") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "permute") (r "^0.1.0") (d #t) (k 2)) (d (n "pipe") (r "^0.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.119") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.69") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1b09mqwfamdgmd48l33lw12ypwgs2ip5arav338vv665h9f8yi0y") (f (quote (("default"))))))

(define-public crate-polar-core-0.15.1 (c (n "polar-core") (v "0.15.1") (d (list (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "indoc") (r "^1.0.3") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.46") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lalrpop") (r "^0.19.1") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "permute") (r "^0.1.0") (d #t) (k 2)) (d (n "pipe") (r "^0.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.119") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.69") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1q9irwl0ksrr7l0hcqyny905bmhif2h72mxnwxf821whf294rq9j") (f (quote (("default"))))))

(define-public crate-polar-core-0.20.1-beta (c (n "polar-core") (v "0.20.1-beta") (d (list (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "indoc") (r "^1.0.3") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.46") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lalrpop") (r "^0.19.1") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "permute") (r "^0.1.0") (d #t) (k 2)) (d (n "pipe") (r "^0.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.119") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.69") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0d490d2zkihf41xz1a6rfnqr24r6r1skfga45k4ca8yb8hjlh7f6") (f (quote (("default"))))))

(define-public crate-polar-core-0.20.1 (c (n "polar-core") (v "0.20.1") (d (list (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "indoc") (r "^1.0.3") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.46") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lalrpop") (r "^0.19.1") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "permute") (r "^0.1.0") (d #t) (k 2)) (d (n "pipe") (r "^0.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.119") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.69") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1fg042j4gc8j55ds52dixwllkhkybgkfalll6h63fsh0xabw7x58") (f (quote (("default"))))))

(define-public crate-polar-core-0.21.0 (c (n "polar-core") (v "0.21.0") (d (list (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "indoc") (r "^1.0.3") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.46") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lalrpop") (r "^0.19.1") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "permute") (r "^0.1.0") (d #t) (k 2)) (d (n "pipe") (r "^0.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.119") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.69") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0wmc1ch4c8b5f3695d7ixjdh2cpp5gk6471c8dpvr8ds5cxypabs") (f (quote (("default"))))))

(define-public crate-polar-core-0.22.0 (c (n "polar-core") (v "0.22.0") (d (list (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "indoc") (r "^1.0.3") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.46") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lalrpop") (r "^0.19.1") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "permute") (r "^0.1.0") (d #t) (k 2)) (d (n "pipe") (r "^0.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.119") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.69") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1lvw58b6rfw1w24fabfwylgri6ryba8651kbsgj2n6kqpmfk9dg6") (f (quote (("default"))))))

(define-public crate-polar-core-0.22.1 (c (n "polar-core") (v "0.22.1") (d (list (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "indoc") (r "^1.0.3") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.46") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lalrpop") (r "^0.19.1") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "permute") (r "^0.1.0") (d #t) (k 2)) (d (n "pipe") (r "^0.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "regex") (r "^1.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.119") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.69") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "14b1xxz27dbyxnficxzxiy6cpnaspvm4ap8bpk73nb6ckzcfhfvz") (f (quote (("default"))))))

(define-public crate-polar-core-0.23.0 (c (n "polar-core") (v "0.23.0") (d (list (d (n "criterion") (r "^0.3.3") (k 2)) (d (n "indoc") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0.3") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.46") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lalrpop") (r "^0.19.6") (k 1)) (d (n "lalrpop-util") (r "^0.19.6") (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "permute") (r "^0.1.0") (d #t) (k 2)) (d (n "pipe") (r "^0.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.119") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.69") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "13lw4d13ncy3z2234lxa6hmvixyb45ad6h4p4c7mpav74pqbaqgp") (f (quote (("default"))))))

(define-public crate-polar-core-0.24.0 (c (n "polar-core") (v "0.24.0") (d (list (d (n "criterion") (r "^0.3.3") (k 2)) (d (n "indoc") (r "^1.0.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.46") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lalrpop") (r "^0.19.6") (k 1)) (d (n "lalrpop-util") (r "^0.19.6") (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "permute") (r "^0.1.0") (d #t) (k 2)) (d (n "pipe") (r "^0.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.119") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.69") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0dhnlmzx07i298qx11rw5vy2c9pk8yl25rkb04n50vslbsi8p20n") (f (quote (("default"))))))

(define-public crate-polar-core-0.25.0 (c (n "polar-core") (v "0.25.0") (d (list (d (n "criterion") (r "^0.3.3") (k 2)) (d (n "indoc") (r "^1.0.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.46") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lalrpop") (r "^0.19.6") (k 1)) (d (n "lalrpop-util") (r "^0.19.6") (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "permute") (r "^0.1.0") (d #t) (k 2)) (d (n "pipe") (r "^0.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.119") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.69") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0gdj902bsmg6swcxrbg05q5qagkh8bak7prar0r99xg2y97bpk82") (f (quote (("default"))))))

(define-public crate-polar-core-0.25.1 (c (n "polar-core") (v "0.25.1") (d (list (d (n "criterion") (r "^0.3.3") (k 2)) (d (n "indoc") (r "^1.0.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.46") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lalrpop") (r "^0.19.6") (k 1)) (d (n "lalrpop-util") (r "^0.19.6") (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "permute") (r "^0.1.0") (d #t) (k 2)) (d (n "pipe") (r "^0.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.119") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.69") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "18qghrc3wr54jy7y9k1fwa5g3pgvp67sqbcpf5myvyk95k6dlsdl") (f (quote (("default"))))))

(define-public crate-polar-core-0.26.0 (c (n "polar-core") (v "0.26.0") (d (list (d (n "criterion") (r "^0.3.3") (k 2)) (d (n "indoc") (r "^1.0.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.46") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lalrpop") (r "^0.19.6") (k 1)) (d (n "lalrpop-util") (r "^0.19.6") (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "permute") (r "^0.1.0") (d #t) (k 2)) (d (n "pipe") (r "^0.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.119") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "strum_macros") (r "^0.23.1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.69") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1m7r10pjj77vja6fv46aph4b53fdrd0jf8bm0p5ddqsjag8iwapw") (f (quote (("default"))))))

(define-public crate-polar-core-0.26.1 (c (n "polar-core") (v "0.26.1") (d (list (d (n "criterion") (r "^0.3.3") (k 2)) (d (n "indoc") (r "^1.0.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.46") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lalrpop") (r "^0.19.6") (k 1)) (d (n "lalrpop-util") (r "^0.19.6") (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "permute") (r "^0.1.0") (d #t) (k 2)) (d (n "pipe") (r "^0.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.119") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "strum_macros") (r "^0.23.1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.69") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1mf16fchqmags0i99rfg0p9i96xrlq0c2whlaslvmdg99as35md6") (f (quote (("default"))))))

(define-public crate-polar-core-0.26.2 (c (n "polar-core") (v "0.26.2") (d (list (d (n "criterion") (r "^0.3.3") (k 2)) (d (n "indoc") (r "^1.0.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.46") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lalrpop") (r "^0.19.6") (k 1)) (d (n "lalrpop-util") (r "^0.19.6") (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "permute") (r "^0.1.0") (d #t) (k 2)) (d (n "pipe") (r "^0.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.119") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "strum_macros") (r "^0.23.1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.69") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0yir9wd67cijgacflf73bnnhqpfj9bmbbsqkp0ypbncbk8gr4hm9") (f (quote (("default"))))))

(define-public crate-polar-core-0.26.3 (c (n "polar-core") (v "0.26.3") (d (list (d (n "criterion") (r "^0.3.3") (k 2)) (d (n "indoc") (r "^1.0.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.46") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lalrpop") (r "^0.19.6") (k 1)) (d (n "lalrpop-util") (r "^0.19.6") (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "permute") (r "^0.2.1") (d #t) (k 2)) (d (n "pipe") (r "^0.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.119") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "strum_macros") (r "^0.23.1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.69") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1mysdx0w3sv24drjvw9qs4bm4a26j4w88l511vj04sjszdahyfv7") (f (quote (("default"))))))

(define-public crate-polar-core-0.26.4 (c (n "polar-core") (v "0.26.4") (d (list (d (n "criterion") (r "^0.3.3") (k 2)) (d (n "indoc") (r "^1.0.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.46") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lalrpop") (r "^0.19.6") (k 1)) (d (n "lalrpop-util") (r "^0.19.6") (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "permute") (r "^0.2.1") (d #t) (k 2)) (d (n "pipe") (r "^0.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.119") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "strum_macros") (r "^0.24.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.69") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1svp5zxwqjrpwlpxnpjjhcwvd50346w6flpjvzr9jc49xr33g0zk") (f (quote (("default"))))))

(define-public crate-polar-core-0.27.0 (c (n "polar-core") (v "0.27.0") (d (list (d (n "criterion") (r "^0.3.3") (k 2)) (d (n "indoc") (r "^1.0.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.46") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lalrpop") (r "^0.19.9") (k 1)) (d (n "lalrpop-util") (r "^0.19.9") (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "permutohedron") (r "^0.2.4") (d #t) (k 2)) (d (n "pipe") (r "^0.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.119") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "strum_macros") (r "^0.24.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.69") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0kkbnkgvvn3ziby9j0qaz8mi2gxb671ds7cadhlr9jdyabl7f6wx") (f (quote (("default"))))))

(define-public crate-polar-core-0.27.1 (c (n "polar-core") (v "0.27.1") (d (list (d (n "criterion") (r "^0.3.3") (k 2)) (d (n "indoc") (r "^1.0.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.46") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lalrpop") (r "^0.19.9") (k 1)) (d (n "lalrpop-util") (r "^0.19.9") (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "permutohedron") (r "^0.2.4") (d #t) (k 2)) (d (n "pipe") (r "^0.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.119") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "strum_macros") (r "^0.24.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.69") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1m2g512ah0v7k1bg4rnbmmm4cpkg0dnrwf700ndrpfrckls6cw0n") (f (quote (("default"))))))

(define-public crate-polar-core-0.27.2 (c (n "polar-core") (v "0.27.2") (d (list (d (n "criterion") (r "^0.3.3") (k 2)) (d (n "indoc") (r "^1.0.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.46") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lalrpop") (r "^0.19.9") (k 1)) (d (n "lalrpop-util") (r "^0.19.9") (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "permutohedron") (r "^0.2.4") (d #t) (k 2)) (d (n "pipe") (r "^0.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.119") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "strum_macros") (r "^0.24.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.69") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0mmp2l088b2i1zq6zfyzqcmap16bxpp1njfd3jidwyhx6h67xcww") (f (quote (("default"))))))

(define-public crate-polar-core-0.27.3 (c (n "polar-core") (v "0.27.3") (d (list (d (n "criterion") (r "^0.3.3") (k 2)) (d (n "indoc") (r "^1.0.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.46") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lalrpop") (r "^0.19.9") (k 1)) (d (n "lalrpop-util") (r "^0.19.9") (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "permutohedron") (r "^0.2.4") (d #t) (k 2)) (d (n "pipe") (r "^0.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.119") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "strum_macros") (r "^0.24.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.69") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0vg069grlccg15xzc6d4a80gzrpbfxrn5a5wzz65dpims9hnzamk") (f (quote (("default"))))))

