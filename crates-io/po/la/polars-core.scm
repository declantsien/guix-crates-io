(define-module (crates-io po la polars-core) #:use-module (crates-io))

(define-public crate-polars-core-0.12.0-beta.0 (c (n "polars-core") (v "0.12.0-beta.0") (d (list (d (n "ahash") (r "^0.5") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arrow") (r "^2") (k 0)) (d (n "chrono") (r "^0.4.13") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "csv-core") (r "^0.1.10") (d #t) (k 0)) (d (n "fast-float") (r "^0.1.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.9.1") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lexical") (r "^5.2") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (o #t) (k 0)) (d (n "num") (r "^0.3.1") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "parquet") (r "^2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.16") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1.0") (d #t) (k 0)))) (h "0hh4jzy2mlv866jixk6wxxp0q6246dx3f7rh7ssnxm738j6p5hqf") (f (quote (("temporal" "chrono" "regex") ("strings" "regex") ("simd" "arrow/simd") ("random" "rand" "rand_distr") ("parallel") ("object" "serde_json") ("lazy") ("docs") ("default" "docs" "temporal" "simd" "lazy" "parquet"))))))

(define-public crate-polars-core-0.12.0 (c (n "polars-core") (v "0.12.0") (d (list (d (n "ahash") (r "^0.6") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arrow") (r "^3.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.13") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.9.1") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (o #t) (k 0)) (d (n "num") (r "^0.3.1") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "parquet") (r "^3.0.0") (o #t) (d #t) (k 0)) (d (n "polars-arrow") (r "^0.12.0") (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.16") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1.0") (d #t) (k 0)))) (h "1xmphfqgypb2q602lwfg2zb6vpw0hc8gxc13hj7rm9l3s12g1a70") (f (quote (("temporal" "chrono" "regex") ("strings" "regex") ("simd" "arrow/avx512" "arrow/simd") ("random" "rand" "rand_distr") ("parallel") ("object" "serde_json") ("lazy") ("docs") ("default" "docs" "temporal" "simd" "lazy" "parquet"))))))

(define-public crate-polars-core-0.12.1 (c (n "polars-core") (v "0.12.1") (d (list (d (n "ahash") (r "^0.6") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arrow") (r "^3.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.13") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.9.1") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (o #t) (k 0)) (d (n "num") (r "^0.3.1") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "parquet") (r "^3.0.0") (o #t) (d #t) (k 0)) (d (n "polars-arrow") (r "^0.12.0") (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.16") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1.0") (d #t) (k 0)))) (h "0v4ydyg5xyzzhy3ksl5k21likg8xv5df08yzqkza925il3xlf6cm") (f (quote (("temporal" "chrono" "regex") ("strings" "regex") ("simd" "arrow/avx512" "arrow/simd") ("random" "rand" "rand_distr") ("parallel") ("object" "serde_json") ("lazy") ("docs") ("default" "docs" "temporal" "simd" "lazy" "parquet"))))))

(define-public crate-polars-core-0.13.0 (c (n "polars-core") (v "0.13.0") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arrow") (r "^4.0.0") (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (o #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "parquet") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "polars-arrow") (r "^0.13.0") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.16") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1.0") (d #t) (k 0)))) (h "15ap087a1sm1albsz6c7y84nl7xnbg8hcgc83255azy0zp298rnp") (f (quote (("temporal" "chrono" "regex") ("strings" "regex") ("simd" "arrow/simd") ("random" "rand" "rand_distr") ("pretty_fmt" "comfy-table") ("plain_fmt" "prettytable-rs") ("pivot") ("performant") ("object" "serde_json") ("lazy") ("dtype-u8") ("dtype-u64") ("dtype-u16") ("dtype-time64-ns") ("dtype-i8") ("dtype-i16") ("dtype-duration-ns") ("dtype-duration-ms") ("dtype-date64") ("dtype-date32") ("downsample" "temporal" "dtype-date64") ("docs") ("default" "docs" "temporal" "performant"))))))

(define-public crate-polars-core-0.13.1 (c (n "polars-core") (v "0.13.1") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arrow") (r "^4.0.0") (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (o #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "parquet") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "polars-arrow") (r "^0.13.0") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.16") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1.0") (d #t) (k 0)))) (h "1fbgjwhb3i5mldh7547sk90br2dsgcrv794zjsvxxmpy8kixkxk4") (f (quote (("temporal" "chrono" "regex") ("strings" "regex") ("simd" "arrow/simd") ("random" "rand" "rand_distr") ("pretty_fmt" "comfy-table") ("plain_fmt" "prettytable-rs") ("pivot") ("performant") ("object" "serde_json") ("lazy") ("dtype-u8") ("dtype-u64") ("dtype-u16") ("dtype-time64-ns") ("dtype-i8") ("dtype-i16") ("dtype-duration-ns") ("dtype-duration-ms") ("dtype-date64") ("dtype-date32") ("downsample" "temporal" "dtype-date64") ("docs") ("default" "docs" "temporal" "performant"))))))

(define-public crate-polars-core-0.13.2 (c (n "polars-core") (v "0.13.2") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arrow") (r "^4.0.0") (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (o #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "parquet") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "polars-arrow") (r "^0.13.0") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.16") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1.0") (d #t) (k 0)))) (h "1clcgg3nks2rfy6qabjjz3s4b69nzhgqrmd0ll9rrdgpinlj53j9") (f (quote (("temporal" "chrono" "regex") ("strings" "regex") ("simd" "arrow/simd") ("random" "rand" "rand_distr") ("pretty_fmt" "comfy-table") ("plain_fmt" "prettytable-rs") ("pivot") ("performant") ("object" "serde_json") ("lazy") ("dtype-u8") ("dtype-u64") ("dtype-u16") ("dtype-time64-ns") ("dtype-i8") ("dtype-i16") ("dtype-duration-ns") ("dtype-duration-ms") ("dtype-date64") ("dtype-date32") ("downsample" "temporal" "dtype-date64") ("docs") ("default" "docs" "temporal" "performant") ("avx512" "arrow/avx512"))))))

(define-public crate-polars-core-0.13.3 (c (n "polars-core") (v "0.13.3") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arrow") (r "^4.0.0") (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (o #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "parquet") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "polars-arrow") (r "^0.13.3") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.16") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1.0") (d #t) (k 0)))) (h "00cndwbsskz8c7rnjx20wk0qc8ni4yiwmc1hi47jvnhpa3aw8xmd") (f (quote (("temporal" "chrono" "regex") ("strings" "regex") ("simd" "arrow/simd") ("random" "rand" "rand_distr") ("pretty_fmt" "comfy-table") ("plain_fmt" "prettytable-rs") ("pivot") ("performant") ("object" "serde_json") ("lazy") ("dtype-u8") ("dtype-u64") ("dtype-u16") ("dtype-time64-ns") ("dtype-i8") ("dtype-i16") ("dtype-duration-ns") ("dtype-duration-ms") ("dtype-date64") ("dtype-date32") ("downsample" "temporal" "dtype-date64") ("docs") ("default" "docs" "temporal" "performant") ("avx512" "arrow/avx512"))))))

(define-public crate-polars-core-0.13.4 (c (n "polars-core") (v "0.13.4") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arrow") (r "^4.1") (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (o #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.1") (d #t) (k 0)) (d (n "parquet") (r "^4.1") (o #t) (k 0)) (d (n "polars-arrow") (r "^0.13.4") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1.0") (d #t) (k 0)))) (h "0pb48s1vz2kxiw54xcgcrsbhaxsyg5gb6dbqzkq0gia80y2iwml8") (f (quote (("temporal" "chrono" "regex") ("strings" "regex") ("sort_multiple") ("simd" "arrow/simd") ("random" "rand" "rand_distr") ("pretty_fmt" "comfy-table") ("plain_fmt" "prettytable-rs") ("pivot") ("performant") ("object" "serde_json") ("lazy" "sort_multiple") ("is_in") ("dtype-u8") ("dtype-u64") ("dtype-u16") ("dtype-time64-ns") ("dtype-i8") ("dtype-i16") ("dtype-duration-ns") ("dtype-duration-ms") ("dtype-date64") ("dtype-date32") ("downsample" "temporal" "dtype-date64") ("docs") ("default" "docs" "temporal" "performant") ("avx512" "arrow/avx512"))))))

(define-public crate-polars-core-0.14.0 (c (n "polars-core") (v "0.14.0") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arrow") (r "^4.2") (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (o #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.1") (d #t) (k 0)) (d (n "parquet") (r "^4.2") (o #t) (k 0)) (d (n "polars-arrow") (r "^0.14.0") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1.0") (d #t) (k 0)))) (h "130qq3lxbsz6xmx4k0xv2x9n1p9hx9xscfsjzks9ikxg326f3rfl") (f (quote (("temporal" "chrono" "regex") ("strings" "regex") ("sort_multiple") ("simd" "arrow/simd") ("random" "rand" "rand_distr") ("private") ("pretty_fmt" "comfy-table") ("plain_fmt" "prettytable-rs") ("pivot") ("performant") ("object" "serde_json") ("lazy" "sort_multiple") ("is_in") ("dtype-u8") ("dtype-u64") ("dtype-u16") ("dtype-time64-ns") ("dtype-i8") ("dtype-i16") ("dtype-duration-ns") ("dtype-duration-ms") ("dtype-date64") ("dtype-date32") ("downsample" "temporal" "dtype-date64") ("docs") ("default" "docs" "temporal" "performant") ("avx512" "arrow/avx512"))))))

(define-public crate-polars-core-0.14.1 (c (n "polars-core") (v "0.14.1") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arrow") (r "^4.2") (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (o #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.1") (d #t) (k 0)) (d (n "parquet") (r "^4.2") (o #t) (k 0)) (d (n "polars-arrow") (r "^0.14.1") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1.0") (d #t) (k 0)))) (h "0rxc7i2q85chy7awjl2hv3nlbnasrj2gfqizgn39l59i9p99sbdm") (f (quote (("temporal" "chrono" "regex") ("strings" "regex") ("sort_multiple") ("simd" "arrow/simd") ("random" "rand" "rand_distr") ("private") ("pretty_fmt" "comfy-table") ("plain_fmt" "prettytable-rs") ("pivot") ("performant") ("object" "serde_json") ("lazy" "sort_multiple") ("is_in") ("dtype-u8") ("dtype-u64") ("dtype-u16") ("dtype-time64-ns") ("dtype-i8") ("dtype-i16") ("dtype-duration-ns") ("dtype-duration-ms") ("dtype-date64") ("dtype-date32") ("downsample" "temporal" "dtype-date64") ("docs") ("default" "docs" "temporal" "performant") ("avx512" "arrow/avx512"))))))

(define-public crate-polars-core-0.14.2 (c (n "polars-core") (v "0.14.2") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arrow") (r "^4.3") (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (o #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.1") (d #t) (k 0)) (d (n "parquet") (r "^4.3") (o #t) (k 0)) (d (n "polars-arrow") (r "^0.14.2") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1.0") (d #t) (k 0)))) (h "1a1gmk1h9zln0lla5qr20isg2zqsjaybcsk2pw12n9h20fjn4hib") (f (quote (("zip_with") ("temporal" "chrono" "regex") ("strings" "regex") ("sort_multiple") ("simd" "arrow/simd") ("rows") ("round_series") ("random" "rand" "rand_distr") ("private") ("pretty_fmt" "comfy-table") ("plain_fmt" "prettytable-rs") ("pivot") ("performant") ("object" "serde_json") ("lazy" "sort_multiple") ("is_in") ("dtype-u8") ("dtype-u64") ("dtype-u16") ("dtype-time64-ns") ("dtype-i8") ("dtype-i16") ("dtype-duration-ns") ("dtype-duration-ms") ("dtype-date64") ("dtype-date32") ("downsample" "temporal" "dtype-date64") ("docs-selection" "ndarray" "pivot" "downsample" "is_in" "sort_multiple" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "round_series" "checked_arithmetic") ("docs") ("default" "docs" "temporal" "performant" "private") ("checked_arithmetic") ("avx512" "arrow/avx512"))))))

(define-public crate-polars-core-0.14.3 (c (n "polars-core") (v "0.14.3") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arrow") (r "^4.3") (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (o #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.1") (d #t) (k 0)) (d (n "parquet") (r "^4.3") (o #t) (k 0)) (d (n "polars-arrow") (r "^0.14.3") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1.0") (d #t) (k 0)))) (h "0l9jwr3q68dibj2l5r3nags0gs22403gbpak2xzf58hi7qw9367g") (f (quote (("zip_with") ("temporal" "chrono" "regex") ("strings" "regex") ("sort_multiple") ("simd" "arrow/simd") ("rows") ("round_series") ("repeat_by") ("random" "rand" "rand_distr") ("private") ("pretty_fmt" "comfy-table") ("plain_fmt" "prettytable-rs") ("pivot") ("performant") ("object" "serde_json") ("lazy" "sort_multiple") ("is_in") ("dtype-u8") ("dtype-u64") ("dtype-u16") ("dtype-time64-ns") ("dtype-i8") ("dtype-i16") ("dtype-duration-ns") ("dtype-duration-ms") ("dtype-date64") ("dtype-date32") ("downsample" "temporal" "dtype-date64") ("docs-selection" "ndarray" "pivot" "downsample" "is_in" "sort_multiple" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "round_series" "checked_arithmetic") ("docs") ("default" "docs" "temporal" "performant" "private") ("checked_arithmetic") ("avx512" "arrow/avx512"))))))

(define-public crate-polars-core-0.14.4 (c (n "polars-core") (v "0.14.4") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arrow") (r "^4.3") (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (o #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.1") (d #t) (k 0)) (d (n "parquet") (r "^4.3") (o #t) (k 0)) (d (n "polars-arrow") (r "^0.14.4") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1.0") (d #t) (k 0)))) (h "03r0qxp82z45qa5sw4ppv1hfibnay6ningnk2j4139i1zvvy3j3g") (f (quote (("zip_with") ("temporal" "chrono" "regex") ("strings" "regex") ("sort_multiple") ("simd" "arrow/simd") ("rows") ("round_series") ("repeat_by") ("random" "rand" "rand_distr") ("private") ("pretty_fmt" "comfy-table") ("plain_fmt" "prettytable-rs") ("pivot") ("performant") ("object" "serde_json") ("lazy" "sort_multiple") ("is_in") ("dtype-u8") ("dtype-u64") ("dtype-u16") ("dtype-time64-ns") ("dtype-i8") ("dtype-i16") ("dtype-duration-ns") ("dtype-duration-ms") ("dtype-date64") ("dtype-date32") ("downsample" "temporal" "dtype-date64") ("docs-selection" "ndarray" "pivot" "downsample" "is_in" "sort_multiple" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "round_series" "checked_arithmetic") ("docs") ("default" "docs" "temporal" "performant" "private") ("checked_arithmetic") ("avx512" "arrow/avx512"))))))

(define-public crate-polars-core-0.14.5 (c (n "polars-core") (v "0.14.5") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arrow") (r "^4.4") (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (o #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.1") (d #t) (k 0)) (d (n "parquet") (r "^4.4") (o #t) (k 0)) (d (n "polars-arrow") (r "^0.14.5") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1.0") (d #t) (k 0)))) (h "175g95d99v5kwzwysjyghl8q0xdga603cccc3i84a25m7vi6wply") (f (quote (("zip_with") ("temporal" "chrono" "regex") ("strings" "regex") ("sort_multiple") ("simd" "arrow/simd") ("rows") ("round_series") ("repeat_by") ("random" "rand" "rand_distr") ("private") ("pretty_fmt" "comfy-table") ("plain_fmt" "prettytable-rs") ("pivot") ("performant") ("object" "serde_json") ("lazy" "sort_multiple") ("is_in") ("dtype-u8") ("dtype-u64") ("dtype-u16") ("dtype-time64-ns") ("dtype-i8") ("dtype-i16") ("dtype-duration-ns") ("dtype-duration-ms") ("dtype-date64") ("dtype-date32") ("downsample" "temporal" "dtype-date64") ("docs-selection" "ndarray" "pivot" "downsample" "is_in" "sort_multiple" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "round_series" "checked_arithmetic") ("docs") ("default" "docs" "temporal" "performant" "private") ("checked_arithmetic") ("avx512" "arrow/avx512"))))))

(define-public crate-polars-core-0.14.6 (c (n "polars-core") (v "0.14.6") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arrow") (r "^4.4") (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (o #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.1") (d #t) (k 0)) (d (n "parquet") (r "^4.4") (o #t) (k 0)) (d (n "polars-arrow") (r "^0.14.6") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1.0") (d #t) (k 0)))) (h "1p3axaad2d0wrj060l6aap2lyfcb71lqlc0dfnnck28fjjaj9054") (f (quote (("zip_with") ("temporal" "chrono" "regex") ("strings" "regex") ("sort_multiple") ("simd" "arrow/simd") ("rows") ("round_series") ("repeat_by") ("random" "rand" "rand_distr") ("private") ("pretty_fmt" "comfy-table") ("plain_fmt" "prettytable-rs") ("pivot") ("performant") ("object" "serde_json") ("lazy" "sort_multiple") ("is_last") ("is_in") ("is_first") ("dtype-u8") ("dtype-u64") ("dtype-u16") ("dtype-time64-ns") ("dtype-i8") ("dtype-i16") ("dtype-duration-ns") ("dtype-duration-ms") ("dtype-date64") ("dtype-date32") ("downsample" "temporal" "dtype-date64") ("docs-selection" "ndarray" "pivot" "downsample" "is_in" "sort_multiple" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "round_series" "checked_arithmetic" "repeat_by" "is_first" "is_last" "asof_join") ("docs") ("default" "docs" "temporal" "performant" "private") ("checked_arithmetic") ("avx512" "arrow/avx512") ("asof_join"))))))

(define-public crate-polars-core-0.14.7 (c (n "polars-core") (v "0.14.7") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arrow") (r "^4.4") (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (o #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.1") (d #t) (k 0)) (d (n "parquet") (r "^4.4") (o #t) (k 0)) (d (n "polars-arrow") (r "^0.14.7") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1.0") (d #t) (k 0)))) (h "11bdim84bay6z8325xy17zv7mv0ryhf6jycs9z50rfyxn15agqgk") (f (quote (("zip_with") ("temporal" "chrono" "regex") ("strings" "regex") ("sort_multiple") ("simd" "arrow/simd") ("rows") ("round_series") ("repeat_by") ("random" "rand" "rand_distr") ("private") ("pretty_fmt" "comfy-table") ("plain_fmt" "prettytable-rs") ("pivot") ("performant") ("object" "serde_json") ("lazy" "sort_multiple") ("is_last") ("is_in") ("is_first") ("dtype-u8") ("dtype-u64") ("dtype-u16") ("dtype-time64-ns") ("dtype-i8") ("dtype-i16") ("dtype-duration-ns") ("dtype-duration-ms") ("dtype-date64") ("dtype-date32") ("downsample" "temporal" "dtype-date64") ("dot_product") ("docs-selection" "ndarray" "pivot" "downsample" "is_in" "sort_multiple" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "round_series" "checked_arithmetic" "repeat_by" "is_first" "is_last" "asof_join" "cross_join" "dot_product") ("docs") ("default" "docs" "temporal" "performant" "private") ("cross_join") ("checked_arithmetic") ("avx512" "arrow/avx512") ("asof_join"))))))

(define-public crate-polars-core-0.14.8 (c (n "polars-core") (v "0.14.8") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arrow") (r "^4.4") (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.1") (d #t) (k 0)) (d (n "parquet") (r "^4.4") (o #t) (k 0)) (d (n "polars-arrow") (r "^0.14.8") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1.0") (d #t) (k 0)))) (h "1vlzqsp0hrdixv4gyprlkmyhh7s3m2lnq9nizpm3sqhlccfdahyz") (f (quote (("zip_with") ("temporal" "chrono" "regex") ("strings" "regex") ("sort_multiple") ("simd" "arrow/simd") ("rows") ("row_hash") ("round_series") ("repeat_by") ("reinterpret") ("random" "rand" "rand_distr") ("private") ("pretty_fmt" "comfy-table") ("plain_fmt" "prettytable-rs") ("pivot") ("performant") ("object" "serde_json") ("mode") ("lazy" "sort_multiple") ("is_last") ("is_in") ("is_first") ("dtype-u8") ("dtype-u64") ("dtype-u16") ("dtype-time64-ns") ("dtype-i8") ("dtype-i16") ("dtype-duration-ns") ("dtype-duration-ms") ("dtype-date64") ("dtype-date32") ("downsample" "temporal" "dtype-date64") ("dot_product") ("docs-selection" "ndarray" "pivot" "downsample" "is_in" "sort_multiple" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "round_series" "checked_arithmetic" "repeat_by" "is_first" "is_last" "asof_join" "cross_join" "dot_product" "concat_str" "row_hash" "mode") ("docs") ("default" "docs" "temporal" "performant" "private") ("cross_join") ("concat_str") ("checked_arithmetic") ("avx512" "arrow/avx512") ("asof_join"))))))

(define-public crate-polars-core-0.15.0 (c (n "polars-core") (v "0.15.0") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arrow") (r "^5.0") (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.1") (d #t) (k 0)) (d (n "parquet") (r "^5.0") (o #t) (k 0)) (d (n "polars-arrow") (r "^0.15.0") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1.0") (d #t) (k 0)))) (h "0vvs4f0wsdym1zqfcx70nznm7jya9a3rc4l7y4y1rrb2ss1pam71") (f (quote (("zip_with") ("temporal" "chrono" "regex") ("take_opt_iter") ("strings" "regex") ("sort_multiple") ("simd" "arrow/simd") ("rows") ("row_hash") ("round_series") ("repeat_by") ("reinterpret") ("random" "rand" "rand_distr") ("private") ("pretty_fmt" "comfy-table") ("plain_fmt" "prettytable-rs") ("pivot") ("performant") ("object" "serde_json") ("mode") ("lazy" "sort_multiple") ("is_last") ("is_in") ("is_first") ("groupby_list") ("extract_jsonpath" "serde_json" "jsonpath_lib") ("dtype-u8") ("dtype-u64") ("dtype-u16") ("dtype-time64-ns") ("dtype-i8") ("dtype-i16") ("dtype-duration-ns") ("dtype-duration-ms") ("dtype-date64") ("dtype-date32") ("downsample" "temporal" "dtype-date64") ("dot_product") ("docs-selection" "ndarray" "pivot" "downsample" "is_in" "sort_multiple" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "round_series" "checked_arithmetic" "repeat_by" "is_first" "is_last" "asof_join" "cross_join" "dot_product" "concat_str" "row_hash" "mode" "extract_jsonpath") ("docs") ("default" "docs" "temporal" "performant" "private") ("cross_join") ("concat_str") ("checked_arithmetic") ("avx512" "arrow/avx512") ("asof_join"))))))

(define-public crate-polars-core-0.15.1 (c (n "polars-core") (v "0.15.1") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arrow") (r "^5.0") (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.1") (d #t) (k 0)) (d (n "parquet") (r "^5.0") (o #t) (k 0)) (d (n "polars-arrow") (r "^0.15.1") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1.0") (d #t) (k 0)))) (h "0vzyyqg0s6h3k77z7nkmqrrgnp7nbi7sh5nmlw1ggrlml9ps0aa9") (f (quote (("zip_with") ("temporal" "chrono" "regex") ("take_opt_iter") ("strings" "regex") ("sort_multiple") ("simd" "arrow/simd") ("rows") ("row_hash") ("round_series") ("repeat_by") ("reinterpret") ("random" "rand" "rand_distr") ("private") ("pretty_fmt" "comfy-table") ("plain_fmt" "prettytable-rs") ("pivot") ("performant") ("object" "serde_json") ("mode") ("lazy" "sort_multiple") ("is_last") ("is_in") ("is_first") ("groupby_list") ("extract_jsonpath" "serde_json" "jsonpath_lib") ("dtype-u8") ("dtype-u64") ("dtype-u16") ("dtype-time64-ns") ("dtype-i8") ("dtype-i16") ("dtype-duration-ns") ("dtype-duration-ms") ("dtype-date64") ("dtype-date32") ("downsample" "temporal" "dtype-date64") ("dot_product") ("docs-selection" "ndarray" "pivot" "downsample" "is_in" "sort_multiple" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "round_series" "checked_arithmetic" "repeat_by" "is_first" "is_last" "asof_join" "cross_join" "dot_product" "concat_str" "row_hash" "mode" "extract_jsonpath") ("docs") ("default" "docs" "temporal" "performant" "private") ("cross_join") ("concat_str") ("checked_arithmetic") ("avx512" "arrow/avx512") ("asof_join"))))))

(define-public crate-polars-core-0.16.0 (c (n "polars-core") (v "0.16.0") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arrow") (r "^0.5.3") (f (quote ("compute"))) (k 0) (p "arrow2")) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.16.0") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1.0") (d #t) (k 0)))) (h "0knhxc2b0k5jpvm7fxm64b5hjdyqgxjjyi6cnsiy5sya3mj3v9cd") (f (quote (("zip_with") ("temporal" "chrono" "regex") ("take_opt_iter") ("strings" "regex") ("sort_multiple") ("simd" "arrow/simd") ("rows") ("row_hash") ("round_series") ("rolling_window") ("repeat_by") ("reinterpret") ("rank") ("random" "rand" "rand_distr") ("private") ("pretty_fmt" "comfy-table") ("plain_fmt" "prettytable-rs") ("pivot") ("performant") ("parquet" "arrow/io_parquet") ("object" "serde_json") ("moment") ("mode") ("list") ("lazy" "sort_multiple") ("is_last") ("is_in") ("is_first") ("interpolate") ("groupby_list") ("extract_jsonpath" "serde_json" "jsonpath_lib") ("dtype-u8") ("dtype-u64") ("dtype-u16") ("dtype-time64-ns") ("dtype-i8") ("dtype-i16") ("dtype-duration-ns") ("dtype-duration-ms") ("dtype-date64") ("dtype-date32") ("downsample" "temporal" "dtype-date64") ("dot_product") ("docs-selection" "ndarray" "pivot" "downsample" "is_in" "sort_multiple" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "round_series" "checked_arithmetic" "repeat_by" "is_first" "is_last" "asof_join" "cross_join" "dot_product" "concat_str" "row_hash" "mode" "extract_jsonpath" "cum_agg" "rolling_window" "interpolate" "diff" "moment") ("docs") ("diff") ("default" "docs" "temporal" "performant" "private") ("cum_agg") ("cross_join") ("concat_str") ("checked_arithmetic") ("avx512") ("asof_join"))))))

(define-public crate-polars-core-0.17.0 (c (n "polars-core") (v "0.17.0") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arrow") (r "^0.7") (f (quote ("compute"))) (k 0) (p "arrow2")) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.17.0") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1.0") (d #t) (k 0)))) (h "1xjv2rja2pzcnn6sazgj2dqzy7gpbp57as6rcf0s0hnpcd054wb7") (f (quote (("zip_with") ("temporal" "chrono" "regex") ("take_opt_iter") ("strings" "regex" "polars-arrow/strings") ("sort_multiple") ("simd" "arrow/simd") ("rows") ("row_hash") ("round_series") ("rolling_window") ("repeat_by") ("reinterpret") ("rank") ("random" "rand" "rand_distr") ("private") ("pretty_fmt" "comfy-table") ("plain_fmt" "prettytable-rs") ("pivot") ("performant") ("parquet" "arrow/io_parquet") ("object" "serde_json") ("moment") ("mode") ("list") ("lazy" "sort_multiple") ("is_last") ("is_in") ("is_first") ("interpolate") ("groupby_list") ("extract_jsonpath" "serde_json" "jsonpath_lib") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-i8") ("dtype-i16") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical") ("downsample" "temporal" "dtype-datetime") ("dot_product") ("docs-selection" "ndarray" "pivot" "downsample" "is_in" "sort_multiple" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "round_series" "checked_arithmetic" "repeat_by" "is_first" "is_last" "asof_join" "cross_join" "dot_product" "concat_str" "row_hash" "mode" "extract_jsonpath" "cum_agg" "rolling_window" "interpolate" "diff" "moment" "dtype-categorical" "rank" "list") ("docs") ("diff") ("default" "docs" "temporal" "performant" "private") ("cum_agg") ("cross_join") ("concat_str") ("checked_arithmetic") ("avx512") ("asof_join"))))))

(define-public crate-polars-core-0.18.0 (c (n "polars-core") (v "0.18.0") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arrow") (r "^0.8") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else" "compute_take"))) (k 0) (p "arrow2")) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.18.0") (f (quote ("compute"))) (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1.0") (d #t) (k 0)))) (h "1lf6i24bnj0s9ql97fgy6jiyyd7l2rz0bbd3lxj2gkkrwi2dxc9w") (f (quote (("zip_with") ("temporal" "chrono" "regex") ("take_opt_iter") ("strings" "regex" "polars-arrow/strings" "arrow/compute_substring") ("sort_multiple") ("simd" "arrow/simd") ("rows") ("row_hash") ("round_series") ("rolling_window") ("repeat_by") ("reinterpret") ("rank") ("random" "rand" "rand_distr") ("private") ("pretty_fmt" "comfy-table") ("plain_fmt" "prettytable-rs") ("pivot") ("performant") ("parquet" "arrow/io_parquet") ("object" "serde_json") ("moment") ("mode") ("list") ("lazy" "sort_multiple") ("is_last") ("is_in") ("is_first") ("interpolate") ("groupby_list") ("extract_jsonpath" "serde_json" "jsonpath_lib") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-i8") ("dtype-i16") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical") ("downsample" "temporal" "dtype-datetime") ("dot_product") ("docs-selection" "ndarray" "pivot" "downsample" "is_in" "sort_multiple" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "round_series" "checked_arithmetic" "repeat_by" "is_first" "is_last" "asof_join" "cross_join" "dot_product" "concat_str" "row_hash" "mode" "extract_jsonpath" "cum_agg" "rolling_window" "interpolate" "diff" "moment" "dtype-categorical" "rank" "list" "diagonal_concat" "abs") ("docs") ("diff") ("diagonal_concat") ("default" "docs" "temporal" "performant" "private") ("cum_agg") ("cross_join") ("concat_str") ("checked_arithmetic") ("avx512") ("asof_join") ("abs"))))))

(define-public crate-polars-core-0.19.0 (c (n "polars-core") (v "0.19.0") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arrow") (r "^0.9") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else" "compute_take"))) (k 0) (p "arrow2")) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "comfy-table") (r "^5.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.19.0") (f (quote ("compute"))) (d #t) (k 0)) (d (n "polars-time") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "polars-utils") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1.0") (d #t) (k 0)))) (h "0g35maa1xyskzkrvi9ig7mxa5jgzrwcw5dg5zalrkmz9dpjkk9ja") (f (quote (("zip_with") ("temporal" "regex" "polars-time") ("take_opt_iter") ("strings" "regex" "polars-arrow/strings" "arrow/compute_substring") ("string_encoding" "base64" "hex") ("sort_multiple") ("simd" "arrow/simd") ("rows") ("row_hash") ("round_series") ("rolling_window") ("repeat_by") ("reinterpret") ("rank") ("random" "rand" "rand_distr") ("product") ("private") ("pretty_fmt" "comfy-table") ("plain_fmt" "prettytable-rs") ("performant") ("pct_change" "diff") ("parquet" "arrow/io_parquet") ("object" "serde_json") ("moment") ("mode") ("list") ("lazy" "sort_multiple") ("is_last") ("is_in") ("is_first") ("interpolate") ("horizontal_concat") ("groupby_list") ("extract_jsonpath" "serde_json" "jsonpath_lib") ("ewma" "polars-utils") ("dynamic_groupby" "polars-time" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-i8") ("dtype-i16") ("dtype-duration" "temporal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical") ("dot_product") ("docs-selection" "ndarray" "is_in" "sort_multiple" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "round_series" "checked_arithmetic" "repeat_by" "is_first" "is_last" "asof_join" "cross_join" "dot_product" "concat_str" "row_hash" "mode" "extract_jsonpath" "cum_agg" "rolling_window" "interpolate" "diff" "moment" "dtype-categorical" "rank" "list" "diagonal_concat" "horizontal_concat" "abs" "dataframe_arithmetic" "string_encoding" "product") ("docs") ("diff") ("diagonal_concat") ("default" "docs" "temporal" "performant" "private") ("dataframe_arithmetic") ("cum_agg") ("cross_join") ("concat_str") ("checked_arithmetic") ("avx512") ("asof_join") ("abs"))))))

(define-public crate-polars-core-0.19.1 (c (n "polars-core") (v "0.19.1") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arrow") (r "^0.9") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else" "compute_take"))) (k 0) (p "arrow2")) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "comfy-table") (r "^5.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.19.1") (f (quote ("compute"))) (d #t) (k 0)) (d (n "polars-time") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "polars-utils") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unsafe_unwrap") (r "^0.1.0") (d #t) (k 0)))) (h "0fr5wfc10l3alwld17clbv3byxhcsy9l5hb6fwlc4zh59df8sv00") (f (quote (("zip_with") ("temporal" "regex" "polars-time") ("take_opt_iter") ("strings" "regex" "polars-arrow/strings" "arrow/compute_substring") ("string_encoding" "base64" "hex") ("sort_multiple") ("simd" "arrow/simd") ("rows") ("row_hash") ("round_series") ("rolling_window") ("repeat_by") ("reinterpret") ("rank") ("random" "rand" "rand_distr") ("product") ("private") ("pretty_fmt" "comfy-table") ("plain_fmt" "prettytable-rs") ("performant") ("pct_change" "diff") ("parquet" "arrow/io_parquet") ("object" "serde_json") ("moment") ("mode") ("list") ("lazy" "sort_multiple") ("is_last") ("is_in") ("is_first") ("interpolate") ("horizontal_concat") ("groupby_list") ("extract_jsonpath" "serde_json" "jsonpath_lib") ("ewma" "polars-utils") ("dynamic_groupby" "polars-time" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-i8") ("dtype-i16") ("dtype-duration" "temporal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical") ("dot_product") ("docs-selection" "ndarray" "is_in" "sort_multiple" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "round_series" "checked_arithmetic" "repeat_by" "is_first" "is_last" "asof_join" "cross_join" "dot_product" "concat_str" "row_hash" "mode" "extract_jsonpath" "cum_agg" "rolling_window" "interpolate" "diff" "moment" "dtype-categorical" "rank" "list" "diagonal_concat" "horizontal_concat" "abs" "dataframe_arithmetic" "string_encoding" "product") ("docs") ("diff") ("diagonal_concat") ("default" "docs" "temporal" "performant" "private") ("dataframe_arithmetic") ("cum_agg") ("cross_join") ("concat_str") ("checked_arithmetic") ("avx512") ("asof_join") ("abs"))))))

(define-public crate-polars-core-0.20.0 (c (n "polars-core") (v "0.20.0") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arrow") (r "^0.10") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else" "compute_take"))) (k 0) (p "arrow2")) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("std"))) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.20.0") (f (quote ("compute"))) (d #t) (k 0)) (d (n "polars-utils") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1aky5bqcc2bvps0ska7vx6bjlnzwijk68n2vyifwim643bid1zkd") (f (quote (("zip_with") ("temporal" "regex" "chrono") ("take_opt_iter") ("strings" "regex" "polars-arrow/strings" "arrow/compute_substring") ("string_encoding" "base64" "hex") ("sort_multiple") ("simd" "arrow/simd") ("series_from_anyvalue") ("rows") ("row_hash") ("round_series") ("rolling_window") ("repeat_by") ("reinterpret") ("rank") ("random" "rand" "rand_distr") ("product") ("private") ("performant") ("pct_change" "diff") ("parquet" "arrow/io_parquet") ("object" "serde_json") ("moment") ("mode") ("list") ("lazy" "sort_multiple") ("is_last") ("is_in") ("is_first") ("interpolate") ("horizontal_concat") ("groupby_list") ("fmt" "comfy-table") ("extract_jsonpath" "serde_json" "jsonpath_lib") ("ewma" "polars-utils") ("dynamic_groupby" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-struct") ("dtype-i8") ("dtype-i16") ("dtype-duration" "temporal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical") ("dot_product") ("docs-selection" "ndarray" "is_in" "sort_multiple" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "round_series" "checked_arithmetic" "repeat_by" "is_first" "is_last" "asof_join" "cross_join" "dot_product" "concat_str" "row_hash" "mode" "extract_jsonpath" "cum_agg" "rolling_window" "interpolate" "diff" "moment" "dtype-categorical" "rank" "list" "diagonal_concat" "horizontal_concat" "abs" "dataframe_arithmetic" "string_encoding" "product") ("docs") ("diff") ("diagonal_concat") ("default" "docs" "temporal" "performant" "private") ("dataframe_arithmetic") ("cum_agg") ("cross_join") ("concat_str") ("checked_arithmetic") ("bigidx" "polars-arrow/bigidx") ("avx512") ("asof_join") ("abs"))))))

(define-public crate-polars-core-0.21.0 (c (n "polars-core") (v "0.21.0") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arrow") (r "^0.11") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else" "compute_take"))) (k 0) (p "arrow2")) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("std"))) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.21.0") (f (quote ("compute"))) (d #t) (k 0)) (d (n "polars-utils") (r "^0.21.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "126y3nxq61mxq4g4xapa5a38qzfwp6zzci2vcn7f50idlzy8nq7r") (f (quote (("zip_with") ("unique_counts") ("temporal" "regex" "chrono") ("take_opt_iter") ("strings" "regex" "polars-arrow/strings" "arrow/compute_substring") ("string_encoding" "base64" "hex") ("sort_multiple") ("simd" "arrow/simd") ("serde-lazy" "serde" "polars-arrow/serde" "indexmap/serde") ("semi_anti_join") ("rows") ("row_hash") ("round_series") ("rolling_window") ("repeat_by") ("reinterpret") ("rank") ("random" "rand" "rand_distr") ("product") ("private") ("performant") ("pct_change" "diff") ("partition_by") ("parquet" "arrow/io_parquet") ("object" "serde_json") ("moment") ("mode") ("log") ("list") ("lazy" "sort_multiple") ("is_last") ("is_in") ("is_first") ("interpolate") ("horizontal_concat") ("groupby_list") ("fmt" "comfy-table") ("extract_jsonpath" "serde_json" "jsonpath_lib") ("ewma") ("dynamic_groupby" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-struct") ("dtype-i8") ("dtype-i16") ("dtype-duration" "temporal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical") ("dot_product") ("docs-selection" "ndarray" "is_in" "sort_multiple" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "round_series" "checked_arithmetic" "repeat_by" "is_first" "is_last" "asof_join" "cross_join" "dot_product" "concat_str" "row_hash" "mode" "extract_jsonpath" "cum_agg" "rolling_window" "interpolate" "diff" "moment" "dtype-categorical" "rank" "list" "diagonal_concat" "horizontal_concat" "abs" "dataframe_arithmetic" "string_encoding" "product" "unique_counts" "log") ("docs") ("diff") ("diagonal_concat") ("default" "docs" "temporal" "private") ("dataframe_arithmetic") ("cum_agg") ("cross_join") ("concat_str") ("chunked_ids") ("checked_arithmetic") ("bigidx" "polars-arrow/bigidx") ("avx512") ("asof_join") ("abs"))))))

(define-public crate-polars-core-0.21.1 (c (n "polars-core") (v "0.21.1") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arrow") (r "^0.11") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else" "compute_take"))) (k 0) (p "arrow2")) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("std"))) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.21.1") (f (quote ("compute"))) (d #t) (k 0)) (d (n "polars-utils") (r "^0.21.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1484qw4mmkqc5inygr1ira0snqlcz5ln9j4g48b8a9zcnwnd3y7x") (f (quote (("zip_with") ("unique_counts") ("temporal" "regex" "chrono") ("take_opt_iter") ("strings" "regex" "polars-arrow/strings" "arrow/compute_substring") ("string_encoding" "base64" "hex") ("sort_multiple") ("simd" "arrow/simd") ("serde-lazy" "serde" "polars-arrow/serde" "indexmap/serde") ("semi_anti_join") ("rows") ("row_hash") ("round_series") ("rolling_window") ("repeat_by") ("reinterpret") ("rank") ("random" "rand" "rand_distr") ("product") ("private") ("performant") ("pct_change" "diff") ("partition_by") ("parquet" "arrow/io_parquet") ("object" "serde_json") ("moment") ("mode") ("log") ("list") ("lazy" "sort_multiple") ("is_last") ("is_in") ("is_first") ("interpolate") ("horizontal_concat") ("groupby_list") ("fmt" "comfy-table") ("extract_jsonpath" "serde_json" "jsonpath_lib") ("ewma") ("dynamic_groupby" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-struct") ("dtype-i8") ("dtype-i16") ("dtype-duration" "temporal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical") ("dot_product") ("docs-selection" "ndarray" "is_in" "sort_multiple" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "round_series" "checked_arithmetic" "repeat_by" "is_first" "is_last" "asof_join" "cross_join" "dot_product" "concat_str" "row_hash" "mode" "extract_jsonpath" "cum_agg" "rolling_window" "interpolate" "diff" "moment" "dtype-categorical" "rank" "list" "diagonal_concat" "horizontal_concat" "abs" "dataframe_arithmetic" "string_encoding" "product" "unique_counts" "log") ("docs") ("diff") ("diagonal_concat") ("default" "docs" "temporal" "private") ("dataframe_arithmetic") ("cum_agg") ("cross_join") ("concat_str") ("chunked_ids") ("checked_arithmetic") ("bigidx" "polars-arrow/bigidx") ("avx512") ("asof_join") ("abs"))))))

(define-public crate-polars-core-0.22.0 (c (n "polars-core") (v "0.22.0") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arrow") (r "^0.12") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else" "compute_take"))) (k 0) (p "arrow2")) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("std"))) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.22.0") (f (quote ("compute"))) (d #t) (k 0)) (d (n "polars-utils") (r "^0.22.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0xxwqk8k4c21prx78c66ajyl3j6r1crpp7r4snc5fxigyc98cqff") (f (quote (("zip_with") ("unique_counts") ("timezones" "chrono-tz" "arrow/chrono-tz") ("temporal" "regex" "chrono") ("take_opt_iter") ("strings" "regex" "polars-arrow/strings" "arrow/compute_substring") ("string_encoding" "base64" "hex") ("sort_multiple") ("simd" "arrow/simd") ("serde-lazy" "serde" "polars-arrow/serde" "indexmap/serde") ("semi_anti_join") ("rows") ("row_hash") ("round_series") ("rolling_window") ("repeat_by") ("reinterpret") ("rank") ("random" "rand" "rand_distr") ("product") ("private") ("performant") ("pct_change" "diff") ("partition_by") ("parquet" "arrow/io_parquet") ("object" "serde_json") ("moment") ("mode") ("log") ("lazy" "sort_multiple") ("is_last") ("is_in") ("is_first") ("interpolate") ("horizontal_concat") ("groupby_list") ("fmt" "comfy-table") ("extract_jsonpath" "serde_json" "jsonpath_lib") ("ewma") ("dynamic_groupby" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-struct") ("dtype-i8") ("dtype-i16") ("dtype-duration" "temporal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical") ("dot_product") ("docs-selection" "ndarray" "is_in" "sort_multiple" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "round_series" "checked_arithmetic" "repeat_by" "is_first" "is_last" "asof_join" "cross_join" "dot_product" "concat_str" "row_hash" "mode" "extract_jsonpath" "cum_agg" "rolling_window" "interpolate" "diff" "moment" "dtype-categorical" "rank" "diagonal_concat" "horizontal_concat" "abs" "dataframe_arithmetic" "string_encoding" "product" "unique_counts" "log" "describe" "chunked_ids" "semi_anti_join" "partition_by") ("docs") ("diff") ("diagonal_concat") ("describe") ("default" "docs" "temporal" "private") ("dataframe_arithmetic") ("cum_agg") ("cross_join") ("concat_str") ("chunked_ids") ("checked_arithmetic") ("bigidx" "polars-arrow/bigidx") ("avx512") ("asof_join") ("abs"))))))

(define-public crate-polars-core-0.22.1 (c (n "polars-core") (v "0.22.1") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arrow") (r "^0.12") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else" "compute_take"))) (k 0) (p "arrow2")) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("std"))) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.22.0") (f (quote ("compute"))) (d #t) (k 0)) (d (n "polars-utils") (r "^0.22.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "08iwhd6gwpbk8d3l8c4br53ll5jsm4kqhw5fli4qqcxi3213x8nf") (f (quote (("zip_with") ("unique_counts") ("timezones" "chrono-tz" "arrow/chrono-tz") ("temporal" "regex" "chrono") ("take_opt_iter") ("strings" "regex" "polars-arrow/strings" "arrow/compute_substring") ("string_encoding" "base64" "hex") ("sort_multiple") ("simd" "arrow/simd") ("serde-lazy" "serde" "polars-arrow/serde" "indexmap/serde") ("semi_anti_join") ("rows") ("row_hash") ("round_series") ("rolling_window") ("repeat_by") ("reinterpret") ("rank") ("random" "rand" "rand_distr") ("product") ("private") ("performant") ("pct_change" "diff") ("partition_by") ("parquet" "arrow/io_parquet") ("object" "serde_json") ("moment") ("mode") ("log") ("lazy" "sort_multiple") ("is_last") ("is_in") ("is_first") ("interpolate") ("horizontal_concat") ("groupby_list") ("fmt" "comfy-table") ("extract_jsonpath" "serde_json" "jsonpath_lib") ("ewma") ("dynamic_groupby" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-struct") ("dtype-i8") ("dtype-i16") ("dtype-duration" "temporal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical") ("dot_product") ("docs-selection" "ndarray" "is_in" "sort_multiple" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "round_series" "checked_arithmetic" "repeat_by" "is_first" "is_last" "asof_join" "cross_join" "dot_product" "concat_str" "row_hash" "mode" "extract_jsonpath" "cum_agg" "rolling_window" "interpolate" "diff" "moment" "dtype-categorical" "rank" "diagonal_concat" "horizontal_concat" "abs" "dataframe_arithmetic" "string_encoding" "product" "unique_counts" "log" "describe" "chunked_ids" "semi_anti_join" "partition_by") ("docs") ("diff") ("diagonal_concat") ("describe") ("default" "docs" "temporal" "private") ("dataframe_arithmetic") ("cum_agg") ("cross_join") ("concat_str") ("chunked_ids") ("checked_arithmetic") ("bigidx" "polars-arrow/bigidx") ("avx512") ("asof_join") ("abs"))))))

(define-public crate-polars-core-0.22.2 (c (n "polars-core") (v "0.22.2") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arrow") (r "^0.12") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else" "compute_take"))) (k 0) (p "arrow2")) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("std"))) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.22.2") (f (quote ("compute"))) (d #t) (k 0)) (d (n "polars-utils") (r "^0.22.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "07wm3k3rsjw0jn1vrcsfy044ch1g0cfivxxsmskw159k16cjp7m9") (f (quote (("zip_with") ("unique_counts") ("timezones" "chrono-tz" "arrow/chrono-tz") ("temporal" "regex" "chrono") ("take_opt_iter") ("strings" "regex" "polars-arrow/strings" "arrow/compute_substring") ("string_encoding" "base64" "hex") ("sort_multiple") ("simd" "arrow/simd") ("serde-lazy" "serde" "polars-arrow/serde" "indexmap/serde") ("semi_anti_join") ("rows") ("row_hash") ("round_series") ("rolling_window") ("repeat_by") ("reinterpret") ("rank") ("random" "rand" "rand_distr") ("product") ("private") ("performant") ("pct_change" "diff") ("partition_by") ("parquet" "arrow/io_parquet") ("object" "serde_json") ("moment") ("mode") ("log") ("lazy" "sort_multiple") ("is_last") ("is_in") ("is_first") ("interpolate") ("horizontal_concat") ("groupby_list") ("fmt" "comfy-table") ("extract_jsonpath" "serde_json" "jsonpath_lib") ("ewma") ("dynamic_groupby" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-struct") ("dtype-i8") ("dtype-i16") ("dtype-duration" "temporal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical") ("dot_product") ("docs-selection" "ndarray" "is_in" "sort_multiple" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "round_series" "checked_arithmetic" "repeat_by" "is_first" "is_last" "asof_join" "cross_join" "dot_product" "concat_str" "row_hash" "mode" "extract_jsonpath" "cum_agg" "rolling_window" "interpolate" "diff" "moment" "dtype-categorical" "rank" "diagonal_concat" "horizontal_concat" "abs" "dataframe_arithmetic" "string_encoding" "product" "unique_counts" "log" "describe" "chunked_ids" "semi_anti_join" "partition_by") ("docs") ("diff") ("diagonal_concat") ("describe") ("default" "docs" "temporal" "private") ("dataframe_arithmetic") ("cum_agg") ("cross_join") ("concat_str") ("chunked_ids") ("checked_arithmetic") ("bigidx" "polars-arrow/bigidx") ("avx512") ("asof_join") ("abs"))))))

(define-public crate-polars-core-0.22.3 (c (n "polars-core") (v "0.22.3") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arrow") (r "^0.12") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else" "compute_take"))) (k 0) (p "arrow2")) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("std"))) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.22.2") (f (quote ("compute"))) (d #t) (k 0)) (d (n "polars-utils") (r "^0.22.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0kbdj3vpf0g8j3w90cpkghc2hcz09zwkx3h1hf801d3l7nqwx9lr") (f (quote (("zip_with") ("unique_counts") ("timezones" "chrono-tz" "arrow/chrono-tz") ("temporal" "regex" "chrono") ("take_opt_iter") ("strings" "regex" "polars-arrow/strings" "arrow/compute_substring") ("string_encoding" "base64" "hex") ("sort_multiple") ("simd" "arrow/simd") ("serde-lazy" "serde" "polars-arrow/serde" "indexmap/serde") ("semi_anti_join") ("rows") ("row_hash") ("round_series") ("rolling_window") ("repeat_by") ("reinterpret") ("rank") ("random" "rand" "rand_distr") ("product") ("private") ("performant") ("pct_change" "diff") ("partition_by") ("parquet" "arrow/io_parquet") ("object" "serde_json") ("moment") ("mode") ("log") ("lazy" "sort_multiple") ("is_last") ("is_in") ("is_first") ("interpolate") ("horizontal_concat") ("groupby_list") ("fmt" "comfy-table") ("extract_jsonpath" "serde_json" "jsonpath_lib") ("ewma") ("dynamic_groupby" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-struct") ("dtype-i8") ("dtype-i16") ("dtype-duration" "temporal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical") ("dot_product") ("docs-selection" "ndarray" "is_in" "sort_multiple" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "round_series" "checked_arithmetic" "repeat_by" "is_first" "is_last" "asof_join" "cross_join" "dot_product" "concat_str" "row_hash" "mode" "cum_agg" "rolling_window" "interpolate" "diff" "moment" "dtype-categorical" "rank" "diagonal_concat" "horizontal_concat" "abs" "dataframe_arithmetic" "string_encoding" "product" "unique_counts" "log" "describe" "chunked_ids" "semi_anti_join" "partition_by") ("docs") ("diff") ("diagonal_concat") ("describe") ("default" "docs" "temporal" "private") ("dataframe_arithmetic") ("cum_agg") ("cross_join") ("concat_str") ("chunked_ids") ("checked_arithmetic") ("bigidx" "polars-arrow/bigidx") ("avx512") ("asof_join") ("abs"))))))

(define-public crate-polars-core-0.22.4 (c (n "polars-core") (v "0.22.4") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arrow") (r "^0.12") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else" "compute_take"))) (k 0) (p "arrow2")) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("std"))) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.22.4") (f (quote ("compute"))) (d #t) (k 0)) (d (n "polars-utils") (r "^0.22.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1834ycs0lyqvhn2if586aic208xpj3i9nxwar5m02lqghyrd7727") (f (quote (("zip_with") ("unique_counts") ("timezones" "chrono-tz" "arrow/chrono-tz") ("temporal" "regex" "chrono") ("take_opt_iter") ("strings" "regex" "polars-arrow/strings" "arrow/compute_substring") ("string_encoding" "base64" "hex") ("sort_multiple") ("simd" "arrow/simd") ("serde-lazy" "serde" "polars-arrow/serde" "indexmap/serde") ("semi_anti_join") ("rows") ("row_hash") ("round_series") ("rolling_window") ("repeat_by") ("reinterpret") ("rank") ("random" "rand" "rand_distr") ("product") ("private") ("performant") ("pct_change" "diff") ("partition_by") ("parquet" "arrow/io_parquet") ("object" "serde_json") ("moment") ("mode") ("lazy" "sort_multiple") ("is_last") ("is_in") ("is_first") ("interpolate") ("horizontal_concat") ("groupby_list") ("fmt" "comfy-table") ("extract_jsonpath" "serde_json" "jsonpath_lib") ("ewma") ("dynamic_groupby" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-struct") ("dtype-i8") ("dtype-i16") ("dtype-duration" "temporal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical") ("dot_product") ("docs-selection" "ndarray" "is_in" "sort_multiple" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "round_series" "checked_arithmetic" "repeat_by" "is_first" "is_last" "asof_join" "cross_join" "dot_product" "concat_str" "row_hash" "mode" "cum_agg" "rolling_window" "interpolate" "diff" "moment" "dtype-categorical" "rank" "diagonal_concat" "horizontal_concat" "abs" "dataframe_arithmetic" "string_encoding" "product" "unique_counts" "describe" "chunked_ids" "semi_anti_join" "partition_by") ("docs") ("diff") ("diagonal_concat") ("describe") ("default" "docs" "temporal" "private") ("dataframe_arithmetic") ("cum_agg") ("cross_join") ("concat_str") ("chunked_ids") ("checked_arithmetic") ("bigidx" "polars-arrow/bigidx") ("avx512") ("asof_join") ("abs"))))))

(define-public crate-polars-core-0.22.5 (c (n "polars-core") (v "0.22.5") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arrow") (r "^0.12") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else" "compute_take"))) (k 0) (p "arrow2")) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("std"))) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.22.5") (f (quote ("compute"))) (d #t) (k 0)) (d (n "polars-utils") (r "^0.22.5") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "03vcsc0kp59ylywl05lypg0yws8y588niw9i4qaa2f0h4z72zyc0") (f (quote (("zip_with") ("unique_counts") ("timezones" "chrono-tz" "arrow/chrono-tz") ("temporal" "regex" "chrono") ("take_opt_iter") ("strings" "regex" "polars-arrow/strings" "arrow/compute_substring") ("string_encoding" "base64" "hex") ("sort_multiple") ("simd" "arrow/simd") ("serde-lazy" "serde" "polars-arrow/serde" "indexmap/serde") ("semi_anti_join") ("rows") ("row_hash") ("round_series") ("rolling_window") ("repeat_by") ("reinterpret") ("rank") ("random" "rand" "rand_distr") ("product") ("private") ("performant") ("pct_change" "diff") ("partition_by") ("parquet" "arrow/io_parquet") ("object" "serde_json") ("moment") ("mode") ("lazy" "sort_multiple") ("is_last") ("is_in") ("is_first") ("interpolate") ("horizontal_concat") ("groupby_list") ("fmt" "comfy-table") ("extract_jsonpath" "serde_json" "jsonpath_lib") ("ewma") ("dynamic_groupby" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-struct") ("dtype-i8") ("dtype-i16") ("dtype-duration" "temporal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical") ("dot_product") ("docs-selection" "ndarray" "is_in" "sort_multiple" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "round_series" "checked_arithmetic" "repeat_by" "is_first" "is_last" "asof_join" "cross_join" "dot_product" "concat_str" "row_hash" "mode" "cum_agg" "rolling_window" "interpolate" "diff" "moment" "dtype-categorical" "rank" "diagonal_concat" "horizontal_concat" "abs" "dataframe_arithmetic" "string_encoding" "product" "unique_counts" "describe" "chunked_ids" "semi_anti_join" "partition_by") ("docs") ("diff") ("diagonal_concat") ("describe") ("default" "docs" "temporal" "private") ("dataframe_arithmetic") ("cum_agg") ("cross_join") ("concat_str") ("chunked_ids") ("checked_arithmetic") ("bigidx" "polars-arrow/bigidx") ("avx512") ("asof_join") ("abs"))))))

(define-public crate-polars-core-0.22.6 (c (n "polars-core") (v "0.22.6") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arrow") (r "^0.12") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else" "compute_take"))) (k 0) (p "arrow2")) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("std"))) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.22.6") (f (quote ("compute"))) (d #t) (k 0)) (d (n "polars-utils") (r "^0.22.6") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "17ab40l2iasqll737kplba9a3w385gm6697vz986ha17f817vac8") (f (quote (("zip_with") ("unique_counts") ("timezones" "chrono-tz" "arrow/chrono-tz") ("temporal" "regex" "chrono") ("take_opt_iter") ("strings" "regex" "polars-arrow/strings" "arrow/compute_substring") ("string_encoding" "base64" "hex") ("sort_multiple") ("simd" "arrow/simd") ("serde-lazy" "serde" "polars-arrow/serde" "indexmap/serde") ("semi_anti_join") ("rows") ("row_hash") ("round_series") ("rolling_window") ("repeat_by") ("reinterpret") ("rank") ("random" "rand" "rand_distr") ("product") ("private") ("performant") ("pct_change" "diff") ("partition_by") ("parquet" "arrow/io_parquet") ("object" "serde_json") ("moment") ("mode") ("lazy" "sort_multiple") ("is_last") ("is_in") ("is_first") ("interpolate") ("horizontal_concat") ("groupby_list") ("fmt" "comfy-table") ("extract_jsonpath" "serde_json" "jsonpath_lib") ("ewma") ("dynamic_groupby" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-struct") ("dtype-i8") ("dtype-i16") ("dtype-duration" "temporal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical") ("dot_product") ("docs-selection" "ndarray" "is_in" "sort_multiple" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "round_series" "checked_arithmetic" "repeat_by" "is_first" "is_last" "asof_join" "cross_join" "dot_product" "concat_str" "row_hash" "mode" "cum_agg" "rolling_window" "interpolate" "diff" "moment" "dtype-categorical" "rank" "diagonal_concat" "horizontal_concat" "abs" "dataframe_arithmetic" "string_encoding" "product" "unique_counts" "describe" "chunked_ids" "semi_anti_join" "partition_by") ("docs") ("diff") ("diagonal_concat") ("describe") ("default" "docs" "temporal" "private") ("dataframe_arithmetic") ("cum_agg") ("cross_join") ("concat_str") ("chunked_ids") ("checked_arithmetic") ("bigidx" "polars-arrow/bigidx") ("avx512") ("asof_join") ("abs"))))))

(define-public crate-polars-core-0.22.7 (c (n "polars-core") (v "0.22.7") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arrow") (r "^0.12") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else" "compute_take"))) (k 0) (p "arrow2")) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("std"))) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.22.7") (f (quote ("compute"))) (d #t) (k 0)) (d (n "polars-utils") (r "^0.22.7") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "04sgcjima1n3df6952sw0nb5nfzh0gi53cdv9xy3dmch7925zwgp") (f (quote (("zip_with") ("unique_counts") ("timezones" "chrono-tz" "arrow/chrono-tz") ("temporal" "regex" "chrono") ("take_opt_iter") ("strings" "regex" "polars-arrow/strings" "arrow/compute_substring") ("string_encoding" "base64" "hex") ("sort_multiple") ("simd" "arrow/simd") ("serde-lazy" "serde" "polars-arrow/serde" "indexmap/serde") ("semi_anti_join") ("rows") ("row_hash") ("round_series") ("rolling_window") ("repeat_by") ("reinterpret") ("rank") ("random" "rand" "rand_distr") ("product") ("private") ("performant") ("pct_change" "diff") ("partition_by") ("parquet" "arrow/io_parquet") ("object" "serde_json") ("moment") ("mode") ("lazy" "sort_multiple") ("is_last") ("is_in") ("is_first") ("interpolate") ("horizontal_concat") ("groupby_list") ("fmt" "comfy-table") ("extract_jsonpath" "serde_json" "jsonpath_lib") ("ewma") ("dynamic_groupby" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-struct") ("dtype-i8") ("dtype-i16") ("dtype-duration" "temporal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical") ("dot_product") ("docs-selection" "ndarray" "is_in" "sort_multiple" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "round_series" "checked_arithmetic" "repeat_by" "is_first" "is_last" "asof_join" "cross_join" "dot_product" "concat_str" "row_hash" "mode" "cum_agg" "rolling_window" "interpolate" "diff" "moment" "dtype-categorical" "rank" "diagonal_concat" "horizontal_concat" "abs" "dataframe_arithmetic" "string_encoding" "product" "unique_counts" "describe" "chunked_ids" "semi_anti_join" "partition_by") ("docs") ("diff") ("diagonal_concat") ("describe") ("default" "docs" "temporal" "private") ("dataframe_arithmetic") ("cum_agg") ("cross_join") ("concat_str") ("chunked_ids") ("checked_arithmetic") ("bigidx" "polars-arrow/bigidx") ("avx512") ("asof_join") ("abs"))))))

(define-public crate-polars-core-0.23.0 (c (n "polars-core") (v "0.23.0") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arrow") (r "^0.13") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else" "compute_take"))) (k 0) (p "arrow2")) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("std"))) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.23.0") (f (quote ("compute"))) (d #t) (k 0)) (d (n "polars-utils") (r "^0.23.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1cy6lc50lz44xbvsjfw3195yarcccjs8gyy2syb703mdbjspw254") (f (quote (("zip_with") ("unique_counts") ("timezones" "chrono-tz" "arrow/chrono-tz") ("temporal" "regex" "chrono") ("take_opt_iter") ("strings" "regex" "polars-arrow/strings" "arrow/compute_substring") ("string_encoding" "base64" "hex") ("sort_multiple") ("simd" "arrow/simd") ("serde-lazy" "serde" "polars-arrow/serde" "indexmap/serde") ("semi_anti_join") ("rows") ("row_hash") ("round_series") ("rolling_window") ("repeat_by") ("reinterpret") ("rank") ("random" "rand" "rand_distr") ("product") ("private") ("performant") ("pct_change" "diff") ("partition_by") ("parquet" "arrow/io_parquet") ("object" "serde_json") ("moment") ("mode") ("lazy" "sort_multiple") ("is_last") ("is_in") ("is_first") ("interpolate") ("horizontal_concat") ("groupby_list") ("fmt" "comfy-table") ("extract_jsonpath" "serde_json" "jsonpath_lib") ("ewma") ("dynamic_groupby" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-struct") ("dtype-i8") ("dtype-i16") ("dtype-duration" "temporal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical" "smartstring") ("dot_product") ("docs-selection" "ndarray" "is_in" "sort_multiple" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "round_series" "checked_arithmetic" "repeat_by" "is_first" "is_last" "asof_join" "cross_join" "dot_product" "concat_str" "row_hash" "mode" "cum_agg" "rolling_window" "interpolate" "diff" "moment" "dtype-categorical" "rank" "diagonal_concat" "horizontal_concat" "abs" "dataframe_arithmetic" "string_encoding" "product" "unique_counts" "describe" "chunked_ids" "semi_anti_join" "partition_by") ("docs") ("diff") ("diagonal_concat") ("describe") ("default" "docs" "temporal" "private") ("dataframe_arithmetic") ("cum_agg") ("cross_join") ("concat_str") ("chunked_ids") ("checked_arithmetic") ("bigidx" "polars-arrow/bigidx") ("avx512") ("asof_join") ("abs"))))))

(define-public crate-polars-core-0.23.1 (c (n "polars-core") (v "0.23.1") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arrow") (r "^0.13") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else" "compute_take"))) (k 0) (p "arrow2")) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("std"))) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.23.1") (f (quote ("compute"))) (d #t) (k 0)) (d (n "polars-utils") (r "^0.23.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1i2xlivlyvbz6zgm2qrjl917ssfnj3grwb3psim5mqbh70669ra4") (f (quote (("zip_with") ("unique_counts") ("timezones" "chrono-tz" "arrow/chrono-tz") ("temporal" "regex" "chrono") ("take_opt_iter") ("strings" "regex" "polars-arrow/strings" "arrow/compute_substring") ("string_encoding" "base64" "hex") ("sort_multiple") ("simd" "arrow/simd") ("serde-lazy" "serde" "polars-arrow/serde" "indexmap/serde") ("semi_anti_join") ("rows") ("row_hash") ("round_series") ("rolling_window") ("repeat_by") ("reinterpret") ("rank") ("random" "rand" "rand_distr") ("product") ("private") ("performant") ("pct_change" "diff") ("partition_by") ("parquet" "arrow/io_parquet") ("object" "serde_json") ("moment") ("mode") ("lazy" "sort_multiple") ("is_last") ("is_in") ("is_first") ("interpolate") ("horizontal_concat") ("groupby_list") ("fmt" "comfy-table") ("extract_jsonpath" "serde_json" "jsonpath_lib") ("ewma") ("dynamic_groupby" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-struct") ("dtype-i8") ("dtype-i16") ("dtype-duration" "temporal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical" "smartstring") ("dot_product") ("docs-selection" "ndarray" "is_in" "sort_multiple" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "round_series" "checked_arithmetic" "repeat_by" "is_first" "is_last" "asof_join" "cross_join" "dot_product" "concat_str" "row_hash" "mode" "cum_agg" "rolling_window" "interpolate" "diff" "moment" "dtype-categorical" "rank" "diagonal_concat" "horizontal_concat" "abs" "dataframe_arithmetic" "string_encoding" "product" "unique_counts" "describe" "chunked_ids" "semi_anti_join" "partition_by") ("docs") ("diff") ("diagonal_concat") ("describe") ("default" "docs" "temporal" "private") ("dataframe_arithmetic") ("cum_agg") ("cross_join") ("concat_str") ("chunked_ids") ("checked_arithmetic") ("bigidx" "polars-arrow/bigidx") ("avx512") ("asof_join") ("abs"))))))

(define-public crate-polars-core-0.23.2 (c (n "polars-core") (v "0.23.2") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arrow") (r "^0.13") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else" "compute_take"))) (k 0) (p "arrow2")) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("std"))) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.23.2") (f (quote ("compute"))) (d #t) (k 0)) (d (n "polars-utils") (r "^0.23.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1417r2cigj62437by5amm2sl6fijxgg3lx1k9fi9r0n47b5c3bpf") (f (quote (("zip_with") ("unique_counts") ("timezones" "chrono-tz" "arrow/chrono-tz") ("temporal" "regex" "chrono") ("take_opt_iter") ("strings" "regex" "polars-arrow/strings" "arrow/compute_substring") ("string_encoding" "base64" "hex") ("sort_multiple") ("simd" "arrow/simd") ("serde-lazy" "serde" "polars-arrow/serde" "indexmap/serde") ("semi_anti_join") ("rows") ("row_hash") ("round_series") ("rolling_window") ("repeat_by") ("reinterpret") ("rank") ("random" "rand" "rand_distr") ("product") ("private") ("performant" "polars-arrow/performant") ("pct_change" "diff") ("partition_by") ("parquet" "arrow/io_parquet") ("object" "serde_json") ("moment") ("mode") ("lazy" "sort_multiple") ("is_last") ("is_in") ("is_first") ("interpolate") ("horizontal_concat") ("groupby_list") ("fmt" "comfy-table") ("extract_jsonpath" "serde_json" "jsonpath_lib") ("ewma") ("dynamic_groupby" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-struct") ("dtype-i8") ("dtype-i16") ("dtype-duration" "temporal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical" "smartstring") ("dot_product") ("docs-selection" "ndarray" "is_in" "sort_multiple" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "round_series" "checked_arithmetic" "repeat_by" "is_first" "is_last" "asof_join" "cross_join" "dot_product" "concat_str" "row_hash" "mode" "cum_agg" "rolling_window" "interpolate" "diff" "moment" "dtype-categorical" "rank" "diagonal_concat" "horizontal_concat" "abs" "dataframe_arithmetic" "string_encoding" "product" "unique_counts" "describe" "chunked_ids" "semi_anti_join" "partition_by") ("docs") ("diff") ("diagonal_concat") ("describe") ("default" "docs" "temporal" "private") ("dataframe_arithmetic") ("cum_agg") ("cross_join") ("concat_str") ("chunked_ids") ("checked_arithmetic") ("bigidx" "polars-arrow/bigidx") ("avx512") ("asof_join") ("abs"))))))

(define-public crate-polars-core-0.24.0 (c (n "polars-core") (v "0.24.0") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arrow") (r "^0.14") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("std"))) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.24.0") (f (quote ("compute"))) (d #t) (k 0)) (d (n "polars-utils") (r "^0.24.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1mlsavfq226rp9f4igra3jvbwvxspky2cn6d9csfdsxxa9izncj4") (f (quote (("zip_with") ("unique_counts") ("timezones" "chrono-tz" "arrow/chrono-tz") ("temporal" "regex" "chrono") ("take_opt_iter") ("strings" "regex" "polars-arrow/strings" "arrow/compute_substring") ("string_encoding" "base64" "hex") ("sort_multiple") ("simd" "arrow/simd") ("serde-lazy" "serde" "polars-arrow/serde" "indexmap/serde") ("semi_anti_join") ("rows") ("row_hash") ("round_series") ("rolling_window") ("repeat_by") ("reinterpret") ("rank") ("random" "rand" "rand_distr") ("product") ("private") ("performant" "polars-arrow/performant") ("pct_change" "diff") ("partition_by") ("parquet" "arrow/io_parquet") ("object" "serde_json") ("moment") ("mode") ("lazy" "sort_multiple") ("is_last") ("is_in") ("is_first") ("interpolate") ("horizontal_concat") ("groupby_list") ("fmt" "comfy-table") ("extract_jsonpath" "serde_json" "jsonpath_lib") ("ewma") ("dynamic_groupby" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-struct") ("dtype-i8") ("dtype-i16") ("dtype-duration" "temporal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical" "smartstring") ("dot_product") ("docs-selection" "ndarray" "is_in" "sort_multiple" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "round_series" "checked_arithmetic" "repeat_by" "is_first" "is_last" "asof_join" "cross_join" "dot_product" "concat_str" "row_hash" "mode" "cum_agg" "rolling_window" "interpolate" "diff" "moment" "dtype-categorical" "rank" "diagonal_concat" "horizontal_concat" "abs" "dataframe_arithmetic" "string_encoding" "product" "unique_counts" "describe" "chunked_ids" "semi_anti_join" "partition_by") ("docs") ("diff") ("diagonal_concat") ("describe") ("default" "docs" "temporal" "private") ("dataframe_arithmetic") ("cum_agg") ("cross_join") ("concat_str") ("chunked_ids") ("checked_arithmetic") ("bigidx" "polars-arrow/bigidx") ("avx512") ("asof_join") ("abs"))))))

(define-public crate-polars-core-0.24.1 (c (n "polars-core") (v "0.24.1") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arrow") (r "^0.14") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("std"))) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.24.1") (f (quote ("compute"))) (d #t) (k 0)) (d (n "polars-utils") (r "^0.24.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0rgd9w3w2kgavi8rr2fb6m60gwvvzi14ac30jc8adgb92ak856il") (f (quote (("zip_with") ("unique_counts") ("timezones" "chrono-tz" "arrow/chrono-tz") ("temporal" "regex" "chrono") ("take_opt_iter") ("strings" "regex" "polars-arrow/strings" "arrow/compute_substring") ("string_encoding" "base64" "hex") ("sort_multiple") ("simd" "arrow/simd") ("serde-lazy" "serde" "polars-arrow/serde" "indexmap/serde") ("semi_anti_join") ("rows") ("row_hash") ("round_series") ("rolling_window") ("repeat_by") ("reinterpret") ("rank") ("random" "rand" "rand_distr") ("product") ("private") ("performant" "polars-arrow/performant") ("pct_change" "diff") ("partition_by") ("parquet" "arrow/io_parquet") ("object" "serde_json") ("moment") ("mode") ("lazy" "sort_multiple") ("is_last") ("is_in") ("is_first") ("interpolate") ("horizontal_concat") ("groupby_list") ("fmt" "comfy-table") ("extract_jsonpath" "serde_json" "jsonpath_lib") ("ewma") ("dynamic_groupby" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-struct") ("dtype-i8") ("dtype-i16") ("dtype-duration" "temporal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical" "smartstring") ("dot_product") ("docs-selection" "ndarray" "is_in" "sort_multiple" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "round_series" "checked_arithmetic" "repeat_by" "is_first" "is_last" "asof_join" "cross_join" "dot_product" "concat_str" "row_hash" "mode" "cum_agg" "rolling_window" "interpolate" "diff" "moment" "dtype-categorical" "rank" "diagonal_concat" "horizontal_concat" "abs" "dataframe_arithmetic" "string_encoding" "product" "unique_counts" "describe" "chunked_ids" "semi_anti_join" "partition_by") ("docs") ("diff") ("diagonal_concat") ("describe") ("default" "docs" "temporal" "private") ("dataframe_arithmetic") ("cum_agg") ("cross_join") ("concat_str") ("chunked_ids") ("checked_arithmetic") ("bigidx" "polars-arrow/bigidx") ("avx512") ("asof_join") ("abs"))))))

(define-public crate-polars-core-0.24.2 (c (n "polars-core") (v "0.24.2") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arrow") (r "^0.14") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("std"))) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.24.2") (f (quote ("compute"))) (d #t) (k 0)) (d (n "polars-utils") (r "^0.24.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "13f9ffl9475j4ifk3gl14y7lgfh0lkal95xnr729892q26xh0qb3") (f (quote (("zip_with") ("unique_counts") ("timezones" "chrono-tz" "arrow/chrono-tz") ("temporal" "regex" "chrono") ("take_opt_iter") ("strings" "regex" "polars-arrow/strings" "arrow/compute_substring") ("string_encoding" "base64" "hex") ("sort_multiple") ("simd" "arrow/simd") ("serde-lazy" "serde" "polars-arrow/serde" "indexmap/serde") ("semi_anti_join") ("rows") ("row_hash") ("round_series") ("rolling_window") ("repeat_by") ("reinterpret") ("rank") ("random" "rand" "rand_distr") ("product") ("private") ("performant" "polars-arrow/performant") ("pct_change" "diff") ("partition_by") ("parquet" "arrow/io_parquet") ("object" "serde_json") ("moment") ("mode") ("lazy" "sort_multiple") ("is_last") ("is_in") ("is_first") ("interpolate") ("horizontal_concat") ("groupby_list") ("fmt" "comfy-table") ("extract_jsonpath" "serde_json" "jsonpath_lib") ("ewma") ("dynamic_groupby" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-struct") ("dtype-i8") ("dtype-i16") ("dtype-duration" "temporal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical" "smartstring") ("dot_product") ("docs-selection" "ndarray" "is_in" "sort_multiple" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "round_series" "checked_arithmetic" "repeat_by" "is_first" "is_last" "asof_join" "cross_join" "dot_product" "concat_str" "row_hash" "mode" "cum_agg" "rolling_window" "interpolate" "diff" "moment" "dtype-categorical" "rank" "diagonal_concat" "horizontal_concat" "abs" "dataframe_arithmetic" "string_encoding" "product" "unique_counts" "describe" "chunked_ids" "semi_anti_join" "partition_by") ("docs") ("diff") ("diagonal_concat") ("describe") ("default" "docs" "temporal" "private") ("dataframe_arithmetic") ("cum_agg") ("cross_join") ("concat_str") ("chunked_ids") ("checked_arithmetic") ("bigidx" "polars-arrow/bigidx") ("avx512") ("asof_join") ("abs"))))))

(define-public crate-polars-core-0.24.3 (c (n "polars-core") (v "0.24.3") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arrow") (r "^0.14.1") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("std"))) (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.24.3") (f (quote ("compute"))) (d #t) (k 0)) (d (n "polars-utils") (r "^0.24.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "19cjs73y48jwpcyz1lmc0c572gxn0cz8plkbqhc8m04yywawfb6p") (f (quote (("zip_with") ("unique_counts") ("timezones" "chrono-tz" "arrow/chrono-tz") ("temporal" "regex" "chrono") ("take_opt_iter") ("strings" "regex" "polars-arrow/strings" "arrow/compute_substring") ("string_encoding" "base64" "hex") ("sort_multiple") ("simd" "arrow/simd") ("serde-lazy" "serde" "polars-arrow/serde" "indexmap/serde") ("semi_anti_join") ("rows") ("row_hash") ("round_series") ("rolling_window") ("repeat_by") ("reinterpret") ("rank") ("random" "rand" "rand_distr") ("product") ("private") ("performant" "polars-arrow/performant") ("pct_change" "diff") ("partition_by") ("parquet" "arrow/io_parquet") ("object" "serde_json") ("moment") ("mode") ("lazy" "sort_multiple") ("is_last") ("is_in") ("is_first") ("interpolate") ("horizontal_concat") ("groupby_list") ("fmt" "comfy-table") ("extract_jsonpath" "serde_json" "jsonpath_lib") ("ewma") ("dynamic_groupby" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-struct") ("dtype-i8") ("dtype-i16") ("dtype-duration" "temporal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical" "smartstring") ("dot_product") ("docs-selection" "ndarray" "is_in" "sort_multiple" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "round_series" "checked_arithmetic" "repeat_by" "is_first" "is_last" "asof_join" "cross_join" "dot_product" "concat_str" "row_hash" "mode" "cum_agg" "rolling_window" "interpolate" "diff" "moment" "dtype-categorical" "rank" "diagonal_concat" "horizontal_concat" "abs" "dataframe_arithmetic" "string_encoding" "product" "unique_counts" "describe" "chunked_ids" "semi_anti_join" "partition_by") ("docs") ("diff") ("diagonal_concat") ("describe") ("default" "docs" "temporal" "private") ("dataframe_arithmetic") ("cum_agg") ("cross_join") ("concat_str") ("chunked_ids") ("checked_arithmetic") ("bigidx" "polars-arrow/bigidx") ("avx512") ("asof_join") ("abs"))))))

(define-public crate-polars-core-0.24.4 (c (n "polars-core") (v "0.24.4") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arrow") (r "^0.14.1") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^6.1.1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("std"))) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.24.4") (f (quote ("compute"))) (d #t) (k 0)) (d (n "polars-utils") (r "^0.24.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "01ajalmm7jpv2mc3py2mk4qsdmmczf3r1za6j06bim62yb9yn9bg") (f (quote (("zip_with") ("unique_counts") ("timezones" "chrono-tz" "arrow/chrono-tz") ("temporal" "regex" "chrono") ("take_opt_iter") ("strings" "regex" "polars-arrow/strings" "arrow/compute_substring") ("string_encoding" "base64" "hex") ("sort_multiple") ("simd" "arrow/simd") ("serde-lazy" "serde" "polars-arrow/serde" "indexmap/serde") ("semi_anti_join") ("rows") ("row_hash") ("round_series") ("rolling_window") ("repeat_by") ("reinterpret") ("rank") ("random" "rand" "rand_distr") ("product") ("private") ("performant" "polars-arrow/performant") ("pct_change" "diff") ("partition_by") ("parquet" "arrow/io_parquet") ("object" "serde_json") ("nightly" "simd" "hashbrown/nightly" "polars-utils/nightly" "polars-arrow/nightly") ("moment") ("mode") ("lazy" "sort_multiple") ("is_last") ("is_in") ("is_first") ("interpolate") ("horizontal_concat") ("groupby_list") ("fmt" "comfy-table") ("ewma") ("dynamic_groupby" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-struct") ("dtype-i8") ("dtype-i16") ("dtype-duration" "temporal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical") ("dtype-binary") ("dot_product") ("docs-selection" "ndarray" "is_in" "sort_multiple" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "round_series" "checked_arithmetic" "repeat_by" "is_first" "is_last" "asof_join" "cross_join" "dot_product" "concat_str" "row_hash" "mode" "cum_agg" "rolling_window" "interpolate" "diff" "moment" "dtype-categorical" "rank" "diagonal_concat" "horizontal_concat" "abs" "dataframe_arithmetic" "string_encoding" "product" "unique_counts" "describe" "chunked_ids" "semi_anti_join" "partition_by") ("docs") ("diff") ("diagonal_concat") ("describe") ("default" "docs" "temporal" "private") ("dataframe_arithmetic") ("cum_agg") ("cross_join") ("concat_str") ("chunked_ids") ("checked_arithmetic") ("bigidx" "polars-arrow/bigidx") ("avx512") ("asof_join") ("abs")))) (y #t)))

(define-public crate-polars-core-0.25.0 (c (n "polars-core") (v "0.25.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arrow") (r "^0.14.1") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^6.1.1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("std"))) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.25.0") (f (quote ("compute"))) (d #t) (k 0)) (d (n "polars-utils") (r "^0.25.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0mqw5714xjfaq9vmin2kqjkfg5kkk4bzlbd2rsgb27a29mqlzw94") (f (quote (("zip_with") ("unique_counts") ("timezones" "chrono-tz" "arrow/chrono-tz") ("temporal" "regex" "chrono") ("take_opt_iter") ("strings" "regex" "polars-arrow/strings" "arrow/compute_substring") ("string_encoding" "base64" "hex") ("sort_multiple") ("simd" "arrow/simd") ("serde-lazy" "serde" "polars-arrow/serde" "indexmap/serde") ("semi_anti_join") ("rows") ("row_hash") ("round_series") ("rolling_window") ("repeat_by") ("reinterpret") ("rank") ("random" "rand" "rand_distr") ("product") ("private") ("performant" "polars-arrow/performant") ("pct_change" "diff") ("partition_by") ("parquet" "arrow/io_parquet") ("object" "serde_json") ("nightly" "simd" "hashbrown/nightly" "polars-utils/nightly" "polars-arrow/nightly") ("moment") ("mode") ("lazy" "sort_multiple") ("is_last") ("is_in") ("is_first") ("interpolate") ("horizontal_concat") ("groupby_list") ("fmt" "comfy-table") ("ewma") ("dynamic_groupby" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-struct") ("dtype-i8") ("dtype-i16") ("dtype-duration" "temporal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical") ("dtype-binary") ("dot_product") ("docs-selection" "ndarray" "is_in" "sort_multiple" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "round_series" "checked_arithmetic" "repeat_by" "is_first" "is_last" "asof_join" "cross_join" "dot_product" "concat_str" "row_hash" "mode" "cum_agg" "rolling_window" "interpolate" "diff" "moment" "dtype-categorical" "rank" "diagonal_concat" "horizontal_concat" "abs" "dataframe_arithmetic" "string_encoding" "product" "unique_counts" "describe" "chunked_ids" "semi_anti_join" "partition_by") ("docs") ("diff") ("diagonal_concat") ("describe") ("default" "docs" "temporal" "private") ("dataframe_arithmetic") ("cum_agg") ("cross_join") ("concat_str") ("chunked_ids") ("checked_arithmetic") ("bigidx" "polars-arrow/bigidx") ("avx512") ("asof_join") ("abs"))))))

(define-public crate-polars-core-0.25.1 (c (n "polars-core") (v "0.25.1") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arrow") (r "^0.14.1") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^6.1.1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("std"))) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.25.1") (f (quote ("compute"))) (d #t) (k 0)) (d (n "polars-utils") (r "^0.25.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "047wb8rzfbcwkylj7q986w0grwicvb92nxl6wqv21qnmc9hc197x") (f (quote (("zip_with") ("unique_counts") ("timezones" "chrono-tz" "arrow/chrono-tz") ("temporal" "regex" "chrono") ("take_opt_iter") ("strings" "regex" "polars-arrow/strings" "arrow/compute_substring") ("string_encoding" "base64" "hex") ("sort_multiple") ("simd" "arrow/simd") ("serde-lazy" "serde" "polars-arrow/serde" "indexmap/serde") ("semi_anti_join") ("rows") ("row_hash") ("round_series") ("rolling_window") ("repeat_by") ("reinterpret") ("rank") ("random" "rand" "rand_distr") ("product") ("private") ("performant" "polars-arrow/performant") ("pct_change" "diff") ("partition_by") ("parquet" "arrow/io_parquet") ("object" "serde_json") ("nightly" "simd" "hashbrown/nightly" "polars-utils/nightly" "polars-arrow/nightly") ("moment") ("mode") ("lazy" "sort_multiple") ("is_last") ("is_in") ("is_first") ("interpolate") ("horizontal_concat") ("groupby_list") ("fmt" "comfy-table") ("ewma") ("dynamic_groupby" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-struct") ("dtype-i8") ("dtype-i16") ("dtype-duration" "temporal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical") ("dtype-binary") ("dot_product") ("docs-selection" "ndarray" "is_in" "sort_multiple" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "round_series" "checked_arithmetic" "repeat_by" "is_first" "is_last" "asof_join" "cross_join" "dot_product" "concat_str" "row_hash" "mode" "cum_agg" "rolling_window" "interpolate" "diff" "moment" "dtype-categorical" "rank" "diagonal_concat" "horizontal_concat" "abs" "dataframe_arithmetic" "string_encoding" "product" "unique_counts" "describe" "chunked_ids" "semi_anti_join" "partition_by") ("docs") ("diff") ("diagonal_concat") ("describe") ("default" "docs" "temporal" "private") ("dataframe_arithmetic") ("cum_agg") ("cross_join") ("concat_str") ("chunked_ids") ("checked_arithmetic") ("bigidx" "polars-arrow/bigidx") ("avx512") ("asof_join") ("abs"))))))

(define-public crate-polars-core-0.26.0 (c (n "polars-core") (v "0.26.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arrow") (r "^0.15") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^6.1.1") (o #t) (k 0)) (d (n "hashbrown") (r "^0.13.1") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("std"))) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.26.0") (f (quote ("compute"))) (d #t) (k 0)) (d (n "polars-utils") (r "^0.26.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8.6") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "11rqkzmg55whyhqd95l00qpmaglririwd9b9m68wh1hv6060bw8h") (f (quote (("zip_with") ("unique_counts") ("timezones" "chrono-tz" "arrow/chrono-tz" "polars-arrow/timezones") ("temporal" "regex" "chrono") ("take_opt_iter") ("strings" "regex" "polars-arrow/strings" "arrow/compute_substring") ("string_encoding" "base64" "hex") ("sort_multiple") ("simd" "arrow/simd") ("serde-lazy" "serde" "polars-arrow/serde" "indexmap/serde") ("semi_anti_join") ("rows") ("row_hash") ("round_series") ("rolling_window") ("repeat_by") ("reinterpret") ("rank") ("random" "rand" "rand_distr") ("product") ("private") ("performant" "polars-arrow/performant") ("pct_change" "diff") ("partition_by") ("parquet" "arrow/io_parquet") ("object" "serde_json") ("nightly" "simd" "hashbrown/nightly" "polars-utils/nightly" "polars-arrow/nightly") ("moment") ("mode") ("lazy" "sort_multiple") ("is_last") ("is_in") ("is_first") ("horizontal_concat") ("groupby_list") ("fmt_no_tty" "comfy-table") ("fmt" "comfy-table/tty") ("ewma") ("dynamic_groupby" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-struct") ("dtype-i8") ("dtype-i16") ("dtype-duration" "temporal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical") ("dtype-binary") ("dot_product") ("docs-selection" "ndarray" "is_in" "sort_multiple" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "round_series" "checked_arithmetic" "repeat_by" "is_first" "is_last" "asof_join" "cross_join" "dot_product" "concat_str" "row_hash" "mode" "cum_agg" "rolling_window" "diff" "moment" "dtype-categorical" "rank" "diagonal_concat" "horizontal_concat" "abs" "dataframe_arithmetic" "string_encoding" "product" "unique_counts" "describe" "chunked_ids" "semi_anti_join" "partition_by") ("docs") ("diff") ("diagonal_concat") ("describe") ("default" "docs" "temporal" "private") ("dataframe_arithmetic") ("cum_agg") ("cross_join") ("concat_str") ("chunked_ids") ("checked_arithmetic") ("bigidx" "polars-arrow/bigidx") ("avx512") ("asof_join") ("abs"))))))

(define-public crate-polars-core-0.26.1 (c (n "polars-core") (v "0.26.1") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arrow") (r "^0.15") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^6.1.1") (o #t) (k 0)) (d (n "hashbrown") (r "^0.13.1") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("std"))) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.26.1") (f (quote ("compute"))) (d #t) (k 0)) (d (n "polars-utils") (r "^0.26.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8.6") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "177bcz24pj4plv6j0qbw47z5dbc4kj32253f9aj38ap420g5rax3") (f (quote (("zip_with") ("unique_counts") ("timezones" "chrono-tz" "arrow/chrono-tz" "polars-arrow/timezones") ("temporal" "regex" "chrono") ("take_opt_iter") ("strings" "regex" "polars-arrow/strings" "arrow/compute_substring") ("string_encoding" "base64" "hex") ("sort_multiple") ("simd" "arrow/simd") ("serde-lazy" "serde" "polars-arrow/serde" "indexmap/serde") ("semi_anti_join") ("rows") ("row_hash") ("round_series") ("rolling_window") ("repeat_by") ("reinterpret") ("rank") ("random" "rand" "rand_distr") ("product") ("private") ("performant" "polars-arrow/performant") ("pct_change" "diff") ("partition_by") ("parquet" "arrow/io_parquet") ("object" "serde_json") ("nightly" "simd" "hashbrown/nightly" "polars-utils/nightly" "polars-arrow/nightly") ("moment") ("mode") ("lazy" "sort_multiple") ("is_last") ("is_in") ("is_first") ("horizontal_concat") ("groupby_list") ("fmt_no_tty" "comfy-table") ("fmt" "comfy-table/tty") ("ewma") ("dynamic_groupby" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-struct") ("dtype-i8") ("dtype-i16") ("dtype-duration" "temporal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical") ("dtype-binary") ("dot_product") ("docs-selection" "ndarray" "is_in" "sort_multiple" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "round_series" "checked_arithmetic" "repeat_by" "is_first" "is_last" "asof_join" "cross_join" "dot_product" "concat_str" "row_hash" "mode" "cum_agg" "rolling_window" "diff" "moment" "dtype-categorical" "rank" "diagonal_concat" "horizontal_concat" "abs" "dataframe_arithmetic" "string_encoding" "product" "unique_counts" "describe" "chunked_ids" "semi_anti_join" "partition_by") ("docs") ("diff") ("diagonal_concat") ("describe") ("default" "docs" "temporal" "private") ("dataframe_arithmetic") ("cum_agg") ("cross_join") ("concat_str") ("chunked_ids") ("checked_arithmetic") ("bigidx" "polars-arrow/bigidx") ("avx512") ("asof_join") ("abs"))))))

(define-public crate-polars-core-0.27.0 (c (n "polars-core") (v "0.27.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arrow") (r "^0.16") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^6.1.4") (o #t) (k 0)) (d (n "hashbrown") (r "^0.13.1") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("std"))) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "object_store") (r "^0.5.3") (o #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.27.0") (f (quote ("compute"))) (d #t) (k 0)) (d (n "polars-utils") (r "^0.27.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (o #t) (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2.5") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "xxhash-rust") (r "^0.8.6") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "0qhbc74hz9bfz9d4jgfxrxyd58kia30b2f27gq4hgy1dlc99scfn") (f (quote (("zip_with") ("unique_counts") ("timezones" "chrono-tz" "arrow/chrono-tz" "polars-arrow/timezones") ("temporal" "regex" "chrono") ("take_opt_iter") ("strings" "regex" "polars-arrow/strings" "arrow/compute_substring") ("sort_multiple") ("simd" "arrow/simd") ("serde-lazy" "serde" "polars-arrow/serde" "indexmap/serde") ("semi_anti_join") ("rows") ("row_hash") ("round_series") ("rolling_window") ("repeat_by") ("reinterpret") ("rank") ("random" "rand" "rand_distr") ("python") ("product") ("private") ("performant" "polars-arrow/performant") ("pct_change" "diff") ("partition_by") ("parquet" "arrow/io_parquet") ("object" "serde_json") ("nightly" "simd" "hashbrown/nightly" "polars-utils/nightly" "polars-arrow/nightly") ("moment") ("mode") ("lazy" "sort_multiple") ("is_last") ("is_in") ("is_first") ("horizontal_concat") ("groupby_list") ("gcp" "async" "object_store/gcp") ("fmt_no_tty" "comfy-table") ("fmt" "comfy-table/tty") ("ewma") ("dynamic_groupby" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-struct") ("dtype-i8") ("dtype-i16") ("dtype-i128") ("dtype-duration" "temporal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical") ("dtype-binary") ("dot_product") ("docs-selection" "ndarray" "is_in" "sort_multiple" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "round_series" "checked_arithmetic" "repeat_by" "is_first" "is_last" "asof_join" "cross_join" "dot_product" "concat_str" "row_hash" "mode" "cum_agg" "rolling_window" "diff" "moment" "dtype-categorical" "rank" "diagonal_concat" "horizontal_concat" "abs" "dataframe_arithmetic" "product" "unique_counts" "describe" "chunked_ids" "semi_anti_join" "partition_by") ("docs") ("diff") ("diagonal_concat") ("describe") ("default" "docs" "temporal" "private") ("dataframe_arithmetic") ("cum_agg") ("cross_join") ("concat_str") ("chunked_ids") ("checked_arithmetic") ("bigidx" "polars-arrow/bigidx") ("azure" "async" "object_store/azure") ("aws" "async" "object_store/aws") ("avx512") ("async" "url") ("asof_join") ("abs"))))))

(define-public crate-polars-core-0.27.1 (c (n "polars-core") (v "0.27.1") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arrow") (r "^0.16") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^6.1.4") (o #t) (k 0)) (d (n "hashbrown") (r "^0.13.1") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("std"))) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "object_store") (r "^0.5.3") (o #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.27.1") (f (quote ("compute"))) (d #t) (k 0)) (d (n "polars-utils") (r "^0.27.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (o #t) (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2.5") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "xxhash-rust") (r "^0.8.6") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "01fapp79f536s6ap2bv9m4dzz6q8y24a0rjymwqxp9ygcml0hmi2") (f (quote (("zip_with") ("unique_counts") ("timezones" "chrono-tz" "arrow/chrono-tz" "polars-arrow/timezones") ("temporal" "regex" "chrono") ("take_opt_iter") ("strings" "regex" "polars-arrow/strings" "arrow/compute_substring") ("sort_multiple") ("simd" "arrow/simd") ("serde-lazy" "serde" "polars-arrow/serde" "indexmap/serde") ("semi_anti_join") ("rows") ("row_hash") ("round_series") ("rolling_window") ("repeat_by") ("reinterpret") ("rank") ("random" "rand" "rand_distr") ("python") ("product") ("private") ("performant" "polars-arrow/performant") ("pct_change" "diff") ("partition_by") ("parquet" "arrow/io_parquet") ("object" "serde_json") ("nightly" "simd" "hashbrown/nightly" "polars-utils/nightly" "polars-arrow/nightly") ("moment") ("mode") ("lazy" "sort_multiple") ("is_last") ("is_in") ("is_first") ("horizontal_concat") ("groupby_list") ("gcp" "async" "object_store/gcp") ("fmt_no_tty" "comfy-table") ("fmt" "comfy-table/tty") ("ewma") ("dynamic_groupby" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-struct") ("dtype-i8") ("dtype-i16") ("dtype-i128") ("dtype-duration" "temporal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical") ("dtype-binary") ("dot_product") ("docs-selection" "ndarray" "is_in" "sort_multiple" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "round_series" "checked_arithmetic" "repeat_by" "is_first" "is_last" "asof_join" "cross_join" "dot_product" "concat_str" "row_hash" "mode" "cum_agg" "rolling_window" "diff" "moment" "dtype-categorical" "rank" "diagonal_concat" "horizontal_concat" "abs" "dataframe_arithmetic" "product" "unique_counts" "describe" "chunked_ids" "semi_anti_join" "partition_by") ("docs") ("diff") ("diagonal_concat") ("describe") ("default" "docs" "temporal" "private") ("dataframe_arithmetic") ("cum_agg") ("cross_join") ("concat_str") ("chunked_ids") ("checked_arithmetic") ("bigidx" "polars-arrow/bigidx") ("azure" "async" "object_store/azure") ("aws" "async" "object_store/aws") ("avx512") ("async" "url") ("asof_join") ("abs"))))))

(define-public crate-polars-core-0.27.2 (c (n "polars-core") (v "0.27.2") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arrow") (r "^0.16") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^6.1.4") (o #t) (k 0)) (d (n "hashbrown") (r "^0.13.1") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("std"))) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "object_store") (r "^0.5.3") (o #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.27.2") (f (quote ("compute"))) (d #t) (k 0)) (d (n "polars-utils") (r "^0.27.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (o #t) (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2.5") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "xxhash-rust") (r "^0.8.6") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "0akvy2kmznj2cbcp0iadgcj2dln2gk6kdnhzmizsiw8n77ahqi2s") (f (quote (("zip_with") ("unique_counts") ("timezones" "chrono-tz" "arrow/chrono-tz" "polars-arrow/timezones") ("temporal" "regex" "chrono") ("take_opt_iter") ("strings" "regex" "polars-arrow/strings" "arrow/compute_substring") ("sort_multiple") ("simd" "arrow/simd") ("serde-lazy" "serde" "polars-arrow/serde" "indexmap/serde") ("semi_anti_join") ("rows") ("row_hash") ("round_series") ("rolling_window") ("repeat_by") ("reinterpret") ("rank") ("random" "rand" "rand_distr") ("python") ("product") ("private") ("performant" "polars-arrow/performant") ("pct_change" "diff") ("partition_by") ("parquet" "arrow/io_parquet") ("object" "serde_json") ("nightly" "simd" "hashbrown/nightly" "polars-utils/nightly" "polars-arrow/nightly") ("moment") ("mode") ("lazy" "sort_multiple") ("is_last") ("is_in") ("is_first") ("horizontal_concat") ("groupby_list") ("gcp" "async" "object_store/gcp") ("fmt_no_tty" "comfy-table") ("fmt" "comfy-table/tty") ("ewma") ("dynamic_groupby" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-struct") ("dtype-i8") ("dtype-i16") ("dtype-i128") ("dtype-duration" "temporal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical") ("dtype-binary") ("dot_product") ("docs-selection" "ndarray" "is_in" "sort_multiple" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "round_series" "checked_arithmetic" "repeat_by" "is_first" "is_last" "asof_join" "cross_join" "dot_product" "concat_str" "row_hash" "mode" "cum_agg" "rolling_window" "diff" "moment" "dtype-categorical" "rank" "diagonal_concat" "horizontal_concat" "abs" "dataframe_arithmetic" "product" "unique_counts" "describe" "chunked_ids" "semi_anti_join" "partition_by") ("docs") ("diff") ("diagonal_concat") ("describe") ("default" "docs" "temporal" "private") ("dataframe_arithmetic") ("cum_agg") ("cross_join") ("concat_str") ("chunked_ids") ("checked_arithmetic") ("bigidx" "polars-arrow/bigidx") ("azure" "async" "object_store/azure") ("aws" "async" "object_store/aws") ("avx512") ("async" "url") ("asof_join") ("abs"))))))

(define-public crate-polars-core-0.28.0 (c (n "polars-core") (v "0.28.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "arrow") (r "^0.17") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^6.1.4") (o #t) (k 0)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.1") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("std"))) (d #t) (k 0)) (d (n "itoap") (r "^1") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "object_store") (r "^0.5.3") (o #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.28.0") (f (quote ("compute"))) (d #t) (k 0)) (d (n "polars-error") (r "^0.28.0") (d #t) (k 0)) (d (n "polars-row") (r "^0.28.0") (d #t) (k 0)) (d (n "polars-utils") (r "^0.28.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "regex") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (o #t) (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2.5") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "xxhash-rust") (r "^0.8.6") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "1ghcwyjm2wzy3y3lxmq5q76463axpc660g9d7ggs0c8zg6ams504") (f (quote (("zip_with") ("unique_counts") ("timezones" "chrono-tz" "arrow/chrono-tz" "polars-arrow/timezones") ("temporal" "regex" "chrono" "polars-error/regex") ("take_opt_iter") ("strings" "regex" "polars-arrow/strings" "arrow/compute_substring" "polars-error/regex") ("sort_multiple") ("simd" "arrow/simd" "polars-arrow/simd") ("serde-lazy" "serde" "polars-arrow/serde" "indexmap/serde" "smartstring/serde" "chrono/serde") ("semi_anti_join") ("rows") ("row_hash") ("round_series") ("rolling_window") ("repeat_by") ("reinterpret") ("rank") ("random" "rand" "rand_distr") ("python") ("product") ("private") ("performant" "polars-arrow/performant") ("pct_change" "diff") ("partition_by") ("parquet" "arrow/io_parquet") ("object" "serde_json") ("nightly" "simd" "hashbrown/nightly" "polars-utils/nightly" "polars-arrow/nightly") ("moment") ("mode") ("lazy") ("is_last") ("is_in") ("is_first") ("horizontal_concat") ("groupby_list") ("gcp" "async" "object_store/gcp") ("fmt_no_tty" "comfy-table") ("fmt" "comfy-table/tty") ("ewma") ("dynamic_groupby" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-struct") ("dtype-i8") ("dtype-i16") ("dtype-duration" "temporal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical") ("dot_product") ("docs-selection" "ndarray" "is_in" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "round_series" "checked_arithmetic" "repeat_by" "is_first" "is_last" "asof_join" "cross_join" "dot_product" "concat_str" "row_hash" "mode" "cum_agg" "rolling_window" "diff" "moment" "dtype-categorical" "rank" "diagonal_concat" "horizontal_concat" "abs" "dataframe_arithmetic" "product" "unique_counts" "describe" "chunked_ids" "semi_anti_join" "partition_by") ("docs") ("diff") ("diagonal_concat") ("describe") ("default" "docs" "temporal" "private") ("dataframe_arithmetic") ("cum_agg") ("cross_join") ("concat_str") ("chunked_ids") ("checked_arithmetic") ("bigidx" "polars-arrow/bigidx") ("azure" "async" "object_store/azure") ("aws" "async" "object_store/aws") ("avx512") ("async" "url") ("asof_join") ("abs")))) (s 2) (e (quote (("dtype-decimal" "dep:itoap"))))))

(define-public crate-polars-core-0.29.0 (c (n "polars-core") (v "0.29.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "arrow") (r "^0.17") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^6.1.4") (o #t) (k 0)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.1") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("std"))) (d #t) (k 0)) (d (n "itoap") (r "^1") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "object_store") (r "^0.5.3") (o #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.29.0") (f (quote ("compute"))) (d #t) (k 0)) (d (n "polars-error") (r "^0.29.0") (d #t) (k 0)) (d (n "polars-row") (r "^0.29.0") (d #t) (k 0)) (d (n "polars-utils") (r "^0.29.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "regex") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (o #t) (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2.5") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "xxhash-rust") (r "^0.8.6") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "0721cih68hvqlx44wdxppapp5ha4jvr8f4kw90rp7ih50npzb8fa") (f (quote (("zip_with") ("unique_counts") ("timezones" "chrono-tz" "arrow/chrono-tz" "polars-arrow/timezones") ("temporal" "regex" "chrono" "polars-error/regex") ("take_opt_iter") ("strings" "regex" "polars-arrow/strings" "arrow/compute_substring" "polars-error/regex") ("sort_multiple") ("simd" "arrow/simd" "polars-arrow/simd") ("serde-lazy" "serde" "polars-arrow/serde" "indexmap/serde" "smartstring/serde" "chrono/serde") ("semi_anti_join") ("rows") ("row_hash") ("round_series") ("rolling_window") ("repeat_by") ("reinterpret") ("rank") ("random" "rand" "rand_distr") ("python") ("product") ("private") ("performant" "polars-arrow/performant") ("pct_change" "diff") ("partition_by") ("parquet" "arrow/io_parquet") ("object" "serde_json") ("nightly" "simd" "hashbrown/nightly" "polars-utils/nightly" "polars-arrow/nightly") ("moment") ("mode") ("lazy") ("is_last") ("is_in") ("is_first") ("horizontal_concat") ("groupby_list") ("gcp" "async" "object_store/gcp") ("fmt_no_tty" "comfy-table") ("fmt" "comfy-table/tty") ("ewma") ("dynamic_groupby" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-struct") ("dtype-i8") ("dtype-i16") ("dtype-duration" "temporal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical") ("dot_product") ("docs-selection" "ndarray" "is_in" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "round_series" "checked_arithmetic" "repeat_by" "is_first" "is_last" "asof_join" "cross_join" "dot_product" "concat_str" "row_hash" "mode" "cum_agg" "rolling_window" "diff" "moment" "dtype-categorical" "rank" "diagonal_concat" "horizontal_concat" "abs" "dataframe_arithmetic" "product" "unique_counts" "describe" "chunked_ids" "semi_anti_join" "partition_by") ("docs") ("diff") ("diagonal_concat") ("describe") ("default" "docs" "temporal" "private") ("dataframe_arithmetic") ("cum_agg") ("cross_join") ("concat_str") ("chunked_ids") ("checked_arithmetic") ("bigidx" "polars-arrow/bigidx") ("azure" "async" "object_store/azure") ("aws" "async" "object_store/aws") ("avx512") ("async" "url") ("asof_join") ("abs")))) (s 2) (e (quote (("serde" "dep:serde" "smartstring/serde") ("dtype-decimal" "dep:itoap"))))))

(define-public crate-polars-core-0.30.0 (c (n "polars-core") (v "0.30.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "arrow") (r "^0.17") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^6.1.4") (o #t) (k 0)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.1") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("std"))) (d #t) (k 0)) (d (n "itoap") (r "^1") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "object_store") (r "^0.5.3") (o #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.30.0") (f (quote ("compute"))) (d #t) (k 0)) (d (n "polars-error") (r "^0.30.0") (d #t) (k 0)) (d (n "polars-row") (r "^0.30.0") (d #t) (k 0)) (d (n "polars-utils") (r "^0.30.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "regex") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (o #t) (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2.5") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "xxhash-rust") (r "^0.8.6") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "1q3hnr9rpxdbs4q2js6d50mnhw1pixs6dypbnnkx4vrkldm23dvq") (f (quote (("zip_with") ("unique_counts") ("timezones" "chrono-tz" "arrow/chrono-tz" "polars-arrow/timezones") ("temporal" "regex" "chrono" "polars-error/regex") ("take_opt_iter") ("strings" "regex" "polars-arrow/strings" "arrow/compute_substring" "polars-error/regex") ("sort_multiple") ("simd" "arrow/simd" "polars-arrow/simd") ("serde-lazy" "serde" "polars-arrow/serde" "indexmap/serde" "smartstring/serde" "chrono/serde") ("semi_anti_join") ("rows") ("row_hash") ("round_series") ("rolling_window") ("repeat_by") ("reinterpret") ("rank") ("random" "rand" "rand_distr") ("python") ("product") ("private") ("performant" "polars-arrow/performant") ("pct_change" "diff") ("partition_by") ("parquet" "arrow/io_parquet") ("object" "serde_json") ("nightly" "simd" "hashbrown/nightly" "polars-utils/nightly" "polars-arrow/nightly") ("moment") ("mode") ("lazy") ("is_last") ("is_in") ("is_first") ("horizontal_concat") ("groupby_list") ("gcp" "async" "object_store/gcp") ("fmt_no_tty" "comfy-table") ("fmt" "comfy-table/tty") ("ewma") ("dynamic_groupby" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-struct") ("dtype-i8") ("dtype-i16") ("dtype-duration" "temporal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical") ("dtype-array" "polars-arrow/dtype-array") ("dot_product") ("docs-selection" "ndarray" "is_in" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "round_series" "checked_arithmetic" "repeat_by" "is_first" "is_last" "asof_join" "cross_join" "dot_product" "concat_str" "row_hash" "mode" "cum_agg" "rolling_window" "diff" "moment" "dtype-categorical" "rank" "diagonal_concat" "horizontal_concat" "abs" "dataframe_arithmetic" "product" "unique_counts" "describe" "chunked_ids" "semi_anti_join" "partition_by") ("docs") ("diff") ("diagonal_concat") ("describe") ("default" "docs" "temporal" "private") ("dataframe_arithmetic") ("cum_agg") ("cross_join") ("concat_str") ("chunked_ids") ("checked_arithmetic") ("bigidx" "polars-arrow/bigidx") ("azure" "async" "object_store/azure") ("aws" "async" "object_store/aws") ("avx512") ("async" "url") ("asof_join") ("abs")))) (s 2) (e (quote (("serde" "dep:serde" "smartstring/serde") ("dtype-decimal" "dep:itoap"))))))

(define-public crate-polars-core-0.31.0 (c (n "polars-core") (v "0.31.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "arrow") (r "^0.17") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^7.0.1") (o #t) (k 0)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.0") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "itoap") (r "^1") (f (quote ("simd"))) (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "object_store") (r "^0.6.0") (o #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.31.0") (f (quote ("compute"))) (d #t) (k 0)) (d (n "polars-error") (r "^0.31.0") (d #t) (k 0)) (d (n "polars-row") (r "^0.31.0") (d #t) (k 0)) (d (n "polars-utils") (r "^0.31.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "regex") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (o #t) (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2.5") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "xxhash-rust") (r "^0.8.6") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "055rsy7bjdzhwv262d11m82sdkhdxqz7l6l61wqgsxpmr8w38krx") (f (quote (("zip_with") ("unique_counts") ("timezones" "chrono-tz" "arrow/chrono-tz" "polars-arrow/timezones") ("temporal" "regex" "chrono" "polars-error/regex") ("take_opt_iter") ("strings" "regex" "polars-arrow/strings" "arrow/compute_substring" "polars-error/regex") ("sort_multiple") ("simd" "arrow/simd" "polars-arrow/simd") ("serde-lazy" "serde" "polars-arrow/serde" "indexmap/serde" "smartstring/serde" "chrono/serde") ("semi_anti_join") ("rows") ("row_hash") ("round_series") ("rolling_window") ("repeat_by") ("reinterpret") ("rank") ("random" "rand" "rand_distr") ("python") ("product") ("performant" "polars-arrow/performant") ("pct_change" "diff") ("partition_by") ("parquet" "arrow/io_parquet") ("object" "serde_json") ("nightly" "simd" "hashbrown/nightly" "polars-utils/nightly" "polars-arrow/nightly") ("moment") ("mode") ("lazy") ("is_last") ("is_in") ("is_first") ("horizontal_concat") ("groupby_list") ("gcp" "async" "object_store/gcp") ("fmt_no_tty" "comfy-table") ("fmt" "comfy-table/tty") ("ewma") ("dynamic_groupby" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-struct") ("dtype-i8") ("dtype-i16") ("dtype-duration" "temporal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical") ("dtype-array" "polars-arrow/dtype-array") ("dot_product") ("docs-selection" "ndarray" "is_in" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "round_series" "checked_arithmetic" "repeat_by" "is_first" "is_last" "asof_join" "cross_join" "dot_product" "concat_str" "row_hash" "mode" "cum_agg" "rolling_window" "diff" "moment" "dtype-categorical" "rank" "diagonal_concat" "horizontal_concat" "abs" "dataframe_arithmetic" "product" "unique_counts" "describe" "chunked_ids" "semi_anti_join" "partition_by") ("docs") ("diff") ("diagonal_concat") ("describe") ("default" "docs" "temporal") ("dataframe_arithmetic") ("cum_agg") ("cross_join") ("concat_str") ("chunked_ids") ("checked_arithmetic") ("bigidx" "polars-arrow/bigidx") ("azure" "async" "object_store/azure") ("aws" "async" "object_store/aws") ("avx512") ("async" "url") ("asof_join") ("abs")))) (s 2) (e (quote (("serde" "dep:serde" "smartstring/serde") ("dtype-decimal" "dep:itoap" "polars-arrow/dtype-decimal"))))))

(define-public crate-polars-core-0.31.1 (c (n "polars-core") (v "0.31.1") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "arrow") (r "^0.17.2") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^7.0.1") (o #t) (k 0)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.0") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "itoap") (r "^1") (f (quote ("simd"))) (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "object_store") (r "^0.6.0") (o #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.31.1") (f (quote ("compute"))) (d #t) (k 0)) (d (n "polars-error") (r "^0.31.1") (d #t) (k 0)) (d (n "polars-row") (r "^0.31.1") (d #t) (k 0)) (d (n "polars-utils") (r "^0.31.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "regex") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (o #t) (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2.5") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "xxhash-rust") (r "^0.8.6") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "0idfsnvxg3yl8hlqjl2ghgs75pkiscs4d65lcdhgfqjkxyqxd64z") (f (quote (("zip_with") ("unique_counts") ("timezones" "chrono-tz" "arrow/chrono-tz" "polars-arrow/timezones") ("temporal" "regex" "chrono" "polars-error/regex") ("take_opt_iter") ("strings" "regex" "polars-arrow/strings" "arrow/compute_substring" "polars-error/regex") ("sort_multiple") ("simd" "arrow/simd" "polars-arrow/simd") ("serde-lazy" "serde" "polars-arrow/serde" "indexmap/serde" "smartstring/serde" "chrono/serde") ("semi_anti_join") ("rows") ("row_hash") ("round_series") ("rolling_window") ("repeat_by") ("reinterpret") ("rank") ("random" "rand" "rand_distr") ("python") ("product") ("performant" "polars-arrow/performant") ("pct_change" "diff") ("partition_by") ("parquet" "arrow/io_parquet") ("object" "serde_json") ("nightly" "simd" "hashbrown/nightly" "polars-utils/nightly" "polars-arrow/nightly") ("moment") ("mode") ("lazy") ("is_last") ("is_in") ("is_first") ("horizontal_concat") ("groupby_list") ("gcp" "async" "object_store/gcp") ("fmt_no_tty" "comfy-table") ("fmt" "comfy-table/tty") ("ewma") ("dynamic_groupby" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-struct") ("dtype-i8") ("dtype-i16") ("dtype-duration" "temporal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical") ("dtype-array" "polars-arrow/dtype-array") ("dot_product") ("docs-selection" "ndarray" "is_in" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "round_series" "checked_arithmetic" "repeat_by" "is_first" "is_last" "asof_join" "cross_join" "dot_product" "concat_str" "row_hash" "mode" "cum_agg" "rolling_window" "diff" "moment" "dtype-categorical" "rank" "diagonal_concat" "horizontal_concat" "abs" "dataframe_arithmetic" "product" "unique_counts" "describe" "chunked_ids" "semi_anti_join" "partition_by") ("docs") ("diff") ("diagonal_concat") ("describe") ("default" "docs" "temporal") ("dataframe_arithmetic") ("cum_agg") ("cross_join") ("concat_str") ("chunked_ids") ("checked_arithmetic") ("bigidx" "polars-arrow/bigidx") ("azure" "async" "object_store/azure") ("aws" "async" "object_store/aws") ("avx512") ("async" "url") ("asof_join") ("abs")))) (s 2) (e (quote (("serde" "dep:serde" "smartstring/serde") ("dtype-decimal" "dep:itoap" "polars-arrow/dtype-decimal"))))))

(define-public crate-polars-core-0.32.0 (c (n "polars-core") (v "0.32.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "arrow") (r "^0.17.4") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^7.0.1") (o #t) (k 0)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "itoap") (r "^1") (f (quote ("simd"))) (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "object_store") (r "^0.6") (o #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.32.0") (f (quote ("compute"))) (d #t) (k 0)) (d (n "polars-error") (r "^0.32.0") (d #t) (k 0)) (d (n "polars-row") (r "^0.32.0") (d #t) (k 0)) (d (n "polars-utils") (r "^0.32.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)) (d (n "xxhash-rust") (r "^0.8.6") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "175ifa9yvnbxsg520qzj8svbccg13rdc7w3zr9clwg0zmrl5867n") (f (quote (("zip_with") ("unique_counts") ("timezones" "chrono-tz" "arrow/chrono-tz" "polars-arrow/timezones") ("temporal" "regex" "chrono" "polars-error/regex") ("take_opt_iter") ("strings" "regex" "polars-arrow/strings" "arrow/compute_substring" "polars-error/regex") ("sort_multiple") ("simd" "arrow/simd" "polars-arrow/simd") ("serde-lazy" "serde" "polars-arrow/serde" "indexmap/serde" "smartstring/serde" "chrono/serde") ("semi_anti_join") ("rows") ("row_hash") ("round_series") ("rolling_window") ("repeat_by") ("reinterpret") ("rank") ("random" "rand" "rand_distr") ("python") ("product") ("performant" "polars-arrow/performant") ("pct_change" "diff") ("partition_by") ("parquet" "arrow/io_parquet") ("object" "serde_json") ("nightly" "simd" "hashbrown/nightly" "polars-utils/nightly" "polars-arrow/nightly") ("moment") ("mode") ("lazy") ("is_last") ("is_in") ("is_first") ("horizontal_concat") ("groupby_list") ("gcp" "async" "object_store/gcp") ("fmt_no_tty" "comfy-table") ("fmt" "comfy-table/tty") ("ewma") ("dynamic_groupby" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-struct") ("dtype-i8") ("dtype-i16") ("dtype-duration" "temporal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical") ("dtype-array" "polars-arrow/dtype-array") ("dot_product") ("docs-selection" "ndarray" "is_in" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "round_series" "checked_arithmetic" "repeat_by" "is_first" "is_last" "asof_join" "cross_join" "dot_product" "concat_str" "row_hash" "mode" "cum_agg" "rolling_window" "diff" "moment" "dtype-categorical" "dtype-decimal" "rank" "diagonal_concat" "horizontal_concat" "abs" "dataframe_arithmetic" "product" "unique_counts" "describe" "chunked_ids" "semi_anti_join" "partition_by") ("docs") ("diff") ("diagonal_concat") ("describe") ("default" "docs" "temporal") ("dataframe_arithmetic") ("cum_agg") ("cross_join") ("concat_str") ("chunked_ids") ("checked_arithmetic") ("bigidx" "polars-arrow/bigidx") ("azure" "async" "object_store/azure") ("aws" "async" "object_store/aws") ("avx512") ("async" "url") ("asof_join") ("abs")))) (s 2) (e (quote (("serde" "dep:serde" "smartstring/serde" "bitflags/serde") ("dtype-decimal" "dep:itoap" "polars-arrow/dtype-decimal"))))))

(define-public crate-polars-core-0.32.1 (c (n "polars-core") (v "0.32.1") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "arrow") (r "^0.17.4") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^7.0.1") (o #t) (k 0)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "itoap") (r "^1") (f (quote ("simd"))) (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "object_store") (r "^0.6") (o #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.32.1") (f (quote ("compute"))) (d #t) (k 0)) (d (n "polars-error") (r "^0.32.1") (d #t) (k 0)) (d (n "polars-row") (r "^0.32.1") (d #t) (k 0)) (d (n "polars-utils") (r "^0.32.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)) (d (n "xxhash-rust") (r "^0.8.6") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "09h1wvg031pfjy9gbknacjbc1qkjz9yn1fasz27nczqnbgy94kxj") (f (quote (("zip_with") ("unique_counts") ("timezones" "chrono-tz" "arrow/chrono-tz" "polars-arrow/timezones") ("temporal" "regex" "chrono" "polars-error/regex") ("take_opt_iter") ("strings" "regex" "polars-arrow/strings" "arrow/compute_substring" "polars-error/regex") ("sort_multiple") ("simd" "arrow/simd" "polars-arrow/simd") ("serde-lazy" "serde" "polars-arrow/serde" "indexmap/serde" "smartstring/serde" "chrono/serde") ("semi_anti_join") ("rows") ("row_hash") ("round_series") ("rolling_window") ("repeat_by") ("reinterpret") ("rank") ("random" "rand" "rand_distr") ("python") ("product") ("performant" "polars-arrow/performant") ("pct_change" "diff") ("partition_by") ("parquet" "arrow/io_parquet") ("object" "serde_json") ("nightly" "simd" "hashbrown/nightly" "polars-utils/nightly" "polars-arrow/nightly") ("moment") ("mode") ("lazy") ("is_last") ("is_in") ("is_first") ("horizontal_concat") ("groupby_list") ("gcp" "async" "object_store/gcp") ("fmt_no_tty" "comfy-table") ("fmt" "comfy-table/tty") ("ewma") ("dynamic_groupby" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-struct") ("dtype-i8") ("dtype-i16") ("dtype-duration" "temporal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical") ("dtype-array" "polars-arrow/dtype-array") ("dot_product") ("docs-selection" "ndarray" "is_in" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "round_series" "checked_arithmetic" "repeat_by" "is_first" "is_last" "asof_join" "cross_join" "dot_product" "concat_str" "row_hash" "mode" "cum_agg" "rolling_window" "diff" "moment" "dtype-categorical" "dtype-decimal" "rank" "diagonal_concat" "horizontal_concat" "abs" "dataframe_arithmetic" "product" "unique_counts" "describe" "chunked_ids" "semi_anti_join" "partition_by") ("docs") ("diff") ("diagonal_concat") ("describe") ("default" "docs" "temporal") ("dataframe_arithmetic") ("cum_agg") ("cross_join") ("concat_str") ("chunked_ids") ("checked_arithmetic") ("bigidx" "polars-arrow/bigidx") ("azure" "async" "object_store/azure") ("aws" "async" "object_store/aws") ("avx512") ("async" "url") ("asof_join") ("abs")))) (s 2) (e (quote (("serde" "dep:serde" "smartstring/serde" "bitflags/serde") ("dtype-decimal" "dep:itoap" "polars-arrow/dtype-decimal"))))))

(define-public crate-polars-core-0.33.0 (c (n "polars-core") (v "0.33.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "arrow") (r "^0.18.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^7.0.1") (o #t) (k 0)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "itoap") (r "^1") (f (quote ("simd"))) (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "object_store") (r "^0.7") (o #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.33.0") (f (quote ("compute"))) (k 0)) (d (n "polars-error") (r "^0.33.0") (k 0)) (d (n "polars-row") (r "^0.33.0") (k 0)) (d (n "polars-utils") (r "^0.33.0") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)) (d (n "xxhash-rust") (r "^0.8.6") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "0x0c1vr4bfs443j9zfxvrwywmc47866y9rgk3scz257rjq4kz2y2") (f (quote (("zip_with") ("unique_counts") ("timezones" "chrono-tz" "arrow/chrono-tz" "polars-arrow/timezones") ("temporal" "regex" "chrono" "polars-error/regex") ("take_opt_iter") ("strings" "regex" "polars-arrow/strings" "arrow/compute_substring" "polars-error/regex") ("sort_multiple") ("simd" "arrow/simd" "polars-arrow/simd") ("serde-lazy" "serde" "polars-arrow/serde" "indexmap/serde" "smartstring/serde" "chrono/serde") ("semi_anti_join") ("rows") ("row_hash") ("round_series") ("rolling_window") ("repeat_by") ("reinterpret") ("rank") ("random" "rand" "rand_distr") ("python") ("product") ("performant" "polars-arrow/performant" "reinterpret") ("pct_change" "diff") ("partition_by") ("parquet" "arrow/io_parquet") ("object" "serde_json") ("nightly" "simd" "hashbrown/nightly" "polars-utils/nightly" "polars-arrow/nightly") ("moment") ("mode") ("lazy") ("is_last_distinct") ("is_first_distinct") ("horizontal_concat") ("group_by_list") ("gcp" "async" "object_store/gcp") ("fmt_no_tty" "comfy-table") ("fmt" "comfy-table/tty") ("ewma") ("dynamic_group_by" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-struct") ("dtype-i8") ("dtype-i16") ("dtype-duration" "temporal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical") ("dtype-array" "polars-arrow/dtype-array") ("dot_product") ("docs-selection" "ndarray" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "round_series" "checked_arithmetic" "repeat_by" "is_first_distinct" "is_last_distinct" "asof_join" "cross_join" "dot_product" "concat_str" "row_hash" "mode" "cum_agg" "rolling_window" "diff" "moment" "dtype-categorical" "dtype-decimal" "rank" "diagonal_concat" "horizontal_concat" "abs" "dataframe_arithmetic" "product" "unique_counts" "describe" "chunked_ids" "semi_anti_join" "partition_by" "algorithm_join" "algorithm_group_by") ("docs") ("diff") ("diagonal_concat") ("describe") ("default" "algorithm_join" "algorithm_group_by") ("dataframe_arithmetic") ("cum_agg") ("cross_join") ("concat_str") ("chunked_ids") ("checked_arithmetic") ("bigidx" "polars-arrow/bigidx") ("azure" "async" "object_store/azure") ("aws" "async" "object_store/aws") ("avx512") ("async" "url" "object_store") ("asof_join") ("algorithm_join") ("algorithm_group_by") ("abs")))) (s 2) (e (quote (("serde" "dep:serde" "smartstring/serde" "bitflags/serde") ("dtype-decimal" "dep:itoap" "polars-arrow/dtype-decimal"))))))

(define-public crate-polars-core-0.33.1 (c (n "polars-core") (v "0.33.1") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "arrow") (r "^0.18.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^7.0.1") (o #t) (k 0)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "itoap") (r "^1") (f (quote ("simd"))) (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "object_store") (r "^0.7") (o #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.33.1") (f (quote ("compute"))) (k 0)) (d (n "polars-error") (r "^0.33.1") (k 0)) (d (n "polars-row") (r "^0.33.1") (k 0)) (d (n "polars-utils") (r "^0.33.1") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)) (d (n "xxhash-rust") (r "^0.8.6") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "0n1j9w88jagdmafsabr8293rx3fvd0sh1mjbpgy4fhc9b1570nck") (f (quote (("zip_with") ("unique_counts") ("timezones" "chrono-tz" "arrow/chrono-tz" "polars-arrow/timezones") ("temporal" "regex" "chrono" "polars-error/regex") ("take_opt_iter") ("strings" "regex" "polars-arrow/strings" "arrow/compute_substring" "polars-error/regex") ("sort_multiple") ("simd" "arrow/simd" "polars-arrow/simd") ("serde-lazy" "serde" "polars-arrow/serde" "indexmap/serde" "smartstring/serde" "chrono/serde") ("semi_anti_join" "algorithm_join") ("rows") ("row_hash") ("round_series") ("rolling_window") ("repeat_by") ("reinterpret") ("rank" "rand") ("random" "rand" "rand_distr") ("python") ("product") ("performant" "polars-arrow/performant" "reinterpret") ("pct_change" "diff") ("partition_by") ("parquet" "arrow/io_parquet") ("object" "serde_json") ("nightly" "simd" "hashbrown/nightly" "polars-utils/nightly" "polars-arrow/nightly") ("moment") ("mode") ("lazy") ("is_last_distinct") ("is_first_distinct") ("horizontal_concat") ("group_by_list") ("gcp" "async" "object_store/gcp") ("fmt_no_tty" "comfy-table") ("fmt" "comfy-table/tty") ("ewma") ("dynamic_group_by" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-struct") ("dtype-i8") ("dtype-i16") ("dtype-duration" "temporal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical") ("dtype-array" "polars-arrow/dtype-array") ("dot_product") ("docs-selection" "ndarray" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "round_series" "checked_arithmetic" "repeat_by" "is_first_distinct" "is_last_distinct" "asof_join" "cross_join" "dot_product" "concat_str" "row_hash" "mode" "cum_agg" "rolling_window" "diff" "moment" "dtype-categorical" "dtype-decimal" "rank" "diagonal_concat" "horizontal_concat" "abs" "dataframe_arithmetic" "product" "unique_counts" "describe" "chunked_ids" "semi_anti_join" "partition_by" "algorithm_join" "algorithm_group_by") ("docs") ("diff") ("diagonal_concat") ("describe") ("default" "algorithm_join" "algorithm_group_by") ("dataframe_arithmetic") ("cum_agg") ("cross_join" "algorithm_join") ("concat_str") ("chunked_ids") ("checked_arithmetic") ("bigidx" "polars-arrow/bigidx" "polars-utils/bigidx") ("azure" "async" "object_store/azure") ("aws" "async" "object_store/aws") ("avx512") ("async" "url" "object_store") ("asof_join" "algorithm_join") ("algorithm_join") ("algorithm_group_by") ("abs")))) (s 2) (e (quote (("serde" "dep:serde" "smartstring/serde" "bitflags/serde") ("dtype-decimal" "dep:itoap" "polars-arrow/dtype-decimal"))))))

(define-public crate-polars-core-0.33.2 (c (n "polars-core") (v "0.33.2") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "arrow") (r "^0.18.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^7.0.1") (o #t) (k 0)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "itoap") (r "^1") (f (quote ("simd"))) (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "object_store") (r "^0.7") (o #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.33.2") (f (quote ("compute"))) (k 0)) (d (n "polars-error") (r "^0.33.2") (k 0)) (d (n "polars-row") (r "^0.33.2") (k 0)) (d (n "polars-utils") (r "^0.33.2") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)) (d (n "xxhash-rust") (r "^0.8.6") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "0wfa8pmlfdi2ybyah1cnhgza3cya4vwj9q402qa8zyh79h0pqdh8") (f (quote (("zip_with") ("unique_counts") ("timezones" "chrono-tz" "arrow/chrono-tz" "polars-arrow/timezones") ("temporal" "regex" "chrono" "polars-error/regex") ("take_opt_iter") ("strings" "regex" "polars-arrow/strings" "arrow/compute_substring" "polars-error/regex") ("sort_multiple") ("simd" "arrow/simd" "polars-arrow/simd") ("serde-lazy" "serde" "polars-arrow/serde" "indexmap/serde" "smartstring/serde" "chrono/serde") ("semi_anti_join" "algorithm_join") ("rows") ("row_hash") ("round_series") ("rolling_window") ("repeat_by") ("reinterpret") ("rank" "rand") ("random" "rand" "rand_distr") ("python") ("product") ("performant" "polars-arrow/performant" "reinterpret") ("pct_change" "diff") ("partition_by") ("parquet" "arrow/io_parquet") ("object" "serde_json") ("nightly" "simd" "hashbrown/nightly" "polars-utils/nightly" "polars-arrow/nightly") ("moment") ("mode") ("lazy") ("is_last_distinct") ("is_first_distinct") ("horizontal_concat") ("group_by_list") ("gcp" "async" "object_store/gcp") ("fmt_no_tty" "comfy-table") ("fmt" "comfy-table/tty") ("ewma") ("dynamic_group_by" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-struct") ("dtype-i8") ("dtype-i16") ("dtype-duration" "temporal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical") ("dtype-array" "polars-arrow/dtype-array") ("dot_product") ("docs-selection" "ndarray" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "round_series" "checked_arithmetic" "repeat_by" "is_first_distinct" "is_last_distinct" "asof_join" "cross_join" "dot_product" "concat_str" "row_hash" "mode" "cum_agg" "rolling_window" "diff" "moment" "dtype-categorical" "dtype-decimal" "rank" "diagonal_concat" "horizontal_concat" "abs" "dataframe_arithmetic" "product" "unique_counts" "describe" "chunked_ids" "semi_anti_join" "partition_by" "algorithm_join" "algorithm_group_by") ("docs") ("diff") ("diagonal_concat") ("describe") ("default" "algorithm_join" "algorithm_group_by") ("dataframe_arithmetic") ("cum_agg") ("cross_join" "algorithm_join") ("concat_str") ("chunked_ids") ("checked_arithmetic") ("bigidx" "polars-arrow/bigidx" "polars-utils/bigidx") ("azure" "async" "object_store/azure") ("aws" "async" "object_store/aws") ("avx512") ("async" "url" "object_store") ("asof_join" "algorithm_join") ("algorithm_join") ("algorithm_group_by") ("abs")))) (s 2) (e (quote (("serde" "dep:serde" "smartstring/serde" "bitflags/serde") ("dtype-decimal" "dep:itoap" "polars-arrow/dtype-decimal"))))))

(define-public crate-polars-core-0.34.0 (c (n "polars-core") (v "0.34.0") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.34.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "arrow-array") (r ">=41") (o #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^7.0.1") (o #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "itoap") (r "^1") (f (quote ("simd"))) (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-error") (r "^0.34.0") (k 0)) (d (n "polars-row") (r "^0.34.0") (k 0)) (d (n "polars-utils") (r "^0.34.0") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)) (d (n "xxhash-rust") (r "^0.8.6") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "1in2rqwwbjg6rmpjfx4dp2qai6hc48mwyrc01dnql784biyx3rhr") (f (quote (("zip_with") ("unique_counts") ("timezones" "chrono-tz" "arrow/chrono-tz" "arrow/timezones") ("temporal" "regex" "chrono" "polars-error/regex") ("take_opt_iter") ("strings" "regex" "arrow/strings" "polars-error/regex") ("sort_multiple") ("simd" "arrow/simd") ("serde-lazy" "serde" "arrow/serde" "indexmap/serde" "smartstring/serde" "chrono/serde") ("rows") ("row_hash") ("round_series") ("rolling_window") ("reinterpret") ("random" "rand" "rand_distr") ("python") ("product") ("performant" "arrow/performant" "reinterpret") ("partition_by") ("parquet" "arrow/io_parquet") ("object" "serde_json") ("nightly" "simd" "hashbrown/nightly" "polars-utils/nightly" "arrow/nightly") ("lazy") ("is_last_distinct") ("is_first_distinct") ("horizontal_concat") ("group_by_list") ("fmt_no_tty" "comfy-table") ("fmt" "comfy-table/tty") ("dynamic_group_by" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-struct") ("dtype-i8") ("dtype-i16") ("dtype-duration" "temporal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical") ("dtype-array" "arrow/dtype-array") ("dot_product") ("docs-selection" "ndarray" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "checked_arithmetic" "is_first_distinct" "is_last_distinct" "asof_join" "dot_product" "row_hash" "rolling_window" "dtype-categorical" "dtype-decimal" "diagonal_concat" "horizontal_concat" "abs" "dataframe_arithmetic" "product" "describe" "chunked_ids" "partition_by" "algorithm_group_by") ("docs") ("diagonal_concat") ("describe") ("default" "algorithm_group_by") ("dataframe_arithmetic") ("chunked_ids") ("checked_arithmetic") ("bigidx" "arrow/bigidx" "polars-utils/bigidx") ("avx512") ("asof_join") ("arrow_rs" "arrow-array" "arrow/arrow_rs") ("algorithm_group_by") ("abs")))) (s 2) (e (quote (("serde" "dep:serde" "smartstring/serde" "bitflags/serde") ("dtype-decimal" "dep:itoap" "arrow/dtype-decimal"))))))

(define-public crate-polars-core-0.34.1 (c (n "polars-core") (v "0.34.1") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.34.1") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "arrow-array") (r ">=41") (o #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^7.0.1") (o #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "itoap") (r "^1") (f (quote ("simd"))) (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-error") (r "^0.34.1") (k 0)) (d (n "polars-row") (r "^0.34.1") (k 0)) (d (n "polars-utils") (r "^0.34.1") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)) (d (n "xxhash-rust") (r "^0.8.6") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "0gbw90p47minda0whk5pcbq06cxn4mamlkmka7v867pgpxnl1z73") (f (quote (("zip_with") ("unique_counts") ("timezones" "chrono-tz" "arrow/chrono-tz" "arrow/timezones") ("temporal" "regex" "chrono" "polars-error/regex") ("take_opt_iter") ("strings" "regex" "arrow/strings" "polars-error/regex") ("sort_multiple") ("simd" "arrow/simd") ("serde-lazy" "serde" "arrow/serde" "indexmap/serde" "smartstring/serde" "chrono/serde") ("rows") ("row_hash") ("round_series") ("rolling_window") ("reinterpret") ("random" "rand" "rand_distr") ("python") ("product") ("performant" "arrow/performant" "reinterpret") ("partition_by") ("parquet" "arrow/io_parquet") ("object" "serde_json") ("nightly" "simd" "hashbrown/nightly" "polars-utils/nightly" "arrow/nightly") ("lazy") ("is_last_distinct") ("is_first_distinct") ("horizontal_concat") ("group_by_list") ("fmt_no_tty" "comfy-table") ("fmt" "comfy-table/tty") ("dynamic_group_by" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-struct") ("dtype-i8") ("dtype-i16") ("dtype-duration" "temporal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical") ("dtype-array" "arrow/dtype-array") ("dot_product") ("docs-selection" "ndarray" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "checked_arithmetic" "is_first_distinct" "is_last_distinct" "asof_join" "dot_product" "row_hash" "rolling_window" "dtype-categorical" "dtype-decimal" "diagonal_concat" "horizontal_concat" "abs" "dataframe_arithmetic" "product" "describe" "chunked_ids" "partition_by" "algorithm_group_by") ("docs") ("diagonal_concat") ("describe") ("default" "algorithm_group_by") ("dataframe_arithmetic") ("chunked_ids") ("checked_arithmetic") ("bigidx" "arrow/bigidx" "polars-utils/bigidx") ("avx512") ("asof_join") ("arrow_rs" "arrow-array" "arrow/arrow_rs") ("algorithm_group_by") ("abs")))) (s 2) (e (quote (("serde" "dep:serde" "smartstring/serde" "bitflags/serde") ("dtype-decimal" "dep:itoap" "arrow/dtype-decimal"))))))

(define-public crate-polars-core-0.34.2 (c (n "polars-core") (v "0.34.2") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.34.2") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "arrow-array") (r ">=41") (o #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^7.0.1") (o #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "itoap") (r "^1") (f (quote ("simd"))) (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-error") (r "^0.34.2") (k 0)) (d (n "polars-row") (r "^0.34.2") (k 0)) (d (n "polars-utils") (r "^0.34.2") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)) (d (n "xxhash-rust") (r "^0.8.6") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "0577mc949g0sbicsvdcqsgbp21bf1mcyg5adqqa4c6x8ihmn5yyd") (f (quote (("zip_with") ("unique_counts") ("timezones" "chrono-tz" "arrow/chrono-tz" "arrow/timezones") ("temporal" "regex" "chrono" "polars-error/regex") ("take_opt_iter") ("strings" "regex" "arrow/strings" "polars-error/regex") ("sort_multiple") ("simd" "arrow/simd") ("serde-lazy" "serde" "arrow/serde" "indexmap/serde" "smartstring/serde" "chrono/serde") ("rows") ("row_hash") ("round_series") ("rolling_window") ("reinterpret") ("random" "rand" "rand_distr") ("python") ("product") ("performant" "arrow/performant" "reinterpret") ("partition_by") ("parquet" "arrow/io_parquet") ("object" "serde_json") ("nightly" "simd" "hashbrown/nightly" "polars-utils/nightly" "arrow/nightly") ("lazy") ("is_last_distinct") ("is_first_distinct") ("horizontal_concat") ("group_by_list") ("fmt_no_tty" "comfy-table") ("fmt" "comfy-table/tty") ("dynamic_group_by" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-struct") ("dtype-i8") ("dtype-i16") ("dtype-duration" "temporal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical") ("dtype-array" "arrow/dtype-array") ("dot_product") ("docs-selection" "ndarray" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "checked_arithmetic" "is_first_distinct" "is_last_distinct" "asof_join" "dot_product" "row_hash" "rolling_window" "dtype-categorical" "dtype-decimal" "diagonal_concat" "horizontal_concat" "abs" "dataframe_arithmetic" "product" "describe" "chunked_ids" "partition_by" "algorithm_group_by") ("docs") ("diagonal_concat") ("describe") ("default" "algorithm_group_by") ("dataframe_arithmetic") ("chunked_ids") ("checked_arithmetic") ("bigidx" "arrow/bigidx" "polars-utils/bigidx") ("avx512") ("asof_join") ("arrow_rs" "arrow-array" "arrow/arrow_rs") ("algorithm_group_by") ("abs")))) (s 2) (e (quote (("serde" "dep:serde" "smartstring/serde" "bitflags/serde") ("dtype-decimal" "dep:itoap" "arrow/dtype-decimal"))))))

(define-public crate-polars-core-0.35.0 (c (n "polars-core") (v "0.35.0") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.35.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "arrow-array") (r ">=41") (o #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^7.0.1") (o #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "itoap") (r "^1") (f (quote ("simd"))) (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-error") (r "^0.35.0") (k 0)) (d (n "polars-row") (r "^0.35.0") (k 0)) (d (n "polars-utils") (r "^0.35.0") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)) (d (n "xxhash-rust") (r "^0.8.6") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "0pwc7pi7ldivpig8dxpm95zamcgkdr94islcpjwa2xbmdv6r0a4n") (f (quote (("zip_with") ("unique_counts") ("timezones" "chrono-tz" "arrow/chrono-tz" "arrow/timezones") ("temporal" "regex" "chrono" "polars-error/regex") ("take_opt_iter") ("strings" "regex" "arrow/strings" "polars-error/regex") ("sort_multiple") ("simd" "arrow/simd") ("serde-lazy" "serde" "arrow/serde" "indexmap/serde" "smartstring/serde" "chrono/serde") ("rows") ("row_hash") ("round_series") ("rolling_window") ("reinterpret") ("random" "rand" "rand_distr") ("python") ("product") ("performant" "arrow/performant" "reinterpret") ("partition_by") ("object" "serde_json") ("nightly" "simd" "hashbrown/nightly" "polars-utils/nightly" "arrow/nightly") ("lazy") ("is_last_distinct") ("is_first_distinct") ("horizontal_concat") ("group_by_list") ("fmt_no_tty" "comfy-table") ("fmt" "comfy-table/tty") ("dynamic_group_by" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-struct") ("dtype-i8") ("dtype-i16") ("dtype-duration" "temporal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical") ("dtype-array" "arrow/dtype-array") ("dot_product") ("docs-selection" "ndarray" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "checked_arithmetic" "is_first_distinct" "is_last_distinct" "asof_join" "dot_product" "row_hash" "rolling_window" "dtype-categorical" "dtype-decimal" "diagonal_concat" "horizontal_concat" "dataframe_arithmetic" "product" "describe" "chunked_ids" "partition_by" "algorithm_group_by") ("docs") ("diagonal_concat") ("describe") ("default" "algorithm_group_by") ("dataframe_arithmetic") ("chunked_ids") ("checked_arithmetic") ("bigidx" "arrow/bigidx" "polars-utils/bigidx") ("avx512") ("asof_join") ("arrow_rs" "arrow-array" "arrow/arrow_rs") ("algorithm_group_by")))) (s 2) (e (quote (("serde" "dep:serde" "smartstring/serde" "bitflags/serde") ("dtype-decimal" "dep:itoap" "arrow/dtype-decimal"))))))

(define-public crate-polars-core-0.35.1 (c (n "polars-core") (v "0.35.1") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.35.1") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "arrow-array") (r ">=41") (o #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^7.0.1") (o #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "itoap") (r "^1") (f (quote ("simd"))) (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-error") (r "^0.35.1") (k 0)) (d (n "polars-row") (r "^0.35.1") (k 0)) (d (n "polars-utils") (r "^0.35.1") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)) (d (n "xxhash-rust") (r "^0.8.6") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "06hlvlaqkx9p8sqw64m27qwwyk4rry1fldaqf6wsrxwlz3avrmpp") (f (quote (("zip_with") ("unique_counts") ("timezones" "chrono-tz" "arrow/chrono-tz" "arrow/timezones") ("temporal" "regex" "chrono" "polars-error/regex") ("take_opt_iter") ("strings" "regex" "arrow/strings" "polars-error/regex") ("sort_multiple") ("simd" "arrow/simd") ("serde-lazy" "serde" "arrow/serde" "indexmap/serde" "smartstring/serde" "chrono/serde") ("rows") ("row_hash") ("round_series") ("rolling_window") ("reinterpret") ("random" "rand" "rand_distr") ("python") ("product") ("performant" "arrow/performant" "reinterpret") ("partition_by") ("object" "serde_json") ("nightly" "simd" "hashbrown/nightly" "polars-utils/nightly" "arrow/nightly") ("lazy") ("is_last_distinct") ("is_first_distinct") ("horizontal_concat") ("group_by_list") ("fmt_no_tty" "comfy-table") ("fmt" "comfy-table/tty") ("dynamic_group_by" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-struct") ("dtype-i8") ("dtype-i16") ("dtype-duration" "temporal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical") ("dtype-array" "arrow/dtype-array") ("dot_product") ("docs-selection" "ndarray" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "checked_arithmetic" "is_first_distinct" "is_last_distinct" "asof_join" "dot_product" "row_hash" "rolling_window" "dtype-categorical" "dtype-decimal" "diagonal_concat" "horizontal_concat" "dataframe_arithmetic" "product" "describe" "chunked_ids" "partition_by" "algorithm_group_by") ("docs") ("diagonal_concat") ("describe") ("default" "algorithm_group_by") ("dataframe_arithmetic") ("chunked_ids") ("checked_arithmetic") ("bigidx" "arrow/bigidx" "polars-utils/bigidx") ("avx512") ("asof_join") ("arrow_rs" "arrow-array" "arrow/arrow_rs") ("algorithm_group_by")))) (s 2) (e (quote (("serde" "dep:serde" "smartstring/serde" "bitflags/serde") ("dtype-decimal" "dep:itoap" "arrow/dtype-decimal"))))))

(define-public crate-polars-core-0.35.2 (c (n "polars-core") (v "0.35.2") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.35.2") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "arrow-array") (r ">=41") (o #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^7.0.1") (o #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "itoap") (r "^1") (f (quote ("simd"))) (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-error") (r "^0.35.2") (k 0)) (d (n "polars-row") (r "^0.35.2") (k 0)) (d (n "polars-utils") (r "^0.35.2") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)) (d (n "xxhash-rust") (r "^0.8.6") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "1gvm8hj3qfq849ih1bjri6b72ji0vpgy1y68fmbmnqmdkh1y1jqg") (f (quote (("zip_with") ("unique_counts") ("timezones" "chrono-tz" "arrow/chrono-tz" "arrow/timezones") ("temporal" "regex" "chrono" "polars-error/regex") ("take_opt_iter") ("strings" "regex" "arrow/strings" "polars-error/regex") ("sort_multiple") ("simd" "arrow/simd") ("serde-lazy" "serde" "arrow/serde" "indexmap/serde" "smartstring/serde" "chrono/serde") ("rows") ("row_hash") ("round_series") ("rolling_window") ("reinterpret") ("random" "rand" "rand_distr") ("python") ("product") ("performant" "arrow/performant" "reinterpret") ("partition_by") ("object" "serde_json") ("nightly" "simd" "hashbrown/nightly" "polars-utils/nightly" "arrow/nightly") ("lazy") ("is_last_distinct") ("is_first_distinct") ("horizontal_concat") ("group_by_list") ("fmt_no_tty" "comfy-table") ("fmt" "comfy-table/tty") ("dynamic_group_by" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-struct") ("dtype-i8") ("dtype-i16") ("dtype-duration" "temporal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical") ("dtype-array" "arrow/dtype-array") ("dot_product") ("docs-selection" "ndarray" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "checked_arithmetic" "is_first_distinct" "is_last_distinct" "asof_join" "dot_product" "row_hash" "rolling_window" "dtype-categorical" "dtype-decimal" "diagonal_concat" "horizontal_concat" "dataframe_arithmetic" "product" "describe" "chunked_ids" "partition_by" "algorithm_group_by") ("docs") ("diagonal_concat") ("describe") ("default" "algorithm_group_by") ("dataframe_arithmetic") ("chunked_ids") ("checked_arithmetic") ("bigidx" "arrow/bigidx" "polars-utils/bigidx") ("avx512") ("asof_join") ("arrow_rs" "arrow-array" "arrow/arrow_rs") ("algorithm_group_by")))) (s 2) (e (quote (("serde" "dep:serde" "smartstring/serde" "bitflags/serde") ("dtype-decimal" "dep:itoap" "arrow/dtype-decimal"))))))

(define-public crate-polars-core-0.35.3 (c (n "polars-core") (v "0.35.3") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.35.3") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "arrow-array") (r ">=41") (o #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^7.0.1") (o #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "itoap") (r "^1") (f (quote ("simd"))) (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-error") (r "^0.35.3") (k 0)) (d (n "polars-row") (r "^0.35.3") (k 0)) (d (n "polars-utils") (r "^0.35.3") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)) (d (n "xxhash-rust") (r "^0.8.6") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "0rc1jw8y6i02f2d0nxz8pym4ryw4q1mzscj9zhljam2ipnsd57q5") (f (quote (("zip_with") ("unique_counts") ("timezones" "chrono-tz" "arrow/chrono-tz" "arrow/timezones") ("temporal" "regex" "chrono" "polars-error/regex") ("take_opt_iter") ("strings" "regex" "arrow/strings" "polars-error/regex") ("sort_multiple") ("simd" "arrow/simd") ("serde-lazy" "serde" "arrow/serde" "indexmap/serde" "smartstring/serde" "chrono/serde") ("rows") ("row_hash") ("round_series") ("rolling_window") ("reinterpret") ("random" "rand" "rand_distr") ("python") ("product") ("performant" "arrow/performant" "reinterpret") ("partition_by") ("object" "serde_json") ("nightly" "simd" "hashbrown/nightly" "polars-utils/nightly" "arrow/nightly") ("lazy") ("is_last_distinct") ("is_first_distinct") ("horizontal_concat") ("group_by_list") ("fmt_no_tty" "comfy-table") ("fmt" "comfy-table/tty") ("dynamic_group_by" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-struct") ("dtype-i8") ("dtype-i16") ("dtype-duration" "temporal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical") ("dtype-array" "arrow/dtype-array") ("dot_product") ("docs-selection" "ndarray" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "checked_arithmetic" "is_first_distinct" "is_last_distinct" "asof_join" "dot_product" "row_hash" "rolling_window" "dtype-categorical" "dtype-decimal" "diagonal_concat" "horizontal_concat" "dataframe_arithmetic" "product" "describe" "chunked_ids" "partition_by" "algorithm_group_by") ("docs") ("diagonal_concat") ("describe") ("default" "algorithm_group_by") ("dataframe_arithmetic") ("chunked_ids") ("checked_arithmetic") ("bigidx" "arrow/bigidx" "polars-utils/bigidx") ("avx512") ("asof_join") ("arrow_rs" "arrow-array" "arrow/arrow_rs") ("algorithm_group_by")))) (s 2) (e (quote (("serde" "dep:serde" "smartstring/serde" "bitflags/serde") ("dtype-decimal" "dep:itoap" "arrow/dtype-decimal"))))))

(define-public crate-polars-core-0.35.4 (c (n "polars-core") (v "0.35.4") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.35.4") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "arrow-array") (r ">=41") (o #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^7.0.1") (o #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "itoap") (r "^1") (f (quote ("simd"))) (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-error") (r "^0.35.4") (k 0)) (d (n "polars-row") (r "^0.35.4") (k 0)) (d (n "polars-utils") (r "^0.35.4") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)) (d (n "xxhash-rust") (r "^0.8.6") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "1mnginlmgmlp167ij0r5lywvy50zns1cr8db1ikxxv2xwnwdawxf") (f (quote (("zip_with") ("unique_counts") ("timezones" "chrono-tz" "arrow/chrono-tz" "arrow/timezones") ("temporal" "regex" "chrono" "polars-error/regex") ("take_opt_iter") ("strings" "regex" "arrow/strings" "polars-error/regex") ("sort_multiple") ("simd" "arrow/simd") ("serde-lazy" "serde" "arrow/serde" "indexmap/serde" "smartstring/serde" "chrono/serde") ("rows") ("row_hash") ("round_series") ("rolling_window") ("reinterpret") ("random" "rand" "rand_distr") ("python") ("product") ("performant" "arrow/performant" "reinterpret") ("partition_by") ("object" "serde_json") ("nightly" "simd" "hashbrown/nightly" "polars-utils/nightly" "arrow/nightly") ("lazy") ("is_last_distinct") ("is_first_distinct") ("horizontal_concat") ("group_by_list") ("fmt_no_tty" "comfy-table") ("fmt" "comfy-table/tty") ("dynamic_group_by" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-struct") ("dtype-i8") ("dtype-i16") ("dtype-duration" "temporal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical") ("dtype-array" "arrow/dtype-array") ("dot_product") ("docs-selection" "ndarray" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "checked_arithmetic" "is_first_distinct" "is_last_distinct" "asof_join" "dot_product" "row_hash" "rolling_window" "dtype-categorical" "dtype-decimal" "diagonal_concat" "horizontal_concat" "dataframe_arithmetic" "product" "describe" "chunked_ids" "partition_by" "algorithm_group_by") ("docs") ("diagonal_concat") ("describe") ("default" "algorithm_group_by") ("dataframe_arithmetic") ("chunked_ids") ("checked_arithmetic") ("bigidx" "arrow/bigidx" "polars-utils/bigidx") ("avx512") ("asof_join") ("arrow_rs" "arrow-array" "arrow/arrow_rs") ("algorithm_group_by")))) (s 2) (e (quote (("serde" "dep:serde" "smartstring/serde" "bitflags/serde") ("dtype-decimal" "dep:itoap" "arrow/dtype-decimal"))))))

(define-public crate-polars-core-0.36.0 (c (n "polars-core") (v "0.36.0") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.36.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "arrow-array") (r ">=41") (o #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^7.0.1") (o #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "itoap") (r "^1") (f (quote ("simd"))) (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-compute") (r "^0.36.0") (k 0)) (d (n "polars-error") (r "^0.36.0") (k 0)) (d (n "polars-row") (r "^0.36.0") (k 0)) (d (n "polars-utils") (r "^0.36.0") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)) (d (n "xxhash-rust") (r "^0.8.6") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "17cman3xxh2pfb5k4vym2x9lllxs29yzk0d2m9d1fb5kw1zg1q87") (f (quote (("zip_with") ("unique_counts") ("timezones" "chrono-tz" "arrow/chrono-tz" "arrow/timezones") ("temporal" "regex" "chrono" "polars-error/regex") ("take_opt_iter") ("strings" "regex" "arrow/strings" "polars-error/regex") ("simd" "arrow/simd" "polars-compute/simd") ("serde-lazy" "serde" "arrow/serde" "indexmap/serde" "smartstring/serde" "chrono/serde") ("rows") ("row_hash") ("round_series") ("rolling_window") ("reinterpret") ("random" "rand" "rand_distr") ("python") ("product") ("performant" "arrow/performant" "reinterpret") ("partition_by") ("object" "serde_json") ("nightly" "simd" "hashbrown/nightly" "polars-utils/nightly" "arrow/nightly") ("lazy") ("is_last_distinct") ("is_first_distinct") ("horizontal_concat") ("group_by_list") ("fmt_no_tty" "comfy-table") ("fmt" "comfy-table/tty") ("dynamic_group_by" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-struct") ("dtype-i8") ("dtype-i16") ("dtype-duration" "temporal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical") ("dtype-array" "arrow/dtype-array" "polars-compute/dtype-array") ("dot_product") ("docs-selection" "ndarray" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "checked_arithmetic" "is_first_distinct" "is_last_distinct" "asof_join" "dot_product" "row_hash" "rolling_window" "dtype-categorical" "dtype-decimal" "diagonal_concat" "horizontal_concat" "dataframe_arithmetic" "product" "describe" "chunked_ids" "partition_by" "algorithm_group_by") ("docs") ("diagonal_concat") ("describe") ("default" "algorithm_group_by") ("dataframe_arithmetic") ("chunked_ids") ("checked_arithmetic") ("bigidx" "arrow/bigidx" "polars-utils/bigidx") ("avx512") ("asof_join") ("arrow_rs" "arrow-array" "arrow/arrow_rs") ("algorithm_group_by")))) (s 2) (e (quote (("serde" "dep:serde" "smartstring/serde" "bitflags/serde") ("dtype-decimal" "dep:itoap" "arrow/dtype-decimal"))))))

(define-public crate-polars-core-0.36.2 (c (n "polars-core") (v "0.36.2") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.36.2") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "arrow-array") (r ">=41") (o #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^7.0.1") (o #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "itoap") (r "^1") (f (quote ("simd"))) (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-compute") (r "^0.36.2") (k 0)) (d (n "polars-error") (r "^0.36.2") (k 0)) (d (n "polars-row") (r "^0.36.2") (k 0)) (d (n "polars-utils") (r "^0.36.2") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)) (d (n "xxhash-rust") (r "^0.8.6") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "08sar9h97znpb8ziyvrrvvx28lyzc21vwsd7gvwybjxn6kkyzxfh") (f (quote (("zip_with") ("unique_counts") ("timezones" "chrono-tz" "arrow/chrono-tz" "arrow/timezones") ("temporal" "regex" "chrono" "polars-error/regex") ("take_opt_iter") ("strings" "regex" "arrow/strings" "polars-error/regex") ("simd" "arrow/simd" "polars-compute/simd") ("serde-lazy" "serde" "arrow/serde" "indexmap/serde" "smartstring/serde" "chrono/serde") ("rows") ("row_hash") ("round_series") ("rolling_window") ("reinterpret") ("random" "rand" "rand_distr") ("python") ("product") ("performant" "arrow/performant" "reinterpret") ("partition_by") ("object" "serde_json") ("nightly" "simd" "hashbrown/nightly" "polars-utils/nightly" "arrow/nightly") ("lazy") ("is_last_distinct") ("is_first_distinct") ("horizontal_concat") ("group_by_list") ("fmt_no_tty" "comfy-table") ("fmt" "comfy-table/tty") ("dynamic_group_by" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-struct") ("dtype-i8") ("dtype-i16") ("dtype-duration" "temporal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical") ("dtype-array" "arrow/dtype-array" "polars-compute/dtype-array") ("dot_product") ("docs-selection" "ndarray" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "checked_arithmetic" "is_first_distinct" "is_last_distinct" "asof_join" "dot_product" "row_hash" "rolling_window" "dtype-categorical" "dtype-decimal" "diagonal_concat" "horizontal_concat" "dataframe_arithmetic" "product" "describe" "chunked_ids" "partition_by" "algorithm_group_by") ("docs") ("diagonal_concat") ("describe") ("default" "algorithm_group_by") ("dataframe_arithmetic") ("chunked_ids") ("checked_arithmetic") ("bigidx" "arrow/bigidx" "polars-utils/bigidx") ("avx512") ("asof_join") ("arrow_rs" "arrow-array" "arrow/arrow_rs") ("algorithm_group_by")))) (s 2) (e (quote (("serde" "dep:serde" "smartstring/serde" "bitflags/serde") ("dtype-decimal" "dep:itoap" "arrow/dtype-decimal"))))))

(define-public crate-polars-core-0.37.0 (c (n "polars-core") (v "0.37.0") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.37.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "arrow-array") (r ">=41") (o #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^7.0.1") (o #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-compute") (r "^0.37.0") (k 0)) (d (n "polars-error") (r "^0.37.0") (k 0)) (d (n "polars-row") (r "^0.37.0") (k 0)) (d (n "polars-utils") (r "^0.37.0") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)) (d (n "xxhash-rust") (r "^0.8.6") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "0xvp3ppcsfd4z5j0qkarijcnbfnf349r0ksw0c0rl8c218l4vzdy") (f (quote (("zip_with") ("unique_counts") ("timezones" "chrono-tz" "arrow/chrono-tz" "arrow/timezones") ("temporal" "regex" "chrono" "polars-error/regex") ("take_opt_iter") ("strings" "regex" "arrow/strings" "polars-error/regex") ("simd" "arrow/simd" "polars-compute/simd") ("serde-lazy" "serde" "arrow/serde" "indexmap/serde" "smartstring/serde" "chrono/serde") ("rows") ("row_hash") ("round_series") ("rolling_window") ("reinterpret") ("random" "rand" "rand_distr") ("python") ("product") ("performant" "arrow/performant" "reinterpret") ("partition_by") ("object" "serde_json") ("nightly" "simd" "hashbrown/nightly" "polars-utils/nightly" "arrow/nightly") ("lazy") ("is_last_distinct") ("is_first_distinct") ("group_by_list") ("fmt_no_tty" "comfy-table") ("fmt" "comfy-table/tty") ("dynamic_group_by" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-struct") ("dtype-i8") ("dtype-i16") ("dtype-duration" "temporal") ("dtype-decimal" "arrow/dtype-decimal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical") ("dtype-array" "arrow/dtype-array" "polars-compute/dtype-array") ("dot_product") ("docs-selection" "ndarray" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "checked_arithmetic" "is_first_distinct" "is_last_distinct" "asof_join" "dot_product" "row_hash" "rolling_window" "dtype-categorical" "dtype-decimal" "diagonal_concat" "dataframe_arithmetic" "product" "describe" "chunked_ids" "partition_by" "algorithm_group_by") ("docs") ("diagonal_concat") ("describe") ("default" "algorithm_group_by") ("dataframe_arithmetic") ("chunked_ids") ("checked_arithmetic") ("bigidx" "arrow/bigidx" "polars-utils/bigidx") ("avx512") ("asof_join") ("arrow_rs" "arrow-array" "arrow/arrow_rs") ("algorithm_group_by")))) (s 2) (e (quote (("serde" "dep:serde" "smartstring/serde" "bitflags/serde"))))))

(define-public crate-polars-core-0.38.0 (c (n "polars-core") (v "0.38.0") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.38.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "arrow-array") (r ">=41") (o #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^7.0.1") (o #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-compute") (r "^0.38.0") (k 0)) (d (n "polars-error") (r "^0.38.0") (k 0)) (d (n "polars-row") (r "^0.38.0") (k 0)) (d (n "polars-utils") (r "^0.38.0") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)) (d (n "xxhash-rust") (r "^0.8.6") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "17zsr3yzxnaiwrm3nfml1awdncnipdic1wh4b6qgc8j3srynkl7b") (f (quote (("zip_with") ("unique_counts") ("timezones" "chrono-tz" "arrow/chrono-tz" "arrow/timezones") ("temporal" "regex" "chrono" "polars-error/regex") ("take_opt_iter") ("strings" "regex" "arrow/strings" "polars-error/regex") ("simd" "arrow/simd" "polars-compute/simd") ("serde-lazy" "serde" "arrow/serde" "indexmap/serde" "smartstring/serde" "chrono/serde") ("rows") ("row_hash") ("round_series") ("rolling_window") ("reinterpret") ("random" "rand" "rand_distr") ("python") ("product") ("performant" "arrow/performant" "reinterpret") ("partition_by") ("object" "serde_json") ("nightly" "simd" "hashbrown/nightly" "polars-utils/nightly" "arrow/nightly") ("lazy") ("is_last_distinct") ("is_first_distinct") ("group_by_list") ("fmt_no_tty" "comfy-table") ("fmt" "comfy-table/tty") ("dynamic_group_by" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-struct") ("dtype-i8") ("dtype-i16") ("dtype-duration" "temporal") ("dtype-decimal" "arrow/dtype-decimal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical") ("dtype-array" "arrow/dtype-array" "polars-compute/dtype-array") ("dot_product") ("docs-selection" "ndarray" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "checked_arithmetic" "is_first_distinct" "is_last_distinct" "asof_join" "dot_product" "row_hash" "rolling_window" "dtype-categorical" "dtype-decimal" "diagonal_concat" "dataframe_arithmetic" "product" "describe" "partition_by" "algorithm_group_by") ("docs") ("diagonal_concat") ("describe") ("default" "algorithm_group_by") ("dataframe_arithmetic") ("checked_arithmetic") ("bigidx" "arrow/bigidx" "polars-utils/bigidx") ("avx512") ("asof_join") ("arrow_rs" "arrow-array" "arrow/arrow_rs") ("algorithm_group_by")))) (s 2) (e (quote (("serde" "dep:serde" "smartstring/serde" "bitflags/serde"))))))

(define-public crate-polars-core-0.38.1 (c (n "polars-core") (v "0.38.1") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.38.1") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "arrow-array") (r ">=41") (o #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^7.0.1") (o #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-compute") (r "^0.38.1") (k 0)) (d (n "polars-error") (r "^0.38.1") (k 0)) (d (n "polars-row") (r "^0.38.1") (k 0)) (d (n "polars-utils") (r "^0.38.1") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.9") (d #t) (k 0)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)) (d (n "xxhash-rust") (r "^0.8.6") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "1wv5cmxzff7qd8dif7p2nnv4gxjvh99aispm53cz9l8vixd8iq4r") (f (quote (("zip_with") ("unique_counts") ("timezones" "chrono-tz" "arrow/chrono-tz" "arrow/timezones") ("temporal" "regex" "chrono" "polars-error/regex") ("take_opt_iter") ("strings" "regex" "arrow/strings" "polars-error/regex") ("simd" "arrow/simd" "polars-compute/simd") ("serde-lazy" "serde" "arrow/serde" "indexmap/serde" "smartstring/serde" "chrono/serde") ("rows") ("row_hash") ("round_series") ("rolling_window") ("reinterpret") ("random" "rand" "rand_distr") ("python") ("product") ("performant" "arrow/performant" "reinterpret") ("partition_by") ("object" "serde_json") ("nightly" "simd" "hashbrown/nightly" "polars-utils/nightly" "arrow/nightly") ("lazy") ("is_last_distinct") ("is_first_distinct") ("group_by_list") ("fmt_no_tty" "comfy-table") ("fmt" "comfy-table/tty") ("dynamic_group_by" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-struct") ("dtype-i8") ("dtype-i16") ("dtype-duration" "temporal") ("dtype-decimal" "arrow/dtype-decimal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical") ("dtype-array" "arrow/dtype-array" "polars-compute/dtype-array") ("dot_product") ("docs-selection" "ndarray" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "checked_arithmetic" "is_first_distinct" "is_last_distinct" "asof_join" "dot_product" "row_hash" "rolling_window" "dtype-categorical" "dtype-decimal" "diagonal_concat" "dataframe_arithmetic" "product" "describe" "partition_by" "algorithm_group_by") ("docs") ("diagonal_concat") ("describe") ("default" "algorithm_group_by") ("dataframe_arithmetic") ("checked_arithmetic") ("bigidx" "arrow/bigidx" "polars-utils/bigidx") ("avx512") ("asof_join") ("arrow_rs" "arrow-array" "arrow/arrow_rs") ("algorithm_group_by")))) (s 2) (e (quote (("serde" "dep:serde" "smartstring/serde" "bitflags/serde"))))))

(define-public crate-polars-core-0.38.2 (c (n "polars-core") (v "0.38.2") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.38.2") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "arrow-array") (r ">=41") (o #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^7.0.1") (o #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-compute") (r "^0.38.2") (k 0)) (d (n "polars-error") (r "^0.38.2") (k 0)) (d (n "polars-row") (r "^0.38.2") (k 0)) (d (n "polars-utils") (r "^0.38.2") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.9") (d #t) (k 0)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)) (d (n "xxhash-rust") (r "^0.8.6") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "04bjw8iq70kgj7qk32s3hbjpigwvzxbpvfbni41alph86hvnbn5v") (f (quote (("zip_with") ("unique_counts") ("timezones" "chrono-tz" "arrow/chrono-tz" "arrow/timezones") ("temporal" "regex" "chrono" "polars-error/regex") ("take_opt_iter") ("strings" "regex" "arrow/strings" "polars-error/regex") ("simd" "arrow/simd" "polars-compute/simd") ("serde-lazy" "serde" "arrow/serde" "indexmap/serde" "smartstring/serde" "chrono/serde") ("rows") ("row_hash") ("round_series") ("rolling_window") ("reinterpret") ("random" "rand" "rand_distr") ("python") ("product") ("performant" "arrow/performant" "reinterpret") ("partition_by") ("object" "serde_json") ("nightly" "simd" "hashbrown/nightly" "polars-utils/nightly" "arrow/nightly") ("lazy") ("is_last_distinct") ("is_first_distinct") ("group_by_list") ("fmt_no_tty" "comfy-table") ("fmt" "comfy-table/tty") ("dynamic_group_by" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-struct") ("dtype-i8") ("dtype-i16") ("dtype-duration" "temporal") ("dtype-decimal" "arrow/dtype-decimal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical") ("dtype-array" "arrow/dtype-array" "polars-compute/dtype-array") ("dot_product") ("docs-selection" "ndarray" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "checked_arithmetic" "is_first_distinct" "is_last_distinct" "dot_product" "row_hash" "rolling_window" "dtype-categorical" "dtype-decimal" "diagonal_concat" "dataframe_arithmetic" "product" "describe" "partition_by" "algorithm_group_by") ("docs") ("diagonal_concat") ("describe") ("default" "algorithm_group_by") ("dataframe_arithmetic") ("checked_arithmetic") ("bigidx" "arrow/bigidx" "polars-utils/bigidx") ("avx512") ("arrow_rs" "arrow-array" "arrow/arrow_rs") ("algorithm_group_by")))) (s 2) (e (quote (("serde" "dep:serde" "smartstring/serde" "bitflags/serde"))))))

(define-public crate-polars-core-0.38.3 (c (n "polars-core") (v "0.38.3") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.38.3") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison"))) (k 0) (p "polars-arrow")) (d (n "arrow-array") (r ">=41") (o #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^7.0.1") (o #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-compute") (r "^0.38.3") (k 0)) (d (n "polars-error") (r "^0.38.3") (k 0)) (d (n "polars-row") (r "^0.38.3") (k 0)) (d (n "polars-utils") (r "^0.38.3") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.9") (d #t) (k 0)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)) (d (n "xxhash-rust") (r "^0.8.6") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "0ywfbyr57bry6as31v9g68bmd8gmfbpn93127jm78vqq4z1d683g") (f (quote (("zip_with") ("unique_counts") ("timezones" "chrono-tz" "arrow/chrono-tz" "arrow/timezones") ("temporal" "regex" "chrono" "polars-error/regex") ("take_opt_iter") ("strings" "regex" "arrow/strings" "polars-error/regex") ("simd" "arrow/simd" "polars-compute/simd") ("serde-lazy" "serde" "arrow/serde" "indexmap/serde" "smartstring/serde" "chrono/serde") ("rows") ("row_hash") ("round_series") ("rolling_window") ("reinterpret") ("random" "rand" "rand_distr") ("python") ("product") ("performant" "arrow/performant" "reinterpret") ("partition_by") ("object" "serde_json") ("nightly" "simd" "hashbrown/nightly" "polars-utils/nightly" "arrow/nightly") ("lazy") ("is_last_distinct") ("is_first_distinct") ("group_by_list") ("fmt_no_tty" "comfy-table") ("fmt" "comfy-table/tty") ("dynamic_group_by" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-struct") ("dtype-i8") ("dtype-i16") ("dtype-duration" "temporal") ("dtype-decimal" "arrow/dtype-decimal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical") ("dtype-array" "arrow/dtype-array" "polars-compute/dtype-array") ("dot_product") ("docs-selection" "ndarray" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "checked_arithmetic" "is_first_distinct" "is_last_distinct" "dot_product" "row_hash" "rolling_window" "dtype-categorical" "dtype-decimal" "diagonal_concat" "dataframe_arithmetic" "product" "describe" "partition_by" "algorithm_group_by") ("docs") ("diagonal_concat") ("describe") ("default" "algorithm_group_by") ("dataframe_arithmetic") ("checked_arithmetic") ("bigidx" "arrow/bigidx" "polars-utils/bigidx") ("avx512") ("arrow_rs" "arrow-array" "arrow/arrow_rs") ("algorithm_group_by")))) (s 2) (e (quote (("serde" "dep:serde" "smartstring/serde" "bitflags/serde"))))))

(define-public crate-polars-core-0.39.0 (c (n "polars-core") (v "0.39.0") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.39.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison"))) (k 0) (p "polars-arrow")) (d (n "arrow-array") (r ">=41") (o #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^7.0.1") (o #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-compute") (r "^0.39.0") (k 0)) (d (n "polars-error") (r "^0.39.0") (k 0)) (d (n "polars-row") (r "^0.39.0") (k 0)) (d (n "polars-utils") (r "^0.39.0") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.9") (d #t) (k 0)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)) (d (n "xxhash-rust") (r "^0.8.6") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "159zds5n7vyi4zr0svch4ggvwb2syyflss2svv3bs5rj73c689bw") (f (quote (("zip_with") ("unique_counts") ("timezones" "chrono-tz" "arrow/chrono-tz" "arrow/timezones") ("temporal" "regex" "chrono" "polars-error/regex") ("take_opt_iter") ("strings" "regex" "arrow/strings" "polars-error/regex") ("simd" "arrow/simd" "polars-compute/simd") ("serde-lazy" "serde" "arrow/serde" "indexmap/serde" "smartstring/serde" "chrono/serde") ("rows") ("row_hash") ("round_series") ("rolling_window") ("reinterpret") ("random" "rand" "rand_distr") ("python") ("product") ("performant" "arrow/performant" "reinterpret") ("partition_by") ("object" "serde_json") ("nightly" "simd" "hashbrown/nightly" "polars-utils/nightly" "arrow/nightly") ("lazy") ("is_last_distinct") ("is_first_distinct") ("group_by_list") ("fmt_no_tty" "comfy-table") ("fmt" "comfy-table/tty") ("dynamic_group_by" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-struct") ("dtype-i8") ("dtype-i16") ("dtype-duration" "temporal") ("dtype-decimal" "arrow/dtype-decimal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical") ("dtype-array" "arrow/dtype-array" "polars-compute/dtype-array") ("dot_product") ("docs-selection" "ndarray" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "checked_arithmetic" "is_first_distinct" "is_last_distinct" "dot_product" "row_hash" "rolling_window" "dtype-categorical" "dtype-decimal" "diagonal_concat" "dataframe_arithmetic" "product" "describe" "partition_by" "algorithm_group_by") ("docs") ("diagonal_concat") ("describe") ("default" "algorithm_group_by") ("dataframe_arithmetic") ("checked_arithmetic") ("bigidx" "arrow/bigidx" "polars-utils/bigidx") ("avx512") ("arrow_rs" "arrow-array" "arrow/arrow_rs") ("algorithm_group_by")))) (s 2) (e (quote (("serde" "dep:serde" "smartstring/serde" "bitflags/serde"))))))

(define-public crate-polars-core-0.39.1 (c (n "polars-core") (v "0.39.1") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.39.1") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison"))) (k 0) (p "polars-arrow")) (d (n "arrow-array") (r ">=41") (o #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^7.0.1") (o #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-compute") (r "^0.39.1") (k 0)) (d (n "polars-error") (r "^0.39.1") (k 0)) (d (n "polars-row") (r "^0.39.1") (k 0)) (d (n "polars-utils") (r "^0.39.1") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.9") (d #t) (k 0)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)) (d (n "xxhash-rust") (r "^0.8.6") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "125cp589w3rnlx27fvrkrp3n3xaib2srlhh4sqljzs2qg68p5jw5") (f (quote (("zip_with") ("unique_counts") ("timezones" "chrono-tz" "arrow/chrono-tz" "arrow/timezones") ("temporal" "regex" "chrono" "polars-error/regex") ("take_opt_iter") ("strings" "regex" "arrow/strings" "polars-error/regex") ("simd" "arrow/simd" "polars-compute/simd") ("serde-lazy" "serde" "arrow/serde" "indexmap/serde" "smartstring/serde" "chrono/serde") ("rows") ("row_hash") ("round_series") ("rolling_window") ("reinterpret") ("random" "rand" "rand_distr") ("python") ("product") ("performant" "arrow/performant" "reinterpret") ("partition_by") ("object" "serde_json") ("nightly" "simd" "hashbrown/nightly" "polars-utils/nightly" "arrow/nightly") ("lazy") ("is_last_distinct") ("is_first_distinct") ("group_by_list") ("fmt_no_tty" "comfy-table") ("fmt" "comfy-table/tty") ("dynamic_group_by" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-struct") ("dtype-i8") ("dtype-i16") ("dtype-duration" "temporal") ("dtype-decimal" "arrow/dtype-decimal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical") ("dtype-array" "arrow/dtype-array" "polars-compute/dtype-array") ("dot_product") ("docs-selection" "ndarray" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "checked_arithmetic" "is_first_distinct" "is_last_distinct" "dot_product" "row_hash" "rolling_window" "dtype-categorical" "dtype-decimal" "diagonal_concat" "dataframe_arithmetic" "product" "describe" "partition_by" "algorithm_group_by") ("docs") ("diagonal_concat") ("describe") ("default" "algorithm_group_by") ("dataframe_arithmetic") ("checked_arithmetic") ("bigidx" "arrow/bigidx" "polars-utils/bigidx") ("avx512") ("arrow_rs" "arrow-array" "arrow/arrow_rs") ("algorithm_group_by")))) (s 2) (e (quote (("serde" "dep:serde" "smartstring/serde" "bitflags/serde"))))))

(define-public crate-polars-core-0.39.2 (c (n "polars-core") (v "0.39.2") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.39.2") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison"))) (k 0) (p "polars-arrow")) (d (n "arrow-array") (r ">=41") (o #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^7.0.1") (o #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-compute") (r "^0.39.2") (k 0)) (d (n "polars-error") (r "^0.39.2") (k 0)) (d (n "polars-row") (r "^0.39.2") (k 0)) (d (n "polars-utils") (r "^0.39.2") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.9") (d #t) (k 0)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)) (d (n "xxhash-rust") (r "^0.8.6") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "0p736fm04myn43qfyvv9asywif46292vln638cd0nvbbx79p0ps6") (f (quote (("zip_with") ("unique_counts") ("timezones" "chrono-tz" "arrow/chrono-tz" "arrow/timezones") ("temporal" "regex" "chrono" "polars-error/regex") ("take_opt_iter") ("strings" "regex" "arrow/strings" "polars-error/regex") ("simd" "arrow/simd" "polars-compute/simd") ("serde-lazy" "serde" "arrow/serde" "indexmap/serde" "smartstring/serde" "chrono/serde") ("rows") ("row_hash") ("round_series") ("rolling_window") ("reinterpret") ("random" "rand" "rand_distr") ("python") ("product") ("performant" "arrow/performant" "reinterpret") ("partition_by") ("object" "serde_json") ("nightly" "simd" "hashbrown/nightly" "polars-utils/nightly" "arrow/nightly") ("lazy") ("is_last_distinct") ("is_first_distinct") ("group_by_list") ("fmt_no_tty" "comfy-table") ("fmt" "comfy-table/tty") ("dynamic_group_by" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-struct") ("dtype-i8") ("dtype-i16") ("dtype-duration" "temporal") ("dtype-decimal" "arrow/dtype-decimal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical") ("dtype-array" "arrow/dtype-array" "polars-compute/dtype-array") ("dot_product") ("docs-selection" "ndarray" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "checked_arithmetic" "is_first_distinct" "is_last_distinct" "dot_product" "row_hash" "rolling_window" "dtype-categorical" "dtype-decimal" "diagonal_concat" "dataframe_arithmetic" "product" "describe" "partition_by" "algorithm_group_by") ("docs") ("diagonal_concat") ("describe") ("default" "algorithm_group_by") ("dataframe_arithmetic") ("checked_arithmetic") ("bigidx" "arrow/bigidx" "polars-utils/bigidx") ("avx512") ("arrow_rs" "arrow-array" "arrow/arrow_rs") ("algorithm_group_by")))) (s 2) (e (quote (("serde" "dep:serde" "smartstring/serde" "bitflags/serde"))))))

(define-public crate-polars-core-0.40.0 (c (n "polars-core") (v "0.40.0") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.40.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison"))) (k 0) (p "polars-arrow")) (d (n "arrow-array") (r ">=41") (o #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^7.0.1") (o #t) (k 0)) (d (n "either") (r "^1.11") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash" "serde"))) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-compute") (r "^0.40.0") (k 0)) (d (n "polars-error") (r "^0.40.0") (k 0)) (d (n "polars-row") (r "^0.40.0") (k 0)) (d (n "polars-utils") (r "^0.40.0") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng" "std"))) (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.9") (d #t) (k 0)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)) (d (n "xxhash-rust") (r "^0.8.6") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "0ahbf6s5piibfm46fanp1flqr6kldy2d2czazrcaarhkrsxcd474") (f (quote (("zip_with") ("unique_counts") ("timezones" "chrono-tz" "arrow/chrono-tz" "arrow/timezones") ("temporal" "regex" "chrono" "polars-error/regex") ("take_opt_iter") ("strings" "regex" "arrow/strings" "polars-error/regex") ("simd" "arrow/simd" "polars-compute/simd") ("serde-lazy" "serde" "arrow/serde" "indexmap/serde" "smartstring/serde" "chrono/serde") ("rows") ("row_hash") ("round_series") ("rolling_window_by") ("rolling_window") ("reinterpret") ("random" "rand" "rand_distr") ("python") ("product") ("performant" "arrow/performant" "reinterpret") ("partition_by") ("object" "serde_json") ("nightly" "simd" "hashbrown/nightly" "polars-utils/nightly" "arrow/nightly") ("lazy") ("is_last_distinct") ("is_first_distinct") ("group_by_list") ("fmt_no_tty" "comfy-table") ("fmt" "comfy-table/tty") ("dynamic_group_by" "dtype-datetime" "dtype-date") ("dtype-u8") ("dtype-u16") ("dtype-time" "temporal") ("dtype-struct") ("dtype-i8") ("dtype-i16") ("dtype-duration" "temporal") ("dtype-decimal" "arrow/dtype-decimal") ("dtype-datetime" "temporal") ("dtype-date" "temporal") ("dtype-categorical") ("dtype-array" "arrow/dtype-array" "polars-compute/dtype-array") ("dot_product") ("docs-selection" "ndarray" "rows" "docs" "strings" "object" "lazy" "temporal" "random" "zip_with" "checked_arithmetic" "is_first_distinct" "is_last_distinct" "dot_product" "row_hash" "rolling_window" "rolling_window_by" "dtype-categorical" "dtype-decimal" "diagonal_concat" "dataframe_arithmetic" "product" "describe" "partition_by" "algorithm_group_by") ("docs") ("diagonal_concat") ("describe") ("default" "algorithm_group_by") ("dataframe_arithmetic") ("checked_arithmetic") ("bigidx" "arrow/bigidx" "polars-utils/bigidx") ("avx512") ("arrow_rs" "arrow-array" "arrow/arrow_rs") ("algorithm_group_by")))) (s 2) (e (quote (("serde" "dep:serde" "smartstring/serde" "bitflags/serde"))))))

