(define-module (crates-io po la polars-lazy) #:use-module (crates-io))

(define-public crate-polars-lazy-0.12.0-beta.0 (c (n "polars-lazy") (v "0.12.0-beta.0") (d (list (d (n "ahash") (r "^0.5") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "polars-core") (r "^0.12.0-beta.0") (f (quote ("lazy"))) (d #t) (k 0)) (d (n "polars-io") (r "^0.12.0-beta.0") (f (quote ("lazy"))) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)))) (h "01qil6ycf42fv6rhamvxnqdpp372388fznqgi8mv9p53v9mqcsrh") (f (quote (("parquet" "polars-core/parquet" "polars-io/parquet"))))))

(define-public crate-polars-lazy-0.12.0 (c (n "polars-lazy") (v "0.12.0") (d (list (d (n "ahash") (r "^0.6") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.12.0") (d #t) (k 0)) (d (n "polars-core") (r "^0.12.0") (f (quote ("lazy"))) (d #t) (k 0)) (d (n "polars-io") (r "^0.12.0") (f (quote ("lazy"))) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)))) (h "13iv2l2hgfpww7fkfgq4wilhj5c26z6h5v59av2lkylpqn3zbckr") (f (quote (("parquet" "polars-core/parquet" "polars-io/parquet"))))))

(define-public crate-polars-lazy-0.12.1 (c (n "polars-lazy") (v "0.12.1") (d (list (d (n "ahash") (r "^0.6") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.12.0") (d #t) (k 0)) (d (n "polars-core") (r "^0.12.0") (f (quote ("lazy"))) (d #t) (k 0)) (d (n "polars-io") (r "^0.12.0") (f (quote ("lazy"))) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)))) (h "1vbp28jk02d7kw6r9kq0zcg9mk3ygh2wzmnv3ixgay8pai8x4pvq") (f (quote (("parquet" "polars-core/parquet" "polars-io/parquet"))))))

(define-public crate-polars-lazy-0.13.0 (c (n "polars-lazy") (v "0.13.0") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "datafusion") (r "^4.0.0") (o #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.13.0") (d #t) (k 0)) (d (n "polars-core") (r "^0.13.0") (f (quote ("lazy"))) (k 0)) (d (n "polars-io") (r "^0.13.0") (f (quote ("lazy" "csv-file"))) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "rt-multi-thread" "sync"))) (o #t) (d #t) (k 0)))) (h "0d1fhvhflvjrw8aqw6yz74xcrmf9kvhk0ncxsnrqy7yl8n4zvpc9") (f (quote (("temporal" "polars-core/temporal") ("parquet" "polars-core/parquet" "polars-io/parquet") ("ooc" "datafusion" "tokio") ("future") ("fmt" "polars-core/plain_fmt") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u64" "polars-core/dtype-u64" "polars-io/dtype-u64") ("dtype-u16" "polars-core/dtype-u16") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-date64" "polars-core/dtype-date64") ("dtype-date32" "polars-core/dtype-date32"))))))

(define-public crate-polars-lazy-0.13.3 (c (n "polars-lazy") (v "0.13.3") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "datafusion") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.13.3") (d #t) (k 0)) (d (n "polars-core") (r "^0.13.3") (f (quote ("lazy"))) (k 0)) (d (n "polars-io") (r "^0.13.3") (f (quote ("lazy" "csv-file"))) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "rt-multi-thread" "sync"))) (o #t) (d #t) (k 0)))) (h "0azk6j1q4y3dqgwv42w5a7ibjghmfd70wszd4lv25kxsa7whcnar") (f (quote (("temporal" "polars-core/temporal") ("parquet" "polars-core/parquet" "polars-io/parquet") ("ooc" "datafusion" "tokio") ("future") ("fmt" "polars-core/plain_fmt") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u64" "polars-core/dtype-u64" "polars-io/dtype-u64") ("dtype-u16" "polars-core/dtype-u16") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-date64" "polars-core/dtype-date64") ("dtype-date32" "polars-core/dtype-date32"))))))

(define-public crate-polars-lazy-0.13.4 (c (n "polars-lazy") (v "0.13.4") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.13.4") (d #t) (k 0)) (d (n "polars-core") (r "^0.13.4") (f (quote ("lazy"))) (k 0)) (d (n "polars-io") (r "^0.13.4") (f (quote ("lazy" "csv-file"))) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)))) (h "0z5dqz9fk23i10flq4lw8a3qb6638kwxcmka1dyxpabh94l86zqf") (f (quote (("temporal" "polars-core/temporal") ("parquet" "polars-core/parquet" "polars-io/parquet") ("is_in" "polars-core/is_in") ("future") ("fmt" "polars-core/plain_fmt") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u64" "polars-core/dtype-u64" "polars-io/dtype-u64") ("dtype-u16" "polars-core/dtype-u16") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-date64" "polars-core/dtype-date64") ("dtype-date32" "polars-core/dtype-date32"))))))

(define-public crate-polars-lazy-0.14.0 (c (n "polars-lazy") (v "0.14.0") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.14.0") (d #t) (k 0)) (d (n "polars-core") (r "^0.14.0") (f (quote ("lazy" "private"))) (k 0)) (d (n "polars-io") (r "^0.14.0") (f (quote ("lazy" "csv-file"))) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)))) (h "05hxj23b2nb5apdl3g1y5zjz1668miaz571ynv64g4xi3ghfcw51") (f (quote (("temporal" "polars-core/temporal") ("private") ("parquet" "polars-core/parquet" "polars-io/parquet") ("is_in" "polars-core/is_in") ("future") ("fmt" "polars-core/plain_fmt") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u64" "polars-core/dtype-u64" "polars-io/dtype-u64") ("dtype-u16" "polars-core/dtype-u16") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-date64" "polars-core/dtype-date64") ("dtype-date32" "polars-core/dtype-date32"))))))

(define-public crate-polars-lazy-0.14.1 (c (n "polars-lazy") (v "0.14.1") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.14.1") (d #t) (k 0)) (d (n "polars-core") (r "^0.14.1") (f (quote ("lazy" "private"))) (k 0)) (d (n "polars-io") (r "^0.14.1") (f (quote ("lazy" "csv-file"))) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)))) (h "0nads8jlid31ill1hfwc5af84kzj5za0m2sgcsjdi5hf3f0s6a9c") (f (quote (("temporal" "polars-core/temporal") ("private") ("parquet" "polars-core/parquet" "polars-io/parquet") ("is_in" "polars-core/is_in") ("future") ("fmt" "polars-core/plain_fmt") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u64" "polars-core/dtype-u64" "polars-io/dtype-u64") ("dtype-u16" "polars-core/dtype-u16") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-date64" "polars-core/dtype-date64") ("dtype-date32" "polars-core/dtype-date32") ("csv-file" "polars-io/csv-file"))))))

(define-public crate-polars-lazy-0.14.2 (c (n "polars-lazy") (v "0.14.2") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.14.2") (d #t) (k 0)) (d (n "polars-core") (r "^0.14.2") (f (quote ("lazy" "private" "zip_with"))) (k 0)) (d (n "polars-io") (r "^0.14.2") (f (quote ("lazy" "csv-file"))) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)))) (h "169qh2bka1nqm27g6gaq64fj89isfsh1jykmr8airqyb2a3jh8qs") (f (quote (("temporal" "polars-core/temporal") ("round_series" "polars-core/round_series") ("private") ("parquet" "polars-core/parquet" "polars-io/parquet") ("is_in" "polars-core/is_in") ("future") ("fmt" "polars-core/plain_fmt") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u64" "polars-core/dtype-u64" "polars-io/dtype-u64") ("dtype-u16" "polars-core/dtype-u16") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-date64" "polars-core/dtype-date64") ("dtype-date32" "polars-core/dtype-date32") ("csv-file" "polars-io/csv-file"))))))

(define-public crate-polars-lazy-0.14.3 (c (n "polars-lazy") (v "0.14.3") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.14.3") (d #t) (k 0)) (d (n "polars-core") (r "^0.14.3") (f (quote ("lazy" "private" "zip_with"))) (k 0)) (d (n "polars-io") (r "^0.14.3") (f (quote ("lazy" "csv-file"))) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)))) (h "1sggib429mrkw15k1hq9mi4604q4bx7r88yjh3qja1rdgs5hlydd") (f (quote (("temporal" "polars-core/temporal") ("round_series" "polars-core/round_series") ("repeat_by" "polars-core/repeat_by") ("private") ("parquet" "polars-core/parquet" "polars-io/parquet") ("is_in" "polars-core/is_in") ("future") ("fmt" "polars-core/plain_fmt") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u64" "polars-core/dtype-u64" "polars-io/dtype-u64") ("dtype-u16" "polars-core/dtype-u16") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-date64" "polars-core/dtype-date64") ("dtype-date32" "polars-core/dtype-date32") ("csv-file" "polars-io/csv-file"))))))

(define-public crate-polars-lazy-0.14.4 (c (n "polars-lazy") (v "0.14.4") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.14.4") (d #t) (k 0)) (d (n "polars-core") (r "^0.14.4") (f (quote ("lazy" "private" "zip_with"))) (k 0)) (d (n "polars-io") (r "^0.14.4") (f (quote ("lazy" "csv-file"))) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)))) (h "0gs5d3p8gz2msk73vs9wfn0cfnzcqzc2w76ff0fqgbfzdqgdz3s3") (f (quote (("temporal" "polars-core/temporal") ("round_series" "polars-core/round_series") ("repeat_by" "polars-core/repeat_by") ("private") ("parquet" "polars-core/parquet" "polars-io/parquet") ("is_in" "polars-core/is_in") ("future") ("fmt" "polars-core/plain_fmt") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u64" "polars-core/dtype-u64" "polars-io/dtype-u64") ("dtype-u16" "polars-core/dtype-u16") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-date64" "polars-core/dtype-date64") ("dtype-date32" "polars-core/dtype-date32") ("csv-file" "polars-io/csv-file"))))))

(define-public crate-polars-lazy-0.14.5 (c (n "polars-lazy") (v "0.14.5") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.14.5") (d #t) (k 0)) (d (n "polars-core") (r "^0.14.5") (f (quote ("lazy" "private" "zip_with"))) (k 0)) (d (n "polars-io") (r "^0.14.5") (f (quote ("lazy" "csv-file"))) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)))) (h "1g4k3zzir5qznmgkw4fdfg8mailva0pz33f4hid75rmvb7xv59kw") (f (quote (("temporal" "polars-core/temporal") ("round_series" "polars-core/round_series") ("repeat_by" "polars-core/repeat_by") ("private") ("parquet" "polars-core/parquet" "polars-io/parquet") ("is_in" "polars-core/is_in") ("future") ("fmt" "polars-core/plain_fmt") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u64" "polars-core/dtype-u64" "polars-io/dtype-u64") ("dtype-u16" "polars-core/dtype-u16") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-date64" "polars-core/dtype-date64") ("dtype-date32" "polars-core/dtype-date32") ("default" "compile") ("csv-file" "polars-io/csv-file") ("compile"))))))

(define-public crate-polars-lazy-0.14.6 (c (n "polars-lazy") (v "0.14.6") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.14.6") (d #t) (k 0)) (d (n "polars-core") (r "^0.14.6") (f (quote ("lazy" "private" "zip_with"))) (k 0)) (d (n "polars-io") (r "^0.14.6") (f (quote ("lazy" "csv-file"))) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)))) (h "085six27apns6vk3xva6waasjwc4iw47qx36js1jfmr9v3015cbd") (f (quote (("temporal" "polars-core/temporal") ("round_series" "polars-core/round_series") ("repeat_by" "polars-core/repeat_by") ("private") ("parquet" "polars-core/parquet" "polars-io/parquet") ("is_in" "polars-core/is_in") ("is_first" "polars-core/is_first") ("future") ("fmt" "polars-core/plain_fmt") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u64" "polars-core/dtype-u64" "polars-io/dtype-u64") ("dtype-u16" "polars-core/dtype-u16") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-date64" "polars-core/dtype-date64") ("dtype-date32" "polars-core/dtype-date32") ("default" "compile") ("csv-file" "polars-io/csv-file") ("compile") ("asof_join" "polars-core/asof_join"))))))

(define-public crate-polars-lazy-0.14.7 (c (n "polars-lazy") (v "0.14.7") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.14.7") (d #t) (k 0)) (d (n "polars-core") (r "^0.14.7") (f (quote ("lazy" "private" "zip_with"))) (k 0)) (d (n "polars-io") (r "^0.14.7") (f (quote ("lazy" "csv-file"))) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)))) (h "1bz7950ix7ggcbs2mybb0qg5km93mm70wbf0h0l2zwra2mypczsc") (f (quote (("temporal" "polars-core/temporal") ("round_series" "polars-core/round_series") ("repeat_by" "polars-core/repeat_by") ("private") ("parquet" "polars-core/parquet" "polars-io/parquet") ("is_in" "polars-core/is_in") ("is_first" "polars-core/is_first") ("future") ("fmt" "polars-core/plain_fmt") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u64" "polars-core/dtype-u64" "polars-io/dtype-u64") ("dtype-u16" "polars-core/dtype-u16") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-date64" "polars-core/dtype-date64") ("dtype-date32" "polars-core/dtype-date32") ("dot_product" "polars-core/dot_product") ("default" "compile") ("csv-file" "polars-io/csv-file") ("cross_join" "polars-core/cross_join") ("compile"))))))

(define-public crate-polars-lazy-0.14.8 (c (n "polars-lazy") (v "0.14.8") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.14.8") (d #t) (k 0)) (d (n "polars-core") (r "^0.14.8") (f (quote ("lazy" "private" "zip_with"))) (k 0)) (d (n "polars-io") (r "^0.14.8") (f (quote ("lazy" "csv-file"))) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)))) (h "07gir4r7ifc9przvd8acd09g225si2z2lpczmmv8jdqyrz8vd5k5") (f (quote (("temporal" "polars-core/temporal") ("round_series" "polars-core/round_series") ("repeat_by" "polars-core/repeat_by") ("private") ("parquet" "polars-core/parquet" "polars-io/parquet") ("mode" "polars-core/mode") ("is_in" "polars-core/is_in") ("is_first" "polars-core/is_first") ("future") ("fmt" "polars-core/plain_fmt") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u64" "polars-core/dtype-u64" "polars-io/dtype-u64") ("dtype-u16" "polars-core/dtype-u16") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-date64" "polars-core/dtype-date64") ("dtype-date32" "polars-core/dtype-date32") ("dot_product" "polars-core/dot_product") ("default" "compile") ("csv-file" "polars-io/csv-file") ("cross_join" "polars-core/cross_join") ("concat_str" "polars-core/concat_str") ("compile"))))))

(define-public crate-polars-lazy-0.15.0 (c (n "polars-lazy") (v "0.15.0") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.15.0") (d #t) (k 0)) (d (n "polars-core") (r "^0.15.0") (f (quote ("lazy" "private" "zip_with"))) (k 0)) (d (n "polars-io") (r "^0.15.0") (f (quote ("lazy" "csv-file"))) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)))) (h "1l32yl0vbfda6n0k3853j2ddk0549rnssal03i9vac65gczlb65d") (f (quote (("temporal" "polars-core/temporal") ("round_series" "polars-core/round_series") ("repeat_by" "polars-core/repeat_by") ("private") ("parquet" "polars-core/parquet" "polars-io/parquet") ("mode" "polars-core/mode") ("is_in" "polars-core/is_in") ("is_first" "polars-core/is_first") ("future") ("fmt" "polars-core/plain_fmt") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u64" "polars-core/dtype-u64" "polars-io/dtype-u64") ("dtype-u16" "polars-core/dtype-u16") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-date64" "polars-core/dtype-date64") ("dtype-date32" "polars-core/dtype-date32") ("dot_product" "polars-core/dot_product") ("default" "compile") ("csv-file" "polars-io/csv-file") ("cross_join" "polars-core/cross_join") ("concat_str" "polars-core/concat_str") ("compile"))))))

(define-public crate-polars-lazy-0.15.1 (c (n "polars-lazy") (v "0.15.1") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.15.1") (d #t) (k 0)) (d (n "polars-core") (r "^0.15.1") (f (quote ("lazy" "private" "zip_with"))) (k 0)) (d (n "polars-io") (r "^0.15.1") (f (quote ("lazy" "csv-file"))) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4") (o #t) (d #t) (k 0)))) (h "0xh3a0gjsisx62zwjmawxg9giin7bwmh7z7y4cc2d3ygy8nk19jh") (f (quote (("temporal" "polars-core/temporal") ("round_series" "polars-core/round_series") ("repeat_by" "polars-core/repeat_by") ("private") ("parquet" "polars-core/parquet" "polars-io/parquet") ("mode" "polars-core/mode") ("is_in" "polars-core/is_in") ("is_first" "polars-core/is_first") ("future") ("fmt" "polars-core/plain_fmt") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u64" "polars-core/dtype-u64" "polars-io/dtype-u64") ("dtype-u16" "polars-core/dtype-u16") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-date64" "polars-core/dtype-date64") ("dtype-date32" "polars-core/dtype-date32") ("dot_product" "polars-core/dot_product") ("default" "compile") ("csv-file" "polars-io/csv-file") ("cross_join" "polars-core/cross_join") ("concat_str" "polars-core/concat_str") ("compile"))))))

(define-public crate-polars-lazy-0.16.0 (c (n "polars-lazy") (v "0.16.0") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.16.0") (d #t) (k 0)) (d (n "polars-core") (r "^0.16.0") (f (quote ("lazy" "private" "zip_with"))) (k 0)) (d (n "polars-io") (r "^0.16.0") (f (quote ("lazy" "csv-file" "private"))) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4") (o #t) (d #t) (k 0)))) (h "01bjsk880dvigyqx7aj3f8zvxpk9gl14k3s40w3dv3aanhdzq7wx") (f (quote (("temporal" "polars-core/temporal") ("round_series" "polars-core/round_series") ("rolling_window" "polars-core/rolling_window") ("repeat_by" "polars-core/repeat_by") ("rank" "polars-core/rank") ("private") ("parquet" "polars-core/parquet" "polars-io/parquet") ("moment" "polars-core/moment") ("mode" "polars-core/mode") ("list" "polars-core/list") ("is_in" "polars-core/is_in") ("is_first" "polars-core/is_first") ("interpolate" "polars-core/interpolate") ("future") ("fmt" "polars-core/plain_fmt") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u64" "polars-core/dtype-u64" "polars-io/dtype-u64") ("dtype-u16" "polars-core/dtype-u16") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-date64" "polars-core/dtype-date64") ("dtype-date32" "polars-core/dtype-date32") ("dot_product" "polars-core/dot_product") ("diff" "polars-core/diff") ("default" "compile") ("cum_agg" "polars-core/cum_agg") ("csv-file" "polars-io/csv-file") ("cross_join" "polars-core/cross_join") ("concat_str" "polars-core/concat_str") ("compile") ("arange"))))))

(define-public crate-polars-lazy-0.17.0 (c (n "polars-lazy") (v "0.17.0") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.17.0") (d #t) (k 0)) (d (n "polars-core") (r "^0.17.0") (f (quote ("lazy" "private" "zip_with"))) (k 0)) (d (n "polars-io") (r "^0.17.0") (f (quote ("lazy" "csv-file" "private"))) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4") (o #t) (d #t) (k 0)))) (h "0qabh08q4978s33d2mn2m8c90spg21frr4lhpyxx2ngsw93scgns") (f (quote (("true_div") ("temporal" "polars-core/temporal") ("round_series" "polars-core/round_series") ("rolling_window" "polars-core/rolling_window") ("repeat_by" "polars-core/repeat_by") ("rank" "polars-core/rank") ("private") ("parquet" "polars-core/parquet" "polars-io/parquet") ("moment" "polars-core/moment") ("mode" "polars-core/mode") ("list" "polars-core/list") ("is_in" "polars-core/is_in") ("is_first" "polars-core/is_first") ("interpolate" "polars-core/interpolate") ("future") ("fmt" "polars-core/plain_fmt") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-datetime" "polars-core/dtype-datetime") ("dtype-date" "polars-core/dtype-date") ("dtype-categorical" "polars-core/dtype-categorical") ("dot_product" "polars-core/dot_product") ("diff" "polars-core/diff") ("default" "compile") ("cum_agg" "polars-core/cum_agg") ("csv-file" "polars-io/csv-file") ("cross_join" "polars-core/cross_join") ("concat_str" "polars-core/concat_str") ("compile") ("asof_join" "polars-core/asof_join") ("arange"))))))

(define-public crate-polars-lazy-0.18.0 (c (n "polars-lazy") (v "0.18.0") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.18.0") (d #t) (k 0)) (d (n "polars-core") (r "^0.18.0") (f (quote ("lazy" "private" "zip_with"))) (k 0)) (d (n "polars-io") (r "^0.18.0") (f (quote ("lazy" "csv-file" "private"))) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4") (o #t) (d #t) (k 0)))) (h "0ihx5648khfsx4gmxs2rk66mg13q6310mf3fmmqxyqv4p8i11ya3") (f (quote (("true_div") ("test" "rolling_window" "rank" "list" "round_series" "csv-file" "dtype-categorical" "cum_agg" "regex" "polars-core/plain_fmt") ("temporal" "polars-core/temporal") ("round_series" "polars-core/round_series") ("rolling_window" "polars-core/rolling_window") ("repeat_by" "polars-core/repeat_by") ("rank" "polars-core/rank") ("private") ("parquet" "polars-core/parquet" "polars-io/parquet") ("object" "polars-core/object") ("moment" "polars-core/moment") ("mode" "polars-core/mode") ("list" "polars-core/list") ("is_in" "polars-core/is_in") ("is_first" "polars-core/is_first") ("ipc" "polars-io/ipc") ("interpolate" "polars-core/interpolate") ("future") ("fmt" "polars-core/plain_fmt") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-datetime" "polars-core/dtype-datetime") ("dtype-date" "polars-core/dtype-date") ("dtype-categorical" "polars-core/dtype-categorical") ("dot_product" "polars-core/dot_product") ("diff" "polars-core/diff") ("default" "compile") ("cum_agg" "polars-core/cum_agg") ("csv-file" "polars-io/csv-file") ("cross_join" "polars-core/cross_join") ("concat_str" "polars-core/concat_str") ("compile") ("asof_join" "polars-core/asof_join") ("arange") ("abs" "polars-core/abs"))))))

(define-public crate-polars-lazy-0.19.0 (c (n "polars-lazy") (v "0.19.0") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.19.0") (d #t) (k 0)) (d (n "polars-core") (r "^0.19.0") (f (quote ("lazy" "private" "zip_with"))) (k 0)) (d (n "polars-io") (r "^0.19.0") (f (quote ("lazy" "csv-file" "private"))) (k 0)) (d (n "polars-utils") (r "^0.1.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4") (o #t) (d #t) (k 0)))) (h "186mr6lpkpj21x8v0wml9m4ykgfkj5a4dvk373c5qk7mkwv02zrr") (f (quote (("true_div") ("test" "rolling_window" "rank" "list" "round_series" "csv-file" "dtype-categorical" "cum_agg" "regex" "polars-core/plain_fmt" "diff" "abs" "parquet" "ipc") ("temporal" "polars-core/temporal") ("round_series" "polars-core/round_series") ("rolling_window" "polars-core/rolling_window") ("repeat_by" "polars-core/repeat_by") ("rank" "polars-core/rank") ("random" "polars-core/random") ("private") ("pct_change" "polars-core/pct_change") ("parquet" "polars-core/parquet" "polars-io/parquet") ("object" "polars-core/object") ("moment" "polars-core/moment") ("mode" "polars-core/mode") ("list" "polars-core/list") ("is_in" "polars-core/is_in") ("is_first" "polars-core/is_first") ("ipc" "polars-io/ipc") ("interpolate" "polars-core/interpolate") ("future") ("fmt" "polars-core/plain_fmt") ("ewma" "polars-core/ewma") ("dynamic_groupby" "polars-core/dynamic_groupby") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration") ("dtype-datetime" "polars-core/dtype-datetime") ("dtype-date" "polars-core/dtype-date") ("dtype-categorical" "polars-core/dtype-categorical") ("dot_product" "polars-core/dot_product") ("dot_diagram") ("diff" "polars-core/diff") ("default" "compile") ("cum_agg" "polars-core/cum_agg") ("csv-file" "polars-io/csv-file") ("cross_join" "polars-core/cross_join") ("concat_str" "polars-core/concat_str") ("compile") ("asof_join" "polars-core/asof_join") ("arange") ("abs" "polars-core/abs"))))))

(define-public crate-polars-lazy-0.19.1 (c (n "polars-lazy") (v "0.19.1") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.19.1") (d #t) (k 0)) (d (n "polars-core") (r "^0.19.1") (f (quote ("lazy" "private" "zip_with"))) (k 0)) (d (n "polars-io") (r "^0.19.1") (f (quote ("lazy" "csv-file" "private"))) (k 0)) (d (n "polars-utils") (r "^0.1.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)))) (h "1d12mbh63nz1mppqwqrdq02cw8m3bm9qvn863rv3sab58giv2i9m") (f (quote (("true_div") ("test" "rolling_window" "rank" "list" "round_series" "csv-file" "dtype-categorical" "cum_agg" "regex" "polars-core/plain_fmt" "diff" "abs" "parquet" "ipc") ("temporal" "polars-core/temporal") ("round_series" "polars-core/round_series") ("rolling_window" "polars-core/rolling_window") ("repeat_by" "polars-core/repeat_by") ("rank" "polars-core/rank") ("random" "polars-core/random") ("private") ("pct_change" "polars-core/pct_change") ("parquet" "polars-core/parquet" "polars-io/parquet") ("object" "polars-core/object") ("moment" "polars-core/moment") ("mode" "polars-core/mode") ("list" "polars-core/list") ("is_in" "polars-core/is_in") ("is_first" "polars-core/is_first") ("ipc" "polars-io/ipc") ("interpolate" "polars-core/interpolate") ("future") ("fmt" "polars-core/plain_fmt") ("ewma" "polars-core/ewma") ("dynamic_groupby" "polars-core/dynamic_groupby") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration") ("dtype-datetime" "polars-core/dtype-datetime") ("dtype-date" "polars-core/dtype-date") ("dtype-categorical" "polars-core/dtype-categorical") ("dot_product" "polars-core/dot_product") ("dot_diagram") ("diff" "polars-core/diff") ("default" "compile") ("cum_agg" "polars-core/cum_agg") ("csv-file" "polars-io/csv-file") ("cross_join" "polars-core/cross_join") ("concat_str" "polars-core/concat_str") ("compile") ("asof_join" "polars-core/asof_join") ("arange") ("abs" "polars-core/abs"))))))

(define-public crate-polars-lazy-0.20.0 (c (n "polars-lazy") (v "0.20.0") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.20.0") (d #t) (k 0)) (d (n "polars-core") (r "^0.20.0") (f (quote ("lazy" "private" "zip_with"))) (k 0)) (d (n "polars-io") (r "^0.20.0") (f (quote ("lazy" "csv-file" "private"))) (k 0)) (d (n "polars-time") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "polars-utils") (r "^0.20.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)))) (h "1sg9q6h89zrhpbb9ad6kmv0xjm8niyav5mzinywipbl87gnizjjf") (f (quote (("true_div") ("test" "panic_on_schema" "private" "rolling_window" "rank" "list" "round_series" "csv-file" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc") ("temporal" "polars-core/temporal" "polars-time" "dtype-datetime") ("strings" "polars-core/strings") ("round_series" "polars-core/round_series") ("rolling_window" "polars-core/rolling_window") ("repeat_by" "polars-core/repeat_by") ("rank" "polars-core/rank") ("random" "polars-core/random") ("private" "polars-time/private") ("pct_change" "polars-core/pct_change") ("parquet" "polars-core/parquet" "polars-io/parquet") ("panic_on_schema") ("object" "polars-core/object") ("moment" "polars-core/moment") ("mode" "polars-core/mode") ("list" "polars-core/list") ("is_in" "polars-core/is_in") ("is_first" "polars-core/is_first") ("ipc" "polars-io/ipc") ("interpolate" "polars-core/interpolate") ("future") ("fmt" "polars-core/fmt") ("ewma" "polars-core/ewma") ("dynamic_groupby" "polars-core/dynamic_groupby") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-struct" "polars-core/dtype-struct") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration") ("dtype-datetime" "polars-core/dtype-datetime") ("dtype-date" "polars-core/dtype-date") ("dtype-categorical" "polars-core/dtype-categorical") ("dot_product" "polars-core/dot_product") ("dot_diagram") ("diff" "polars-core/diff") ("default" "compile" "private") ("cum_agg" "polars-core/cum_agg") ("csv-file" "polars-io/csv-file") ("cross_join" "polars-core/cross_join") ("concat_str" "polars-core/concat_str") ("compile") ("bigidx" "polars-arrow/bigidx" "polars-core/bigidx" "polars-utils/bigidx") ("asof_join" "polars-core/asof_join" "polars-time") ("arange") ("abs" "polars-core/abs"))))))

(define-public crate-polars-lazy-0.21.0 (c (n "polars-lazy") (v "0.21.0") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.21.0") (d #t) (k 0)) (d (n "polars-core") (r "^0.21.0") (f (quote ("lazy" "private" "zip_with"))) (k 0)) (d (n "polars-io") (r "^0.21.0") (f (quote ("lazy" "csv-file" "private"))) (k 0)) (d (n "polars-time") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "polars-utils") (r "^0.21.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "1yb3cgzl2xs1vxs6n8ym316l09zxg14rj72jp7fwww06pz9hnara") (f (quote (("unique_counts" "polars-core/unique_counts") ("true_div") ("test" "panic_on_schema" "private" "rolling_window" "rank" "list" "round_series" "csv-file" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("temporal" "polars-core/temporal" "polars-time" "dtype-datetime") ("strings" "polars-core/strings") ("round_series" "polars-core/round_series") ("rolling_window" "polars-core/rolling_window") ("repeat_by" "polars-core/repeat_by") ("rank" "polars-core/rank") ("random" "polars-core/random") ("private" "polars-time/private") ("pct_change" "polars-core/pct_change") ("parquet" "polars-core/parquet" "polars-io/parquet") ("panic_on_schema") ("object" "polars-core/object") ("moment" "polars-core/moment") ("mode" "polars-core/mode") ("log" "polars-core/log") ("list_eval") ("list" "polars-core/list") ("is_in" "polars-core/is_in") ("is_first" "polars-core/is_first") ("ipc" "polars-io/ipc") ("interpolate" "polars-core/interpolate") ("future") ("fmt" "polars-core/fmt") ("ewma" "polars-core/ewma") ("dynamic_groupby" "polars-core/dynamic_groupby") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-struct" "polars-core/dtype-struct") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-time/dtype-duration") ("dtype-datetime" "polars-core/dtype-datetime" "polars-time/dtype-datetime") ("dtype-date" "polars-core/dtype-date" "polars-time/dtype-date") ("dtype-categorical" "polars-core/dtype-categorical") ("dot_product" "polars-core/dot_product") ("dot_diagram") ("diff" "polars-core/diff") ("default" "compile" "private") ("cum_agg" "polars-core/cum_agg") ("csv-file" "polars-io/csv-file") ("cross_join" "polars-core/cross_join") ("concat_str" "polars-core/concat_str") ("compile") ("chunked_ids") ("bigidx" "polars-arrow/bigidx" "polars-core/bigidx" "polars-utils/bigidx") ("asof_join" "polars-core/asof_join" "polars-time") ("arange") ("abs" "polars-core/abs"))))))

(define-public crate-polars-lazy-0.21.1 (c (n "polars-lazy") (v "0.21.1") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.21.1") (d #t) (k 0)) (d (n "polars-core") (r "^0.21.1") (f (quote ("lazy" "private" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.21.1") (f (quote ("lazy" "csv-file" "private"))) (k 0)) (d (n "polars-time") (r "^0.21.1") (o #t) (d #t) (k 0)) (d (n "polars-utils") (r "^0.21.1") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "0n8clj7pvxdmi6rg65wwlim41yaf1y6v6fblpd0iwq853w023p7f") (f (quote (("unique_counts" "polars-core/unique_counts") ("true_div") ("test" "panic_on_schema" "private" "rolling_window" "rank" "list" "round_series" "csv-file" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("temporal" "polars-core/temporal" "polars-time" "dtype-datetime") ("strings" "polars-core/strings") ("round_series" "polars-core/round_series") ("rolling_window" "polars-core/rolling_window") ("repeat_by" "polars-core/repeat_by") ("rank" "polars-core/rank") ("random" "polars-core/random") ("private" "polars-time/private") ("pct_change" "polars-core/pct_change") ("parquet" "polars-core/parquet" "polars-io/parquet") ("panic_on_schema") ("object" "polars-core/object") ("moment" "polars-core/moment") ("mode" "polars-core/mode") ("log" "polars-core/log") ("list_eval") ("list" "polars-core/list") ("is_in" "polars-core/is_in") ("is_first" "polars-core/is_first") ("ipc" "polars-io/ipc") ("interpolate" "polars-core/interpolate") ("future") ("fmt" "polars-core/fmt") ("ewma" "polars-core/ewma") ("dynamic_groupby" "polars-core/dynamic_groupby") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-struct" "polars-core/dtype-struct") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-time/dtype-duration") ("dtype-datetime" "polars-core/dtype-datetime" "polars-time/dtype-datetime") ("dtype-date" "polars-core/dtype-date" "polars-time/dtype-date") ("dtype-categorical" "polars-core/dtype-categorical") ("dot_product" "polars-core/dot_product") ("dot_diagram") ("diff" "polars-core/diff") ("default" "compile" "private") ("cum_agg" "polars-core/cum_agg") ("csv-file" "polars-io/csv-file") ("cross_join" "polars-core/cross_join") ("concat_str" "polars-core/concat_str") ("compile") ("chunked_ids") ("bigidx" "polars-arrow/bigidx" "polars-core/bigidx" "polars-utils/bigidx") ("asof_join" "polars-core/asof_join" "polars-time") ("arange") ("abs" "polars-core/abs"))))))

(define-public crate-polars-lazy-0.22.0 (c (n "polars-lazy") (v "0.22.0") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.22.0") (d #t) (k 0)) (d (n "polars-core") (r "^0.22.1") (f (quote ("lazy" "private" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.22.0") (f (quote ("lazy" "csv-file" "private"))) (k 0)) (d (n "polars-ops") (r "^0.22.1") (k 0)) (d (n "polars-time") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "polars-utils") (r "^0.22.0") (d #t) (k 0)) (d (n "pyo3") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "1viqvfyjkw2z6y7fsc03xk0wapzxqm9z3d77pfwmj3d6hr81v27k") (f (quote (("unique_counts" "polars-core/unique_counts") ("true_div") ("test_all" "panic_on_schema" "private" "rolling_window" "rank" "list" "round_series" "csv-file" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("test" "panic_on_schema" "private" "rolling_window" "rank" "list" "round_series" "csv-file" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("temporal" "polars-core/temporal" "polars-time" "dtype-datetime") ("strings" "polars-core/strings") ("row_hash" "polars-core/row_hash") ("round_series" "polars-core/round_series") ("rolling_window" "polars-core/rolling_window" "polars-time/rolling_window") ("repeat_by" "polars-core/repeat_by") ("rank" "polars-core/rank") ("random" "polars-core/random") ("python" "pyo3") ("private" "polars-time/private") ("pct_change" "polars-core/pct_change") ("parquet" "polars-core/parquet" "polars-io/parquet") ("panic_on_schema") ("object" "polars-core/object") ("moment" "polars-core/moment") ("mode" "polars-core/mode") ("log" "polars-core/log") ("list_to_struct" "polars-ops/list_to_struct") ("list_eval") ("list" "polars-ops/list") ("is_in" "polars-core/is_in") ("is_first" "polars-core/is_first") ("ipc" "polars-io/ipc") ("interpolate" "polars-core/interpolate") ("future") ("fmt" "polars-core/fmt") ("ewma" "polars-core/ewma") ("dynamic_groupby" "polars-core/dynamic_groupby") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-struct" "polars-core/dtype-struct") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-time/dtype-duration") ("dtype-datetime" "polars-core/dtype-datetime" "polars-time/dtype-datetime") ("dtype-date" "polars-core/dtype-date" "polars-time/dtype-date") ("dtype-categorical" "polars-core/dtype-categorical") ("dot_product" "polars-core/dot_product") ("dot_diagram") ("diff" "polars-core/diff" "polars-ops/diff") ("default" "compile" "private") ("cumulative_eval") ("cum_agg" "polars-core/cum_agg") ("csv-file" "polars-io/csv-file") ("cross_join" "polars-core/cross_join") ("concat_str" "polars-core/concat_str") ("compile") ("chunked_ids") ("bigidx" "polars-arrow/bigidx" "polars-core/bigidx" "polars-utils/bigidx") ("asof_join" "polars-core/asof_join" "polars-time") ("arange") ("abs" "polars-core/abs"))))))

(define-public crate-polars-lazy-0.22.4 (c (n "polars-lazy") (v "0.22.4") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.22.4") (d #t) (k 0)) (d (n "polars-core") (r "^0.22.4") (f (quote ("lazy" "private" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.22.4") (f (quote ("lazy" "csv-file" "private"))) (k 0)) (d (n "polars-ops") (r "^0.22.4") (k 0)) (d (n "polars-time") (r "^0.22.4") (o #t) (d #t) (k 0)) (d (n "polars-utils") (r "^0.22.4") (d #t) (k 0)) (d (n "pyo3") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "07fh6l0ijnwwxhmpn5d17py12q57054zan979q6kvmcvqnih10bj") (f (quote (("unique_counts" "polars-core/unique_counts") ("true_div") ("test_all" "panic_on_schema" "private" "rolling_window" "rank" "list" "round_series" "csv-file" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("test" "panic_on_schema" "private" "rolling_window" "rank" "list" "round_series" "csv-file" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("temporal" "polars-core/temporal" "polars-time" "dtype-datetime") ("strings" "polars-core/strings") ("string_justify" "polars-ops/string_justify") ("row_hash" "polars-core/row_hash") ("round_series" "polars-core/round_series") ("rolling_window" "polars-core/rolling_window" "polars-time/rolling_window") ("repeat_by" "polars-core/repeat_by") ("rank" "polars-core/rank") ("random" "polars-core/random") ("python" "pyo3") ("private" "polars-time/private") ("pct_change" "polars-core/pct_change") ("parquet" "polars-core/parquet" "polars-io/parquet") ("panic_on_schema") ("object" "polars-core/object") ("moment" "polars-core/moment") ("mode" "polars-core/mode") ("log" "polars-ops/log") ("list_to_struct" "polars-ops/list_to_struct") ("list_eval") ("list" "polars-ops/list") ("is_in" "polars-core/is_in") ("is_first" "polars-core/is_first") ("ipc" "polars-io/ipc") ("interpolate" "polars-core/interpolate") ("future") ("fmt" "polars-core/fmt") ("ewma" "polars-core/ewma") ("dynamic_groupby" "polars-core/dynamic_groupby") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-struct" "polars-core/dtype-struct") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-time/dtype-duration") ("dtype-datetime" "polars-core/dtype-datetime" "polars-time/dtype-datetime") ("dtype-date" "polars-core/dtype-date" "polars-time/dtype-date") ("dtype-categorical" "polars-core/dtype-categorical") ("dot_product" "polars-core/dot_product") ("dot_diagram") ("diff" "polars-core/diff" "polars-ops/diff") ("default" "compile" "private") ("cumulative_eval") ("cum_agg" "polars-core/cum_agg") ("csv-file" "polars-io/csv-file") ("cross_join" "polars-core/cross_join") ("concat_str" "polars-core/concat_str") ("compile") ("chunked_ids") ("bigidx" "polars-arrow/bigidx" "polars-core/bigidx" "polars-utils/bigidx") ("asof_join" "polars-core/asof_join" "polars-time") ("arange") ("abs" "polars-core/abs"))))))

(define-public crate-polars-lazy-0.22.5 (c (n "polars-lazy") (v "0.22.5") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.22.5") (d #t) (k 0)) (d (n "polars-core") (r "^0.22.5") (f (quote ("lazy" "private" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.22.5") (f (quote ("lazy" "csv-file" "private"))) (k 0)) (d (n "polars-ops") (r "^0.22.5") (k 0)) (d (n "polars-time") (r "^0.22.5") (o #t) (d #t) (k 0)) (d (n "polars-utils") (r "^0.22.5") (d #t) (k 0)) (d (n "pyo3") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "02r8k3zd0nicbnfa5f0bxydjmqmibp6qcj7v480n02mzkbnxkj9c") (f (quote (("unique_counts" "polars-core/unique_counts") ("true_div") ("test_all" "panic_on_schema" "private" "rolling_window" "rank" "list" "round_series" "csv-file" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("test" "panic_on_schema" "private" "rolling_window" "rank" "list" "round_series" "csv-file" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("temporal" "polars-core/temporal" "polars-time" "dtype-datetime") ("strings" "polars-core/strings" "polars-ops/strings") ("string_justify" "polars-ops/string_justify") ("row_hash" "polars-core/row_hash") ("round_series" "polars-core/round_series") ("rolling_window" "polars-core/rolling_window" "polars-time/rolling_window") ("repeat_by" "polars-core/repeat_by") ("rank" "polars-core/rank") ("random" "polars-core/random") ("python" "pyo3") ("private" "polars-time/private") ("pct_change" "polars-core/pct_change") ("parquet" "polars-core/parquet" "polars-io/parquet") ("panic_on_schema") ("object" "polars-core/object") ("moment" "polars-core/moment") ("mode" "polars-core/mode") ("log" "polars-ops/log") ("list_to_struct" "polars-ops/list_to_struct") ("list_eval") ("list" "polars-ops/list") ("is_in" "polars-core/is_in") ("is_first" "polars-core/is_first") ("ipc" "polars-io/ipc") ("interpolate" "polars-core/interpolate") ("future") ("fmt" "polars-core/fmt") ("ewma" "polars-core/ewma") ("dynamic_groupby" "polars-core/dynamic_groupby") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-struct" "polars-core/dtype-struct") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-time/dtype-duration") ("dtype-datetime" "polars-core/dtype-datetime" "polars-time/dtype-datetime") ("dtype-date" "polars-core/dtype-date" "polars-time/dtype-date") ("dtype-categorical" "polars-core/dtype-categorical") ("dot_product" "polars-core/dot_product") ("dot_diagram") ("diff" "polars-core/diff" "polars-ops/diff") ("default" "compile" "private") ("cumulative_eval") ("cum_agg" "polars-core/cum_agg") ("csv-file" "polars-io/csv-file") ("cross_join" "polars-core/cross_join") ("concat_str" "polars-core/concat_str") ("compile") ("chunked_ids") ("bigidx" "polars-arrow/bigidx" "polars-core/bigidx" "polars-utils/bigidx") ("asof_join" "polars-core/asof_join" "polars-time") ("arange") ("abs" "polars-core/abs"))))))

(define-public crate-polars-lazy-0.22.6 (c (n "polars-lazy") (v "0.22.6") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.22.6") (d #t) (k 0)) (d (n "polars-core") (r "^0.22.6") (f (quote ("lazy" "private" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.22.6") (f (quote ("lazy" "csv-file" "private"))) (k 0)) (d (n "polars-ops") (r "^0.22.6") (k 0)) (d (n "polars-time") (r "^0.22.6") (o #t) (d #t) (k 0)) (d (n "polars-utils") (r "^0.22.6") (d #t) (k 0)) (d (n "pyo3") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "1r87yandr1chzjfkcnf1fdgwg32vy9fvpik01bnk16syjmnx3b3n") (f (quote (("unique_counts" "polars-core/unique_counts") ("true_div") ("test_all" "panic_on_schema" "private" "rolling_window" "rank" "list" "round_series" "csv-file" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("test" "panic_on_schema" "private" "rolling_window" "rank" "list" "round_series" "csv-file" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("temporal" "polars-core/temporal" "polars-time" "dtype-datetime") ("strings" "polars-core/strings" "polars-ops/strings") ("string_justify" "polars-ops/string_justify") ("row_hash" "polars-core/row_hash") ("round_series" "polars-core/round_series") ("rolling_window" "polars-core/rolling_window" "polars-time/rolling_window") ("repeat_by" "polars-core/repeat_by") ("rank" "polars-core/rank") ("random" "polars-core/random") ("python" "pyo3") ("private" "polars-time/private") ("pct_change" "polars-core/pct_change") ("parquet" "polars-core/parquet" "polars-io/parquet") ("panic_on_schema") ("object" "polars-core/object") ("moment" "polars-core/moment") ("mode" "polars-core/mode") ("log" "polars-ops/log") ("list_to_struct" "polars-ops/list_to_struct") ("list_eval") ("list" "polars-ops/list") ("is_in" "polars-core/is_in") ("is_first" "polars-core/is_first") ("ipc" "polars-io/ipc") ("interpolate" "polars-core/interpolate") ("future") ("fmt" "polars-core/fmt") ("ewma" "polars-core/ewma") ("dynamic_groupby" "polars-core/dynamic_groupby") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-struct" "polars-core/dtype-struct") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-time/dtype-duration") ("dtype-datetime" "polars-core/dtype-datetime" "polars-time/dtype-datetime") ("dtype-date" "polars-core/dtype-date" "polars-time/dtype-date") ("dtype-categorical" "polars-core/dtype-categorical") ("dot_product" "polars-core/dot_product") ("dot_diagram") ("diff" "polars-core/diff" "polars-ops/diff") ("default" "compile" "private") ("cumulative_eval") ("cum_agg" "polars-core/cum_agg") ("csv-file" "polars-io/csv-file") ("cross_join" "polars-core/cross_join") ("concat_str" "polars-core/concat_str") ("compile") ("chunked_ids") ("bigidx" "polars-arrow/bigidx" "polars-core/bigidx" "polars-utils/bigidx") ("asof_join" "polars-core/asof_join" "polars-time") ("arange") ("abs" "polars-core/abs"))))))

(define-public crate-polars-lazy-0.22.7 (c (n "polars-lazy") (v "0.22.7") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.22.7") (d #t) (k 0)) (d (n "polars-core") (r "^0.22.7") (f (quote ("lazy" "private" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.22.7") (f (quote ("lazy" "csv-file" "private"))) (k 0)) (d (n "polars-ops") (r "^0.22.7") (k 0)) (d (n "polars-time") (r "^0.22.7") (o #t) (d #t) (k 0)) (d (n "polars-utils") (r "^0.22.7") (d #t) (k 0)) (d (n "pyo3") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "0ldisvyxwqdyja534qxjllrx23r7fxpwx6q82bzl09g3wx66mn6s") (f (quote (("unique_counts" "polars-core/unique_counts") ("true_div") ("test_all" "panic_on_schema" "private" "rolling_window" "rank" "list" "round_series" "csv-file" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("test" "panic_on_schema" "private" "rolling_window" "rank" "list" "round_series" "csv-file" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("temporal" "polars-core/temporal" "polars-time" "dtype-datetime") ("strings" "polars-core/strings" "polars-ops/strings") ("string_justify" "polars-ops/string_justify") ("row_hash" "polars-core/row_hash") ("round_series" "polars-core/round_series") ("rolling_window" "polars-core/rolling_window" "polars-time/rolling_window") ("repeat_by" "polars-core/repeat_by") ("rank" "polars-core/rank") ("random" "polars-core/random") ("python" "pyo3") ("private" "polars-time/private") ("pct_change" "polars-core/pct_change") ("parquet" "polars-core/parquet" "polars-io/parquet") ("panic_on_schema") ("object" "polars-core/object") ("moment" "polars-core/moment") ("mode" "polars-core/mode") ("log" "polars-ops/log") ("list_to_struct" "polars-ops/list_to_struct") ("list_eval") ("list" "polars-ops/list") ("is_in" "polars-core/is_in") ("is_first" "polars-core/is_first") ("ipc" "polars-io/ipc") ("interpolate" "polars-core/interpolate") ("future") ("fmt" "polars-core/fmt") ("ewma" "polars-core/ewma") ("dynamic_groupby" "polars-core/dynamic_groupby") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-struct" "polars-core/dtype-struct") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-time/dtype-duration") ("dtype-datetime" "polars-core/dtype-datetime" "polars-time/dtype-datetime") ("dtype-date" "polars-core/dtype-date" "polars-time/dtype-date") ("dtype-categorical" "polars-core/dtype-categorical") ("dot_product" "polars-core/dot_product") ("dot_diagram") ("diff" "polars-core/diff" "polars-ops/diff") ("default" "compile" "private") ("cumulative_eval") ("cum_agg" "polars-core/cum_agg") ("csv-file" "polars-io/csv-file") ("cross_join" "polars-core/cross_join") ("concat_str" "polars-core/concat_str") ("compile") ("chunked_ids") ("bigidx" "polars-arrow/bigidx" "polars-core/bigidx" "polars-utils/bigidx") ("asof_join" "polars-core/asof_join" "polars-time") ("arange") ("abs" "polars-core/abs"))))))

(define-public crate-polars-lazy-0.23.0 (c (n "polars-lazy") (v "0.23.0") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.23.0") (d #t) (k 0)) (d (n "polars-core") (r "^0.23.0") (f (quote ("lazy" "private" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.23.0") (f (quote ("lazy" "csv-file" "private"))) (k 0)) (d (n "polars-ops") (r "^0.23.0") (k 0)) (d (n "polars-time") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "polars-utils") (r "^0.23.0") (d #t) (k 0)) (d (n "pyo3") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "035lli8rq4x4cpb082aprih90glq4rik5x7anrkfkqp0m1blnflr") (f (quote (("unique_counts" "polars-core/unique_counts") ("true_div") ("trigonometry") ("test_all" "panic_on_schema" "private" "rolling_window" "rank" "list" "round_series" "csv-file" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("test" "panic_on_schema" "private" "rolling_window" "rank" "list" "round_series" "csv-file" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("temporal" "polars-core/temporal" "polars-time" "dtype-datetime") ("strings" "polars-core/strings" "polars-ops/strings") ("string_justify" "polars-ops/string_justify") ("sign") ("row_hash" "polars-core/row_hash" "polars-ops/hash") ("round_series" "polars-core/round_series") ("rolling_window" "polars-core/rolling_window" "polars-time/rolling_window" "polars-ops/rolling_window") ("repeat_by" "polars-core/repeat_by") ("rank" "polars-core/rank") ("random" "polars-core/random") ("python" "pyo3") ("private" "polars-time/private") ("pct_change" "polars-core/pct_change") ("parquet" "polars-core/parquet" "polars-io/parquet") ("panic_on_schema") ("object" "polars-core/object") ("moment" "polars-core/moment") ("mode" "polars-core/mode") ("log" "polars-ops/log") ("list_to_struct" "polars-ops/list_to_struct") ("list_eval") ("list" "polars-ops/list") ("is_in" "polars-core/is_in") ("is_first" "polars-core/is_first") ("ipc" "polars-io/ipc") ("interpolate" "polars-core/interpolate") ("future") ("fmt" "polars-core/fmt") ("ewma" "polars-core/ewma") ("dynamic_groupby" "polars-core/dynamic_groupby") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-struct" "polars-core/dtype-struct") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-time/dtype-duration") ("dtype-datetime" "polars-core/dtype-datetime" "polars-time/dtype-datetime") ("dtype-date" "polars-core/dtype-date" "polars-time/dtype-date") ("dtype-categorical" "polars-core/dtype-categorical") ("dot_product" "polars-core/dot_product") ("dot_diagram") ("diff" "polars-core/diff" "polars-ops/diff") ("default" "compile" "private") ("date_offset") ("cumulative_eval") ("cum_agg" "polars-core/cum_agg") ("csv-file" "polars-io/csv-file") ("cross_join" "polars-core/cross_join") ("concat_str" "polars-core/concat_str") ("compile") ("chunked_ids") ("bigidx" "polars-arrow/bigidx" "polars-core/bigidx" "polars-utils/bigidx") ("asof_join" "polars-core/asof_join" "polars-time") ("arg_where") ("arange") ("abs" "polars-core/abs"))))))

(define-public crate-polars-lazy-0.23.1 (c (n "polars-lazy") (v "0.23.1") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.23.1") (d #t) (k 0)) (d (n "polars-core") (r "^0.23.1") (f (quote ("lazy" "private" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.23.1") (f (quote ("lazy" "csv-file" "private"))) (k 0)) (d (n "polars-ops") (r "^0.23.1") (k 0)) (d (n "polars-time") (r "^0.23.1") (o #t) (d #t) (k 0)) (d (n "polars-utils") (r "^0.23.1") (d #t) (k 0)) (d (n "pyo3") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "05gbdxhgb8xlww9sdl1084vfxxc12kff03g4qfaswfxwgylhfsnl") (f (quote (("unique_counts" "polars-core/unique_counts") ("true_div") ("trigonometry") ("test_all" "panic_on_schema" "private" "rolling_window" "rank" "list" "round_series" "csv-file" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("test" "panic_on_schema" "private" "rolling_window" "rank" "list" "round_series" "csv-file" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("temporal" "polars-core/temporal" "polars-time" "dtype-datetime") ("strings" "polars-core/strings" "polars-ops/strings") ("string_justify" "polars-ops/string_justify") ("sign") ("row_hash" "polars-core/row_hash" "polars-ops/hash") ("round_series" "polars-core/round_series") ("rolling_window" "polars-core/rolling_window" "polars-time/rolling_window" "polars-ops/rolling_window") ("repeat_by" "polars-core/repeat_by") ("rank" "polars-core/rank") ("random" "polars-core/random") ("python" "pyo3") ("private" "polars-time/private") ("pct_change" "polars-core/pct_change") ("parquet" "polars-core/parquet" "polars-io/parquet") ("panic_on_schema") ("object" "polars-core/object") ("moment" "polars-core/moment") ("mode" "polars-core/mode") ("log" "polars-ops/log") ("list_to_struct" "polars-ops/list_to_struct") ("list_eval") ("list" "polars-ops/list") ("is_in" "polars-core/is_in") ("is_first" "polars-core/is_first") ("ipc" "polars-io/ipc") ("interpolate" "polars-core/interpolate") ("future") ("fmt" "polars-core/fmt") ("ewma" "polars-core/ewma") ("dynamic_groupby" "polars-core/dynamic_groupby") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-struct" "polars-core/dtype-struct") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-time/dtype-duration") ("dtype-datetime" "polars-core/dtype-datetime" "polars-time/dtype-datetime") ("dtype-date" "polars-core/dtype-date" "polars-time/dtype-date") ("dtype-categorical" "polars-core/dtype-categorical") ("dot_product" "polars-core/dot_product") ("dot_diagram") ("diff" "polars-core/diff" "polars-ops/diff") ("default" "compile" "private") ("date_offset") ("cumulative_eval") ("cum_agg" "polars-core/cum_agg") ("csv-file" "polars-io/csv-file") ("cross_join" "polars-core/cross_join") ("concat_str" "polars-core/concat_str") ("compile") ("chunked_ids") ("bigidx" "polars-arrow/bigidx" "polars-core/bigidx" "polars-utils/bigidx") ("asof_join" "polars-core/asof_join" "polars-time") ("arg_where") ("arange") ("abs" "polars-core/abs"))))))

(define-public crate-polars-lazy-0.23.2 (c (n "polars-lazy") (v "0.23.2") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.23.2") (d #t) (k 0)) (d (n "polars-core") (r "^0.23.2") (f (quote ("lazy" "private" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.23.2") (f (quote ("lazy" "csv-file" "private"))) (k 0)) (d (n "polars-ops") (r "^0.23.2") (k 0)) (d (n "polars-time") (r "^0.23.2") (o #t) (d #t) (k 0)) (d (n "polars-utils") (r "^0.23.2") (d #t) (k 0)) (d (n "pyo3") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "0xz9gw48n14n0w9l4yi0d9b3jlva0xpmc6nav20424n8idvsyh0k") (f (quote (("unique_counts" "polars-core/unique_counts") ("true_div") ("trigonometry") ("test_all" "panic_on_schema" "private" "rolling_window" "rank" "list" "round_series" "csv-file" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("test" "panic_on_schema" "private" "rolling_window" "rank" "list" "round_series" "csv-file" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("temporal" "polars-core/temporal" "polars-time" "dtype-datetime") ("strings" "polars-core/strings" "polars-ops/strings") ("string_justify" "polars-ops/string_justify") ("sign") ("row_hash" "polars-core/row_hash" "polars-ops/hash") ("round_series" "polars-core/round_series") ("rolling_window" "polars-core/rolling_window" "polars-time/rolling_window" "polars-ops/rolling_window") ("repeat_by" "polars-core/repeat_by") ("rank" "polars-core/rank") ("random" "polars-core/random") ("python" "pyo3") ("private" "polars-time/private") ("pct_change" "polars-core/pct_change") ("parquet" "polars-core/parquet" "polars-io/parquet") ("panic_on_schema") ("object" "polars-core/object") ("moment" "polars-core/moment") ("mode" "polars-core/mode") ("log" "polars-ops/log") ("list_to_struct" "polars-ops/list_to_struct") ("list_eval") ("list" "polars-ops/list") ("is_in" "polars-core/is_in") ("is_first" "polars-core/is_first") ("ipc" "polars-io/ipc") ("interpolate" "polars-core/interpolate") ("future") ("fmt" "polars-core/fmt") ("ewma" "polars-core/ewma") ("dynamic_groupby" "polars-core/dynamic_groupby") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-struct" "polars-core/dtype-struct") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-time/dtype-duration") ("dtype-datetime" "polars-core/dtype-datetime" "polars-time/dtype-datetime") ("dtype-date" "polars-core/dtype-date" "polars-time/dtype-date") ("dtype-categorical" "polars-core/dtype-categorical") ("dot_product" "polars-core/dot_product") ("dot_diagram") ("diff" "polars-core/diff" "polars-ops/diff") ("default" "compile" "private") ("date_offset") ("cumulative_eval") ("cum_agg" "polars-core/cum_agg") ("csv-file" "polars-io/csv-file") ("cross_join" "polars-core/cross_join") ("concat_str" "polars-core/concat_str") ("compile") ("chunked_ids") ("bigidx" "polars-arrow/bigidx" "polars-core/bigidx" "polars-utils/bigidx") ("asof_join" "polars-core/asof_join" "polars-time") ("arg_where") ("arange") ("abs" "polars-core/abs"))))))

(define-public crate-polars-lazy-0.24.0 (c (n "polars-lazy") (v "0.24.0") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.24.0") (d #t) (k 0)) (d (n "polars-core") (r "^0.24.0") (f (quote ("lazy" "private" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.24.0") (f (quote ("lazy" "csv-file" "private"))) (k 0)) (d (n "polars-ops") (r "^0.24.0") (k 0)) (d (n "polars-time") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "polars-utils") (r "^0.24.0") (d #t) (k 0)) (d (n "pyo3") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "1fa0w0pgvii37gc0g3xg28kdbrpy9idrm6611fih4gslccn21rg7") (f (quote (("unique_counts" "polars-core/unique_counts") ("true_div") ("trigonometry") ("top_k" "polars-ops/top_k") ("test_all" "test" "strings" "regex" "ipc" "row_hash" "string_justify" "search_sorted" "top_k" "pivot" "semi_anti_join" "cse") ("test" "panic_on_schema" "private" "rolling_window" "rank" "list" "round_series" "csv-file" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("temporal" "polars-core/temporal" "polars-time" "dtype-datetime") ("strings" "polars-core/strings" "polars-ops/strings") ("string_justify" "polars-ops/string_justify") ("sign") ("semi_anti_join" "polars-core/semi_anti_join") ("search_sorted" "polars-ops/search_sorted") ("row_hash" "polars-core/row_hash" "polars-ops/hash") ("round_series" "polars-core/round_series") ("rolling_window" "polars-core/rolling_window" "polars-time/rolling_window" "polars-ops/rolling_window") ("repeat_by" "polars-core/repeat_by") ("rank" "polars-core/rank") ("random" "polars-core/random") ("python" "pyo3") ("private" "polars-time/private") ("pivot" "polars-core/rows" "polars-ops/pivot") ("pct_change" "polars-core/pct_change") ("parquet" "polars-core/parquet" "polars-io/parquet") ("panic_on_schema") ("object" "polars-core/object") ("moment" "polars-core/moment") ("mode" "polars-core/mode") ("meta") ("log" "polars-ops/log") ("list_to_struct" "polars-ops/list_to_struct") ("list_eval") ("list" "polars-ops/list") ("json" "polars-io/json") ("is_in" "polars-core/is_in") ("is_first" "polars-core/is_first") ("ipc" "polars-io/ipc") ("interpolate" "polars-core/interpolate") ("future") ("fmt" "polars-core/fmt") ("ewma" "polars-core/ewma") ("dynamic_groupby" "polars-core/dynamic_groupby") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-struct" "polars-core/dtype-struct") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-time/dtype-duration") ("dtype-datetime" "polars-core/dtype-datetime" "polars-time/dtype-datetime") ("dtype-date" "polars-core/dtype-date" "polars-time/dtype-date") ("dtype-categorical" "polars-core/dtype-categorical") ("dot_product" "polars-core/dot_product") ("dot_diagram") ("diff" "polars-core/diff" "polars-ops/diff") ("default" "compile" "private") ("date_offset") ("cumulative_eval") ("cum_agg" "polars-core/cum_agg") ("csv-file" "polars-io/csv-file") ("cse") ("cross_join" "polars-core/cross_join") ("concat_str" "polars-core/concat_str") ("compile") ("chunked_ids") ("bigidx" "polars-arrow/bigidx" "polars-core/bigidx" "polars-utils/bigidx") ("asof_join" "polars-core/asof_join" "polars-time") ("arg_where") ("arange") ("abs" "polars-core/abs"))))))

(define-public crate-polars-lazy-0.24.1 (c (n "polars-lazy") (v "0.24.1") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.24.1") (d #t) (k 0)) (d (n "polars-core") (r "^0.24.1") (f (quote ("lazy" "private" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.24.1") (f (quote ("lazy" "csv-file" "private"))) (k 0)) (d (n "polars-ops") (r "^0.24.1") (k 0)) (d (n "polars-time") (r "^0.24.1") (o #t) (d #t) (k 0)) (d (n "polars-utils") (r "^0.24.1") (d #t) (k 0)) (d (n "pyo3") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "1r7jz6zk98bc0bw1z4z65gszpz8brgjn7brwsg8airi818p70dan") (f (quote (("unique_counts" "polars-core/unique_counts") ("true_div") ("trigonometry") ("top_k" "polars-ops/top_k") ("test_all" "test" "strings" "regex" "ipc" "row_hash" "string_justify" "search_sorted" "top_k" "pivot" "semi_anti_join" "cse") ("test" "panic_on_schema" "private" "rolling_window" "rank" "list" "round_series" "csv-file" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("temporal" "polars-core/temporal" "polars-time" "dtype-datetime") ("strings" "polars-core/strings" "polars-ops/strings") ("string_justify" "polars-ops/string_justify") ("sign") ("semi_anti_join" "polars-core/semi_anti_join") ("search_sorted" "polars-ops/search_sorted") ("row_hash" "polars-core/row_hash" "polars-ops/hash") ("round_series" "polars-core/round_series") ("rolling_window" "polars-core/rolling_window" "polars-time/rolling_window" "polars-ops/rolling_window") ("repeat_by" "polars-core/repeat_by") ("rank" "polars-core/rank") ("random" "polars-core/random") ("python" "pyo3") ("propagate_nans" "polars-ops/propagate_nans") ("private" "polars-time/private") ("pivot" "polars-core/rows" "polars-ops/pivot") ("pct_change" "polars-core/pct_change") ("parquet" "polars-core/parquet" "polars-io/parquet") ("panic_on_schema") ("object" "polars-core/object") ("moment" "polars-core/moment") ("mode" "polars-core/mode") ("meta") ("log" "polars-ops/log") ("list_to_struct" "polars-ops/list_to_struct") ("list_eval") ("list" "polars-ops/list") ("json" "polars-io/json") ("is_in" "polars-core/is_in") ("is_first" "polars-core/is_first") ("ipc" "polars-io/ipc") ("interpolate" "polars-core/interpolate") ("future") ("fmt" "polars-core/fmt") ("ewma" "polars-core/ewma") ("dynamic_groupby" "polars-core/dynamic_groupby") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-struct" "polars-core/dtype-struct") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-time/dtype-duration") ("dtype-datetime" "polars-core/dtype-datetime" "polars-time/dtype-datetime") ("dtype-date" "polars-core/dtype-date" "polars-time/dtype-date") ("dtype-categorical" "polars-core/dtype-categorical") ("dot_product" "polars-core/dot_product") ("dot_diagram") ("diff" "polars-core/diff" "polars-ops/diff") ("default" "compile" "private") ("date_offset") ("cumulative_eval") ("cum_agg" "polars-core/cum_agg") ("csv-file" "polars-io/csv-file") ("cse") ("cross_join" "polars-core/cross_join") ("concat_str" "polars-core/concat_str") ("compile") ("coalesce") ("chunked_ids") ("bigidx" "polars-arrow/bigidx" "polars-core/bigidx" "polars-utils/bigidx") ("asof_join" "polars-core/asof_join" "polars-time") ("arg_where") ("arange") ("abs" "polars-core/abs"))))))

(define-public crate-polars-lazy-0.24.2 (c (n "polars-lazy") (v "0.24.2") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.24.2") (d #t) (k 0)) (d (n "polars-core") (r "^0.24.2") (f (quote ("lazy" "private" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.24.2") (f (quote ("lazy" "csv-file" "private"))) (k 0)) (d (n "polars-ops") (r "^0.24.2") (k 0)) (d (n "polars-time") (r "^0.24.2") (o #t) (d #t) (k 0)) (d (n "polars-utils") (r "^0.24.2") (d #t) (k 0)) (d (n "pyo3") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "1yfi76ck8jbq3qd2wx84pdkkjfqfrvmv7ks8qggsyb51xq4wlnmw") (f (quote (("unique_counts" "polars-core/unique_counts") ("true_div") ("trigonometry") ("top_k" "polars-ops/top_k") ("timezones" "polars-time/timezones" "polars-core/timezones") ("test_all" "test" "strings" "regex" "ipc" "row_hash" "string_justify" "search_sorted" "top_k" "pivot" "semi_anti_join" "cse") ("test" "panic_on_schema" "private" "rolling_window" "rank" "list" "round_series" "csv-file" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("temporal" "polars-core/temporal" "polars-time" "dtype-datetime") ("strings" "polars-core/strings" "polars-ops/strings") ("string_justify" "polars-ops/string_justify") ("sign") ("semi_anti_join" "polars-core/semi_anti_join") ("search_sorted" "polars-ops/search_sorted") ("row_hash" "polars-core/row_hash" "polars-ops/hash") ("round_series" "polars-core/round_series") ("rolling_window" "polars-core/rolling_window" "polars-time/rolling_window" "polars-ops/rolling_window") ("repeat_by" "polars-core/repeat_by") ("rank" "polars-core/rank") ("random" "polars-core/random") ("python" "pyo3") ("propagate_nans" "polars-ops/propagate_nans") ("private" "polars-time/private") ("pivot" "polars-core/rows" "polars-ops/pivot") ("pct_change" "polars-core/pct_change") ("parquet" "polars-core/parquet" "polars-io/parquet") ("panic_on_schema") ("object" "polars-core/object") ("moment" "polars-core/moment") ("mode" "polars-core/mode") ("meta") ("log" "polars-ops/log") ("list_to_struct" "polars-ops/list_to_struct") ("list_eval") ("list" "polars-ops/list") ("json" "polars-io/json") ("is_in" "polars-core/is_in") ("is_first" "polars-core/is_first") ("ipc" "polars-io/ipc") ("interpolate" "polars-core/interpolate") ("future") ("fmt" "polars-core/fmt") ("ewma" "polars-core/ewma") ("dynamic_groupby" "polars-core/dynamic_groupby") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-struct" "polars-core/dtype-struct") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-time/dtype-duration") ("dtype-datetime" "polars-core/dtype-datetime" "polars-time/dtype-datetime") ("dtype-date" "polars-core/dtype-date" "polars-time/dtype-date") ("dtype-categorical" "polars-core/dtype-categorical") ("dot_product" "polars-core/dot_product") ("dot_diagram") ("diff" "polars-core/diff" "polars-ops/diff") ("default" "compile" "private") ("date_offset") ("cumulative_eval") ("cum_agg" "polars-core/cum_agg") ("csv-file" "polars-io/csv-file") ("cse") ("cross_join" "polars-core/cross_join") ("concat_str" "polars-core/concat_str") ("compile") ("coalesce") ("chunked_ids") ("bigidx" "polars-arrow/bigidx" "polars-core/bigidx" "polars-utils/bigidx") ("asof_join" "polars-core/asof_join" "polars-time") ("arg_where") ("arange") ("abs" "polars-core/abs"))))))

(define-public crate-polars-lazy-0.24.3 (c (n "polars-lazy") (v "0.24.3") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.24.3") (d #t) (k 0)) (d (n "polars-core") (r "^0.24.3") (f (quote ("lazy" "private" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.24.3") (f (quote ("lazy" "csv-file" "private"))) (k 0)) (d (n "polars-ops") (r "^0.24.3") (k 0)) (d (n "polars-time") (r "^0.24.3") (o #t) (d #t) (k 0)) (d (n "polars-utils") (r "^0.24.3") (d #t) (k 0)) (d (n "pyo3") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "1232lbcz0c9df2526rihnwab8l8bk3bgkvfran8sxq684izzcvy9") (f (quote (("unique_counts" "polars-core/unique_counts") ("true_div") ("trigonometry") ("top_k" "polars-ops/top_k") ("timezones" "polars-time/timezones" "polars-core/timezones") ("test_all" "test" "strings" "regex" "ipc" "row_hash" "string_justify" "search_sorted" "top_k" "pivot" "semi_anti_join" "cse") ("test" "panic_on_schema" "private" "rolling_window" "rank" "list" "round_series" "csv-file" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("temporal" "polars-core/temporal" "polars-time" "dtype-datetime") ("strings" "polars-core/strings" "polars-ops/strings") ("string_justify" "polars-ops/string_justify") ("sign") ("semi_anti_join" "polars-core/semi_anti_join") ("search_sorted" "polars-ops/search_sorted") ("row_hash" "polars-core/row_hash" "polars-ops/hash") ("round_series" "polars-core/round_series") ("rolling_window" "polars-core/rolling_window" "polars-time/rolling_window" "polars-ops/rolling_window" "polars-time/rolling_window") ("repeat_by" "polars-core/repeat_by") ("rank" "polars-core/rank") ("random" "polars-core/random") ("python" "pyo3") ("propagate_nans" "polars-ops/propagate_nans") ("private" "polars-time/private") ("pivot" "polars-core/rows" "polars-ops/pivot") ("pct_change" "polars-core/pct_change") ("parquet" "polars-core/parquet" "polars-io/parquet") ("panic_on_schema") ("object" "polars-core/object") ("moment" "polars-core/moment") ("mode" "polars-core/mode") ("meta") ("log" "polars-ops/log") ("list_to_struct" "polars-ops/list_to_struct") ("list_eval") ("list" "polars-ops/list") ("json" "polars-io/json") ("is_in" "polars-core/is_in") ("is_first" "polars-core/is_first") ("ipc" "polars-io/ipc") ("interpolate" "polars-core/interpolate") ("future") ("fmt" "polars-core/fmt") ("ewma" "polars-core/ewma") ("dynamic_groupby" "polars-core/dynamic_groupby") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-struct" "polars-core/dtype-struct") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-time/dtype-duration") ("dtype-datetime" "polars-core/dtype-datetime" "polars-time/dtype-datetime") ("dtype-date" "polars-core/dtype-date" "polars-time/dtype-date") ("dtype-categorical" "polars-core/dtype-categorical") ("dot_product" "polars-core/dot_product") ("dot_diagram") ("diff" "polars-core/diff" "polars-ops/diff") ("default" "compile" "private") ("date_offset") ("cumulative_eval") ("cum_agg" "polars-core/cum_agg") ("csv-file" "polars-io/csv-file") ("cse") ("cross_join" "polars-core/cross_join") ("concat_str" "polars-core/concat_str") ("compile") ("coalesce") ("chunked_ids") ("bigidx" "polars-arrow/bigidx" "polars-core/bigidx" "polars-utils/bigidx") ("asof_join" "polars-core/asof_join" "polars-time") ("arg_where") ("arange") ("abs" "polars-core/abs"))))))

(define-public crate-polars-lazy-0.24.4 (c (n "polars-lazy") (v "0.24.4") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.24.4") (d #t) (k 0)) (d (n "polars-core") (r "^0.24.4") (f (quote ("lazy" "private" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.24.4") (f (quote ("lazy" "csv-file" "private"))) (k 0)) (d (n "polars-ops") (r "^0.24.4") (k 0)) (d (n "polars-pipe") (r "^0.24.4") (d #t) (k 0)) (d (n "polars-plan") (r "^0.24.4") (d #t) (k 0)) (d (n "polars-time") (r "^0.24.4") (o #t) (d #t) (k 0)) (d (n "polars-utils") (r "^0.24.4") (d #t) (k 0)) (d (n "pyo3") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)))) (h "165mg6dvv4inkljf740l4rwdpr2wwxyfg1gdl4kim92z6mag68c4") (f (quote (("unique_counts" "polars-plan/unique_counts") ("true_div" "polars-plan/true_div") ("trigonometry" "polars-plan/trigonometry") ("top_k" "polars-plan/top_k") ("timezones" "polars-plan/timezones") ("test_all" "test" "strings" "regex" "ipc" "row_hash" "string_justify" "search_sorted" "top_k" "pivot" "semi_anti_join" "cse") ("test" "panic_on_schema" "private" "rolling_window" "rank" "round_series" "csv-file" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("temporal" "dtype-datetime" "dtype-date" "dtype-time" "dtype-duration" "polars-plan/temporal") ("strings" "polars-plan/strings") ("string_justify" "polars-plan/string_justify") ("sign" "polars-plan/sign") ("serde" "polars-plan/serde") ("semi_anti_join" "polars-plan/semi_anti_join") ("search_sorted" "polars-plan/search_sorted") ("row_hash" "polars-plan/row_hash") ("round_series" "polars-plan/round_series") ("rolling_window" "polars-plan/rolling_window" "polars-time/rolling_window") ("repeat_by" "polars-plan/repeat_by") ("regex" "polars-plan/regex") ("rank" "polars-plan/rank") ("random" "polars-plan/random") ("python" "pyo3" "polars-plan/python") ("propagate_nans" "polars-plan/propagate_nans") ("private" "polars-plan/private") ("pivot" "polars-core/rows" "polars-ops/pivot") ("pct_change" "polars-plan/pct_change") ("parquet" "polars-core/parquet" "polars-io/parquet" "polars-plan/parquet" "polars-pipe/parquet") ("panic_on_schema" "polars-plan/panic_on_schema") ("object" "polars-plan/object") ("nightly" "polars-core/nightly" "polars-pipe/nightly") ("moment" "polars-plan/moment") ("mode" "polars-plan/mode") ("meta" "polars-plan/meta") ("log" "polars-plan/log") ("list_to_struct" "polars-plan/list_to_struct") ("list_eval") ("json" "polars-io/json" "polars-plan/json") ("is_in" "polars-plan/is_in") ("is_first" "polars-plan/is_first") ("ipc" "polars-io/ipc" "polars-plan/ipc") ("interpolate" "polars-plan/interpolate") ("future") ("fmt" "polars-core/fmt" "polars-plan/fmt") ("ewma" "polars-plan/ewma") ("dynamic_groupby" "polars-plan/dynamic_groupby" "polars-time" "temporal") ("dtype-u8" "polars-plan/dtype-u8") ("dtype-u16" "polars-plan/dtype-u16") ("dtype-time" "polars-core/dtype-time" "temporal") ("dtype-struct" "polars-plan/dtype-struct") ("dtype-i8" "polars-plan/dtype-i8") ("dtype-i16" "polars-plan/dtype-i16") ("dtype-duration" "polars-plan/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-datetime" "polars-plan/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-plan/dtype-date" "polars-time/dtype-date" "temporal") ("dtype-categorical" "polars-plan/dtype-categorical") ("dtype-binary" "polars-plan/dtype-binary") ("dot_product" "polars-plan/dot_product") ("dot_diagram" "polars-plan/dot_diagram") ("diff" "polars-plan/diff" "polars-plan/diff") ("default" "compile" "private") ("date_offset" "polars-plan/date_offset") ("cumulative_eval") ("cum_agg" "polars-plan/cum_agg") ("csv-file" "polars-io/csv-file" "polars-plan/csv-file" "polars-pipe/csv-file") ("cse" "polars-plan/cse") ("cross_join" "polars-plan/cross_join") ("concat_str" "polars-plan/concat_str") ("compile" "polars-plan/compile") ("coalesce" "polars-plan/coalesce") ("chunked_ids" "polars-plan/chunked_ids") ("bigidx" "polars-plan/bigidx") ("asof_join" "polars-plan/asof_join" "polars-time") ("arg_where" "polars-plan/arg_where") ("arange" "polars-plan/arange") ("abs" "polars-plan/abs"))))))

(define-public crate-polars-lazy-0.25.0 (c (n "polars-lazy") (v "0.25.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.25.0") (d #t) (k 0)) (d (n "polars-core") (r "^0.25.0") (f (quote ("lazy" "private" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.25.0") (f (quote ("lazy" "csv-file" "private"))) (k 0)) (d (n "polars-ops") (r "^0.25.0") (k 0)) (d (n "polars-pipe") (r "^0.25.0") (d #t) (k 0)) (d (n "polars-plan") (r "^0.25.0") (d #t) (k 0)) (d (n "polars-time") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "polars-utils") (r "^0.25.0") (d #t) (k 0)) (d (n "pyo3") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)))) (h "0nvgr0r09inb8vyaplp8583svyfsj9cprwzg1db5dmhvx88pn3r8") (f (quote (("unique_counts" "polars-plan/unique_counts") ("true_div" "polars-plan/true_div") ("trigonometry" "polars-plan/trigonometry") ("top_k" "polars-plan/top_k") ("timezones" "polars-plan/timezones") ("test_all" "test" "strings" "regex" "ipc" "row_hash" "string_justify" "search_sorted" "top_k" "pivot" "semi_anti_join" "cse") ("test" "panic_on_schema" "private" "rolling_window" "rank" "round_series" "csv-file" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("temporal" "dtype-datetime" "dtype-date" "dtype-time" "dtype-duration" "polars-plan/temporal") ("strings" "polars-plan/strings") ("string_justify" "polars-plan/string_justify") ("sign" "polars-plan/sign") ("serde" "polars-plan/serde") ("semi_anti_join" "polars-plan/semi_anti_join") ("search_sorted" "polars-plan/search_sorted") ("row_hash" "polars-plan/row_hash") ("round_series" "polars-plan/round_series") ("rolling_window" "polars-plan/rolling_window" "polars-time/rolling_window") ("repeat_by" "polars-plan/repeat_by") ("regex" "polars-plan/regex") ("rank" "polars-plan/rank") ("random" "polars-plan/random") ("python" "pyo3" "polars-plan/python") ("propagate_nans" "polars-plan/propagate_nans") ("private" "polars-plan/private") ("pivot" "polars-core/rows" "polars-ops/pivot") ("pct_change" "polars-plan/pct_change") ("parquet" "polars-core/parquet" "polars-io/parquet" "polars-plan/parquet" "polars-pipe/parquet") ("panic_on_schema" "polars-plan/panic_on_schema") ("object" "polars-plan/object") ("nightly" "polars-core/nightly" "polars-pipe/nightly") ("moment" "polars-plan/moment") ("mode" "polars-plan/mode") ("meta" "polars-plan/meta") ("log" "polars-plan/log") ("list_to_struct" "polars-plan/list_to_struct") ("list_eval") ("json" "polars-io/json" "polars-plan/json") ("is_in" "polars-plan/is_in") ("is_first" "polars-plan/is_first") ("ipc" "polars-io/ipc" "polars-plan/ipc") ("interpolate" "polars-plan/interpolate") ("future") ("fmt" "polars-core/fmt" "polars-plan/fmt") ("ewma" "polars-plan/ewma") ("dynamic_groupby" "polars-plan/dynamic_groupby" "polars-time" "temporal") ("dtype-u8" "polars-plan/dtype-u8") ("dtype-u16" "polars-plan/dtype-u16") ("dtype-time" "polars-core/dtype-time" "temporal") ("dtype-struct" "polars-plan/dtype-struct") ("dtype-i8" "polars-plan/dtype-i8") ("dtype-i16" "polars-plan/dtype-i16") ("dtype-duration" "polars-plan/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-datetime" "polars-plan/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-plan/dtype-date" "polars-time/dtype-date" "temporal") ("dtype-categorical" "polars-plan/dtype-categorical") ("dtype-binary" "polars-plan/dtype-binary") ("dot_product" "polars-plan/dot_product") ("dot_diagram" "polars-plan/dot_diagram") ("diff" "polars-plan/diff" "polars-plan/diff") ("default" "compile" "private") ("date_offset" "polars-plan/date_offset") ("cumulative_eval") ("cum_agg" "polars-plan/cum_agg") ("csv-file" "polars-io/csv-file" "polars-plan/csv-file" "polars-pipe/csv-file") ("cse" "polars-plan/cse") ("cross_join" "polars-plan/cross_join") ("concat_str" "polars-plan/concat_str") ("compile" "polars-plan/compile") ("coalesce" "polars-plan/coalesce") ("chunked_ids" "polars-plan/chunked_ids") ("bigidx" "polars-plan/bigidx") ("asof_join" "polars-plan/asof_join" "polars-time") ("arg_where" "polars-plan/arg_where") ("arange" "polars-plan/arange") ("abs" "polars-plan/abs"))))))

(define-public crate-polars-lazy-0.25.1 (c (n "polars-lazy") (v "0.25.1") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.25.1") (d #t) (k 0)) (d (n "polars-core") (r "^0.25.1") (f (quote ("lazy" "private" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.25.1") (f (quote ("lazy" "csv-file" "private"))) (k 0)) (d (n "polars-ops") (r "^0.25.1") (k 0)) (d (n "polars-pipe") (r "^0.25.1") (d #t) (k 0)) (d (n "polars-plan") (r "^0.25.1") (d #t) (k 0)) (d (n "polars-time") (r "^0.25.1") (o #t) (d #t) (k 0)) (d (n "polars-utils") (r "^0.25.1") (d #t) (k 0)) (d (n "pyo3") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)))) (h "0cqay4169ra19incwv2ciyzpx3lhw68c496i5ys0n1dxqxv6ldsm") (f (quote (("unique_counts" "polars-plan/unique_counts") ("true_div" "polars-plan/true_div") ("trigonometry" "polars-plan/trigonometry") ("top_k" "polars-plan/top_k") ("timezones" "polars-plan/timezones") ("test_all" "test" "strings" "regex" "ipc" "row_hash" "string_justify" "search_sorted" "top_k" "pivot" "semi_anti_join" "cse") ("test" "panic_on_schema" "private" "rolling_window" "rank" "round_series" "csv-file" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("temporal" "dtype-datetime" "dtype-date" "dtype-time" "dtype-duration" "polars-plan/temporal") ("strings" "polars-plan/strings") ("string_justify" "polars-plan/string_justify") ("sign" "polars-plan/sign") ("serde" "polars-plan/serde" "polars-arrow/serde" "polars-core/serde-lazy" "polars-time/serde" "polars-io/serde") ("semi_anti_join" "polars-plan/semi_anti_join") ("search_sorted" "polars-plan/search_sorted") ("row_hash" "polars-plan/row_hash") ("round_series" "polars-plan/round_series") ("rolling_window" "polars-plan/rolling_window" "polars-time/rolling_window") ("repeat_by" "polars-plan/repeat_by") ("regex" "polars-plan/regex") ("rank" "polars-plan/rank") ("random" "polars-plan/random") ("python" "pyo3" "polars-plan/python") ("propagate_nans" "polars-plan/propagate_nans") ("private" "polars-plan/private") ("pivot" "polars-core/rows" "polars-ops/pivot") ("pct_change" "polars-plan/pct_change") ("parquet" "polars-core/parquet" "polars-io/parquet" "polars-plan/parquet" "polars-pipe/parquet") ("panic_on_schema" "polars-plan/panic_on_schema") ("object" "polars-plan/object") ("nightly" "polars-core/nightly" "polars-pipe/nightly") ("moment" "polars-plan/moment" "polars-ops/moment") ("mode" "polars-plan/mode") ("meta" "polars-plan/meta") ("log" "polars-plan/log") ("list_to_struct" "polars-plan/list_to_struct") ("list_eval") ("json" "polars-io/json" "polars-plan/json") ("is_in" "polars-plan/is_in") ("is_first" "polars-plan/is_first") ("ipc" "polars-io/ipc" "polars-plan/ipc") ("interpolate" "polars-plan/interpolate") ("future") ("fmt" "polars-core/fmt" "polars-plan/fmt") ("ewma" "polars-plan/ewma") ("dynamic_groupby" "polars-plan/dynamic_groupby" "polars-time" "temporal") ("dtype-u8" "polars-plan/dtype-u8") ("dtype-u16" "polars-plan/dtype-u16") ("dtype-time" "polars-core/dtype-time" "temporal") ("dtype-struct" "polars-plan/dtype-struct") ("dtype-i8" "polars-plan/dtype-i8") ("dtype-i16" "polars-plan/dtype-i16") ("dtype-duration" "polars-plan/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-datetime" "polars-plan/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-plan/dtype-date" "polars-time/dtype-date" "temporal") ("dtype-categorical" "polars-plan/dtype-categorical") ("dtype-binary" "polars-plan/dtype-binary") ("dot_product" "polars-plan/dot_product") ("dot_diagram" "polars-plan/dot_diagram") ("diff" "polars-plan/diff" "polars-plan/diff") ("default" "compile" "private") ("date_offset" "polars-plan/date_offset") ("cumulative_eval") ("cum_agg" "polars-plan/cum_agg") ("csv-file" "polars-io/csv-file" "polars-plan/csv-file" "polars-pipe/csv-file") ("cse" "polars-plan/cse") ("cross_join" "polars-plan/cross_join") ("concat_str" "polars-plan/concat_str") ("compile" "polars-plan/compile") ("coalesce" "polars-plan/coalesce") ("chunked_ids" "polars-plan/chunked_ids") ("bigidx" "polars-plan/bigidx") ("asof_join" "polars-plan/asof_join" "polars-time") ("arg_where" "polars-plan/arg_where") ("arange" "polars-plan/arange") ("abs" "polars-plan/abs"))))))

(define-public crate-polars-lazy-0.26.0 (c (n "polars-lazy") (v "0.26.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.26.0") (d #t) (k 0)) (d (n "polars-core") (r "^0.26.0") (f (quote ("lazy" "private" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.26.0") (f (quote ("lazy" "csv-file" "private"))) (k 0)) (d (n "polars-ops") (r "^0.26.0") (k 0)) (d (n "polars-pipe") (r "^0.26.0") (o #t) (d #t) (k 0)) (d (n "polars-plan") (r "^0.26.0") (d #t) (k 0)) (d (n "polars-time") (r "^0.26.0") (o #t) (d #t) (k 0)) (d (n "polars-utils") (r "^0.26.0") (d #t) (k 0)) (d (n "pyo3") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "1vrl743739ixiqhrq8zrlgzmjhzhllk2iv0pmjz57vcrh9p101yh") (f (quote (("unique_counts" "polars-plan/unique_counts") ("true_div" "polars-plan/true_div") ("trigonometry" "polars-plan/trigonometry") ("top_k" "polars-plan/top_k") ("timezones" "polars-plan/timezones") ("test_all" "test" "strings" "regex" "ipc" "row_hash" "string_justify" "search_sorted" "top_k" "pivot" "semi_anti_join" "cse") ("test" "panic_on_schema" "private" "rolling_window" "rank" "round_series" "csv-file" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("temporal" "dtype-datetime" "dtype-date" "dtype-time" "dtype-duration" "polars-plan/temporal") ("strings" "polars-plan/strings") ("string_justify" "polars-plan/string_justify") ("streaming" "chunked_ids" "polars-pipe/compile" "polars-plan/streaming") ("sign" "polars-plan/sign") ("serde" "polars-plan/serde" "polars-arrow/serde" "polars-core/serde-lazy" "polars-time/serde" "polars-io/serde") ("semi_anti_join" "polars-plan/semi_anti_join") ("search_sorted" "polars-plan/search_sorted") ("row_hash" "polars-plan/row_hash") ("round_series" "polars-plan/round_series") ("rolling_window" "polars-plan/rolling_window" "polars-time/rolling_window") ("repeat_by" "polars-plan/repeat_by") ("regex" "polars-plan/regex") ("rank" "polars-plan/rank") ("random" "polars-plan/random") ("python" "pyo3" "polars-plan/python") ("propagate_nans" "polars-plan/propagate_nans") ("private" "polars-plan/private") ("pivot" "polars-core/rows" "polars-ops/pivot") ("pct_change" "polars-plan/pct_change") ("parquet" "polars-core/parquet" "polars-io/parquet" "polars-plan/parquet" "polars-pipe/parquet") ("panic_on_schema" "polars-plan/panic_on_schema") ("object" "polars-plan/object") ("nightly" "polars-core/nightly" "polars-pipe/nightly") ("moment" "polars-plan/moment" "polars-ops/moment") ("mode" "polars-plan/mode") ("meta" "polars-plan/meta") ("log" "polars-plan/log") ("list_to_struct" "polars-plan/list_to_struct") ("list_eval") ("json" "polars-io/json" "polars-plan/json") ("is_in" "polars-plan/is_in") ("is_first" "polars-plan/is_first") ("ipc" "polars-io/ipc" "polars-plan/ipc") ("interpolate" "polars-plan/interpolate") ("future") ("fmt" "polars-core/fmt" "polars-plan/fmt") ("ewma" "polars-plan/ewma") ("dynamic_groupby" "polars-plan/dynamic_groupby" "polars-time" "temporal") ("dtype-u8" "polars-plan/dtype-u8" "polars-pipe/dtype-u8") ("dtype-u16" "polars-plan/dtype-u16" "polars-pipe/dtype-u16") ("dtype-time" "polars-core/dtype-time" "temporal") ("dtype-struct" "polars-plan/dtype-struct") ("dtype-i8" "polars-plan/dtype-i8" "polars-pipe/dtype-i8") ("dtype-i16" "polars-plan/dtype-i16" "polars-pipe/dtype-i16") ("dtype-duration" "polars-plan/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-datetime" "polars-plan/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-plan/dtype-date" "polars-time/dtype-date" "temporal") ("dtype-categorical" "polars-plan/dtype-categorical" "polars-pipe/dtype-categorical") ("dtype-binary" "polars-plan/dtype-binary") ("dot_product" "polars-plan/dot_product") ("dot_diagram" "polars-plan/dot_diagram") ("diff" "polars-plan/diff" "polars-plan/diff") ("diagonal_concat") ("default" "compile" "private") ("date_offset" "polars-plan/date_offset") ("cumulative_eval") ("cum_agg" "polars-plan/cum_agg") ("csv-file" "polars-io/csv-file" "polars-plan/csv-file" "polars-pipe/csv-file") ("cse" "polars-plan/cse") ("cross_join" "polars-plan/cross_join" "polars-pipe/cross_join") ("concat_str" "polars-plan/concat_str") ("compile" "polars-plan/compile") ("coalesce" "polars-plan/coalesce") ("chunked_ids" "polars-plan/chunked_ids" "polars-core/chunked_ids") ("bigidx" "polars-plan/bigidx") ("asof_join" "polars-plan/asof_join" "polars-time") ("arg_where" "polars-plan/arg_where") ("arange" "polars-plan/arange") ("abs" "polars-plan/abs"))))))

(define-public crate-polars-lazy-0.26.1 (c (n "polars-lazy") (v "0.26.1") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.26.1") (d #t) (k 0)) (d (n "polars-core") (r "^0.26.1") (f (quote ("lazy" "private" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.26.1") (f (quote ("lazy" "csv-file" "private"))) (k 0)) (d (n "polars-ops") (r "^0.26.1") (k 0)) (d (n "polars-pipe") (r "^0.26.1") (o #t) (d #t) (k 0)) (d (n "polars-plan") (r "^0.26.1") (d #t) (k 0)) (d (n "polars-time") (r "^0.26.1") (o #t) (d #t) (k 0)) (d (n "polars-utils") (r "^0.26.1") (d #t) (k 0)) (d (n "pyo3") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "1k37dq2ssndxxff2b7ylxpq8cjcbsvg8nnr0lsff6rw93f35dcvc") (f (quote (("unique_counts" "polars-plan/unique_counts") ("true_div" "polars-plan/true_div") ("trigonometry" "polars-plan/trigonometry") ("top_k" "polars-plan/top_k") ("timezones" "polars-plan/timezones") ("test_all" "test" "strings" "regex" "ipc" "row_hash" "string_justify" "search_sorted" "top_k" "pivot" "semi_anti_join" "cse") ("test" "panic_on_schema" "private" "rolling_window" "rank" "round_series" "csv-file" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("temporal" "dtype-datetime" "dtype-date" "dtype-time" "dtype-duration" "polars-plan/temporal") ("strings" "polars-plan/strings") ("string_justify" "polars-plan/string_justify") ("streaming" "chunked_ids" "polars-pipe/compile" "polars-plan/streaming") ("sign" "polars-plan/sign") ("serde" "polars-plan/serde" "polars-arrow/serde" "polars-core/serde-lazy" "polars-time/serde" "polars-io/serde" "polars-ops/serde") ("semi_anti_join" "polars-plan/semi_anti_join") ("search_sorted" "polars-plan/search_sorted") ("row_hash" "polars-plan/row_hash") ("round_series" "polars-plan/round_series") ("rolling_window" "polars-plan/rolling_window" "polars-time/rolling_window") ("repeat_by" "polars-plan/repeat_by") ("regex" "polars-plan/regex") ("rank" "polars-plan/rank") ("random" "polars-plan/random") ("python" "pyo3" "polars-plan/python") ("propagate_nans" "polars-plan/propagate_nans") ("private" "polars-plan/private") ("pivot" "polars-core/rows" "polars-ops/pivot") ("pct_change" "polars-plan/pct_change") ("parquet" "polars-core/parquet" "polars-io/parquet" "polars-plan/parquet" "polars-pipe/parquet") ("panic_on_schema" "polars-plan/panic_on_schema") ("object" "polars-plan/object") ("nightly" "polars-core/nightly" "polars-pipe/nightly") ("moment" "polars-plan/moment" "polars-ops/moment") ("mode" "polars-plan/mode") ("meta" "polars-plan/meta") ("log" "polars-plan/log") ("list_to_struct" "polars-plan/list_to_struct") ("list_eval") ("json" "polars-io/json" "polars-plan/json") ("is_in" "polars-plan/is_in") ("is_first" "polars-plan/is_first") ("ipc" "polars-io/ipc" "polars-plan/ipc") ("interpolate" "polars-plan/interpolate") ("future") ("fmt" "polars-core/fmt" "polars-plan/fmt") ("ewma" "polars-plan/ewma") ("dynamic_groupby" "polars-plan/dynamic_groupby" "polars-time" "temporal") ("dtype-u8" "polars-plan/dtype-u8" "polars-pipe/dtype-u8") ("dtype-u16" "polars-plan/dtype-u16" "polars-pipe/dtype-u16") ("dtype-time" "polars-core/dtype-time" "temporal") ("dtype-struct" "polars-plan/dtype-struct") ("dtype-i8" "polars-plan/dtype-i8" "polars-pipe/dtype-i8") ("dtype-i16" "polars-plan/dtype-i16" "polars-pipe/dtype-i16") ("dtype-duration" "polars-plan/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-datetime" "polars-plan/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-plan/dtype-date" "polars-time/dtype-date" "temporal") ("dtype-categorical" "polars-plan/dtype-categorical" "polars-pipe/dtype-categorical") ("dtype-binary" "polars-plan/dtype-binary") ("dot_product" "polars-plan/dot_product") ("dot_diagram" "polars-plan/dot_diagram") ("diff" "polars-plan/diff" "polars-plan/diff") ("diagonal_concat") ("default" "compile" "private") ("date_offset" "polars-plan/date_offset") ("cumulative_eval") ("cum_agg" "polars-plan/cum_agg") ("csv-file" "polars-io/csv-file" "polars-plan/csv-file" "polars-pipe/csv-file") ("cse" "polars-plan/cse") ("cross_join" "polars-plan/cross_join" "polars-pipe/cross_join") ("concat_str" "polars-plan/concat_str") ("compile" "polars-plan/compile") ("coalesce" "polars-plan/coalesce") ("chunked_ids" "polars-plan/chunked_ids" "polars-core/chunked_ids") ("bigidx" "polars-plan/bigidx") ("asof_join" "polars-plan/asof_join" "polars-time") ("arg_where" "polars-plan/arg_where") ("arange" "polars-plan/arange") ("abs" "polars-plan/abs"))))))

(define-public crate-polars-lazy-0.27.1 (c (n "polars-lazy") (v "0.27.1") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.27.1") (d #t) (k 0)) (d (n "polars-core") (r "^0.27.1") (f (quote ("lazy" "private" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.27.1") (f (quote ("lazy" "csv-file" "private"))) (k 0)) (d (n "polars-ops") (r "^0.27.1") (k 0)) (d (n "polars-pipe") (r "^0.27.1") (o #t) (d #t) (k 0)) (d (n "polars-plan") (r "^0.27.1") (d #t) (k 0)) (d (n "polars-time") (r "^0.27.1") (o #t) (d #t) (k 0)) (d (n "polars-utils") (r "^0.27.1") (d #t) (k 0)) (d (n "pyo3") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "0iqvan7az94c00aflzwbqckm9axa04bd2qfficmxbw17qyd4mpfr") (f (quote (("unique_counts" "polars-plan/unique_counts") ("true_div" "polars-plan/true_div") ("trigonometry" "polars-plan/trigonometry") ("top_k" "polars-plan/top_k") ("timezones" "polars-plan/timezones") ("test_all" "test" "strings" "regex" "ipc" "row_hash" "string_justify" "string_from_radix" "search_sorted" "top_k" "pivot" "semi_anti_join" "cse") ("test" "polars-plan/debugging" "panic_on_schema" "private" "rolling_window" "rank" "round_series" "csv-file" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("temporal" "dtype-datetime" "dtype-date" "dtype-time" "dtype-duration" "polars-plan/temporal") ("strings" "polars-plan/strings") ("string_justify" "polars-plan/string_justify") ("string_from_radix" "polars-plan/string_from_radix") ("streaming" "chunked_ids" "polars-pipe/compile" "polars-plan/streaming") ("sign" "polars-plan/sign") ("serde" "polars-plan/serde" "polars-arrow/serde" "polars-core/serde-lazy" "polars-time/serde" "polars-io/serde" "polars-ops/serde") ("semi_anti_join" "polars-plan/semi_anti_join") ("search_sorted" "polars-plan/search_sorted") ("row_hash" "polars-plan/row_hash") ("round_series" "polars-plan/round_series" "polars-ops/round_series") ("rolling_window" "polars-plan/rolling_window" "polars-time/rolling_window") ("repeat_by" "polars-plan/repeat_by") ("regex" "polars-plan/regex") ("rank" "polars-plan/rank") ("random" "polars-plan/random") ("python" "pyo3" "polars-plan/python") ("propagate_nans" "polars-plan/propagate_nans") ("private" "polars-plan/private") ("pivot" "polars-core/rows" "polars-ops/pivot") ("pct_change" "polars-plan/pct_change") ("parquet" "polars-core/parquet" "polars-io/parquet" "polars-plan/parquet" "polars-pipe/parquet") ("panic_on_schema" "polars-plan/panic_on_schema") ("object" "polars-plan/object") ("nightly" "polars-core/nightly" "polars-pipe/nightly") ("moment" "polars-plan/moment" "polars-ops/moment") ("mode" "polars-plan/mode") ("meta" "polars-plan/meta") ("merge_sorted" "polars-plan/merge_sorted") ("log" "polars-plan/log") ("list_to_struct" "polars-plan/list_to_struct") ("list_take" "polars-ops/list_take" "polars-plan/list_take") ("list_eval") ("json" "polars-io/json" "polars-plan/json") ("is_in" "polars-plan/is_in") ("is_first" "polars-plan/is_first") ("ipc" "polars-io/ipc" "polars-plan/ipc" "polars-pipe/ipc") ("interpolate" "polars-plan/interpolate") ("future") ("fmt" "polars-core/fmt" "polars-plan/fmt") ("ewma" "polars-plan/ewma") ("dynamic_groupby" "polars-plan/dynamic_groupby" "polars-time" "temporal") ("dtype-u8" "polars-plan/dtype-u8" "polars-pipe/dtype-u8") ("dtype-u16" "polars-plan/dtype-u16" "polars-pipe/dtype-u16") ("dtype-time" "polars-core/dtype-time" "temporal") ("dtype-struct" "polars-plan/dtype-struct") ("dtype-i8" "polars-plan/dtype-i8" "polars-pipe/dtype-i8") ("dtype-i16" "polars-plan/dtype-i16" "polars-pipe/dtype-i16") ("dtype-i128" "polars-plan/dtype-i128" "polars-pipe/dtype-i128") ("dtype-duration" "polars-plan/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-datetime" "polars-plan/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-plan/dtype-date" "polars-time/dtype-date" "temporal") ("dtype-categorical" "polars-plan/dtype-categorical" "polars-pipe/dtype-categorical") ("dtype-binary" "polars-plan/dtype-binary") ("dot_product" "polars-plan/dot_product") ("dot_diagram" "polars-plan/dot_diagram") ("diff" "polars-plan/diff" "polars-plan/diff") ("diagonal_concat") ("default" "compile" "private") ("date_offset" "polars-plan/date_offset") ("cumulative_eval") ("cum_agg" "polars-plan/cum_agg") ("csv-file" "polars-io/csv-file" "polars-plan/csv-file" "polars-pipe/csv-file") ("cse" "polars-plan/cse") ("cross_join" "polars-plan/cross_join" "polars-pipe/cross_join") ("concat_str" "polars-plan/concat_str") ("compile" "polars-plan/compile") ("coalesce" "polars-plan/coalesce") ("chunked_ids" "polars-plan/chunked_ids" "polars-core/chunked_ids") ("bigidx" "polars-plan/bigidx") ("async" "polars-plan/async" "polars-io/async" "polars-pipe/async" "streaming") ("asof_join" "polars-plan/asof_join" "polars-time") ("arg_where" "polars-plan/arg_where") ("arange" "polars-plan/arange") ("abs" "polars-plan/abs"))))))

(define-public crate-polars-lazy-0.27.2 (c (n "polars-lazy") (v "0.27.2") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.27.2") (d #t) (k 0)) (d (n "polars-core") (r "^0.27.2") (f (quote ("lazy" "private" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.27.2") (f (quote ("lazy" "csv-file" "private"))) (k 0)) (d (n "polars-ops") (r "^0.27.2") (k 0)) (d (n "polars-pipe") (r "^0.27.2") (o #t) (d #t) (k 0)) (d (n "polars-plan") (r "^0.27.2") (d #t) (k 0)) (d (n "polars-time") (r "^0.27.2") (o #t) (d #t) (k 0)) (d (n "polars-utils") (r "^0.27.2") (d #t) (k 0)) (d (n "pyo3") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "1rkv1r8jxykj9g15dzf7pmpxaqawwp974ccdfiif8ns82ywgq9yj") (f (quote (("unique_counts" "polars-plan/unique_counts") ("true_div" "polars-plan/true_div") ("trigonometry" "polars-plan/trigonometry") ("top_k" "polars-plan/top_k") ("timezones" "polars-plan/timezones") ("test_all" "test" "strings" "regex" "ipc" "row_hash" "string_justify" "string_from_radix" "search_sorted" "top_k" "pivot" "semi_anti_join" "cse") ("test" "polars-plan/debugging" "panic_on_schema" "private" "rolling_window" "rank" "round_series" "csv-file" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("temporal" "dtype-datetime" "dtype-date" "dtype-time" "dtype-duration" "polars-plan/temporal") ("strings" "polars-plan/strings") ("string_justify" "polars-plan/string_justify") ("string_from_radix" "polars-plan/string_from_radix") ("streaming" "chunked_ids" "polars-pipe/compile" "polars-plan/streaming") ("sign" "polars-plan/sign") ("serde" "polars-plan/serde" "polars-arrow/serde" "polars-core/serde-lazy" "polars-time/serde" "polars-io/serde" "polars-ops/serde") ("semi_anti_join" "polars-plan/semi_anti_join") ("search_sorted" "polars-plan/search_sorted") ("row_hash" "polars-plan/row_hash") ("round_series" "polars-plan/round_series" "polars-ops/round_series") ("rolling_window" "polars-plan/rolling_window" "polars-time/rolling_window") ("repeat_by" "polars-plan/repeat_by") ("regex" "polars-plan/regex") ("rank" "polars-plan/rank") ("random" "polars-plan/random") ("python" "pyo3" "polars-plan/python") ("propagate_nans" "polars-plan/propagate_nans") ("private" "polars-plan/private") ("pivot" "polars-core/rows" "polars-ops/pivot") ("pct_change" "polars-plan/pct_change") ("parquet" "polars-core/parquet" "polars-io/parquet" "polars-plan/parquet" "polars-pipe/parquet") ("panic_on_schema" "polars-plan/panic_on_schema") ("object" "polars-plan/object") ("nightly" "polars-core/nightly" "polars-pipe/nightly") ("moment" "polars-plan/moment" "polars-ops/moment") ("mode" "polars-plan/mode") ("meta" "polars-plan/meta") ("merge_sorted" "polars-plan/merge_sorted") ("log" "polars-plan/log") ("list_to_struct" "polars-plan/list_to_struct") ("list_take" "polars-ops/list_take" "polars-plan/list_take") ("list_eval") ("json" "polars-io/json" "polars-plan/json") ("is_in" "polars-plan/is_in") ("is_first" "polars-plan/is_first") ("ipc" "polars-io/ipc" "polars-plan/ipc" "polars-pipe/ipc") ("interpolate" "polars-plan/interpolate") ("future") ("fmt" "polars-core/fmt" "polars-plan/fmt") ("ewma" "polars-plan/ewma") ("dynamic_groupby" "polars-plan/dynamic_groupby" "polars-time" "temporal") ("dtype-u8" "polars-plan/dtype-u8" "polars-pipe/dtype-u8") ("dtype-u16" "polars-plan/dtype-u16" "polars-pipe/dtype-u16") ("dtype-time" "polars-core/dtype-time" "temporal") ("dtype-struct" "polars-plan/dtype-struct") ("dtype-i8" "polars-plan/dtype-i8" "polars-pipe/dtype-i8") ("dtype-i16" "polars-plan/dtype-i16" "polars-pipe/dtype-i16") ("dtype-i128" "polars-plan/dtype-i128" "polars-pipe/dtype-i128") ("dtype-duration" "polars-plan/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-datetime" "polars-plan/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-plan/dtype-date" "polars-time/dtype-date" "temporal") ("dtype-categorical" "polars-plan/dtype-categorical" "polars-pipe/dtype-categorical") ("dtype-binary" "polars-plan/dtype-binary") ("dot_product" "polars-plan/dot_product") ("dot_diagram" "polars-plan/dot_diagram") ("diff" "polars-plan/diff" "polars-plan/diff") ("diagonal_concat") ("default" "compile" "private") ("date_offset" "polars-plan/date_offset") ("cumulative_eval") ("cum_agg" "polars-plan/cum_agg") ("csv-file" "polars-io/csv-file" "polars-plan/csv-file" "polars-pipe/csv-file") ("cse" "polars-plan/cse") ("cross_join" "polars-plan/cross_join" "polars-pipe/cross_join") ("concat_str" "polars-plan/concat_str") ("compile" "polars-plan/compile") ("coalesce" "polars-plan/coalesce") ("chunked_ids" "polars-plan/chunked_ids" "polars-core/chunked_ids") ("bigidx" "polars-plan/bigidx") ("async" "polars-plan/async" "polars-io/async" "polars-pipe/async" "streaming") ("asof_join" "polars-plan/asof_join" "polars-time") ("arg_where" "polars-plan/arg_where") ("arange" "polars-plan/arange") ("abs" "polars-plan/abs"))))))

(define-public crate-polars-lazy-0.28.0 (c (n "polars-lazy") (v "0.28.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.28.0") (d #t) (k 0)) (d (n "polars-core") (r "^0.28.0") (f (quote ("lazy" "private" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.28.0") (f (quote ("lazy" "csv-file" "private"))) (k 0)) (d (n "polars-ops") (r "^0.28.0") (k 0)) (d (n "polars-pipe") (r "^0.28.0") (o #t) (d #t) (k 0)) (d (n "polars-plan") (r "^0.28.0") (d #t) (k 0)) (d (n "polars-time") (r "^0.28.0") (o #t) (d #t) (k 0)) (d (n "polars-utils") (r "^0.28.0") (d #t) (k 0)) (d (n "pyo3") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smartstring") (r "^1") (d #t) (k 0)))) (h "0bvhagk2rs3xy61f7554dfssh8haisdpdydfwvxwiwg41bminnrq") (f (quote (("unique_counts" "polars-plan/unique_counts") ("true_div" "polars-plan/true_div") ("trigonometry" "polars-plan/trigonometry") ("top_k" "polars-plan/top_k") ("timezones" "polars-plan/timezones") ("test_all" "test" "strings" "regex" "ipc" "row_hash" "string_justify" "string_from_radix" "search_sorted" "top_k" "pivot" "semi_anti_join" "cse") ("test" "polars-plan/debugging" "panic_on_schema" "private" "rolling_window" "rank" "round_series" "csv-file" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("temporal" "dtype-datetime" "dtype-date" "dtype-time" "dtype-duration" "polars-plan/temporal") ("strings" "polars-plan/strings") ("string_justify" "polars-plan/string_justify") ("string_from_radix" "polars-plan/string_from_radix") ("streaming" "chunked_ids" "polars-pipe/compile" "polars-plan/streaming") ("sign" "polars-plan/sign") ("serde" "polars-plan/serde" "polars-arrow/serde" "polars-core/serde-lazy" "polars-time/serde" "polars-io/serde" "polars-ops/serde") ("semi_anti_join" "polars-plan/semi_anti_join") ("search_sorted" "polars-plan/search_sorted") ("row_hash" "polars-plan/row_hash") ("round_series" "polars-plan/round_series" "polars-ops/round_series") ("rolling_window" "polars-plan/rolling_window" "polars-time/rolling_window") ("repeat_by" "polars-plan/repeat_by") ("regex" "polars-plan/regex") ("rank" "polars-plan/rank") ("random" "polars-plan/random") ("python" "pyo3" "polars-plan/python") ("propagate_nans" "polars-plan/propagate_nans") ("private" "polars-plan/private") ("pivot" "polars-core/rows" "polars-ops/pivot") ("pct_change" "polars-plan/pct_change") ("parquet" "polars-core/parquet" "polars-io/parquet" "polars-plan/parquet" "polars-pipe/parquet") ("panic_on_schema" "polars-plan/panic_on_schema") ("object" "polars-plan/object") ("nightly" "polars-core/nightly" "polars-pipe/nightly") ("moment" "polars-plan/moment" "polars-ops/moment") ("mode" "polars-plan/mode") ("meta" "polars-plan/meta") ("merge_sorted" "polars-plan/merge_sorted") ("log" "polars-plan/log") ("list_to_struct" "polars-plan/list_to_struct") ("list_take" "polars-ops/list_take" "polars-plan/list_take") ("list_eval") ("list_count" "polars-ops/list_count" "polars-plan/list_count") ("json" "polars-io/json" "polars-plan/json") ("is_unique" "polars-plan/is_unique") ("is_in" "polars-plan/is_in") ("is_first" "polars-plan/is_first") ("ipc" "polars-io/ipc" "polars-plan/ipc" "polars-pipe/ipc") ("interpolate" "polars-plan/interpolate") ("future") ("fmt" "polars-core/fmt" "polars-plan/fmt") ("ewma" "polars-plan/ewma") ("dynamic_groupby" "polars-plan/dynamic_groupby" "polars-time" "temporal") ("dtype-u8" "polars-plan/dtype-u8" "polars-pipe/dtype-u8") ("dtype-u16" "polars-plan/dtype-u16" "polars-pipe/dtype-u16") ("dtype-time" "polars-core/dtype-time" "temporal") ("dtype-struct" "polars-plan/dtype-struct") ("dtype-i8" "polars-plan/dtype-i8" "polars-pipe/dtype-i8") ("dtype-i16" "polars-plan/dtype-i16" "polars-pipe/dtype-i16") ("dtype-duration" "polars-plan/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-decimal" "polars-plan/dtype-decimal" "polars-pipe/dtype-decimal") ("dtype-datetime" "polars-plan/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-plan/dtype-date" "polars-time/dtype-date" "temporal") ("dtype-categorical" "polars-plan/dtype-categorical" "polars-pipe/dtype-categorical") ("dot_product" "polars-plan/dot_product") ("dot_diagram" "polars-plan/dot_diagram") ("diff" "polars-plan/diff" "polars-plan/diff") ("diagonal_concat") ("default" "compile" "private") ("date_offset" "polars-plan/date_offset") ("cumulative_eval") ("cum_agg" "polars-plan/cum_agg") ("csv-file" "polars-io/csv-file" "polars-plan/csv-file" "polars-pipe/csv-file") ("cse" "polars-plan/cse") ("cross_join" "polars-plan/cross_join" "polars-pipe/cross_join") ("concat_str" "polars-plan/concat_str") ("compile" "polars-plan/compile") ("coalesce" "polars-plan/coalesce") ("chunked_ids" "polars-plan/chunked_ids" "polars-core/chunked_ids") ("binary_encoding" "polars-plan/binary_encoding") ("bigidx" "polars-plan/bigidx") ("async" "polars-plan/async" "polars-io/cloud" "polars-pipe/async" "streaming") ("asof_join" "polars-plan/asof_join" "polars-time") ("arg_where" "polars-plan/arg_where") ("arange" "polars-plan/arange") ("abs" "polars-plan/abs"))))))

(define-public crate-polars-lazy-0.29.0 (c (n "polars-lazy") (v "0.29.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.29.0") (d #t) (k 0)) (d (n "polars-core") (r "^0.29.0") (f (quote ("lazy" "private" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.29.0") (f (quote ("lazy" "csv" "private"))) (k 0)) (d (n "polars-ops") (r "^0.29.0") (k 0)) (d (n "polars-pipe") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "polars-plan") (r "^0.29.0") (d #t) (k 0)) (d (n "polars-time") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "polars-utils") (r "^0.29.0") (d #t) (k 0)) (d (n "pyo3") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smartstring") (r "^1") (d #t) (k 0)))) (h "03jl9sf6v9zs9c49d5fiv3n15kazy3vsz2vv5pvl1bg908sgq7z0") (f (quote (("unique_counts" "polars-plan/unique_counts") ("true_div" "polars-plan/true_div") ("trigonometry" "polars-plan/trigonometry") ("top_k" "polars-plan/top_k") ("timezones" "polars-plan/timezones") ("test_all" "test" "strings" "regex" "ipc" "row_hash" "string_justify" "string_from_radix" "search_sorted" "top_k" "pivot" "semi_anti_join" "cse") ("test" "polars-plan/debugging" "panic_on_schema" "private" "rolling_window" "rank" "round_series" "csv" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("temporal" "dtype-datetime" "dtype-date" "dtype-time" "dtype-duration" "polars-plan/temporal") ("strings" "polars-plan/strings") ("string_justify" "polars-plan/string_justify") ("string_from_radix" "polars-plan/string_from_radix") ("streaming" "chunked_ids" "polars-pipe/compile" "polars-plan/streaming") ("sign" "polars-plan/sign") ("serde" "polars-plan/serde" "polars-arrow/serde" "polars-core/serde-lazy" "polars-time/serde" "polars-io/serde" "polars-ops/serde") ("semi_anti_join" "polars-plan/semi_anti_join") ("search_sorted" "polars-plan/search_sorted") ("row_hash" "polars-plan/row_hash") ("round_series" "polars-plan/round_series" "polars-ops/round_series") ("rolling_window" "polars-plan/rolling_window" "polars-time/rolling_window") ("repeat_by" "polars-plan/repeat_by") ("regex" "polars-plan/regex") ("rank" "polars-plan/rank") ("random" "polars-plan/random") ("python" "pyo3" "polars-plan/python") ("propagate_nans" "polars-plan/propagate_nans") ("private" "polars-plan/private") ("pivot" "polars-core/rows" "polars-ops/pivot") ("pct_change" "polars-plan/pct_change") ("parquet" "polars-core/parquet" "polars-io/parquet" "polars-plan/parquet" "polars-pipe/parquet") ("panic_on_schema" "polars-plan/panic_on_schema") ("object" "polars-plan/object") ("nightly" "polars-core/nightly" "polars-pipe/nightly") ("moment" "polars-plan/moment" "polars-ops/moment") ("mode" "polars-plan/mode") ("meta" "polars-plan/meta") ("merge_sorted" "polars-plan/merge_sorted") ("log" "polars-plan/log") ("list_to_struct" "polars-plan/list_to_struct") ("list_take" "polars-ops/list_take" "polars-plan/list_take") ("list_eval") ("list_count" "polars-ops/list_count" "polars-plan/list_count") ("json" "polars-io/json" "polars-plan/json") ("is_unique" "polars-plan/is_unique") ("is_in" "polars-plan/is_in") ("is_first" "polars-plan/is_first") ("ipc" "polars-io/ipc" "polars-plan/ipc" "polars-pipe/ipc") ("interpolate" "polars-plan/interpolate") ("future") ("fused" "polars-plan/fused" "polars-ops/fused") ("fmt" "polars-core/fmt" "polars-plan/fmt") ("ewma" "polars-plan/ewma") ("dynamic_groupby" "polars-plan/dynamic_groupby" "polars-time" "temporal") ("dtype-u8" "polars-plan/dtype-u8" "polars-pipe/dtype-u8") ("dtype-u16" "polars-plan/dtype-u16" "polars-pipe/dtype-u16") ("dtype-time" "polars-core/dtype-time" "temporal") ("dtype-struct" "polars-plan/dtype-struct") ("dtype-i8" "polars-plan/dtype-i8" "polars-pipe/dtype-i8") ("dtype-i16" "polars-plan/dtype-i16" "polars-pipe/dtype-i16") ("dtype-duration" "polars-plan/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-decimal" "polars-plan/dtype-decimal" "polars-pipe/dtype-decimal") ("dtype-datetime" "polars-plan/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-plan/dtype-date" "polars-time/dtype-date" "temporal") ("dtype-categorical" "polars-plan/dtype-categorical" "polars-pipe/dtype-categorical") ("dot_diagram" "polars-plan/dot_diagram") ("diff" "polars-plan/diff" "polars-plan/diff") ("diagonal_concat") ("default" "compile" "private") ("date_offset" "polars-plan/date_offset") ("cumulative_eval") ("cum_agg" "polars-plan/cum_agg") ("csv" "polars-io/csv" "polars-plan/csv" "polars-pipe/csv") ("cse" "polars-plan/cse") ("cross_join" "polars-plan/cross_join" "polars-pipe/cross_join" "polars-ops/cross_join") ("concat_str" "polars-plan/concat_str") ("compile" "polars-plan/compile") ("coalesce" "polars-plan/coalesce") ("chunked_ids" "polars-plan/chunked_ids" "polars-core/chunked_ids") ("binary_encoding" "polars-plan/binary_encoding") ("bigidx" "polars-plan/bigidx") ("async" "polars-plan/async" "polars-io/cloud" "polars-pipe/async" "streaming") ("asof_join" "polars-plan/asof_join" "polars-time") ("arg_where" "polars-plan/arg_where") ("arange" "polars-plan/arange") ("approx_unique" "polars-plan/approx_unique") ("abs" "polars-plan/abs"))))))

(define-public crate-polars-lazy-0.30.0 (c (n "polars-lazy") (v "0.30.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.30.0") (d #t) (k 0)) (d (n "polars-core") (r "^0.30.0") (f (quote ("lazy" "private" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.30.0") (f (quote ("lazy" "csv" "private"))) (k 0)) (d (n "polars-json") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "polars-ops") (r "^0.30.0") (k 0)) (d (n "polars-pipe") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "polars-plan") (r "^0.30.0") (d #t) (k 0)) (d (n "polars-time") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "polars-utils") (r "^0.30.0") (d #t) (k 0)) (d (n "pyo3") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smartstring") (r "^1") (d #t) (k 0)))) (h "1qq78kdqy2ihrv90jylmf5fgf4fwvl69vwcq40hvb5il4r0zxa7j") (f (quote (("unique_counts" "polars-plan/unique_counts") ("true_div" "polars-plan/true_div") ("trigonometry" "polars-plan/trigonometry") ("top_k" "polars-plan/top_k") ("timezones" "polars-plan/timezones") ("test_all" "test" "strings" "regex" "ipc" "row_hash" "string_justify" "string_from_radix" "search_sorted" "top_k" "pivot" "semi_anti_join" "cse") ("test" "polars-plan/debugging" "panic_on_schema" "private" "rolling_window" "rank" "round_series" "csv" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("temporal" "dtype-datetime" "dtype-date" "dtype-time" "dtype-duration" "polars-plan/temporal") ("strings" "polars-plan/strings") ("string_justify" "polars-plan/string_justify") ("string_from_radix" "polars-plan/string_from_radix") ("streaming" "chunked_ids" "polars-pipe/compile" "polars-plan/streaming") ("sign" "polars-plan/sign") ("serde" "polars-plan/serde" "polars-arrow/serde" "polars-core/serde-lazy" "polars-time/serde" "polars-io/serde" "polars-ops/serde") ("semi_anti_join" "polars-plan/semi_anti_join") ("search_sorted" "polars-plan/search_sorted") ("row_hash" "polars-plan/row_hash") ("round_series" "polars-plan/round_series" "polars-ops/round_series") ("rolling_window" "polars-plan/rolling_window" "polars-time/rolling_window") ("repeat_by" "polars-plan/repeat_by") ("regex" "polars-plan/regex") ("rank" "polars-plan/rank") ("random" "polars-plan/random") ("python" "pyo3" "polars-plan/python") ("propagate_nans" "polars-plan/propagate_nans") ("private" "polars-plan/private") ("pivot" "polars-core/rows" "polars-ops/pivot") ("pct_change" "polars-plan/pct_change") ("parquet" "polars-core/parquet" "polars-io/parquet" "polars-plan/parquet" "polars-pipe/parquet") ("panic_on_schema" "polars-plan/panic_on_schema") ("object" "polars-plan/object") ("nightly" "polars-core/nightly" "polars-pipe/nightly") ("moment" "polars-plan/moment" "polars-ops/moment") ("mode" "polars-plan/mode") ("meta" "polars-plan/meta") ("merge_sorted" "polars-plan/merge_sorted") ("log" "polars-plan/log") ("list_to_struct" "polars-plan/list_to_struct") ("list_take" "polars-ops/list_take" "polars-plan/list_take") ("list_eval") ("list_count" "polars-ops/list_count" "polars-plan/list_count") ("json" "polars-io/json" "polars-plan/json" "polars-json") ("is_unique" "polars-plan/is_unique") ("is_in" "polars-plan/is_in") ("is_first" "polars-plan/is_first") ("ipc" "polars-io/ipc" "polars-plan/ipc" "polars-pipe/ipc") ("interpolate" "polars-plan/interpolate") ("future") ("fused" "polars-plan/fused" "polars-ops/fused") ("fmt" "polars-core/fmt" "polars-plan/fmt") ("ewma" "polars-plan/ewma") ("dynamic_groupby" "polars-plan/dynamic_groupby" "polars-time" "temporal") ("dtype-u8" "polars-plan/dtype-u8" "polars-pipe/dtype-u8") ("dtype-u16" "polars-plan/dtype-u16" "polars-pipe/dtype-u16") ("dtype-time" "polars-core/dtype-time" "temporal") ("dtype-struct" "polars-plan/dtype-struct") ("dtype-i8" "polars-plan/dtype-i8" "polars-pipe/dtype-i8") ("dtype-i16" "polars-plan/dtype-i16" "polars-pipe/dtype-i16") ("dtype-duration" "polars-plan/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-decimal" "polars-plan/dtype-decimal" "polars-pipe/dtype-decimal") ("dtype-datetime" "polars-plan/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-plan/dtype-date" "polars-time/dtype-date" "temporal") ("dtype-categorical" "polars-plan/dtype-categorical" "polars-pipe/dtype-categorical") ("dtype-array" "polars-plan/dtype-array" "polars-pipe/dtype-array") ("dot_diagram" "polars-plan/dot_diagram") ("diff" "polars-plan/diff" "polars-plan/diff") ("diagonal_concat") ("default" "compile" "private") ("date_offset" "polars-plan/date_offset") ("cumulative_eval") ("cum_agg" "polars-plan/cum_agg") ("csv" "polars-io/csv" "polars-plan/csv" "polars-pipe/csv") ("cse" "polars-plan/cse") ("cross_join" "polars-plan/cross_join" "polars-pipe/cross_join" "polars-ops/cross_join") ("concat_str" "polars-plan/concat_str") ("compile" "polars-plan/compile") ("coalesce" "polars-plan/coalesce") ("chunked_ids" "polars-plan/chunked_ids" "polars-core/chunked_ids") ("binary_encoding" "polars-plan/binary_encoding") ("bigidx" "polars-plan/bigidx") ("async" "polars-plan/async" "polars-io/cloud" "polars-pipe/async" "streaming") ("asof_join" "polars-plan/asof_join" "polars-time") ("arg_where" "polars-plan/arg_where") ("arange" "polars-plan/arange") ("approx_unique" "polars-plan/approx_unique") ("abs" "polars-plan/abs"))))))

(define-public crate-polars-lazy-0.31.0 (c (n "polars-lazy") (v "0.31.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.31.0") (d #t) (k 0)) (d (n "polars-core") (r "^0.31.0") (f (quote ("lazy" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.31.0") (f (quote ("lazy" "csv"))) (k 0)) (d (n "polars-json") (r "^0.31.0") (o #t) (d #t) (k 0)) (d (n "polars-ops") (r "^0.31.0") (k 0)) (d (n "polars-pipe") (r "^0.31.0") (o #t) (d #t) (k 0)) (d (n "polars-plan") (r "^0.31.0") (d #t) (k 0)) (d (n "polars-time") (r "^0.31.0") (o #t) (d #t) (k 0)) (d (n "polars-utils") (r "^0.31.0") (d #t) (k 0)) (d (n "pyo3") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smartstring") (r "^1") (d #t) (k 0)))) (h "13b1841c9c4mwlz6nwx90jxgjlla5wmrbc0lad2bpc34h1snbc7g") (f (quote (("unique_counts" "polars-plan/unique_counts") ("true_div" "polars-plan/true_div") ("trigonometry" "polars-plan/trigonometry") ("top_k" "polars-plan/top_k") ("timezones" "polars-plan/timezones") ("test_all" "test" "strings" "regex" "ipc" "row_hash" "string_justify" "string_from_radix" "search_sorted" "top_k" "pivot" "semi_anti_join" "cse") ("test" "polars-plan/debugging" "panic_on_schema" "rolling_window" "rank" "round_series" "csv" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("temporal" "dtype-datetime" "dtype-date" "dtype-time" "dtype-duration" "polars-plan/temporal") ("strings" "polars-plan/strings") ("string_justify" "polars-plan/string_justify") ("string_from_radix" "polars-plan/string_from_radix") ("streaming" "chunked_ids" "polars-pipe/compile" "polars-plan/streaming") ("sign" "polars-plan/sign") ("serde" "polars-plan/serde" "polars-arrow/serde" "polars-core/serde-lazy" "polars-time/serde" "polars-io/serde" "polars-ops/serde") ("semi_anti_join" "polars-plan/semi_anti_join") ("search_sorted" "polars-plan/search_sorted") ("row_hash" "polars-plan/row_hash") ("round_series" "polars-plan/round_series" "polars-ops/round_series") ("rolling_window" "polars-plan/rolling_window" "polars-time/rolling_window") ("rle" "polars-plan/rle" "polars-ops/rle") ("repeat_by" "polars-plan/repeat_by") ("regex" "polars-plan/regex") ("rank" "polars-plan/rank") ("range" "polars-plan/range") ("random" "polars-plan/random") ("python" "pyo3" "polars-plan/python" "polars-core/python") ("propagate_nans" "polars-plan/propagate_nans") ("pivot" "polars-core/rows" "polars-ops/pivot") ("pct_change" "polars-plan/pct_change") ("parquet" "polars-core/parquet" "polars-io/parquet" "polars-plan/parquet" "polars-pipe/parquet") ("panic_on_schema" "polars-plan/panic_on_schema") ("object" "polars-plan/object") ("nightly" "polars-core/nightly" "polars-pipe/nightly" "polars-plan/nightly") ("moment" "polars-plan/moment" "polars-ops/moment") ("mode" "polars-plan/mode") ("meta" "polars-plan/meta") ("merge_sorted" "polars-plan/merge_sorted") ("log" "polars-plan/log") ("list_to_struct" "polars-plan/list_to_struct") ("list_take" "polars-ops/list_take" "polars-plan/list_take") ("list_sets" "polars-plan/list_sets" "polars-ops/list_sets") ("list_eval") ("list_count" "polars-ops/list_count" "polars-plan/list_count") ("list_any_all" "polars-ops/list_any_all" "polars-plan/list_any_all") ("json" "polars-io/json" "polars-plan/json" "polars-json") ("is_unique" "polars-plan/is_unique") ("is_in" "polars-plan/is_in") ("is_first" "polars-plan/is_first") ("ipc" "polars-io/ipc" "polars-plan/ipc" "polars-pipe/ipc") ("interpolate" "polars-plan/interpolate") ("future") ("fused" "polars-plan/fused" "polars-ops/fused") ("fmt" "polars-core/fmt" "polars-plan/fmt") ("extract_jsonpath" "polars-plan/extract_jsonpath" "polars-ops/extract_jsonpath") ("ewma" "polars-plan/ewma") ("dynamic_groupby" "polars-plan/dynamic_groupby" "polars-time" "temporal") ("dtype-u8" "polars-plan/dtype-u8" "polars-pipe/dtype-u8") ("dtype-u16" "polars-plan/dtype-u16" "polars-pipe/dtype-u16") ("dtype-time" "polars-core/dtype-time" "temporal") ("dtype-struct" "polars-plan/dtype-struct") ("dtype-i8" "polars-plan/dtype-i8" "polars-pipe/dtype-i8") ("dtype-i16" "polars-plan/dtype-i16" "polars-pipe/dtype-i16") ("dtype-duration" "polars-plan/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-decimal" "polars-plan/dtype-decimal" "polars-pipe/dtype-decimal") ("dtype-datetime" "polars-plan/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-plan/dtype-date" "polars-time/dtype-date" "temporal") ("dtype-categorical" "polars-plan/dtype-categorical" "polars-pipe/dtype-categorical") ("dtype-array" "polars-plan/dtype-array" "polars-pipe/dtype-array" "polars-ops/dtype-array") ("dot_diagram" "polars-plan/dot_diagram") ("diff" "polars-plan/diff" "polars-plan/diff") ("diagonal_concat") ("default" "compile") ("date_offset" "polars-plan/date_offset") ("cutqcut" "polars-plan/cutqcut" "polars-ops/cutqcut") ("cumulative_eval") ("cum_agg" "polars-plan/cum_agg") ("csv" "polars-io/csv" "polars-plan/csv" "polars-pipe/csv") ("cse" "polars-plan/cse") ("cross_join" "polars-plan/cross_join" "polars-pipe/cross_join" "polars-ops/cross_join") ("concat_str" "polars-plan/concat_str") ("compile" "polars-plan/compile") ("coalesce" "polars-plan/coalesce") ("chunked_ids" "polars-plan/chunked_ids" "polars-core/chunked_ids") ("binary_encoding" "polars-plan/binary_encoding") ("bigidx" "polars-plan/bigidx") ("async" "polars-plan/async" "polars-io/cloud" "polars-pipe/async" "streaming") ("asof_join" "polars-plan/asof_join" "polars-time") ("arg_where" "polars-plan/arg_where") ("approx_unique" "polars-plan/approx_unique") ("abs" "polars-plan/abs"))))))

(define-public crate-polars-lazy-0.31.1 (c (n "polars-lazy") (v "0.31.1") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.31.1") (d #t) (k 0)) (d (n "polars-core") (r "^0.31.1") (f (quote ("lazy" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.31.1") (f (quote ("lazy" "csv"))) (k 0)) (d (n "polars-json") (r "^0.31.1") (o #t) (d #t) (k 0)) (d (n "polars-ops") (r "^0.31.1") (k 0)) (d (n "polars-pipe") (r "^0.31.1") (o #t) (d #t) (k 0)) (d (n "polars-plan") (r "^0.31.1") (d #t) (k 0)) (d (n "polars-time") (r "^0.31.1") (o #t) (d #t) (k 0)) (d (n "polars-utils") (r "^0.31.1") (d #t) (k 0)) (d (n "pyo3") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smartstring") (r "^1") (d #t) (k 0)))) (h "0kkxa2hapvm7jhbz2rdc8dr39v130pbc9p3bn0wq75rml1siwks9") (f (quote (("unique_counts" "polars-plan/unique_counts") ("true_div" "polars-plan/true_div") ("trigonometry" "polars-plan/trigonometry") ("top_k" "polars-plan/top_k") ("timezones" "polars-plan/timezones") ("test_all" "test" "strings" "regex" "ipc" "row_hash" "string_justify" "string_from_radix" "search_sorted" "top_k" "pivot" "semi_anti_join" "cse") ("test" "polars-plan/debugging" "panic_on_schema" "rolling_window" "rank" "round_series" "csv" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("temporal" "dtype-datetime" "dtype-date" "dtype-time" "dtype-duration" "polars-plan/temporal") ("strings" "polars-plan/strings") ("string_justify" "polars-plan/string_justify") ("string_from_radix" "polars-plan/string_from_radix") ("streaming" "chunked_ids" "polars-pipe/compile" "polars-plan/streaming") ("sign" "polars-plan/sign") ("serde" "polars-plan/serde" "polars-arrow/serde" "polars-core/serde-lazy" "polars-time/serde" "polars-io/serde" "polars-ops/serde") ("semi_anti_join" "polars-plan/semi_anti_join") ("search_sorted" "polars-plan/search_sorted") ("row_hash" "polars-plan/row_hash") ("round_series" "polars-plan/round_series" "polars-ops/round_series") ("rolling_window" "polars-plan/rolling_window" "polars-time/rolling_window") ("rle" "polars-plan/rle" "polars-ops/rle") ("repeat_by" "polars-plan/repeat_by") ("regex" "polars-plan/regex") ("rank" "polars-plan/rank") ("range" "polars-plan/range") ("random" "polars-plan/random") ("python" "pyo3" "polars-plan/python" "polars-core/python") ("propagate_nans" "polars-plan/propagate_nans") ("pivot" "polars-core/rows" "polars-ops/pivot") ("pct_change" "polars-plan/pct_change") ("parquet" "polars-core/parquet" "polars-io/parquet" "polars-plan/parquet" "polars-pipe/parquet") ("panic_on_schema" "polars-plan/panic_on_schema") ("object" "polars-plan/object") ("nightly" "polars-core/nightly" "polars-pipe/nightly" "polars-plan/nightly") ("moment" "polars-plan/moment" "polars-ops/moment") ("mode" "polars-plan/mode") ("meta" "polars-plan/meta") ("merge_sorted" "polars-plan/merge_sorted") ("log" "polars-plan/log") ("list_to_struct" "polars-plan/list_to_struct") ("list_take" "polars-ops/list_take" "polars-plan/list_take") ("list_sets" "polars-plan/list_sets" "polars-ops/list_sets") ("list_eval") ("list_count" "polars-ops/list_count" "polars-plan/list_count") ("list_any_all" "polars-ops/list_any_all" "polars-plan/list_any_all") ("json" "polars-io/json" "polars-plan/json" "polars-json") ("is_unique" "polars-plan/is_unique") ("is_in" "polars-plan/is_in") ("is_first" "polars-plan/is_first") ("ipc" "polars-io/ipc" "polars-plan/ipc" "polars-pipe/ipc") ("interpolate" "polars-plan/interpolate") ("future") ("fused" "polars-plan/fused" "polars-ops/fused") ("fmt" "polars-core/fmt" "polars-plan/fmt") ("extract_jsonpath" "polars-plan/extract_jsonpath" "polars-ops/extract_jsonpath") ("ewma" "polars-plan/ewma") ("dynamic_groupby" "polars-plan/dynamic_groupby" "polars-time" "temporal") ("dtype-u8" "polars-plan/dtype-u8" "polars-pipe/dtype-u8") ("dtype-u16" "polars-plan/dtype-u16" "polars-pipe/dtype-u16") ("dtype-time" "polars-core/dtype-time" "temporal") ("dtype-struct" "polars-plan/dtype-struct") ("dtype-i8" "polars-plan/dtype-i8" "polars-pipe/dtype-i8") ("dtype-i16" "polars-plan/dtype-i16" "polars-pipe/dtype-i16") ("dtype-duration" "polars-plan/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-decimal" "polars-plan/dtype-decimal" "polars-pipe/dtype-decimal") ("dtype-datetime" "polars-plan/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-plan/dtype-date" "polars-time/dtype-date" "temporal") ("dtype-categorical" "polars-plan/dtype-categorical" "polars-pipe/dtype-categorical") ("dtype-array" "polars-plan/dtype-array" "polars-pipe/dtype-array" "polars-ops/dtype-array") ("dot_diagram" "polars-plan/dot_diagram") ("diff" "polars-plan/diff" "polars-plan/diff") ("diagonal_concat") ("default" "compile") ("date_offset" "polars-plan/date_offset") ("cutqcut" "polars-plan/cutqcut" "polars-ops/cutqcut") ("cumulative_eval") ("cum_agg" "polars-plan/cum_agg") ("csv" "polars-io/csv" "polars-plan/csv" "polars-pipe/csv") ("cse" "polars-plan/cse") ("cross_join" "polars-plan/cross_join" "polars-pipe/cross_join" "polars-ops/cross_join") ("concat_str" "polars-plan/concat_str") ("compile" "polars-plan/compile") ("coalesce" "polars-plan/coalesce") ("chunked_ids" "polars-plan/chunked_ids" "polars-core/chunked_ids") ("binary_encoding" "polars-plan/binary_encoding") ("bigidx" "polars-plan/bigidx") ("async" "polars-plan/async" "polars-io/cloud" "polars-pipe/async" "streaming") ("asof_join" "polars-plan/asof_join" "polars-time") ("arg_where" "polars-plan/arg_where") ("approx_unique" "polars-plan/approx_unique") ("abs" "polars-plan/abs"))))))

(define-public crate-polars-lazy-0.32.0 (c (n "polars-lazy") (v "0.32.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.32.0") (d #t) (k 0)) (d (n "polars-core") (r "^0.32.0") (f (quote ("lazy" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.32.0") (f (quote ("lazy" "csv"))) (k 0)) (d (n "polars-json") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "polars-ops") (r "^0.32.0") (k 0)) (d (n "polars-pipe") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "polars-plan") (r "^0.32.0") (d #t) (k 0)) (d (n "polars-time") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "polars-utils") (r "^0.32.0") (d #t) (k 0)) (d (n "pyo3") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "0qvh4fyd1hbdpccq0yalzv6nx4y44x6msrncrij7h13v67k7aw3h") (f (quote (("unique_counts" "polars-plan/unique_counts") ("true_div" "polars-plan/true_div") ("trigonometry" "polars-plan/trigonometry") ("top_k" "polars-plan/top_k") ("timezones" "polars-plan/timezones") ("test_all" "test" "strings" "regex" "ipc" "row_hash" "string_justify" "string_from_radix" "search_sorted" "top_k" "pivot" "semi_anti_join" "cse") ("test" "polars-plan/debugging" "panic_on_schema" "rolling_window" "rank" "round_series" "csv" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("temporal" "dtype-datetime" "dtype-date" "dtype-time" "dtype-duration" "polars-plan/temporal") ("strings" "polars-plan/strings") ("string_justify" "polars-plan/string_justify") ("string_from_radix" "polars-plan/string_from_radix") ("streaming" "chunked_ids" "polars-pipe/compile" "polars-plan/streaming") ("sign" "polars-plan/sign") ("serde" "polars-plan/serde" "polars-arrow/serde" "polars-core/serde-lazy" "polars-time/serde" "polars-io/serde" "polars-ops/serde") ("semi_anti_join" "polars-plan/semi_anti_join") ("search_sorted" "polars-plan/search_sorted") ("row_hash" "polars-plan/row_hash") ("round_series" "polars-plan/round_series" "polars-ops/round_series") ("rolling_window" "polars-plan/rolling_window" "polars-time/rolling_window") ("rle" "polars-plan/rle" "polars-ops/rle") ("repeat_by" "polars-plan/repeat_by") ("regex" "polars-plan/regex") ("rank" "polars-plan/rank") ("range" "polars-plan/range") ("random" "polars-plan/random") ("python" "pyo3" "polars-plan/python" "polars-core/python") ("propagate_nans" "polars-plan/propagate_nans") ("pivot" "polars-core/rows" "polars-ops/pivot") ("pct_change" "polars-plan/pct_change") ("parquet" "polars-core/parquet" "polars-io/parquet" "polars-plan/parquet" "polars-pipe/parquet") ("panic_on_schema" "polars-plan/panic_on_schema") ("object" "polars-plan/object") ("nightly" "polars-core/nightly" "polars-pipe/nightly" "polars-plan/nightly") ("moment" "polars-plan/moment" "polars-ops/moment") ("mode" "polars-plan/mode") ("meta" "polars-plan/meta") ("merge_sorted" "polars-plan/merge_sorted") ("log" "polars-plan/log") ("list_to_struct" "polars-plan/list_to_struct") ("list_take" "polars-ops/list_take" "polars-plan/list_take") ("list_sets" "polars-plan/list_sets" "polars-ops/list_sets") ("list_eval") ("list_count" "polars-ops/list_count" "polars-plan/list_count") ("list_any_all" "polars-ops/list_any_all" "polars-plan/list_any_all") ("json" "polars-io/json" "polars-plan/json" "polars-json") ("is_unique" "polars-plan/is_unique") ("is_in" "polars-plan/is_in") ("is_first" "polars-plan/is_first") ("ipc" "polars-io/ipc" "polars-plan/ipc" "polars-pipe/ipc") ("interpolate" "polars-plan/interpolate") ("future") ("fused" "polars-plan/fused" "polars-ops/fused") ("fmt" "polars-core/fmt" "polars-plan/fmt") ("extract_jsonpath" "polars-plan/extract_jsonpath" "polars-ops/extract_jsonpath") ("extract_groups" "polars-plan/extract_groups") ("ewma" "polars-plan/ewma") ("dynamic_groupby" "polars-plan/dynamic_groupby" "polars-time" "temporal") ("dtype-u8" "polars-plan/dtype-u8" "polars-pipe/dtype-u8") ("dtype-u16" "polars-plan/dtype-u16" "polars-pipe/dtype-u16") ("dtype-time" "polars-core/dtype-time" "temporal") ("dtype-struct" "polars-plan/dtype-struct") ("dtype-i8" "polars-plan/dtype-i8" "polars-pipe/dtype-i8") ("dtype-i16" "polars-plan/dtype-i16" "polars-pipe/dtype-i16") ("dtype-duration" "polars-plan/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-decimal" "polars-plan/dtype-decimal" "polars-pipe/dtype-decimal") ("dtype-datetime" "polars-plan/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-plan/dtype-date" "polars-time/dtype-date" "temporal") ("dtype-categorical" "polars-plan/dtype-categorical" "polars-pipe/dtype-categorical") ("dtype-array" "polars-plan/dtype-array" "polars-pipe/dtype-array" "polars-ops/dtype-array") ("dot_diagram" "polars-plan/dot_diagram") ("diff" "polars-plan/diff" "polars-plan/diff") ("diagonal_concat") ("default" "compile") ("date_offset" "polars-plan/date_offset") ("cutqcut" "polars-plan/cutqcut" "polars-ops/cutqcut") ("cumulative_eval") ("cum_agg" "polars-plan/cum_agg") ("csv" "polars-io/csv" "polars-plan/csv" "polars-pipe/csv") ("cse" "polars-plan/cse") ("cross_join" "polars-plan/cross_join" "polars-pipe/cross_join" "polars-ops/cross_join") ("concat_str" "polars-plan/concat_str") ("compile" "polars-plan/compile") ("coalesce" "polars-plan/coalesce") ("chunked_ids" "polars-plan/chunked_ids" "polars-core/chunked_ids") ("binary_encoding" "polars-plan/binary_encoding") ("bigidx" "polars-plan/bigidx") ("async" "polars-plan/async" "polars-io/cloud" "polars-pipe/async" "streaming") ("asof_join" "polars-plan/asof_join" "polars-time") ("arg_where" "polars-plan/arg_where") ("approx_unique" "polars-plan/approx_unique") ("abs" "polars-plan/abs"))))))

(define-public crate-polars-lazy-0.32.1 (c (n "polars-lazy") (v "0.32.1") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.32.1") (d #t) (k 0)) (d (n "polars-core") (r "^0.32.1") (f (quote ("lazy" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.32.1") (f (quote ("lazy" "csv"))) (k 0)) (d (n "polars-json") (r "^0.32.1") (o #t) (d #t) (k 0)) (d (n "polars-ops") (r "^0.32.1") (k 0)) (d (n "polars-pipe") (r "^0.32.1") (o #t) (d #t) (k 0)) (d (n "polars-plan") (r "^0.32.1") (d #t) (k 0)) (d (n "polars-time") (r "^0.32.1") (o #t) (d #t) (k 0)) (d (n "polars-utils") (r "^0.32.1") (d #t) (k 0)) (d (n "pyo3") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "0mhlysn2m9cixga9p4mklfh70z15hvdk8svpz34h2pm5q8p7ccrc") (f (quote (("unique_counts" "polars-plan/unique_counts") ("true_div" "polars-plan/true_div") ("trigonometry" "polars-plan/trigonometry") ("top_k" "polars-plan/top_k") ("timezones" "polars-plan/timezones") ("test_all" "test" "strings" "regex" "ipc" "row_hash" "string_justify" "string_from_radix" "search_sorted" "top_k" "pivot" "semi_anti_join" "cse") ("test" "polars-plan/debugging" "panic_on_schema" "rolling_window" "rank" "round_series" "csv" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("temporal" "dtype-datetime" "dtype-date" "dtype-time" "dtype-duration" "polars-plan/temporal") ("strings" "polars-plan/strings") ("string_justify" "polars-plan/string_justify") ("string_from_radix" "polars-plan/string_from_radix") ("streaming" "chunked_ids" "polars-pipe/compile" "polars-plan/streaming") ("sign" "polars-plan/sign") ("serde" "polars-plan/serde" "polars-arrow/serde" "polars-core/serde-lazy" "polars-time/serde" "polars-io/serde" "polars-ops/serde") ("semi_anti_join" "polars-plan/semi_anti_join") ("search_sorted" "polars-plan/search_sorted") ("row_hash" "polars-plan/row_hash") ("round_series" "polars-plan/round_series" "polars-ops/round_series") ("rolling_window" "polars-plan/rolling_window" "polars-time/rolling_window") ("rle" "polars-plan/rle" "polars-ops/rle") ("repeat_by" "polars-plan/repeat_by") ("regex" "polars-plan/regex") ("rank" "polars-plan/rank") ("range" "polars-plan/range") ("random" "polars-plan/random") ("python" "pyo3" "polars-plan/python" "polars-core/python") ("propagate_nans" "polars-plan/propagate_nans") ("pivot" "polars-core/rows" "polars-ops/pivot") ("pct_change" "polars-plan/pct_change") ("parquet" "polars-core/parquet" "polars-io/parquet" "polars-plan/parquet" "polars-pipe/parquet") ("panic_on_schema" "polars-plan/panic_on_schema") ("object" "polars-plan/object") ("nightly" "polars-core/nightly" "polars-pipe/nightly" "polars-plan/nightly") ("moment" "polars-plan/moment" "polars-ops/moment") ("mode" "polars-plan/mode") ("meta" "polars-plan/meta") ("merge_sorted" "polars-plan/merge_sorted") ("log" "polars-plan/log") ("list_to_struct" "polars-plan/list_to_struct") ("list_take" "polars-ops/list_take" "polars-plan/list_take") ("list_sets" "polars-plan/list_sets" "polars-ops/list_sets") ("list_eval") ("list_count" "polars-ops/list_count" "polars-plan/list_count") ("list_any_all" "polars-ops/list_any_all" "polars-plan/list_any_all") ("json" "polars-io/json" "polars-plan/json" "polars-json") ("is_unique" "polars-plan/is_unique") ("is_in" "polars-plan/is_in") ("is_first" "polars-plan/is_first") ("ipc" "polars-io/ipc" "polars-plan/ipc" "polars-pipe/ipc") ("interpolate" "polars-plan/interpolate") ("future") ("fused" "polars-plan/fused" "polars-ops/fused") ("fmt" "polars-core/fmt" "polars-plan/fmt") ("extract_jsonpath" "polars-plan/extract_jsonpath" "polars-ops/extract_jsonpath") ("extract_groups" "polars-plan/extract_groups") ("ewma" "polars-plan/ewma") ("dynamic_groupby" "polars-plan/dynamic_groupby" "polars-time" "temporal") ("dtype-u8" "polars-plan/dtype-u8" "polars-pipe/dtype-u8") ("dtype-u16" "polars-plan/dtype-u16" "polars-pipe/dtype-u16") ("dtype-time" "polars-core/dtype-time" "temporal") ("dtype-struct" "polars-plan/dtype-struct") ("dtype-i8" "polars-plan/dtype-i8" "polars-pipe/dtype-i8") ("dtype-i16" "polars-plan/dtype-i16" "polars-pipe/dtype-i16") ("dtype-duration" "polars-plan/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-decimal" "polars-plan/dtype-decimal" "polars-pipe/dtype-decimal") ("dtype-datetime" "polars-plan/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-plan/dtype-date" "polars-time/dtype-date" "temporal") ("dtype-categorical" "polars-plan/dtype-categorical" "polars-pipe/dtype-categorical") ("dtype-array" "polars-plan/dtype-array" "polars-pipe/dtype-array" "polars-ops/dtype-array") ("dot_diagram" "polars-plan/dot_diagram") ("diff" "polars-plan/diff" "polars-plan/diff") ("diagonal_concat") ("default" "compile") ("date_offset" "polars-plan/date_offset") ("cutqcut" "polars-plan/cutqcut" "polars-ops/cutqcut") ("cumulative_eval") ("cum_agg" "polars-plan/cum_agg") ("csv" "polars-io/csv" "polars-plan/csv" "polars-pipe/csv") ("cse" "polars-plan/cse") ("cross_join" "polars-plan/cross_join" "polars-pipe/cross_join" "polars-ops/cross_join") ("concat_str" "polars-plan/concat_str") ("compile" "polars-plan/compile") ("coalesce" "polars-plan/coalesce") ("chunked_ids" "polars-plan/chunked_ids" "polars-core/chunked_ids") ("binary_encoding" "polars-plan/binary_encoding") ("bigidx" "polars-plan/bigidx") ("async" "polars-plan/async" "polars-io/cloud" "polars-pipe/async" "streaming") ("asof_join" "polars-plan/asof_join" "polars-time") ("arg_where" "polars-plan/arg_where") ("approx_unique" "polars-plan/approx_unique") ("abs" "polars-plan/abs"))))))

(define-public crate-polars-lazy-0.33.0 (c (n "polars-lazy") (v "0.33.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.33.0") (k 0)) (d (n "polars-core") (r "^0.33.0") (f (quote ("lazy" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.33.0") (f (quote ("lazy" "csv"))) (k 0)) (d (n "polars-json") (r "^0.33.0") (o #t) (k 0)) (d (n "polars-ops") (r "^0.33.0") (k 0)) (d (n "polars-pipe") (r "^0.33.0") (o #t) (k 0)) (d (n "polars-plan") (r "^0.33.0") (k 0)) (d (n "polars-time") (r "^0.33.0") (o #t) (k 0)) (d (n "polars-utils") (r "^0.33.0") (k 0)) (d (n "pyo3") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "0i7y276fmqd5n38vqcap901sdndccd5a8vk4llg3ckayxv2rnvd6") (f (quote (("unique_counts" "polars-plan/unique_counts") ("true_div" "polars-plan/true_div") ("trigonometry" "polars-plan/trigonometry") ("top_k" "polars-plan/top_k") ("timezones" "polars-plan/timezones") ("test_all" "test" "strings" "regex" "ipc" "row_hash" "string_justify" "string_from_radix" "search_sorted" "top_k" "pivot" "semi_anti_join" "cse") ("test" "polars-plan/debugging" "panic_on_schema" "rolling_window" "rank" "round_series" "csv" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("temporal" "dtype-datetime" "dtype-date" "dtype-time" "dtype-duration" "polars-plan/temporal") ("strings" "polars-plan/strings") ("string_justify" "polars-plan/string_justify") ("string_from_radix" "polars-plan/string_from_radix") ("streaming" "chunked_ids" "polars-pipe/compile" "polars-plan/streaming") ("sign" "polars-plan/sign") ("serde" "polars-plan/serde" "polars-arrow/serde" "polars-core/serde-lazy" "polars-time/serde" "polars-io/serde" "polars-ops/serde") ("semi_anti_join" "polars-plan/semi_anti_join") ("search_sorted" "polars-plan/search_sorted") ("row_hash" "polars-plan/row_hash") ("round_series" "polars-plan/round_series" "polars-ops/round_series") ("rolling_window" "polars-plan/rolling_window" "polars-time/rolling_window") ("rle" "polars-plan/rle" "polars-ops/rle") ("repeat_by" "polars-plan/repeat_by") ("regex" "polars-plan/regex") ("rank" "polars-plan/rank") ("range" "polars-plan/range") ("random" "polars-plan/random") ("python" "pyo3" "polars-plan/python" "polars-core/python" "polars-io/python") ("propagate_nans" "polars-plan/propagate_nans") ("pivot" "polars-core/rows" "polars-ops/pivot") ("pct_change" "polars-plan/pct_change") ("parquet" "polars-core/parquet" "polars-io/parquet" "polars-plan/parquet" "polars-pipe/parquet") ("panic_on_schema" "polars-plan/panic_on_schema") ("object" "polars-plan/object") ("nightly" "polars-core/nightly" "polars-pipe/nightly" "polars-plan/nightly") ("moment" "polars-plan/moment" "polars-ops/moment") ("mode" "polars-plan/mode") ("meta" "polars-plan/meta") ("merge_sorted" "polars-plan/merge_sorted") ("log" "polars-plan/log") ("list_to_struct" "polars-plan/list_to_struct") ("list_take" "polars-ops/list_take" "polars-plan/list_take") ("list_sets" "polars-plan/list_sets" "polars-ops/list_sets") ("list_eval") ("list_count" "polars-ops/list_count" "polars-plan/list_count") ("list_any_all" "polars-ops/list_any_all" "polars-plan/list_any_all") ("json" "polars-io/json" "polars-plan/json" "polars-json") ("is_unique" "polars-plan/is_unique") ("is_last_distinct" "polars-plan/is_last_distinct") ("is_in" "polars-plan/is_in" "polars-ops/is_in") ("is_first_distinct" "polars-plan/is_first_distinct") ("ipc" "polars-io/ipc" "polars-plan/ipc" "polars-pipe/ipc") ("interpolate" "polars-plan/interpolate") ("future") ("fused" "polars-plan/fused" "polars-ops/fused") ("fmt" "polars-core/fmt" "polars-plan/fmt") ("extract_jsonpath" "polars-plan/extract_jsonpath" "polars-ops/extract_jsonpath") ("extract_groups" "polars-plan/extract_groups") ("ewma" "polars-plan/ewma") ("dynamic_group_by" "polars-plan/dynamic_group_by" "polars-time" "temporal") ("dtype-u8" "polars-plan/dtype-u8" "polars-pipe/dtype-u8") ("dtype-u16" "polars-plan/dtype-u16" "polars-pipe/dtype-u16") ("dtype-time" "polars-core/dtype-time" "temporal") ("dtype-struct" "polars-plan/dtype-struct") ("dtype-i8" "polars-plan/dtype-i8" "polars-pipe/dtype-i8") ("dtype-i16" "polars-plan/dtype-i16" "polars-pipe/dtype-i16") ("dtype-duration" "polars-plan/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-decimal" "polars-plan/dtype-decimal" "polars-pipe/dtype-decimal") ("dtype-datetime" "polars-plan/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-plan/dtype-date" "polars-time/dtype-date" "temporal") ("dtype-categorical" "polars-plan/dtype-categorical" "polars-pipe/dtype-categorical") ("dtype-array" "polars-plan/dtype-array" "polars-pipe/dtype-array" "polars-ops/dtype-array") ("dot_diagram" "polars-plan/dot_diagram") ("diff" "polars-plan/diff" "polars-plan/diff") ("diagonal_concat") ("default" "compile") ("date_offset" "polars-plan/date_offset") ("cutqcut" "polars-plan/cutqcut" "polars-ops/cutqcut") ("cumulative_eval") ("cum_agg" "polars-plan/cum_agg") ("csv" "polars-io/csv" "polars-plan/csv" "polars-pipe/csv") ("cse" "polars-plan/cse") ("cross_join" "polars-plan/cross_join" "polars-pipe/cross_join" "polars-ops/cross_join") ("concat_str" "polars-plan/concat_str") ("compile" "polars-plan/compile") ("coalesce" "polars-plan/coalesce") ("cloud_write" "cloud") ("cloud" "async" "polars-pipe/cloud") ("chunked_ids" "polars-plan/chunked_ids" "polars-core/chunked_ids") ("binary_encoding" "polars-plan/binary_encoding") ("bigidx" "polars-plan/bigidx") ("async" "polars-plan/async" "polars-io/cloud" "polars-pipe/async" "streaming") ("asof_join" "polars-plan/asof_join" "polars-time") ("arg_where" "polars-plan/arg_where") ("approx_unique" "polars-plan/approx_unique") ("abs" "polars-plan/abs"))))))

(define-public crate-polars-lazy-0.33.1 (c (n "polars-lazy") (v "0.33.1") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.33.1") (k 0)) (d (n "polars-core") (r "^0.33.1") (f (quote ("lazy" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.33.1") (f (quote ("lazy"))) (k 0)) (d (n "polars-json") (r "^0.33.1") (o #t) (k 0)) (d (n "polars-ops") (r "^0.33.1") (k 0)) (d (n "polars-pipe") (r "^0.33.1") (o #t) (k 0)) (d (n "polars-plan") (r "^0.33.1") (k 0)) (d (n "polars-time") (r "^0.33.1") (o #t) (k 0)) (d (n "polars-utils") (r "^0.33.1") (k 0)) (d (n "pyo3") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "0nygwvw8gknxgqnsb1mz0qi7a5isi6mmg42ba7gymlwlalgm9jrj") (f (quote (("unique_counts" "polars-plan/unique_counts") ("true_div" "polars-plan/true_div") ("trigonometry" "polars-plan/trigonometry") ("top_k" "polars-plan/top_k") ("timezones" "polars-plan/timezones") ("test_all" "test" "strings" "regex" "ipc" "row_hash" "string_justify" "string_from_radix" "search_sorted" "top_k" "pivot" "semi_anti_join" "cse") ("test" "polars-plan/debugging" "panic_on_schema" "rolling_window" "rank" "round_series" "csv" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("temporal" "dtype-datetime" "dtype-date" "dtype-time" "dtype-duration" "polars-plan/temporal") ("strings" "polars-plan/strings") ("string_justify" "polars-plan/string_justify") ("string_from_radix" "polars-plan/string_from_radix") ("streaming" "chunked_ids" "polars-pipe" "polars-plan/streaming") ("sign" "polars-plan/sign") ("semi_anti_join" "polars-plan/semi_anti_join") ("search_sorted" "polars-plan/search_sorted") ("row_hash" "polars-plan/row_hash") ("round_series" "polars-plan/round_series" "polars-ops/round_series") ("rolling_window" "polars-plan/rolling_window" "polars-time/rolling_window") ("rle" "polars-plan/rle" "polars-ops/rle") ("repeat_by" "polars-plan/repeat_by") ("regex" "polars-plan/regex") ("rank" "polars-plan/rank") ("range" "polars-plan/range") ("random" "polars-plan/random") ("python" "pyo3" "polars-plan/python" "polars-core/python" "polars-io/python") ("propagate_nans" "polars-plan/propagate_nans") ("pivot" "polars-core/rows" "polars-ops/pivot") ("pct_change" "polars-plan/pct_change") ("panic_on_schema" "polars-plan/panic_on_schema") ("object" "polars-plan/object") ("nightly" "polars-core/nightly" "polars-pipe/nightly" "polars-plan/nightly") ("moment" "polars-plan/moment" "polars-ops/moment") ("mode" "polars-plan/mode") ("meta" "polars-plan/meta") ("merge_sorted" "polars-plan/merge_sorted") ("log" "polars-plan/log") ("list_to_struct" "polars-plan/list_to_struct") ("list_take" "polars-ops/list_take" "polars-plan/list_take") ("list_sets" "polars-plan/list_sets" "polars-ops/list_sets") ("list_eval") ("list_count" "polars-ops/list_count" "polars-plan/list_count") ("list_any_all" "polars-ops/list_any_all" "polars-plan/list_any_all") ("json" "polars-io/json" "polars-plan/json" "polars-json") ("is_unique" "polars-plan/is_unique") ("is_last_distinct" "polars-plan/is_last_distinct") ("is_in" "polars-plan/is_in" "polars-ops/is_in") ("is_first_distinct" "polars-plan/is_first_distinct") ("interpolate" "polars-plan/interpolate") ("future") ("fused" "polars-plan/fused" "polars-ops/fused") ("fmt" "polars-core/fmt" "polars-plan/fmt") ("extract_jsonpath" "polars-plan/extract_jsonpath" "polars-ops/extract_jsonpath") ("extract_groups" "polars-plan/extract_groups") ("ewma" "polars-plan/ewma") ("dynamic_group_by" "polars-plan/dynamic_group_by" "polars-time" "temporal") ("dtype-time" "polars-core/dtype-time" "temporal") ("dtype-struct" "polars-plan/dtype-struct") ("dtype-duration" "polars-plan/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-datetime" "polars-plan/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-plan/dtype-date" "polars-time/dtype-date" "temporal") ("dot_diagram" "polars-plan/dot_diagram") ("diff" "polars-plan/diff" "polars-plan/diff") ("diagonal_concat") ("date_offset" "polars-plan/date_offset") ("cutqcut" "polars-plan/cutqcut" "polars-ops/cutqcut") ("cumulative_eval") ("cum_agg" "polars-plan/cum_agg") ("cse" "polars-plan/cse") ("concat_str" "polars-plan/concat_str") ("coalesce" "polars-plan/coalesce") ("cloud_write" "cloud") ("chunked_ids" "polars-plan/chunked_ids" "polars-core/chunked_ids") ("binary_encoding" "polars-plan/binary_encoding") ("bigidx" "polars-plan/bigidx") ("asof_join" "polars-plan/asof_join" "polars-time") ("arg_where" "polars-plan/arg_where") ("approx_unique" "polars-plan/approx_unique") ("abs" "polars-plan/abs")))) (s 2) (e (quote (("serde" "polars-plan/serde" "polars-arrow/serde" "polars-core/serde-lazy" "polars-time?/serde" "polars-io/serde" "polars-ops/serde") ("parquet" "polars-core/parquet" "polars-io/parquet" "polars-plan/parquet" "polars-pipe?/parquet") ("ipc" "polars-io/ipc" "polars-plan/ipc" "polars-pipe?/ipc") ("dtype-u8" "polars-plan/dtype-u8" "polars-pipe?/dtype-u8") ("dtype-u16" "polars-plan/dtype-u16" "polars-pipe?/dtype-u16") ("dtype-i8" "polars-plan/dtype-i8" "polars-pipe?/dtype-i8") ("dtype-i16" "polars-plan/dtype-i16" "polars-pipe?/dtype-i16") ("dtype-decimal" "polars-plan/dtype-decimal" "polars-pipe?/dtype-decimal") ("dtype-categorical" "polars-plan/dtype-categorical" "polars-pipe?/dtype-categorical") ("dtype-array" "polars-plan/dtype-array" "polars-pipe?/dtype-array" "polars-ops/dtype-array") ("csv" "polars-io/csv" "polars-plan/csv" "polars-pipe?/csv") ("cross_join" "polars-plan/cross_join" "polars-pipe?/cross_join" "polars-ops/cross_join") ("cloud" "async" "polars-pipe?/cloud") ("async" "polars-plan/async" "polars-io/cloud" "polars-pipe?/async" "streaming"))))))

(define-public crate-polars-lazy-0.33.2 (c (n "polars-lazy") (v "0.33.2") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.33.2") (k 0)) (d (n "polars-core") (r "^0.33.2") (f (quote ("lazy" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.33.2") (f (quote ("lazy"))) (k 0)) (d (n "polars-json") (r "^0.33.2") (o #t) (k 0)) (d (n "polars-ops") (r "^0.33.2") (k 0)) (d (n "polars-pipe") (r "^0.33.2") (o #t) (k 0)) (d (n "polars-plan") (r "^0.33.2") (k 0)) (d (n "polars-time") (r "^0.33.2") (o #t) (k 0)) (d (n "polars-utils") (r "^0.33.2") (k 0)) (d (n "pyo3") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "1kqgcfr4y1rka9qv803hf3yn7chvnb2znhgmqlf9i34472sfl42i") (f (quote (("unique_counts" "polars-plan/unique_counts") ("true_div" "polars-plan/true_div") ("trigonometry" "polars-plan/trigonometry") ("top_k" "polars-plan/top_k") ("timezones" "polars-plan/timezones") ("test_all" "test" "strings" "regex" "ipc" "row_hash" "string_justify" "string_from_radix" "search_sorted" "top_k" "pivot" "semi_anti_join" "cse") ("test" "polars-plan/debugging" "panic_on_schema" "rolling_window" "rank" "round_series" "csv" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("temporal" "dtype-datetime" "dtype-date" "dtype-time" "dtype-duration" "polars-plan/temporal") ("strings" "polars-plan/strings") ("string_justify" "polars-plan/string_justify") ("string_from_radix" "polars-plan/string_from_radix") ("streaming" "chunked_ids" "polars-pipe" "polars-plan/streaming") ("sign" "polars-plan/sign") ("semi_anti_join" "polars-plan/semi_anti_join") ("search_sorted" "polars-plan/search_sorted") ("row_hash" "polars-plan/row_hash") ("round_series" "polars-plan/round_series" "polars-ops/round_series") ("rolling_window" "polars-plan/rolling_window" "polars-time/rolling_window") ("rle" "polars-plan/rle" "polars-ops/rle") ("repeat_by" "polars-plan/repeat_by") ("regex" "polars-plan/regex") ("rank" "polars-plan/rank") ("range" "polars-plan/range") ("random" "polars-plan/random") ("python" "pyo3" "polars-plan/python" "polars-core/python" "polars-io/python") ("propagate_nans" "polars-plan/propagate_nans") ("pivot" "polars-core/rows" "polars-ops/pivot") ("pct_change" "polars-plan/pct_change") ("panic_on_schema" "polars-plan/panic_on_schema") ("object" "polars-plan/object") ("nightly" "polars-core/nightly" "polars-pipe/nightly" "polars-plan/nightly") ("moment" "polars-plan/moment" "polars-ops/moment") ("mode" "polars-plan/mode") ("meta" "polars-plan/meta") ("merge_sorted" "polars-plan/merge_sorted") ("log" "polars-plan/log") ("list_to_struct" "polars-plan/list_to_struct") ("list_take" "polars-ops/list_take" "polars-plan/list_take") ("list_sets" "polars-plan/list_sets" "polars-ops/list_sets") ("list_eval") ("list_count" "polars-ops/list_count" "polars-plan/list_count") ("list_any_all" "polars-ops/list_any_all" "polars-plan/list_any_all") ("json" "polars-io/json" "polars-plan/json" "polars-json") ("is_unique" "polars-plan/is_unique") ("is_last_distinct" "polars-plan/is_last_distinct") ("is_in" "polars-plan/is_in" "polars-ops/is_in") ("is_first_distinct" "polars-plan/is_first_distinct") ("interpolate" "polars-plan/interpolate") ("future") ("fused" "polars-plan/fused" "polars-ops/fused") ("fmt" "polars-core/fmt" "polars-plan/fmt") ("extract_jsonpath" "polars-plan/extract_jsonpath" "polars-ops/extract_jsonpath") ("extract_groups" "polars-plan/extract_groups") ("ewma" "polars-plan/ewma") ("dynamic_group_by" "polars-plan/dynamic_group_by" "polars-time" "temporal") ("dtype-time" "polars-core/dtype-time" "temporal") ("dtype-struct" "polars-plan/dtype-struct") ("dtype-duration" "polars-plan/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-datetime" "polars-plan/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-plan/dtype-date" "polars-time/dtype-date" "temporal") ("dot_diagram" "polars-plan/dot_diagram") ("diff" "polars-plan/diff" "polars-plan/diff") ("diagonal_concat") ("date_offset" "polars-plan/date_offset") ("cutqcut" "polars-plan/cutqcut" "polars-ops/cutqcut") ("cumulative_eval") ("cum_agg" "polars-plan/cum_agg") ("cse" "polars-plan/cse") ("concat_str" "polars-plan/concat_str") ("coalesce" "polars-plan/coalesce") ("cloud_write" "cloud") ("chunked_ids" "polars-plan/chunked_ids" "polars-core/chunked_ids") ("binary_encoding" "polars-plan/binary_encoding") ("bigidx" "polars-plan/bigidx") ("asof_join" "polars-plan/asof_join" "polars-time") ("arg_where" "polars-plan/arg_where") ("approx_unique" "polars-plan/approx_unique") ("abs" "polars-plan/abs")))) (s 2) (e (quote (("serde" "polars-plan/serde" "polars-arrow/serde" "polars-core/serde-lazy" "polars-time?/serde" "polars-io/serde" "polars-ops/serde") ("parquet" "polars-core/parquet" "polars-io/parquet" "polars-plan/parquet" "polars-pipe?/parquet") ("ipc" "polars-io/ipc" "polars-plan/ipc" "polars-pipe?/ipc") ("dtype-u8" "polars-plan/dtype-u8" "polars-pipe?/dtype-u8") ("dtype-u16" "polars-plan/dtype-u16" "polars-pipe?/dtype-u16") ("dtype-i8" "polars-plan/dtype-i8" "polars-pipe?/dtype-i8") ("dtype-i16" "polars-plan/dtype-i16" "polars-pipe?/dtype-i16") ("dtype-decimal" "polars-plan/dtype-decimal" "polars-pipe?/dtype-decimal") ("dtype-categorical" "polars-plan/dtype-categorical" "polars-pipe?/dtype-categorical") ("dtype-array" "polars-plan/dtype-array" "polars-pipe?/dtype-array" "polars-ops/dtype-array") ("csv" "polars-io/csv" "polars-plan/csv" "polars-pipe?/csv") ("cross_join" "polars-plan/cross_join" "polars-pipe?/cross_join" "polars-ops/cross_join") ("cloud" "async" "polars-pipe?/cloud") ("async" "polars-plan/async" "polars-io/cloud" "polars-pipe?/async" "streaming"))))))

(define-public crate-polars-lazy-0.34.0 (c (n "polars-lazy") (v "0.34.0") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.34.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-core") (r "^0.34.0") (f (quote ("lazy" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.34.0") (f (quote ("lazy"))) (k 0)) (d (n "polars-json") (r "^0.34.0") (o #t) (k 0)) (d (n "polars-ops") (r "^0.34.0") (k 0)) (d (n "polars-pipe") (r "^0.34.0") (o #t) (k 0)) (d (n "polars-plan") (r "^0.34.0") (k 0)) (d (n "polars-time") (r "^0.34.0") (o #t) (k 0)) (d (n "polars-utils") (r "^0.34.0") (k 0)) (d (n "pyo3") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.26") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "1zyv7ix3fyxhmgq6q2z8qm7qyw2csdgipwf24dn0dqqc1l67262v") (f (quote (("unique_counts" "polars-plan/unique_counts") ("true_div" "polars-plan/true_div") ("trigonometry" "polars-plan/trigonometry") ("top_k" "polars-plan/top_k") ("timezones" "polars-plan/timezones") ("test_all" "test" "strings" "regex" "ipc" "row_hash" "string_justify" "string_from_radix" "search_sorted" "top_k" "pivot" "semi_anti_join" "cse") ("test" "polars-plan/debugging" "panic_on_schema" "rolling_window" "rank" "round_series" "csv" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("temporal" "dtype-datetime" "dtype-date" "dtype-time" "dtype-duration" "polars-plan/temporal") ("strings" "polars-plan/strings") ("string_justify" "polars-plan/string_justify") ("string_from_radix" "polars-plan/string_from_radix") ("streaming" "chunked_ids" "polars-pipe" "polars-plan/streaming" "polars-ops/chunked_ids") ("sign" "polars-plan/sign") ("semi_anti_join" "polars-plan/semi_anti_join") ("search_sorted" "polars-plan/search_sorted") ("row_hash" "polars-plan/row_hash") ("round_series" "polars-plan/round_series" "polars-ops/round_series") ("rolling_window" "polars-plan/rolling_window" "polars-time/rolling_window") ("rle" "polars-plan/rle" "polars-ops/rle") ("repeat_by" "polars-plan/repeat_by") ("regex" "polars-plan/regex") ("rank" "polars-plan/rank") ("range" "polars-plan/range") ("random" "polars-plan/random") ("python" "pyo3" "polars-plan/python" "polars-core/python" "polars-io/python") ("propagate_nans" "polars-plan/propagate_nans") ("pivot" "polars-core/rows" "polars-ops/pivot") ("peaks" "polars-plan/peaks") ("pct_change" "polars-plan/pct_change") ("panic_on_schema" "polars-plan/panic_on_schema") ("object" "polars-plan/object") ("moment" "polars-plan/moment" "polars-ops/moment") ("mode" "polars-plan/mode") ("meta" "polars-plan/meta") ("merge_sorted" "polars-plan/merge_sorted") ("log" "polars-plan/log") ("list_to_struct" "polars-plan/list_to_struct") ("list_take" "polars-ops/list_take" "polars-plan/list_take") ("list_sets" "polars-plan/list_sets" "polars-ops/list_sets") ("list_sample" "polars-ops/list_sample" "polars-plan/list_sample") ("list_eval") ("list_drop_nulls" "polars-ops/list_drop_nulls" "polars-plan/list_drop_nulls") ("list_count" "polars-ops/list_count" "polars-plan/list_count") ("list_any_all" "polars-ops/list_any_all" "polars-plan/list_any_all") ("json" "polars-io/json" "polars-plan/json" "polars-json") ("is_unique" "polars-plan/is_unique") ("is_last_distinct" "polars-plan/is_last_distinct") ("is_in" "polars-plan/is_in" "polars-ops/is_in") ("is_first_distinct" "polars-plan/is_first_distinct") ("interpolate" "polars-plan/interpolate") ("future") ("fused" "polars-plan/fused" "polars-ops/fused") ("fmt" "polars-core/fmt" "polars-plan/fmt") ("extract_jsonpath" "polars-plan/extract_jsonpath" "polars-ops/extract_jsonpath") ("extract_groups" "polars-plan/extract_groups") ("ewma" "polars-plan/ewma") ("dynamic_group_by" "polars-plan/dynamic_group_by" "polars-time" "temporal") ("dtype-time" "polars-core/dtype-time" "temporal") ("dtype-struct" "polars-plan/dtype-struct") ("dtype-duration" "polars-plan/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-datetime" "polars-plan/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-plan/dtype-date" "polars-time/dtype-date" "temporal") ("dot_diagram" "polars-plan/dot_diagram") ("diff" "polars-plan/diff" "polars-plan/diff") ("diagonal_concat") ("date_offset" "polars-plan/date_offset") ("cutqcut" "polars-plan/cutqcut" "polars-ops/cutqcut") ("cumulative_eval") ("cum_agg" "polars-plan/cum_agg") ("cse" "polars-plan/cse") ("concat_str" "polars-plan/concat_str") ("coalesce" "polars-plan/coalesce") ("cloud_write" "cloud") ("chunked_ids" "polars-plan/chunked_ids" "polars-core/chunked_ids" "polars-ops/chunked_ids") ("binary_encoding" "polars-plan/binary_encoding") ("bigidx" "polars-plan/bigidx") ("asof_join" "polars-plan/asof_join" "polars-time" "polars-ops/asof_join") ("arg_where" "polars-plan/arg_where") ("approx_unique" "polars-plan/approx_unique") ("abs" "polars-plan/abs")))) (s 2) (e (quote (("serde" "polars-plan/serde" "arrow/serde" "polars-core/serde-lazy" "polars-time?/serde" "polars-io/serde" "polars-ops/serde") ("parquet" "polars-core/parquet" "polars-io/parquet" "polars-plan/parquet" "polars-pipe?/parquet") ("nightly" "polars-core/nightly" "polars-pipe?/nightly" "polars-plan/nightly") ("ipc" "polars-io/ipc" "polars-plan/ipc" "polars-pipe?/ipc") ("dtype-u8" "polars-plan/dtype-u8" "polars-pipe?/dtype-u8") ("dtype-u16" "polars-plan/dtype-u16" "polars-pipe?/dtype-u16") ("dtype-i8" "polars-plan/dtype-i8" "polars-pipe?/dtype-i8") ("dtype-i16" "polars-plan/dtype-i16" "polars-pipe?/dtype-i16") ("dtype-decimal" "polars-plan/dtype-decimal" "polars-pipe?/dtype-decimal") ("dtype-categorical" "polars-plan/dtype-categorical" "polars-pipe?/dtype-categorical") ("dtype-array" "polars-plan/dtype-array" "polars-pipe?/dtype-array" "polars-ops/dtype-array") ("csv" "polars-io/csv" "polars-plan/csv" "polars-pipe?/csv") ("cross_join" "polars-plan/cross_join" "polars-pipe?/cross_join" "polars-ops/cross_join") ("cloud" "async" "polars-pipe?/cloud" "polars-plan/cloud" "tokio" "futures") ("async" "polars-plan/async" "polars-io/cloud" "polars-pipe?/async"))))))

(define-public crate-polars-lazy-0.34.1 (c (n "polars-lazy") (v "0.34.1") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.34.1") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-core") (r "^0.34.1") (f (quote ("lazy" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.34.1") (f (quote ("lazy"))) (k 0)) (d (n "polars-json") (r "^0.34.1") (o #t) (k 0)) (d (n "polars-ops") (r "^0.34.1") (k 0)) (d (n "polars-pipe") (r "^0.34.1") (o #t) (k 0)) (d (n "polars-plan") (r "^0.34.1") (k 0)) (d (n "polars-time") (r "^0.34.1") (o #t) (k 0)) (d (n "polars-utils") (r "^0.34.1") (k 0)) (d (n "pyo3") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.26") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "0rd0319f81dngz3cv0k03f5v8yglvqkpfc38189x3z73fsqvpwa5") (f (quote (("unique_counts" "polars-plan/unique_counts") ("true_div" "polars-plan/true_div") ("trigonometry" "polars-plan/trigonometry") ("top_k" "polars-plan/top_k") ("timezones" "polars-plan/timezones") ("test_all" "test" "strings" "regex" "ipc" "row_hash" "string_pad" "string_from_radix" "search_sorted" "top_k" "pivot" "semi_anti_join" "cse") ("test" "polars-plan/debugging" "panic_on_schema" "rolling_window" "rank" "round_series" "csv" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("temporal" "dtype-datetime" "dtype-date" "dtype-time" "dtype-duration" "polars-plan/temporal") ("strings" "polars-plan/strings") ("string_pad" "polars-plan/string_pad") ("string_from_radix" "polars-plan/string_from_radix") ("streaming" "chunked_ids" "polars-pipe" "polars-plan/streaming" "polars-ops/chunked_ids") ("sign" "polars-plan/sign") ("semi_anti_join" "polars-plan/semi_anti_join") ("search_sorted" "polars-plan/search_sorted") ("row_hash" "polars-plan/row_hash") ("round_series" "polars-plan/round_series" "polars-ops/round_series") ("rolling_window" "polars-plan/rolling_window" "polars-time/rolling_window") ("rle" "polars-plan/rle" "polars-ops/rle") ("repeat_by" "polars-plan/repeat_by") ("regex" "polars-plan/regex") ("rank" "polars-plan/rank") ("range" "polars-plan/range") ("random" "polars-plan/random") ("python" "pyo3" "polars-plan/python" "polars-core/python" "polars-io/python") ("propagate_nans" "polars-plan/propagate_nans") ("pivot" "polars-core/rows" "polars-ops/pivot") ("peaks" "polars-plan/peaks") ("pct_change" "polars-plan/pct_change") ("panic_on_schema" "polars-plan/panic_on_schema") ("object" "polars-plan/object") ("moment" "polars-plan/moment" "polars-ops/moment") ("mode" "polars-plan/mode") ("meta" "polars-plan/meta") ("merge_sorted" "polars-plan/merge_sorted") ("log" "polars-plan/log") ("list_to_struct" "polars-plan/list_to_struct") ("list_take" "polars-ops/list_take" "polars-plan/list_take") ("list_sets" "polars-plan/list_sets" "polars-ops/list_sets") ("list_sample" "polars-ops/list_sample" "polars-plan/list_sample") ("list_eval") ("list_drop_nulls" "polars-ops/list_drop_nulls" "polars-plan/list_drop_nulls") ("list_count" "polars-ops/list_count" "polars-plan/list_count") ("list_any_all" "polars-ops/list_any_all" "polars-plan/list_any_all") ("json" "polars-io/json" "polars-plan/json" "polars-json") ("is_unique" "polars-plan/is_unique") ("is_last_distinct" "polars-plan/is_last_distinct") ("is_in" "polars-plan/is_in" "polars-ops/is_in") ("is_first_distinct" "polars-plan/is_first_distinct") ("interpolate" "polars-plan/interpolate") ("future") ("fused" "polars-plan/fused" "polars-ops/fused") ("fmt" "polars-core/fmt" "polars-plan/fmt") ("extract_jsonpath" "polars-plan/extract_jsonpath" "polars-ops/extract_jsonpath") ("extract_groups" "polars-plan/extract_groups") ("ewma" "polars-plan/ewma") ("dynamic_group_by" "polars-plan/dynamic_group_by" "polars-time" "temporal") ("dtype-time" "polars-core/dtype-time" "temporal") ("dtype-struct" "polars-plan/dtype-struct") ("dtype-duration" "polars-plan/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-datetime" "polars-plan/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-plan/dtype-date" "polars-time/dtype-date" "temporal") ("dot_diagram" "polars-plan/dot_diagram") ("diff" "polars-plan/diff" "polars-plan/diff") ("diagonal_concat") ("date_offset" "polars-plan/date_offset") ("cutqcut" "polars-plan/cutqcut" "polars-ops/cutqcut") ("cumulative_eval") ("cum_agg" "polars-plan/cum_agg") ("cse" "polars-plan/cse") ("concat_str" "polars-plan/concat_str") ("coalesce" "polars-plan/coalesce") ("cloud_write" "cloud") ("chunked_ids" "polars-plan/chunked_ids" "polars-core/chunked_ids" "polars-ops/chunked_ids") ("binary_encoding" "polars-plan/binary_encoding") ("bigidx" "polars-plan/bigidx") ("asof_join" "polars-plan/asof_join" "polars-time" "polars-ops/asof_join") ("arg_where" "polars-plan/arg_where") ("approx_unique" "polars-plan/approx_unique") ("abs" "polars-plan/abs")))) (s 2) (e (quote (("serde" "polars-plan/serde" "arrow/serde" "polars-core/serde-lazy" "polars-time?/serde" "polars-io/serde" "polars-ops/serde") ("parquet" "polars-core/parquet" "polars-io/parquet" "polars-plan/parquet" "polars-pipe?/parquet") ("nightly" "polars-core/nightly" "polars-pipe?/nightly" "polars-plan/nightly") ("ipc" "polars-io/ipc" "polars-plan/ipc" "polars-pipe?/ipc") ("dtype-u8" "polars-plan/dtype-u8" "polars-pipe?/dtype-u8") ("dtype-u16" "polars-plan/dtype-u16" "polars-pipe?/dtype-u16") ("dtype-i8" "polars-plan/dtype-i8" "polars-pipe?/dtype-i8") ("dtype-i16" "polars-plan/dtype-i16" "polars-pipe?/dtype-i16") ("dtype-decimal" "polars-plan/dtype-decimal" "polars-pipe?/dtype-decimal") ("dtype-categorical" "polars-plan/dtype-categorical" "polars-pipe?/dtype-categorical") ("dtype-array" "polars-plan/dtype-array" "polars-pipe?/dtype-array" "polars-ops/dtype-array") ("csv" "polars-io/csv" "polars-plan/csv" "polars-pipe?/csv") ("cross_join" "polars-plan/cross_join" "polars-pipe?/cross_join" "polars-ops/cross_join") ("cloud" "async" "polars-pipe?/cloud" "polars-plan/cloud" "tokio" "futures") ("async" "polars-plan/async" "polars-io/cloud" "polars-pipe?/async"))))))

(define-public crate-polars-lazy-0.34.2 (c (n "polars-lazy") (v "0.34.2") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.34.2") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-core") (r "^0.34.2") (f (quote ("lazy" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.34.2") (f (quote ("lazy"))) (k 0)) (d (n "polars-json") (r "^0.34.2") (o #t) (k 0)) (d (n "polars-ops") (r "^0.34.2") (k 0)) (d (n "polars-pipe") (r "^0.34.2") (o #t) (k 0)) (d (n "polars-plan") (r "^0.34.2") (k 0)) (d (n "polars-time") (r "^0.34.2") (o #t) (k 0)) (d (n "polars-utils") (r "^0.34.2") (k 0)) (d (n "pyo3") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.26") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "1isq15n6040y0djnnvpxvk8iycg78h1hj44m1pw0c0d23kdc5q87") (f (quote (("unique_counts" "polars-plan/unique_counts") ("true_div" "polars-plan/true_div") ("trigonometry" "polars-plan/trigonometry") ("top_k" "polars-plan/top_k") ("timezones" "polars-plan/timezones") ("test_all" "test" "strings" "regex" "ipc" "row_hash" "string_pad" "string_from_radix" "search_sorted" "top_k" "pivot" "semi_anti_join" "cse") ("test" "polars-plan/debugging" "panic_on_schema" "rolling_window" "rank" "round_series" "csv" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("temporal" "dtype-datetime" "dtype-date" "dtype-time" "dtype-duration" "polars-plan/temporal") ("strings" "polars-plan/strings") ("string_pad" "polars-plan/string_pad") ("string_from_radix" "polars-plan/string_from_radix") ("streaming" "chunked_ids" "polars-pipe" "polars-plan/streaming" "polars-ops/chunked_ids") ("sign" "polars-plan/sign") ("semi_anti_join" "polars-plan/semi_anti_join") ("search_sorted" "polars-plan/search_sorted") ("row_hash" "polars-plan/row_hash") ("round_series" "polars-plan/round_series" "polars-ops/round_series") ("rolling_window" "polars-plan/rolling_window" "polars-time/rolling_window") ("rle" "polars-plan/rle" "polars-ops/rle") ("repeat_by" "polars-plan/repeat_by") ("regex" "polars-plan/regex") ("rank" "polars-plan/rank") ("range" "polars-plan/range") ("random" "polars-plan/random") ("python" "pyo3" "polars-plan/python" "polars-core/python" "polars-io/python") ("propagate_nans" "polars-plan/propagate_nans") ("pivot" "polars-core/rows" "polars-ops/pivot") ("peaks" "polars-plan/peaks") ("pct_change" "polars-plan/pct_change") ("panic_on_schema" "polars-plan/panic_on_schema") ("object" "polars-plan/object") ("moment" "polars-plan/moment" "polars-ops/moment") ("mode" "polars-plan/mode") ("meta" "polars-plan/meta") ("merge_sorted" "polars-plan/merge_sorted") ("log" "polars-plan/log") ("list_to_struct" "polars-plan/list_to_struct") ("list_take" "polars-ops/list_take" "polars-plan/list_take") ("list_sets" "polars-plan/list_sets" "polars-ops/list_sets") ("list_sample" "polars-ops/list_sample" "polars-plan/list_sample") ("list_eval") ("list_drop_nulls" "polars-ops/list_drop_nulls" "polars-plan/list_drop_nulls") ("list_count" "polars-ops/list_count" "polars-plan/list_count") ("list_any_all" "polars-ops/list_any_all" "polars-plan/list_any_all") ("json" "polars-io/json" "polars-plan/json" "polars-json") ("is_unique" "polars-plan/is_unique") ("is_last_distinct" "polars-plan/is_last_distinct") ("is_in" "polars-plan/is_in" "polars-ops/is_in") ("is_first_distinct" "polars-plan/is_first_distinct") ("interpolate" "polars-plan/interpolate") ("future") ("fused" "polars-plan/fused" "polars-ops/fused") ("fmt" "polars-core/fmt" "polars-plan/fmt") ("extract_jsonpath" "polars-plan/extract_jsonpath" "polars-ops/extract_jsonpath") ("extract_groups" "polars-plan/extract_groups") ("ewma" "polars-plan/ewma") ("dynamic_group_by" "polars-plan/dynamic_group_by" "polars-time" "temporal") ("dtype-time" "polars-core/dtype-time" "temporal") ("dtype-struct" "polars-plan/dtype-struct") ("dtype-duration" "polars-plan/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-datetime" "polars-plan/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-plan/dtype-date" "polars-time/dtype-date" "temporal") ("dot_diagram" "polars-plan/dot_diagram") ("diff" "polars-plan/diff" "polars-plan/diff") ("diagonal_concat") ("date_offset" "polars-plan/date_offset") ("cutqcut" "polars-plan/cutqcut" "polars-ops/cutqcut") ("cumulative_eval") ("cum_agg" "polars-plan/cum_agg") ("cse" "polars-plan/cse") ("concat_str" "polars-plan/concat_str") ("coalesce" "polars-plan/coalesce") ("cloud_write" "cloud") ("chunked_ids" "polars-plan/chunked_ids" "polars-core/chunked_ids" "polars-ops/chunked_ids") ("binary_encoding" "polars-plan/binary_encoding") ("bigidx" "polars-plan/bigidx") ("asof_join" "polars-plan/asof_join" "polars-time" "polars-ops/asof_join") ("arg_where" "polars-plan/arg_where") ("approx_unique" "polars-plan/approx_unique") ("abs" "polars-plan/abs")))) (s 2) (e (quote (("serde" "polars-plan/serde" "arrow/serde" "polars-core/serde-lazy" "polars-time?/serde" "polars-io/serde" "polars-ops/serde") ("parquet" "polars-core/parquet" "polars-io/parquet" "polars-plan/parquet" "polars-pipe?/parquet") ("nightly" "polars-core/nightly" "polars-pipe?/nightly" "polars-plan/nightly") ("ipc" "polars-io/ipc" "polars-plan/ipc" "polars-pipe?/ipc") ("dtype-u8" "polars-plan/dtype-u8" "polars-pipe?/dtype-u8") ("dtype-u16" "polars-plan/dtype-u16" "polars-pipe?/dtype-u16") ("dtype-i8" "polars-plan/dtype-i8" "polars-pipe?/dtype-i8") ("dtype-i16" "polars-plan/dtype-i16" "polars-pipe?/dtype-i16") ("dtype-decimal" "polars-plan/dtype-decimal" "polars-pipe?/dtype-decimal") ("dtype-categorical" "polars-plan/dtype-categorical" "polars-pipe?/dtype-categorical") ("dtype-array" "polars-plan/dtype-array" "polars-pipe?/dtype-array" "polars-ops/dtype-array") ("csv" "polars-io/csv" "polars-plan/csv" "polars-pipe?/csv") ("cross_join" "polars-plan/cross_join" "polars-pipe?/cross_join" "polars-ops/cross_join") ("cloud" "async" "polars-pipe?/cloud" "polars-plan/cloud" "tokio" "futures") ("async" "polars-plan/async" "polars-io/cloud" "polars-pipe?/async"))))))

(define-public crate-polars-lazy-0.35.0 (c (n "polars-lazy") (v "0.35.0") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.35.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-core") (r "^0.35.0") (f (quote ("lazy" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.35.0") (f (quote ("lazy"))) (k 0)) (d (n "polars-json") (r "^0.35.0") (o #t) (k 0)) (d (n "polars-ops") (r "^0.35.0") (k 0)) (d (n "polars-pipe") (r "^0.35.0") (o #t) (k 0)) (d (n "polars-plan") (r "^0.35.0") (k 0)) (d (n "polars-time") (r "^0.35.0") (o #t) (k 0)) (d (n "polars-utils") (r "^0.35.0") (k 0)) (d (n "pyo3") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.26") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "1vy67ks80gwc437kpz0j5kyhc2az2nmm8zbqr0j59v0d7na7s0al") (f (quote (("unique_counts" "polars-plan/unique_counts") ("true_div" "polars-plan/true_div") ("trigonometry" "polars-plan/trigonometry") ("top_k" "polars-plan/top_k") ("timezones" "polars-plan/timezones") ("test_all" "test" "strings" "regex" "ipc" "row_hash" "string_pad" "string_to_integer" "search_sorted" "top_k" "pivot" "semi_anti_join" "cse") ("test" "polars-plan/debugging" "panic_on_schema" "rolling_window" "rank" "round_series" "csv" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("temporal" "dtype-datetime" "dtype-date" "dtype-time" "dtype-duration" "polars-plan/temporal") ("strings" "polars-plan/strings") ("string_to_integer" "polars-plan/string_to_integer") ("string_pad" "polars-plan/string_pad") ("string_encoding" "polars-plan/string_encoding") ("streaming" "chunked_ids" "polars-pipe" "polars-plan/streaming" "polars-ops/chunked_ids") ("sign" "polars-plan/sign") ("semi_anti_join" "polars-plan/semi_anti_join") ("search_sorted" "polars-plan/search_sorted") ("row_hash" "polars-plan/row_hash") ("round_series" "polars-plan/round_series" "polars-ops/round_series") ("rolling_window" "polars-plan/rolling_window" "polars-time/rolling_window") ("rle" "polars-plan/rle" "polars-ops/rle") ("repeat_by" "polars-plan/repeat_by") ("regex" "polars-plan/regex") ("rank" "polars-plan/rank") ("range" "polars-plan/range") ("random" "polars-plan/random") ("python" "pyo3" "polars-plan/python" "polars-core/python" "polars-io/python") ("propagate_nans" "polars-plan/propagate_nans") ("pivot" "polars-core/rows" "polars-ops/pivot") ("peaks" "polars-plan/peaks") ("pct_change" "polars-plan/pct_change") ("panic_on_schema" "polars-plan/panic_on_schema") ("object" "polars-plan/object") ("moment" "polars-plan/moment" "polars-ops/moment") ("mode" "polars-plan/mode") ("meta" "polars-plan/meta") ("merge_sorted" "polars-plan/merge_sorted") ("log" "polars-plan/log") ("list_to_struct" "polars-plan/list_to_struct") ("list_sets" "polars-plan/list_sets" "polars-ops/list_sets") ("list_sample" "polars-ops/list_sample" "polars-plan/list_sample") ("list_gather" "polars-ops/list_gather" "polars-plan/list_gather") ("list_eval") ("list_drop_nulls" "polars-ops/list_drop_nulls" "polars-plan/list_drop_nulls") ("list_count" "polars-ops/list_count" "polars-plan/list_count") ("list_any_all" "polars-ops/list_any_all" "polars-plan/list_any_all") ("json" "polars-io/json" "polars-plan/json" "polars-json") ("is_unique" "polars-plan/is_unique") ("is_last_distinct" "polars-plan/is_last_distinct") ("is_in" "polars-plan/is_in" "polars-ops/is_in") ("is_first_distinct" "polars-plan/is_first_distinct") ("interpolate" "polars-plan/interpolate") ("future") ("fused" "polars-plan/fused" "polars-ops/fused") ("fmt" "polars-core/fmt" "polars-plan/fmt") ("extract_jsonpath" "polars-plan/extract_jsonpath" "polars-ops/extract_jsonpath") ("extract_groups" "polars-plan/extract_groups") ("ewma" "polars-plan/ewma") ("dynamic_group_by" "polars-plan/dynamic_group_by" "polars-time" "temporal") ("dtype-time" "polars-core/dtype-time" "temporal") ("dtype-struct" "polars-plan/dtype-struct") ("dtype-duration" "polars-plan/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-datetime" "polars-plan/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-plan/dtype-date" "polars-time/dtype-date" "temporal") ("dot_diagram" "polars-plan/dot_diagram") ("diff" "polars-plan/diff" "polars-plan/diff") ("diagonal_concat") ("date_offset" "polars-plan/date_offset") ("cutqcut" "polars-plan/cutqcut" "polars-ops/cutqcut") ("cumulative_eval") ("cum_agg" "polars-plan/cum_agg") ("cse" "polars-plan/cse") ("cov" "polars-ops/cov" "polars-plan/cov") ("concat_str" "polars-plan/concat_str") ("coalesce" "polars-plan/coalesce") ("cloud_write" "cloud") ("chunked_ids" "polars-plan/chunked_ids" "polars-core/chunked_ids" "polars-ops/chunked_ids") ("binary_encoding" "polars-plan/binary_encoding") ("bigidx" "polars-plan/bigidx") ("asof_join" "polars-plan/asof_join" "polars-time" "polars-ops/asof_join") ("arg_where" "polars-plan/arg_where") ("approx_unique" "polars-plan/approx_unique") ("abs" "polars-plan/abs")))) (s 2) (e (quote (("serde" "polars-plan/serde" "arrow/serde" "polars-core/serde-lazy" "polars-time?/serde" "polars-io/serde" "polars-ops/serde") ("parquet" "polars-io/parquet" "polars-plan/parquet" "polars-pipe?/parquet") ("nightly" "polars-core/nightly" "polars-pipe?/nightly" "polars-plan/nightly") ("ipc" "polars-io/ipc" "polars-plan/ipc" "polars-pipe?/ipc") ("dtype-u8" "polars-plan/dtype-u8" "polars-pipe?/dtype-u8") ("dtype-u16" "polars-plan/dtype-u16" "polars-pipe?/dtype-u16") ("dtype-i8" "polars-plan/dtype-i8" "polars-pipe?/dtype-i8") ("dtype-i16" "polars-plan/dtype-i16" "polars-pipe?/dtype-i16") ("dtype-decimal" "polars-plan/dtype-decimal" "polars-pipe?/dtype-decimal") ("dtype-categorical" "polars-plan/dtype-categorical" "polars-pipe?/dtype-categorical") ("dtype-array" "polars-plan/dtype-array" "polars-pipe?/dtype-array" "polars-ops/dtype-array") ("csv" "polars-io/csv" "polars-plan/csv" "polars-pipe?/csv") ("cross_join" "polars-plan/cross_join" "polars-pipe?/cross_join" "polars-ops/cross_join") ("cloud" "async" "polars-pipe?/cloud" "polars-plan/cloud" "tokio" "futures") ("async" "polars-plan/async" "polars-io/cloud" "polars-pipe?/async"))))))

(define-public crate-polars-lazy-0.35.1 (c (n "polars-lazy") (v "0.35.1") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.35.1") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-core") (r "^0.35.1") (f (quote ("lazy" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.35.1") (f (quote ("lazy"))) (k 0)) (d (n "polars-json") (r "^0.35.1") (o #t) (k 0)) (d (n "polars-ops") (r "^0.35.1") (k 0)) (d (n "polars-pipe") (r "^0.35.1") (o #t) (k 0)) (d (n "polars-plan") (r "^0.35.1") (k 0)) (d (n "polars-time") (r "^0.35.1") (o #t) (k 0)) (d (n "polars-utils") (r "^0.35.1") (k 0)) (d (n "pyo3") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.26") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "10fjfv10i5n6idxfpxn35v2wpsvl63vngkmv4p432g7jqgs5hwlv") (f (quote (("unique_counts" "polars-plan/unique_counts") ("true_div" "polars-plan/true_div") ("trigonometry" "polars-plan/trigonometry") ("top_k" "polars-plan/top_k") ("timezones" "polars-plan/timezones") ("test_all" "test" "strings" "regex" "ipc" "row_hash" "string_pad" "string_to_integer" "search_sorted" "top_k" "pivot" "semi_anti_join" "cse") ("test" "polars-plan/debugging" "panic_on_schema" "rolling_window" "rank" "round_series" "csv" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("temporal" "dtype-datetime" "dtype-date" "dtype-time" "dtype-duration" "polars-plan/temporal") ("strings" "polars-plan/strings") ("string_to_integer" "polars-plan/string_to_integer") ("string_pad" "polars-plan/string_pad") ("string_encoding" "polars-plan/string_encoding") ("streaming" "chunked_ids" "polars-pipe" "polars-plan/streaming" "polars-ops/chunked_ids") ("sign" "polars-plan/sign") ("semi_anti_join" "polars-plan/semi_anti_join") ("search_sorted" "polars-plan/search_sorted") ("row_hash" "polars-plan/row_hash") ("round_series" "polars-plan/round_series" "polars-ops/round_series") ("rolling_window" "polars-plan/rolling_window" "polars-time/rolling_window") ("rle" "polars-plan/rle" "polars-ops/rle") ("repeat_by" "polars-plan/repeat_by") ("regex" "polars-plan/regex") ("rank" "polars-plan/rank") ("range" "polars-plan/range") ("random" "polars-plan/random") ("python" "pyo3" "polars-plan/python" "polars-core/python" "polars-io/python") ("propagate_nans" "polars-plan/propagate_nans") ("pivot" "polars-core/rows" "polars-ops/pivot") ("peaks" "polars-plan/peaks") ("pct_change" "polars-plan/pct_change") ("panic_on_schema" "polars-plan/panic_on_schema") ("object" "polars-plan/object") ("moment" "polars-plan/moment" "polars-ops/moment") ("mode" "polars-plan/mode") ("meta" "polars-plan/meta") ("merge_sorted" "polars-plan/merge_sorted") ("log" "polars-plan/log") ("list_to_struct" "polars-plan/list_to_struct") ("list_sets" "polars-plan/list_sets" "polars-ops/list_sets") ("list_sample" "polars-ops/list_sample" "polars-plan/list_sample") ("list_gather" "polars-ops/list_gather" "polars-plan/list_gather") ("list_eval") ("list_drop_nulls" "polars-ops/list_drop_nulls" "polars-plan/list_drop_nulls") ("list_count" "polars-ops/list_count" "polars-plan/list_count") ("list_any_all" "polars-ops/list_any_all" "polars-plan/list_any_all") ("json" "polars-io/json" "polars-plan/json" "polars-json") ("is_unique" "polars-plan/is_unique") ("is_last_distinct" "polars-plan/is_last_distinct") ("is_in" "polars-plan/is_in" "polars-ops/is_in") ("is_first_distinct" "polars-plan/is_first_distinct") ("interpolate" "polars-plan/interpolate") ("future") ("fused" "polars-plan/fused" "polars-ops/fused") ("fmt" "polars-core/fmt" "polars-plan/fmt") ("extract_jsonpath" "polars-plan/extract_jsonpath" "polars-ops/extract_jsonpath") ("extract_groups" "polars-plan/extract_groups") ("ewma" "polars-plan/ewma") ("dynamic_group_by" "polars-plan/dynamic_group_by" "polars-time" "temporal") ("dtype-time" "polars-core/dtype-time" "temporal") ("dtype-struct" "polars-plan/dtype-struct") ("dtype-duration" "polars-plan/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-datetime" "polars-plan/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-plan/dtype-date" "polars-time/dtype-date" "temporal") ("dot_diagram" "polars-plan/dot_diagram") ("diff" "polars-plan/diff" "polars-plan/diff") ("diagonal_concat") ("date_offset" "polars-plan/date_offset") ("cutqcut" "polars-plan/cutqcut" "polars-ops/cutqcut") ("cumulative_eval") ("cum_agg" "polars-plan/cum_agg") ("cse" "polars-plan/cse") ("cov" "polars-ops/cov" "polars-plan/cov") ("concat_str" "polars-plan/concat_str") ("coalesce" "polars-plan/coalesce") ("cloud_write" "cloud") ("chunked_ids" "polars-plan/chunked_ids" "polars-core/chunked_ids" "polars-ops/chunked_ids") ("binary_encoding" "polars-plan/binary_encoding") ("bigidx" "polars-plan/bigidx") ("asof_join" "polars-plan/asof_join" "polars-time" "polars-ops/asof_join") ("arg_where" "polars-plan/arg_where") ("approx_unique" "polars-plan/approx_unique") ("abs" "polars-plan/abs")))) (s 2) (e (quote (("serde" "polars-plan/serde" "arrow/serde" "polars-core/serde-lazy" "polars-time?/serde" "polars-io/serde" "polars-ops/serde") ("parquet" "polars-io/parquet" "polars-plan/parquet" "polars-pipe?/parquet") ("nightly" "polars-core/nightly" "polars-pipe?/nightly" "polars-plan/nightly") ("ipc" "polars-io/ipc" "polars-plan/ipc" "polars-pipe?/ipc") ("dtype-u8" "polars-plan/dtype-u8" "polars-pipe?/dtype-u8") ("dtype-u16" "polars-plan/dtype-u16" "polars-pipe?/dtype-u16") ("dtype-i8" "polars-plan/dtype-i8" "polars-pipe?/dtype-i8") ("dtype-i16" "polars-plan/dtype-i16" "polars-pipe?/dtype-i16") ("dtype-decimal" "polars-plan/dtype-decimal" "polars-pipe?/dtype-decimal") ("dtype-categorical" "polars-plan/dtype-categorical" "polars-pipe?/dtype-categorical") ("dtype-array" "polars-plan/dtype-array" "polars-pipe?/dtype-array" "polars-ops/dtype-array") ("csv" "polars-io/csv" "polars-plan/csv" "polars-pipe?/csv") ("cross_join" "polars-plan/cross_join" "polars-pipe?/cross_join" "polars-ops/cross_join") ("cloud" "async" "polars-pipe?/cloud" "polars-plan/cloud" "tokio" "futures") ("async" "polars-plan/async" "polars-io/cloud" "polars-pipe?/async"))))))

(define-public crate-polars-lazy-0.35.2 (c (n "polars-lazy") (v "0.35.2") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.35.2") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-core") (r "^0.35.2") (f (quote ("lazy" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.35.2") (f (quote ("lazy"))) (k 0)) (d (n "polars-json") (r "^0.35.2") (o #t) (k 0)) (d (n "polars-ops") (r "^0.35.2") (k 0)) (d (n "polars-pipe") (r "^0.35.2") (o #t) (k 0)) (d (n "polars-plan") (r "^0.35.2") (k 0)) (d (n "polars-time") (r "^0.35.2") (o #t) (k 0)) (d (n "polars-utils") (r "^0.35.2") (k 0)) (d (n "pyo3") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.26") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "048gkck8vd2jgfgxmrg4rnv2lwqri70wfln5hnh3zg318kh7j37j") (f (quote (("unique_counts" "polars-plan/unique_counts") ("true_div" "polars-plan/true_div") ("trigonometry" "polars-plan/trigonometry") ("top_k" "polars-plan/top_k") ("timezones" "polars-plan/timezones") ("test_all" "test" "strings" "regex" "ipc" "row_hash" "string_pad" "string_to_integer" "search_sorted" "top_k" "pivot" "semi_anti_join" "cse") ("test" "polars-plan/debugging" "panic_on_schema" "rolling_window" "rank" "round_series" "csv" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("temporal" "dtype-datetime" "dtype-date" "dtype-time" "dtype-duration" "polars-plan/temporal") ("strings" "polars-plan/strings") ("string_to_integer" "polars-plan/string_to_integer") ("string_pad" "polars-plan/string_pad") ("string_encoding" "polars-plan/string_encoding") ("streaming" "chunked_ids" "polars-pipe" "polars-plan/streaming" "polars-ops/chunked_ids") ("sign" "polars-plan/sign") ("semi_anti_join" "polars-plan/semi_anti_join") ("search_sorted" "polars-plan/search_sorted") ("row_hash" "polars-plan/row_hash") ("round_series" "polars-plan/round_series" "polars-ops/round_series") ("rolling_window" "polars-plan/rolling_window" "polars-time/rolling_window") ("rle" "polars-plan/rle" "polars-ops/rle") ("repeat_by" "polars-plan/repeat_by") ("regex" "polars-plan/regex") ("rank" "polars-plan/rank") ("range" "polars-plan/range") ("random" "polars-plan/random") ("python" "pyo3" "polars-plan/python" "polars-core/python" "polars-io/python") ("propagate_nans" "polars-plan/propagate_nans") ("pivot" "polars-core/rows" "polars-ops/pivot") ("peaks" "polars-plan/peaks") ("pct_change" "polars-plan/pct_change") ("panic_on_schema" "polars-plan/panic_on_schema") ("object" "polars-plan/object") ("moment" "polars-plan/moment" "polars-ops/moment") ("mode" "polars-plan/mode") ("meta" "polars-plan/meta") ("merge_sorted" "polars-plan/merge_sorted") ("log" "polars-plan/log") ("list_to_struct" "polars-plan/list_to_struct") ("list_sets" "polars-plan/list_sets" "polars-ops/list_sets") ("list_sample" "polars-ops/list_sample" "polars-plan/list_sample") ("list_gather" "polars-ops/list_gather" "polars-plan/list_gather") ("list_eval") ("list_drop_nulls" "polars-ops/list_drop_nulls" "polars-plan/list_drop_nulls") ("list_count" "polars-ops/list_count" "polars-plan/list_count") ("list_any_all" "polars-ops/list_any_all" "polars-plan/list_any_all") ("json" "polars-io/json" "polars-plan/json" "polars-json") ("is_unique" "polars-plan/is_unique") ("is_last_distinct" "polars-plan/is_last_distinct") ("is_in" "polars-plan/is_in" "polars-ops/is_in") ("is_first_distinct" "polars-plan/is_first_distinct") ("interpolate" "polars-plan/interpolate") ("future") ("fused" "polars-plan/fused" "polars-ops/fused") ("fmt" "polars-core/fmt" "polars-plan/fmt") ("extract_jsonpath" "polars-plan/extract_jsonpath" "polars-ops/extract_jsonpath") ("extract_groups" "polars-plan/extract_groups") ("ewma" "polars-plan/ewma") ("dynamic_group_by" "polars-plan/dynamic_group_by" "polars-time" "temporal") ("dtype-time" "polars-core/dtype-time" "temporal") ("dtype-struct" "polars-plan/dtype-struct") ("dtype-duration" "polars-plan/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-datetime" "polars-plan/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-plan/dtype-date" "polars-time/dtype-date" "temporal") ("dot_diagram" "polars-plan/dot_diagram") ("diff" "polars-plan/diff" "polars-plan/diff") ("diagonal_concat") ("date_offset" "polars-plan/date_offset") ("cutqcut" "polars-plan/cutqcut" "polars-ops/cutqcut") ("cumulative_eval") ("cum_agg" "polars-plan/cum_agg") ("cse" "polars-plan/cse") ("cov" "polars-ops/cov" "polars-plan/cov") ("concat_str" "polars-plan/concat_str") ("coalesce" "polars-plan/coalesce") ("cloud_write" "cloud") ("chunked_ids" "polars-plan/chunked_ids" "polars-core/chunked_ids" "polars-ops/chunked_ids") ("binary_encoding" "polars-plan/binary_encoding") ("bigidx" "polars-plan/bigidx") ("asof_join" "polars-plan/asof_join" "polars-time" "polars-ops/asof_join") ("arg_where" "polars-plan/arg_where") ("approx_unique" "polars-plan/approx_unique") ("abs" "polars-plan/abs")))) (s 2) (e (quote (("serde" "polars-plan/serde" "arrow/serde" "polars-core/serde-lazy" "polars-time?/serde" "polars-io/serde" "polars-ops/serde") ("parquet" "polars-io/parquet" "polars-plan/parquet" "polars-pipe?/parquet") ("nightly" "polars-core/nightly" "polars-pipe?/nightly" "polars-plan/nightly") ("ipc" "polars-io/ipc" "polars-plan/ipc" "polars-pipe?/ipc") ("dtype-u8" "polars-plan/dtype-u8" "polars-pipe?/dtype-u8") ("dtype-u16" "polars-plan/dtype-u16" "polars-pipe?/dtype-u16") ("dtype-i8" "polars-plan/dtype-i8" "polars-pipe?/dtype-i8") ("dtype-i16" "polars-plan/dtype-i16" "polars-pipe?/dtype-i16") ("dtype-decimal" "polars-plan/dtype-decimal" "polars-pipe?/dtype-decimal") ("dtype-categorical" "polars-plan/dtype-categorical" "polars-pipe?/dtype-categorical") ("dtype-array" "polars-plan/dtype-array" "polars-pipe?/dtype-array" "polars-ops/dtype-array") ("csv" "polars-io/csv" "polars-plan/csv" "polars-pipe?/csv") ("cross_join" "polars-plan/cross_join" "polars-pipe?/cross_join" "polars-ops/cross_join") ("cloud" "async" "polars-pipe?/cloud" "polars-plan/cloud" "tokio" "futures") ("async" "polars-plan/async" "polars-io/cloud" "polars-pipe?/async"))))))

(define-public crate-polars-lazy-0.35.3 (c (n "polars-lazy") (v "0.35.3") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.35.3") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-core") (r "^0.35.3") (f (quote ("lazy" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.35.3") (f (quote ("lazy"))) (k 0)) (d (n "polars-json") (r "^0.35.3") (o #t) (k 0)) (d (n "polars-ops") (r "^0.35.3") (k 0)) (d (n "polars-pipe") (r "^0.35.3") (o #t) (k 0)) (d (n "polars-plan") (r "^0.35.3") (k 0)) (d (n "polars-time") (r "^0.35.3") (o #t) (k 0)) (d (n "polars-utils") (r "^0.35.3") (k 0)) (d (n "pyo3") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.26") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "0j3qpll9fb72xvq3wffspj06cj92ljm0x1yqbg9dxw65gqmb83x0") (f (quote (("unique_counts" "polars-plan/unique_counts") ("true_div" "polars-plan/true_div") ("trigonometry" "polars-plan/trigonometry") ("top_k" "polars-plan/top_k") ("timezones" "polars-plan/timezones") ("test_all" "test" "strings" "regex" "ipc" "row_hash" "string_pad" "string_to_integer" "search_sorted" "top_k" "pivot" "semi_anti_join" "cse") ("test" "polars-plan/debugging" "panic_on_schema" "rolling_window" "rank" "round_series" "csv" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("temporal" "dtype-datetime" "dtype-date" "dtype-time" "dtype-duration" "polars-plan/temporal") ("strings" "polars-plan/strings") ("string_to_integer" "polars-plan/string_to_integer") ("string_pad" "polars-plan/string_pad") ("string_encoding" "polars-plan/string_encoding") ("streaming" "chunked_ids" "polars-pipe" "polars-plan/streaming" "polars-ops/chunked_ids") ("sign" "polars-plan/sign") ("semi_anti_join" "polars-plan/semi_anti_join") ("search_sorted" "polars-plan/search_sorted") ("row_hash" "polars-plan/row_hash") ("round_series" "polars-plan/round_series" "polars-ops/round_series") ("rolling_window" "polars-plan/rolling_window" "polars-time/rolling_window") ("rle" "polars-plan/rle" "polars-ops/rle") ("repeat_by" "polars-plan/repeat_by") ("regex" "polars-plan/regex") ("rank" "polars-plan/rank") ("range" "polars-plan/range") ("random" "polars-plan/random") ("python" "pyo3" "polars-plan/python" "polars-core/python" "polars-io/python") ("propagate_nans" "polars-plan/propagate_nans") ("pivot" "polars-core/rows" "polars-ops/pivot") ("peaks" "polars-plan/peaks") ("pct_change" "polars-plan/pct_change") ("panic_on_schema" "polars-plan/panic_on_schema") ("object" "polars-plan/object") ("moment" "polars-plan/moment" "polars-ops/moment") ("mode" "polars-plan/mode") ("meta" "polars-plan/meta") ("merge_sorted" "polars-plan/merge_sorted") ("log" "polars-plan/log") ("list_to_struct" "polars-plan/list_to_struct") ("list_sets" "polars-plan/list_sets" "polars-ops/list_sets") ("list_sample" "polars-ops/list_sample" "polars-plan/list_sample") ("list_gather" "polars-ops/list_gather" "polars-plan/list_gather") ("list_eval") ("list_drop_nulls" "polars-ops/list_drop_nulls" "polars-plan/list_drop_nulls") ("list_count" "polars-ops/list_count" "polars-plan/list_count") ("list_any_all" "polars-ops/list_any_all" "polars-plan/list_any_all") ("json" "polars-io/json" "polars-plan/json" "polars-json") ("is_unique" "polars-plan/is_unique") ("is_last_distinct" "polars-plan/is_last_distinct") ("is_in" "polars-plan/is_in" "polars-ops/is_in") ("is_first_distinct" "polars-plan/is_first_distinct") ("interpolate" "polars-plan/interpolate") ("future") ("fused" "polars-plan/fused" "polars-ops/fused") ("fmt" "polars-core/fmt" "polars-plan/fmt") ("extract_jsonpath" "polars-plan/extract_jsonpath" "polars-ops/extract_jsonpath") ("extract_groups" "polars-plan/extract_groups") ("ewma" "polars-plan/ewma") ("dynamic_group_by" "polars-plan/dynamic_group_by" "polars-time" "temporal") ("dtype-time" "polars-core/dtype-time" "temporal") ("dtype-struct" "polars-plan/dtype-struct") ("dtype-duration" "polars-plan/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-datetime" "polars-plan/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-plan/dtype-date" "polars-time/dtype-date" "temporal") ("dot_diagram" "polars-plan/dot_diagram") ("diff" "polars-plan/diff" "polars-plan/diff") ("diagonal_concat") ("date_offset" "polars-plan/date_offset") ("cutqcut" "polars-plan/cutqcut" "polars-ops/cutqcut") ("cumulative_eval") ("cum_agg" "polars-plan/cum_agg") ("cse" "polars-plan/cse") ("cov" "polars-ops/cov" "polars-plan/cov") ("concat_str" "polars-plan/concat_str") ("coalesce" "polars-plan/coalesce") ("cloud_write" "cloud") ("chunked_ids" "polars-plan/chunked_ids" "polars-core/chunked_ids" "polars-ops/chunked_ids") ("binary_encoding" "polars-plan/binary_encoding") ("bigidx" "polars-plan/bigidx") ("asof_join" "polars-plan/asof_join" "polars-time" "polars-ops/asof_join") ("arg_where" "polars-plan/arg_where") ("approx_unique" "polars-plan/approx_unique") ("abs" "polars-plan/abs")))) (y #t) (s 2) (e (quote (("serde" "polars-plan/serde" "arrow/serde" "polars-core/serde-lazy" "polars-time?/serde" "polars-io/serde" "polars-ops/serde") ("parquet" "polars-io/parquet" "polars-plan/parquet" "polars-pipe?/parquet") ("nightly" "polars-core/nightly" "polars-pipe?/nightly" "polars-plan/nightly") ("ipc" "polars-io/ipc" "polars-plan/ipc" "polars-pipe?/ipc") ("dtype-u8" "polars-plan/dtype-u8" "polars-pipe?/dtype-u8") ("dtype-u16" "polars-plan/dtype-u16" "polars-pipe?/dtype-u16") ("dtype-i8" "polars-plan/dtype-i8" "polars-pipe?/dtype-i8") ("dtype-i16" "polars-plan/dtype-i16" "polars-pipe?/dtype-i16") ("dtype-decimal" "polars-plan/dtype-decimal" "polars-pipe?/dtype-decimal") ("dtype-categorical" "polars-plan/dtype-categorical" "polars-pipe?/dtype-categorical") ("dtype-array" "polars-plan/dtype-array" "polars-pipe?/dtype-array" "polars-ops/dtype-array") ("csv" "polars-io/csv" "polars-plan/csv" "polars-pipe?/csv") ("cross_join" "polars-plan/cross_join" "polars-pipe?/cross_join" "polars-ops/cross_join") ("cloud" "async" "polars-pipe?/cloud" "polars-plan/cloud" "tokio" "futures") ("async" "polars-plan/async" "polars-io/cloud" "polars-pipe?/async"))))))

(define-public crate-polars-lazy-0.35.4 (c (n "polars-lazy") (v "0.35.4") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.35.4") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-core") (r "^0.35.4") (f (quote ("lazy" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.35.4") (f (quote ("lazy"))) (k 0)) (d (n "polars-json") (r "^0.35.4") (o #t) (k 0)) (d (n "polars-ops") (r "^0.35.4") (k 0)) (d (n "polars-pipe") (r "^0.35.4") (o #t) (k 0)) (d (n "polars-plan") (r "^0.35.4") (k 0)) (d (n "polars-time") (r "^0.35.4") (o #t) (k 0)) (d (n "polars-utils") (r "^0.35.4") (k 0)) (d (n "pyo3") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.26") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "084gp9qa1w9b7dglcmrvlx6xrcl7hw5nmlb26w6xvrjvf1czfm9m") (f (quote (("unique_counts" "polars-plan/unique_counts") ("true_div" "polars-plan/true_div") ("trigonometry" "polars-plan/trigonometry") ("top_k" "polars-plan/top_k") ("timezones" "polars-plan/timezones") ("test_all" "test" "strings" "regex" "ipc" "row_hash" "string_pad" "string_to_integer" "search_sorted" "top_k" "pivot" "semi_anti_join" "cse") ("test" "polars-plan/debugging" "panic_on_schema" "rolling_window" "rank" "round_series" "csv" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("temporal" "dtype-datetime" "dtype-date" "dtype-time" "dtype-duration" "polars-plan/temporal") ("strings" "polars-plan/strings") ("string_to_integer" "polars-plan/string_to_integer") ("string_pad" "polars-plan/string_pad") ("string_encoding" "polars-plan/string_encoding") ("streaming" "chunked_ids" "polars-pipe" "polars-plan/streaming" "polars-ops/chunked_ids") ("sign" "polars-plan/sign") ("semi_anti_join" "polars-plan/semi_anti_join") ("search_sorted" "polars-plan/search_sorted") ("row_hash" "polars-plan/row_hash") ("round_series" "polars-plan/round_series" "polars-ops/round_series") ("rolling_window" "polars-plan/rolling_window" "polars-time/rolling_window") ("rle" "polars-plan/rle" "polars-ops/rle") ("repeat_by" "polars-plan/repeat_by") ("regex" "polars-plan/regex") ("rank" "polars-plan/rank") ("range" "polars-plan/range") ("random" "polars-plan/random") ("python" "pyo3" "polars-plan/python" "polars-core/python" "polars-io/python") ("propagate_nans" "polars-plan/propagate_nans") ("pivot" "polars-core/rows" "polars-ops/pivot") ("peaks" "polars-plan/peaks") ("pct_change" "polars-plan/pct_change") ("panic_on_schema" "polars-plan/panic_on_schema") ("object" "polars-plan/object") ("moment" "polars-plan/moment" "polars-ops/moment") ("mode" "polars-plan/mode") ("meta" "polars-plan/meta") ("merge_sorted" "polars-plan/merge_sorted") ("log" "polars-plan/log") ("list_to_struct" "polars-plan/list_to_struct") ("list_sets" "polars-plan/list_sets" "polars-ops/list_sets") ("list_sample" "polars-ops/list_sample" "polars-plan/list_sample") ("list_gather" "polars-ops/list_gather" "polars-plan/list_gather") ("list_eval") ("list_drop_nulls" "polars-ops/list_drop_nulls" "polars-plan/list_drop_nulls") ("list_count" "polars-ops/list_count" "polars-plan/list_count") ("list_any_all" "polars-ops/list_any_all" "polars-plan/list_any_all") ("json" "polars-io/json" "polars-plan/json" "polars-json") ("is_unique" "polars-plan/is_unique") ("is_last_distinct" "polars-plan/is_last_distinct") ("is_in" "polars-plan/is_in" "polars-ops/is_in") ("is_first_distinct" "polars-plan/is_first_distinct") ("interpolate" "polars-plan/interpolate") ("future") ("fused" "polars-plan/fused" "polars-ops/fused") ("fmt" "polars-core/fmt" "polars-plan/fmt") ("extract_jsonpath" "polars-plan/extract_jsonpath" "polars-ops/extract_jsonpath") ("extract_groups" "polars-plan/extract_groups") ("ewma" "polars-plan/ewma") ("dynamic_group_by" "polars-plan/dynamic_group_by" "polars-time" "temporal") ("dtype-time" "polars-core/dtype-time" "temporal") ("dtype-struct" "polars-plan/dtype-struct") ("dtype-duration" "polars-plan/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-datetime" "polars-plan/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-plan/dtype-date" "polars-time/dtype-date" "temporal") ("dot_diagram" "polars-plan/dot_diagram") ("diff" "polars-plan/diff" "polars-plan/diff") ("diagonal_concat") ("date_offset" "polars-plan/date_offset") ("cutqcut" "polars-plan/cutqcut" "polars-ops/cutqcut") ("cumulative_eval") ("cum_agg" "polars-plan/cum_agg") ("cse" "polars-plan/cse") ("cov" "polars-ops/cov" "polars-plan/cov") ("concat_str" "polars-plan/concat_str") ("coalesce" "polars-plan/coalesce") ("cloud_write" "cloud") ("chunked_ids" "polars-plan/chunked_ids" "polars-core/chunked_ids" "polars-ops/chunked_ids") ("binary_encoding" "polars-plan/binary_encoding") ("bigidx" "polars-plan/bigidx") ("asof_join" "polars-plan/asof_join" "polars-time" "polars-ops/asof_join") ("arg_where" "polars-plan/arg_where") ("approx_unique" "polars-plan/approx_unique") ("abs" "polars-plan/abs")))) (s 2) (e (quote (("serde" "polars-plan/serde" "arrow/serde" "polars-core/serde-lazy" "polars-time?/serde" "polars-io/serde" "polars-ops/serde") ("parquet" "polars-io/parquet" "polars-plan/parquet" "polars-pipe?/parquet") ("nightly" "polars-core/nightly" "polars-pipe?/nightly" "polars-plan/nightly") ("ipc" "polars-io/ipc" "polars-plan/ipc" "polars-pipe?/ipc") ("dtype-u8" "polars-plan/dtype-u8" "polars-pipe?/dtype-u8") ("dtype-u16" "polars-plan/dtype-u16" "polars-pipe?/dtype-u16") ("dtype-i8" "polars-plan/dtype-i8" "polars-pipe?/dtype-i8") ("dtype-i16" "polars-plan/dtype-i16" "polars-pipe?/dtype-i16") ("dtype-decimal" "polars-plan/dtype-decimal" "polars-pipe?/dtype-decimal") ("dtype-categorical" "polars-plan/dtype-categorical" "polars-pipe?/dtype-categorical") ("dtype-array" "polars-plan/dtype-array" "polars-pipe?/dtype-array" "polars-ops/dtype-array") ("csv" "polars-io/csv" "polars-plan/csv" "polars-pipe?/csv") ("cross_join" "polars-plan/cross_join" "polars-pipe?/cross_join" "polars-ops/cross_join") ("cloud" "async" "polars-pipe?/cloud" "polars-plan/cloud" "tokio" "futures") ("async" "polars-plan/async" "polars-io/cloud" "polars-pipe?/async"))))))

(define-public crate-polars-lazy-0.36.0 (c (n "polars-lazy") (v "0.36.0") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.36.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-core") (r "^0.36.0") (f (quote ("lazy" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.36.0") (f (quote ("lazy"))) (k 0)) (d (n "polars-json") (r "^0.36.0") (o #t) (k 0)) (d (n "polars-ops") (r "^0.36.0") (k 0)) (d (n "polars-pipe") (r "^0.36.0") (o #t) (k 0)) (d (n "polars-plan") (r "^0.36.0") (k 0)) (d (n "polars-time") (r "^0.36.0") (o #t) (k 0)) (d (n "polars-utils") (r "^0.36.0") (k 0)) (d (n "pyo3") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.26") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "13i32bjj2gb6nkmn5wsydxacfb145fh11s6xy9ivh9ddx15snj0g") (f (quote (("unique_counts" "polars-plan/unique_counts") ("true_div" "polars-plan/true_div") ("trigonometry" "polars-plan/trigonometry") ("top_k" "polars-plan/top_k") ("timezones" "polars-plan/timezones") ("test_all" "test" "strings" "regex" "ipc" "row_hash" "string_pad" "string_to_integer" "search_sorted" "top_k" "pivot" "semi_anti_join" "cse") ("test" "polars-plan/debugging" "panic_on_schema" "rolling_window" "rank" "round_series" "csv" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("temporal" "dtype-datetime" "dtype-date" "dtype-time" "dtype-i8" "dtype-i16" "dtype-duration" "polars-plan/temporal") ("strings" "polars-plan/strings") ("string_to_integer" "polars-plan/string_to_integer") ("string_reverse" "polars-plan/string_reverse") ("string_pad" "polars-plan/string_pad") ("string_encoding" "polars-plan/string_encoding") ("streaming" "chunked_ids" "polars-pipe" "polars-plan/streaming" "polars-ops/chunked_ids") ("sign" "polars-plan/sign") ("semi_anti_join" "polars-plan/semi_anti_join") ("search_sorted" "polars-plan/search_sorted") ("row_hash" "polars-plan/row_hash") ("round_series" "polars-plan/round_series" "polars-ops/round_series") ("rolling_window" "polars-plan/rolling_window" "polars-time/rolling_window") ("rle" "polars-plan/rle" "polars-ops/rle") ("replace" "polars-plan/replace") ("repeat_by" "polars-plan/repeat_by") ("regex" "polars-plan/regex") ("rank" "polars-plan/rank") ("range" "polars-plan/range") ("random" "polars-plan/random") ("python" "pyo3" "polars-plan/python" "polars-core/python" "polars-io/python") ("propagate_nans" "polars-plan/propagate_nans") ("pivot" "polars-core/rows" "polars-ops/pivot") ("peaks" "polars-plan/peaks") ("pct_change" "polars-plan/pct_change") ("panic_on_schema" "polars-plan/panic_on_schema") ("object" "polars-plan/object") ("moment" "polars-plan/moment" "polars-ops/moment") ("mode" "polars-plan/mode") ("meta" "polars-plan/meta") ("merge_sorted" "polars-plan/merge_sorted") ("log" "polars-plan/log") ("list_to_struct" "polars-plan/list_to_struct") ("list_sets" "polars-plan/list_sets" "polars-ops/list_sets") ("list_sample" "polars-ops/list_sample" "polars-plan/list_sample") ("list_gather" "polars-ops/list_gather" "polars-plan/list_gather") ("list_eval") ("list_drop_nulls" "polars-ops/list_drop_nulls" "polars-plan/list_drop_nulls") ("list_count" "polars-ops/list_count" "polars-plan/list_count") ("list_any_all" "polars-ops/list_any_all" "polars-plan/list_any_all") ("json" "polars-io/json" "polars-plan/json" "polars-json" "polars-pipe/json") ("is_unique" "polars-plan/is_unique") ("is_last_distinct" "polars-plan/is_last_distinct") ("is_in" "polars-plan/is_in" "polars-ops/is_in") ("is_first_distinct" "polars-plan/is_first_distinct") ("interpolate" "polars-plan/interpolate") ("horizontal_concat" "polars-plan/horizontal_concat" "polars-core/horizontal_concat") ("hist" "polars-plan/hist") ("future") ("fused" "polars-plan/fused" "polars-ops/fused") ("fmt" "polars-core/fmt" "polars-plan/fmt") ("extract_jsonpath" "polars-plan/extract_jsonpath" "polars-ops/extract_jsonpath") ("extract_groups" "polars-plan/extract_groups") ("ewma" "polars-plan/ewma") ("dynamic_group_by" "polars-plan/dynamic_group_by" "polars-time" "temporal") ("dtype-time" "polars-core/dtype-time" "temporal") ("dtype-struct" "polars-plan/dtype-struct") ("dtype-duration" "polars-plan/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-datetime" "polars-plan/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-plan/dtype-date" "polars-time/dtype-date" "temporal") ("dot_diagram" "polars-plan/dot_diagram") ("diff" "polars-plan/diff" "polars-plan/diff") ("diagonal_concat") ("date_offset" "polars-plan/date_offset") ("cutqcut" "polars-plan/cutqcut" "polars-ops/cutqcut") ("cumulative_eval") ("cum_agg" "polars-plan/cum_agg") ("cse" "polars-plan/cse") ("cov" "polars-ops/cov" "polars-plan/cov") ("concat_str" "polars-plan/concat_str") ("coalesce" "polars-plan/coalesce") ("cloud_write" "cloud") ("chunked_ids" "polars-plan/chunked_ids" "polars-core/chunked_ids" "polars-ops/chunked_ids") ("binary_encoding" "polars-plan/binary_encoding") ("bigidx" "polars-plan/bigidx") ("asof_join" "polars-plan/asof_join" "polars-time" "polars-ops/asof_join") ("array_any_all" "polars-ops/array_any_all" "polars-plan/array_any_all" "dtype-array") ("arg_where" "polars-plan/arg_where") ("approx_unique" "polars-plan/approx_unique") ("abs" "polars-plan/abs")))) (s 2) (e (quote (("serde" "polars-plan/serde" "arrow/serde" "polars-core/serde-lazy" "polars-time?/serde" "polars-io/serde" "polars-ops/serde") ("parquet" "polars-io/parquet" "polars-plan/parquet" "polars-pipe?/parquet") ("nightly" "polars-core/nightly" "polars-pipe?/nightly" "polars-plan/nightly") ("ipc" "polars-io/ipc" "polars-plan/ipc" "polars-pipe?/ipc") ("dtype-u8" "polars-plan/dtype-u8" "polars-pipe?/dtype-u8") ("dtype-u16" "polars-plan/dtype-u16" "polars-pipe?/dtype-u16") ("dtype-i8" "polars-plan/dtype-i8" "polars-pipe?/dtype-i8") ("dtype-i16" "polars-plan/dtype-i16" "polars-pipe?/dtype-i16") ("dtype-decimal" "polars-plan/dtype-decimal" "polars-pipe?/dtype-decimal") ("dtype-categorical" "polars-plan/dtype-categorical" "polars-pipe?/dtype-categorical") ("dtype-array" "polars-plan/dtype-array" "polars-pipe?/dtype-array" "polars-ops/dtype-array") ("csv" "polars-io/csv" "polars-plan/csv" "polars-pipe?/csv") ("cross_join" "polars-plan/cross_join" "polars-pipe?/cross_join" "polars-ops/cross_join") ("cloud" "async" "polars-pipe?/cloud" "polars-plan/cloud" "tokio" "futures") ("async" "polars-plan/async" "polars-io/cloud" "polars-pipe?/async"))))))

(define-public crate-polars-lazy-0.36.2 (c (n "polars-lazy") (v "0.36.2") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.36.2") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-core") (r "^0.36.2") (f (quote ("lazy" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.36.2") (f (quote ("lazy"))) (k 0)) (d (n "polars-json") (r "^0.36.2") (o #t) (k 0)) (d (n "polars-ops") (r "^0.36.2") (k 0)) (d (n "polars-pipe") (r "^0.36.2") (o #t) (k 0)) (d (n "polars-plan") (r "^0.36.2") (k 0)) (d (n "polars-time") (r "^0.36.2") (o #t) (k 0)) (d (n "polars-utils") (r "^0.36.2") (k 0)) (d (n "pyo3") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.26") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "1mdml4hs574njb23mb9gl6x92x2bb4vdfzsazkl3ifq516s0awcx") (f (quote (("unique_counts" "polars-plan/unique_counts") ("true_div" "polars-plan/true_div") ("trigonometry" "polars-plan/trigonometry") ("top_k" "polars-plan/top_k") ("timezones" "polars-plan/timezones") ("test_all" "test" "strings" "regex" "ipc" "row_hash" "string_pad" "string_to_integer" "search_sorted" "top_k" "pivot" "semi_anti_join" "cse") ("test" "polars-plan/debugging" "panic_on_schema" "rolling_window" "rank" "round_series" "csv" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("temporal" "dtype-datetime" "dtype-date" "dtype-time" "dtype-i8" "dtype-i16" "dtype-duration" "polars-plan/temporal") ("strings" "polars-plan/strings") ("string_to_integer" "polars-plan/string_to_integer") ("string_reverse" "polars-plan/string_reverse") ("string_pad" "polars-plan/string_pad") ("string_encoding" "polars-plan/string_encoding") ("streaming" "chunked_ids" "polars-pipe" "polars-plan/streaming" "polars-ops/chunked_ids") ("sign" "polars-plan/sign") ("semi_anti_join" "polars-plan/semi_anti_join") ("search_sorted" "polars-plan/search_sorted") ("row_hash" "polars-plan/row_hash") ("round_series" "polars-plan/round_series" "polars-ops/round_series") ("rolling_window" "polars-plan/rolling_window" "polars-time/rolling_window") ("rle" "polars-plan/rle" "polars-ops/rle") ("replace" "polars-plan/replace") ("repeat_by" "polars-plan/repeat_by") ("regex" "polars-plan/regex") ("rank" "polars-plan/rank") ("range" "polars-plan/range") ("random" "polars-plan/random") ("python" "pyo3" "polars-plan/python" "polars-core/python" "polars-io/python") ("propagate_nans" "polars-plan/propagate_nans") ("pivot" "polars-core/rows" "polars-ops/pivot") ("peaks" "polars-plan/peaks") ("pct_change" "polars-plan/pct_change") ("panic_on_schema" "polars-plan/panic_on_schema") ("object" "polars-plan/object") ("moment" "polars-plan/moment" "polars-ops/moment") ("mode" "polars-plan/mode") ("meta" "polars-plan/meta") ("merge_sorted" "polars-plan/merge_sorted") ("log" "polars-plan/log") ("list_to_struct" "polars-plan/list_to_struct") ("list_sets" "polars-plan/list_sets" "polars-ops/list_sets") ("list_sample" "polars-ops/list_sample" "polars-plan/list_sample") ("list_gather" "polars-ops/list_gather" "polars-plan/list_gather") ("list_eval") ("list_drop_nulls" "polars-ops/list_drop_nulls" "polars-plan/list_drop_nulls") ("list_count" "polars-ops/list_count" "polars-plan/list_count") ("list_any_all" "polars-ops/list_any_all" "polars-plan/list_any_all") ("json" "polars-io/json" "polars-plan/json" "polars-json" "polars-pipe/json") ("is_unique" "polars-plan/is_unique") ("is_last_distinct" "polars-plan/is_last_distinct") ("is_in" "polars-plan/is_in" "polars-ops/is_in") ("is_first_distinct" "polars-plan/is_first_distinct") ("interpolate" "polars-plan/interpolate") ("horizontal_concat" "polars-plan/horizontal_concat" "polars-core/horizontal_concat") ("hist" "polars-plan/hist") ("future") ("fused" "polars-plan/fused" "polars-ops/fused") ("fmt" "polars-core/fmt" "polars-plan/fmt") ("extract_jsonpath" "polars-plan/extract_jsonpath" "polars-ops/extract_jsonpath") ("extract_groups" "polars-plan/extract_groups") ("ewma" "polars-plan/ewma") ("dynamic_group_by" "polars-plan/dynamic_group_by" "polars-time" "temporal") ("dtype-time" "polars-core/dtype-time" "temporal") ("dtype-struct" "polars-plan/dtype-struct") ("dtype-duration" "polars-plan/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-datetime" "polars-plan/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-plan/dtype-date" "polars-time/dtype-date" "temporal") ("dot_diagram" "polars-plan/dot_diagram") ("diff" "polars-plan/diff" "polars-plan/diff") ("diagonal_concat") ("date_offset" "polars-plan/date_offset") ("cutqcut" "polars-plan/cutqcut" "polars-ops/cutqcut") ("cumulative_eval") ("cum_agg" "polars-plan/cum_agg") ("cse" "polars-plan/cse") ("cov" "polars-ops/cov" "polars-plan/cov") ("concat_str" "polars-plan/concat_str") ("coalesce" "polars-plan/coalesce") ("cloud_write" "cloud") ("chunked_ids" "polars-plan/chunked_ids" "polars-core/chunked_ids" "polars-ops/chunked_ids") ("binary_encoding" "polars-plan/binary_encoding") ("bigidx" "polars-plan/bigidx") ("asof_join" "polars-plan/asof_join" "polars-time" "polars-ops/asof_join") ("array_any_all" "polars-ops/array_any_all" "polars-plan/array_any_all" "dtype-array") ("arg_where" "polars-plan/arg_where") ("approx_unique" "polars-plan/approx_unique") ("abs" "polars-plan/abs")))) (s 2) (e (quote (("serde" "polars-plan/serde" "arrow/serde" "polars-core/serde-lazy" "polars-time?/serde" "polars-io/serde" "polars-ops/serde") ("parquet" "polars-io/parquet" "polars-plan/parquet" "polars-pipe?/parquet") ("nightly" "polars-core/nightly" "polars-pipe?/nightly" "polars-plan/nightly") ("ipc" "polars-io/ipc" "polars-plan/ipc" "polars-pipe?/ipc") ("dtype-u8" "polars-plan/dtype-u8" "polars-pipe?/dtype-u8") ("dtype-u16" "polars-plan/dtype-u16" "polars-pipe?/dtype-u16") ("dtype-i8" "polars-plan/dtype-i8" "polars-pipe?/dtype-i8") ("dtype-i16" "polars-plan/dtype-i16" "polars-pipe?/dtype-i16") ("dtype-decimal" "polars-plan/dtype-decimal" "polars-pipe?/dtype-decimal") ("dtype-categorical" "polars-plan/dtype-categorical" "polars-pipe?/dtype-categorical") ("dtype-array" "polars-plan/dtype-array" "polars-pipe?/dtype-array" "polars-ops/dtype-array") ("csv" "polars-io/csv" "polars-plan/csv" "polars-pipe?/csv") ("cross_join" "polars-plan/cross_join" "polars-pipe?/cross_join" "polars-ops/cross_join") ("cloud" "async" "polars-pipe?/cloud" "polars-plan/cloud" "tokio" "futures") ("async" "polars-plan/async" "polars-io/cloud" "polars-pipe?/async"))))))

(define-public crate-polars-lazy-0.37.0 (c (n "polars-lazy") (v "0.37.0") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.37.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-core") (r "^0.37.0") (f (quote ("lazy" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.37.0") (f (quote ("lazy"))) (k 0)) (d (n "polars-json") (r "^0.37.0") (o #t) (k 0)) (d (n "polars-ops") (r "^0.37.0") (k 0)) (d (n "polars-pipe") (r "^0.37.0") (o #t) (k 0)) (d (n "polars-plan") (r "^0.37.0") (k 0)) (d (n "polars-time") (r "^0.37.0") (o #t) (k 0)) (d (n "polars-utils") (r "^0.37.0") (k 0)) (d (n "pyo3") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.26") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "1y6z1l5rfhii45w2hj0sf3dbml5mlh77rl2s7a7h8vrl2gj46cyq") (f (quote (("unique_counts" "polars-plan/unique_counts") ("true_div" "polars-plan/true_div") ("trigonometry" "polars-plan/trigonometry") ("top_k" "polars-plan/top_k") ("timezones" "polars-plan/timezones") ("test_all" "test" "strings" "regex" "ipc" "row_hash" "string_pad" "string_to_integer" "search_sorted" "top_k" "pivot" "semi_anti_join" "cse") ("test" "polars-plan/debugging" "panic_on_schema" "rolling_window" "rank" "round_series" "csv" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("temporal" "dtype-datetime" "dtype-date" "dtype-time" "dtype-i8" "dtype-i16" "dtype-duration" "polars-plan/temporal") ("strings" "polars-plan/strings") ("string_to_integer" "polars-plan/string_to_integer") ("string_reverse" "polars-plan/string_reverse") ("string_pad" "polars-plan/string_pad") ("string_encoding" "polars-plan/string_encoding") ("streaming" "chunked_ids" "polars-pipe" "polars-plan/streaming" "polars-ops/chunked_ids") ("sign" "polars-plan/sign") ("semi_anti_join" "polars-plan/semi_anti_join") ("search_sorted" "polars-plan/search_sorted") ("row_hash" "polars-plan/row_hash") ("round_series" "polars-plan/round_series" "polars-ops/round_series") ("rolling_window" "polars-plan/rolling_window" "polars-time/rolling_window") ("rle" "polars-plan/rle" "polars-ops/rle") ("replace" "polars-plan/replace") ("repeat_by" "polars-plan/repeat_by") ("reinterpret" "polars-plan/reinterpret" "polars-ops/reinterpret") ("regex" "polars-plan/regex") ("rank" "polars-plan/rank") ("range" "polars-plan/range") ("random" "polars-plan/random") ("python" "pyo3" "polars-plan/python" "polars-core/python" "polars-io/python") ("propagate_nans" "polars-plan/propagate_nans") ("pivot" "polars-core/rows" "polars-ops/pivot") ("peaks" "polars-plan/peaks") ("pct_change" "polars-plan/pct_change") ("panic_on_schema" "polars-plan/panic_on_schema") ("object" "polars-plan/object") ("moment" "polars-plan/moment" "polars-ops/moment") ("mode" "polars-plan/mode") ("meta" "polars-plan/meta") ("merge_sorted" "polars-plan/merge_sorted") ("log" "polars-plan/log") ("list_to_struct" "polars-plan/list_to_struct") ("list_sets" "polars-plan/list_sets" "polars-ops/list_sets") ("list_sample" "polars-ops/list_sample" "polars-plan/list_sample") ("list_gather" "polars-ops/list_gather" "polars-plan/list_gather") ("list_eval") ("list_drop_nulls" "polars-ops/list_drop_nulls" "polars-plan/list_drop_nulls") ("list_count" "polars-ops/list_count" "polars-plan/list_count") ("list_any_all" "polars-ops/list_any_all" "polars-plan/list_any_all") ("json" "polars-io/json" "polars-plan/json" "polars-json" "polars-pipe/json") ("is_unique" "polars-plan/is_unique") ("is_last_distinct" "polars-plan/is_last_distinct") ("is_in" "polars-plan/is_in" "polars-ops/is_in") ("is_first_distinct" "polars-plan/is_first_distinct") ("is_between" "polars-plan/is_between") ("interpolate" "polars-plan/interpolate") ("hist" "polars-plan/hist") ("future") ("fused" "polars-plan/fused" "polars-ops/fused") ("fmt" "polars-core/fmt" "polars-plan/fmt") ("extract_jsonpath" "polars-plan/extract_jsonpath" "polars-ops/extract_jsonpath") ("extract_groups" "polars-plan/extract_groups") ("ewma" "polars-plan/ewma") ("dynamic_group_by" "polars-plan/dynamic_group_by" "polars-time" "temporal") ("dtype-time" "polars-plan/dtype-time" "polars-time/dtype-time" "temporal") ("dtype-struct" "polars-plan/dtype-struct") ("dtype-duration" "polars-plan/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-datetime" "polars-plan/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-plan/dtype-date" "polars-time/dtype-date" "temporal") ("dot_diagram" "polars-plan/dot_diagram") ("diff" "polars-plan/diff" "polars-plan/diff") ("diagonal_concat") ("date_offset" "polars-plan/date_offset") ("cutqcut" "polars-plan/cutqcut" "polars-ops/cutqcut") ("cumulative_eval") ("cum_agg" "polars-plan/cum_agg") ("cse" "polars-plan/cse") ("cov" "polars-ops/cov" "polars-plan/cov") ("concat_str" "polars-plan/concat_str") ("coalesce" "polars-plan/coalesce") ("cloud_write" "cloud") ("chunked_ids" "polars-plan/chunked_ids" "polars-core/chunked_ids" "polars-ops/chunked_ids") ("binary_encoding" "polars-plan/binary_encoding") ("bigidx" "polars-plan/bigidx") ("asof_join" "polars-plan/asof_join" "polars-time" "polars-ops/asof_join") ("array_count" "polars-ops/array_count" "polars-plan/array_count" "dtype-array") ("array_any_all" "polars-ops/array_any_all" "polars-plan/array_any_all" "dtype-array") ("arg_where" "polars-plan/arg_where") ("approx_unique" "polars-plan/approx_unique") ("abs" "polars-plan/abs")))) (s 2) (e (quote (("serde" "polars-plan/serde" "arrow/serde" "polars-core/serde-lazy" "polars-time?/serde" "polars-io/serde" "polars-ops/serde") ("parquet" "polars-io/parquet" "polars-plan/parquet" "polars-pipe?/parquet") ("nightly" "polars-core/nightly" "polars-pipe?/nightly" "polars-plan/nightly") ("ipc" "polars-io/ipc" "polars-plan/ipc" "polars-pipe?/ipc") ("dtype-u8" "polars-plan/dtype-u8" "polars-pipe?/dtype-u8") ("dtype-u16" "polars-plan/dtype-u16" "polars-pipe?/dtype-u16") ("dtype-i8" "polars-plan/dtype-i8" "polars-pipe?/dtype-i8") ("dtype-i16" "polars-plan/dtype-i16" "polars-pipe?/dtype-i16") ("dtype-decimal" "polars-plan/dtype-decimal" "polars-pipe?/dtype-decimal") ("dtype-categorical" "polars-plan/dtype-categorical" "polars-pipe?/dtype-categorical") ("dtype-array" "polars-plan/dtype-array" "polars-pipe?/dtype-array" "polars-ops/dtype-array") ("csv" "polars-io/csv" "polars-plan/csv" "polars-pipe?/csv") ("cross_join" "polars-plan/cross_join" "polars-pipe?/cross_join" "polars-ops/cross_join") ("cloud" "async" "polars-pipe?/cloud" "polars-plan/cloud" "tokio" "futures") ("async" "polars-plan/async" "polars-io/cloud" "polars-pipe?/async"))))))

(define-public crate-polars-lazy-0.38.0 (c (n "polars-lazy") (v "0.38.0") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.38.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-core") (r "^0.38.0") (f (quote ("lazy" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.38.0") (f (quote ("lazy"))) (k 0)) (d (n "polars-json") (r "^0.38.0") (o #t) (k 0)) (d (n "polars-ops") (r "^0.38.0") (f (quote ("chunked_ids"))) (k 0)) (d (n "polars-pipe") (r "^0.38.0") (o #t) (k 0)) (d (n "polars-plan") (r "^0.38.0") (k 0)) (d (n "polars-time") (r "^0.38.0") (o #t) (k 0)) (d (n "polars-utils") (r "^0.38.0") (k 0)) (d (n "pyo3") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.26") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "1j5phmcpn1j4459vmm4vih0ydljv28c2jiwxib4fvsfa0k4hxqi6") (f (quote (("unique_counts" "polars-plan/unique_counts") ("true_div" "polars-plan/true_div") ("trigonometry" "polars-plan/trigonometry") ("top_k" "polars-plan/top_k") ("timezones" "polars-plan/timezones") ("test_all" "test" "strings" "regex" "ipc" "row_hash" "string_pad" "string_to_integer" "search_sorted" "top_k" "pivot" "semi_anti_join" "cse") ("test" "polars-plan/debugging" "panic_on_schema" "rolling_window" "rank" "round_series" "csv" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("temporal" "dtype-datetime" "dtype-date" "dtype-time" "dtype-i8" "dtype-i16" "dtype-duration" "polars-plan/temporal") ("strings" "polars-plan/strings") ("string_to_integer" "polars-plan/string_to_integer") ("string_reverse" "polars-plan/string_reverse") ("string_pad" "polars-plan/string_pad") ("string_encoding" "polars-plan/string_encoding") ("streaming" "polars-pipe" "polars-plan/streaming" "polars-ops/chunked_ids") ("sign" "polars-plan/sign") ("semi_anti_join" "polars-plan/semi_anti_join") ("search_sorted" "polars-plan/search_sorted") ("row_hash" "polars-plan/row_hash") ("round_series" "polars-plan/round_series" "polars-ops/round_series") ("rolling_window" "polars-plan/rolling_window" "polars-time/rolling_window") ("rle" "polars-plan/rle" "polars-ops/rle") ("replace" "polars-plan/replace") ("repeat_by" "polars-plan/repeat_by") ("reinterpret" "polars-plan/reinterpret" "polars-ops/reinterpret") ("regex" "polars-plan/regex") ("rank" "polars-plan/rank") ("range" "polars-plan/range") ("random" "polars-plan/random") ("python" "pyo3" "polars-plan/python" "polars-core/python" "polars-io/python") ("propagate_nans" "polars-plan/propagate_nans") ("pivot" "polars-core/rows" "polars-ops/pivot") ("peaks" "polars-plan/peaks") ("pct_change" "polars-plan/pct_change") ("panic_on_schema" "polars-plan/panic_on_schema") ("object" "polars-plan/object") ("moment" "polars-plan/moment" "polars-ops/moment") ("mode" "polars-plan/mode") ("meta" "polars-plan/meta") ("merge_sorted" "polars-plan/merge_sorted") ("log" "polars-plan/log") ("list_to_struct" "polars-plan/list_to_struct") ("list_sets" "polars-plan/list_sets" "polars-ops/list_sets") ("list_sample" "polars-ops/list_sample" "polars-plan/list_sample") ("list_gather" "polars-ops/list_gather" "polars-plan/list_gather") ("list_eval") ("list_drop_nulls" "polars-ops/list_drop_nulls" "polars-plan/list_drop_nulls") ("list_count" "polars-ops/list_count" "polars-plan/list_count") ("list_any_all" "polars-ops/list_any_all" "polars-plan/list_any_all") ("is_unique" "polars-plan/is_unique") ("is_last_distinct" "polars-plan/is_last_distinct") ("is_in" "polars-plan/is_in" "polars-ops/is_in") ("is_first_distinct" "polars-plan/is_first_distinct") ("is_between" "polars-plan/is_between") ("interpolate" "polars-plan/interpolate") ("hist" "polars-plan/hist") ("future") ("fused" "polars-plan/fused" "polars-ops/fused") ("fmt" "polars-core/fmt" "polars-plan/fmt") ("extract_jsonpath" "polars-plan/extract_jsonpath" "polars-ops/extract_jsonpath") ("extract_groups" "polars-plan/extract_groups") ("ewma" "polars-plan/ewma") ("dynamic_group_by" "polars-plan/dynamic_group_by" "polars-time" "temporal") ("dtype-time" "polars-plan/dtype-time" "polars-time/dtype-time" "temporal") ("dtype-struct" "polars-plan/dtype-struct") ("dtype-duration" "polars-plan/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-datetime" "polars-plan/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-plan/dtype-date" "polars-time/dtype-date" "temporal") ("dot_diagram" "polars-plan/dot_diagram") ("diff" "polars-plan/diff" "polars-plan/diff") ("diagonal_concat") ("date_offset" "polars-plan/date_offset") ("cutqcut" "polars-plan/cutqcut" "polars-ops/cutqcut") ("cumulative_eval") ("cum_agg" "polars-plan/cum_agg") ("cse" "polars-plan/cse") ("cov" "polars-ops/cov" "polars-plan/cov") ("concat_str" "polars-plan/concat_str") ("coalesce" "polars-plan/coalesce") ("cloud_write" "cloud") ("binary_encoding" "polars-plan/binary_encoding") ("bigidx" "polars-plan/bigidx") ("asof_join" "polars-plan/asof_join" "polars-time" "polars-ops/asof_join") ("array_to_struct" "polars-plan/array_to_struct") ("array_count" "polars-ops/array_count" "polars-plan/array_count" "dtype-array") ("array_any_all" "polars-ops/array_any_all" "polars-plan/array_any_all" "dtype-array") ("arg_where" "polars-plan/arg_where") ("approx_unique" "polars-plan/approx_unique") ("abs" "polars-plan/abs")))) (s 2) (e (quote (("serde" "polars-plan/serde" "arrow/serde" "polars-core/serde-lazy" "polars-time?/serde" "polars-io/serde" "polars-ops/serde") ("parquet" "polars-io/parquet" "polars-plan/parquet" "polars-pipe?/parquet") ("nightly" "polars-core/nightly" "polars-pipe?/nightly" "polars-plan/nightly") ("json" "polars-io/json" "polars-plan/json" "polars-json" "polars-pipe?/json") ("ipc" "polars-io/ipc" "polars-plan/ipc" "polars-pipe?/ipc") ("dtype-u8" "polars-plan/dtype-u8" "polars-pipe?/dtype-u8") ("dtype-u16" "polars-plan/dtype-u16" "polars-pipe?/dtype-u16") ("dtype-i8" "polars-plan/dtype-i8" "polars-pipe?/dtype-i8") ("dtype-i16" "polars-plan/dtype-i16" "polars-pipe?/dtype-i16") ("dtype-decimal" "polars-plan/dtype-decimal" "polars-pipe?/dtype-decimal") ("dtype-categorical" "polars-plan/dtype-categorical" "polars-pipe?/dtype-categorical") ("dtype-array" "polars-plan/dtype-array" "polars-pipe?/dtype-array" "polars-ops/dtype-array") ("csv" "polars-io/csv" "polars-plan/csv" "polars-pipe?/csv") ("cross_join" "polars-plan/cross_join" "polars-pipe?/cross_join" "polars-ops/cross_join") ("cloud" "async" "polars-pipe?/cloud" "polars-plan/cloud" "tokio" "futures") ("async" "polars-plan/async" "polars-io/cloud" "polars-pipe?/async"))))))

(define-public crate-polars-lazy-0.38.1 (c (n "polars-lazy") (v "0.38.1") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.38.1") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-core") (r "^0.38.1") (f (quote ("lazy" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.38.1") (f (quote ("lazy"))) (k 0)) (d (n "polars-json") (r "^0.38.1") (o #t) (k 0)) (d (n "polars-ops") (r "^0.38.1") (f (quote ("chunked_ids"))) (k 0)) (d (n "polars-pipe") (r "^0.38.1") (o #t) (k 0)) (d (n "polars-plan") (r "^0.38.1") (k 0)) (d (n "polars-time") (r "^0.38.1") (o #t) (k 0)) (d (n "polars-utils") (r "^0.38.1") (k 0)) (d (n "pyo3") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.9") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.26") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "1pmw8d58myz8kjhcxcvc0ca1m34dxhcrp5xjxjy44hfjf81b9qsn") (f (quote (("unique_counts" "polars-plan/unique_counts") ("true_div" "polars-plan/true_div") ("trigonometry" "polars-plan/trigonometry") ("top_k" "polars-plan/top_k") ("timezones" "polars-plan/timezones") ("test_all" "test" "strings" "regex" "ipc" "row_hash" "string_pad" "string_to_integer" "search_sorted" "top_k" "pivot" "semi_anti_join" "cse") ("test" "polars-plan/debugging" "panic_on_schema" "rolling_window" "rank" "round_series" "csv" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("temporal" "dtype-datetime" "dtype-date" "dtype-time" "dtype-i8" "dtype-i16" "dtype-duration" "polars-plan/temporal") ("strings" "polars-plan/strings") ("string_to_integer" "polars-plan/string_to_integer") ("string_reverse" "polars-plan/string_reverse") ("string_pad" "polars-plan/string_pad") ("string_encoding" "polars-plan/string_encoding") ("streaming" "polars-pipe" "polars-plan/streaming" "polars-ops/chunked_ids") ("sign" "polars-plan/sign") ("semi_anti_join" "polars-plan/semi_anti_join") ("search_sorted" "polars-plan/search_sorted") ("row_hash" "polars-plan/row_hash") ("round_series" "polars-plan/round_series" "polars-ops/round_series") ("rolling_window" "polars-plan/rolling_window" "polars-time/rolling_window") ("rle" "polars-plan/rle" "polars-ops/rle") ("replace" "polars-plan/replace") ("repeat_by" "polars-plan/repeat_by") ("reinterpret" "polars-plan/reinterpret" "polars-ops/reinterpret") ("regex" "polars-plan/regex") ("rank" "polars-plan/rank") ("range" "polars-plan/range") ("random" "polars-plan/random") ("python" "pyo3" "polars-plan/python" "polars-core/python" "polars-io/python") ("propagate_nans" "polars-plan/propagate_nans") ("pivot" "polars-core/rows" "polars-ops/pivot") ("peaks" "polars-plan/peaks") ("pct_change" "polars-plan/pct_change") ("panic_on_schema" "polars-plan/panic_on_schema") ("object" "polars-plan/object") ("moment" "polars-plan/moment" "polars-ops/moment") ("mode" "polars-plan/mode") ("meta" "polars-plan/meta") ("merge_sorted" "polars-plan/merge_sorted") ("log" "polars-plan/log") ("list_to_struct" "polars-plan/list_to_struct") ("list_sets" "polars-plan/list_sets" "polars-ops/list_sets") ("list_sample" "polars-ops/list_sample" "polars-plan/list_sample") ("list_gather" "polars-ops/list_gather" "polars-plan/list_gather") ("list_eval") ("list_drop_nulls" "polars-ops/list_drop_nulls" "polars-plan/list_drop_nulls") ("list_count" "polars-ops/list_count" "polars-plan/list_count") ("list_any_all" "polars-ops/list_any_all" "polars-plan/list_any_all") ("is_unique" "polars-plan/is_unique") ("is_last_distinct" "polars-plan/is_last_distinct") ("is_in" "polars-plan/is_in" "polars-ops/is_in") ("is_first_distinct" "polars-plan/is_first_distinct") ("is_between" "polars-plan/is_between") ("interpolate" "polars-plan/interpolate") ("hist" "polars-plan/hist") ("future") ("fused" "polars-plan/fused" "polars-ops/fused") ("fmt" "polars-core/fmt" "polars-plan/fmt") ("extract_jsonpath" "polars-plan/extract_jsonpath" "polars-ops/extract_jsonpath") ("extract_groups" "polars-plan/extract_groups") ("ewma" "polars-plan/ewma") ("dynamic_group_by" "polars-plan/dynamic_group_by" "polars-time" "temporal") ("dtype-time" "polars-plan/dtype-time" "polars-time/dtype-time" "temporal") ("dtype-struct" "polars-plan/dtype-struct") ("dtype-duration" "polars-plan/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-datetime" "polars-plan/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-plan/dtype-date" "polars-time/dtype-date" "temporal") ("dot_diagram" "polars-plan/dot_diagram") ("diff" "polars-plan/diff" "polars-plan/diff") ("diagonal_concat") ("date_offset" "polars-plan/date_offset") ("cutqcut" "polars-plan/cutqcut" "polars-ops/cutqcut") ("cumulative_eval") ("cum_agg" "polars-plan/cum_agg") ("cse" "polars-plan/cse") ("cov" "polars-ops/cov" "polars-plan/cov") ("concat_str" "polars-plan/concat_str") ("coalesce" "polars-plan/coalesce") ("cloud_write" "cloud") ("binary_encoding" "polars-plan/binary_encoding") ("bigidx" "polars-plan/bigidx") ("asof_join" "polars-plan/asof_join" "polars-time" "polars-ops/asof_join") ("array_to_struct" "polars-plan/array_to_struct") ("array_count" "polars-ops/array_count" "polars-plan/array_count" "dtype-array") ("array_any_all" "polars-ops/array_any_all" "polars-plan/array_any_all" "dtype-array") ("arg_where" "polars-plan/arg_where") ("approx_unique" "polars-plan/approx_unique") ("abs" "polars-plan/abs")))) (s 2) (e (quote (("serde" "polars-plan/serde" "arrow/serde" "polars-core/serde-lazy" "polars-time?/serde" "polars-io/serde" "polars-ops/serde") ("parquet" "polars-io/parquet" "polars-plan/parquet" "polars-pipe?/parquet") ("nightly" "polars-core/nightly" "polars-pipe?/nightly" "polars-plan/nightly") ("json" "polars-io/json" "polars-plan/json" "polars-json" "polars-pipe?/json") ("ipc" "polars-io/ipc" "polars-plan/ipc" "polars-pipe?/ipc") ("dtype-u8" "polars-plan/dtype-u8" "polars-pipe?/dtype-u8") ("dtype-u16" "polars-plan/dtype-u16" "polars-pipe?/dtype-u16") ("dtype-i8" "polars-plan/dtype-i8" "polars-pipe?/dtype-i8") ("dtype-i16" "polars-plan/dtype-i16" "polars-pipe?/dtype-i16") ("dtype-decimal" "polars-plan/dtype-decimal" "polars-pipe?/dtype-decimal") ("dtype-categorical" "polars-plan/dtype-categorical" "polars-pipe?/dtype-categorical") ("dtype-array" "polars-plan/dtype-array" "polars-pipe?/dtype-array" "polars-ops/dtype-array") ("csv" "polars-io/csv" "polars-plan/csv" "polars-pipe?/csv") ("cross_join" "polars-plan/cross_join" "polars-pipe?/cross_join" "polars-ops/cross_join") ("cloud" "async" "polars-pipe?/cloud" "polars-plan/cloud" "tokio" "futures") ("async" "polars-plan/async" "polars-io/cloud" "polars-pipe?/async"))))))

(define-public crate-polars-lazy-0.38.2 (c (n "polars-lazy") (v "0.38.2") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.38.2") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-core") (r "^0.38.2") (f (quote ("lazy" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.38.2") (f (quote ("lazy"))) (k 0)) (d (n "polars-json") (r "^0.38.2") (o #t) (k 0)) (d (n "polars-ops") (r "^0.38.2") (f (quote ("chunked_ids"))) (k 0)) (d (n "polars-pipe") (r "^0.38.2") (o #t) (k 0)) (d (n "polars-plan") (r "^0.38.2") (k 0)) (d (n "polars-time") (r "^0.38.2") (o #t) (k 0)) (d (n "polars-utils") (r "^0.38.2") (k 0)) (d (n "pyo3") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.9") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.26") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "0czrvibrzczw9y6bvzqhf7mn119qv5g89b1aqxrmxy4if29svjvj") (f (quote (("unique_counts" "polars-plan/unique_counts") ("true_div" "polars-plan/true_div") ("trigonometry" "polars-plan/trigonometry") ("top_k" "polars-plan/top_k") ("timezones" "polars-plan/timezones") ("test_all" "test" "strings" "regex" "ipc" "row_hash" "string_pad" "string_to_integer" "search_sorted" "top_k" "pivot" "semi_anti_join" "cse") ("test" "polars-plan/debugging" "panic_on_schema" "rolling_window" "rank" "round_series" "csv" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("temporal" "dtype-datetime" "dtype-date" "dtype-time" "dtype-i8" "dtype-i16" "dtype-duration" "polars-plan/temporal") ("strings" "polars-plan/strings") ("string_to_integer" "polars-plan/string_to_integer") ("string_reverse" "polars-plan/string_reverse") ("string_pad" "polars-plan/string_pad") ("string_encoding" "polars-plan/string_encoding") ("streaming" "polars-pipe" "polars-plan/streaming" "polars-ops/chunked_ids") ("sign" "polars-plan/sign") ("semi_anti_join" "polars-plan/semi_anti_join") ("search_sorted" "polars-plan/search_sorted") ("row_hash" "polars-plan/row_hash") ("round_series" "polars-plan/round_series" "polars-ops/round_series") ("rolling_window" "polars-plan/rolling_window" "polars-time/rolling_window") ("rle" "polars-plan/rle" "polars-ops/rle") ("replace" "polars-plan/replace") ("repeat_by" "polars-plan/repeat_by") ("reinterpret" "polars-plan/reinterpret" "polars-ops/reinterpret") ("regex" "polars-plan/regex") ("rank" "polars-plan/rank") ("range" "polars-plan/range") ("random" "polars-plan/random") ("python" "pyo3" "polars-plan/python" "polars-core/python" "polars-io/python") ("propagate_nans" "polars-plan/propagate_nans") ("pivot" "polars-core/rows" "polars-ops/pivot") ("peaks" "polars-plan/peaks") ("pct_change" "polars-plan/pct_change") ("panic_on_schema" "polars-plan/panic_on_schema") ("object" "polars-plan/object") ("moment" "polars-plan/moment" "polars-ops/moment") ("mode" "polars-plan/mode") ("meta" "polars-plan/meta") ("merge_sorted" "polars-plan/merge_sorted") ("log" "polars-plan/log") ("list_to_struct" "polars-plan/list_to_struct") ("list_sets" "polars-plan/list_sets" "polars-ops/list_sets") ("list_sample" "polars-ops/list_sample" "polars-plan/list_sample") ("list_gather" "polars-ops/list_gather" "polars-plan/list_gather") ("list_eval") ("list_drop_nulls" "polars-ops/list_drop_nulls" "polars-plan/list_drop_nulls") ("list_count" "polars-ops/list_count" "polars-plan/list_count") ("list_any_all" "polars-ops/list_any_all" "polars-plan/list_any_all") ("is_unique" "polars-plan/is_unique") ("is_last_distinct" "polars-plan/is_last_distinct") ("is_in" "polars-plan/is_in" "polars-ops/is_in") ("is_first_distinct" "polars-plan/is_first_distinct") ("is_between" "polars-plan/is_between") ("interpolate" "polars-plan/interpolate") ("hist" "polars-plan/hist") ("future") ("fused" "polars-plan/fused" "polars-ops/fused") ("fmt" "polars-core/fmt" "polars-plan/fmt") ("extract_jsonpath" "polars-plan/extract_jsonpath" "polars-ops/extract_jsonpath") ("extract_groups" "polars-plan/extract_groups") ("ewma" "polars-plan/ewma") ("dynamic_group_by" "polars-plan/dynamic_group_by" "polars-time" "temporal") ("dtype-time" "polars-plan/dtype-time" "polars-time/dtype-time" "temporal") ("dtype-struct" "polars-plan/dtype-struct") ("dtype-duration" "polars-plan/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-datetime" "polars-plan/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-plan/dtype-date" "polars-time/dtype-date" "temporal") ("dot_diagram" "polars-plan/dot_diagram") ("diff" "polars-plan/diff" "polars-plan/diff") ("diagonal_concat") ("date_offset" "polars-plan/date_offset") ("cutqcut" "polars-plan/cutqcut" "polars-ops/cutqcut") ("cumulative_eval") ("cum_agg" "polars-plan/cum_agg") ("cse" "polars-plan/cse") ("cov" "polars-ops/cov" "polars-plan/cov") ("concat_str" "polars-plan/concat_str") ("coalesce" "polars-plan/coalesce") ("cloud_write" "cloud") ("binary_encoding" "polars-plan/binary_encoding") ("bigidx" "polars-plan/bigidx") ("asof_join" "polars-plan/asof_join" "polars-time" "polars-ops/asof_join") ("array_to_struct" "polars-plan/array_to_struct") ("array_count" "polars-ops/array_count" "polars-plan/array_count" "dtype-array") ("array_any_all" "polars-ops/array_any_all" "polars-plan/array_any_all" "dtype-array") ("arg_where" "polars-plan/arg_where") ("approx_unique" "polars-plan/approx_unique") ("abs" "polars-plan/abs")))) (s 2) (e (quote (("serde" "polars-plan/serde" "arrow/serde" "polars-core/serde-lazy" "polars-time?/serde" "polars-io/serde" "polars-ops/serde") ("parquet" "polars-io/parquet" "polars-plan/parquet" "polars-pipe?/parquet") ("nightly" "polars-core/nightly" "polars-pipe?/nightly" "polars-plan/nightly") ("json" "polars-io/json" "polars-plan/json" "polars-json" "polars-pipe?/json") ("ipc" "polars-io/ipc" "polars-plan/ipc" "polars-pipe?/ipc") ("dtype-u8" "polars-plan/dtype-u8" "polars-pipe?/dtype-u8") ("dtype-u16" "polars-plan/dtype-u16" "polars-pipe?/dtype-u16") ("dtype-i8" "polars-plan/dtype-i8" "polars-pipe?/dtype-i8") ("dtype-i16" "polars-plan/dtype-i16" "polars-pipe?/dtype-i16") ("dtype-decimal" "polars-plan/dtype-decimal" "polars-pipe?/dtype-decimal") ("dtype-categorical" "polars-plan/dtype-categorical" "polars-pipe?/dtype-categorical") ("dtype-array" "polars-plan/dtype-array" "polars-pipe?/dtype-array" "polars-ops/dtype-array") ("csv" "polars-io/csv" "polars-plan/csv" "polars-pipe?/csv") ("cross_join" "polars-plan/cross_join" "polars-pipe?/cross_join" "polars-ops/cross_join") ("cloud" "async" "polars-pipe?/cloud" "polars-plan/cloud" "tokio" "futures") ("async" "polars-plan/async" "polars-io/cloud" "polars-pipe?/async"))))))

(define-public crate-polars-lazy-0.38.3 (c (n "polars-lazy") (v "0.38.3") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.38.3") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison"))) (k 0) (p "polars-arrow")) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-core") (r "^0.38.3") (f (quote ("lazy" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.38.3") (f (quote ("lazy"))) (k 0)) (d (n "polars-json") (r "^0.38.3") (o #t) (k 0)) (d (n "polars-ops") (r "^0.38.3") (f (quote ("chunked_ids"))) (k 0)) (d (n "polars-pipe") (r "^0.38.3") (o #t) (k 0)) (d (n "polars-plan") (r "^0.38.3") (k 0)) (d (n "polars-time") (r "^0.38.3") (o #t) (k 0)) (d (n "polars-utils") (r "^0.38.3") (k 0)) (d (n "pyo3") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.9") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.26") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "0mng0wfdjz3jag6si2p30v0k1hsdv1562iqxsfc242fk35mg4zf2") (f (quote (("unique_counts" "polars-plan/unique_counts") ("true_div" "polars-plan/true_div") ("trigonometry" "polars-plan/trigonometry") ("top_k" "polars-plan/top_k") ("timezones" "polars-plan/timezones") ("test_all" "test" "strings" "regex" "ipc" "row_hash" "string_pad" "string_to_integer" "search_sorted" "top_k" "pivot" "semi_anti_join" "cse") ("test" "polars-plan/debugging" "panic_on_schema" "rolling_window" "rank" "round_series" "csv" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("temporal" "dtype-datetime" "dtype-date" "dtype-time" "dtype-i8" "dtype-i16" "dtype-duration" "polars-plan/temporal") ("strings" "polars-plan/strings") ("string_to_integer" "polars-plan/string_to_integer") ("string_reverse" "polars-plan/string_reverse") ("string_pad" "polars-plan/string_pad") ("string_encoding" "polars-plan/string_encoding") ("streaming" "polars-pipe" "polars-plan/streaming" "polars-ops/chunked_ids") ("sign" "polars-plan/sign") ("semi_anti_join" "polars-plan/semi_anti_join") ("search_sorted" "polars-plan/search_sorted") ("row_hash" "polars-plan/row_hash") ("round_series" "polars-plan/round_series" "polars-ops/round_series") ("rolling_window" "polars-plan/rolling_window" "polars-time/rolling_window") ("rle" "polars-plan/rle" "polars-ops/rle") ("replace" "polars-plan/replace") ("repeat_by" "polars-plan/repeat_by") ("reinterpret" "polars-plan/reinterpret" "polars-ops/reinterpret") ("regex" "polars-plan/regex") ("rank" "polars-plan/rank") ("range" "polars-plan/range") ("random" "polars-plan/random") ("python" "pyo3" "polars-plan/python" "polars-core/python" "polars-io/python") ("propagate_nans" "polars-plan/propagate_nans") ("pivot" "polars-core/rows" "polars-ops/pivot") ("peaks" "polars-plan/peaks") ("pct_change" "polars-plan/pct_change") ("panic_on_schema" "polars-plan/panic_on_schema") ("object" "polars-plan/object") ("moment" "polars-plan/moment" "polars-ops/moment") ("mode" "polars-plan/mode") ("meta" "polars-plan/meta") ("merge_sorted" "polars-plan/merge_sorted") ("log" "polars-plan/log") ("list_to_struct" "polars-plan/list_to_struct") ("list_sets" "polars-plan/list_sets" "polars-ops/list_sets") ("list_sample" "polars-ops/list_sample" "polars-plan/list_sample") ("list_gather" "polars-ops/list_gather" "polars-plan/list_gather") ("list_eval") ("list_drop_nulls" "polars-ops/list_drop_nulls" "polars-plan/list_drop_nulls") ("list_count" "polars-ops/list_count" "polars-plan/list_count") ("list_any_all" "polars-ops/list_any_all" "polars-plan/list_any_all") ("is_unique" "polars-plan/is_unique") ("is_last_distinct" "polars-plan/is_last_distinct") ("is_in" "polars-plan/is_in" "polars-ops/is_in") ("is_first_distinct" "polars-plan/is_first_distinct") ("is_between" "polars-plan/is_between") ("interpolate" "polars-plan/interpolate") ("hist" "polars-plan/hist") ("future") ("fused" "polars-plan/fused" "polars-ops/fused") ("fmt" "polars-core/fmt" "polars-plan/fmt") ("extract_jsonpath" "polars-plan/extract_jsonpath" "polars-ops/extract_jsonpath") ("extract_groups" "polars-plan/extract_groups") ("ewma" "polars-plan/ewma") ("dynamic_group_by" "polars-plan/dynamic_group_by" "polars-time" "temporal") ("dtype-time" "polars-plan/dtype-time" "polars-time/dtype-time" "temporal") ("dtype-struct" "polars-plan/dtype-struct") ("dtype-duration" "polars-plan/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-datetime" "polars-plan/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-plan/dtype-date" "polars-time/dtype-date" "temporal") ("dot_diagram" "polars-plan/dot_diagram") ("diff" "polars-plan/diff" "polars-plan/diff") ("diagonal_concat") ("date_offset" "polars-plan/date_offset") ("cutqcut" "polars-plan/cutqcut" "polars-ops/cutqcut") ("cumulative_eval") ("cum_agg" "polars-plan/cum_agg") ("cse" "polars-plan/cse") ("cov" "polars-ops/cov" "polars-plan/cov") ("concat_str" "polars-plan/concat_str") ("coalesce" "polars-plan/coalesce") ("cloud_write" "cloud") ("binary_encoding" "polars-plan/binary_encoding") ("bigidx" "polars-plan/bigidx") ("asof_join" "polars-plan/asof_join" "polars-time" "polars-ops/asof_join") ("array_to_struct" "polars-plan/array_to_struct") ("array_count" "polars-ops/array_count" "polars-plan/array_count" "dtype-array") ("array_any_all" "polars-ops/array_any_all" "polars-plan/array_any_all" "dtype-array") ("arg_where" "polars-plan/arg_where") ("approx_unique" "polars-plan/approx_unique") ("abs" "polars-plan/abs")))) (s 2) (e (quote (("serde" "polars-plan/serde" "arrow/serde" "polars-core/serde-lazy" "polars-time?/serde" "polars-io/serde" "polars-ops/serde") ("parquet" "polars-io/parquet" "polars-plan/parquet" "polars-pipe?/parquet") ("nightly" "polars-core/nightly" "polars-pipe?/nightly" "polars-plan/nightly") ("json" "polars-io/json" "polars-plan/json" "polars-json" "polars-pipe?/json") ("ipc" "polars-io/ipc" "polars-plan/ipc" "polars-pipe?/ipc") ("dtype-u8" "polars-plan/dtype-u8" "polars-pipe?/dtype-u8") ("dtype-u16" "polars-plan/dtype-u16" "polars-pipe?/dtype-u16") ("dtype-i8" "polars-plan/dtype-i8" "polars-pipe?/dtype-i8") ("dtype-i16" "polars-plan/dtype-i16" "polars-pipe?/dtype-i16") ("dtype-decimal" "polars-plan/dtype-decimal" "polars-pipe?/dtype-decimal") ("dtype-categorical" "polars-plan/dtype-categorical" "polars-pipe?/dtype-categorical") ("dtype-array" "polars-plan/dtype-array" "polars-pipe?/dtype-array" "polars-ops/dtype-array") ("csv" "polars-io/csv" "polars-plan/csv" "polars-pipe?/csv") ("cross_join" "polars-plan/cross_join" "polars-pipe?/cross_join" "polars-ops/cross_join") ("cloud" "async" "polars-pipe?/cloud" "polars-plan/cloud" "tokio" "futures") ("async" "polars-plan/async" "polars-io/cloud" "polars-pipe?/async"))))))

(define-public crate-polars-lazy-0.39.0 (c (n "polars-lazy") (v "0.39.0") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.39.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison"))) (k 0) (p "polars-arrow")) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-core") (r "^0.39.0") (f (quote ("lazy" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.39.0") (f (quote ("lazy"))) (k 0)) (d (n "polars-json") (r "^0.39.0") (o #t) (k 0)) (d (n "polars-ops") (r "^0.39.0") (f (quote ("chunked_ids"))) (k 0)) (d (n "polars-pipe") (r "^0.39.0") (o #t) (k 0)) (d (n "polars-plan") (r "^0.39.0") (k 0)) (d (n "polars-time") (r "^0.39.0") (o #t) (k 0)) (d (n "polars-utils") (r "^0.39.0") (k 0)) (d (n "pyo3") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.9") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.26") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "0n4vg9rcikl0i8ib27ar0h6k9s3gdd0bv643hyd7prkgjyajk6j5") (f (quote (("unique_counts" "polars-plan/unique_counts") ("true_div" "polars-plan/true_div") ("trigonometry" "polars-plan/trigonometry") ("top_k" "polars-plan/top_k") ("timezones" "polars-plan/timezones") ("test_all" "test" "strings" "regex" "ipc" "row_hash" "string_pad" "string_to_integer" "search_sorted" "top_k" "pivot" "semi_anti_join" "cse" "dtype-struct" "peaks" "cov" "hist" "extract_groups" "rle" "cutqcut" "replace" "list_sample") ("test" "polars-plan/debugging" "panic_on_schema" "rolling_window" "rank" "round_series" "csv" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("temporal" "dtype-datetime" "dtype-date" "dtype-time" "dtype-i8" "dtype-i16" "dtype-duration" "polars-plan/temporal") ("strings" "polars-plan/strings") ("string_to_integer" "polars-plan/string_to_integer") ("string_reverse" "polars-plan/string_reverse") ("string_pad" "polars-plan/string_pad") ("string_encoding" "polars-plan/string_encoding") ("streaming" "polars-pipe" "polars-plan/streaming" "polars-ops/chunked_ids") ("sign" "polars-plan/sign") ("semi_anti_join" "polars-plan/semi_anti_join") ("search_sorted" "polars-plan/search_sorted") ("row_hash" "polars-plan/row_hash") ("round_series" "polars-plan/round_series" "polars-ops/round_series") ("rolling_window" "polars-plan/rolling_window" "polars-time/rolling_window") ("rle" "polars-plan/rle" "polars-ops/rle") ("replace" "polars-plan/replace") ("repeat_by" "polars-plan/repeat_by") ("reinterpret" "polars-plan/reinterpret" "polars-ops/reinterpret") ("regex" "polars-plan/regex") ("rank" "polars-plan/rank") ("range" "polars-plan/range") ("random" "polars-plan/random") ("python" "pyo3" "polars-plan/python" "polars-core/python" "polars-io/python") ("propagate_nans" "polars-plan/propagate_nans") ("pivot" "polars-core/rows" "polars-ops/pivot") ("peaks" "polars-plan/peaks") ("pct_change" "polars-plan/pct_change") ("panic_on_schema" "polars-plan/panic_on_schema") ("object" "polars-plan/object") ("moment" "polars-plan/moment" "polars-ops/moment") ("mode" "polars-plan/mode") ("meta" "polars-plan/meta") ("merge_sorted" "polars-plan/merge_sorted") ("log" "polars-plan/log") ("list_to_struct" "polars-plan/list_to_struct") ("list_sets" "polars-plan/list_sets" "polars-ops/list_sets") ("list_sample" "polars-ops/list_sample" "polars-plan/list_sample") ("list_gather" "polars-ops/list_gather" "polars-plan/list_gather") ("list_eval") ("list_drop_nulls" "polars-ops/list_drop_nulls" "polars-plan/list_drop_nulls") ("list_count" "polars-ops/list_count" "polars-plan/list_count") ("list_any_all" "polars-ops/list_any_all" "polars-plan/list_any_all") ("is_unique" "polars-plan/is_unique") ("is_last_distinct" "polars-plan/is_last_distinct") ("is_in" "polars-plan/is_in" "polars-ops/is_in") ("is_first_distinct" "polars-plan/is_first_distinct") ("is_between" "polars-plan/is_between") ("interpolate" "polars-plan/interpolate") ("hist" "polars-plan/hist") ("future") ("fused" "polars-plan/fused" "polars-ops/fused") ("fmt" "polars-core/fmt" "polars-plan/fmt") ("extract_jsonpath" "polars-plan/extract_jsonpath" "polars-ops/extract_jsonpath") ("extract_groups" "polars-plan/extract_groups") ("ewma" "polars-plan/ewma") ("dynamic_group_by" "polars-plan/dynamic_group_by" "polars-time" "temporal") ("dtype-time" "polars-plan/dtype-time" "polars-time/dtype-time" "temporal") ("dtype-struct" "polars-plan/dtype-struct" "polars-ops/dtype-struct") ("dtype-duration" "polars-plan/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-datetime" "polars-plan/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-plan/dtype-date" "polars-time/dtype-date" "temporal") ("dot_diagram" "polars-plan/dot_diagram") ("diff" "polars-plan/diff" "polars-plan/diff") ("diagonal_concat") ("date_offset" "polars-plan/date_offset") ("cutqcut" "polars-plan/cutqcut" "polars-ops/cutqcut") ("cumulative_eval") ("cum_agg" "polars-plan/cum_agg") ("cse" "polars-plan/cse") ("cov" "polars-ops/cov" "polars-plan/cov") ("concat_str" "polars-plan/concat_str") ("coalesce" "polars-plan/coalesce") ("cloud_write" "cloud") ("business" "polars-plan/business") ("binary_encoding" "polars-plan/binary_encoding") ("bigidx" "polars-plan/bigidx") ("asof_join" "polars-plan/asof_join" "polars-time" "polars-ops/asof_join") ("array_to_struct" "polars-plan/array_to_struct") ("array_count" "polars-ops/array_count" "polars-plan/array_count" "dtype-array") ("array_any_all" "polars-ops/array_any_all" "polars-plan/array_any_all" "dtype-array") ("arg_where" "polars-plan/arg_where") ("approx_unique" "polars-plan/approx_unique") ("abs" "polars-plan/abs")))) (s 2) (e (quote (("serde" "polars-plan/serde" "arrow/serde" "polars-core/serde-lazy" "polars-time?/serde" "polars-io/serde" "polars-ops/serde") ("parquet" "polars-io/parquet" "polars-plan/parquet" "polars-pipe?/parquet") ("nightly" "polars-core/nightly" "polars-pipe?/nightly" "polars-plan/nightly") ("json" "polars-io/json" "polars-plan/json" "polars-json" "polars-pipe?/json") ("ipc" "polars-io/ipc" "polars-plan/ipc" "polars-pipe?/ipc") ("dtype-u8" "polars-plan/dtype-u8" "polars-pipe?/dtype-u8") ("dtype-u16" "polars-plan/dtype-u16" "polars-pipe?/dtype-u16") ("dtype-i8" "polars-plan/dtype-i8" "polars-pipe?/dtype-i8") ("dtype-i16" "polars-plan/dtype-i16" "polars-pipe?/dtype-i16") ("dtype-decimal" "polars-plan/dtype-decimal" "polars-pipe?/dtype-decimal") ("dtype-categorical" "polars-plan/dtype-categorical" "polars-pipe?/dtype-categorical") ("dtype-array" "polars-plan/dtype-array" "polars-pipe?/dtype-array" "polars-ops/dtype-array") ("csv" "polars-io/csv" "polars-plan/csv" "polars-pipe?/csv") ("cross_join" "polars-plan/cross_join" "polars-pipe?/cross_join" "polars-ops/cross_join") ("cloud" "async" "polars-pipe?/cloud" "polars-plan/cloud" "tokio" "futures") ("async" "polars-plan/async" "polars-io/cloud" "polars-pipe?/async"))))))

(define-public crate-polars-lazy-0.39.1 (c (n "polars-lazy") (v "0.39.1") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.39.1") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison"))) (k 0) (p "polars-arrow")) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-core") (r "^0.39.1") (f (quote ("lazy" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.39.1") (f (quote ("lazy"))) (k 0)) (d (n "polars-json") (r "^0.39.1") (o #t) (k 0)) (d (n "polars-ops") (r "^0.39.1") (f (quote ("chunked_ids"))) (k 0)) (d (n "polars-pipe") (r "^0.39.1") (o #t) (k 0)) (d (n "polars-plan") (r "^0.39.1") (k 0)) (d (n "polars-time") (r "^0.39.1") (o #t) (k 0)) (d (n "polars-utils") (r "^0.39.1") (k 0)) (d (n "pyo3") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.9") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.26") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "0ksxdwdyxgy2jar8jprfdi1myn7xhw7yrvb88h0bpqpma6sq6mpf") (f (quote (("unique_counts" "polars-plan/unique_counts") ("true_div" "polars-plan/true_div") ("trigonometry" "polars-plan/trigonometry") ("top_k" "polars-plan/top_k") ("timezones" "polars-plan/timezones") ("test_all" "test" "strings" "regex" "ipc" "row_hash" "string_pad" "string_to_integer" "search_sorted" "top_k" "pivot" "semi_anti_join" "cse" "dtype-struct" "peaks" "cov" "hist" "extract_groups" "rle" "cutqcut" "replace" "list_sample") ("test" "polars-plan/debugging" "panic_on_schema" "rolling_window" "rank" "round_series" "csv" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("temporal" "dtype-datetime" "dtype-date" "dtype-time" "dtype-i8" "dtype-i16" "dtype-duration" "polars-plan/temporal") ("strings" "polars-plan/strings") ("string_to_integer" "polars-plan/string_to_integer") ("string_reverse" "polars-plan/string_reverse") ("string_pad" "polars-plan/string_pad") ("string_encoding" "polars-plan/string_encoding") ("streaming" "polars-pipe" "polars-plan/streaming" "polars-ops/chunked_ids") ("sign" "polars-plan/sign") ("semi_anti_join" "polars-plan/semi_anti_join") ("search_sorted" "polars-plan/search_sorted") ("row_hash" "polars-plan/row_hash") ("round_series" "polars-plan/round_series" "polars-ops/round_series") ("rolling_window" "polars-plan/rolling_window" "polars-time/rolling_window") ("rle" "polars-plan/rle" "polars-ops/rle") ("replace" "polars-plan/replace") ("repeat_by" "polars-plan/repeat_by") ("reinterpret" "polars-plan/reinterpret" "polars-ops/reinterpret") ("regex" "polars-plan/regex") ("rank" "polars-plan/rank") ("range" "polars-plan/range") ("random" "polars-plan/random") ("python" "pyo3" "polars-plan/python" "polars-core/python" "polars-io/python") ("propagate_nans" "polars-plan/propagate_nans") ("pivot" "polars-core/rows" "polars-ops/pivot") ("peaks" "polars-plan/peaks") ("pct_change" "polars-plan/pct_change") ("panic_on_schema" "polars-plan/panic_on_schema") ("object" "polars-plan/object") ("moment" "polars-plan/moment" "polars-ops/moment") ("mode" "polars-plan/mode") ("meta" "polars-plan/meta") ("merge_sorted" "polars-plan/merge_sorted") ("log" "polars-plan/log") ("list_to_struct" "polars-plan/list_to_struct") ("list_sets" "polars-plan/list_sets" "polars-ops/list_sets") ("list_sample" "polars-ops/list_sample" "polars-plan/list_sample") ("list_gather" "polars-ops/list_gather" "polars-plan/list_gather") ("list_eval") ("list_drop_nulls" "polars-ops/list_drop_nulls" "polars-plan/list_drop_nulls") ("list_count" "polars-ops/list_count" "polars-plan/list_count") ("list_any_all" "polars-ops/list_any_all" "polars-plan/list_any_all") ("is_unique" "polars-plan/is_unique") ("is_last_distinct" "polars-plan/is_last_distinct") ("is_in" "polars-plan/is_in" "polars-ops/is_in") ("is_first_distinct" "polars-plan/is_first_distinct") ("is_between" "polars-plan/is_between") ("interpolate" "polars-plan/interpolate") ("hist" "polars-plan/hist") ("future") ("fused" "polars-plan/fused" "polars-ops/fused") ("fmt" "polars-core/fmt" "polars-plan/fmt") ("extract_jsonpath" "polars-plan/extract_jsonpath" "polars-ops/extract_jsonpath") ("extract_groups" "polars-plan/extract_groups") ("ewma_by" "polars-plan/ewma_by") ("ewma" "polars-plan/ewma") ("dynamic_group_by" "polars-plan/dynamic_group_by" "polars-time" "temporal") ("dtype-time" "polars-plan/dtype-time" "polars-time/dtype-time" "temporal") ("dtype-struct" "polars-plan/dtype-struct" "polars-ops/dtype-struct") ("dtype-duration" "polars-plan/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-datetime" "polars-plan/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-plan/dtype-date" "polars-time/dtype-date" "temporal") ("dot_diagram" "polars-plan/dot_diagram") ("diff" "polars-plan/diff" "polars-plan/diff") ("diagonal_concat") ("date_offset" "polars-plan/date_offset") ("cutqcut" "polars-plan/cutqcut" "polars-ops/cutqcut") ("cumulative_eval") ("cum_agg" "polars-plan/cum_agg") ("cse" "polars-plan/cse") ("cov" "polars-ops/cov" "polars-plan/cov") ("concat_str" "polars-plan/concat_str") ("coalesce" "polars-plan/coalesce") ("cloud_write" "cloud") ("business" "polars-plan/business") ("binary_encoding" "polars-plan/binary_encoding") ("bigidx" "polars-plan/bigidx") ("asof_join" "polars-plan/asof_join" "polars-time" "polars-ops/asof_join") ("array_to_struct" "polars-plan/array_to_struct") ("array_count" "polars-ops/array_count" "polars-plan/array_count" "dtype-array") ("array_any_all" "polars-ops/array_any_all" "polars-plan/array_any_all" "dtype-array") ("arg_where" "polars-plan/arg_where") ("approx_unique" "polars-plan/approx_unique") ("abs" "polars-plan/abs")))) (s 2) (e (quote (("serde" "polars-plan/serde" "arrow/serde" "polars-core/serde-lazy" "polars-time?/serde" "polars-io/serde" "polars-ops/serde") ("parquet" "polars-io/parquet" "polars-plan/parquet" "polars-pipe?/parquet") ("nightly" "polars-core/nightly" "polars-pipe?/nightly" "polars-plan/nightly") ("json" "polars-io/json" "polars-plan/json" "polars-json" "polars-pipe?/json") ("ipc" "polars-io/ipc" "polars-plan/ipc" "polars-pipe?/ipc") ("dtype-u8" "polars-plan/dtype-u8" "polars-pipe?/dtype-u8") ("dtype-u16" "polars-plan/dtype-u16" "polars-pipe?/dtype-u16") ("dtype-i8" "polars-plan/dtype-i8" "polars-pipe?/dtype-i8") ("dtype-i16" "polars-plan/dtype-i16" "polars-pipe?/dtype-i16") ("dtype-decimal" "polars-plan/dtype-decimal" "polars-pipe?/dtype-decimal") ("dtype-categorical" "polars-plan/dtype-categorical" "polars-pipe?/dtype-categorical") ("dtype-array" "polars-plan/dtype-array" "polars-pipe?/dtype-array" "polars-ops/dtype-array") ("csv" "polars-io/csv" "polars-plan/csv" "polars-pipe?/csv") ("cross_join" "polars-plan/cross_join" "polars-pipe?/cross_join" "polars-ops/cross_join") ("cloud" "async" "polars-pipe?/cloud" "polars-plan/cloud" "tokio" "futures") ("async" "polars-plan/async" "polars-io/cloud" "polars-pipe?/async"))))))

(define-public crate-polars-lazy-0.39.2 (c (n "polars-lazy") (v "0.39.2") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.39.2") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison"))) (k 0) (p "polars-arrow")) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-core") (r "^0.39.2") (f (quote ("lazy" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.39.2") (f (quote ("lazy"))) (k 0)) (d (n "polars-json") (r "^0.39.2") (o #t) (k 0)) (d (n "polars-ops") (r "^0.39.2") (f (quote ("chunked_ids"))) (k 0)) (d (n "polars-pipe") (r "^0.39.2") (o #t) (k 0)) (d (n "polars-plan") (r "^0.39.2") (k 0)) (d (n "polars-time") (r "^0.39.2") (o #t) (k 0)) (d (n "polars-utils") (r "^0.39.2") (k 0)) (d (n "pyo3") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.9") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.26") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "0zzbrwfy967m0nkjkbh37p3cmqxxixnr33szil2y4s7n38mn7cl9") (f (quote (("unique_counts" "polars-plan/unique_counts") ("true_div" "polars-plan/true_div") ("trigonometry" "polars-plan/trigonometry") ("top_k" "polars-plan/top_k") ("timezones" "polars-plan/timezones") ("test_all" "test" "strings" "regex" "ipc" "row_hash" "string_pad" "string_to_integer" "search_sorted" "top_k" "pivot" "semi_anti_join" "cse" "dtype-struct" "peaks" "cov" "hist" "extract_groups" "rle" "cutqcut" "replace" "list_sample") ("test" "polars-plan/debugging" "panic_on_schema" "rolling_window" "rank" "round_series" "csv" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("temporal" "dtype-datetime" "dtype-date" "dtype-time" "dtype-i8" "dtype-i16" "dtype-duration" "polars-plan/temporal") ("strings" "polars-plan/strings") ("string_to_integer" "polars-plan/string_to_integer") ("string_reverse" "polars-plan/string_reverse") ("string_pad" "polars-plan/string_pad") ("string_encoding" "polars-plan/string_encoding") ("streaming" "polars-pipe" "polars-plan/streaming" "polars-ops/chunked_ids") ("sign" "polars-plan/sign") ("semi_anti_join" "polars-plan/semi_anti_join") ("search_sorted" "polars-plan/search_sorted") ("row_hash" "polars-plan/row_hash") ("round_series" "polars-plan/round_series" "polars-ops/round_series") ("rolling_window" "polars-plan/rolling_window" "polars-time/rolling_window") ("rle" "polars-plan/rle" "polars-ops/rle") ("replace" "polars-plan/replace") ("repeat_by" "polars-plan/repeat_by") ("reinterpret" "polars-plan/reinterpret" "polars-ops/reinterpret") ("regex" "polars-plan/regex") ("rank" "polars-plan/rank") ("range" "polars-plan/range") ("random" "polars-plan/random") ("python" "pyo3" "polars-plan/python" "polars-core/python" "polars-io/python") ("propagate_nans" "polars-plan/propagate_nans") ("pivot" "polars-core/rows" "polars-ops/pivot") ("peaks" "polars-plan/peaks") ("pct_change" "polars-plan/pct_change") ("panic_on_schema" "polars-plan/panic_on_schema") ("object" "polars-plan/object") ("moment" "polars-plan/moment" "polars-ops/moment") ("mode" "polars-plan/mode") ("meta" "polars-plan/meta") ("merge_sorted" "polars-plan/merge_sorted") ("log" "polars-plan/log") ("list_to_struct" "polars-plan/list_to_struct") ("list_sets" "polars-plan/list_sets" "polars-ops/list_sets") ("list_sample" "polars-ops/list_sample" "polars-plan/list_sample") ("list_gather" "polars-ops/list_gather" "polars-plan/list_gather") ("list_eval") ("list_drop_nulls" "polars-ops/list_drop_nulls" "polars-plan/list_drop_nulls") ("list_count" "polars-ops/list_count" "polars-plan/list_count") ("list_any_all" "polars-ops/list_any_all" "polars-plan/list_any_all") ("is_unique" "polars-plan/is_unique") ("is_last_distinct" "polars-plan/is_last_distinct") ("is_in" "polars-plan/is_in" "polars-ops/is_in") ("is_first_distinct" "polars-plan/is_first_distinct") ("is_between" "polars-plan/is_between") ("interpolate" "polars-plan/interpolate") ("hist" "polars-plan/hist") ("future") ("fused" "polars-plan/fused" "polars-ops/fused") ("fmt" "polars-core/fmt" "polars-plan/fmt") ("extract_jsonpath" "polars-plan/extract_jsonpath" "polars-ops/extract_jsonpath") ("extract_groups" "polars-plan/extract_groups") ("ewma_by" "polars-plan/ewma_by") ("ewma" "polars-plan/ewma") ("dynamic_group_by" "polars-plan/dynamic_group_by" "polars-time" "temporal") ("dtype-time" "polars-plan/dtype-time" "polars-time/dtype-time" "temporal") ("dtype-struct" "polars-plan/dtype-struct" "polars-ops/dtype-struct") ("dtype-duration" "polars-plan/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-datetime" "polars-plan/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-plan/dtype-date" "polars-time/dtype-date" "temporal") ("dot_diagram" "polars-plan/dot_diagram") ("diff" "polars-plan/diff" "polars-plan/diff") ("diagonal_concat") ("date_offset" "polars-plan/date_offset") ("cutqcut" "polars-plan/cutqcut" "polars-ops/cutqcut") ("cumulative_eval") ("cum_agg" "polars-plan/cum_agg") ("cse" "polars-plan/cse") ("cov" "polars-ops/cov" "polars-plan/cov") ("concat_str" "polars-plan/concat_str") ("coalesce" "polars-plan/coalesce") ("cloud_write" "cloud") ("business" "polars-plan/business") ("binary_encoding" "polars-plan/binary_encoding") ("bigidx" "polars-plan/bigidx") ("asof_join" "polars-plan/asof_join" "polars-time" "polars-ops/asof_join") ("array_to_struct" "polars-plan/array_to_struct") ("array_count" "polars-ops/array_count" "polars-plan/array_count" "dtype-array") ("array_any_all" "polars-ops/array_any_all" "polars-plan/array_any_all" "dtype-array") ("arg_where" "polars-plan/arg_where") ("approx_unique" "polars-plan/approx_unique") ("abs" "polars-plan/abs")))) (s 2) (e (quote (("serde" "polars-plan/serde" "arrow/serde" "polars-core/serde-lazy" "polars-time?/serde" "polars-io/serde" "polars-ops/serde") ("parquet" "polars-io/parquet" "polars-plan/parquet" "polars-pipe?/parquet") ("nightly" "polars-core/nightly" "polars-pipe?/nightly" "polars-plan/nightly") ("json" "polars-io/json" "polars-plan/json" "polars-json" "polars-pipe?/json") ("ipc" "polars-io/ipc" "polars-plan/ipc" "polars-pipe?/ipc") ("dtype-u8" "polars-plan/dtype-u8" "polars-pipe?/dtype-u8") ("dtype-u16" "polars-plan/dtype-u16" "polars-pipe?/dtype-u16") ("dtype-i8" "polars-plan/dtype-i8" "polars-pipe?/dtype-i8") ("dtype-i16" "polars-plan/dtype-i16" "polars-pipe?/dtype-i16") ("dtype-decimal" "polars-plan/dtype-decimal" "polars-pipe?/dtype-decimal") ("dtype-categorical" "polars-plan/dtype-categorical" "polars-pipe?/dtype-categorical") ("dtype-array" "polars-plan/dtype-array" "polars-pipe?/dtype-array" "polars-ops/dtype-array") ("csv" "polars-io/csv" "polars-plan/csv" "polars-pipe?/csv") ("cross_join" "polars-plan/cross_join" "polars-pipe?/cross_join" "polars-ops/cross_join") ("cloud" "async" "polars-pipe?/cloud" "polars-plan/cloud" "tokio" "futures") ("async" "polars-plan/async" "polars-io/cloud" "polars-pipe?/async"))))))

(define-public crate-polars-lazy-0.40.0 (c (n "polars-lazy") (v "0.40.0") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.40.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison"))) (k 0) (p "polars-arrow")) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-core") (r "^0.40.0") (f (quote ("lazy" "zip_with" "random"))) (k 0)) (d (n "polars-expr") (r "^0.40.0") (k 0)) (d (n "polars-io") (r "^0.40.0") (f (quote ("lazy"))) (k 0)) (d (n "polars-json") (r "^0.40.0") (o #t) (k 0)) (d (n "polars-ops") (r "^0.40.0") (f (quote ("chunked_ids"))) (k 0)) (d (n "polars-pipe") (r "^0.40.0") (o #t) (k 0)) (d (n "polars-plan") (r "^0.40.0") (k 0)) (d (n "polars-time") (r "^0.40.0") (o #t) (k 0)) (d (n "polars-utils") (r "^0.40.0") (k 0)) (d (n "pyo3") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.9") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.26") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "19f42ihs3ls3kma89f99p9bjpd1jbpybfcgv1adp9dy6pcpfl1g8") (f (quote (("unique_counts" "polars-plan/unique_counts") ("true_div" "polars-plan/true_div") ("trigonometry" "polars-plan/trigonometry") ("top_k" "polars-plan/top_k") ("timezones" "polars-plan/timezones") ("test_all" "test" "strings" "regex" "ipc" "row_hash" "string_pad" "string_to_integer" "search_sorted" "top_k" "pivot" "semi_anti_join" "cse" "dtype-struct" "peaks" "cov" "hist" "extract_groups" "rle" "cutqcut" "replace" "list_sample") ("test" "polars-plan/debugging" "panic_on_schema" "rolling_window" "rank" "round_series" "csv" "dtype-categorical" "cum_agg" "regex" "polars-core/fmt" "diff" "abs" "parquet" "ipc" "dtype-date") ("temporal" "dtype-datetime" "dtype-date" "dtype-time" "dtype-i8" "dtype-i16" "dtype-duration" "polars-plan/temporal" "polars-expr/temporal") ("strings" "polars-plan/strings") ("string_to_integer" "polars-plan/string_to_integer") ("string_reverse" "polars-plan/string_reverse") ("string_pad" "polars-plan/string_pad") ("string_encoding" "polars-plan/string_encoding") ("streaming" "polars-pipe" "polars-plan/streaming" "polars-ops/chunked_ids" "polars-expr/streaming") ("sign" "polars-plan/sign") ("semi_anti_join" "polars-plan/semi_anti_join") ("search_sorted" "polars-plan/search_sorted") ("row_hash" "polars-plan/row_hash") ("round_series" "polars-plan/round_series" "polars-ops/round_series" "polars-expr/round_series") ("rolling_window_by" "polars-plan/rolling_window_by" "polars-time/rolling_window_by") ("rolling_window" "polars-plan/rolling_window") ("rle" "polars-plan/rle" "polars-ops/rle") ("replace" "polars-plan/replace") ("repeat_by" "polars-plan/repeat_by") ("reinterpret" "polars-plan/reinterpret" "polars-ops/reinterpret") ("regex" "polars-plan/regex") ("rank" "polars-plan/rank") ("range" "polars-plan/range") ("random" "polars-plan/random") ("python" "pyo3" "polars-plan/python" "polars-core/python" "polars-io/python") ("propagate_nans" "polars-plan/propagate_nans" "polars-expr/propagate_nans") ("pivot" "polars-core/rows" "polars-ops/pivot") ("peaks" "polars-plan/peaks") ("pct_change" "polars-plan/pct_change") ("panic_on_schema" "polars-plan/panic_on_schema" "polars-expr/panic_on_schema") ("object" "polars-plan/object") ("moment" "polars-plan/moment" "polars-ops/moment") ("mode" "polars-plan/mode") ("meta" "polars-plan/meta") ("merge_sorted" "polars-plan/merge_sorted") ("log" "polars-plan/log") ("list_to_struct" "polars-plan/list_to_struct") ("list_sets" "polars-plan/list_sets" "polars-ops/list_sets") ("list_sample" "polars-ops/list_sample" "polars-plan/list_sample") ("list_gather" "polars-ops/list_gather" "polars-plan/list_gather") ("list_eval") ("list_drop_nulls" "polars-ops/list_drop_nulls" "polars-plan/list_drop_nulls") ("list_count" "polars-ops/list_count" "polars-plan/list_count") ("list_any_all" "polars-ops/list_any_all" "polars-plan/list_any_all") ("is_unique" "polars-plan/is_unique") ("is_last_distinct" "polars-plan/is_last_distinct") ("is_in" "polars-plan/is_in" "polars-ops/is_in" "polars-expr/is_in") ("is_first_distinct" "polars-plan/is_first_distinct") ("is_between" "polars-plan/is_between" "polars-expr/is_between") ("interpolate" "polars-plan/interpolate") ("hist" "polars-plan/hist") ("future") ("fused" "polars-plan/fused" "polars-ops/fused") ("fmt" "polars-core/fmt" "polars-plan/fmt") ("extract_jsonpath" "polars-plan/extract_jsonpath" "polars-ops/extract_jsonpath") ("extract_groups" "polars-plan/extract_groups") ("ewma_by" "polars-plan/ewma_by") ("ewma" "polars-plan/ewma") ("dynamic_group_by" "polars-plan/dynamic_group_by" "polars-time" "temporal" "polars-expr/dynamic_group_by") ("dtype-time" "polars-plan/dtype-time" "polars-time/dtype-time" "temporal" "polars-expr/dtype-time") ("dtype-struct" "polars-plan/dtype-struct" "polars-ops/dtype-struct" "polars-expr/dtype-struct") ("dtype-full" "dtype-array" "dtype-categorical" "dtype-date" "dtype-datetime" "dtype-decimal" "dtype-duration" "dtype-i16" "dtype-i8" "dtype-struct" "dtype-time" "dtype-u16" "dtype-u8") ("dtype-duration" "polars-plan/dtype-duration" "polars-time/dtype-duration" "temporal" "polars-expr/dtype-duration") ("dtype-datetime" "polars-plan/dtype-datetime" "polars-time/dtype-datetime" "temporal" "polars-expr/dtype-datetime") ("dtype-date" "polars-plan/dtype-date" "polars-time/dtype-date" "temporal" "polars-expr/dtype-date") ("dot_diagram" "polars-plan/dot_diagram") ("diff" "polars-plan/diff" "polars-plan/diff") ("diagonal_concat") ("date_offset" "polars-plan/date_offset") ("cutqcut" "polars-plan/cutqcut" "polars-ops/cutqcut") ("cumulative_eval") ("cum_agg" "polars-plan/cum_agg") ("cse" "polars-plan/cse") ("cov" "polars-ops/cov" "polars-plan/cov") ("concat_str" "polars-plan/concat_str") ("coalesce" "polars-plan/coalesce") ("cloud_write" "cloud") ("business" "polars-plan/business") ("binary_encoding" "polars-plan/binary_encoding") ("bigidx" "polars-plan/bigidx") ("asof_join" "polars-plan/asof_join" "polars-time" "polars-ops/asof_join") ("array_to_struct" "polars-plan/array_to_struct") ("array_count" "polars-ops/array_count" "polars-plan/array_count" "dtype-array") ("array_any_all" "polars-ops/array_any_all" "polars-plan/array_any_all" "dtype-array") ("arg_where" "polars-plan/arg_where") ("approx_unique" "polars-plan/approx_unique") ("abs" "polars-plan/abs")))) (s 2) (e (quote (("serde" "polars-plan/serde" "arrow/serde" "polars-core/serde-lazy" "polars-time?/serde" "polars-io/serde" "polars-ops/serde") ("parquet" "polars-io/parquet" "polars-plan/parquet" "polars-pipe?/parquet" "polars-expr/parquet") ("nightly" "polars-core/nightly" "polars-pipe?/nightly" "polars-plan/nightly") ("json" "polars-io/json" "polars-plan/json" "polars-json" "polars-pipe?/json") ("ipc" "polars-io/ipc" "polars-plan/ipc" "polars-pipe?/ipc") ("dtype-u8" "polars-plan/dtype-u8" "polars-pipe?/dtype-u8" "polars-expr/dtype-u8") ("dtype-u16" "polars-plan/dtype-u16" "polars-pipe?/dtype-u16" "polars-expr/dtype-u16") ("dtype-i8" "polars-plan/dtype-i8" "polars-pipe?/dtype-i8" "polars-expr/dtype-i8") ("dtype-i16" "polars-plan/dtype-i16" "polars-pipe?/dtype-i16" "polars-expr/dtype-i16") ("dtype-decimal" "polars-plan/dtype-decimal" "polars-pipe?/dtype-decimal" "polars-expr/dtype-decimal") ("dtype-categorical" "polars-plan/dtype-categorical" "polars-pipe?/dtype-categorical" "polars-expr/dtype-categorical") ("dtype-array" "polars-plan/dtype-array" "polars-pipe?/dtype-array" "polars-ops/dtype-array" "polars-expr/dtype-array") ("csv" "polars-io/csv" "polars-plan/csv" "polars-pipe?/csv") ("cross_join" "polars-plan/cross_join" "polars-pipe?/cross_join" "polars-ops/cross_join") ("cloud" "async" "polars-pipe?/cloud" "polars-plan/cloud" "tokio" "futures") ("async" "polars-plan/async" "polars-io/cloud" "polars-pipe?/async"))))))

