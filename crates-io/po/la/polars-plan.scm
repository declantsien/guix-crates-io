(define-module (crates-io po la polars-plan) #:use-module (crates-io))

(define-public crate-polars-plan-0.24.4 (c (n "polars-plan") (v "0.24.4") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.24.4") (d #t) (k 0)) (d (n "polars-core") (r "^0.24.4") (f (quote ("lazy" "private" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.24.4") (f (quote ("lazy" "csv-file" "private"))) (k 0)) (d (n "polars-ops") (r "^0.24.4") (k 0)) (d (n "polars-time") (r "^0.24.4") (o #t) (d #t) (k 0)) (d (n "polars-utils") (r "^0.24.4") (d #t) (k 0)) (d (n "pyo3") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "131zii3f15h6pbf7610ridd1yrbl1x9k67bj52nw4hlqvni5xjnh") (f (quote (("unique_counts" "polars-core/unique_counts") ("true_div") ("trigonometry") ("top_k" "polars-ops/top_k") ("timezones" "polars-time/timezones" "polars-core/timezones") ("temporal" "polars-core/temporal" "dtype-date" "dtype-datetime" "dtype-time") ("strings" "polars-core/strings" "polars-ops/strings") ("string_justify" "polars-ops/string_justify") ("sign") ("semi_anti_join" "polars-core/semi_anti_join") ("search_sorted" "polars-ops/search_sorted") ("row_hash" "polars-core/row_hash" "polars-ops/hash") ("round_series" "polars-core/round_series") ("rolling_window" "polars-core/rolling_window" "polars-time/rolling_window" "polars-ops/rolling_window" "polars-time/rolling_window") ("repeat_by" "polars-core/repeat_by") ("rank" "polars-core/rank") ("random" "polars-core/random") ("python" "pyo3") ("propagate_nans" "polars-ops/propagate_nans") ("private" "polars-time/private") ("pivot" "polars-core/rows" "polars-ops/pivot") ("pct_change" "polars-core/pct_change") ("parquet" "polars-core/parquet" "polars-io/parquet") ("panic_on_schema") ("object" "polars-core/object") ("moment" "polars-core/moment") ("mode" "polars-core/mode") ("meta") ("log" "polars-ops/log") ("list_to_struct" "polars-ops/list_to_struct") ("json" "polars-io/json") ("is_in" "polars-core/is_in") ("is_first" "polars-core/is_first") ("ipc" "polars-io/ipc") ("interpolate" "polars-core/interpolate") ("future") ("fmt" "polars-core/fmt") ("ewma" "polars-core/ewma") ("dynamic_groupby" "polars-core/dynamic_groupby") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-time/dtype-time") ("dtype-struct" "polars-core/dtype-struct") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-core/dtype-date" "polars-time/dtype-date" "temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-binary" "polars-core/dtype-binary") ("dot_product" "polars-core/dot_product") ("dot_diagram") ("diff" "polars-core/diff" "polars-ops/diff") ("default" "compile" "private") ("date_offset" "polars-time") ("cum_agg" "polars-core/cum_agg") ("csv-file" "polars-io/csv-file") ("cse") ("cross_join" "polars-core/cross_join") ("concat_str" "polars-core/concat_str") ("compile") ("coalesce") ("chunked_ids") ("bigidx" "polars-arrow/bigidx" "polars-core/bigidx" "polars-utils/bigidx") ("asof_join" "polars-core/asof_join" "polars-time") ("arg_where") ("arange") ("abs" "polars-core/abs"))))))

(define-public crate-polars-plan-0.25.0 (c (n "polars-plan") (v "0.25.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.25.0") (d #t) (k 0)) (d (n "polars-core") (r "^0.25.0") (f (quote ("lazy" "private" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.25.0") (f (quote ("lazy" "csv-file" "private"))) (k 0)) (d (n "polars-ops") (r "^0.25.0") (k 0)) (d (n "polars-time") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "polars-utils") (r "^0.25.0") (d #t) (k 0)) (d (n "pyo3") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "0pgcs54y9a5sjvp11d0jvz4w3b9b4pgqhdz8bgz2zswsnflanzrf") (f (quote (("unique_counts" "polars-core/unique_counts") ("true_div") ("trigonometry") ("top_k" "polars-ops/top_k") ("timezones" "polars-time/timezones" "polars-core/timezones") ("temporal" "polars-core/temporal" "dtype-date" "dtype-datetime" "dtype-time") ("strings" "polars-core/strings" "polars-ops/strings") ("string_justify" "polars-ops/string_justify") ("sign") ("semi_anti_join" "polars-core/semi_anti_join") ("search_sorted" "polars-ops/search_sorted") ("row_hash" "polars-core/row_hash" "polars-ops/hash") ("round_series" "polars-core/round_series") ("rolling_window" "polars-core/rolling_window" "polars-time/rolling_window" "polars-ops/rolling_window" "polars-time/rolling_window") ("repeat_by" "polars-core/repeat_by") ("rank" "polars-core/rank") ("random" "polars-core/random") ("python" "pyo3") ("propagate_nans" "polars-ops/propagate_nans") ("private" "polars-time/private") ("pivot" "polars-core/rows" "polars-ops/pivot") ("pct_change" "polars-core/pct_change") ("parquet" "polars-core/parquet" "polars-io/parquet") ("panic_on_schema") ("object" "polars-core/object") ("moment" "polars-core/moment") ("mode" "polars-core/mode") ("meta") ("log" "polars-ops/log") ("list_to_struct" "polars-ops/list_to_struct") ("json" "polars-io/json") ("is_in" "polars-core/is_in") ("is_first" "polars-core/is_first") ("ipc" "polars-io/ipc") ("interpolate" "polars-core/interpolate") ("future") ("fmt" "polars-core/fmt") ("ewma" "polars-core/ewma") ("dynamic_groupby" "polars-core/dynamic_groupby") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-time/dtype-time") ("dtype-struct" "polars-core/dtype-struct") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-core/dtype-date" "polars-time/dtype-date" "temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-binary" "polars-core/dtype-binary") ("dot_product" "polars-core/dot_product") ("dot_diagram") ("diff" "polars-core/diff" "polars-ops/diff") ("default" "compile" "private") ("date_offset" "polars-time") ("cum_agg" "polars-core/cum_agg") ("csv-file" "polars-io/csv-file") ("cse") ("cross_join" "polars-core/cross_join") ("concat_str" "polars-core/concat_str") ("compile") ("coalesce") ("chunked_ids") ("bigidx" "polars-arrow/bigidx" "polars-core/bigidx" "polars-utils/bigidx") ("asof_join" "polars-core/asof_join" "polars-time") ("arg_where") ("arange") ("abs" "polars-core/abs"))))))

(define-public crate-polars-plan-0.25.1 (c (n "polars-plan") (v "0.25.1") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.25.1") (d #t) (k 0)) (d (n "polars-core") (r "^0.25.1") (f (quote ("lazy" "private" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.25.1") (f (quote ("lazy" "csv-file" "private"))) (k 0)) (d (n "polars-ops") (r "^0.25.1") (k 0)) (d (n "polars-time") (r "^0.25.1") (o #t) (d #t) (k 0)) (d (n "polars-utils") (r "^0.25.1") (d #t) (k 0)) (d (n "pyo3") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "0cgmif3mrhnv1ahhch2hgy4j7dpkw6zn4y14pssspc2mxsq80d37") (f (quote (("unique_counts" "polars-core/unique_counts") ("true_div") ("trigonometry") ("top_k" "polars-ops/top_k") ("timezones" "polars-time/timezones" "polars-core/timezones") ("temporal" "polars-core/temporal" "dtype-date" "dtype-datetime" "dtype-time") ("strings" "polars-core/strings" "polars-ops/strings") ("string_justify" "polars-ops/string_justify") ("sign") ("semi_anti_join" "polars-core/semi_anti_join") ("search_sorted" "polars-ops/search_sorted") ("row_hash" "polars-core/row_hash" "polars-ops/hash") ("round_series" "polars-core/round_series") ("rolling_window" "polars-core/rolling_window" "polars-time/rolling_window" "polars-ops/rolling_window" "polars-time/rolling_window") ("repeat_by" "polars-core/repeat_by") ("rank" "polars-core/rank") ("random" "polars-core/random") ("python" "pyo3") ("propagate_nans" "polars-ops/propagate_nans") ("private" "polars-time/private") ("pivot" "polars-core/rows" "polars-ops/pivot") ("pct_change" "polars-core/pct_change") ("parquet" "polars-core/parquet" "polars-io/parquet") ("panic_on_schema") ("object" "polars-core/object") ("moment" "polars-core/moment") ("mode" "polars-core/mode") ("meta") ("log" "polars-ops/log") ("list_to_struct" "polars-ops/list_to_struct") ("json" "polars-io/json") ("is_in" "polars-core/is_in") ("is_first" "polars-core/is_first") ("ipc" "polars-io/ipc") ("interpolate" "polars-core/interpolate") ("future") ("fmt" "polars-core/fmt") ("ewma" "polars-core/ewma") ("dynamic_groupby" "polars-core/dynamic_groupby") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-time/dtype-time") ("dtype-struct" "polars-core/dtype-struct") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-core/dtype-date" "polars-time/dtype-date" "temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-binary" "polars-core/dtype-binary") ("dot_product" "polars-core/dot_product") ("dot_diagram") ("diff" "polars-core/diff" "polars-ops/diff") ("default" "compile" "private") ("date_offset" "polars-time") ("cum_agg" "polars-core/cum_agg") ("csv-file" "polars-io/csv-file") ("cse") ("cross_join" "polars-core/cross_join") ("concat_str" "polars-core/concat_str") ("compile") ("coalesce") ("chunked_ids") ("bigidx" "polars-arrow/bigidx" "polars-core/bigidx" "polars-utils/bigidx") ("asof_join" "polars-core/asof_join" "polars-time") ("arg_where") ("arange") ("abs" "polars-core/abs"))))))

(define-public crate-polars-plan-0.26.0 (c (n "polars-plan") (v "0.26.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.26.0") (d #t) (k 0)) (d (n "polars-core") (r "^0.26.0") (f (quote ("lazy" "private" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.26.0") (f (quote ("lazy" "csv-file" "private"))) (k 0)) (d (n "polars-ops") (r "^0.26.0") (k 0)) (d (n "polars-time") (r "^0.26.0") (o #t) (d #t) (k 0)) (d (n "polars-utils") (r "^0.26.0") (d #t) (k 0)) (d (n "pyo3") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "1z76h8515sxh3wwxdhcazvdy7a9x56afnj8p76wskx206vxz5h2j") (f (quote (("unique_counts" "polars-core/unique_counts") ("true_div") ("trigonometry") ("top_k" "polars-ops/top_k") ("timezones" "polars-time/timezones" "polars-core/timezones") ("temporal" "polars-core/temporal" "dtype-date" "dtype-datetime" "dtype-time") ("strings" "polars-core/strings" "polars-ops/strings") ("string_justify" "polars-ops/string_justify") ("streaming") ("sign") ("semi_anti_join" "polars-core/semi_anti_join") ("search_sorted" "polars-ops/search_sorted") ("row_hash" "polars-core/row_hash" "polars-ops/hash") ("round_series" "polars-core/round_series") ("rolling_window" "polars-core/rolling_window" "polars-time/rolling_window" "polars-ops/rolling_window" "polars-time/rolling_window") ("repeat_by" "polars-core/repeat_by") ("rank" "polars-core/rank") ("random" "polars-core/random") ("python" "pyo3") ("propagate_nans" "polars-ops/propagate_nans") ("private" "polars-time/private") ("pivot" "polars-core/rows" "polars-ops/pivot") ("pct_change" "polars-core/pct_change") ("parquet" "polars-core/parquet" "polars-io/parquet") ("panic_on_schema") ("object" "polars-core/object") ("moment" "polars-core/moment") ("mode" "polars-core/mode") ("meta") ("log" "polars-ops/log") ("list_to_struct" "polars-ops/list_to_struct") ("json" "polars-io/json") ("is_in" "polars-core/is_in") ("is_first" "polars-core/is_first") ("ipc" "polars-io/ipc") ("interpolate" "polars-ops/interpolate") ("future") ("fmt" "polars-core/fmt") ("ewma" "polars-core/ewma") ("dynamic_groupby" "polars-core/dynamic_groupby") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-time/dtype-time") ("dtype-struct" "polars-core/dtype-struct") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-core/dtype-date" "polars-time/dtype-date" "temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-binary" "polars-core/dtype-binary") ("dot_product" "polars-core/dot_product") ("dot_diagram") ("diff" "polars-core/diff" "polars-ops/diff") ("default" "compile" "private") ("date_offset" "polars-time") ("cum_agg" "polars-core/cum_agg") ("csv-file" "polars-io/csv-file") ("cse") ("cross_join" "polars-core/cross_join") ("concat_str" "polars-core/concat_str") ("compile") ("coalesce") ("chunked_ids" "polars-core/chunked_ids") ("bigidx" "polars-arrow/bigidx" "polars-core/bigidx" "polars-utils/bigidx") ("asof_join" "polars-core/asof_join" "polars-time") ("arg_where") ("arange") ("abs" "polars-core/abs"))))))

(define-public crate-polars-plan-0.26.1 (c (n "polars-plan") (v "0.26.1") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.26.1") (d #t) (k 0)) (d (n "polars-core") (r "^0.26.1") (f (quote ("lazy" "private" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.26.1") (f (quote ("lazy" "csv-file" "private"))) (k 0)) (d (n "polars-ops") (r "^0.26.1") (k 0)) (d (n "polars-time") (r "^0.26.1") (o #t) (d #t) (k 0)) (d (n "polars-utils") (r "^0.26.1") (d #t) (k 0)) (d (n "pyo3") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "1ybycapb22r2rvh9x8wj5a05fka55by3rb9hg69rb2z7mqylp2zm") (f (quote (("unique_counts" "polars-core/unique_counts") ("true_div") ("trigonometry") ("top_k" "polars-ops/top_k") ("timezones" "polars-time/timezones" "polars-core/timezones") ("temporal" "polars-core/temporal" "dtype-date" "dtype-datetime" "dtype-time") ("strings" "polars-core/strings" "polars-ops/strings") ("string_justify" "polars-ops/string_justify") ("streaming") ("sign") ("semi_anti_join" "polars-core/semi_anti_join" "polars-ops/semi_anti_join") ("search_sorted" "polars-ops/search_sorted") ("row_hash" "polars-core/row_hash" "polars-ops/hash") ("round_series" "polars-core/round_series") ("rolling_window" "polars-core/rolling_window" "polars-time/rolling_window" "polars-ops/rolling_window" "polars-time/rolling_window") ("repeat_by" "polars-core/repeat_by") ("rank" "polars-core/rank") ("random" "polars-core/random") ("python" "pyo3") ("propagate_nans" "polars-ops/propagate_nans") ("private" "polars-time/private") ("pivot" "polars-core/rows" "polars-ops/pivot") ("pct_change" "polars-core/pct_change") ("parquet" "polars-core/parquet" "polars-io/parquet") ("panic_on_schema") ("object" "polars-core/object") ("moment" "polars-core/moment") ("mode" "polars-core/mode") ("meta") ("log" "polars-ops/log") ("list_to_struct" "polars-ops/list_to_struct") ("json" "polars-io/json") ("is_in" "polars-core/is_in") ("is_first" "polars-core/is_first") ("ipc" "polars-io/ipc") ("interpolate" "polars-ops/interpolate") ("future") ("fmt" "polars-core/fmt") ("ewma" "polars-core/ewma") ("dynamic_groupby" "polars-core/dynamic_groupby") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-time/dtype-time") ("dtype-struct" "polars-core/dtype-struct") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-core/dtype-date" "polars-time/dtype-date" "temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-binary" "polars-core/dtype-binary") ("dot_product" "polars-core/dot_product") ("dot_diagram") ("diff" "polars-core/diff" "polars-ops/diff") ("default" "compile" "private") ("date_offset" "polars-time") ("cum_agg" "polars-core/cum_agg") ("csv-file" "polars-io/csv-file") ("cse") ("cross_join" "polars-core/cross_join") ("concat_str" "polars-core/concat_str") ("compile") ("coalesce") ("chunked_ids" "polars-core/chunked_ids") ("bigidx" "polars-arrow/bigidx" "polars-core/bigidx" "polars-utils/bigidx") ("asof_join" "polars-core/asof_join" "polars-time" "polars-ops/asof_join") ("arg_where") ("arange") ("abs" "polars-core/abs"))))))

(define-public crate-polars-plan-0.27.1 (c (n "polars-plan") (v "0.27.1") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.27.1") (d #t) (k 0)) (d (n "polars-core") (r "^0.27.1") (f (quote ("lazy" "private" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.27.1") (f (quote ("lazy" "csv-file" "private"))) (k 0)) (d (n "polars-ops") (r "^0.27.1") (k 0)) (d (n "polars-time") (r "^0.27.1") (o #t) (d #t) (k 0)) (d (n "polars-utils") (r "^0.27.1") (d #t) (k 0)) (d (n "pyo3") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "0ayc0wjp5ca21sq411mqxmhn4rmyqqqf1l7nnl1l1w4n2xfi0718") (f (quote (("unique_counts" "polars-core/unique_counts") ("true_div") ("trigonometry") ("top_k" "polars-ops/top_k") ("timezones" "polars-time/timezones" "polars-core/timezones" "regex") ("temporal" "polars-core/temporal" "dtype-date" "dtype-datetime" "dtype-time") ("strings" "polars-core/strings" "polars-ops/strings") ("string_justify" "polars-ops/string_justify") ("string_from_radix" "polars-ops/string_from_radix") ("streaming") ("sign") ("semi_anti_join" "polars-core/semi_anti_join" "polars-ops/semi_anti_join") ("search_sorted" "polars-ops/search_sorted") ("row_hash" "polars-core/row_hash" "polars-ops/hash") ("round_series" "polars-core/round_series") ("rolling_window" "polars-core/rolling_window" "polars-time/rolling_window" "polars-ops/rolling_window" "polars-time/rolling_window") ("repeat_by" "polars-core/repeat_by") ("rank" "polars-core/rank") ("random" "polars-core/random") ("python" "pyo3") ("propagate_nans" "polars-ops/propagate_nans") ("private" "polars-time/private") ("pivot" "polars-core/rows" "polars-ops/pivot") ("pct_change" "polars-core/pct_change") ("parquet" "polars-core/parquet" "polars-io/parquet") ("panic_on_schema") ("object" "polars-core/object") ("moment" "polars-core/moment") ("mode" "polars-core/mode") ("meta") ("merge_sorted" "polars-ops/merge_sorted") ("log" "polars-ops/log") ("list_to_struct" "polars-ops/list_to_struct") ("list_take" "polars-ops/list_take") ("json" "polars-io/json") ("is_in" "polars-core/is_in") ("is_first" "polars-core/is_first") ("ipc" "polars-io/ipc") ("interpolate" "polars-ops/interpolate") ("future") ("fmt" "polars-core/fmt") ("ewma" "polars-core/ewma") ("dynamic_groupby" "polars-core/dynamic_groupby") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-time/dtype-time") ("dtype-struct" "polars-core/dtype-struct") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-i128" "polars-core/dtype-i128") ("dtype-duration" "polars-core/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-core/dtype-date" "polars-time/dtype-date" "temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-binary" "polars-core/dtype-binary") ("dot_product" "polars-core/dot_product") ("dot_diagram") ("diff" "polars-core/diff" "polars-ops/diff") ("default" "compile" "private") ("debugging") ("date_offset" "polars-time") ("cum_agg" "polars-core/cum_agg") ("csv-file" "polars-io/csv-file") ("cse") ("cross_join" "polars-core/cross_join") ("concat_str" "polars-core/concat_str") ("compile") ("coalesce") ("chunked_ids" "polars-core/chunked_ids") ("bigidx" "polars-arrow/bigidx" "polars-core/bigidx" "polars-utils/bigidx") ("async") ("asof_join" "polars-core/asof_join" "polars-time" "polars-ops/asof_join") ("arg_where") ("arange") ("abs" "polars-core/abs"))))))

(define-public crate-polars-plan-0.27.2 (c (n "polars-plan") (v "0.27.2") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.27.2") (d #t) (k 0)) (d (n "polars-core") (r "^0.27.2") (f (quote ("lazy" "private" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.27.2") (f (quote ("lazy" "csv-file" "private"))) (k 0)) (d (n "polars-ops") (r "^0.27.2") (k 0)) (d (n "polars-time") (r "^0.27.2") (o #t) (d #t) (k 0)) (d (n "polars-utils") (r "^0.27.2") (d #t) (k 0)) (d (n "pyo3") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "1hs3n1rl2s6l6ixff6rpshh52v43q00fy65f883gl9agjzs7v9cw") (f (quote (("unique_counts" "polars-core/unique_counts") ("true_div") ("trigonometry") ("top_k" "polars-ops/top_k") ("timezones" "polars-time/timezones" "polars-core/timezones" "regex") ("temporal" "polars-core/temporal" "dtype-date" "dtype-datetime" "dtype-time") ("strings" "polars-core/strings" "polars-ops/strings") ("string_justify" "polars-ops/string_justify") ("string_from_radix" "polars-ops/string_from_radix") ("streaming") ("sign") ("semi_anti_join" "polars-core/semi_anti_join" "polars-ops/semi_anti_join") ("search_sorted" "polars-ops/search_sorted") ("row_hash" "polars-core/row_hash" "polars-ops/hash") ("round_series" "polars-core/round_series") ("rolling_window" "polars-core/rolling_window" "polars-time/rolling_window" "polars-ops/rolling_window" "polars-time/rolling_window") ("repeat_by" "polars-core/repeat_by") ("rank" "polars-core/rank") ("random" "polars-core/random") ("python" "pyo3") ("propagate_nans" "polars-ops/propagate_nans") ("private" "polars-time/private") ("pivot" "polars-core/rows" "polars-ops/pivot") ("pct_change" "polars-core/pct_change") ("parquet" "polars-core/parquet" "polars-io/parquet") ("panic_on_schema") ("object" "polars-core/object") ("moment" "polars-core/moment") ("mode" "polars-core/mode") ("meta") ("merge_sorted" "polars-ops/merge_sorted") ("log" "polars-ops/log") ("list_to_struct" "polars-ops/list_to_struct") ("list_take" "polars-ops/list_take") ("json" "polars-io/json") ("is_in" "polars-core/is_in") ("is_first" "polars-core/is_first") ("ipc" "polars-io/ipc") ("interpolate" "polars-ops/interpolate") ("future") ("fmt" "polars-core/fmt") ("ewma" "polars-core/ewma") ("dynamic_groupby" "polars-core/dynamic_groupby") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-time/dtype-time") ("dtype-struct" "polars-core/dtype-struct") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-i128" "polars-core/dtype-i128") ("dtype-duration" "polars-core/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-core/dtype-date" "polars-time/dtype-date" "temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-binary" "polars-core/dtype-binary") ("dot_product" "polars-core/dot_product") ("dot_diagram") ("diff" "polars-core/diff" "polars-ops/diff") ("default" "compile" "private") ("debugging") ("date_offset" "polars-time") ("cum_agg" "polars-core/cum_agg") ("csv-file" "polars-io/csv-file") ("cse") ("cross_join" "polars-core/cross_join") ("concat_str" "polars-core/concat_str") ("compile") ("coalesce") ("chunked_ids" "polars-core/chunked_ids") ("bigidx" "polars-arrow/bigidx" "polars-core/bigidx" "polars-utils/bigidx") ("async") ("asof_join" "polars-core/asof_join" "polars-time" "polars-ops/asof_join") ("arg_where") ("arange") ("abs" "polars-core/abs"))))))

(define-public crate-polars-plan-0.28.0 (c (n "polars-plan") (v "0.28.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "arrow") (r "^0.17") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.28.0") (d #t) (k 0)) (d (n "polars-core") (r "^0.28.0") (f (quote ("lazy" "private" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.28.0") (f (quote ("lazy" "csv-file" "private"))) (k 0)) (d (n "polars-ops") (r "^0.28.0") (k 0)) (d (n "polars-time") (r "^0.28.0") (o #t) (d #t) (k 0)) (d (n "polars-utils") (r "^0.28.0") (d #t) (k 0)) (d (n "pyo3") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "regex") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)))) (h "1n6rrj4dcqkxrc87663z9pk9mf3wq2nv14r25jwwjlf60g5qidqi") (f (quote (("unique_counts" "polars-core/unique_counts") ("true_div") ("trigonometry") ("top_k" "polars-ops/top_k") ("timezones" "chrono-tz" "polars-time/timezones" "polars-core/timezones" "regex") ("temporal" "polars-core/temporal" "dtype-date" "dtype-datetime" "dtype-time") ("strings" "polars-core/strings" "polars-ops/strings") ("string_justify" "polars-ops/string_justify") ("string_from_radix" "polars-ops/string_from_radix") ("streaming") ("sign") ("semi_anti_join" "polars-core/semi_anti_join" "polars-ops/semi_anti_join") ("search_sorted" "polars-ops/search_sorted") ("row_hash" "polars-core/row_hash" "polars-ops/hash") ("round_series" "polars-core/round_series") ("rolling_window" "polars-core/rolling_window" "polars-time/rolling_window" "polars-ops/rolling_window" "polars-time/rolling_window") ("repeat_by" "polars-core/repeat_by") ("rank" "polars-core/rank") ("random" "polars-core/random") ("python" "pyo3") ("propagate_nans" "polars-ops/propagate_nans") ("private" "polars-time/private") ("pivot" "polars-core/rows" "polars-ops/pivot") ("pct_change" "polars-core/pct_change") ("parquet" "polars-core/parquet" "polars-io/parquet") ("panic_on_schema") ("object" "polars-core/object") ("moment" "polars-core/moment") ("mode" "polars-core/mode") ("meta") ("merge_sorted" "polars-ops/merge_sorted") ("log" "polars-ops/log") ("list_to_struct" "polars-ops/list_to_struct") ("list_take" "polars-ops/list_take") ("list_count" "polars-ops/list_count") ("json" "polars-io/json") ("is_unique" "polars-ops/is_unique") ("is_in" "polars-core/is_in") ("is_first" "polars-core/is_first" "polars-ops/is_first") ("ipc" "polars-io/ipc") ("interpolate" "polars-ops/interpolate") ("future") ("fmt" "polars-core/fmt") ("ewma" "polars-core/ewma") ("dynamic_groupby" "polars-core/dynamic_groupby") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-time/dtype-time") ("dtype-struct" "polars-core/dtype-struct") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-core/dtype-date" "polars-time/dtype-date" "temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dot_product" "polars-core/dot_product") ("dot_diagram") ("diff" "polars-core/diff" "polars-ops/diff") ("default" "compile" "private") ("debugging") ("date_offset" "polars-time" "chrono") ("cum_agg" "polars-core/cum_agg") ("csv-file" "polars-io/csv-file") ("cse") ("cross_join" "polars-core/cross_join") ("concat_str" "polars-core/concat_str") ("compile") ("coalesce") ("chunked_ids" "polars-core/chunked_ids") ("binary_encoding" "polars-ops/binary_encoding") ("bigidx" "polars-arrow/bigidx" "polars-core/bigidx" "polars-utils/bigidx") ("async") ("asof_join" "polars-core/asof_join" "polars-time" "polars-ops/asof_join") ("arg_where") ("arange") ("abs" "polars-core/abs"))))))

(define-public crate-polars-plan-0.29.0 (c (n "polars-plan") (v "0.29.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "arrow") (r "^0.17") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.29.0") (d #t) (k 0)) (d (n "polars-core") (r "^0.29.0") (f (quote ("lazy" "private" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.29.0") (f (quote ("lazy" "csv" "private"))) (k 0)) (d (n "polars-ops") (r "^0.29.0") (k 0)) (d (n "polars-time") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "polars-utils") (r "^0.29.0") (d #t) (k 0)) (d (n "pyo3") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "regex") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)))) (h "19dd6sm148frrqj0y5nqidhhfnc876n0k5jjhp7i05ynb5l20m3k") (f (quote (("unique_counts" "polars-core/unique_counts") ("true_div") ("trigonometry") ("top_k" "polars-ops/top_k") ("timezones" "chrono-tz" "polars-time/timezones" "polars-core/timezones" "regex") ("temporal" "polars-core/temporal" "dtype-date" "dtype-datetime" "dtype-time") ("strings" "polars-core/strings" "polars-ops/strings") ("string_justify" "polars-ops/string_justify") ("string_from_radix" "polars-ops/string_from_radix") ("streaming") ("sign") ("semi_anti_join" "polars-core/semi_anti_join" "polars-ops/semi_anti_join") ("search_sorted" "polars-ops/search_sorted") ("row_hash" "polars-core/row_hash" "polars-ops/hash") ("round_series" "polars-core/round_series") ("rolling_window" "polars-core/rolling_window" "polars-time/rolling_window" "polars-ops/rolling_window" "polars-time/rolling_window") ("repeat_by" "polars-core/repeat_by") ("rank" "polars-core/rank") ("random" "polars-core/random") ("python" "pyo3") ("propagate_nans" "polars-ops/propagate_nans") ("private" "polars-time/private") ("pivot" "polars-core/rows" "polars-ops/pivot") ("pct_change" "polars-core/pct_change") ("parquet" "polars-core/parquet" "polars-io/parquet") ("panic_on_schema") ("object" "polars-core/object") ("moment" "polars-core/moment") ("mode" "polars-core/mode") ("meta") ("merge_sorted" "polars-ops/merge_sorted") ("log" "polars-ops/log") ("list_to_struct" "polars-ops/list_to_struct") ("list_take" "polars-ops/list_take") ("list_count" "polars-ops/list_count") ("json" "polars-io/json") ("is_unique" "polars-ops/is_unique") ("is_in" "polars-core/is_in") ("is_first" "polars-core/is_first" "polars-ops/is_first") ("ipc" "polars-io/ipc") ("interpolate" "polars-ops/interpolate") ("future") ("fused") ("fmt" "polars-core/fmt") ("ewma" "polars-core/ewma") ("dynamic_groupby" "polars-core/dynamic_groupby") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-time/dtype-time") ("dtype-struct" "polars-core/dtype-struct") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-core/dtype-date" "polars-time/dtype-date" "temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dot_diagram") ("diff" "polars-core/diff" "polars-ops/diff") ("default" "compile" "private") ("debugging") ("date_offset" "polars-time" "chrono") ("cum_agg" "polars-core/cum_agg") ("csv" "polars-io/csv") ("cse") ("cross_join" "polars-core/cross_join") ("concat_str" "polars-core/concat_str") ("compile") ("coalesce") ("chunked_ids" "polars-core/chunked_ids") ("binary_encoding" "polars-ops/binary_encoding") ("bigidx" "polars-arrow/bigidx" "polars-core/bigidx" "polars-utils/bigidx") ("async") ("asof_join" "polars-core/asof_join" "polars-time" "polars-ops/asof_join") ("arg_where") ("arange") ("approx_unique" "polars-ops/approx_unique") ("abs" "polars-core/abs"))))))

(define-public crate-polars-plan-0.30.0 (c (n "polars-plan") (v "0.30.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "arrow") (r "^0.17") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.30.0") (d #t) (k 0)) (d (n "polars-core") (r "^0.30.0") (f (quote ("lazy" "private" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.30.0") (f (quote ("lazy" "csv" "private"))) (k 0)) (d (n "polars-ops") (r "^0.30.0") (k 0)) (d (n "polars-time") (r "^0.30.0") (o #t) (d #t) (k 0)) (d (n "polars-utils") (r "^0.30.0") (d #t) (k 0)) (d (n "pyo3") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "regex") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)))) (h "14gj61msj3dv96i92w3h6ccng5rdq6gvkv0qyxs99ynppm40yzca") (f (quote (("unique_counts" "polars-core/unique_counts") ("true_div") ("trigonometry") ("top_k" "polars-ops/top_k") ("timezones" "chrono-tz" "polars-time/timezones" "polars-core/timezones" "regex") ("temporal" "polars-core/temporal" "dtype-date" "dtype-datetime" "dtype-time") ("strings" "polars-core/strings" "polars-ops/strings") ("string_justify" "polars-ops/string_justify") ("string_from_radix" "polars-ops/string_from_radix") ("streaming") ("sign") ("semi_anti_join" "polars-core/semi_anti_join" "polars-ops/semi_anti_join") ("search_sorted" "polars-ops/search_sorted") ("row_hash" "polars-core/row_hash" "polars-ops/hash") ("round_series" "polars-core/round_series") ("rolling_window" "polars-core/rolling_window" "polars-time/rolling_window" "polars-ops/rolling_window" "polars-time/rolling_window") ("repeat_by" "polars-core/repeat_by") ("rank" "polars-core/rank") ("random" "polars-core/random") ("python" "pyo3") ("propagate_nans" "polars-ops/propagate_nans") ("private" "polars-time/private") ("pivot" "polars-core/rows" "polars-ops/pivot") ("pct_change" "polars-core/pct_change") ("parquet" "polars-core/parquet" "polars-io/parquet") ("panic_on_schema") ("object" "polars-core/object") ("moment" "polars-core/moment") ("mode" "polars-core/mode") ("meta") ("merge_sorted" "polars-ops/merge_sorted") ("log" "polars-ops/log") ("list_to_struct" "polars-ops/list_to_struct") ("list_take" "polars-ops/list_take") ("list_count" "polars-ops/list_count") ("json" "polars-io/json") ("is_unique" "polars-ops/is_unique") ("is_in" "polars-core/is_in") ("is_first" "polars-core/is_first" "polars-ops/is_first") ("ipc" "polars-io/ipc") ("interpolate" "polars-ops/interpolate") ("future") ("fused") ("fmt" "polars-core/fmt") ("ewma" "polars-core/ewma") ("dynamic_groupby" "polars-core/dynamic_groupby") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-time/dtype-time") ("dtype-struct" "polars-core/dtype-struct") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-core/dtype-date" "polars-time/dtype-date" "temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-array" "polars-core/dtype-array") ("dot_diagram") ("diff" "polars-core/diff" "polars-ops/diff") ("default" "compile" "private") ("debugging") ("date_offset" "polars-time" "chrono") ("cum_agg" "polars-core/cum_agg") ("csv" "polars-io/csv") ("cse") ("cross_join" "polars-core/cross_join") ("concat_str" "polars-core/concat_str") ("compile") ("coalesce") ("chunked_ids" "polars-core/chunked_ids") ("binary_encoding" "polars-ops/binary_encoding") ("bigidx" "polars-arrow/bigidx" "polars-core/bigidx" "polars-utils/bigidx") ("async") ("asof_join" "polars-core/asof_join" "polars-time" "polars-ops/asof_join") ("arg_where") ("arange") ("approx_unique" "polars-ops/approx_unique") ("abs" "polars-core/abs"))))))

(define-public crate-polars-plan-0.31.0 (c (n "polars-plan") (v "0.31.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "arrow") (r "^0.17") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "ciborium") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.31.0") (d #t) (k 0)) (d (n "polars-core") (r "^0.31.0") (f (quote ("lazy" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.31.0") (f (quote ("lazy" "csv"))) (k 0)) (d (n "polars-ops") (r "^0.31.0") (k 0)) (d (n "polars-time") (r "^0.31.0") (o #t) (d #t) (k 0)) (d (n "polars-utils") (r "^0.31.0") (d #t) (k 0)) (d (n "pyo3") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "regex") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)))) (h "177wff8iff08q8h6pv36vdcjmn51vz981rnn571km3zx3p80nh8z") (f (quote (("unique_counts" "polars-core/unique_counts") ("true_div") ("trigonometry") ("top_k" "polars-ops/top_k") ("timezones" "chrono-tz" "polars-time/timezones" "polars-core/timezones" "regex") ("temporal" "polars-core/temporal" "dtype-date" "dtype-datetime" "dtype-time") ("strings" "polars-core/strings" "polars-ops/strings") ("string_justify" "polars-ops/string_justify") ("string_from_radix" "polars-ops/string_from_radix") ("streaming") ("sign") ("semi_anti_join" "polars-core/semi_anti_join" "polars-ops/semi_anti_join") ("search_sorted" "polars-ops/search_sorted") ("row_hash" "polars-core/row_hash" "polars-ops/hash") ("round_series" "polars-core/round_series") ("rolling_window" "polars-core/rolling_window" "polars-time/rolling_window" "polars-ops/rolling_window" "polars-time/rolling_window") ("rle" "polars-ops/rle") ("repeat_by" "polars-core/repeat_by") ("rank" "polars-core/rank") ("range") ("random" "polars-core/random") ("python" "pyo3" "ciborium") ("propagate_nans" "polars-ops/propagate_nans") ("pivot" "polars-core/rows" "polars-ops/pivot") ("pct_change" "polars-core/pct_change") ("parquet" "polars-core/parquet" "polars-io/parquet") ("panic_on_schema") ("object" "polars-core/object") ("nightly" "polars-utils/nightly" "polars-ops/nightly") ("moment" "polars-core/moment") ("mode" "polars-core/mode") ("meta") ("merge_sorted" "polars-ops/merge_sorted") ("log" "polars-ops/log") ("list_to_struct" "polars-ops/list_to_struct") ("list_take" "polars-ops/list_take") ("list_sets" "polars-ops/list_sets") ("list_count" "polars-ops/list_count") ("list_any_all" "polars-ops/list_any_all") ("json" "polars-io/json") ("is_unique" "polars-ops/is_unique") ("is_in" "polars-core/is_in") ("is_first" "polars-core/is_first" "polars-ops/is_first") ("ipc" "polars-io/ipc") ("interpolate" "polars-ops/interpolate") ("future") ("fused") ("fmt" "polars-core/fmt") ("extract_jsonpath") ("ewma" "polars-core/ewma") ("dynamic_groupby" "polars-core/dynamic_groupby") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-time/dtype-time") ("dtype-struct" "polars-core/dtype-struct") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-core/dtype-date" "polars-time/dtype-date" "temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-array" "polars-core/dtype-array") ("dot_diagram") ("diff" "polars-core/diff" "polars-ops/diff") ("default" "compile") ("debugging") ("date_offset" "polars-time" "chrono") ("cutqcut" "polars-ops/cutqcut") ("cum_agg" "polars-core/cum_agg") ("csv" "polars-io/csv") ("cse") ("cross_join" "polars-core/cross_join") ("concat_str" "polars-core/concat_str") ("compile") ("coalesce") ("chunked_ids" "polars-core/chunked_ids") ("binary_encoding" "polars-ops/binary_encoding") ("bigidx" "polars-arrow/bigidx" "polars-core/bigidx" "polars-utils/bigidx") ("async") ("asof_join" "polars-core/asof_join" "polars-time" "polars-ops/asof_join") ("arg_where") ("approx_unique" "polars-ops/approx_unique") ("abs" "polars-core/abs"))))))

(define-public crate-polars-plan-0.31.1 (c (n "polars-plan") (v "0.31.1") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "arrow") (r "^0.17.2") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "ciborium") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.31.1") (d #t) (k 0)) (d (n "polars-core") (r "^0.31.1") (f (quote ("lazy" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.31.1") (f (quote ("lazy" "csv"))) (k 0)) (d (n "polars-ops") (r "^0.31.1") (k 0)) (d (n "polars-time") (r "^0.31.1") (o #t) (d #t) (k 0)) (d (n "polars-utils") (r "^0.31.1") (d #t) (k 0)) (d (n "pyo3") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "regex") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)))) (h "1yrv5pk5sd7hhbfz4a9vs9as8x8gyazs4dra9bh68w1bmiyq7w2q") (f (quote (("unique_counts" "polars-core/unique_counts") ("true_div") ("trigonometry") ("top_k" "polars-ops/top_k") ("timezones" "chrono-tz" "polars-time/timezones" "polars-core/timezones" "regex") ("temporal" "polars-core/temporal" "dtype-date" "dtype-datetime" "dtype-time") ("strings" "polars-core/strings" "polars-ops/strings") ("string_justify" "polars-ops/string_justify") ("string_from_radix" "polars-ops/string_from_radix") ("streaming") ("sign") ("semi_anti_join" "polars-core/semi_anti_join" "polars-ops/semi_anti_join") ("search_sorted" "polars-ops/search_sorted") ("row_hash" "polars-core/row_hash" "polars-ops/hash") ("round_series" "polars-core/round_series") ("rolling_window" "polars-core/rolling_window" "polars-time/rolling_window" "polars-ops/rolling_window" "polars-time/rolling_window") ("rle" "polars-ops/rle") ("repeat_by" "polars-core/repeat_by") ("rank" "polars-core/rank") ("range") ("random" "polars-core/random") ("python" "pyo3" "ciborium") ("propagate_nans" "polars-ops/propagate_nans") ("pivot" "polars-core/rows" "polars-ops/pivot") ("pct_change" "polars-core/pct_change") ("parquet" "polars-core/parquet" "polars-io/parquet") ("panic_on_schema") ("object" "polars-core/object") ("nightly" "polars-utils/nightly" "polars-ops/nightly") ("moment" "polars-core/moment") ("mode" "polars-core/mode") ("meta") ("merge_sorted" "polars-ops/merge_sorted") ("log" "polars-ops/log") ("list_to_struct" "polars-ops/list_to_struct") ("list_take" "polars-ops/list_take") ("list_sets" "polars-ops/list_sets") ("list_count" "polars-ops/list_count") ("list_any_all" "polars-ops/list_any_all") ("json" "polars-io/json") ("is_unique" "polars-ops/is_unique") ("is_in" "polars-core/is_in") ("is_first" "polars-core/is_first" "polars-ops/is_first") ("ipc" "polars-io/ipc") ("interpolate" "polars-ops/interpolate") ("future") ("fused") ("fmt" "polars-core/fmt") ("extract_jsonpath") ("ewma" "polars-core/ewma") ("dynamic_groupby" "polars-core/dynamic_groupby") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-time/dtype-time") ("dtype-struct" "polars-core/dtype-struct") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-core/dtype-date" "polars-time/dtype-date" "temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-array" "polars-core/dtype-array") ("dot_diagram") ("diff" "polars-core/diff" "polars-ops/diff") ("default" "compile") ("debugging") ("date_offset" "polars-time" "chrono") ("cutqcut" "polars-ops/cutqcut") ("cum_agg" "polars-core/cum_agg") ("csv" "polars-io/csv") ("cse") ("cross_join" "polars-core/cross_join") ("concat_str" "polars-core/concat_str") ("compile") ("coalesce") ("chunked_ids" "polars-core/chunked_ids") ("binary_encoding" "polars-ops/binary_encoding") ("bigidx" "polars-arrow/bigidx" "polars-core/bigidx" "polars-utils/bigidx") ("async") ("asof_join" "polars-core/asof_join" "polars-time" "polars-ops/asof_join") ("arg_where") ("approx_unique" "polars-ops/approx_unique") ("abs" "polars-core/abs"))))))

(define-public crate-polars-plan-0.32.0 (c (n "polars-plan") (v "0.32.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "arrow") (r "^0.17.4") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "ciborium") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.32.0") (d #t) (k 0)) (d (n "polars-core") (r "^0.32.0") (f (quote ("lazy" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.32.0") (f (quote ("lazy" "csv"))) (k 0)) (d (n "polars-ops") (r "^0.32.0") (k 0)) (d (n "polars-time") (r "^0.32.0") (o #t) (d #t) (k 0)) (d (n "polars-utils") (r "^0.32.0") (d #t) (k 0)) (d (n "pyo3") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "1aji6yvvm9050xz933sp6h2ylai8xw3h51kj51i17zirj4m7z6r8") (f (quote (("unique_counts" "polars-core/unique_counts") ("true_div") ("trigonometry") ("top_k" "polars-ops/top_k") ("timezones" "chrono-tz" "polars-time/timezones" "polars-core/timezones" "regex") ("temporal" "polars-core/temporal" "dtype-date" "dtype-datetime" "dtype-time") ("strings" "polars-core/strings" "polars-ops/strings") ("string_justify" "polars-ops/string_justify") ("string_from_radix" "polars-ops/string_from_radix") ("streaming") ("sign") ("semi_anti_join" "polars-core/semi_anti_join" "polars-ops/semi_anti_join") ("search_sorted" "polars-ops/search_sorted") ("row_hash" "polars-core/row_hash" "polars-ops/hash") ("round_series" "polars-core/round_series") ("rolling_window" "polars-core/rolling_window" "polars-time/rolling_window" "polars-ops/rolling_window" "polars-time/rolling_window") ("rle" "polars-ops/rle") ("repeat_by" "polars-core/repeat_by") ("rank" "polars-core/rank") ("range") ("random" "polars-core/random") ("propagate_nans" "polars-ops/propagate_nans") ("pivot" "polars-core/rows" "polars-ops/pivot") ("pct_change" "polars-core/pct_change") ("parquet" "polars-core/parquet" "polars-io/parquet") ("panic_on_schema") ("object" "polars-core/object") ("nightly" "polars-utils/nightly" "polars-ops/nightly") ("moment" "polars-core/moment" "polars-ops/moment") ("mode" "polars-core/mode") ("meta") ("merge_sorted" "polars-ops/merge_sorted") ("log" "polars-ops/log") ("list_to_struct" "polars-ops/list_to_struct") ("list_take" "polars-ops/list_take") ("list_sets" "polars-ops/list_sets") ("list_count" "polars-ops/list_count") ("list_any_all" "polars-ops/list_any_all") ("json" "polars-io/json") ("is_unique" "polars-ops/is_unique") ("is_in" "polars-core/is_in") ("is_first" "polars-core/is_first" "polars-ops/is_first") ("ipc" "polars-io/ipc") ("interpolate" "polars-ops/interpolate") ("future") ("fused" "polars-ops/fused") ("fmt" "polars-core/fmt") ("extract_jsonpath" "polars-ops/extract_jsonpath") ("extract_groups" "regex" "dtype-struct" "polars-ops/extract_groups") ("ewma" "polars-core/ewma") ("dynamic_groupby" "polars-core/dynamic_groupby") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-time/dtype-time") ("dtype-struct" "polars-core/dtype-struct") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-core/dtype-date" "polars-time/dtype-date" "temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-array" "polars-core/dtype-array" "polars-ops/dtype-array") ("dot_diagram") ("diff" "polars-core/diff" "polars-ops/diff") ("default" "compile") ("debugging") ("date_offset" "polars-time" "chrono") ("cutqcut" "polars-ops/cutqcut") ("cum_agg" "polars-core/cum_agg") ("csv" "polars-io/csv") ("cse") ("cross_join" "polars-core/cross_join") ("concat_str" "polars-core/concat_str") ("compile") ("coalesce") ("chunked_ids" "polars-core/chunked_ids") ("binary_encoding" "polars-ops/binary_encoding") ("bigidx" "polars-arrow/bigidx" "polars-core/bigidx" "polars-utils/bigidx") ("async" "polars-io/cloud") ("asof_join" "polars-core/asof_join" "polars-time" "polars-ops/asof_join") ("arg_where") ("approx_unique" "polars-ops/approx_unique") ("abs" "polars-core/abs")))) (s 2) (e (quote (("serde" "dep:serde" "polars-core/serde-lazy" "polars-time/serde" "polars-io/serde" "polars-ops/serde") ("python" "dep:pyo3" "ciborium"))))))

(define-public crate-polars-plan-0.32.1 (c (n "polars-plan") (v "0.32.1") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "arrow") (r "^0.17.4") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "ciborium") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.32.1") (d #t) (k 0)) (d (n "polars-core") (r "^0.32.1") (f (quote ("lazy" "zip_with" "random"))) (k 0)) (d (n "polars-io") (r "^0.32.1") (f (quote ("lazy" "csv"))) (k 0)) (d (n "polars-ops") (r "^0.32.1") (k 0)) (d (n "polars-time") (r "^0.32.1") (o #t) (d #t) (k 0)) (d (n "polars-utils") (r "^0.32.1") (d #t) (k 0)) (d (n "pyo3") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "0dfs2qxq6hn43gajx2i4pjrpgm36ss8llh44pffqwpi9y0ab0rzv") (f (quote (("unique_counts" "polars-core/unique_counts") ("true_div") ("trigonometry") ("top_k" "polars-ops/top_k") ("timezones" "chrono-tz" "polars-time/timezones" "polars-core/timezones" "regex") ("temporal" "polars-core/temporal" "dtype-date" "dtype-datetime" "dtype-time") ("strings" "polars-core/strings" "polars-ops/strings") ("string_justify" "polars-ops/string_justify") ("string_from_radix" "polars-ops/string_from_radix") ("streaming") ("sign") ("semi_anti_join" "polars-core/semi_anti_join" "polars-ops/semi_anti_join") ("search_sorted" "polars-ops/search_sorted") ("row_hash" "polars-core/row_hash" "polars-ops/hash") ("round_series" "polars-core/round_series") ("rolling_window" "polars-core/rolling_window" "polars-time/rolling_window" "polars-ops/rolling_window" "polars-time/rolling_window") ("rle" "polars-ops/rle") ("repeat_by" "polars-core/repeat_by") ("rank" "polars-core/rank") ("range") ("random" "polars-core/random") ("propagate_nans" "polars-ops/propagate_nans") ("pivot" "polars-core/rows" "polars-ops/pivot") ("pct_change" "polars-core/pct_change") ("parquet" "polars-core/parquet" "polars-io/parquet") ("panic_on_schema") ("object" "polars-core/object") ("nightly" "polars-utils/nightly" "polars-ops/nightly") ("moment" "polars-core/moment" "polars-ops/moment") ("mode" "polars-core/mode") ("meta") ("merge_sorted" "polars-ops/merge_sorted") ("log" "polars-ops/log") ("list_to_struct" "polars-ops/list_to_struct") ("list_take" "polars-ops/list_take") ("list_sets" "polars-ops/list_sets") ("list_count" "polars-ops/list_count") ("list_any_all" "polars-ops/list_any_all") ("json" "polars-io/json") ("is_unique" "polars-ops/is_unique") ("is_in" "polars-core/is_in") ("is_first" "polars-core/is_first" "polars-ops/is_first") ("ipc" "polars-io/ipc") ("interpolate" "polars-ops/interpolate") ("future") ("fused" "polars-ops/fused") ("fmt" "polars-core/fmt") ("extract_jsonpath" "polars-ops/extract_jsonpath") ("extract_groups" "regex" "dtype-struct" "polars-ops/extract_groups") ("ewma" "polars-core/ewma") ("dynamic_groupby" "polars-core/dynamic_groupby") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-time/dtype-time") ("dtype-struct" "polars-core/dtype-struct") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-core/dtype-date" "polars-time/dtype-date" "temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-array" "polars-core/dtype-array" "polars-ops/dtype-array") ("dot_diagram") ("diff" "polars-core/diff" "polars-ops/diff") ("default" "compile") ("debugging") ("date_offset" "polars-time" "chrono") ("cutqcut" "polars-ops/cutqcut") ("cum_agg" "polars-core/cum_agg") ("csv" "polars-io/csv") ("cse") ("cross_join" "polars-core/cross_join") ("concat_str" "polars-core/concat_str") ("compile") ("coalesce") ("chunked_ids" "polars-core/chunked_ids") ("binary_encoding" "polars-ops/binary_encoding") ("bigidx" "polars-arrow/bigidx" "polars-core/bigidx" "polars-utils/bigidx") ("async" "polars-io/cloud") ("asof_join" "polars-core/asof_join" "polars-time" "polars-ops/asof_join") ("arg_where") ("approx_unique" "polars-ops/approx_unique") ("abs" "polars-core/abs")))) (s 2) (e (quote (("serde" "dep:serde" "polars-core/serde-lazy" "polars-time/serde" "polars-io/serde" "polars-ops/serde") ("python" "dep:pyo3" "ciborium"))))))

(define-public crate-polars-plan-0.33.0 (c (n "polars-plan") (v "0.33.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "arrow") (r "^0.18.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "ciborium") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.33.0") (k 0)) (d (n "polars-core") (r "^0.33.0") (f (quote ("lazy" "zip_with" "random"))) (k 0)) (d (n "polars-ffi") (r "^0.33.0") (o #t) (k 0)) (d (n "polars-io") (r "^0.33.0") (f (quote ("lazy" "csv"))) (k 0)) (d (n "polars-ops") (r "^0.33.0") (k 0)) (d (n "polars-time") (r "^0.33.0") (o #t) (k 0)) (d (n "polars-utils") (r "^0.33.0") (k 0)) (d (n "pyo3") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "1niyrjcs91j94vp3j28drwdqlls2yqbvpp29nqd6vszrkvpzz19h") (f (quote (("unique_counts" "polars-core/unique_counts") ("true_div") ("trigonometry") ("top_k" "polars-ops/top_k") ("timezones" "chrono-tz" "polars-time/timezones" "polars-core/timezones" "regex") ("temporal" "polars-core/temporal" "dtype-date" "dtype-datetime" "dtype-time") ("strings" "polars-core/strings" "polars-ops/strings") ("string_justify" "polars-ops/string_justify") ("string_from_radix" "polars-ops/string_from_radix") ("streaming") ("sign") ("semi_anti_join" "polars-core/semi_anti_join" "polars-ops/semi_anti_join") ("search_sorted" "polars-ops/search_sorted") ("row_hash" "polars-core/row_hash" "polars-ops/hash") ("round_series" "polars-core/round_series") ("rolling_window" "polars-core/rolling_window" "polars-time/rolling_window" "polars-ops/rolling_window" "polars-time/rolling_window") ("rle" "polars-ops/rle") ("repeat_by" "polars-core/repeat_by") ("rank" "polars-core/rank") ("range") ("random" "polars-core/random") ("propagate_nans" "polars-ops/propagate_nans") ("pivot" "polars-core/rows" "polars-ops/pivot") ("pct_change" "polars-core/pct_change") ("parquet" "polars-core/parquet" "polars-io/parquet") ("panic_on_schema") ("object" "polars-core/object") ("nightly" "polars-utils/nightly" "polars-ops/nightly") ("moment" "polars-core/moment" "polars-ops/moment") ("mode" "polars-core/mode") ("meta") ("merge_sorted" "polars-ops/merge_sorted") ("log" "polars-ops/log") ("list_to_struct" "polars-ops/list_to_struct") ("list_take" "polars-ops/list_take") ("list_sets" "polars-ops/list_sets") ("list_count" "polars-ops/list_count") ("list_any_all" "polars-ops/list_any_all") ("json" "polars-io/json") ("is_unique" "polars-ops/is_unique") ("is_last_distinct" "polars-core/is_last_distinct" "polars-ops/is_last_distinct") ("is_in" "polars-ops/is_in") ("is_first_distinct" "polars-core/is_first_distinct" "polars-ops/is_first_distinct") ("ipc" "polars-io/ipc") ("interpolate" "polars-ops/interpolate") ("future") ("fused" "polars-ops/fused") ("fmt" "polars-core/fmt") ("ffi_plugin" "libloading" "polars-ffi") ("extract_jsonpath" "polars-ops/extract_jsonpath") ("extract_groups" "regex" "dtype-struct" "polars-ops/extract_groups") ("ewma" "polars-core/ewma") ("dynamic_group_by" "polars-core/dynamic_group_by") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-time/dtype-time") ("dtype-struct" "polars-core/dtype-struct") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-core/dtype-date" "polars-time/dtype-date" "temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-array" "polars-core/dtype-array" "polars-ops/dtype-array") ("dot_diagram") ("diff" "polars-core/diff" "polars-ops/diff") ("default" "compile") ("debugging") ("date_offset" "polars-time" "chrono") ("cutqcut" "polars-ops/cutqcut") ("cum_agg" "polars-core/cum_agg") ("csv" "polars-io/csv") ("cse") ("cross_join" "polars-core/cross_join") ("concat_str" "polars-core/concat_str") ("compile") ("coalesce") ("cloud" "async" "polars-io/cloud") ("chunked_ids" "polars-core/chunked_ids") ("binary_encoding" "polars-ops/binary_encoding") ("bigidx" "polars-arrow/bigidx" "polars-core/bigidx" "polars-utils/bigidx") ("async" "polars-io/async") ("asof_join" "polars-core/asof_join" "polars-time" "polars-ops/asof_join") ("arg_where") ("approx_unique" "polars-ops/approx_unique") ("abs" "polars-core/abs")))) (s 2) (e (quote (("serde" "dep:serde" "polars-core/serde-lazy" "polars-time/serde" "polars-io/serde" "polars-ops/serde") ("python" "dep:pyo3" "ciborium"))))))

(define-public crate-polars-plan-0.33.1 (c (n "polars-plan") (v "0.33.1") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "arrow") (r "^0.18.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "ciborium") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.33.1") (k 0)) (d (n "polars-core") (r "^0.33.1") (f (quote ("lazy" "zip_with" "random"))) (k 0)) (d (n "polars-ffi") (r "^0.33.1") (o #t) (k 0)) (d (n "polars-io") (r "^0.33.1") (f (quote ("lazy"))) (k 0)) (d (n "polars-ops") (r "^0.33.1") (k 0)) (d (n "polars-time") (r "^0.33.1") (o #t) (k 0)) (d (n "polars-utils") (r "^0.33.1") (k 0)) (d (n "pyo3") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "05n8qv9h48v5yymyb6bya4ll448j317ghlqkyi6jspamkx5vb84h") (f (quote (("unique_counts" "polars-core/unique_counts") ("true_div") ("trigonometry") ("top_k" "polars-ops/top_k") ("timezones" "chrono-tz" "polars-time/timezones" "polars-core/timezones" "regex") ("temporal" "polars-core/temporal" "dtype-date" "dtype-datetime" "dtype-time") ("strings" "polars-core/strings" "polars-ops/strings") ("string_justify" "polars-ops/string_justify") ("string_from_radix" "polars-ops/string_from_radix") ("streaming") ("sign") ("semi_anti_join" "polars-core/semi_anti_join" "polars-ops/semi_anti_join") ("search_sorted" "polars-ops/search_sorted") ("row_hash" "polars-core/row_hash" "polars-ops/hash") ("round_series" "polars-core/round_series") ("rolling_window" "polars-core/rolling_window" "polars-time/rolling_window" "polars-ops/rolling_window" "polars-time/rolling_window") ("rle" "polars-ops/rle") ("repeat_by" "polars-core/repeat_by") ("rank" "polars-core/rank") ("range") ("random" "polars-core/random") ("propagate_nans" "polars-ops/propagate_nans") ("pivot" "polars-core/rows" "polars-ops/pivot") ("pct_change" "polars-core/pct_change") ("parquet" "polars-core/parquet" "polars-io/parquet") ("panic_on_schema") ("object" "polars-core/object") ("nightly" "polars-utils/nightly" "polars-ops/nightly") ("moment" "polars-core/moment" "polars-ops/moment") ("mode" "polars-core/mode") ("meta") ("merge_sorted" "polars-ops/merge_sorted") ("log" "polars-ops/log") ("list_to_struct" "polars-ops/list_to_struct") ("list_take" "polars-ops/list_take") ("list_sets" "polars-ops/list_sets") ("list_count" "polars-ops/list_count") ("list_any_all" "polars-ops/list_any_all") ("json" "polars-io/json") ("is_unique" "polars-ops/is_unique") ("is_last_distinct" "polars-core/is_last_distinct" "polars-ops/is_last_distinct") ("is_in" "polars-ops/is_in") ("is_first_distinct" "polars-core/is_first_distinct" "polars-ops/is_first_distinct") ("ipc" "polars-io/ipc") ("interpolate" "polars-ops/interpolate") ("future") ("fused" "polars-ops/fused") ("fmt" "polars-core/fmt") ("ffi_plugin" "libloading" "polars-ffi") ("extract_jsonpath" "polars-ops/extract_jsonpath") ("extract_groups" "regex" "dtype-struct" "polars-ops/extract_groups") ("ewma" "polars-core/ewma") ("dynamic_group_by" "polars-core/dynamic_group_by") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-time/dtype-time") ("dtype-struct" "polars-core/dtype-struct") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-core/dtype-date" "polars-time/dtype-date" "temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-array" "polars-core/dtype-array" "polars-ops/dtype-array") ("dot_diagram") ("diff" "polars-core/diff" "polars-ops/diff") ("debugging") ("date_offset" "polars-time" "chrono") ("cutqcut" "polars-ops/cutqcut") ("cum_agg" "polars-core/cum_agg") ("csv" "polars-io/csv") ("cse") ("cross_join" "polars-core/cross_join") ("concat_str" "polars-core/concat_str") ("coalesce") ("cloud" "async" "polars-io/cloud") ("chunked_ids" "polars-core/chunked_ids") ("binary_encoding" "polars-ops/binary_encoding") ("bigidx" "polars-core/bigidx") ("async" "polars-io/async") ("asof_join" "polars-core/asof_join" "polars-time" "polars-ops/asof_join") ("arg_where") ("approx_unique" "polars-ops/approx_unique") ("abs" "polars-core/abs")))) (s 2) (e (quote (("serde" "dep:serde" "polars-core/serde-lazy" "polars-time/serde" "polars-io/serde" "polars-ops/serde") ("python" "dep:pyo3" "ciborium"))))))

(define-public crate-polars-plan-0.33.2 (c (n "polars-plan") (v "0.33.2") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "arrow") (r "^0.18.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "ciborium") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.33.2") (k 0)) (d (n "polars-core") (r "^0.33.2") (f (quote ("lazy" "zip_with" "random"))) (k 0)) (d (n "polars-ffi") (r "^0.33.2") (o #t) (k 0)) (d (n "polars-io") (r "^0.33.2") (f (quote ("lazy"))) (k 0)) (d (n "polars-ops") (r "^0.33.2") (k 0)) (d (n "polars-time") (r "^0.33.2") (o #t) (k 0)) (d (n "polars-utils") (r "^0.33.2") (k 0)) (d (n "pyo3") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "17ia6ajf9h26n3m6gikl788wcks52lni0i6qz3q517p262vvx337") (f (quote (("unique_counts" "polars-core/unique_counts") ("true_div") ("trigonometry") ("top_k" "polars-ops/top_k") ("timezones" "chrono-tz" "polars-time/timezones" "polars-core/timezones" "regex") ("temporal" "polars-core/temporal" "dtype-date" "dtype-datetime" "dtype-time") ("strings" "polars-core/strings" "polars-ops/strings") ("string_justify" "polars-ops/string_justify") ("string_from_radix" "polars-ops/string_from_radix") ("streaming") ("sign") ("semi_anti_join" "polars-core/semi_anti_join" "polars-ops/semi_anti_join") ("search_sorted" "polars-ops/search_sorted") ("row_hash" "polars-core/row_hash" "polars-ops/hash") ("round_series" "polars-core/round_series") ("rolling_window" "polars-core/rolling_window" "polars-time/rolling_window" "polars-ops/rolling_window" "polars-time/rolling_window") ("rle" "polars-ops/rle") ("repeat_by" "polars-core/repeat_by") ("rank" "polars-core/rank") ("range") ("random" "polars-core/random") ("propagate_nans" "polars-ops/propagate_nans") ("pivot" "polars-core/rows" "polars-ops/pivot") ("pct_change" "polars-core/pct_change") ("parquet" "polars-core/parquet" "polars-io/parquet") ("panic_on_schema") ("object" "polars-core/object") ("nightly" "polars-utils/nightly" "polars-ops/nightly") ("moment" "polars-core/moment" "polars-ops/moment") ("mode" "polars-core/mode") ("meta") ("merge_sorted" "polars-ops/merge_sorted") ("log" "polars-ops/log") ("list_to_struct" "polars-ops/list_to_struct") ("list_take" "polars-ops/list_take") ("list_sets" "polars-ops/list_sets") ("list_count" "polars-ops/list_count") ("list_any_all" "polars-ops/list_any_all") ("json" "polars-io/json") ("is_unique" "polars-ops/is_unique") ("is_last_distinct" "polars-core/is_last_distinct" "polars-ops/is_last_distinct") ("is_in" "polars-ops/is_in") ("is_first_distinct" "polars-core/is_first_distinct" "polars-ops/is_first_distinct") ("ipc" "polars-io/ipc") ("interpolate" "polars-ops/interpolate") ("future") ("fused" "polars-ops/fused") ("fmt" "polars-core/fmt") ("ffi_plugin" "libloading" "polars-ffi") ("extract_jsonpath" "polars-ops/extract_jsonpath") ("extract_groups" "regex" "dtype-struct" "polars-ops/extract_groups") ("ewma" "polars-core/ewma") ("dynamic_group_by" "polars-core/dynamic_group_by") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-time/dtype-time") ("dtype-struct" "polars-core/dtype-struct") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-core/dtype-date" "polars-time/dtype-date" "temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-array" "polars-core/dtype-array" "polars-ops/dtype-array") ("dot_diagram") ("diff" "polars-core/diff" "polars-ops/diff") ("debugging") ("date_offset" "polars-time" "chrono") ("cutqcut" "polars-ops/cutqcut") ("cum_agg" "polars-core/cum_agg") ("csv" "polars-io/csv") ("cse") ("cross_join" "polars-core/cross_join") ("concat_str" "polars-core/concat_str") ("coalesce") ("cloud" "async" "polars-io/cloud") ("chunked_ids" "polars-core/chunked_ids") ("binary_encoding" "polars-ops/binary_encoding") ("bigidx" "polars-core/bigidx") ("async" "polars-io/async") ("asof_join" "polars-core/asof_join" "polars-time" "polars-ops/asof_join") ("arg_where") ("approx_unique" "polars-ops/approx_unique") ("abs" "polars-core/abs")))) (s 2) (e (quote (("serde" "dep:serde" "polars-core/serde-lazy" "polars-time/serde" "polars-io/serde" "polars-ops/serde") ("python" "dep:pyo3" "ciborium"))))))

(define-public crate-polars-plan-0.34.0 (c (n "polars-plan") (v "0.34.0") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.34.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "bytemuck") (r "^1") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "ciborium") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 0)) (d (n "polars-core") (r "^0.34.0") (f (quote ("lazy" "zip_with" "random"))) (k 0)) (d (n "polars-ffi") (r "^0.34.0") (o #t) (k 0)) (d (n "polars-io") (r "^0.34.0") (f (quote ("lazy"))) (k 0)) (d (n "polars-ops") (r "^0.34.0") (f (quote ("zip_with"))) (k 0)) (d (n "polars-time") (r "^0.34.0") (o #t) (k 0)) (d (n "polars-utils") (r "^0.34.0") (k 0)) (d (n "pyo3") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "0cdldyrvxqgb5i7kpm8ixyb6dwxjrc2rmw2fq8q3zmfycjd3bmq3") (f (quote (("unique_counts" "polars-ops/unique_counts") ("true_div") ("trigonometry") ("top_k" "polars-ops/top_k") ("timezones" "chrono-tz" "polars-time/timezones" "polars-core/timezones" "regex") ("temporal" "polars-core/temporal" "dtype-date" "dtype-datetime" "dtype-time") ("strings" "polars-core/strings" "polars-ops/strings") ("string_justify" "polars-ops/string_justify") ("string_from_radix" "polars-ops/string_from_radix") ("streaming") ("sign") ("semi_anti_join" "polars-ops/semi_anti_join") ("search_sorted" "polars-ops/search_sorted") ("row_hash" "polars-core/row_hash" "polars-ops/hash") ("round_series" "polars-ops/round_series") ("rolling_window" "polars-core/rolling_window" "polars-time/rolling_window" "polars-ops/rolling_window" "polars-time/rolling_window") ("rle" "polars-ops/rle") ("repeat_by" "polars-ops/repeat_by") ("rank" "polars-ops/rank") ("range") ("random" "polars-core/random") ("propagate_nans" "polars-ops/propagate_nans") ("pivot" "polars-core/rows" "polars-ops/pivot") ("peaks" "polars-ops/peaks") ("pct_change" "polars-ops/pct_change") ("parquet" "polars-core/parquet" "polars-io/parquet") ("panic_on_schema") ("object" "polars-core/object") ("nightly" "polars-utils/nightly" "polars-ops/nightly") ("moment" "polars-ops/moment") ("mode" "polars-ops/mode") ("meta") ("merge_sorted" "polars-ops/merge_sorted") ("log" "polars-ops/log") ("list_to_struct" "polars-ops/list_to_struct") ("list_take" "polars-ops/list_take") ("list_sets" "polars-ops/list_sets") ("list_sample" "polars-ops/list_sample") ("list_drop_nulls" "polars-ops/list_drop_nulls") ("list_count" "polars-ops/list_count") ("list_any_all" "polars-ops/list_any_all") ("json" "polars-io/json") ("is_unique" "polars-ops/is_unique") ("is_last_distinct" "polars-core/is_last_distinct" "polars-ops/is_last_distinct") ("is_in" "polars-ops/is_in") ("is_first_distinct" "polars-core/is_first_distinct" "polars-ops/is_first_distinct") ("ipc" "polars-io/ipc") ("interpolate" "polars-ops/interpolate") ("hive_partitions") ("future") ("fused" "polars-ops/fused") ("fmt" "polars-core/fmt") ("ffi_plugin" "libloading" "polars-ffi") ("extract_jsonpath" "polars-ops/extract_jsonpath") ("extract_groups" "regex" "dtype-struct" "polars-ops/extract_groups") ("ewma" "polars-ops/ewma") ("dynamic_group_by" "polars-core/dynamic_group_by") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-time/dtype-time") ("dtype-struct" "polars-core/dtype-struct") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-core/dtype-date" "polars-time/dtype-date" "temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-array" "polars-core/dtype-array" "polars-ops/dtype-array") ("dot_diagram") ("diff" "polars-ops/diff") ("debugging") ("date_offset" "polars-time" "chrono") ("cutqcut" "polars-ops/cutqcut") ("cum_agg" "polars-ops/cum_agg") ("csv" "polars-io/csv") ("cse") ("cross_join" "polars-ops/cross_join") ("concat_str") ("coalesce") ("cloud" "async" "polars-io/cloud") ("chunked_ids" "polars-core/chunked_ids") ("binary_encoding" "polars-ops/binary_encoding") ("bigidx" "polars-core/bigidx") ("async" "polars-io/async") ("asof_join" "polars-core/asof_join" "polars-time" "polars-ops/asof_join") ("arg_where") ("approx_unique" "polars-ops/approx_unique") ("abs" "polars-core/abs")))) (s 2) (e (quote (("serde" "dep:serde" "polars-core/serde-lazy" "polars-time/serde" "polars-io/serde" "polars-ops/serde") ("python" "dep:pyo3" "ciborium"))))))

(define-public crate-polars-plan-0.34.1 (c (n "polars-plan") (v "0.34.1") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.34.1") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "bytemuck") (r "^1") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "ciborium") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 0)) (d (n "polars-core") (r "^0.34.1") (f (quote ("lazy" "zip_with" "random"))) (k 0)) (d (n "polars-ffi") (r "^0.34.1") (o #t) (k 0)) (d (n "polars-io") (r "^0.34.1") (f (quote ("lazy"))) (k 0)) (d (n "polars-ops") (r "^0.34.1") (f (quote ("zip_with"))) (k 0)) (d (n "polars-time") (r "^0.34.1") (o #t) (k 0)) (d (n "polars-utils") (r "^0.34.1") (k 0)) (d (n "pyo3") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "0az2agkh8gafc948cr7nfn9qp6vpiknjs7w958sa6dxsjmnv11n8") (f (quote (("unique_counts" "polars-ops/unique_counts") ("true_div") ("trigonometry") ("top_k" "polars-ops/top_k") ("timezones" "chrono-tz" "polars-time/timezones" "polars-core/timezones" "regex") ("temporal" "polars-core/temporal" "dtype-date" "dtype-datetime" "dtype-time") ("strings" "polars-core/strings" "polars-ops/strings") ("string_pad" "polars-ops/string_pad") ("string_from_radix" "polars-ops/string_from_radix") ("streaming") ("sign") ("semi_anti_join" "polars-ops/semi_anti_join") ("search_sorted" "polars-ops/search_sorted") ("row_hash" "polars-core/row_hash" "polars-ops/hash") ("round_series" "polars-ops/round_series") ("rolling_window" "polars-core/rolling_window" "polars-time/rolling_window" "polars-ops/rolling_window" "polars-time/rolling_window") ("rle" "polars-ops/rle") ("repeat_by" "polars-ops/repeat_by") ("rank" "polars-ops/rank") ("range") ("random" "polars-core/random") ("propagate_nans" "polars-ops/propagate_nans") ("pivot" "polars-core/rows" "polars-ops/pivot") ("peaks" "polars-ops/peaks") ("pct_change" "polars-ops/pct_change") ("parquet" "polars-core/parquet" "polars-io/parquet") ("panic_on_schema") ("object" "polars-core/object") ("nightly" "polars-utils/nightly" "polars-ops/nightly") ("moment" "polars-ops/moment") ("mode" "polars-ops/mode") ("meta") ("merge_sorted" "polars-ops/merge_sorted") ("log" "polars-ops/log") ("list_to_struct" "polars-ops/list_to_struct") ("list_take" "polars-ops/list_take") ("list_sets" "polars-ops/list_sets") ("list_sample" "polars-ops/list_sample") ("list_drop_nulls" "polars-ops/list_drop_nulls") ("list_count" "polars-ops/list_count") ("list_any_all" "polars-ops/list_any_all") ("json" "polars-io/json") ("is_unique" "polars-ops/is_unique") ("is_last_distinct" "polars-core/is_last_distinct" "polars-ops/is_last_distinct") ("is_in" "polars-ops/is_in") ("is_first_distinct" "polars-core/is_first_distinct" "polars-ops/is_first_distinct") ("ipc" "polars-io/ipc") ("interpolate" "polars-ops/interpolate") ("hive_partitions") ("future") ("fused" "polars-ops/fused") ("fmt" "polars-core/fmt") ("ffi_plugin" "libloading" "polars-ffi") ("extract_jsonpath" "polars-ops/extract_jsonpath") ("extract_groups" "regex" "dtype-struct" "polars-ops/extract_groups") ("ewma" "polars-ops/ewma") ("dynamic_group_by" "polars-core/dynamic_group_by") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-time/dtype-time") ("dtype-struct" "polars-core/dtype-struct") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-core/dtype-date" "polars-time/dtype-date" "temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-array" "polars-core/dtype-array" "polars-ops/dtype-array") ("dot_diagram") ("diff" "polars-ops/diff") ("debugging") ("date_offset" "polars-time" "chrono") ("cutqcut" "polars-ops/cutqcut") ("cum_agg" "polars-ops/cum_agg") ("csv" "polars-io/csv") ("cse") ("cross_join" "polars-ops/cross_join") ("concat_str") ("coalesce") ("cloud" "async" "polars-io/cloud") ("chunked_ids" "polars-core/chunked_ids") ("binary_encoding" "polars-ops/binary_encoding") ("bigidx" "polars-core/bigidx") ("async" "polars-io/async") ("asof_join" "polars-core/asof_join" "polars-time" "polars-ops/asof_join") ("arg_where") ("approx_unique" "polars-ops/approx_unique") ("abs" "polars-core/abs")))) (s 2) (e (quote (("serde" "dep:serde" "polars-core/serde-lazy" "polars-time/serde" "polars-io/serde" "polars-ops/serde") ("python" "dep:pyo3" "ciborium"))))))

(define-public crate-polars-plan-0.34.2 (c (n "polars-plan") (v "0.34.2") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.34.2") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "bytemuck") (r "^1") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "ciborium") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 0)) (d (n "polars-core") (r "^0.34.2") (f (quote ("lazy" "zip_with" "random"))) (k 0)) (d (n "polars-ffi") (r "^0.34.2") (o #t) (k 0)) (d (n "polars-io") (r "^0.34.2") (f (quote ("lazy"))) (k 0)) (d (n "polars-ops") (r "^0.34.2") (f (quote ("zip_with"))) (k 0)) (d (n "polars-time") (r "^0.34.2") (o #t) (k 0)) (d (n "polars-utils") (r "^0.34.2") (k 0)) (d (n "pyo3") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "1xnyyd73p0y8648vkn0624qgzjcmbi6d0cb33aval4pnv1i5szn4") (f (quote (("unique_counts" "polars-ops/unique_counts") ("true_div") ("trigonometry") ("top_k" "polars-ops/top_k") ("timezones" "chrono-tz" "polars-time/timezones" "polars-core/timezones" "regex") ("temporal" "polars-core/temporal" "dtype-date" "dtype-datetime" "dtype-time") ("strings" "polars-core/strings" "polars-ops/strings") ("string_pad" "polars-ops/string_pad") ("string_from_radix" "polars-ops/string_from_radix") ("streaming") ("sign") ("semi_anti_join" "polars-ops/semi_anti_join") ("search_sorted" "polars-ops/search_sorted") ("row_hash" "polars-core/row_hash" "polars-ops/hash") ("round_series" "polars-ops/round_series") ("rolling_window" "polars-core/rolling_window" "polars-time/rolling_window" "polars-ops/rolling_window" "polars-time/rolling_window") ("rle" "polars-ops/rle") ("repeat_by" "polars-ops/repeat_by") ("rank" "polars-ops/rank") ("range") ("random" "polars-core/random") ("propagate_nans" "polars-ops/propagate_nans") ("pivot" "polars-core/rows" "polars-ops/pivot") ("peaks" "polars-ops/peaks") ("pct_change" "polars-ops/pct_change") ("parquet" "polars-core/parquet" "polars-io/parquet") ("panic_on_schema") ("object" "polars-core/object") ("nightly" "polars-utils/nightly" "polars-ops/nightly") ("moment" "polars-ops/moment") ("mode" "polars-ops/mode") ("meta") ("merge_sorted" "polars-ops/merge_sorted") ("log" "polars-ops/log") ("list_to_struct" "polars-ops/list_to_struct") ("list_take" "polars-ops/list_take") ("list_sets" "polars-ops/list_sets") ("list_sample" "polars-ops/list_sample") ("list_drop_nulls" "polars-ops/list_drop_nulls") ("list_count" "polars-ops/list_count") ("list_any_all" "polars-ops/list_any_all") ("json" "polars-io/json") ("is_unique" "polars-ops/is_unique") ("is_last_distinct" "polars-core/is_last_distinct" "polars-ops/is_last_distinct") ("is_in" "polars-ops/is_in") ("is_first_distinct" "polars-core/is_first_distinct" "polars-ops/is_first_distinct") ("ipc" "polars-io/ipc") ("interpolate" "polars-ops/interpolate") ("hive_partitions") ("future") ("fused" "polars-ops/fused") ("fmt" "polars-core/fmt") ("ffi_plugin" "libloading" "polars-ffi") ("extract_jsonpath" "polars-ops/extract_jsonpath") ("extract_groups" "regex" "dtype-struct" "polars-ops/extract_groups") ("ewma" "polars-ops/ewma") ("dynamic_group_by" "polars-core/dynamic_group_by") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-time/dtype-time") ("dtype-struct" "polars-core/dtype-struct") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-core/dtype-date" "polars-time/dtype-date" "temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-array" "polars-core/dtype-array" "polars-ops/dtype-array") ("dot_diagram") ("diff" "polars-ops/diff") ("debugging") ("date_offset" "polars-time" "chrono") ("cutqcut" "polars-ops/cutqcut") ("cum_agg" "polars-ops/cum_agg") ("csv" "polars-io/csv") ("cse") ("cross_join" "polars-ops/cross_join") ("concat_str") ("coalesce") ("cloud" "async" "polars-io/cloud") ("chunked_ids" "polars-core/chunked_ids") ("binary_encoding" "polars-ops/binary_encoding") ("bigidx" "polars-core/bigidx") ("async" "polars-io/async") ("asof_join" "polars-core/asof_join" "polars-time" "polars-ops/asof_join") ("arg_where") ("approx_unique" "polars-ops/approx_unique") ("abs" "polars-core/abs")))) (s 2) (e (quote (("serde" "dep:serde" "polars-core/serde-lazy" "polars-time/serde" "polars-io/serde" "polars-ops/serde") ("python" "dep:pyo3" "ciborium"))))))

(define-public crate-polars-plan-0.35.0 (c (n "polars-plan") (v "0.35.0") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.35.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "bytemuck") (r "^1") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "ciborium") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 0)) (d (n "polars-core") (r "^0.35.0") (f (quote ("lazy" "zip_with" "random"))) (k 0)) (d (n "polars-ffi") (r "^0.35.0") (o #t) (k 0)) (d (n "polars-io") (r "^0.35.0") (f (quote ("lazy"))) (k 0)) (d (n "polars-ops") (r "^0.35.0") (f (quote ("zip_with"))) (k 0)) (d (n "polars-parquet") (r "^0.35.0") (o #t) (k 0)) (d (n "polars-time") (r "^0.35.0") (o #t) (k 0)) (d (n "polars-utils") (r "^0.35.0") (k 0)) (d (n "pyo3") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "1mwzrzmqgcv8jgwx6qi42lsj98swbgx5c5d6rg8n7sk1w3lyavp4") (f (quote (("unique_counts" "polars-ops/unique_counts") ("true_div") ("trigonometry") ("top_k" "polars-ops/top_k") ("timezones" "chrono-tz" "polars-time/timezones" "polars-core/timezones" "regex") ("temporal" "polars-core/temporal" "dtype-date" "dtype-datetime" "dtype-time") ("strings" "polars-core/strings" "polars-ops/strings") ("string_to_integer" "polars-ops/string_to_integer") ("string_pad" "polars-ops/string_pad") ("string_encoding" "polars-ops/string_encoding") ("streaming") ("sign") ("semi_anti_join" "polars-ops/semi_anti_join") ("search_sorted" "polars-ops/search_sorted") ("row_hash" "polars-core/row_hash" "polars-ops/hash") ("round_series" "polars-ops/round_series") ("rolling_window" "polars-core/rolling_window" "polars-time/rolling_window" "polars-ops/rolling_window" "polars-time/rolling_window") ("rle" "polars-ops/rle") ("repeat_by" "polars-ops/repeat_by") ("rank" "polars-ops/rank") ("range") ("random" "polars-core/random") ("propagate_nans" "polars-ops/propagate_nans") ("pivot" "polars-core/rows" "polars-ops/pivot") ("peaks" "polars-ops/peaks") ("pct_change" "polars-ops/pct_change") ("parquet" "polars-io/parquet" "polars-parquet") ("panic_on_schema") ("object" "polars-core/object") ("nightly" "polars-utils/nightly" "polars-ops/nightly") ("moment" "polars-ops/moment") ("mode" "polars-ops/mode") ("meta") ("merge_sorted" "polars-ops/merge_sorted") ("log" "polars-ops/log") ("list_to_struct" "polars-ops/list_to_struct") ("list_sets" "polars-ops/list_sets") ("list_sample" "polars-ops/list_sample") ("list_gather" "polars-ops/list_gather") ("list_drop_nulls" "polars-ops/list_drop_nulls") ("list_count" "polars-ops/list_count") ("list_any_all" "polars-ops/list_any_all") ("json" "polars-io/json") ("is_unique" "polars-ops/is_unique") ("is_last_distinct" "polars-core/is_last_distinct" "polars-ops/is_last_distinct") ("is_in" "polars-ops/is_in") ("is_first_distinct" "polars-core/is_first_distinct" "polars-ops/is_first_distinct") ("ipc" "polars-io/ipc") ("interpolate" "polars-ops/interpolate") ("hive_partitions") ("future") ("fused" "polars-ops/fused") ("fmt" "polars-core/fmt") ("ffi_plugin" "libloading" "polars-ffi") ("extract_jsonpath" "polars-ops/extract_jsonpath") ("extract_groups" "regex" "dtype-struct" "polars-ops/extract_groups") ("ewma" "polars-ops/ewma") ("dynamic_group_by" "polars-core/dynamic_group_by") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-time/dtype-time") ("dtype-struct" "polars-core/dtype-struct") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-core/dtype-date" "polars-time/dtype-date" "temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-array" "polars-core/dtype-array" "polars-ops/dtype-array") ("dot_diagram") ("diff" "polars-ops/diff") ("debugging") ("date_offset" "polars-time" "chrono") ("cutqcut" "polars-ops/cutqcut") ("cum_agg" "polars-ops/cum_agg") ("csv" "polars-io/csv") ("cse") ("cross_join" "polars-ops/cross_join") ("cov" "polars-ops/cov") ("concat_str") ("coalesce") ("cloud" "async" "polars-io/cloud") ("chunked_ids" "polars-core/chunked_ids") ("binary_encoding" "polars-ops/binary_encoding") ("bigidx" "polars-core/bigidx") ("async" "polars-io/async") ("asof_join" "polars-core/asof_join" "polars-time" "polars-ops/asof_join") ("arg_where") ("approx_unique" "polars-ops/approx_unique") ("abs" "polars-ops/abs")))) (s 2) (e (quote (("serde" "dep:serde" "polars-core/serde-lazy" "polars-time/serde" "polars-io/serde" "polars-ops/serde") ("python" "dep:pyo3" "ciborium"))))))

(define-public crate-polars-plan-0.35.1 (c (n "polars-plan") (v "0.35.1") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.35.1") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "bytemuck") (r "^1") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "ciborium") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 0)) (d (n "polars-core") (r "^0.35.1") (f (quote ("lazy" "zip_with" "random"))) (k 0)) (d (n "polars-ffi") (r "^0.35.1") (o #t) (k 0)) (d (n "polars-io") (r "^0.35.1") (f (quote ("lazy"))) (k 0)) (d (n "polars-ops") (r "^0.35.1") (f (quote ("zip_with"))) (k 0)) (d (n "polars-parquet") (r "^0.35.1") (o #t) (k 0)) (d (n "polars-time") (r "^0.35.1") (o #t) (k 0)) (d (n "polars-utils") (r "^0.35.1") (k 0)) (d (n "pyo3") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "0ibl64rqv30db3bmi04m04dk8cxik533xb4a211bkaq9yf5b8nxi") (f (quote (("unique_counts" "polars-ops/unique_counts") ("true_div") ("trigonometry") ("top_k" "polars-ops/top_k") ("timezones" "chrono-tz" "polars-time/timezones" "polars-core/timezones" "regex") ("temporal" "polars-core/temporal" "dtype-date" "dtype-datetime" "dtype-time") ("strings" "polars-core/strings" "polars-ops/strings") ("string_to_integer" "polars-ops/string_to_integer") ("string_pad" "polars-ops/string_pad") ("string_encoding" "polars-ops/string_encoding") ("streaming") ("sign") ("semi_anti_join" "polars-ops/semi_anti_join") ("search_sorted" "polars-ops/search_sorted") ("row_hash" "polars-core/row_hash" "polars-ops/hash") ("round_series" "polars-ops/round_series") ("rolling_window" "polars-core/rolling_window" "polars-time/rolling_window" "polars-ops/rolling_window" "polars-time/rolling_window") ("rle" "polars-ops/rle") ("repeat_by" "polars-ops/repeat_by") ("rank" "polars-ops/rank") ("range") ("random" "polars-core/random") ("propagate_nans" "polars-ops/propagate_nans") ("pivot" "polars-core/rows" "polars-ops/pivot") ("peaks" "polars-ops/peaks") ("pct_change" "polars-ops/pct_change") ("parquet" "polars-io/parquet" "polars-parquet") ("panic_on_schema") ("object" "polars-core/object") ("nightly" "polars-utils/nightly" "polars-ops/nightly") ("moment" "polars-ops/moment") ("mode" "polars-ops/mode") ("meta") ("merge_sorted" "polars-ops/merge_sorted") ("log" "polars-ops/log") ("list_to_struct" "polars-ops/list_to_struct") ("list_sets" "polars-ops/list_sets") ("list_sample" "polars-ops/list_sample") ("list_gather" "polars-ops/list_gather") ("list_drop_nulls" "polars-ops/list_drop_nulls") ("list_count" "polars-ops/list_count") ("list_any_all" "polars-ops/list_any_all") ("json" "polars-io/json") ("is_unique" "polars-ops/is_unique") ("is_last_distinct" "polars-core/is_last_distinct" "polars-ops/is_last_distinct") ("is_in" "polars-ops/is_in") ("is_first_distinct" "polars-core/is_first_distinct" "polars-ops/is_first_distinct") ("ipc" "polars-io/ipc") ("interpolate" "polars-ops/interpolate") ("hive_partitions") ("future") ("fused" "polars-ops/fused") ("fmt" "polars-core/fmt") ("ffi_plugin" "libloading" "polars-ffi") ("extract_jsonpath" "polars-ops/extract_jsonpath") ("extract_groups" "regex" "dtype-struct" "polars-ops/extract_groups") ("ewma" "polars-ops/ewma") ("dynamic_group_by" "polars-core/dynamic_group_by") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-time/dtype-time") ("dtype-struct" "polars-core/dtype-struct") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-core/dtype-date" "polars-time/dtype-date" "temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-array" "polars-core/dtype-array" "polars-ops/dtype-array") ("dot_diagram") ("diff" "polars-ops/diff") ("debugging") ("date_offset" "polars-time" "chrono") ("cutqcut" "polars-ops/cutqcut") ("cum_agg" "polars-ops/cum_agg") ("csv" "polars-io/csv") ("cse") ("cross_join" "polars-ops/cross_join") ("cov" "polars-ops/cov") ("concat_str") ("coalesce") ("cloud" "async" "polars-io/cloud") ("chunked_ids" "polars-core/chunked_ids") ("binary_encoding" "polars-ops/binary_encoding") ("bigidx" "polars-core/bigidx") ("async" "polars-io/async") ("asof_join" "polars-core/asof_join" "polars-time" "polars-ops/asof_join") ("arg_where") ("approx_unique" "polars-ops/approx_unique") ("abs" "polars-ops/abs")))) (s 2) (e (quote (("serde" "dep:serde" "polars-core/serde-lazy" "polars-time/serde" "polars-io/serde" "polars-ops/serde") ("python" "dep:pyo3" "ciborium"))))))

(define-public crate-polars-plan-0.35.2 (c (n "polars-plan") (v "0.35.2") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.35.2") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "bytemuck") (r "^1") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "ciborium") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 0)) (d (n "polars-core") (r "^0.35.2") (f (quote ("lazy" "zip_with" "random"))) (k 0)) (d (n "polars-ffi") (r "^0.35.2") (o #t) (k 0)) (d (n "polars-io") (r "^0.35.2") (f (quote ("lazy"))) (k 0)) (d (n "polars-ops") (r "^0.35.2") (f (quote ("zip_with"))) (k 0)) (d (n "polars-parquet") (r "^0.35.2") (o #t) (k 0)) (d (n "polars-time") (r "^0.35.2") (o #t) (k 0)) (d (n "polars-utils") (r "^0.35.2") (k 0)) (d (n "pyo3") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "1d0gifmbwkpk73jw67pcwydassnswndncy7zzmln9frhpsarj4xg") (f (quote (("unique_counts" "polars-ops/unique_counts") ("true_div") ("trigonometry") ("top_k" "polars-ops/top_k") ("timezones" "chrono-tz" "polars-time/timezones" "polars-core/timezones" "regex") ("temporal" "polars-core/temporal" "dtype-date" "dtype-datetime" "dtype-time") ("strings" "polars-core/strings" "polars-ops/strings") ("string_to_integer" "polars-ops/string_to_integer") ("string_pad" "polars-ops/string_pad") ("string_encoding" "polars-ops/string_encoding") ("streaming") ("sign") ("semi_anti_join" "polars-ops/semi_anti_join") ("search_sorted" "polars-ops/search_sorted") ("row_hash" "polars-core/row_hash" "polars-ops/hash") ("round_series" "polars-ops/round_series") ("rolling_window" "polars-core/rolling_window" "polars-time/rolling_window" "polars-ops/rolling_window" "polars-time/rolling_window") ("rle" "polars-ops/rle") ("repeat_by" "polars-ops/repeat_by") ("rank" "polars-ops/rank") ("range") ("random" "polars-core/random") ("propagate_nans" "polars-ops/propagate_nans") ("pivot" "polars-core/rows" "polars-ops/pivot") ("peaks" "polars-ops/peaks") ("pct_change" "polars-ops/pct_change") ("parquet" "polars-io/parquet" "polars-parquet") ("panic_on_schema") ("object" "polars-core/object") ("nightly" "polars-utils/nightly" "polars-ops/nightly") ("moment" "polars-ops/moment") ("mode" "polars-ops/mode") ("meta") ("merge_sorted" "polars-ops/merge_sorted") ("log" "polars-ops/log") ("list_to_struct" "polars-ops/list_to_struct") ("list_sets" "polars-ops/list_sets") ("list_sample" "polars-ops/list_sample") ("list_gather" "polars-ops/list_gather") ("list_drop_nulls" "polars-ops/list_drop_nulls") ("list_count" "polars-ops/list_count") ("list_any_all" "polars-ops/list_any_all") ("json" "polars-io/json") ("is_unique" "polars-ops/is_unique") ("is_last_distinct" "polars-core/is_last_distinct" "polars-ops/is_last_distinct") ("is_in" "polars-ops/is_in") ("is_first_distinct" "polars-core/is_first_distinct" "polars-ops/is_first_distinct") ("ipc" "polars-io/ipc") ("interpolate" "polars-ops/interpolate") ("hive_partitions") ("future") ("fused" "polars-ops/fused") ("fmt" "polars-core/fmt") ("ffi_plugin" "libloading" "polars-ffi") ("extract_jsonpath" "polars-ops/extract_jsonpath") ("extract_groups" "regex" "dtype-struct" "polars-ops/extract_groups") ("ewma" "polars-ops/ewma") ("dynamic_group_by" "polars-core/dynamic_group_by") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-time/dtype-time") ("dtype-struct" "polars-core/dtype-struct") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-core/dtype-date" "polars-time/dtype-date" "temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-array" "polars-core/dtype-array" "polars-ops/dtype-array") ("dot_diagram") ("diff" "polars-ops/diff") ("debugging") ("date_offset" "polars-time" "chrono") ("cutqcut" "polars-ops/cutqcut") ("cum_agg" "polars-ops/cum_agg") ("csv" "polars-io/csv") ("cse") ("cross_join" "polars-ops/cross_join") ("cov" "polars-ops/cov") ("concat_str") ("coalesce") ("cloud" "async" "polars-io/cloud") ("chunked_ids" "polars-core/chunked_ids") ("binary_encoding" "polars-ops/binary_encoding") ("bigidx" "polars-core/bigidx") ("async" "polars-io/async") ("asof_join" "polars-core/asof_join" "polars-time" "polars-ops/asof_join") ("arg_where") ("approx_unique" "polars-ops/approx_unique") ("abs" "polars-ops/abs")))) (s 2) (e (quote (("serde" "dep:serde" "polars-core/serde-lazy" "polars-time/serde" "polars-io/serde" "polars-ops/serde") ("python" "dep:pyo3" "ciborium"))))))

(define-public crate-polars-plan-0.35.3 (c (n "polars-plan") (v "0.35.3") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.35.3") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "bytemuck") (r "^1") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "ciborium") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 0)) (d (n "polars-core") (r "^0.35.3") (f (quote ("lazy" "zip_with" "random"))) (k 0)) (d (n "polars-ffi") (r "^0.35.3") (o #t) (k 0)) (d (n "polars-io") (r "^0.35.3") (f (quote ("lazy"))) (k 0)) (d (n "polars-ops") (r "^0.35.3") (f (quote ("zip_with"))) (k 0)) (d (n "polars-parquet") (r "^0.35.3") (o #t) (k 0)) (d (n "polars-time") (r "^0.35.3") (o #t) (k 0)) (d (n "polars-utils") (r "^0.35.3") (k 0)) (d (n "pyo3") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "0pbp0nbmj5bx263kh29nw0xfbm425sasxgn1gp618xrp034n6xir") (f (quote (("unique_counts" "polars-ops/unique_counts") ("true_div") ("trigonometry") ("top_k" "polars-ops/top_k") ("timezones" "chrono-tz" "polars-time/timezones" "polars-core/timezones" "regex") ("temporal" "polars-core/temporal" "dtype-date" "dtype-datetime" "dtype-time") ("strings" "polars-core/strings" "polars-ops/strings") ("string_to_integer" "polars-ops/string_to_integer") ("string_pad" "polars-ops/string_pad") ("string_encoding" "polars-ops/string_encoding") ("streaming") ("sign") ("semi_anti_join" "polars-ops/semi_anti_join") ("search_sorted" "polars-ops/search_sorted") ("row_hash" "polars-core/row_hash" "polars-ops/hash") ("round_series" "polars-ops/round_series") ("rolling_window" "polars-core/rolling_window" "polars-time/rolling_window" "polars-ops/rolling_window" "polars-time/rolling_window") ("rle" "polars-ops/rle") ("repeat_by" "polars-ops/repeat_by") ("rank" "polars-ops/rank") ("range") ("random" "polars-core/random") ("propagate_nans" "polars-ops/propagate_nans") ("pivot" "polars-core/rows" "polars-ops/pivot") ("peaks" "polars-ops/peaks") ("pct_change" "polars-ops/pct_change") ("parquet" "polars-io/parquet" "polars-parquet") ("panic_on_schema") ("object" "polars-core/object") ("nightly" "polars-utils/nightly" "polars-ops/nightly") ("moment" "polars-ops/moment") ("mode" "polars-ops/mode") ("meta") ("merge_sorted" "polars-ops/merge_sorted") ("log" "polars-ops/log") ("list_to_struct" "polars-ops/list_to_struct") ("list_sets" "polars-ops/list_sets") ("list_sample" "polars-ops/list_sample") ("list_gather" "polars-ops/list_gather") ("list_drop_nulls" "polars-ops/list_drop_nulls") ("list_count" "polars-ops/list_count") ("list_any_all" "polars-ops/list_any_all") ("json" "polars-io/json") ("is_unique" "polars-ops/is_unique") ("is_last_distinct" "polars-core/is_last_distinct" "polars-ops/is_last_distinct") ("is_in" "polars-ops/is_in") ("is_first_distinct" "polars-core/is_first_distinct" "polars-ops/is_first_distinct") ("ipc" "polars-io/ipc") ("interpolate" "polars-ops/interpolate") ("hive_partitions") ("future") ("fused" "polars-ops/fused") ("fmt" "polars-core/fmt") ("ffi_plugin" "libloading" "polars-ffi") ("extract_jsonpath" "polars-ops/extract_jsonpath") ("extract_groups" "regex" "dtype-struct" "polars-ops/extract_groups") ("ewma" "polars-ops/ewma") ("dynamic_group_by" "polars-core/dynamic_group_by") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-time/dtype-time") ("dtype-struct" "polars-core/dtype-struct") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-core/dtype-date" "polars-time/dtype-date" "temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-array" "polars-core/dtype-array" "polars-ops/dtype-array") ("dot_diagram") ("diff" "polars-ops/diff") ("debugging") ("date_offset" "polars-time" "chrono") ("cutqcut" "polars-ops/cutqcut") ("cum_agg" "polars-ops/cum_agg") ("csv" "polars-io/csv") ("cse") ("cross_join" "polars-ops/cross_join") ("cov" "polars-ops/cov") ("concat_str") ("coalesce") ("cloud" "async" "polars-io/cloud") ("chunked_ids" "polars-core/chunked_ids") ("binary_encoding" "polars-ops/binary_encoding") ("bigidx" "polars-core/bigidx") ("async" "polars-io/async") ("asof_join" "polars-core/asof_join" "polars-time" "polars-ops/asof_join") ("arg_where") ("approx_unique" "polars-ops/approx_unique") ("abs" "polars-ops/abs")))) (s 2) (e (quote (("serde" "dep:serde" "polars-core/serde-lazy" "polars-time/serde" "polars-io/serde" "polars-ops/serde") ("python" "dep:pyo3" "ciborium"))))))

(define-public crate-polars-plan-0.35.4 (c (n "polars-plan") (v "0.35.4") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.35.4") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "bytemuck") (r "^1") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "ciborium") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 0)) (d (n "polars-core") (r "^0.35.4") (f (quote ("lazy" "zip_with" "random"))) (k 0)) (d (n "polars-ffi") (r "^0.35.4") (o #t) (k 0)) (d (n "polars-io") (r "^0.35.4") (f (quote ("lazy"))) (k 0)) (d (n "polars-ops") (r "^0.35.4") (f (quote ("zip_with"))) (k 0)) (d (n "polars-parquet") (r "^0.35.4") (o #t) (k 0)) (d (n "polars-time") (r "^0.35.4") (o #t) (k 0)) (d (n "polars-utils") (r "^0.35.4") (k 0)) (d (n "pyo3") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "1g2z0g0hpg05jp4n9s6m6m32adrjrdlq6zxd5c9lp1ggb04jmqqh") (f (quote (("unique_counts" "polars-ops/unique_counts") ("true_div") ("trigonometry") ("top_k" "polars-ops/top_k") ("timezones" "chrono-tz" "polars-time/timezones" "polars-core/timezones" "regex") ("temporal" "polars-core/temporal" "dtype-date" "dtype-datetime" "dtype-time") ("strings" "polars-core/strings" "polars-ops/strings") ("string_to_integer" "polars-ops/string_to_integer") ("string_pad" "polars-ops/string_pad") ("string_encoding" "polars-ops/string_encoding") ("streaming") ("sign") ("semi_anti_join" "polars-ops/semi_anti_join") ("search_sorted" "polars-ops/search_sorted") ("row_hash" "polars-core/row_hash" "polars-ops/hash") ("round_series" "polars-ops/round_series") ("rolling_window" "polars-core/rolling_window" "polars-time/rolling_window" "polars-ops/rolling_window" "polars-time/rolling_window") ("rle" "polars-ops/rle") ("repeat_by" "polars-ops/repeat_by") ("rank" "polars-ops/rank") ("range") ("random" "polars-core/random") ("propagate_nans" "polars-ops/propagate_nans") ("pivot" "polars-core/rows" "polars-ops/pivot") ("peaks" "polars-ops/peaks") ("pct_change" "polars-ops/pct_change") ("parquet" "polars-io/parquet" "polars-parquet") ("panic_on_schema") ("object" "polars-core/object") ("nightly" "polars-utils/nightly" "polars-ops/nightly") ("moment" "polars-ops/moment") ("mode" "polars-ops/mode") ("meta") ("merge_sorted" "polars-ops/merge_sorted") ("log" "polars-ops/log") ("list_to_struct" "polars-ops/list_to_struct") ("list_sets" "polars-ops/list_sets") ("list_sample" "polars-ops/list_sample") ("list_gather" "polars-ops/list_gather") ("list_drop_nulls" "polars-ops/list_drop_nulls") ("list_count" "polars-ops/list_count") ("list_any_all" "polars-ops/list_any_all") ("json" "polars-io/json") ("is_unique" "polars-ops/is_unique") ("is_last_distinct" "polars-core/is_last_distinct" "polars-ops/is_last_distinct") ("is_in" "polars-ops/is_in") ("is_first_distinct" "polars-core/is_first_distinct" "polars-ops/is_first_distinct") ("ipc" "polars-io/ipc") ("interpolate" "polars-ops/interpolate") ("hive_partitions") ("future") ("fused" "polars-ops/fused") ("fmt" "polars-core/fmt") ("ffi_plugin" "libloading" "polars-ffi") ("extract_jsonpath" "polars-ops/extract_jsonpath") ("extract_groups" "regex" "dtype-struct" "polars-ops/extract_groups") ("ewma" "polars-ops/ewma") ("dynamic_group_by" "polars-core/dynamic_group_by") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-time/dtype-time") ("dtype-struct" "polars-core/dtype-struct") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-core/dtype-date" "polars-time/dtype-date" "temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-array" "polars-core/dtype-array" "polars-ops/dtype-array") ("dot_diagram") ("diff" "polars-ops/diff") ("debugging") ("date_offset" "polars-time" "chrono") ("cutqcut" "polars-ops/cutqcut") ("cum_agg" "polars-ops/cum_agg") ("csv" "polars-io/csv") ("cse") ("cross_join" "polars-ops/cross_join") ("cov" "polars-ops/cov") ("concat_str") ("coalesce") ("cloud" "async" "polars-io/cloud") ("chunked_ids" "polars-core/chunked_ids") ("binary_encoding" "polars-ops/binary_encoding") ("bigidx" "polars-core/bigidx") ("async" "polars-io/async") ("asof_join" "polars-core/asof_join" "polars-time" "polars-ops/asof_join") ("arg_where") ("approx_unique" "polars-ops/approx_unique") ("abs" "polars-ops/abs")))) (s 2) (e (quote (("serde" "dep:serde" "polars-core/serde-lazy" "polars-time/serde" "polars-io/serde" "polars-ops/serde") ("python" "dep:pyo3" "ciborium"))))))

(define-public crate-polars-plan-0.36.0 (c (n "polars-plan") (v "0.36.0") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.36.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "bytemuck") (r "^1.11") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "ciborium") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 0)) (d (n "polars-core") (r "^0.36.0") (f (quote ("lazy" "zip_with" "random"))) (k 0)) (d (n "polars-ffi") (r "^0.36.0") (o #t) (k 0)) (d (n "polars-io") (r "^0.36.0") (f (quote ("lazy"))) (k 0)) (d (n "polars-json") (r "^0.36.0") (o #t) (k 0)) (d (n "polars-ops") (r "^0.36.0") (k 0)) (d (n "polars-parquet") (r "^0.36.0") (o #t) (k 0)) (d (n "polars-time") (r "^0.36.0") (o #t) (k 0)) (d (n "polars-utils") (r "^0.36.0") (k 0)) (d (n "pyo3") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "0y5ciq4064cqsyfyi3f2mp1lx9djb6c1j4qwjkx7nv8q1bdx27s0") (f (quote (("unique_counts" "polars-ops/unique_counts") ("true_div") ("trigonometry") ("top_k" "polars-ops/top_k") ("timezones" "chrono-tz" "polars-time/timezones" "polars-core/timezones" "regex") ("temporal" "polars-core/temporal" "dtype-date" "dtype-datetime" "dtype-time" "dtype-i8" "dtype-i16") ("strings" "polars-core/strings" "polars-ops/strings") ("string_to_integer" "polars-ops/string_to_integer") ("string_reverse" "polars-ops/string_reverse") ("string_pad" "polars-ops/string_pad") ("string_encoding" "polars-ops/string_encoding") ("streaming") ("sign") ("semi_anti_join" "polars-ops/semi_anti_join") ("search_sorted" "polars-ops/search_sorted") ("row_hash" "polars-core/row_hash" "polars-ops/hash") ("round_series" "polars-ops/round_series") ("rolling_window" "polars-core/rolling_window" "polars-time/rolling_window" "polars-ops/rolling_window" "polars-time/rolling_window") ("rle" "polars-ops/rle") ("replace" "polars-ops/replace") ("repeat_by" "polars-ops/repeat_by") ("rank" "polars-ops/rank") ("range") ("random" "polars-core/random") ("propagate_nans" "polars-ops/propagate_nans") ("pivot" "polars-core/rows" "polars-ops/pivot") ("peaks" "polars-ops/peaks") ("pct_change" "polars-ops/pct_change") ("parquet" "polars-io/parquet" "polars-parquet") ("panic_on_schema") ("object" "polars-core/object") ("nightly" "polars-utils/nightly" "polars-ops/nightly") ("moment" "polars-ops/moment") ("mode" "polars-ops/mode") ("meta") ("merge_sorted" "polars-ops/merge_sorted") ("log" "polars-ops/log") ("list_to_struct" "polars-ops/list_to_struct") ("list_sets" "polars-ops/list_sets") ("list_sample" "polars-ops/list_sample") ("list_gather" "polars-ops/list_gather") ("list_drop_nulls" "polars-ops/list_drop_nulls") ("list_count" "polars-ops/list_count") ("list_any_all" "polars-ops/list_any_all") ("json" "polars-io/json" "polars-json") ("is_unique" "polars-ops/is_unique") ("is_last_distinct" "polars-core/is_last_distinct" "polars-ops/is_last_distinct") ("is_in" "polars-ops/is_in") ("is_first_distinct" "polars-core/is_first_distinct" "polars-ops/is_first_distinct") ("ipc" "polars-io/ipc") ("interpolate" "polars-ops/interpolate") ("horizontal_concat") ("hive_partitions") ("hist" "polars-ops/hist") ("future") ("fused" "polars-ops/fused") ("fmt" "polars-core/fmt") ("find_many" "polars-ops/find_many") ("ffi_plugin" "libloading" "polars-ffi") ("extract_jsonpath" "polars-ops/extract_jsonpath") ("extract_groups" "regex" "dtype-struct" "polars-ops/extract_groups") ("ewma" "polars-ops/ewma") ("dynamic_group_by" "polars-core/dynamic_group_by") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-time/dtype-time") ("dtype-struct" "polars-core/dtype-struct") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-core/dtype-date" "polars-time/dtype-date" "temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-array" "polars-core/dtype-array" "polars-ops/dtype-array") ("dot_diagram") ("diff" "polars-ops/diff") ("debugging") ("date_offset" "polars-time" "chrono") ("cutqcut" "polars-ops/cutqcut") ("cum_agg" "polars-ops/cum_agg") ("csv" "polars-io/csv") ("cse") ("cross_join" "polars-ops/cross_join") ("cov" "polars-ops/cov") ("concat_str") ("coalesce") ("cloud" "async" "polars-io/cloud") ("chunked_ids" "polars-core/chunked_ids") ("binary_encoding" "polars-ops/binary_encoding") ("bigidx" "polars-core/bigidx") ("async" "polars-io/async") ("asof_join" "polars-core/asof_join" "polars-time" "polars-ops/asof_join") ("array_any_all" "polars-ops/array_any_all" "dtype-array") ("arg_where") ("approx_unique" "polars-ops/approx_unique") ("abs" "polars-ops/abs")))) (s 2) (e (quote (("serde" "dep:serde" "polars-core/serde-lazy" "polars-time/serde" "polars-io/serde" "polars-ops/serde") ("python" "dep:pyo3" "ciborium"))))))

(define-public crate-polars-plan-0.36.2 (c (n "polars-plan") (v "0.36.2") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.36.2") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "bytemuck") (r "^1.11") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "ciborium") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 0)) (d (n "polars-core") (r "^0.36.2") (f (quote ("lazy" "zip_with" "random"))) (k 0)) (d (n "polars-ffi") (r "^0.36.2") (o #t) (k 0)) (d (n "polars-io") (r "^0.36.2") (f (quote ("lazy"))) (k 0)) (d (n "polars-json") (r "^0.36.2") (o #t) (k 0)) (d (n "polars-ops") (r "^0.36.2") (k 0)) (d (n "polars-parquet") (r "^0.36.2") (o #t) (k 0)) (d (n "polars-time") (r "^0.36.2") (o #t) (k 0)) (d (n "polars-utils") (r "^0.36.2") (k 0)) (d (n "pyo3") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "1l5ca38v7ksq4595wdr6wsd74pdgszwivq9y8wfc6l6h4ib1fjiq") (f (quote (("unique_counts" "polars-ops/unique_counts") ("true_div") ("trigonometry") ("top_k" "polars-ops/top_k") ("timezones" "chrono-tz" "polars-time/timezones" "polars-core/timezones" "regex") ("temporal" "polars-core/temporal" "dtype-date" "dtype-datetime" "dtype-time" "dtype-i8" "dtype-i16") ("strings" "polars-core/strings" "polars-ops/strings") ("string_to_integer" "polars-ops/string_to_integer") ("string_reverse" "polars-ops/string_reverse") ("string_pad" "polars-ops/string_pad") ("string_encoding" "polars-ops/string_encoding") ("streaming") ("sign") ("semi_anti_join" "polars-ops/semi_anti_join") ("search_sorted" "polars-ops/search_sorted") ("row_hash" "polars-core/row_hash" "polars-ops/hash") ("round_series" "polars-ops/round_series") ("rolling_window" "polars-core/rolling_window" "polars-time/rolling_window" "polars-ops/rolling_window" "polars-time/rolling_window") ("rle" "polars-ops/rle") ("replace" "polars-ops/replace") ("repeat_by" "polars-ops/repeat_by") ("rank" "polars-ops/rank") ("range") ("random" "polars-core/random") ("propagate_nans" "polars-ops/propagate_nans") ("pivot" "polars-core/rows" "polars-ops/pivot") ("peaks" "polars-ops/peaks") ("pct_change" "polars-ops/pct_change") ("parquet" "polars-io/parquet" "polars-parquet") ("panic_on_schema") ("object" "polars-core/object") ("nightly" "polars-utils/nightly" "polars-ops/nightly") ("moment" "polars-ops/moment") ("mode" "polars-ops/mode") ("meta") ("merge_sorted" "polars-ops/merge_sorted") ("log" "polars-ops/log") ("list_to_struct" "polars-ops/list_to_struct") ("list_sets" "polars-ops/list_sets") ("list_sample" "polars-ops/list_sample") ("list_gather" "polars-ops/list_gather") ("list_drop_nulls" "polars-ops/list_drop_nulls") ("list_count" "polars-ops/list_count") ("list_any_all" "polars-ops/list_any_all") ("json" "polars-io/json" "polars-json") ("is_unique" "polars-ops/is_unique") ("is_last_distinct" "polars-core/is_last_distinct" "polars-ops/is_last_distinct") ("is_in" "polars-ops/is_in") ("is_first_distinct" "polars-core/is_first_distinct" "polars-ops/is_first_distinct") ("ipc" "polars-io/ipc") ("interpolate" "polars-ops/interpolate") ("horizontal_concat") ("hive_partitions") ("hist" "polars-ops/hist") ("future") ("fused" "polars-ops/fused") ("fmt" "polars-core/fmt") ("find_many" "polars-ops/find_many") ("ffi_plugin" "libloading" "polars-ffi") ("extract_jsonpath" "polars-ops/extract_jsonpath") ("extract_groups" "regex" "dtype-struct" "polars-ops/extract_groups") ("ewma" "polars-ops/ewma") ("dynamic_group_by" "polars-core/dynamic_group_by") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-core/dtype-time" "polars-time/dtype-time") ("dtype-struct" "polars-core/dtype-struct") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-core/dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-core/dtype-date" "polars-time/dtype-date" "temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-array" "polars-core/dtype-array" "polars-ops/dtype-array") ("dot_diagram") ("diff" "polars-ops/diff") ("debugging") ("date_offset" "polars-time" "chrono") ("cutqcut" "polars-ops/cutqcut") ("cum_agg" "polars-ops/cum_agg") ("csv" "polars-io/csv") ("cse") ("cross_join" "polars-ops/cross_join") ("cov" "polars-ops/cov") ("concat_str") ("coalesce") ("cloud" "async" "polars-io/cloud") ("chunked_ids" "polars-core/chunked_ids") ("binary_encoding" "polars-ops/binary_encoding") ("bigidx" "polars-core/bigidx") ("async" "polars-io/async") ("asof_join" "polars-core/asof_join" "polars-time" "polars-ops/asof_join") ("array_any_all" "polars-ops/array_any_all" "dtype-array") ("arg_where") ("approx_unique" "polars-ops/approx_unique") ("abs" "polars-ops/abs")))) (s 2) (e (quote (("serde" "dep:serde" "polars-core/serde-lazy" "polars-time/serde" "polars-io/serde" "polars-ops/serde") ("python" "dep:pyo3" "ciborium"))))))

(define-public crate-polars-plan-0.37.0 (c (n "polars-plan") (v "0.37.0") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.37.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "bytemuck") (r "^1.11") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "ciborium") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 0)) (d (n "polars-core") (r "^0.37.0") (f (quote ("lazy" "zip_with" "random"))) (k 0)) (d (n "polars-ffi") (r "^0.37.0") (o #t) (k 0)) (d (n "polars-io") (r "^0.37.0") (f (quote ("lazy"))) (k 0)) (d (n "polars-json") (r "^0.37.0") (o #t) (k 0)) (d (n "polars-ops") (r "^0.37.0") (k 0)) (d (n "polars-parquet") (r "^0.37.0") (o #t) (k 0)) (d (n "polars-time") (r "^0.37.0") (o #t) (k 0)) (d (n "polars-utils") (r "^0.37.0") (k 0)) (d (n "pyo3") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "1s292gfd4d9l4x5hl0gcaz6zg7gbf9khy079mjx37ap2gd9dgdvz") (f (quote (("unique_counts" "polars-ops/unique_counts") ("true_div") ("trigonometry") ("top_k" "polars-ops/top_k") ("timezones" "chrono-tz" "polars-time/timezones" "polars-core/timezones" "regex") ("temporal" "polars-core/temporal" "polars-core/dtype-date" "polars-core/dtype-datetime" "polars-core/dtype-time" "polars-core/dtype-i8" "polars-core/dtype-i16") ("strings" "polars-core/strings" "polars-ops/strings") ("string_to_integer" "polars-ops/string_to_integer") ("string_reverse" "polars-ops/string_reverse") ("string_pad" "polars-ops/string_pad") ("string_encoding" "polars-ops/string_encoding") ("streaming") ("sign") ("semi_anti_join" "polars-ops/semi_anti_join") ("search_sorted" "polars-ops/search_sorted") ("row_hash" "polars-core/row_hash" "polars-ops/hash") ("round_series" "polars-ops/round_series") ("rolling_window" "polars-core/rolling_window" "polars-time/rolling_window" "polars-ops/rolling_window" "polars-time/rolling_window") ("rle" "polars-ops/rle") ("replace" "polars-ops/replace") ("repeat_by" "polars-ops/repeat_by") ("reinterpret" "polars-core/reinterpret" "polars-ops/reinterpret") ("rank" "polars-ops/rank") ("range") ("random" "polars-core/random") ("propagate_nans" "polars-ops/propagate_nans") ("pivot" "polars-core/rows" "polars-ops/pivot") ("peaks" "polars-ops/peaks") ("pct_change" "polars-ops/pct_change") ("parquet" "polars-io/parquet" "polars-parquet") ("panic_on_schema") ("object" "polars-core/object") ("nightly" "polars-utils/nightly" "polars-ops/nightly") ("moment" "polars-ops/moment") ("mode" "polars-ops/mode") ("meta") ("merge_sorted" "polars-ops/merge_sorted") ("log" "polars-ops/log") ("list_to_struct" "polars-ops/list_to_struct") ("list_sets" "polars-ops/list_sets") ("list_sample" "polars-ops/list_sample") ("list_gather" "polars-ops/list_gather") ("list_drop_nulls" "polars-ops/list_drop_nulls") ("list_count" "polars-ops/list_count") ("list_any_all" "polars-ops/list_any_all") ("json" "polars-io/json" "polars-json") ("is_unique" "polars-ops/is_unique") ("is_last_distinct" "polars-core/is_last_distinct" "polars-ops/is_last_distinct") ("is_in" "polars-ops/is_in") ("is_first_distinct" "polars-core/is_first_distinct" "polars-ops/is_first_distinct") ("is_between" "polars-ops/is_between") ("ipc" "polars-io/ipc") ("interpolate" "polars-ops/interpolate") ("hive_partitions") ("hist" "polars-ops/hist") ("future") ("fused" "polars-ops/fused") ("fmt" "polars-core/fmt") ("find_many" "polars-ops/find_many") ("ffi_plugin" "libloading" "polars-ffi") ("extract_jsonpath" "polars-ops/extract_jsonpath") ("extract_groups" "regex" "dtype-struct" "polars-ops/extract_groups") ("ewma" "polars-ops/ewma") ("dynamic_group_by" "polars-core/dynamic_group_by") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-time/dtype-time" "temporal") ("dtype-struct" "polars-core/dtype-struct") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-time/dtype-date" "temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-array" "polars-core/dtype-array" "polars-ops/dtype-array") ("dot_diagram") ("diff" "polars-ops/diff") ("debugging") ("date_offset" "polars-time" "chrono") ("cutqcut" "polars-ops/cutqcut") ("cum_agg" "polars-ops/cum_agg") ("csv" "polars-io/csv") ("cse") ("cross_join" "polars-ops/cross_join") ("cov" "polars-ops/cov") ("concat_str") ("coalesce") ("cloud" "async" "polars-io/cloud") ("chunked_ids" "polars-core/chunked_ids") ("binary_encoding" "polars-ops/binary_encoding") ("bigidx" "polars-core/bigidx") ("async" "polars-io/async") ("asof_join" "polars-core/asof_join" "polars-time" "polars-ops/asof_join") ("array_count" "polars-ops/array_count" "dtype-array") ("array_any_all" "polars-ops/array_any_all" "dtype-array") ("arg_where") ("approx_unique" "polars-ops/approx_unique") ("abs" "polars-ops/abs")))) (s 2) (e (quote (("serde" "dep:serde" "polars-core/serde-lazy" "polars-time/serde" "polars-io/serde" "polars-ops/serde") ("python" "dep:pyo3" "ciborium"))))))

(define-public crate-polars-plan-0.38.0 (c (n "polars-plan") (v "0.38.0") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.38.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "bytemuck") (r "^1.11") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "ciborium") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 0)) (d (n "polars-core") (r "^0.38.0") (f (quote ("lazy" "zip_with" "random"))) (k 0)) (d (n "polars-ffi") (r "^0.38.0") (o #t) (k 0)) (d (n "polars-io") (r "^0.38.0") (f (quote ("lazy"))) (k 0)) (d (n "polars-json") (r "^0.38.0") (o #t) (k 0)) (d (n "polars-ops") (r "^0.38.0") (k 0)) (d (n "polars-parquet") (r "^0.38.0") (o #t) (k 0)) (d (n "polars-time") (r "^0.38.0") (o #t) (k 0)) (d (n "polars-utils") (r "^0.38.0") (k 0)) (d (n "pyo3") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "1nl5jcmac7x5ky8qp17pvxng5drgd0mwp0imacyj5z5394yjg9pf") (f (quote (("unique_counts" "polars-ops/unique_counts") ("true_div") ("trigonometry") ("top_k" "polars-ops/top_k") ("timezones" "chrono-tz" "polars-time/timezones" "polars-core/timezones" "regex") ("temporal" "polars-core/temporal" "polars-core/dtype-date" "polars-core/dtype-datetime" "polars-core/dtype-time" "polars-core/dtype-i8" "polars-core/dtype-i16") ("strings" "polars-core/strings" "polars-ops/strings") ("string_to_integer" "polars-ops/string_to_integer") ("string_reverse" "polars-ops/string_reverse") ("string_pad" "polars-ops/string_pad") ("string_encoding" "polars-ops/string_encoding") ("streaming") ("sign") ("semi_anti_join" "polars-ops/semi_anti_join") ("search_sorted" "polars-ops/search_sorted") ("row_hash" "polars-core/row_hash" "polars-ops/hash") ("round_series" "polars-ops/round_series") ("rolling_window" "polars-core/rolling_window" "polars-time/rolling_window" "polars-ops/rolling_window" "polars-time/rolling_window") ("rle" "polars-ops/rle") ("replace" "polars-ops/replace") ("repeat_by" "polars-ops/repeat_by") ("reinterpret" "polars-core/reinterpret" "polars-ops/reinterpret") ("rank" "polars-ops/rank") ("range") ("random" "polars-core/random") ("propagate_nans" "polars-ops/propagate_nans") ("pivot" "polars-core/rows" "polars-ops/pivot") ("peaks" "polars-ops/peaks") ("pct_change" "polars-ops/pct_change") ("parquet" "polars-io/parquet" "polars-parquet") ("panic_on_schema") ("object" "polars-core/object") ("nightly" "polars-utils/nightly" "polars-ops/nightly") ("moment" "polars-ops/moment") ("mode" "polars-ops/mode") ("meta") ("merge_sorted" "polars-ops/merge_sorted") ("log" "polars-ops/log") ("list_to_struct" "polars-ops/list_to_struct") ("list_sets" "polars-ops/list_sets") ("list_sample" "polars-ops/list_sample") ("list_gather" "polars-ops/list_gather") ("list_drop_nulls" "polars-ops/list_drop_nulls") ("list_count" "polars-ops/list_count") ("list_any_all" "polars-ops/list_any_all") ("json" "polars-io/json" "polars-json") ("is_unique" "polars-ops/is_unique") ("is_last_distinct" "polars-core/is_last_distinct" "polars-ops/is_last_distinct") ("is_in" "polars-ops/is_in") ("is_first_distinct" "polars-core/is_first_distinct" "polars-ops/is_first_distinct") ("is_between" "polars-ops/is_between") ("ipc" "polars-io/ipc") ("interpolate" "polars-ops/interpolate") ("hive_partitions") ("hist" "polars-ops/hist") ("future") ("fused" "polars-ops/fused") ("fmt" "polars-core/fmt") ("find_many" "polars-ops/find_many") ("ffi_plugin" "libloading" "polars-ffi") ("extract_jsonpath" "polars-ops/extract_jsonpath") ("extract_groups" "regex" "dtype-struct" "polars-ops/extract_groups") ("ewma" "polars-ops/ewma") ("dynamic_group_by" "polars-core/dynamic_group_by") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-time/dtype-time" "temporal") ("dtype-struct" "polars-core/dtype-struct") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-time/dtype-date" "temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-array" "polars-core/dtype-array" "polars-ops/dtype-array") ("dot_diagram") ("diff" "polars-ops/diff") ("debugging") ("date_offset" "polars-time" "chrono") ("cutqcut" "polars-ops/cutqcut") ("cum_agg" "polars-ops/cum_agg") ("csv" "polars-io/csv") ("cse") ("cross_join" "polars-ops/cross_join") ("cov" "polars-ops/cov") ("concat_str") ("coalesce") ("cloud" "async" "polars-io/cloud") ("chunked_ids") ("binary_encoding" "polars-ops/binary_encoding") ("bigidx" "polars-core/bigidx") ("async" "polars-io/async" "futures") ("asof_join" "polars-core/asof_join" "polars-time" "polars-ops/asof_join") ("array_to_struct" "polars-ops/array_to_struct") ("array_count" "polars-ops/array_count" "dtype-array") ("array_any_all" "polars-ops/array_any_all" "dtype-array") ("arg_where") ("approx_unique" "polars-ops/approx_unique") ("abs" "polars-ops/abs")))) (s 2) (e (quote (("serde" "dep:serde" "polars-core/serde-lazy" "polars-time/serde" "polars-io/serde" "polars-ops/serde") ("python" "dep:pyo3" "ciborium"))))))

(define-public crate-polars-plan-0.38.1 (c (n "polars-plan") (v "0.38.1") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.38.1") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "bytemuck") (r "^1.11") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "ciborium") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 0)) (d (n "polars-core") (r "^0.38.1") (f (quote ("lazy" "zip_with" "random"))) (k 0)) (d (n "polars-ffi") (r "^0.38.1") (o #t) (k 0)) (d (n "polars-io") (r "^0.38.1") (f (quote ("lazy"))) (k 0)) (d (n "polars-json") (r "^0.38.1") (o #t) (k 0)) (d (n "polars-ops") (r "^0.38.1") (k 0)) (d (n "polars-parquet") (r "^0.38.1") (o #t) (k 0)) (d (n "polars-time") (r "^0.38.1") (o #t) (k 0)) (d (n "polars-utils") (r "^0.38.1") (k 0)) (d (n "pyo3") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.9") (d #t) (k 0)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "0iqxj5z6vjc8hrfp3jgdawz8km0cld6v6pcqb6pgrk5a2c73qjan") (f (quote (("unique_counts" "polars-ops/unique_counts") ("true_div") ("trigonometry") ("top_k" "polars-ops/top_k") ("timezones" "chrono-tz" "polars-time/timezones" "polars-core/timezones" "regex") ("temporal" "polars-core/temporal" "polars-core/dtype-date" "polars-core/dtype-datetime" "polars-core/dtype-time" "polars-core/dtype-i8" "polars-core/dtype-i16") ("strings" "polars-core/strings" "polars-ops/strings") ("string_to_integer" "polars-ops/string_to_integer") ("string_reverse" "polars-ops/string_reverse") ("string_pad" "polars-ops/string_pad") ("string_encoding" "polars-ops/string_encoding") ("streaming") ("sign") ("semi_anti_join" "polars-ops/semi_anti_join") ("search_sorted" "polars-ops/search_sorted") ("row_hash" "polars-core/row_hash" "polars-ops/hash") ("round_series" "polars-ops/round_series") ("rolling_window" "polars-core/rolling_window" "polars-time/rolling_window" "polars-ops/rolling_window" "polars-time/rolling_window") ("rle" "polars-ops/rle") ("replace" "polars-ops/replace") ("repeat_by" "polars-ops/repeat_by") ("reinterpret" "polars-core/reinterpret" "polars-ops/reinterpret") ("rank" "polars-ops/rank") ("range") ("random" "polars-core/random") ("propagate_nans" "polars-ops/propagate_nans") ("pivot" "polars-core/rows" "polars-ops/pivot") ("peaks" "polars-ops/peaks") ("pct_change" "polars-ops/pct_change") ("parquet" "polars-io/parquet" "polars-parquet") ("panic_on_schema") ("object" "polars-core/object") ("nightly" "polars-utils/nightly" "polars-ops/nightly") ("moment" "polars-ops/moment") ("mode" "polars-ops/mode") ("meta") ("merge_sorted" "polars-ops/merge_sorted") ("log" "polars-ops/log") ("list_to_struct" "polars-ops/list_to_struct") ("list_sets" "polars-ops/list_sets") ("list_sample" "polars-ops/list_sample") ("list_gather" "polars-ops/list_gather") ("list_drop_nulls" "polars-ops/list_drop_nulls") ("list_count" "polars-ops/list_count") ("list_any_all" "polars-ops/list_any_all") ("json" "polars-io/json" "polars-json") ("is_unique" "polars-ops/is_unique") ("is_last_distinct" "polars-core/is_last_distinct" "polars-ops/is_last_distinct") ("is_in" "polars-ops/is_in") ("is_first_distinct" "polars-core/is_first_distinct" "polars-ops/is_first_distinct") ("is_between" "polars-ops/is_between") ("ipc" "polars-io/ipc") ("interpolate" "polars-ops/interpolate") ("hive_partitions") ("hist" "polars-ops/hist") ("future") ("fused" "polars-ops/fused") ("fmt" "polars-core/fmt") ("find_many" "polars-ops/find_many") ("ffi_plugin" "libloading" "polars-ffi") ("extract_jsonpath" "polars-ops/extract_jsonpath") ("extract_groups" "regex" "dtype-struct" "polars-ops/extract_groups") ("ewma" "polars-ops/ewma") ("dynamic_group_by" "polars-core/dynamic_group_by") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-time/dtype-time" "temporal") ("dtype-struct" "polars-core/dtype-struct") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-time/dtype-date" "temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-array" "polars-core/dtype-array" "polars-ops/dtype-array") ("dot_diagram") ("diff" "polars-ops/diff") ("debugging") ("date_offset" "polars-time" "chrono") ("cutqcut" "polars-ops/cutqcut") ("cum_agg" "polars-ops/cum_agg") ("csv" "polars-io/csv") ("cse") ("cross_join" "polars-ops/cross_join") ("cov" "polars-ops/cov") ("concat_str") ("coalesce") ("cloud" "async" "polars-io/cloud") ("chunked_ids") ("binary_encoding" "polars-ops/binary_encoding") ("bigidx" "polars-core/bigidx") ("async" "polars-io/async" "futures") ("asof_join" "polars-core/asof_join" "polars-time" "polars-ops/asof_join") ("array_to_struct" "polars-ops/array_to_struct") ("array_count" "polars-ops/array_count" "dtype-array") ("array_any_all" "polars-ops/array_any_all" "dtype-array") ("arg_where") ("approx_unique" "polars-ops/approx_unique") ("abs" "polars-ops/abs")))) (s 2) (e (quote (("serde" "dep:serde" "polars-core/serde-lazy" "polars-time/serde" "polars-io/serde" "polars-ops/serde") ("python" "dep:pyo3" "ciborium"))))))

(define-public crate-polars-plan-0.38.2 (c (n "polars-plan") (v "0.38.2") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.38.2") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "bytemuck") (r "^1.11") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "ciborium") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 0)) (d (n "polars-core") (r "^0.38.2") (f (quote ("lazy" "zip_with" "random"))) (k 0)) (d (n "polars-ffi") (r "^0.38.2") (o #t) (k 0)) (d (n "polars-io") (r "^0.38.2") (f (quote ("lazy"))) (k 0)) (d (n "polars-json") (r "^0.38.2") (o #t) (k 0)) (d (n "polars-ops") (r "^0.38.2") (k 0)) (d (n "polars-parquet") (r "^0.38.2") (o #t) (k 0)) (d (n "polars-time") (r "^0.38.2") (o #t) (k 0)) (d (n "polars-utils") (r "^0.38.2") (k 0)) (d (n "pyo3") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.9") (d #t) (k 0)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "0d27dig149jc0c1mpsfjsf469vhs783c23yq8znybca9klv8im5n") (f (quote (("unique_counts" "polars-ops/unique_counts") ("true_div") ("trigonometry") ("top_k" "polars-ops/top_k") ("timezones" "chrono-tz" "polars-time/timezones" "polars-core/timezones" "regex") ("temporal" "polars-core/temporal" "polars-core/dtype-date" "polars-core/dtype-datetime" "polars-core/dtype-time" "polars-core/dtype-i8" "polars-core/dtype-i16") ("strings" "polars-core/strings" "polars-ops/strings") ("string_to_integer" "polars-ops/string_to_integer") ("string_reverse" "polars-ops/string_reverse") ("string_pad" "polars-ops/string_pad") ("string_encoding" "polars-ops/string_encoding") ("streaming") ("sign") ("semi_anti_join" "polars-ops/semi_anti_join") ("search_sorted" "polars-ops/search_sorted") ("row_hash" "polars-core/row_hash" "polars-ops/hash") ("round_series" "polars-ops/round_series") ("rolling_window" "polars-core/rolling_window" "polars-time/rolling_window" "polars-ops/rolling_window" "polars-time/rolling_window") ("rle" "polars-ops/rle") ("replace" "polars-ops/replace") ("repeat_by" "polars-ops/repeat_by") ("reinterpret" "polars-core/reinterpret" "polars-ops/reinterpret") ("rank" "polars-ops/rank") ("range") ("random" "polars-core/random") ("propagate_nans" "polars-ops/propagate_nans") ("pivot" "polars-core/rows" "polars-ops/pivot") ("peaks" "polars-ops/peaks") ("pct_change" "polars-ops/pct_change") ("parquet" "polars-io/parquet" "polars-parquet") ("panic_on_schema") ("object" "polars-core/object") ("nightly" "polars-utils/nightly" "polars-ops/nightly") ("moment" "polars-ops/moment") ("mode" "polars-ops/mode") ("meta") ("merge_sorted" "polars-ops/merge_sorted") ("log" "polars-ops/log") ("list_to_struct" "polars-ops/list_to_struct") ("list_sets" "polars-ops/list_sets") ("list_sample" "polars-ops/list_sample") ("list_gather" "polars-ops/list_gather") ("list_drop_nulls" "polars-ops/list_drop_nulls") ("list_count" "polars-ops/list_count") ("list_any_all" "polars-ops/list_any_all") ("json" "polars-io/json" "polars-json") ("is_unique" "polars-ops/is_unique") ("is_last_distinct" "polars-core/is_last_distinct" "polars-ops/is_last_distinct") ("is_in" "polars-ops/is_in") ("is_first_distinct" "polars-core/is_first_distinct" "polars-ops/is_first_distinct") ("is_between" "polars-ops/is_between") ("ipc" "polars-io/ipc") ("interpolate" "polars-ops/interpolate") ("hive_partitions") ("hist" "polars-ops/hist") ("future") ("fused" "polars-ops/fused") ("fmt" "polars-core/fmt") ("find_many" "polars-ops/find_many") ("ffi_plugin" "libloading" "polars-ffi") ("extract_jsonpath" "polars-ops/extract_jsonpath") ("extract_groups" "regex" "dtype-struct" "polars-ops/extract_groups") ("ewma" "polars-ops/ewma") ("dynamic_group_by" "polars-core/dynamic_group_by") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-time/dtype-time" "temporal") ("dtype-struct" "polars-core/dtype-struct") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-time/dtype-date" "temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-array" "polars-core/dtype-array" "polars-ops/dtype-array") ("dot_diagram") ("diff" "polars-ops/diff") ("debugging") ("date_offset" "polars-time" "chrono") ("cutqcut" "polars-ops/cutqcut") ("cum_agg" "polars-ops/cum_agg") ("csv" "polars-io/csv") ("cse") ("cross_join" "polars-ops/cross_join") ("cov" "polars-ops/cov") ("concat_str") ("coalesce") ("cloud" "async" "polars-io/cloud") ("chunked_ids") ("binary_encoding" "polars-ops/binary_encoding") ("bigidx" "polars-core/bigidx") ("async" "polars-io/async" "futures") ("asof_join" "polars-time" "polars-ops/asof_join") ("array_to_struct" "polars-ops/array_to_struct") ("array_count" "polars-ops/array_count" "dtype-array") ("array_any_all" "polars-ops/array_any_all" "dtype-array") ("arg_where") ("approx_unique" "polars-ops/approx_unique") ("abs" "polars-ops/abs")))) (s 2) (e (quote (("serde" "dep:serde" "polars-core/serde-lazy" "polars-time/serde" "polars-io/serde" "polars-ops/serde") ("python" "dep:pyo3" "ciborium"))))))

(define-public crate-polars-plan-0.38.3 (c (n "polars-plan") (v "0.38.3") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.38.3") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison"))) (k 0) (p "polars-arrow")) (d (n "bytemuck") (r "^1.11") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "ciborium") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 0)) (d (n "polars-core") (r "^0.38.3") (f (quote ("lazy" "zip_with" "random"))) (k 0)) (d (n "polars-ffi") (r "^0.38.3") (o #t) (k 0)) (d (n "polars-io") (r "^0.38.3") (f (quote ("lazy"))) (k 0)) (d (n "polars-json") (r "^0.38.3") (o #t) (k 0)) (d (n "polars-ops") (r "^0.38.3") (k 0)) (d (n "polars-parquet") (r "^0.38.3") (o #t) (k 0)) (d (n "polars-time") (r "^0.38.3") (o #t) (k 0)) (d (n "polars-utils") (r "^0.38.3") (k 0)) (d (n "pyo3") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.9") (d #t) (k 0)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "1i535wr8zxza7n72mckxi3igwn7a3z09xfp7qyzbny5hs4mkcj7z") (f (quote (("unique_counts" "polars-ops/unique_counts") ("true_div") ("trigonometry") ("top_k" "polars-ops/top_k") ("timezones" "chrono-tz" "polars-time/timezones" "polars-core/timezones" "regex") ("temporal" "polars-core/temporal" "polars-core/dtype-date" "polars-core/dtype-datetime" "polars-core/dtype-time" "polars-core/dtype-i8" "polars-core/dtype-i16") ("strings" "polars-core/strings" "polars-ops/strings") ("string_to_integer" "polars-ops/string_to_integer") ("string_reverse" "polars-ops/string_reverse") ("string_pad" "polars-ops/string_pad") ("string_encoding" "polars-ops/string_encoding") ("streaming") ("sign") ("semi_anti_join" "polars-ops/semi_anti_join") ("search_sorted" "polars-ops/search_sorted") ("row_hash" "polars-core/row_hash" "polars-ops/hash") ("round_series" "polars-ops/round_series") ("rolling_window" "polars-core/rolling_window" "polars-time/rolling_window" "polars-ops/rolling_window" "polars-time/rolling_window") ("rle" "polars-ops/rle") ("replace" "polars-ops/replace") ("repeat_by" "polars-ops/repeat_by") ("reinterpret" "polars-core/reinterpret" "polars-ops/reinterpret") ("rank" "polars-ops/rank") ("range") ("random" "polars-core/random") ("propagate_nans" "polars-ops/propagate_nans") ("pivot" "polars-core/rows" "polars-ops/pivot") ("peaks" "polars-ops/peaks") ("pct_change" "polars-ops/pct_change") ("parquet" "polars-io/parquet" "polars-parquet") ("panic_on_schema") ("object" "polars-core/object") ("nightly" "polars-utils/nightly" "polars-ops/nightly") ("moment" "polars-ops/moment") ("mode" "polars-ops/mode") ("meta") ("merge_sorted" "polars-ops/merge_sorted") ("log" "polars-ops/log") ("list_to_struct" "polars-ops/list_to_struct") ("list_sets" "polars-ops/list_sets") ("list_sample" "polars-ops/list_sample") ("list_gather" "polars-ops/list_gather") ("list_drop_nulls" "polars-ops/list_drop_nulls") ("list_count" "polars-ops/list_count") ("list_any_all" "polars-ops/list_any_all") ("json" "polars-io/json" "polars-json") ("is_unique" "polars-ops/is_unique") ("is_last_distinct" "polars-core/is_last_distinct" "polars-ops/is_last_distinct") ("is_in" "polars-ops/is_in") ("is_first_distinct" "polars-core/is_first_distinct" "polars-ops/is_first_distinct") ("is_between" "polars-ops/is_between") ("ipc" "polars-io/ipc") ("interpolate" "polars-ops/interpolate") ("hive_partitions") ("hist" "polars-ops/hist") ("future") ("fused" "polars-ops/fused") ("fmt" "polars-core/fmt") ("find_many" "polars-ops/find_many") ("ffi_plugin" "libloading" "polars-ffi") ("extract_jsonpath" "polars-ops/extract_jsonpath") ("extract_groups" "regex" "dtype-struct" "polars-ops/extract_groups") ("ewma" "polars-ops/ewma") ("dynamic_group_by" "polars-core/dynamic_group_by") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-time/dtype-time" "temporal") ("dtype-struct" "polars-core/dtype-struct") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-time/dtype-date" "temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-array" "polars-core/dtype-array" "polars-ops/dtype-array") ("dot_diagram") ("diff" "polars-ops/diff") ("debugging") ("date_offset" "polars-time" "chrono") ("cutqcut" "polars-ops/cutqcut") ("cum_agg" "polars-ops/cum_agg") ("csv" "polars-io/csv") ("cse") ("cross_join" "polars-ops/cross_join") ("cov" "polars-ops/cov") ("concat_str") ("coalesce") ("cloud" "async" "polars-io/cloud") ("chunked_ids") ("binary_encoding" "polars-ops/binary_encoding") ("bigidx" "polars-core/bigidx") ("async" "polars-io/async" "futures") ("asof_join" "polars-time" "polars-ops/asof_join") ("array_to_struct" "polars-ops/array_to_struct") ("array_count" "polars-ops/array_count" "dtype-array") ("array_any_all" "polars-ops/array_any_all" "dtype-array") ("arg_where") ("approx_unique" "polars-ops/approx_unique") ("abs" "polars-ops/abs")))) (s 2) (e (quote (("serde" "dep:serde" "polars-core/serde-lazy" "polars-time/serde" "polars-io/serde" "polars-ops/serde") ("python" "dep:pyo3" "ciborium"))))))

(define-public crate-polars-plan-0.39.0 (c (n "polars-plan") (v "0.39.0") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.39.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison"))) (k 0) (p "polars-arrow")) (d (n "bytemuck") (r "^1.11") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "ciborium") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "libloading") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 0)) (d (n "polars-core") (r "^0.39.0") (f (quote ("lazy" "zip_with" "random"))) (k 0)) (d (n "polars-ffi") (r "^0.39.0") (o #t) (k 0)) (d (n "polars-io") (r "^0.39.0") (f (quote ("lazy"))) (k 0)) (d (n "polars-json") (r "^0.39.0") (o #t) (k 0)) (d (n "polars-ops") (r "^0.39.0") (k 0)) (d (n "polars-parquet") (r "^0.39.0") (o #t) (k 0)) (d (n "polars-time") (r "^0.39.0") (o #t) (k 0)) (d (n "polars-utils") (r "^0.39.0") (k 0)) (d (n "pyo3") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.9") (d #t) (k 0)) (d (n "recursive") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "1vpc7h5hm00x8j71n50dpm4mxq8k6x50y7b7vcaiqpvbzbwncvhv") (f (quote (("unique_counts" "polars-ops/unique_counts") ("true_div") ("trigonometry") ("top_k" "polars-ops/top_k") ("timezones" "chrono-tz" "polars-time/timezones" "polars-core/timezones" "regex") ("temporal" "polars-core/temporal" "polars-core/dtype-date" "polars-core/dtype-datetime" "polars-core/dtype-time" "polars-core/dtype-i8" "polars-core/dtype-i16") ("strings" "polars-core/strings" "polars-ops/strings") ("string_to_integer" "polars-ops/string_to_integer") ("string_reverse" "polars-ops/string_reverse") ("string_pad" "polars-ops/string_pad") ("string_encoding" "polars-ops/string_encoding") ("streaming") ("sign") ("semi_anti_join" "polars-ops/semi_anti_join") ("search_sorted" "polars-ops/search_sorted") ("row_hash" "polars-core/row_hash" "polars-ops/hash") ("round_series" "polars-ops/round_series") ("rolling_window" "polars-core/rolling_window" "polars-time/rolling_window" "polars-ops/rolling_window" "polars-time/rolling_window") ("rle" "polars-ops/rle") ("replace" "polars-ops/replace") ("repeat_by" "polars-ops/repeat_by") ("reinterpret" "polars-core/reinterpret" "polars-ops/reinterpret") ("rank" "polars-ops/rank") ("range") ("random" "polars-core/random") ("propagate_nans" "polars-ops/propagate_nans") ("pivot" "polars-core/rows" "polars-ops/pivot") ("peaks" "polars-ops/peaks") ("pct_change" "polars-ops/pct_change") ("parquet" "polars-io/parquet" "polars-parquet") ("panic_on_schema") ("object" "polars-core/object") ("nightly" "polars-utils/nightly" "polars-ops/nightly") ("moment" "polars-ops/moment") ("mode" "polars-ops/mode") ("meta") ("merge_sorted" "polars-ops/merge_sorted") ("log" "polars-ops/log") ("list_to_struct" "polars-ops/list_to_struct") ("list_sets" "polars-ops/list_sets") ("list_sample" "polars-ops/list_sample") ("list_gather" "polars-ops/list_gather") ("list_drop_nulls" "polars-ops/list_drop_nulls") ("list_count" "polars-ops/list_count") ("list_any_all" "polars-ops/list_any_all") ("json" "polars-io/json" "polars-json") ("is_unique" "polars-ops/is_unique") ("is_last_distinct" "polars-core/is_last_distinct" "polars-ops/is_last_distinct") ("is_in" "polars-ops/is_in") ("is_first_distinct" "polars-core/is_first_distinct" "polars-ops/is_first_distinct") ("is_between" "polars-ops/is_between") ("ipc" "polars-io/ipc") ("interpolate" "polars-ops/interpolate") ("hive_partitions") ("hist" "polars-ops/hist") ("future") ("fused" "polars-ops/fused") ("fmt" "polars-core/fmt") ("find_many" "polars-ops/find_many") ("ffi_plugin" "libloading" "polars-ffi") ("extract_jsonpath" "polars-ops/extract_jsonpath") ("extract_groups" "regex" "dtype-struct" "polars-ops/extract_groups") ("ewma" "polars-ops/ewma") ("dynamic_group_by" "polars-core/dynamic_group_by") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-time/dtype-time" "temporal") ("dtype-struct" "polars-core/dtype-struct") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-time/dtype-date" "temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-array" "polars-core/dtype-array" "polars-ops/dtype-array") ("dot_diagram") ("diff" "polars-ops/diff") ("debugging") ("date_offset" "polars-time" "chrono") ("cutqcut" "polars-ops/cutqcut") ("cum_agg" "polars-ops/cum_agg") ("csv" "polars-io/csv") ("cse") ("cross_join" "polars-ops/cross_join") ("cov" "polars-ops/cov") ("concat_str") ("coalesce") ("cloud" "async" "polars-io/cloud") ("chunked_ids") ("business" "polars-ops/business") ("binary_encoding" "polars-ops/binary_encoding") ("bigidx" "polars-core/bigidx") ("async" "polars-io/async" "futures") ("asof_join" "polars-time" "polars-ops/asof_join") ("array_to_struct" "polars-ops/array_to_struct") ("array_count" "polars-ops/array_count" "dtype-array") ("array_any_all" "polars-ops/array_any_all" "dtype-array") ("arg_where") ("approx_unique" "polars-ops/approx_unique") ("abs" "polars-ops/abs")))) (s 2) (e (quote (("serde" "dep:serde" "polars-core/serde-lazy" "polars-time/serde" "polars-io/serde" "polars-ops/serde") ("python" "dep:pyo3" "ciborium"))))))

(define-public crate-polars-plan-0.39.1 (c (n "polars-plan") (v "0.39.1") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.39.1") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison"))) (k 0) (p "polars-arrow")) (d (n "bytemuck") (r "^1.11") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "ciborium") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "libloading") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 0)) (d (n "polars-core") (r "^0.39.1") (f (quote ("lazy" "zip_with" "random"))) (k 0)) (d (n "polars-ffi") (r "^0.39.1") (o #t) (k 0)) (d (n "polars-io") (r "^0.39.1") (f (quote ("lazy"))) (k 0)) (d (n "polars-json") (r "^0.39.1") (o #t) (k 0)) (d (n "polars-ops") (r "^0.39.1") (k 0)) (d (n "polars-parquet") (r "^0.39.1") (o #t) (k 0)) (d (n "polars-time") (r "^0.39.1") (o #t) (k 0)) (d (n "polars-utils") (r "^0.39.1") (k 0)) (d (n "pyo3") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.9") (d #t) (k 0)) (d (n "recursive") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "1qb7vqbkh01rfy66kazc1p9i1jlh5qmxyqzszfqsh0n4fg19nl2c") (f (quote (("unique_counts" "polars-ops/unique_counts") ("true_div") ("trigonometry") ("top_k" "polars-ops/top_k") ("timezones" "chrono-tz" "polars-time/timezones" "polars-core/timezones" "regex") ("temporal" "polars-core/temporal" "polars-core/dtype-date" "polars-core/dtype-datetime" "polars-core/dtype-time" "polars-core/dtype-i8" "polars-core/dtype-i16") ("strings" "polars-core/strings" "polars-ops/strings") ("string_to_integer" "polars-ops/string_to_integer") ("string_reverse" "polars-ops/string_reverse") ("string_pad" "polars-ops/string_pad") ("string_encoding" "polars-ops/string_encoding") ("streaming") ("sign") ("semi_anti_join" "polars-ops/semi_anti_join") ("search_sorted" "polars-ops/search_sorted") ("row_hash" "polars-core/row_hash" "polars-ops/hash") ("round_series" "polars-ops/round_series") ("rolling_window" "polars-core/rolling_window" "polars-time/rolling_window" "polars-ops/rolling_window" "polars-time/rolling_window") ("rle" "polars-ops/rle") ("replace" "polars-ops/replace") ("repeat_by" "polars-ops/repeat_by") ("reinterpret" "polars-core/reinterpret" "polars-ops/reinterpret") ("rank" "polars-ops/rank") ("range") ("random" "polars-core/random") ("propagate_nans" "polars-ops/propagate_nans") ("pivot" "polars-core/rows" "polars-ops/pivot") ("peaks" "polars-ops/peaks") ("pct_change" "polars-ops/pct_change") ("parquet" "polars-io/parquet" "polars-parquet") ("panic_on_schema") ("object" "polars-core/object") ("nightly" "polars-utils/nightly" "polars-ops/nightly") ("moment" "polars-ops/moment") ("mode" "polars-ops/mode") ("meta") ("merge_sorted" "polars-ops/merge_sorted") ("log" "polars-ops/log") ("list_to_struct" "polars-ops/list_to_struct") ("list_sets" "polars-ops/list_sets") ("list_sample" "polars-ops/list_sample") ("list_gather" "polars-ops/list_gather") ("list_drop_nulls" "polars-ops/list_drop_nulls") ("list_count" "polars-ops/list_count") ("list_any_all" "polars-ops/list_any_all") ("json" "polars-io/json" "polars-json") ("is_unique" "polars-ops/is_unique") ("is_last_distinct" "polars-core/is_last_distinct" "polars-ops/is_last_distinct") ("is_in" "polars-ops/is_in") ("is_first_distinct" "polars-core/is_first_distinct" "polars-ops/is_first_distinct") ("is_between" "polars-ops/is_between") ("ipc" "polars-io/ipc") ("interpolate" "polars-ops/interpolate") ("hive_partitions") ("hist" "polars-ops/hist") ("future") ("fused" "polars-ops/fused") ("fmt" "polars-core/fmt") ("find_many" "polars-ops/find_many") ("ffi_plugin" "libloading" "polars-ffi") ("extract_jsonpath" "polars-ops/extract_jsonpath") ("extract_groups" "regex" "dtype-struct" "polars-ops/extract_groups") ("ewma_by" "polars-ops/ewma_by") ("ewma" "polars-ops/ewma") ("dynamic_group_by" "polars-core/dynamic_group_by") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-time/dtype-time" "temporal") ("dtype-struct" "polars-core/dtype-struct") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-time/dtype-date" "temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-array" "polars-core/dtype-array" "polars-ops/dtype-array") ("dot_diagram") ("diff" "polars-ops/diff") ("debugging") ("date_offset" "polars-time" "chrono") ("cutqcut" "polars-ops/cutqcut") ("cum_agg" "polars-ops/cum_agg") ("csv" "polars-io/csv") ("cse") ("cross_join" "polars-ops/cross_join") ("cov" "polars-ops/cov") ("concat_str") ("coalesce") ("cloud" "async" "polars-io/cloud") ("chunked_ids") ("business" "polars-ops/business") ("binary_encoding" "polars-ops/binary_encoding") ("bigidx" "polars-core/bigidx") ("async" "polars-io/async" "futures") ("asof_join" "polars-time" "polars-ops/asof_join") ("array_to_struct" "polars-ops/array_to_struct") ("array_count" "polars-ops/array_count" "dtype-array") ("array_any_all" "polars-ops/array_any_all" "dtype-array") ("arg_where") ("approx_unique" "polars-ops/approx_unique") ("abs" "polars-ops/abs")))) (s 2) (e (quote (("serde" "dep:serde" "polars-core/serde-lazy" "polars-time/serde" "polars-io/serde" "polars-ops/serde") ("python" "dep:pyo3" "ciborium"))))))

(define-public crate-polars-plan-0.39.2 (c (n "polars-plan") (v "0.39.2") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.39.2") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison"))) (k 0) (p "polars-arrow")) (d (n "bytemuck") (r "^1.11") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "ciborium") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "libloading") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 0)) (d (n "polars-core") (r "^0.39.2") (f (quote ("lazy" "zip_with" "random"))) (k 0)) (d (n "polars-ffi") (r "^0.39.2") (o #t) (k 0)) (d (n "polars-io") (r "^0.39.2") (f (quote ("lazy"))) (k 0)) (d (n "polars-json") (r "^0.39.2") (o #t) (k 0)) (d (n "polars-ops") (r "^0.39.2") (k 0)) (d (n "polars-parquet") (r "^0.39.2") (o #t) (k 0)) (d (n "polars-time") (r "^0.39.2") (o #t) (k 0)) (d (n "polars-utils") (r "^0.39.2") (k 0)) (d (n "pyo3") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.9") (d #t) (k 0)) (d (n "recursive") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "0zf978xyri6qrsd60prs7kkaqpz7jsfav35yspplvi105qqf5f1g") (f (quote (("unique_counts" "polars-ops/unique_counts") ("true_div") ("trigonometry") ("top_k" "polars-ops/top_k") ("timezones" "chrono-tz" "polars-time/timezones" "polars-core/timezones" "regex") ("temporal" "polars-core/temporal" "polars-core/dtype-date" "polars-core/dtype-datetime" "polars-core/dtype-time" "polars-core/dtype-i8" "polars-core/dtype-i16") ("strings" "polars-core/strings" "polars-ops/strings") ("string_to_integer" "polars-ops/string_to_integer") ("string_reverse" "polars-ops/string_reverse") ("string_pad" "polars-ops/string_pad") ("string_encoding" "polars-ops/string_encoding") ("streaming") ("sign") ("semi_anti_join" "polars-ops/semi_anti_join") ("search_sorted" "polars-ops/search_sorted") ("row_hash" "polars-core/row_hash" "polars-ops/hash") ("round_series" "polars-ops/round_series") ("rolling_window" "polars-core/rolling_window" "polars-time/rolling_window" "polars-ops/rolling_window" "polars-time/rolling_window") ("rle" "polars-ops/rle") ("replace" "polars-ops/replace") ("repeat_by" "polars-ops/repeat_by") ("reinterpret" "polars-core/reinterpret" "polars-ops/reinterpret") ("rank" "polars-ops/rank") ("range") ("random" "polars-core/random") ("propagate_nans" "polars-ops/propagate_nans") ("pivot" "polars-core/rows" "polars-ops/pivot") ("peaks" "polars-ops/peaks") ("pct_change" "polars-ops/pct_change") ("parquet" "polars-io/parquet" "polars-parquet") ("panic_on_schema") ("object" "polars-core/object") ("nightly" "polars-utils/nightly" "polars-ops/nightly") ("moment" "polars-ops/moment") ("mode" "polars-ops/mode") ("meta") ("merge_sorted" "polars-ops/merge_sorted") ("log" "polars-ops/log") ("list_to_struct" "polars-ops/list_to_struct") ("list_sets" "polars-ops/list_sets") ("list_sample" "polars-ops/list_sample") ("list_gather" "polars-ops/list_gather") ("list_drop_nulls" "polars-ops/list_drop_nulls") ("list_count" "polars-ops/list_count") ("list_any_all" "polars-ops/list_any_all") ("json" "polars-io/json" "polars-json") ("is_unique" "polars-ops/is_unique") ("is_last_distinct" "polars-core/is_last_distinct" "polars-ops/is_last_distinct") ("is_in" "polars-ops/is_in") ("is_first_distinct" "polars-core/is_first_distinct" "polars-ops/is_first_distinct") ("is_between" "polars-ops/is_between") ("ipc" "polars-io/ipc") ("interpolate" "polars-ops/interpolate") ("hive_partitions") ("hist" "polars-ops/hist") ("future") ("fused" "polars-ops/fused") ("fmt" "polars-core/fmt") ("find_many" "polars-ops/find_many") ("ffi_plugin" "libloading" "polars-ffi") ("extract_jsonpath" "polars-ops/extract_jsonpath") ("extract_groups" "regex" "dtype-struct" "polars-ops/extract_groups") ("ewma_by" "polars-ops/ewma_by") ("ewma" "polars-ops/ewma") ("dynamic_group_by" "polars-core/dynamic_group_by") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-time/dtype-time" "temporal") ("dtype-struct" "polars-core/dtype-struct") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-time/dtype-date" "temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-array" "polars-core/dtype-array" "polars-ops/dtype-array") ("dot_diagram") ("diff" "polars-ops/diff") ("debugging") ("date_offset" "polars-time" "chrono") ("cutqcut" "polars-ops/cutqcut") ("cum_agg" "polars-ops/cum_agg") ("csv" "polars-io/csv") ("cse") ("cross_join" "polars-ops/cross_join") ("cov" "polars-ops/cov") ("concat_str") ("coalesce") ("cloud" "async" "polars-io/cloud") ("chunked_ids") ("business" "polars-ops/business") ("binary_encoding" "polars-ops/binary_encoding") ("bigidx" "polars-core/bigidx") ("async" "polars-io/async" "futures") ("asof_join" "polars-time" "polars-ops/asof_join") ("array_to_struct" "polars-ops/array_to_struct") ("array_count" "polars-ops/array_count" "dtype-array") ("array_any_all" "polars-ops/array_any_all" "dtype-array") ("arg_where") ("approx_unique" "polars-ops/approx_unique") ("abs" "polars-ops/abs")))) (s 2) (e (quote (("serde" "dep:serde" "polars-core/serde-lazy" "polars-time/serde" "polars-io/serde" "polars-ops/serde") ("python" "dep:pyo3" "ciborium"))))))

(define-public crate-polars-plan-0.40.0 (c (n "polars-plan") (v "0.40.0") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.40.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison"))) (k 0) (p "polars-arrow")) (d (n "bytemuck") (r "^1.11") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono-tz") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "ciborium") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "either") (r "^1.11") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash" "serde"))) (d #t) (k 0)) (d (n "libloading") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 0)) (d (n "polars-core") (r "^0.40.0") (f (quote ("lazy" "zip_with" "random"))) (k 0)) (d (n "polars-ffi") (r "^0.40.0") (o #t) (k 0)) (d (n "polars-io") (r "^0.40.0") (f (quote ("lazy"))) (k 0)) (d (n "polars-json") (r "^0.40.0") (o #t) (k 0)) (d (n "polars-ops") (r "^0.40.0") (k 0)) (d (n "polars-parquet") (r "^0.40.0") (o #t) (k 0)) (d (n "polars-time") (r "^0.40.0") (o #t) (k 0)) (d (n "polars-utils") (r "^0.40.0") (k 0)) (d (n "pyo3") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.9") (d #t) (k 0)) (d (n "recursive") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "smartstring") (r "^1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.26") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "141d2ymgvpjcabx6gk13qws9qd433yrc56rqlh8z76kymr0kbald") (f (quote (("unique_counts" "polars-ops/unique_counts") ("true_div") ("trigonometry") ("top_k" "polars-ops/top_k") ("timezones" "chrono-tz" "polars-time/timezones" "polars-core/timezones" "regex") ("temporal" "polars-core/temporal" "polars-core/dtype-date" "polars-core/dtype-datetime" "polars-core/dtype-time" "polars-core/dtype-i8" "polars-core/dtype-i16") ("strings" "polars-core/strings" "polars-ops/strings") ("string_to_integer" "polars-ops/string_to_integer") ("string_reverse" "polars-ops/string_reverse") ("string_pad" "polars-ops/string_pad") ("string_encoding" "polars-ops/string_encoding") ("streaming") ("sign") ("semi_anti_join" "polars-ops/semi_anti_join") ("search_sorted" "polars-ops/search_sorted") ("row_hash" "polars-core/row_hash" "polars-ops/hash") ("round_series" "polars-ops/round_series") ("rolling_window_by" "polars-core/rolling_window_by" "polars-time/rolling_window_by" "polars-ops/rolling_window_by") ("rolling_window" "polars-core/rolling_window" "polars-time/rolling_window" "polars-ops/rolling_window") ("rle" "polars-ops/rle") ("replace" "polars-ops/replace") ("repeat_by" "polars-ops/repeat_by") ("reinterpret" "polars-core/reinterpret" "polars-ops/reinterpret") ("rank" "polars-ops/rank") ("range") ("random" "polars-core/random") ("propagate_nans" "polars-ops/propagate_nans") ("pivot" "polars-core/rows" "polars-ops/pivot") ("peaks" "polars-ops/peaks") ("pct_change" "polars-ops/pct_change") ("parquet" "polars-io/parquet" "polars-parquet") ("panic_on_schema") ("object" "polars-core/object") ("nightly" "polars-utils/nightly" "polars-ops/nightly") ("moment" "polars-ops/moment") ("mode" "polars-ops/mode") ("meta") ("merge_sorted" "polars-ops/merge_sorted") ("log" "polars-ops/log") ("list_to_struct" "polars-ops/list_to_struct") ("list_sets" "polars-ops/list_sets") ("list_sample" "polars-ops/list_sample") ("list_gather" "polars-ops/list_gather") ("list_drop_nulls" "polars-ops/list_drop_nulls") ("list_count" "polars-ops/list_count") ("list_any_all" "polars-ops/list_any_all") ("json" "polars-io/json" "polars-json") ("is_unique" "polars-ops/is_unique") ("is_last_distinct" "polars-core/is_last_distinct" "polars-ops/is_last_distinct") ("is_in" "polars-ops/is_in") ("is_first_distinct" "polars-core/is_first_distinct" "polars-ops/is_first_distinct") ("is_between" "polars-ops/is_between") ("ipc" "polars-io/ipc") ("interpolate" "polars-ops/interpolate") ("hive_partitions") ("hist" "polars-ops/hist") ("future") ("fused" "polars-ops/fused") ("fmt" "polars-core/fmt") ("find_many" "polars-ops/find_many") ("ffi_plugin" "libloading" "polars-ffi") ("extract_jsonpath" "polars-ops/extract_jsonpath") ("extract_groups" "regex" "dtype-struct" "polars-ops/extract_groups") ("ewma_by" "polars-ops/ewma_by") ("ewma" "polars-ops/ewma") ("dynamic_group_by" "polars-core/dynamic_group_by") ("dtype-u8" "polars-core/dtype-u8") ("dtype-u16" "polars-core/dtype-u16") ("dtype-time" "polars-time/dtype-time" "temporal") ("dtype-struct" "polars-core/dtype-struct") ("dtype-i8" "polars-core/dtype-i8") ("dtype-i16" "polars-core/dtype-i16") ("dtype-duration" "polars-core/dtype-duration" "polars-time/dtype-duration" "temporal") ("dtype-decimal" "polars-core/dtype-decimal") ("dtype-datetime" "polars-time/dtype-datetime" "temporal") ("dtype-date" "polars-time/dtype-date" "temporal") ("dtype-categorical" "polars-core/dtype-categorical") ("dtype-array" "polars-core/dtype-array" "polars-ops/dtype-array") ("dot_diagram") ("diff" "polars-ops/diff") ("debugging") ("date_offset" "polars-time" "chrono") ("cutqcut" "polars-ops/cutqcut") ("cum_agg" "polars-ops/cum_agg") ("csv" "polars-io/csv") ("cse") ("cross_join" "polars-ops/cross_join") ("cov" "polars-ops/cov") ("concat_str") ("coalesce") ("cloud" "async" "polars-io/cloud") ("chunked_ids") ("business" "polars-ops/business") ("binary_encoding" "polars-ops/binary_encoding") ("bigidx" "polars-core/bigidx") ("async" "polars-io/async" "futures") ("asof_join" "polars-time" "polars-ops/asof_join") ("array_to_struct" "polars-ops/array_to_struct") ("array_count" "polars-ops/array_count" "dtype-array") ("array_any_all" "polars-ops/array_any_all" "dtype-array") ("arg_where") ("approx_unique" "polars-ops/approx_unique") ("abs" "polars-ops/abs")))) (s 2) (e (quote (("serde" "dep:serde" "polars-core/serde-lazy" "polars-time/serde" "polars-io/serde" "polars-ops/serde" "either/serde") ("python" "dep:pyo3" "ciborium"))))))

