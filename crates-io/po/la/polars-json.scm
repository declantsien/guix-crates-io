(define-module (crates-io po la polars-json) #:use-module (crates-io))

(define-public crate-polars-json-0.30.0 (c (n "polars-json") (v "0.30.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "arrow") (r "^0.17") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "fallible-streaming-iterator") (r "^0.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.1") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("std"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.30.0") (k 0)) (d (n "polars-error") (r "^0.30.0") (d #t) (k 0)) (d (n "polars-utils") (r "^0.30.0") (d #t) (k 0)) (d (n "simd-json") (r "^0.10") (f (quote ("allow-non-simd" "known-key"))) (d #t) (k 0)))) (h "1921hjxbrnjr44chwhvw3pwap9pfjh420422vak9vqjfr8xj0w3k")))

(define-public crate-polars-json-0.31.0 (c (n "polars-json") (v "0.31.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "arrow") (r "^0.17") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "fallible-streaming-iterator") (r "^0.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.0") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.31.0") (k 0)) (d (n "polars-error") (r "^0.31.0") (d #t) (k 0)) (d (n "polars-utils") (r "^0.31.0") (d #t) (k 0)) (d (n "simd-json") (r "^0.10") (f (quote ("allow-non-simd" "known-key"))) (d #t) (k 0)))) (h "17y4m3l8fzz1mqvn6aap96yyx8ak138yi0zvvrshs8m3riprn3zr")))

(define-public crate-polars-json-0.31.1 (c (n "polars-json") (v "0.31.1") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "arrow") (r "^0.17.2") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "fallible-streaming-iterator") (r "^0.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.0") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.31.1") (k 0)) (d (n "polars-error") (r "^0.31.1") (d #t) (k 0)) (d (n "polars-utils") (r "^0.31.1") (d #t) (k 0)) (d (n "simd-json") (r "^0.10") (f (quote ("allow-non-simd" "known-key"))) (d #t) (k 0)))) (h "05gkbxmcj5jzs7xh3sc1p60ivj7dxrc4pmvf6p788f3b2f1npvvy")))

(define-public crate-polars-json-0.32.0 (c (n "polars-json") (v "0.32.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "arrow") (r "^0.17.4") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "fallible-streaming-iterator") (r "^0.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.32.0") (k 0)) (d (n "polars-error") (r "^0.32.0") (d #t) (k 0)) (d (n "polars-utils") (r "^0.32.0") (d #t) (k 0)) (d (n "simd-json") (r "^0.10") (f (quote ("allow-non-simd" "known-key"))) (d #t) (k 0)))) (h "0hhirbkz2a6f8bbzdbf0ic7bx0qhq69d2hq7yargz1r3prwnq70g")))

(define-public crate-polars-json-0.32.1 (c (n "polars-json") (v "0.32.1") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "arrow") (r "^0.17.4") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "fallible-streaming-iterator") (r "^0.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.32.1") (k 0)) (d (n "polars-error") (r "^0.32.1") (d #t) (k 0)) (d (n "polars-utils") (r "^0.32.1") (d #t) (k 0)) (d (n "simd-json") (r "^0.10") (f (quote ("allow-non-simd" "known-key"))) (d #t) (k 0)))) (h "153faq2mbcr456h6wzw52lcbcpc8jyvxqj3kij04cr6gax2hjn4y")))

(define-public crate-polars-json-0.33.0 (c (n "polars-json") (v "0.33.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "arrow") (r "^0.18.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "fallible-streaming-iterator") (r "^0.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.33.0") (k 0)) (d (n "polars-error") (r "^0.33.0") (k 0)) (d (n "polars-utils") (r "^0.33.0") (k 0)) (d (n "simd-json") (r "^0.10") (f (quote ("allow-non-simd" "known-key"))) (d #t) (k 0)))) (h "12dk0ijh0r5b1zgbg4c7sxpllzh6sg4v4rh9a2wjfg2jwh4in16r")))

(define-public crate-polars-json-0.33.1 (c (n "polars-json") (v "0.33.1") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "arrow") (r "^0.18.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "fallible-streaming-iterator") (r "^0.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.33.1") (k 0)) (d (n "polars-error") (r "^0.33.1") (k 0)) (d (n "polars-utils") (r "^0.33.1") (k 0)) (d (n "simd-json") (r "^0.10") (f (quote ("allow-non-simd" "known-key"))) (d #t) (k 0)))) (h "02qnap2brp893530d6kn277d4hf7gca39rf4c0fbgyi4k00q5qm8")))

(define-public crate-polars-json-0.33.2 (c (n "polars-json") (v "0.33.2") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "arrow") (r "^0.18.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "arrow2")) (d (n "fallible-streaming-iterator") (r "^0.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-arrow") (r "^0.33.2") (k 0)) (d (n "polars-error") (r "^0.33.2") (k 0)) (d (n "polars-utils") (r "^0.33.2") (k 0)) (d (n "simd-json") (r "^0.10") (f (quote ("allow-non-simd" "known-key"))) (d #t) (k 0)))) (h "1f3ya8bg0k4vpsgqz59xifa92cy8jxssa1jsxxm710fnfrhndmfn")))

(define-public crate-polars-json-0.34.0 (c (n "polars-json") (v "0.34.0") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.34.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (k 0)) (d (n "fallible-streaming-iterator") (r "^0.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "itoa") (r "^1.0.6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-error") (r "^0.34.0") (k 0)) (d (n "polars-utils") (r "^0.34.0") (k 0)) (d (n "ryu") (r "^1.0.13") (d #t) (k 0)) (d (n "simd-json") (r "^0.12") (f (quote ("known-key"))) (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1.9") (d #t) (k 0)))) (h "1nwl8q6manpa5nl3gx9gl7myzgz03xsjqry4snvk31128c38z8fp")))

(define-public crate-polars-json-0.34.1 (c (n "polars-json") (v "0.34.1") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.34.1") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (k 0)) (d (n "fallible-streaming-iterator") (r "^0.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "itoa") (r "^1.0.6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-error") (r "^0.34.1") (k 0)) (d (n "polars-utils") (r "^0.34.1") (k 0)) (d (n "ryu") (r "^1.0.13") (d #t) (k 0)) (d (n "simd-json") (r "^0.12") (f (quote ("known-key"))) (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1.9") (d #t) (k 0)))) (h "0kkypgb8cirrkcixxbr3npb08s3m1xqqhqqid8aw5h57yxbprwj5")))

(define-public crate-polars-json-0.34.2 (c (n "polars-json") (v "0.34.2") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.34.2") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (k 0)) (d (n "fallible-streaming-iterator") (r "^0.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "itoa") (r "^1.0.6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-error") (r "^0.34.2") (k 0)) (d (n "polars-utils") (r "^0.34.2") (k 0)) (d (n "ryu") (r "^1.0.13") (d #t) (k 0)) (d (n "simd-json") (r "^0.12") (f (quote ("known-key"))) (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1.9") (d #t) (k 0)))) (h "18xmhmxm1j2nl41m3ajxaqq73hms4ff50in97hl53gd98wk1si94")))

(define-public crate-polars-json-0.35.0 (c (n "polars-json") (v "0.35.0") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.35.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (k 0)) (d (n "fallible-streaming-iterator") (r "^0.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "itoa") (r "^1.0.6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-error") (r "^0.35.0") (k 0)) (d (n "polars-utils") (r "^0.35.0") (k 0)) (d (n "ryu") (r "^1.0.13") (d #t) (k 0)) (d (n "simd-json") (r "^0.13") (f (quote ("known-key"))) (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1.9") (d #t) (k 0)))) (h "0jmfa83863w9rhdqsl0f1c9sfm4fn8y3lcld12ap4hb99wz14dwn")))

(define-public crate-polars-json-0.35.1 (c (n "polars-json") (v "0.35.1") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.35.1") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (k 0)) (d (n "fallible-streaming-iterator") (r "^0.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "itoa") (r "^1.0.6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-error") (r "^0.35.1") (k 0)) (d (n "polars-utils") (r "^0.35.1") (k 0)) (d (n "ryu") (r "^1.0.13") (d #t) (k 0)) (d (n "simd-json") (r "^0.13") (f (quote ("known-key"))) (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1.9") (d #t) (k 0)))) (h "1sb6ds72q9z6wc6i00n2szn372f7n0mixz6bgnx5y695d64anl6a")))

(define-public crate-polars-json-0.35.2 (c (n "polars-json") (v "0.35.2") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.35.2") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (k 0)) (d (n "fallible-streaming-iterator") (r "^0.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "itoa") (r "^1.0.6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-error") (r "^0.35.2") (k 0)) (d (n "polars-utils") (r "^0.35.2") (k 0)) (d (n "ryu") (r "^1.0.13") (d #t) (k 0)) (d (n "simd-json") (r "^0.13") (f (quote ("known-key"))) (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1.9") (d #t) (k 0)))) (h "0p17jpjlam1njqc5dzb0qa57g98y1n0kgwyw844195s8a65sp42d")))

(define-public crate-polars-json-0.35.3 (c (n "polars-json") (v "0.35.3") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.35.3") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (k 0)) (d (n "fallible-streaming-iterator") (r "^0.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "itoa") (r "^1.0.6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-error") (r "^0.35.3") (k 0)) (d (n "polars-utils") (r "^0.35.3") (k 0)) (d (n "ryu") (r "^1.0.13") (d #t) (k 0)) (d (n "simd-json") (r "^0.13") (f (quote ("known-key"))) (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1.9") (d #t) (k 0)))) (h "06440bb58k26lkx9ahjlv88j94l4nwxr6aihk1rp6q2461jabqjp")))

(define-public crate-polars-json-0.35.4 (c (n "polars-json") (v "0.35.4") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.35.4") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (k 0)) (d (n "fallible-streaming-iterator") (r "^0.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "itoa") (r "^1.0.6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-error") (r "^0.35.4") (k 0)) (d (n "polars-utils") (r "^0.35.4") (k 0)) (d (n "ryu") (r "^1.0.13") (d #t) (k 0)) (d (n "simd-json") (r "^0.13") (f (quote ("known-key"))) (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1.9") (d #t) (k 0)))) (h "0na5v1mlg3dhz8mdp5l2f788m76p3cvajmlf75637bwxq61wpfck")))

(define-public crate-polars-json-0.36.0 (c (n "polars-json") (v "0.36.0") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.36.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (k 0)) (d (n "fallible-streaming-iterator") (r "^0.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "itoa") (r "^1.0.6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-error") (r "^0.36.0") (k 0)) (d (n "polars-utils") (r "^0.36.0") (k 0)) (d (n "ryu") (r "^1.0.13") (d #t) (k 0)) (d (n "simd-json") (r "^0.13") (f (quote ("known-key"))) (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1.9") (d #t) (k 0)))) (h "013bxfy4qmhr1f5578rhjxq759v111bqsy4d3xnp86r0yh8xqsa0")))

(define-public crate-polars-json-0.36.2 (c (n "polars-json") (v "0.36.2") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.36.2") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_filter" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (k 0)) (d (n "fallible-streaming-iterator") (r "^0.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "itoa") (r "^1.0.6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-error") (r "^0.36.2") (k 0)) (d (n "polars-utils") (r "^0.36.2") (k 0)) (d (n "ryu") (r "^1.0.13") (d #t) (k 0)) (d (n "simd-json") (r "^0.13") (f (quote ("known-key"))) (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1.9") (d #t) (k 0)))) (h "1czrzw279ixxryb40xcfh8s1gxmbhfvlib9my8z6iylqg9mx8iza")))

(define-public crate-polars-json-0.37.0 (c (n "polars-json") (v "0.37.0") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.37.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (k 0)) (d (n "fallible-streaming-iterator") (r "^0.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "itoa") (r "^1.0.6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-error") (r "^0.37.0") (k 0)) (d (n "polars-utils") (r "^0.37.0") (k 0)) (d (n "ryu") (r "^1.0.13") (d #t) (k 0)) (d (n "simd-json") (r "^0.13") (f (quote ("known-key"))) (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1.9") (d #t) (k 0)))) (h "1v8jwfyagh8vq8l8hbgp72an83w5lxb90xrq037p0klnp901ygcp")))

(define-public crate-polars-json-0.38.0 (c (n "polars-json") (v "0.38.0") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.38.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (k 0)) (d (n "fallible-streaming-iterator") (r "^0.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "itoa") (r "^1.0.6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-error") (r "^0.38.0") (k 0)) (d (n "polars-utils") (r "^0.38.0") (k 0)) (d (n "ryu") (r "^1.0.13") (d #t) (k 0)) (d (n "simd-json") (r "^0.13") (f (quote ("known-key"))) (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1.9") (d #t) (k 0)))) (h "0pnrcnpbhzqq6xg96v3yh0rpz2dqwla78hippck909apnm0hsqll")))

(define-public crate-polars-json-0.38.1 (c (n "polars-json") (v "0.38.1") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.38.1") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (k 0)) (d (n "fallible-streaming-iterator") (r "^0.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "itoa") (r "^1.0.6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-error") (r "^0.38.1") (k 0)) (d (n "polars-utils") (r "^0.38.1") (k 0)) (d (n "ryu") (r "^1.0.13") (d #t) (k 0)) (d (n "simd-json") (r "^0.13") (f (quote ("known-key"))) (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1.9") (d #t) (k 0)))) (h "1bjlk5qjzpkzwn5mdm07cycbl14nk5vxmd5rri4ws8haahrlsz7x")))

(define-public crate-polars-json-0.38.2 (c (n "polars-json") (v "0.38.2") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.38.2") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_if_then_else"))) (k 0) (p "polars-arrow")) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (k 0)) (d (n "fallible-streaming-iterator") (r "^0.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "itoa") (r "^1.0.6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-error") (r "^0.38.2") (k 0)) (d (n "polars-utils") (r "^0.38.2") (k 0)) (d (n "ryu") (r "^1.0.13") (d #t) (k 0)) (d (n "simd-json") (r "^0.13") (f (quote ("known-key"))) (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1.9") (d #t) (k 0)))) (h "1sg7vjdbmyvhlwgln5b21xzx4gn4fqqxac5ik2yi2abb1fx0lgsg")))

(define-public crate-polars-json-0.38.3 (c (n "polars-json") (v "0.38.3") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.38.3") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison"))) (k 0) (p "polars-arrow")) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (k 0)) (d (n "fallible-streaming-iterator") (r "^0.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "itoa") (r "^1.0.6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-error") (r "^0.38.3") (k 0)) (d (n "polars-utils") (r "^0.38.3") (k 0)) (d (n "ryu") (r "^1.0.13") (d #t) (k 0)) (d (n "simd-json") (r "^0.13") (f (quote ("known-key"))) (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1.9") (d #t) (k 0)))) (h "0j62mm1cwlrkp6nlspdm135jsn6jw52bpalmzqwwkp8hiyhar1pg")))

(define-public crate-polars-json-0.39.0 (c (n "polars-json") (v "0.39.0") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.39.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison"))) (k 0) (p "polars-arrow")) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (k 0)) (d (n "fallible-streaming-iterator") (r "^0.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "itoa") (r "^1.0.6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-error") (r "^0.39.0") (k 0)) (d (n "polars-utils") (r "^0.39.0") (k 0)) (d (n "ryu") (r "^1.0.13") (d #t) (k 0)) (d (n "simd-json") (r "^0.13") (f (quote ("known-key"))) (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1.9") (d #t) (k 0)))) (h "15w5kqczhl95dz7kv8k58v4bigmi463p8lwm87h23m949rksdm03")))

(define-public crate-polars-json-0.39.1 (c (n "polars-json") (v "0.39.1") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.39.1") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison"))) (k 0) (p "polars-arrow")) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (k 0)) (d (n "fallible-streaming-iterator") (r "^0.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "itoa") (r "^1.0.6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-error") (r "^0.39.1") (k 0)) (d (n "polars-utils") (r "^0.39.1") (k 0)) (d (n "ryu") (r "^1.0.13") (d #t) (k 0)) (d (n "simd-json") (r "^0.13") (f (quote ("known-key"))) (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1.9") (d #t) (k 0)))) (h "0jl7rzag6makw6rvshradv60a6dvzzxi22qbvfz4p2cldzgxq8mg")))

(define-public crate-polars-json-0.39.2 (c (n "polars-json") (v "0.39.2") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.39.2") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison"))) (k 0) (p "polars-arrow")) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (k 0)) (d (n "fallible-streaming-iterator") (r "^0.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash"))) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "itoa") (r "^1.0.6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-error") (r "^0.39.2") (k 0)) (d (n "polars-utils") (r "^0.39.2") (k 0)) (d (n "ryu") (r "^1.0.13") (d #t) (k 0)) (d (n "simd-json") (r "^0.13") (f (quote ("known-key"))) (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1.9") (d #t) (k 0)))) (h "00f7dz8jmqrgwwbjfpbn14jl6gvhklhwzh40hik2p8a9ls9488l1")))

(define-public crate-polars-json-0.40.0 (c (n "polars-json") (v "0.40.0") (d (list (d (n "ahash") (r ">=0.8.5") (d #t) (k 0)) (d (n "arrow") (r "^0.40.0") (f (quote ("compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison"))) (k 0) (p "polars-arrow")) (d (n "chrono") (r "^0.4.31") (f (quote ("std"))) (k 0)) (d (n "fallible-streaming-iterator") (r "^0.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon" "ahash" "serde"))) (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("std"))) (d #t) (k 0)) (d (n "itoa") (r "^1.0.6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "polars-error") (r "^0.40.0") (k 0)) (d (n "polars-utils") (r "^0.40.0") (k 0)) (d (n "ryu") (r "^1.0.13") (d #t) (k 0)) (d (n "simd-json") (r "^0.13") (f (quote ("known-key"))) (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1.9") (d #t) (k 0)))) (h "00crms63jnw9gsdlyrx80nfpcz3xdzxav6k3i1mar4sv2k8bl30n") (f (quote (("timezones" "arrow/chrono-tz"))))))

