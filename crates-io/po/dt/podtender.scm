(define-module (crates-io po dt podtender) #:use-module (crates-io))

(define-public crate-podtender-0.1.0 (c (n "podtender") (v "0.1.0") (d (list (d (n "asynchronous-codec") (r "^0.6.0") (f (quote ("json"))) (d #t) (k 0)) (d (n "derive_builder") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "hyper") (r "^0.14.17") (f (quote ("server" "client" "http1" "runtime" "stream"))) (d #t) (k 0)) (d (n "hyperlocal") (r "^0.8.0") (f (quote ("client"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1.7") (d #t) (k 0)) (d (n "serde_qs") (r "^0.9.1") (d #t) (k 0)) (d (n "serde_with") (r "^1.12.0") (f (quote ("json" "macros"))) (d #t) (k 0)) (d (n "serial_test") (r "^0.6.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("rt-multi-thread" "net" "macros" "io-std" "io-util"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.9") (f (quote ("env-filter" "registry"))) (d #t) (k 2)))) (h "0hbrr6h7kv5q352drh0lj7fxy1zxvv2izad8l6vyajds9nv988lg") (f (quote (("examples") ("enable-tracing" "tracing") ("builder" "derive_builder"))))))

(define-public crate-podtender-0.2.0 (c (n "podtender") (v "0.2.0") (d (list (d (n "asynchronous-codec") (r "^0.6.0") (f (quote ("json"))) (d #t) (k 0)) (d (n "derive_builder") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "hyper") (r "^0.14.18") (f (quote ("server" "client" "http1" "runtime" "stream"))) (d #t) (k 0)) (d (n "hyperlocal") (r "^0.8.0") (f (quote ("client"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1.7") (d #t) (k 0)) (d (n "serde_qs") (r "^0.9.2") (d #t) (k 0)) (d (n "serde_with") (r "^1.13.0") (f (quote ("json" "macros"))) (d #t) (k 0)) (d (n "serial_test") (r "^0.6.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.18.1") (f (quote ("rt-multi-thread" "net" "macros" "io-std" "io-util"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.34") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "registry"))) (d #t) (k 2)))) (h "0lanl1qyb5qamdjy6mcfw7zxhrcnc010f66y55q5w7j502pqjdji") (f (quote (("examples")))) (s 2) (e (quote (("tracing" "dep:tracing") ("builder" "dep:derive_builder"))))))

(define-public crate-podtender-0.3.0 (c (n "podtender") (v "0.3.0") (d (list (d (n "asynchronous-codec") (r "^0.6.0") (f (quote ("json"))) (d #t) (k 0)) (d (n "derive_builder") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "hyper") (r "^0.14.18") (f (quote ("server" "client" "http1" "runtime" "stream"))) (d #t) (k 0)) (d (n "hyperlocal") (r "^0.8.0") (f (quote ("client"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1.7") (d #t) (k 0)) (d (n "serde_qs") (r "^0.10.1") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.0") (f (quote ("json" "macros"))) (d #t) (k 0)) (d (n "serial_test") (r "^0.9.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.18.1") (f (quote ("rt-multi-thread" "net" "macros" "io-std" "io-util"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.34") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "registry"))) (d #t) (k 2)))) (h "0miw2z9qm7zrb6hjcr3knf5q13ycmibfmh9a6vw4pf3m01n8vs67") (f (quote (("examples")))) (s 2) (e (quote (("tracing" "dep:tracing") ("builder" "dep:derive_builder"))))))

(define-public crate-podtender-0.4.0 (c (n "podtender") (v "0.4.0") (d (list (d (n "asynchronous-codec") (r "^0.6.0") (f (quote ("json"))) (d #t) (k 0)) (d (n "derive_builder") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "hyper") (r "^0.14.18") (f (quote ("server" "client" "http1" "runtime" "stream"))) (d #t) (k 0)) (d (n "hyperlocal") (r "^0.8.0") (f (quote ("client"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1.7") (d #t) (k 0)) (d (n "serde_qs") (r "^0.11.0") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.0") (f (quote ("json" "macros"))) (d #t) (k 0)) (d (n "serial_test") (r "^0.10.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.18.1") (f (quote ("rt-multi-thread" "net" "macros" "io-std" "io-util"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.34") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "registry"))) (d #t) (k 2)))) (h "1ghwwxy9fvpb4aj59c88hi3zck8274qg0qrpw282f4zv2bsdyjbw") (f (quote (("examples")))) (s 2) (e (quote (("tracing" "dep:tracing") ("builder" "dep:derive_builder"))))))

(define-public crate-podtender-0.5.0 (c (n "podtender") (v "0.5.0") (d (list (d (n "asynchronous-codec") (r "^0.6.0") (f (quote ("json"))) (d #t) (k 0)) (d (n "derive_builder") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "hyper") (r "^0.14.18") (f (quote ("server" "client" "http1" "runtime" "stream"))) (d #t) (k 0)) (d (n "hyperlocal") (r "^0.8.0") (f (quote ("client"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1.7") (d #t) (k 0)) (d (n "serde_qs") (r "^0.12.0") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.0") (f (quote ("json" "macros"))) (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.18.1") (f (quote ("rt-multi-thread" "net" "macros" "io-std" "io-util"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.34") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "registry"))) (d #t) (k 2)))) (h "150lrfr52bryq446lmnmfd9wl8jzq6mgyxky36phhqbmdzrqlirl") (f (quote (("examples")))) (s 2) (e (quote (("tracing" "dep:tracing") ("builder" "dep:derive_builder"))))))

