(define-module (crates-io po rk porkbun-rs) #:use-module (crates-io))

(define-public crate-porkbun-rs-0.1.0 (c (n "porkbun-rs") (v "0.1.0") (d (list (d (n "async-trait") (r "~0.1") (o #t) (d #t) (k 0)) (d (n "bytes") (r "~1.0") (d #t) (k 0)) (d (n "chrono") (r "~0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derive_builder") (r "~0.10") (d #t) (k 0)) (d (n "eyre") (r "^0.6") (d #t) (k 2)) (d (n "futures-util") (r "^0.3.15") (o #t) (k 0)) (d (n "http") (r "~0.2") (d #t) (k 0)) (d (n "itertools") (r "~0.10") (o #t) (d #t) (k 0)) (d (n "itertools") (r "~0.10") (d #t) (k 2)) (d (n "log") (r "~0.4.14") (d #t) (k 0)) (d (n "reqwest") (r "~0.11.0") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "~1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.25") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.6") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1bx70vknhfi886ir6dw38ylacn5bnvl4fyrindqc47dbn0jgf6cx") (f (quote (("default" "client_api") ("client_api" "async-trait" "thiserror" "reqwest" "futures-util" "itertools"))))))

