(define-module (crates-io tu rt turtlescan) #:use-module (crates-io))

(define-public crate-turtlescan-0.1.0 (c (n "turtlescan") (v "0.1.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "ethers-core") (r "^0.4.6") (d #t) (k 0)) (d (n "ethers-providers") (r "^0.4.6") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "log4rs") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)) (d (n "term_size") (r "^0.3.2") (d #t) (k 0)) (d (n "termion") (r "^1.5") (d #t) (k 0)) (d (n "tokio") (r "^1.10.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tui") (r "^0.16") (d #t) (k 0)))) (h "0d74vkbcjrcbshrv17ja72g9xg13ps0f2kkiwrlyyzv0nl84j3vw")))

(define-public crate-turtlescan-0.2.0 (c (n "turtlescan") (v "0.2.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "ethers-core") (r "^0.4.6") (d #t) (k 0)) (d (n "ethers-providers") (r "^0.4.6") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "log4rs") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)) (d (n "simple-error") (r "^0.1.9") (d #t) (k 0)) (d (n "term_size") (r "^0.3.2") (d #t) (k 0)) (d (n "termion") (r "^1.5") (d #t) (k 0)) (d (n "tokio") (r "^1.10.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tui") (r "^0.16") (d #t) (k 0)))) (h "14bg9bw8glbw300sjhzfx7ak3ddcwrbk5k16z3ryb4cn0v092aqf")))

(define-public crate-turtlescan-0.3.0 (c (n "turtlescan") (v "0.3.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "ethers-core") (r "^0.4.6") (d #t) (k 0)) (d (n "ethers-providers") (r "^0.4.6") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "log4rs") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)) (d (n "signal-hook") (r "^0.3.10") (d #t) (k 0)) (d (n "simple-error") (r "^0.1.9") (d #t) (k 0)) (d (n "term_size") (r "^0.3.2") (d #t) (k 0)) (d (n "termion") (r "^1.5.6") (d #t) (k 0)) (d (n "tokio") (r "^1.10.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tui") (r "^0.16") (d #t) (k 0)))) (h "0wzksxywi8s4l0wirihq3maljvsxlwbcmpyn8a4hby6q8j6q8wkj")))

(define-public crate-turtlescan-0.4.0 (c (n "turtlescan") (v "0.4.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "ethers-core") (r "^0.4.6") (d #t) (k 0)) (d (n "ethers-providers") (r "^0.4.6") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "log4rs") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)) (d (n "signal-hook") (r "^0.3.10") (d #t) (k 0)) (d (n "simple-error") (r "^0.1.9") (d #t) (k 0)) (d (n "term_size") (r "^0.3.2") (d #t) (k 0)) (d (n "termion") (r "^1.5.6") (d #t) (k 0)) (d (n "tokio") (r "^1.10.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tui") (r "^0.16") (d #t) (k 0)))) (h "1g065y4lr6ny0rdx9bihkljpflsvfifkaxj89wsp1lxhci8vj18d")))

(define-public crate-turtlescan-0.5.0 (c (n "turtlescan") (v "0.5.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "ethers-core") (r "^0.4.6") (d #t) (k 0)) (d (n "ethers-providers") (r "^0.4.6") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "log4rs") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)) (d (n "signal-hook") (r "^0.3.10") (d #t) (k 0)) (d (n "simple-error") (r "^0.1.9") (d #t) (k 0)) (d (n "term_size") (r "^0.3.2") (d #t) (k 0)) (d (n "termion") (r "^1.5.6") (d #t) (k 0)) (d (n "tokio") (r "^1.10.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tui") (r "^0.16") (d #t) (k 0)))) (h "0sngz2kfi08sycs6gf3hrfbxrk0qd2zfxrmy78zb9nysz5wp2n93")))

(define-public crate-turtlescan-0.6.0 (c (n "turtlescan") (v "0.6.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "ethers-core") (r "^0.4.6") (d #t) (k 0)) (d (n "ethers-providers") (r "^0.4.6") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "log4rs") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)) (d (n "signal-hook") (r "^0.3.10") (d #t) (k 0)) (d (n "simple-error") (r "^0.1.9") (d #t) (k 0)) (d (n "term_size") (r "^0.3.2") (d #t) (k 0)) (d (n "termion") (r "^1.5.6") (d #t) (k 0)) (d (n "tokio") (r "^1.10.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tui") (r "^0.16") (d #t) (k 0)))) (h "0cca1zdb1hw8rmn9qcpg2x40y80ya8v8y9vkrnsp31sb7bfmj6x0")))

