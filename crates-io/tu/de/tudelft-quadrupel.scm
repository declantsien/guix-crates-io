(define-module (crates-io tu de tudelft-quadrupel) #:use-module (crates-io))

(define-public crate-tudelft-quadrupel-0.1.0 (c (n "tudelft-quadrupel") (v "0.1.0") (h "0lr5pgjnim7ssx26q7y9iv5cwwhdr8jrjkamnrdjw4c7hhks95ff")))

(define-public crate-tudelft-quadrupel-0.1.1 (c (n "tudelft-quadrupel") (v "0.1.1") (d (list (d (n "alloc-cortex-m") (r "^0.4.3") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.6") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.7.2") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "fixed") (r "^1.20") (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "nrf51-hal") (r "^0.16.0") (d #t) (k 0)) (d (n "nrf51-pac") (r "^0.12.2") (d #t) (k 0)) (d (n "ringbuffer") (r "^0.11.1") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "0kkz4v1kxq9vqy7rycnb82hl22z1l3hz3fviry5bf7bfwf2d8fp6")))

(define-public crate-tudelft-quadrupel-0.1.2 (c (n "tudelft-quadrupel") (v "0.1.2") (d (list (d (n "alloc-cortex-m") (r "^0.4.3") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.6") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.7.2") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "fixed") (r "^1.20") (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "nrf51-hal") (r "^0.16.0") (d #t) (k 0)) (d (n "nrf51-pac") (r "^0.12.2") (d #t) (k 0)) (d (n "ringbuffer") (r "^0.11.1") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "0bksbjb0f2sc6qmddbhrfbx7g4581l058lkwxiqyk8wfb2lv7cxc")))

(define-public crate-tudelft-quadrupel-1.0.0 (c (n "tudelft-quadrupel") (v "1.0.0") (d (list (d (n "alloc-cortex-m") (r "^0.4.3") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.6") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.7.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "fixed") (r "^1.20") (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "nrf51-hal") (r "^0.16.0") (d #t) (k 0)) (d (n "nrf51-pac") (r "^0.12.2") (d #t) (k 0)) (d (n "ringbuffer") (r "^0.11.1") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "0865ngzi5y55bf4w677zh4flb763dxardgpxkiqp44046km3cskx")))

(define-public crate-tudelft-quadrupel-1.0.1 (c (n "tudelft-quadrupel") (v "1.0.1") (d (list (d (n "alloc-cortex-m") (r "^0.4.3") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.6") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.7.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "fixed") (r "^1.20") (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "nrf51-hal") (r "^0.16.0") (d #t) (k 0)) (d (n "nrf51-pac") (r "^0.12.2") (d #t) (k 0)) (d (n "ringbuffer") (r "^0.12.0") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "0k301zmcm28s71mn50fmf0b8x2vh4pxr4692znhl9wc7kgnh21zm")))

(define-public crate-tudelft-quadrupel-2.0.0 (c (n "tudelft-quadrupel") (v "2.0.0") (d (list (d (n "alloc-cortex-m") (r "^0.4.3") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.6") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.7.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "fixed") (r "^1.20") (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "nrf51-hal") (r "^0.16.0") (d #t) (k 0)) (d (n "nrf51-pac") (r "^0.12.2") (d #t) (k 0)) (d (n "ringbuffer") (r "^0.12.0") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "1659fwrfdckij17fjiqsqrrj1az30iscz2siai4miq4m7k9r5qs6")))

(define-public crate-tudelft-quadrupel-2.0.1 (c (n "tudelft-quadrupel") (v "2.0.1") (d (list (d (n "alloc-cortex-m") (r "^0.4.3") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.6") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.7.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "fixed") (r "^1.20") (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "nrf51-hal") (r "^0.16.0") (d #t) (k 0)) (d (n "nrf51-pac") (r "^0.12.2") (d #t) (k 0)) (d (n "ringbuffer") (r "^0.12.0") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "0lx0kf7g0isr4ry0p75hnwninna6gzx7cjs0l0j5xz2lxkxml1js")))

(define-public crate-tudelft-quadrupel-2.1.0 (c (n "tudelft-quadrupel") (v "2.1.0") (d (list (d (n "alloc-cortex-m") (r "^0.4.3") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.6") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.7.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "fixed") (r "^1.20") (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "nrf51-hal") (r "^0.16.0") (d #t) (k 0)) (d (n "nrf51-pac") (r "^0.12.2") (d #t) (k 0)) (d (n "ringbuffer") (r "^0.12.0") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "1b3hd7js53zf0vay13rihb33qzgfnwg6x2pmvjrzlbvnri2i3y1a")))

(define-public crate-tudelft-quadrupel-3.0.0 (c (n "tudelft-quadrupel") (v "3.0.0") (d (list (d (n "alloc-cortex-m") (r "=0.4.3") (d #t) (k 0)) (d (n "cortex-m") (r "=0.7.6") (d #t) (k 0)) (d (n "cortex-m-rt") (r "=0.7.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^1") (d #t) (k 0)) (d (n "fixed") (r "^1") (d #t) (k 0)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "nrf51-hal") (r "=0.16.0") (d #t) (k 0)) (d (n "nrf51-pac") (r "=0.12.2") (d #t) (k 0)) (d (n "ringbuffer") (r "^0.15.0") (d #t) (k 0)) (d (n "void") (r "^1") (k 0)))) (h "0mz6mh8nh6zvm44ryaqyqwn3mmqrdnrhqmcxp8mxgg98r75i1wdf")))

(define-public crate-tudelft-quadrupel-3.0.1 (c (n "tudelft-quadrupel") (v "3.0.1") (d (list (d (n "alloc-cortex-m") (r "=0.4.3") (d #t) (k 0)) (d (n "cortex-m") (r "=0.7.6") (d #t) (k 0)) (d (n "cortex-m-rt") (r "=0.7.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^1") (d #t) (k 0)) (d (n "fixed") (r "^1") (d #t) (k 0)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "nrf51-hal") (r "=0.16.0") (d #t) (k 0)) (d (n "nrf51-pac") (r "=0.12.2") (d #t) (k 0)) (d (n "ringbuffer") (r "^0.15.0") (d #t) (k 0)) (d (n "void") (r "^1") (k 0)))) (h "168r7404bdxkb892mgcvd100ry5ing1qgdv8s2hr1dj1i1x767y2")))

