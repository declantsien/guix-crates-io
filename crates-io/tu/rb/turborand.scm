(define-module (crates-io tu rb turborand) #:use-module (crates-io))

(define-public crate-turborand-0.1.0 (c (n "turborand") (v "0.1.0") (d (list (d (n "instant") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1pp9vlzni5mi59dmmhd28pfq6qn61951hqkjwh7xxscd5rnqv78m")))

(define-public crate-turborand-0.2.0 (c (n "turborand") (v "0.2.0") (d (list (d (n "instant") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1rf14q3nnw7c28gf7q2j1iwxc2rrwspkqmap9lic1n8wbxphlzgy") (f (quote (("atomic"))))))

(define-public crate-turborand-0.3.0 (c (n "turborand") (v "0.3.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0gwi73sk71b89yxx4ia2x6gczn9q2p516bgq9w9hyhlh8735a7nz") (f (quote (("atomic"))))))

(define-public crate-turborand-0.3.1 (c (n "turborand") (v "0.3.1") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1yqa7vwk6yrl5940wi3mx8ddv4x7jhp4cy4mw669yifj26yvv3as") (f (quote (("atomic"))))))

(define-public crate-turborand-0.4.0 (c (n "turborand") (v "0.4.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "077wn5zni1xr4vvh9ndb9k79ic72nf65b9s8x8wv3ysq54h2r08c") (f (quote (("atomic"))))))

(define-public crate-turborand-0.5.0 (c (n "turborand") (v "0.5.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1vc57cq2vm2cmvlj82arnxgiapd8bga59smdziv4x53zckmlw13r") (f (quote (("atomic"))))))

(define-public crate-turborand-0.5.1 (c (n "turborand") (v "0.5.1") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0lgawc4z4vivq9wgdqi4vg60adjjdacgpzgqs9wxp1giabg3dwkl") (f (quote (("atomic")))) (s 2) (e (quote (("serialize" "dep:serde") ("rand" "dep:rand_core"))))))

(define-public crate-turborand-0.6.0 (c (n "turborand") (v "0.6.0") (d (list (d (n "bytemuck") (r "^1") (f (quote ("min_const_generics"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "instant") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "08k2i76dmkcyfy4dimf1g824mj9arrmhnkafrlwirvx3m0y6aji6") (f (quote (("default" "wyrand") ("atomic" "wyrand")))) (s 2) (e (quote (("wyrand" "dep:getrandom") ("serialize" "dep:serde") ("rand" "dep:rand_core") ("chacha" "dep:bytemuck" "dep:getrandom"))))))

(define-public crate-turborand-0.7.0 (c (n "turborand") (v "0.7.0") (d (list (d (n "bytemuck") (r "^1") (f (quote ("min_const_generics"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "instant") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0f03k8xs9adw36qirbkcjg3g3sd47lh7qrss0ywb7k4g0ajcv3z1") (f (quote (("default" "wyrand") ("atomic" "wyrand")))) (s 2) (e (quote (("wyrand" "dep:getrandom") ("serialize" "dep:serde") ("rand" "dep:rand_core") ("chacha" "dep:bytemuck" "dep:getrandom"))))))

(define-public crate-turborand-0.8.0 (c (n "turborand") (v "0.8.0") (d (list (d (n "bytemuck") (r "^1") (f (quote ("min_const_generics"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "instant") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1cyflfswfmx1za1sdpj9kldy9c1r0fd530jilycdn7a9k4l1ywbh") (f (quote (("default" "wyrand") ("atomic" "wyrand")))) (s 2) (e (quote (("wyrand" "dep:getrandom") ("serialize" "dep:serde") ("rand" "dep:rand_core") ("chacha" "dep:bytemuck" "dep:getrandom"))))))

(define-public crate-turborand-0.8.1 (c (n "turborand") (v "0.8.1") (d (list (d (n "bytemuck") (r "^1") (f (quote ("min_const_generics"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "criterion") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "instant") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "01bday8gfgxnzagsvdmbhgn6kgwwa9rq8g4gg3vhxvg1b54bmn96") (f (quote (("default" "wyrand") ("atomic" "wyrand")))) (s 2) (e (quote (("wyrand" "dep:getrandom") ("serialize" "dep:serde") ("rand" "dep:rand_core") ("chacha" "dep:bytemuck" "dep:getrandom"))))))

(define-public crate-turborand-0.8.2 (c (n "turborand") (v "0.8.2") (d (list (d (n "bytemuck") (r "^1") (f (quote ("min_const_generics"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "criterion") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "instant") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "15jvikh81vq9h96ll1mj32parg86m4kw662s1949xrjy9rlz0k46") (f (quote (("default" "wyrand") ("atomic" "wyrand")))) (s 2) (e (quote (("wyrand" "dep:getrandom") ("serialize" "dep:serde") ("rand" "dep:rand_core") ("chacha" "dep:bytemuck" "dep:getrandom"))))))

(define-public crate-turborand-0.8.3 (c (n "turborand") (v "0.8.3") (d (list (d (n "bytemuck") (r "^1") (f (quote ("min_const_generics"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "criterion") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "instant") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1glg3fnbrajf4ycnf9716hylgrdim7wcmr9n2yyxbwl9zd3nb5jw") (f (quote (("default" "wyrand") ("atomic" "wyrand")))) (s 2) (e (quote (("wyrand" "dep:getrandom") ("serialize" "dep:serde") ("rand" "dep:rand_core") ("chacha" "dep:bytemuck" "dep:getrandom"))))))

(define-public crate-turborand-0.9.0 (c (n "turborand") (v "0.9.0") (d (list (d (n "bytemuck") (r "^1") (f (quote ("min_const_generics"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "criterion") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "instant") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0jdikw6540rwna0fmz0xlw4i3lrvxkrcgklsn5a6s27crb1qd0z6") (f (quote (("wyrand") ("fmt") ("default" "wyrand" "fmt" "std") ("atomic" "wyrand") ("alloc")))) (s 2) (e (quote (("std" "alloc" "dep:getrandom") ("serialize" "dep:serde" "fmt") ("rand" "dep:rand_core") ("chacha" "dep:bytemuck"))))))

(define-public crate-turborand-0.10.0 (c (n "turborand") (v "0.10.0") (d (list (d (n "bytemuck") (r "^1") (f (quote ("min_const_generics"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "criterion") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "instant") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1h5s8wbapq5chd9a2sgyawxgr16sllgrcxvs0cbc1f3dr7qn33g2") (f (quote (("wyrand") ("fmt") ("default" "wyrand" "fmt" "std") ("atomic" "wyrand") ("alloc")))) (s 2) (e (quote (("std" "alloc" "dep:getrandom") ("serialize" "dep:serde" "fmt") ("rand" "dep:rand_core") ("chacha" "dep:bytemuck"))))))

(define-public crate-turborand-0.10.1 (c (n "turborand") (v "0.10.1") (d (list (d (n "bytemuck") (r "^1") (f (quote ("min_const_generics"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "criterion") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "instant") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1yp9wfraz8sfnlrl36q2qnspj9diwi5fm2iyapx7jl3qclyaxagz") (f (quote (("wyrand") ("fmt") ("default" "wyrand" "fmt" "std") ("atomic" "wyrand") ("alloc")))) (s 2) (e (quote (("std" "alloc" "dep:getrandom") ("serialize" "dep:serde" "fmt") ("rand" "dep:rand_core") ("chacha" "dep:bytemuck"))))))

