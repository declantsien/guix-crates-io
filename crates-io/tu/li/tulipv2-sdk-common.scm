(define-module (crates-io tu li tulipv2-sdk-common) #:use-module (crates-io))

(define-public crate-tulipv2-sdk-common-0.9.0 (c (n "tulipv2-sdk-common") (v "0.9.0") (d (list (d (n "anchor-lang") (r "^0.22.0") (d #t) (k 0)) (d (n "anchor-spl") (r "^0.22.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "spl-token") (r "^3.2.0") (d #t) (k 0)) (d (n "static-pubkey") (r "^1.0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tulip-arrform") (r "^0.1.1") (d #t) (k 0)) (d (n "tulipv2-sdk-farms") (r "^0.9.0") (d #t) (k 0)) (d (n "uint") (r "^0.8") (d #t) (k 0)))) (h "06s6ra2h7jr2wg6si6jjnk7m7knidjfyzmn6m39dv9h1cx4ai1pm")))

(define-public crate-tulipv2-sdk-common-0.9.1 (c (n "tulipv2-sdk-common") (v "0.9.1") (d (list (d (n "anchor-lang") (r "^0.22.0") (d #t) (k 0)) (d (n "anchor-spl") (r "^0.22.0") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "spl-token") (r "^3.2.0") (d #t) (k 0)) (d (n "static-pubkey") (r "^1.0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tulip-arrform") (r "^0.1.1") (d #t) (k 0)) (d (n "tulipv2-sdk-farms") (r "^0.9.0") (d #t) (k 0)) (d (n "uint") (r "^0.8") (d #t) (k 0)))) (h "1gv7wi31nwr9bx1qw51yya4a1wyk1nbps9klidw9vjg095f3z1b0")))

(define-public crate-tulipv2-sdk-common-0.9.2 (c (n "tulipv2-sdk-common") (v "0.9.2") (d (list (d (n "anchor-lang") (r "^0.22.0") (d #t) (k 0)) (d (n "anchor-spl") (r "^0.22.0") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "spl-token") (r "^3.2.0") (d #t) (k 0)) (d (n "static-pubkey") (r "^1.0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tulip-arrform") (r "^0.1.1") (d #t) (k 0)) (d (n "tulipv2-sdk-farms") (r "^0.9.2") (d #t) (k 0)) (d (n "uint") (r "^0.8") (d #t) (k 0)))) (h "1ybqq4vw7d51s40fzc8kypfpsdbwjbmwknaxzng1m7zmi7ls1han")))

(define-public crate-tulipv2-sdk-common-0.9.3 (c (n "tulipv2-sdk-common") (v "0.9.3") (d (list (d (n "anchor-client") (r "^0.22.0") (d #t) (k 2)) (d (n "anchor-lang") (r "^0.22.0") (d #t) (k 0)) (d (n "anchor-spl") (r "^0.22.0") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "solana-sdk") (r "^1.9.1") (d #t) (k 0)) (d (n "spl-token") (r "^3.2.0") (d #t) (k 0)) (d (n "static-pubkey") (r "^1.0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tulip-arrform") (r "^0.1.1") (d #t) (k 0)) (d (n "tulipv2-sdk-farms") (r "^0.9.3") (d #t) (k 0)) (d (n "uint") (r "^0.8") (d #t) (k 0)))) (h "1bm8lr5dvh3n2d3yyc5m12k0xxp0nk73g90lh3z3par8m68ybhnr")))

(define-public crate-tulipv2-sdk-common-0.9.4 (c (n "tulipv2-sdk-common") (v "0.9.4") (d (list (d (n "anchor-client") (r "^0.22.0") (d #t) (k 2)) (d (n "anchor-lang") (r "^0.22.0") (d #t) (k 0)) (d (n "anchor-spl") (r "^0.22.0") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "solana-sdk") (r "^1.9.1") (d #t) (k 0)) (d (n "spl-token") (r "^3.2.0") (d #t) (k 0)) (d (n "static-pubkey") (r "^1.0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tulip-arrform") (r "^0.1.1") (d #t) (k 0)) (d (n "tulipv2-sdk-farms") (r "^0.9.4") (d #t) (k 0)) (d (n "uint") (r "^0.8") (d #t) (k 0)))) (h "0sriviszam62gvrfns97gx8z83y595krbdgk3a6hzkzjgwfc3s6a")))

(define-public crate-tulipv2-sdk-common-0.9.5 (c (n "tulipv2-sdk-common") (v "0.9.5") (d (list (d (n "anchor-client") (r "^0.22.0") (d #t) (k 2)) (d (n "anchor-lang") (r "^0.22.0") (d #t) (k 0)) (d (n "anchor-spl") (r "^0.22.0") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "solana-sdk") (r "^1.9.1") (d #t) (k 0)) (d (n "spl-token") (r "^3.2.0") (d #t) (k 0)) (d (n "static-pubkey") (r "^1.0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tulip-arrform") (r "^0.1.1") (d #t) (k 0)) (d (n "tulipv2-sdk-farms") (r "^0.9.5") (d #t) (k 0)) (d (n "uint") (r "^0.8") (d #t) (k 0)))) (h "08syx0d485p8nzxh1lw8alsdw1fpvzq46p6fd49k0n1azh94v1ic")))

(define-public crate-tulipv2-sdk-common-0.9.6 (c (n "tulipv2-sdk-common") (v "0.9.6") (d (list (d (n "anchor-client") (r "^0.24.2") (d #t) (k 2)) (d (n "anchor-lang") (r "^0.24.2") (d #t) (k 0)) (d (n "anchor-spl") (r "^0.24.2") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "so-defi-utils") (r "^0.1.1") (d #t) (k 0)) (d (n "solana-sdk") (r "^1.9.1") (d #t) (k 0)) (d (n "spl-token") (r "^3.2.0") (d #t) (k 0)) (d (n "static-pubkey") (r "^1.0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tulip-arrform") (r "^0.1.1") (d #t) (k 0)) (d (n "tulipv2-sdk-farms") (r "^0.9.6") (d #t) (k 0)) (d (n "uint") (r "^0.8") (d #t) (k 0)))) (h "0hhd5pgsd1i50b5cvcw5wqcpa142cnv7zansqll2aff2cbm7l6zw")))

(define-public crate-tulipv2-sdk-common-0.9.7 (c (n "tulipv2-sdk-common") (v "0.9.7") (d (list (d (n "anchor-client") (r "^0.24.2") (d #t) (k 2)) (d (n "anchor-lang") (r "^0.24.2") (d #t) (k 0)) (d (n "anchor-spl") (r "^0.24.2") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "so-defi-utils") (r "^0.1.1") (d #t) (k 0)) (d (n "solana-sdk") (r "^1.9.1") (d #t) (k 0)) (d (n "spl-associated-token-account") (r "^1.0.3") (d #t) (k 0)) (d (n "spl-token") (r "^3.2.0") (d #t) (k 0)) (d (n "static-pubkey") (r "^1.0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tulip-arrform") (r "^0.1.1") (d #t) (k 0)) (d (n "tulipv2-sdk-farms") (r "^0.9.7") (d #t) (k 0)) (d (n "uint") (r "^0.8") (d #t) (k 0)))) (h "0dx5frm8jh3420b7x610iksjsmnis27z51rivphnsi1kfhbmd8cc")))

(define-public crate-tulipv2-sdk-common-0.9.8 (c (n "tulipv2-sdk-common") (v "0.9.8") (d (list (d (n "anchor-client") (r "^0.24.2") (d #t) (k 2)) (d (n "anchor-lang") (r "^0.24.2") (d #t) (k 0)) (d (n "anchor-spl") (r "^0.24.2") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "so-defi-utils") (r "^0.1.1") (d #t) (k 0)) (d (n "solana-sdk") (r "^1.9.1") (d #t) (k 0)) (d (n "spl-associated-token-account") (r "^1.0.3") (d #t) (k 0)) (d (n "spl-token") (r "^3.2.0") (d #t) (k 0)) (d (n "static-pubkey") (r "^1.0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tulip-arrform") (r "^0.1.1") (d #t) (k 0)) (d (n "tulipv2-sdk-farms") (r "^0.9.8") (d #t) (k 0)) (d (n "uint") (r "^0.8") (d #t) (k 0)))) (h "1ml4knb54l1h7lxz4xkahmlmd2fd2wh2sz4gnfgwrlx1dw5fyf7b")))

(define-public crate-tulipv2-sdk-common-0.9.9 (c (n "tulipv2-sdk-common") (v "0.9.9") (d (list (d (n "anchor-client") (r "^0.24.2") (d #t) (k 2)) (d (n "anchor-lang") (r "^0.24.2") (d #t) (k 0)) (d (n "anchor-spl") (r "^0.24.2") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "sighashdb") (r "^0.1.26") (f (quote ("tulipv2"))) (k 0)) (d (n "so-defi-utils") (r "^0.1.1") (d #t) (k 0)) (d (n "solana-sdk") (r "^1.9.1") (d #t) (k 0)) (d (n "spl-associated-token-account") (r "^1.0.3") (d #t) (k 0)) (d (n "spl-token") (r "^3.2.0") (d #t) (k 0)) (d (n "static-pubkey") (r "^1.0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tulip-arrform") (r "^0.1.1") (d #t) (k 0)) (d (n "tulipv2-sdk-farms") (r "^0.9.9") (d #t) (k 0)) (d (n "uint") (r "^0.8") (d #t) (k 0)))) (h "0vqc7wk63gwwdpkpmlxpc2d18iq5h0hzx678lrgy5779j93z3gg6") (f (quote (("usdt-optimizer") ("usdc-optimizer") ("sol-optimizer") ("ray-optimizer") ("optimizers" "usdc-optimizer" "usdt-optimizer" "sol-optimizer" "ray-optimizer") ("logs") ("default" "optimizers" "logs"))))))

(define-public crate-tulipv2-sdk-common-0.9.10 (c (n "tulipv2-sdk-common") (v "0.9.10") (d (list (d (n "anchor-client") (r "^0.24.2") (d #t) (k 2)) (d (n "anchor-lang") (r "^0.24.2") (d #t) (k 0)) (d (n "anchor-spl") (r "^0.24.2") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "sighashdb") (r "^0.1.26") (f (quote ("tulipv2"))) (k 0)) (d (n "so-defi-utils") (r "^0.1.1") (d #t) (k 0)) (d (n "solana-program") (r "^1.9") (d #t) (k 0)) (d (n "spl-associated-token-account") (r "^1.0.3") (d #t) (k 0)) (d (n "spl-token") (r "^3.2.0") (d #t) (k 0)) (d (n "static-pubkey") (r "^1.0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tulip-arrform") (r "^0.1.1") (d #t) (k 0)) (d (n "tulipv2-sdk-farms") (r "^0.9.10") (d #t) (k 0)) (d (n "uint") (r "^0.8") (d #t) (k 0)))) (h "1p9wglvkqvkwv1hclnvkmqadsdrlrdcyph3i186jr8pvrhfx6wr3") (f (quote (("usdt-optimizer") ("usdc-optimizer") ("sol-optimizer") ("ray-optimizer") ("optimizers" "usdc-optimizer" "usdt-optimizer" "sol-optimizer" "ray-optimizer") ("logs") ("default" "optimizers" "logs"))))))

(define-public crate-tulipv2-sdk-common-0.9.11 (c (n "tulipv2-sdk-common") (v "0.9.11") (d (list (d (n "anchor-client") (r "^0.24.2") (d #t) (k 2)) (d (n "anchor-lang") (r "^0.24.2") (d #t) (k 0)) (d (n "anchor-spl") (r "^0.24.2") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "sighashdb") (r "^0.1.26") (f (quote ("tulipv2"))) (k 0)) (d (n "so-defi-utils") (r "^0.1.1") (d #t) (k 0)) (d (n "solana-program") (r "^1.9") (d #t) (k 0)) (d (n "spl-associated-token-account") (r "^1.0.3") (d #t) (k 0)) (d (n "spl-token") (r "^3.2.0") (d #t) (k 0)) (d (n "static-pubkey") (r "^1.0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tulip-arrform") (r "^0.1.1") (d #t) (k 0)) (d (n "tulipv2-sdk-farms") (r "^0.9.11") (d #t) (k 0)) (d (n "uint") (r "^0.8") (d #t) (k 0)))) (h "1iv6mdi2f7r0kc6falg34034y1846azjf643xw9pfjyg98qhl8rc") (f (quote (("usdt-optimizer") ("usdc-optimizer") ("sol-optimizer") ("ray-optimizer") ("optimizers" "usdc-optimizer" "usdt-optimizer" "sol-optimizer" "ray-optimizer") ("logs") ("default" "optimizers" "logs"))))))

(define-public crate-tulipv2-sdk-common-0.9.12 (c (n "tulipv2-sdk-common") (v "0.9.12") (d (list (d (n "anchor-client") (r "^0.24.2") (d #t) (k 2)) (d (n "anchor-lang") (r "^0.24.2") (d #t) (k 0)) (d (n "anchor-spl") (r "^0.24.2") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "sighashdb") (r "^0.1.26") (f (quote ("tulipv2"))) (k 0)) (d (n "so-defi-utils") (r "^0.1.1") (d #t) (k 0)) (d (n "solana-program") (r "^1.9.13") (d #t) (k 0)) (d (n "spl-associated-token-account") (r "^1.0.3") (d #t) (k 0)) (d (n "spl-token") (r "^3.2.0") (d #t) (k 0)) (d (n "static-pubkey") (r "^1.0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tulip-arrform") (r "^0.1.1") (d #t) (k 0)) (d (n "tulipv2-sdk-farms") (r "^0.9.12") (d #t) (k 0)) (d (n "uint") (r "^0.8") (d #t) (k 0)))) (h "12mhjfx5valqmsy70sv8bx9x8zppy0zr5bfrfi1dmfmj8x7c6qay") (f (quote (("usdt-optimizer") ("usdc-optimizer") ("sol-optimizer") ("ray-optimizer") ("optimizers" "usdc-optimizer" "usdt-optimizer" "sol-optimizer" "ray-optimizer") ("logs") ("default" "optimizers" "logs"))))))

(define-public crate-tulipv2-sdk-common-0.9.13 (c (n "tulipv2-sdk-common") (v "0.9.13") (d (list (d (n "anchor-client") (r "^0.24.2") (d #t) (k 2)) (d (n "anchor-lang") (r "^0.24.2") (d #t) (k 0)) (d (n "anchor-spl") (r "^0.24.2") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "sighashdb") (r "^0.1.26") (f (quote ("tulipv2"))) (k 0)) (d (n "so-defi-utils") (r "^0.1.1") (d #t) (k 0)) (d (n "solana-program") (r "^1.9.13") (d #t) (k 0)) (d (n "spl-associated-token-account") (r "^1.0.3") (d #t) (k 0)) (d (n "spl-token") (r "^3.2.0") (d #t) (k 0)) (d (n "static-pubkey") (r "^1.0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tulip-arrform") (r "^0.1.1") (d #t) (k 0)) (d (n "tulipv2-sdk-farms") (r "^0.9.12") (d #t) (k 0)) (d (n "uint") (r "^0.8") (d #t) (k 0)))) (h "19lnwxi9b1jyvmnfqvgrkx1yyh8kfv3hqlxhbl16jzs4smfzlhmv") (f (quote (("usdt-optimizer") ("usdc-optimizer") ("sol-optimizer") ("ray-optimizer") ("optimizers" "usdc-optimizer" "usdt-optimizer" "sol-optimizer" "ray-optimizer") ("logs") ("default" "optimizers" "logs"))))))

(define-public crate-tulipv2-sdk-common-0.9.14 (c (n "tulipv2-sdk-common") (v "0.9.14") (d (list (d (n "anchor-client") (r "^0.24.2") (d #t) (k 2)) (d (n "anchor-lang") (r "^0.24.2") (d #t) (k 0)) (d (n "anchor-spl") (r "^0.24.2") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "sighashdb") (r "^0.1.26") (d #t) (k 0)) (d (n "so-defi-utils") (r "^0.1.1") (d #t) (k 0)) (d (n "solana-program") (r "^1.9.13") (d #t) (k 0)) (d (n "spl-associated-token-account") (r "^1.0.3") (d #t) (k 0)) (d (n "spl-token") (r "^3.2.0") (d #t) (k 0)) (d (n "static-pubkey") (r "^1.0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tulip-arrform") (r "^0.1.1") (d #t) (k 0)) (d (n "tulipv2-sdk-farms") (r "^0.9.12") (d #t) (k 0)) (d (n "uint") (r "^0.8") (d #t) (k 0)))) (h "0igwgi10f44kvg5mqyivz6mqs0sv65kw7wa3dv2f2hjqnhr7q1d9") (f (quote (("usdt-optimizer") ("usdc-optimizer") ("sol-optimizer") ("ray-optimizer") ("optimizers" "usdc-optimizer" "usdt-optimizer" "sol-optimizer" "ray-optimizer") ("logs") ("default" "optimizers" "logs"))))))

(define-public crate-tulipv2-sdk-common-0.9.15 (c (n "tulipv2-sdk-common") (v "0.9.15") (d (list (d (n "anchor-client") (r "^0.24.2") (d #t) (k 2)) (d (n "anchor-lang") (r "^0.24.2") (d #t) (k 0)) (d (n "anchor-spl") (r "^0.24.2") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "sighashdb") (r "^0.1.27") (d #t) (k 0)) (d (n "so-defi-utils") (r "^0.1.1") (d #t) (k 0)) (d (n "solana-program") (r "^1.9.13") (d #t) (k 0)) (d (n "spl-associated-token-account") (r "^1.0.3") (d #t) (k 0)) (d (n "spl-token") (r "^3.2.0") (d #t) (k 0)) (d (n "static-pubkey") (r "^1.0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tulip-arrform") (r "^0.1.1") (d #t) (k 0)) (d (n "tulipv2-sdk-farms") (r "^0.9.12") (d #t) (k 0)) (d (n "uint") (r "^0.8") (d #t) (k 0)))) (h "13gs9a7yw95vidy5bn9mj7vz54xgs8yisp9ak2a7ca8g40d7022x") (f (quote (("usdt-optimizer") ("usdc-optimizer") ("sol-optimizer") ("ray-optimizer") ("optimizers" "usdc-optimizer" "usdt-optimizer" "sol-optimizer" "ray-optimizer") ("logs") ("default" "optimizers" "logs"))))))

(define-public crate-tulipv2-sdk-common-0.9.16 (c (n "tulipv2-sdk-common") (v "0.9.16") (d (list (d (n "anchor-client") (r "^0.24.2") (d #t) (k 2)) (d (n "anchor-lang") (r "^0.24.2") (d #t) (k 0)) (d (n "anchor-spl") (r "^0.24.2") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "sighashdb") (r "^0.1.27") (d #t) (k 0)) (d (n "so-defi-utils") (r "^0.1.1") (d #t) (k 0)) (d (n "solana-program") (r "^1.9.13") (d #t) (k 0)) (d (n "spl-associated-token-account") (r "^1.0.3") (d #t) (k 0)) (d (n "spl-token") (r "^3.2.0") (d #t) (k 0)) (d (n "static-pubkey") (r "^1.0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tulip-arrform") (r "^0.1.1") (d #t) (k 0)) (d (n "tulipv2-sdk-farms") (r "^0.9.16") (d #t) (k 0)) (d (n "uint") (r "^0.8") (d #t) (k 0)))) (h "06y9z2pkxb8azjk8rc6kj2fq5kj6wgi89indf86q30s0hjff6hq4") (f (quote (("usdt-optimizer") ("usdc-optimizer") ("sol-optimizer") ("ray-optimizer") ("logs") ("default" "usdc-optimizer" "usdt-optimizer" "sol-optimizer" "ray-optimizer" "logs"))))))

(define-public crate-tulipv2-sdk-common-0.9.17 (c (n "tulipv2-sdk-common") (v "0.9.17") (d (list (d (n "anchor-client") (r "^0.24.2") (d #t) (k 2)) (d (n "anchor-lang") (r "^0.24.2") (d #t) (k 0)) (d (n "anchor-spl") (r "^0.24.2") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "sighashdb") (r "^0.1.28") (d #t) (k 0)) (d (n "so-defi-utils") (r "^0.1.0") (d #t) (k 0)) (d (n "solana-program") (r "^1.9.13") (d #t) (k 0)) (d (n "spl-associated-token-account") (r "^1.0.3") (d #t) (k 0)) (d (n "spl-token") (r "^3.2.0") (d #t) (k 0)) (d (n "static-pubkey") (r "^1.0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tulip-arrform") (r "^0.1.1") (d #t) (k 0)) (d (n "tulipv2-sdk-farms") (r "^0.9.17") (d #t) (k 0)) (d (n "uint") (r "^0.8") (d #t) (k 0)))) (h "15xhl44s12rfdh98nwaqzqh1b6j8bi0c6if6gnn1f9wiqd78y1ll") (f (quote (("usdt-optimizer") ("usdc-optimizer") ("sol-optimizer") ("ray-optimizer") ("logs") ("default" "usdc-optimizer" "usdt-optimizer" "sol-optimizer" "ray-optimizer"))))))

(define-public crate-tulipv2-sdk-common-0.9.18 (c (n "tulipv2-sdk-common") (v "0.9.18") (d (list (d (n "anchor-client") (r "^0.24.2") (d #t) (k 2)) (d (n "anchor-lang") (r "^0.24.2") (d #t) (k 0)) (d (n "anchor-spl") (r "^0.24.2") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "sighashdb") (r "^0.1.28") (d #t) (k 0)) (d (n "so-defi-utils") (r "^0.1.0") (d #t) (k 0)) (d (n "solana-program") (r "^1.9.13") (d #t) (k 0)) (d (n "spl-associated-token-account") (r "^1.0.3") (d #t) (k 0)) (d (n "spl-token") (r "^3.2.0") (d #t) (k 0)) (d (n "static-pubkey") (r "^1.0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tulip-arrform") (r "^0.1.1") (d #t) (k 0)) (d (n "tulipv2-sdk-farms") (r "^0.9.17") (d #t) (k 0)) (d (n "uint") (r "^0.8") (d #t) (k 0)))) (h "01awf5p1m5l3j3fzng3l8554xhkzh8y6zgnlrv8kv779rnbh1apn") (f (quote (("usdt-optimizer") ("usdc-optimizer") ("sol-optimizer") ("rayusdc-levfarm") ("ray-optimizer") ("logs") ("levfarm") ("default" "usdc-optimizer" "usdt-optimizer" "sol-optimizer" "ray-optimizer" "levfarm" "rayusdc-levfarm"))))))

(define-public crate-tulipv2-sdk-common-0.9.19 (c (n "tulipv2-sdk-common") (v "0.9.19") (d (list (d (n "anchor-client") (r "^0.24.2") (d #t) (k 2)) (d (n "anchor-lang") (r "^0.24.2") (d #t) (k 0)) (d (n "anchor-spl") (r "^0.24.2") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "sighashdb") (r "^0.1.33") (d #t) (k 0)) (d (n "so-defi-utils") (r "^0.1.0") (d #t) (k 0)) (d (n "solana-program") (r "^1.9.13") (d #t) (k 0)) (d (n "spl-associated-token-account") (r "^1.0.3") (d #t) (k 0)) (d (n "spl-token") (r "^3.2.0") (d #t) (k 0)) (d (n "static-pubkey") (r "^1.0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tulip-arrform") (r "^0.1.1") (d #t) (k 0)) (d (n "tulipv2-sdk-farms") (r "^0.9.19") (d #t) (k 0)) (d (n "uint") (r "^0.8") (d #t) (k 0)))) (h "11pam4rwmjjv5i2fjk6pi096a8g3h0v5wnjbx7dgc3a11dc8f7ix") (f (quote (("usdt-optimizer") ("usdc-optimizer") ("sol-optimizer") ("ray-optimizer") ("logs") ("default" "usdc-optimizer" "usdt-optimizer" "sol-optimizer" "ray-optimizer"))))))

(define-public crate-tulipv2-sdk-common-0.9.20 (c (n "tulipv2-sdk-common") (v "0.9.20") (d (list (d (n "anchor-client") (r "^0.24.2") (d #t) (k 2)) (d (n "anchor-lang") (r "^0.24.2") (d #t) (k 0)) (d (n "anchor-spl") (r "^0.24.2") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "sighashdb") (r "^0.1.33") (d #t) (k 0)) (d (n "so-defi-utils") (r "^0.1.0") (d #t) (k 0)) (d (n "solana-program") (r "^1.9.13") (d #t) (k 0)) (d (n "spl-associated-token-account") (r "^1.0.3") (d #t) (k 0)) (d (n "spl-token") (r "^3.2.0") (d #t) (k 0)) (d (n "static-pubkey") (r "^1.0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tulip-arrform") (r "^0.1.1") (d #t) (k 0)) (d (n "tulipv2-sdk-farms") (r "^0.9.19") (d #t) (k 0)) (d (n "uint") (r "^0.8") (d #t) (k 0)))) (h "0h1cy7150q3d9pm5cgipf12cb9csshzvahn3hsbpb74gx0ibkzic") (f (quote (("usdt-optimizer") ("usdc-optimizer") ("sol-optimizer") ("ray-optimizer") ("logs") ("default" "usdc-optimizer" "usdt-optimizer" "sol-optimizer" "ray-optimizer"))))))

(define-public crate-tulipv2-sdk-common-0.9.21 (c (n "tulipv2-sdk-common") (v "0.9.21") (d (list (d (n "anchor-client") (r "^0.24.2") (d #t) (k 2)) (d (n "anchor-lang") (r "^0.24.2") (d #t) (k 0)) (d (n "anchor-spl") (r "^0.24.2") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "sighashdb") (r "^0.1.33") (d #t) (k 0)) (d (n "so-defi-utils") (r "^0.1.0") (d #t) (k 0)) (d (n "solana-program") (r "^1.9.13") (d #t) (k 0)) (d (n "spl-associated-token-account") (r "^1.0.3") (d #t) (k 0)) (d (n "spl-token") (r "^3.2.0") (d #t) (k 0)) (d (n "static-pubkey") (r "^1.0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tulip-arrform") (r "^0.1.1") (d #t) (k 0)) (d (n "tulipv2-sdk-farms") (r "^0.9.21") (d #t) (k 0)) (d (n "uint") (r "^0.8") (d #t) (k 0)))) (h "0hpnp3mvhzmr8i3szc7f0ibcrjngzn3cf7n7pm91kyk5skqcgy8z") (f (quote (("usdt-optimizer") ("usdc-optimizer") ("sol-optimizer") ("ray-whethusdc-levfarm") ("ray-whethsol-levfarm") ("ray-walephusdc-levfarm") ("ray-stsolusdt-levfarm") ("ray-stsolusdc-levfarm") ("ray-starsusdc-levfarm") ("ray-solusdt-levfarm") ("ray-solusdcray-levfarm") ("ray-solusdc-levfarm") ("ray-slclusdc-levfarm") ("ray-samoray-levfarm") ("ray-realusdc-levfarm") ("ray-raywheth-levfarm") ("ray-rayusdt-levfarm") ("ray-rayusdc-levfarm") ("ray-raysrm-levfarm") ("ray-raysol-levfarm") ("ray-rayeth-levfarm") ("ray-prismusdc-levfarm") ("ray-polisray-levfarm") ("ray-optimizer") ("ray-msolusdt-levfarm") ("ray-msolusdc-levfarm") ("ray-mbsusdc-levfarm") ("ray-likeusdc-levfarm") ("ray-geneusdc-levfarm") ("ray-generay-levfarm") ("ray-ethstsol-levfarm") ("ray-dflusdc-levfarm") ("ray-btcstsol-levfarm") ("ray-atlasray-levfarm") ("orca-whethusdc-levfarm") ("orca-whethsol-levfarm") ("orca-stsolusdc-levfarm") ("orca-solusdt-levfarm") ("orca-solusdc-levfarm") ("orca-shdwusdc-levfarm") ("orca-shdwsol-levfarm") ("orca-samousdc-levfarm") ("orca-polisusdc-levfarm") ("orca-orcausdc-levfarm") ("orca-orcasol-levfarm") ("orca-gstusdc-levfarm") ("orca-gmtusdc-levfarm") ("orca-basisusdc-levfarm") ("orca-atlasusdc-levfarm") ("logs") ("levfarm") ("default" "usdc-optimizer" "usdt-optimizer" "sol-optimizer" "ray-optimizer" "levfarm" "orca-orcausdc-levfarm" "orca-solusdc-levfarm" "orca-gmtusdc-levfarm" "orca-solusdt-levfarm" "orca-shdwusdc-levfarm" "orca-atlasusdc-levfarm" "orca-orcasol-levfarm" "orca-polisusdc-levfarm" "orca-samousdc-levfarm" "orca-basisusdc-levfarm" "orca-whethusdc-levfarm" "orca-stsolusdc-levfarm" "orca-whethsol-levfarm" "orca-gstusdc-levfarm" "orca-shdwsol-levfarm" "ray-rayusdc-levfarm" "ray-solusdcray-levfarm" "ray-solusdt-levfarm" "ray-geneusdc-levfarm" "ray-raysol-levfarm" "ray-generay-levfarm" "ray-walephusdc-levfarm" "ray-dflusdc-levfarm" "ray-samoray-levfarm" "ray-whethsol-levfarm" "ray-raywheth-levfarm" "ray-rayusdt-levfarm" "ray-stsolusdc-levfarm" "ray-msolusdc-levfarm" "ray-atlasray-levfarm" "ray-stsolusdt-levfarm" "ray-whethusdc-levfarm" "ray-rayeth-levfarm" "ray-polisray-levfarm" "ray-likeusdc-levfarm" "ray-realusdc-levfarm" "ray-mbsusdc-levfarm" "ray-ethstsol-levfarm" "ray-slclusdc-levfarm" "ray-btcstsol-levfarm" "ray-msolusdt-levfarm" "ray-starsusdc-levfarm" "ray-prismusdc-levfarm" "ray-raysrm-levfarm" "ray-solusdc-levfarm"))))))

(define-public crate-tulipv2-sdk-common-0.9.22 (c (n "tulipv2-sdk-common") (v "0.9.22") (d (list (d (n "anchor-client") (r "^0.24.2") (d #t) (k 2)) (d (n "anchor-lang") (r "^0.24.2") (d #t) (k 0)) (d (n "anchor-spl") (r "^0.24.2") (d #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "sighashdb") (r "^0.1.37") (d #t) (k 0)) (d (n "so-defi-utils") (r "^0.1.0") (d #t) (k 0)) (d (n "solana-program") (r "^1.9.13") (d #t) (k 0)) (d (n "spl-associated-token-account") (r "^1.0.3") (d #t) (k 0)) (d (n "spl-token") (r "^3.2.0") (d #t) (k 0)) (d (n "static-pubkey") (r "^1.0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tulip-arrform") (r "^0.1.1") (d #t) (k 0)) (d (n "tulipv2-sdk-farms") (r "^0.9.21") (d #t) (k 0)) (d (n "uint") (r "^0.8") (d #t) (k 0)))) (h "1nqn9ac8r8xrxmh4q36ghlyqrqhll0zd0wd8r5if44h2rfv7r3d3") (f (quote (("usdt-optimizer") ("usdc-optimizer") ("sol-optimizer") ("ray-whethusdc-levfarm") ("ray-whethsol-levfarm") ("ray-walephusdc-levfarm") ("ray-stsolusdt-levfarm") ("ray-stsolusdc-levfarm") ("ray-starsusdc-levfarm") ("ray-solusdt-levfarm") ("ray-solusdcray-levfarm") ("ray-solusdc-levfarm") ("ray-slclusdc-levfarm") ("ray-samoray-levfarm") ("ray-realusdc-levfarm") ("ray-raywheth-levfarm") ("ray-rayusdt-levfarm") ("ray-rayusdc-levfarm") ("ray-raysrm-levfarm") ("ray-raysol-levfarm") ("ray-rayeth-levfarm") ("ray-prismusdc-levfarm") ("ray-polisray-levfarm") ("ray-optimizer") ("ray-msolusdt-levfarm") ("ray-msolusdc-levfarm") ("ray-mbsusdc-levfarm") ("ray-likeusdc-levfarm") ("ray-geneusdc-levfarm") ("ray-generay-levfarm") ("ray-ethstsol-levfarm") ("ray-dflusdc-levfarm") ("ray-btcstsol-levfarm") ("ray-atlasray-levfarm") ("orca-whethusdc-levfarm") ("orca-whethsol-levfarm") ("orca-stsolusdc-levfarm") ("orca-solusdt-levfarm") ("orca-solusdc-levfarm") ("orca-shdwusdc-levfarm") ("orca-shdwsol-levfarm") ("orca-samousdc-levfarm") ("orca-polisusdc-levfarm") ("orca-orcausdc-levfarm") ("orca-orcasol-levfarm") ("orca-gstusdc-levfarm") ("orca-gmtusdc-levfarm") ("orca-basisusdc-levfarm") ("orca-atlasusdc-levfarm") ("logs") ("levfarm") ("default" "usdc-optimizer" "usdt-optimizer" "sol-optimizer" "ray-optimizer" "levfarm" "orca-orcausdc-levfarm" "orca-solusdc-levfarm" "orca-gmtusdc-levfarm" "orca-solusdt-levfarm" "orca-shdwusdc-levfarm" "orca-atlasusdc-levfarm" "orca-orcasol-levfarm" "orca-polisusdc-levfarm" "orca-samousdc-levfarm" "orca-basisusdc-levfarm" "orca-whethusdc-levfarm" "orca-stsolusdc-levfarm" "orca-whethsol-levfarm" "orca-gstusdc-levfarm" "orca-shdwsol-levfarm" "ray-rayusdc-levfarm" "ray-solusdcray-levfarm" "ray-solusdt-levfarm" "ray-geneusdc-levfarm" "ray-raysol-levfarm" "ray-generay-levfarm" "ray-walephusdc-levfarm" "ray-dflusdc-levfarm" "ray-samoray-levfarm" "ray-whethsol-levfarm" "ray-raywheth-levfarm" "ray-rayusdt-levfarm" "ray-stsolusdc-levfarm" "ray-msolusdc-levfarm" "ray-atlasray-levfarm" "ray-stsolusdt-levfarm" "ray-whethusdc-levfarm" "ray-rayeth-levfarm" "ray-polisray-levfarm" "ray-likeusdc-levfarm" "ray-realusdc-levfarm" "ray-mbsusdc-levfarm" "ray-ethstsol-levfarm" "ray-slclusdc-levfarm" "ray-btcstsol-levfarm" "ray-msolusdt-levfarm" "ray-starsusdc-levfarm" "ray-prismusdc-levfarm" "ray-raysrm-levfarm" "ray-solusdc-levfarm"))))))

