(define-module (crates-io qv nt qvnt) #:use-module (crates-io))

(define-public crate-qvnt-0.1.0 (c (n "qvnt") (v "0.1.0") (d (list (d (n "float-cmp") (r "^0.8") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)))) (h "1q9kinrg9y3v2j4gpzalqfl2qwn878k3zrdfw5ywg4klam603j8i")))

(define-public crate-qvnt-0.1.1 (c (n "qvnt") (v "0.1.1") (d (list (d (n "float-cmp") (r "^0.8") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)))) (h "0wgp1iy92yxjrxrdg33nnhm4y1w430rahcbc1qq4a821v1d1hfkf")))

(define-public crate-qvnt-0.1.2 (c (n "qvnt") (v "0.1.2") (d (list (d (n "float-cmp") (r "^0.8") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)))) (h "1scfwdsmak2ffsg4hgd2k5jjzvmvglksysn5yh93fwxw236pxvdx")))

(define-public crate-qvnt-0.2.0 (c (n "qvnt") (v "0.2.0") (d (list (d (n "float-cmp") (r "^0.8") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)))) (h "0gh9cqyg9ygqfzs7ms9qc28i5l7n2c06xa19mq6ly2psn6ld3zxa")))

(define-public crate-qvnt-0.3.0 (c (n "qvnt") (v "0.3.0") (d (list (d (n "float-cmp") (r "^0.8") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)))) (h "1bck6sxr0nvbmp95yf29b9zzz4mmvaphqyany6xgfdck6d54gfz1")))

(define-public crate-qvnt-0.3.1 (c (n "qvnt") (v "0.3.1") (d (list (d (n "float-cmp") (r "^0.8") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)))) (h "11adhvx5zk17590jh3wff3648a7zy8l23yismzmxb0x31i0f55gs")))

(define-public crate-qvnt-0.3.2 (c (n "qvnt") (v "0.3.2") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 0)) (d (n "float-cmp") (r "^0.8") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)))) (h "0yv2df74rfm9i8pivy5h8ghr9fq1837rxcmxc9q4c9wr3f0izh9c")))

(define-public crate-qvnt-0.3.3 (c (n "qvnt") (v "0.3.3") (d (list (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "enum_dispatch") (r "^0.3.8") (d #t) (k 0)) (d (n "float-cmp") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (o #t) (d #t) (k 0)))) (h "1cxn3l9n82rxrwxmqid04pj4nsp5rxndwh30qv515j9jac8n108y") (f (quote (("default") ("cpu" "rayon" "lazy_static"))))))

(define-public crate-qvnt-0.4.0 (c (n "qvnt") (v "0.4.0") (d (list (d (n "clap") (r "^3.1.8") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "enum_dispatch") (r "^0.3.8") (d #t) (k 0)) (d (n "float-cmp") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "meval") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "qasm") (r "^0.2.0") (f (quote ("no-check-ver"))) (o #t) (d #t) (k 0) (p "qvnt-qasm")) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (o #t) (d #t) (k 0)) (d (n "rustyline") (r "^9.1.2") (o #t) (d #t) (k 0)))) (h "105w189j894rapa035y0irb40ghkfmnrvs959lq3ja83d04vziia") (f (quote (("interpreter" "qasm" "meval") ("default") ("cpu" "rayon" "lazy_static") ("cli" "interpreter" "cpu" "clap" "rustyline"))))))

(define-public crate-qvnt-0.4.1 (c (n "qvnt") (v "0.4.1") (d (list (d (n "clap") (r "^3.1.8") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "enum_dispatch") (r "^0.3.8") (d #t) (k 0)) (d (n "float-cmp") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "meval") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "qasm") (r "^0.2.0") (f (quote ("no-check-ver"))) (o #t) (d #t) (k 0) (p "qvnt-qasm")) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (o #t) (d #t) (k 0)) (d (n "rustyline") (r "^9.1.2") (o #t) (d #t) (k 0)))) (h "09zk8jdy97z26482zqc2i69w172kjm6snyw3lmsdjdfmwf2r2gzj") (f (quote (("interpreter" "qasm" "meval") ("default") ("cpu" "rayon" "lazy_static") ("cli" "interpreter" "cpu" "clap" "rustyline"))))))

(define-public crate-qvnt-0.4.2 (c (n "qvnt") (v "0.4.2") (d (list (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "dispatch") (r "^0.3.8") (d #t) (k 0) (p "enum_dispatch")) (d (n "float-cmp") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "meval") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "qasm") (r "^0.2.0") (f (quote ("no-check-ver"))) (o #t) (d #t) (k 0) (p "qvnt-qasm")) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (o #t) (d #t) (k 0)))) (h "14v2ggp5d02shxf7142hm0n8hvf2pfzzlvc8placbghaa744w7ss") (f (quote (("interpreter" "qasm" "meval") ("default") ("cpu" "rayon" "lazy_static"))))))

(define-public crate-qvnt-0.4.3 (c (n "qvnt") (v "0.4.3") (d (list (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "dispatch") (r "^0.3.8") (d #t) (k 0) (p "enum_dispatch")) (d (n "float-cmp") (r "^0.8.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "meval") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "qasm") (r "^0.2.0") (f (quote ("no-check-ver"))) (o #t) (d #t) (k 0) (p "qvnt-qasm")) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (o #t) (d #t) (k 0)) (d (n "test-case") (r "^2.2.1") (d #t) (k 2)))) (h "13h1z6z3r38jfy1c5a22znxvp501kjzs2i3n90n41kkbnvwdmx44") (f (quote (("multi-thread" "rayon" "lazy_static") ("interpreter" "qasm" "meval") ("default") ("cpu" "multi-thread"))))))

(define-public crate-qvnt-0.4.4 (c (n "qvnt") (v "0.4.4") (d (list (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "dispatch") (r "^0.3.8") (d #t) (k 0) (p "enum_dispatch")) (d (n "float-cmp") (r "^0.8.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "meval") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "qasm") (r "^0.2.0") (f (quote ("no-check-ver"))) (o #t) (d #t) (k 0) (p "qvnt-qasm")) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (o #t) (d #t) (k 0)) (d (n "test-case") (r "^2.2.1") (d #t) (k 2)))) (h "1d8i8najjbfnl58azvm7n9dqxavk6w4g62zmliagn9f14n5g140a") (f (quote (("multi-thread" "rayon" "lazy_static") ("interpreter" "qasm" "meval") ("default"))))))

(define-public crate-qvnt-0.5.0-alpha (c (n "qvnt") (v "0.5.0-alpha") (d (list (d (n "criterion") (r "^0.4.0") (k 2)) (d (n "enum_dispatch") (r "^0.3.8") (d #t) (k 0)) (d (n "float-cmp") (r "^0.9.0") (d #t) (k 0)) (d (n "meval") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "num-complex") (r "^0.4.2") (d #t) (k 0)) (d (n "qasm") (r "^0.2.0") (f (quote ("no-check-ver"))) (o #t) (d #t) (k 0) (p "qvnt-qasm")) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 0)) (d (n "rayon") (r "^1.6.0") (o #t) (d #t) (k 0)) (d (n "test-case") (r "^2.2.1") (d #t) (k 2)))) (h "0v2mj65dr2d0qc04yj0504f0z0bs138w4l478zmw3ncldhd4fcvd") (f (quote (("multi-thread" "rayon" "criterion/rayon") ("interpreter" "qasm" "meval") ("default"))))))

