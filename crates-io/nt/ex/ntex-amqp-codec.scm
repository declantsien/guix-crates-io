(define-module (crates-io nt ex ntex-amqp-codec) #:use-module (crates-io))

(define-public crate-ntex-amqp-codec-0.1.0 (c (n "ntex-amqp-codec") (v "0.1.0") (d (list (d (n "byteorder") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "bytestring") (r "^0.1.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.5") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "handlebars") (r "^0.27") (o #t) (d #t) (k 1)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "ntex-codec") (r "^0.1.0") (d #t) (k 0)) (d (n "ordered-float") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.3") (o #t) (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "1isaad6vvcl947jpv803jf5ijzcz651ygpm632nakklxx947kl1b") (f (quote (("from-spec" "handlebars" "serde" "serde_derive" "serde_json" "lazy_static" "regex") ("default"))))))

(define-public crate-ntex-amqp-codec-0.1.1 (c (n "ntex-amqp-codec") (v "0.1.1") (d (list (d (n "byteorder") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "bytestring") (r "^0.1.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.5") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "handlebars") (r "^0.27") (o #t) (d #t) (k 1)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "ntex-codec") (r "^0.1.2") (d #t) (k 0)) (d (n "ordered-float") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.3") (o #t) (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "0pi7cm24f0a55xiv51xma6835y3jcl18g75w9jlrnq0yfnxx5jgv") (f (quote (("from-spec" "handlebars" "serde" "serde_derive" "serde_json" "lazy_static" "regex") ("default"))))))

(define-public crate-ntex-amqp-codec-0.1.2 (c (n "ntex-amqp-codec") (v "0.1.2") (d (list (d (n "byteorder") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "bytestring") (r "^0.1.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.5") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "handlebars") (r "^0.27") (o #t) (d #t) (k 1)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "ntex-codec") (r "^0.1.2") (d #t) (k 0)) (d (n "ordered-float") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.3") (o #t) (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "081vxljaa1xd4r0fibsy81kxydagn8g2ddf5dwkl2yl8w406s8k3") (f (quote (("from-spec" "handlebars" "serde" "serde_derive" "serde_json" "lazy_static" "regex") ("default"))))))

(define-public crate-ntex-amqp-codec-0.1.3 (c (n "ntex-amqp-codec") (v "0.1.3") (d (list (d (n "byteorder") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "bytestring") (r "^0.1.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.5") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "handlebars") (r "^0.27") (o #t) (d #t) (k 1)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "ntex-codec") (r "^0.1.2") (d #t) (k 0)) (d (n "ordered-float") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.3") (o #t) (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "1n1l77lal7xmngb27sxz20gi9kmhglfxkh3589swy2bky6dpvwnz") (f (quote (("from-spec" "handlebars" "serde" "serde_derive" "serde_json" "lazy_static" "regex") ("default"))))))

(define-public crate-ntex-amqp-codec-0.1.4 (c (n "ntex-amqp-codec") (v "0.1.4") (d (list (d (n "byteorder") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "bytestring") (r "^0.1.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.5") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "handlebars") (r "^0.27") (o #t) (d #t) (k 1)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "ntex-codec") (r "^0.1.2") (d #t) (k 0)) (d (n "ordered-float") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.3") (o #t) (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "01gpxlngyngnjypjkk55shjficpn6rg0855aqyyjg1y181mvfg7i") (f (quote (("from-spec" "handlebars" "serde" "serde_derive" "serde_json" "lazy_static" "regex") ("default"))))))

(define-public crate-ntex-amqp-codec-0.1.5 (c (n "ntex-amqp-codec") (v "0.1.5") (d (list (d (n "byteorder") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "bytestring") (r "^0.1.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.5") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "handlebars") (r "^0.27") (o #t) (d #t) (k 1)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "ntex-codec") (r "^0.1.2") (d #t) (k 0)) (d (n "ordered-float") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.3") (o #t) (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "1s0pbdyiwrgwhdxzbkwc7bvp2zxvr51pmbxrrww0k50m1xa46ph7") (f (quote (("from-spec" "handlebars" "serde" "serde_derive" "serde_json" "lazy_static" "regex") ("default"))))))

(define-public crate-ntex-amqp-codec-0.1.6 (c (n "ntex-amqp-codec") (v "0.1.6") (d (list (d (n "byteorder") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "bytestring") (r "^0.1.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.5") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "handlebars") (r "^0.27") (o #t) (d #t) (k 1)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "ntex-codec") (r "^0.1.2") (d #t) (k 0)) (d (n "ordered-float") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.3") (o #t) (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "03cihgag0h5v6y9xc4l9v2ihm9rn4m8qfg0s473an2x2mim2ishj") (f (quote (("from-spec" "handlebars" "serde" "serde_derive" "serde_json" "lazy_static" "regex") ("default"))))))

(define-public crate-ntex-amqp-codec-0.2.0 (c (n "ntex-amqp-codec") (v "0.2.0") (d (list (d (n "byteorder") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "bytestring") (r "^0.1.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.5") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "handlebars") (r "^0.27") (o #t) (d #t) (k 1)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "ntex-codec") (r "^0.1.2") (d #t) (k 0)) (d (n "ordered-float") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.3") (o #t) (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "1pcail8a661lfxlrk2hbgl91k14xps7kn3xbvvwwqph1db92w1sp") (f (quote (("from-spec" "handlebars" "serde" "serde_derive" "serde_json" "lazy_static" "regex") ("default"))))))

(define-public crate-ntex-amqp-codec-0.2.1 (c (n "ntex-amqp-codec") (v "0.2.1") (d (list (d (n "byteorder") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "bytestring") (r "^0.1.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.5") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "handlebars") (r "^0.27") (o #t) (d #t) (k 1)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "ntex-codec") (r "^0.1.2") (d #t) (k 0)) (d (n "ordered-float") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.3") (o #t) (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "16vbpicq29gfn9a5wlq8qpd7sb6qkk7lkxqgcrp2c5dcqfihargm") (f (quote (("from-spec" "handlebars" "serde" "serde_derive" "serde_json" "lazy_static" "regex") ("default"))))))

(define-public crate-ntex-amqp-codec-0.3.0 (c (n "ntex-amqp-codec") (v "0.3.0") (d (list (d (n "ahash") (r "^0.6.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "bytestring") (r "^0.1.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.5") (d #t) (k 0)) (d (n "handlebars") (r "^0.27") (o #t) (d #t) (k 1)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "ntex-codec") (r "^0.2.1") (d #t) (k 0)) (d (n "ordered-float") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.3") (o #t) (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "0ldn50yj29v0gpi6yhhj37zky8k6j9car3amil1hff7g903qz3ir") (f (quote (("from-spec" "handlebars" "serde" "serde_derive" "serde_json" "lazy_static" "regex") ("default"))))))

(define-public crate-ntex-amqp-codec-0.3.1 (c (n "ntex-amqp-codec") (v "0.3.1") (d (list (d (n "ahash") (r "^0.6.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "bytestring") (r "^0.1.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.5") (d #t) (k 0)) (d (n "handlebars") (r "^0.27") (o #t) (d #t) (k 1)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "ntex-codec") (r "^0.2.1") (d #t) (k 0)) (d (n "ordered-float") (r "^2.0.1") (d #t) (k 0)) (d (n "regex") (r "^1.3") (o #t) (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "09mma8mac6lgfhgf72vwivvfqzl6876k40fl5xmkg61k1wyl9q6z") (f (quote (("from-spec" "handlebars" "serde" "serde_derive" "serde_json" "lazy_static" "regex") ("default"))))))

(define-public crate-ntex-amqp-codec-0.4.0-b.1 (c (n "ntex-amqp-codec") (v "0.4.0-b.1") (d (list (d (n "ahash") (r "^0.6.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "bytestring") (r "^0.1.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.5") (d #t) (k 0)) (d (n "handlebars") (r "^0.27") (o #t) (d #t) (k 1)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "ntex-codec") (r "^0.3.0-b.1") (d #t) (k 0)) (d (n "ordered-float") (r "^2.0.1") (d #t) (k 0)) (d (n "regex") (r "^1.3") (o #t) (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "0y3n5n18sqgzh6dfwa5i8ff9hcflzilfng5ng94vmyf4qr55snjc") (f (quote (("from-spec" "handlebars" "serde" "serde_derive" "serde_json" "lazy_static" "regex") ("default"))))))

(define-public crate-ntex-amqp-codec-0.4.0 (c (n "ntex-amqp-codec") (v "0.4.0") (d (list (d (n "ahash") (r "^0.7.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "bytestring") (r "^0.1.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.5") (d #t) (k 0)) (d (n "handlebars") (r "^0.27") (o #t) (d #t) (k 1)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "ntex-codec") (r "^0.3.0") (d #t) (k 0)) (d (n "ordered-float") (r "^2.0.1") (d #t) (k 0)) (d (n "regex") (r "^1.3") (o #t) (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "13akay6q1z9a3fab7s6k20npwpw68dx25vy0brsq6xa8j2x4xy57") (f (quote (("from-spec" "handlebars" "serde" "serde_derive" "serde_json" "lazy_static" "regex") ("default"))))))

(define-public crate-ntex-amqp-codec-0.5.0 (c (n "ntex-amqp-codec") (v "0.5.0") (d (list (d (n "ahash") (r "^0.7.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.1") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "bytestring") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "handlebars") (r "^0.27") (o #t) (d #t) (k 1)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "ntex-codec") (r "^0.4.0") (d #t) (k 0)) (d (n "ordered-float") (r "^2.0.1") (d #t) (k 0)) (d (n "regex") (r "^1.3") (o #t) (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "1jnn1mmdv9m80gl3z8jrsvjk1vjlcf0x1lvkg058wm503hyl4lbh") (f (quote (("from-spec" "handlebars" "serde" "serde_derive" "serde_json" "lazy_static" "regex") ("default"))))))

(define-public crate-ntex-amqp-codec-0.5.1 (c (n "ntex-amqp-codec") (v "0.5.1") (d (list (d (n "ahash") (r "^0.7.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "bytestring") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "handlebars") (r "^0.27") (o #t) (d #t) (k 1)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "ntex-codec") (r "^0.4.1") (d #t) (k 0)) (d (n "ordered-float") (r "^2.0.1") (d #t) (k 0)) (d (n "regex") (r "^1.4") (o #t) (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "0d8j05iq785hsgz8cj56frl619bn5njq4ipr6lwsnnk238kjglyf") (f (quote (("from-spec" "handlebars" "serde" "serde_derive" "serde_json" "lazy_static" "regex") ("default"))))))

(define-public crate-ntex-amqp-codec-0.6.0 (c (n "ntex-amqp-codec") (v "0.6.0") (d (list (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "handlebars") (r "^0.27") (o #t) (d #t) (k 1)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "ntex-bytes") (r "^0.1") (d #t) (k 0)) (d (n "ntex-codec") (r "^0.5") (d #t) (k 0)) (d (n "ordered-float") (r "^2.5") (d #t) (k 0)) (d (n "regex") (r "^1.4") (o #t) (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "06zgv6r7y8f99gv5822qvq9q5hlgd2m1qzzvg0j7z2752s22sq71") (f (quote (("from-spec" "handlebars" "serde" "serde_derive" "serde_json" "lazy_static" "regex") ("default"))))))

(define-public crate-ntex-amqp-codec-0.6.1 (c (n "ntex-amqp-codec") (v "0.6.1") (d (list (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "handlebars") (r "^0.27") (o #t) (d #t) (k 1)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "ntex-bytes") (r "^0.1") (d #t) (k 0)) (d (n "ntex-codec") (r "^0.5") (d #t) (k 0)) (d (n "ordered-float") (r "^2.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "0n50y3hyvmbkmk9ccgp5wrkjn8bfir9k88brnp4a99pbrhfhfdmg") (f (quote (("from-spec" "handlebars" "serde" "serde_derive" "serde_json" "lazy_static" "regex") ("default"))))))

(define-public crate-ntex-amqp-codec-0.6.2 (c (n "ntex-amqp-codec") (v "0.6.2") (d (list (d (n "ahash") (r "^0.7.4") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "handlebars") (r "^0.27") (o #t) (d #t) (k 1)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "ntex-bytes") (r "^0.1") (d #t) (k 0)) (d (n "ntex-codec") (r "^0.5") (d #t) (k 0)) (d (n "ordered-float") (r "^2.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "1hgwx68nsx3lpk9hv211jzah3pb7iflg6hp16ga3gmjm5xa6wdpb") (f (quote (("from-spec" "handlebars" "serde" "serde_derive" "serde_json" "lazy_static" "regex") ("default"))))))

(define-public crate-ntex-amqp-codec-0.7.0 (c (n "ntex-amqp-codec") (v "0.7.0") (d (list (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "handlebars") (r "^0.27") (o #t) (d #t) (k 1)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "ntex-bytes") (r "^0.1") (d #t) (k 0)) (d (n "ntex-codec") (r "^0.5") (d #t) (k 0)) (d (n "ordered-float") (r "^2.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "17b8d3k547brvza3xf7bkl4002ydqznhdsfq6kj7l6amixjky6sp") (f (quote (("from-spec" "handlebars" "serde" "serde_derive" "serde_json" "lazy_static" "regex") ("default"))))))

(define-public crate-ntex-amqp-codec-0.7.1 (c (n "ntex-amqp-codec") (v "0.7.1") (d (list (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "handlebars") (r "^0.27") (o #t) (d #t) (k 1)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "ntex-bytes") (r "^0.1") (d #t) (k 0)) (d (n "ntex-codec") (r "^0.5") (d #t) (k 0)) (d (n "ordered-float") (r "^2.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "0y1w7drcy72rk3hkjqkc9h34i9mrgj70vahin5g1ra9nmcwr9xyh") (f (quote (("from-spec" "handlebars" "serde" "serde_derive" "serde_json" "lazy_static" "regex") ("default"))))))

(define-public crate-ntex-amqp-codec-0.7.2 (c (n "ntex-amqp-codec") (v "0.7.2") (d (list (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "handlebars") (r "^0.27") (o #t) (d #t) (k 1)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "ntex-bytes") (r "^0.1") (d #t) (k 0)) (d (n "ntex-codec") (r "^0.5") (d #t) (k 0)) (d (n "ordered-float") (r "^2.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "1pf2gx3bgh549qx9hsmnrfzsym14wxwn6facvi7kiq387bwwkka9") (f (quote (("from-spec" "handlebars" "serde" "serde_derive" "serde_json" "lazy_static" "regex") ("default"))))))

(define-public crate-ntex-amqp-codec-0.7.3 (c (n "ntex-amqp-codec") (v "0.7.3") (d (list (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "handlebars") (r "^0.27") (o #t) (d #t) (k 1)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "ntex-bytes") (r "^0.1") (d #t) (k 0)) (d (n "ntex-codec") (r "^0.5") (d #t) (k 0)) (d (n "ordered-float") (r "^2.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "15b68dja367cg330jnp2q40y5v8yd3j76i8jhc4w3izfjnbkydrp") (f (quote (("from-spec" "handlebars" "serde" "serde_derive" "serde_json" "lazy_static" "regex") ("default"))))))

(define-public crate-ntex-amqp-codec-0.7.4 (c (n "ntex-amqp-codec") (v "0.7.4") (d (list (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "handlebars") (r "^0.27") (o #t) (d #t) (k 1)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "ntex-bytes") (r "^0.1") (d #t) (k 0)) (d (n "ntex-codec") (r "^0.5") (d #t) (k 0)) (d (n "ordered-float") (r "^2.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "1s9v3fck3wwa6sdmg3d65hlh5znmb65y9cvrh70yaarbqxvfy7j2") (f (quote (("from-spec" "handlebars" "serde" "serde_derive" "serde_json" "lazy_static" "regex") ("default"))))))

(define-public crate-ntex-amqp-codec-0.8.0 (c (n "ntex-amqp-codec") (v "0.8.0") (d (list (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "handlebars") (r "^0.27") (o #t) (d #t) (k 1)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "ntex-bytes") (r "^0.1") (d #t) (k 0)) (d (n "ntex-codec") (r "^0.6") (d #t) (k 0)) (d (n "ordered-float") (r "^2.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "1a3w8mqqv9sqasfgblv7lga37sjx3gppnqn4d0l9r76r1l19ifn9") (f (quote (("from-spec" "handlebars" "serde" "serde_derive" "serde_json" "lazy_static" "regex") ("default"))))))

(define-public crate-ntex-amqp-codec-0.8.1 (c (n "ntex-amqp-codec") (v "0.8.1") (d (list (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "handlebars") (r "^0.27") (o #t) (d #t) (k 1)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "ntex-bytes") (r "^0.1.9") (d #t) (k 0)) (d (n "ntex-codec") (r "^0.6.0") (d #t) (k 0)) (d (n "ordered-float") (r "^2.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "1afj290bbdhfhky0r6jywn8xfp7pgalamjqfaxc7fwwf874sh94b") (f (quote (("from-spec" "handlebars" "serde" "serde_derive" "serde_json" "lazy_static" "regex") ("default"))))))

(define-public crate-ntex-amqp-codec-0.8.2 (c (n "ntex-amqp-codec") (v "0.8.2") (d (list (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "handlebars") (r "^0.27") (o #t) (d #t) (k 1)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "ntex-bytes") (r "^0.1.14") (d #t) (k 0)) (d (n "ntex-codec") (r "^0.6.2") (d #t) (k 0)) (d (n "ordered-float") (r "^2.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "0ixg531qyabhkk22jhb7az5awivdyknjfrnfl9h4zpx8f7myn41d") (f (quote (("from-spec" "handlebars" "serde" "serde_derive" "serde_json" "lazy_static" "regex") ("default"))))))

(define-public crate-ntex-amqp-codec-0.9.0 (c (n "ntex-amqp-codec") (v "0.9.0") (d (list (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "handlebars") (r "^0.27") (o #t) (d #t) (k 1)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "ntex-bytes") (r "^0.1.14") (d #t) (k 0)) (d (n "ntex-codec") (r "^0.6.2") (d #t) (k 0)) (d (n "ordered-float") (r "^2.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "1gfjbbd4gcsldwlg5h1iwlaksx5rf68vhwnr0h0s7kic6cg0hijd") (f (quote (("from-spec" "handlebars" "serde" "serde_derive" "serde_json" "lazy_static" "regex") ("default"))))))

(define-public crate-ntex-amqp-codec-0.9.1 (c (n "ntex-amqp-codec") (v "0.9.1") (d (list (d (n "byteorder") (r "^1.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "handlebars") (r "^0.27") (o #t) (d #t) (k 1)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "ntex-bytes") (r "^0.1.21") (d #t) (k 0)) (d (n "ntex-codec") (r "^0.6.2") (d #t) (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "01p4sgw113ghbf5i2dzssfgf0jnp1bnjixq65z396dgh1cvm3ri9") (f (quote (("from-spec" "handlebars" "serde" "serde_derive" "serde_json" "lazy_static" "regex") ("default"))))))

(define-public crate-ntex-amqp-codec-0.9.2 (c (n "ntex-amqp-codec") (v "0.9.2") (d (list (d (n "byteorder") (r "^1.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "handlebars") (r "^0.27") (o #t) (d #t) (k 1)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "ntex-bytes") (r "^0.1.24") (d #t) (k 0)) (d (n "ntex-codec") (r "^0.6.2") (d #t) (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "0m792x50l9fav12wpph4j5ggvchx9nyf1my4b3gz79a6nldia573") (f (quote (("from-spec" "handlebars" "serde" "serde_derive" "serde_json" "lazy_static" "regex") ("default"))))))

(define-public crate-ntex-amqp-codec-0.9.3 (c (n "ntex-amqp-codec") (v "0.9.3") (d (list (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "handlebars") (r "^0.27") (o #t) (d #t) (k 1)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "ntex-bytes") (r "^0.1") (d #t) (k 0)) (d (n "ntex-codec") (r "^0.6") (d #t) (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "0hni5i5h4b9g2bw2gcnkk18z28pcf6f6jydp437348bl8dwmihcz") (f (quote (("from-spec" "handlebars" "serde" "serde_derive" "serde_json" "lazy_static" "regex") ("default"))))))

(define-public crate-ntex-amqp-codec-0.9.4 (c (n "ntex-amqp-codec") (v "0.9.4") (d (list (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "handlebars") (r "^0.27") (o #t) (d #t) (k 1)) (d (n "lazy_static") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "ntex-bytes") (r "^0.1") (d #t) (k 0)) (d (n "ntex-codec") (r "^0.6") (d #t) (k 0)) (d (n "ordered-float") (r "^4.2") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "0rycy4hg469hzyfsdp51fxrxagzqbr3bdlgrg99584az1992islq") (f (quote (("from-spec" "handlebars" "serde" "serde_derive" "serde_json" "lazy_static" "regex") ("default"))))))

