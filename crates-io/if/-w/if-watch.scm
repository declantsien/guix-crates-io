(define-module (crates-io if -w if-watch) #:use-module (crates-io))

(define-public crate-if-watch-0.1.0 (c (n "if-watch") (v "0.1.0") (d (list (d (n "async-io") (r "^1.2.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "futures-lite") (r "^1.11.2") (d #t) (k 0)) (d (n "if-addrs") (r "^0.6.5") (d #t) (t "cfg(windows)") (k 0)) (d (n "ipnet") (r "^2.3.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("netioapi" "ntdef" "winerror" "ws2def"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1n27a2n50l8zqhs6x4h4krka5in6k32xi2hzbql05fw497ak3i4i")))

(define-public crate-if-watch-0.1.1 (c (n "if-watch") (v "0.1.1") (d (list (d (n "async-io") (r "^1.2.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "futures-lite") (r "^1.11.2") (d #t) (k 0)) (d (n "if-addrs") (r "^0.6.5") (d #t) (t "cfg(windows)") (k 0)) (d (n "ipnet") (r "^2.3.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("netioapi" "ntdef" "winerror" "ws2def"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0gf738l1lmx3kk3i7hjdw4zrk8q2g2y1vj7mbyzzzjxr45zhppcg")))

(define-public crate-if-watch-0.1.2 (c (n "if-watch") (v "0.1.2") (d (list (d (n "async-io") (r "^1.2.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "futures") (r "^0.3.8") (t "cfg(windows)") (k 0)) (d (n "futures-lite") (r "^1.11.2") (d #t) (k 0)) (d (n "if-addrs") (r "^0.6.5") (d #t) (t "cfg(windows)") (k 0)) (d (n "ipnet") (r "^2.3.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("netioapi" "ntdef" "winerror" "ws2def"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1p704xkzh8a6ajvi4xby4hzzz3qs9rlafn2mn7x5s5pljhi4mlyy")))

(define-public crate-if-watch-0.1.3 (c (n "if-watch") (v "0.1.3") (d (list (d (n "async-io") (r "^1.2.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "futures") (r "^0.3.8") (t "cfg(windows)") (k 0)) (d (n "futures-lite") (r "^1.11.2") (d #t) (k 0)) (d (n "if-addrs") (r "^0.6.5") (d #t) (t "cfg(windows)") (k 0)) (d (n "ipnet") (r "^2.3.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("netioapi" "ntdef" "winerror" "ws2def"))) (d #t) (t "cfg(windows)") (k 0)))) (h "06ryrl6rq6grckb774f4f24aq5lkvvafkawr9a8vv4y4hsh7pad1")))

(define-public crate-if-watch-0.1.4 (c (n "if-watch") (v "0.1.4") (d (list (d (n "async-io") (r "^1.2.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "env_logger") (r "^0.8.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.8") (t "cfg(windows)") (k 0)) (d (n "futures-lite") (r "^1.11.2") (d #t) (k 0)) (d (n "if-addrs") (r "^0.6.5") (d #t) (t "cfg(windows)") (k 0)) (d (n "ipnet") (r "^2.3.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("netioapi" "ntdef" "winerror" "ws2def"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0dzr4xhqqfbfw76p6wpwhim59zdlj05ri4i25aa92r1d4378h82s")))

(define-public crate-if-watch-0.1.5 (c (n "if-watch") (v "0.1.5") (d (list (d (n "async-io") (r "^1.2.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "env_logger") (r "^0.8.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.8") (t "cfg(windows)") (k 0)) (d (n "futures-lite") (r "^1.11.2") (d #t) (k 0)) (d (n "if-addrs") (r "^0.6.5") (d #t) (t "cfg(windows)") (k 0)) (d (n "ipnet") (r "^2.3.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("netioapi" "ntdef" "winerror" "ws2def"))) (d #t) (t "cfg(windows)") (k 0)))) (h "04ah28sgaqc2629kx85mziyd2r44ixffdk16v7zi9nnp67na5bmb")))

(define-public crate-if-watch-0.1.6 (c (n "if-watch") (v "0.1.6") (d (list (d (n "async-io") (r "^1.3.0") (d #t) (t "cfg(not(windows))") (k 0)) (d (n "env_logger") (r "^0.8.2") (d #t) (k 2)) (d (n "futures") (r "^0.3.8") (t "cfg(windows)") (k 0)) (d (n "futures-lite") (r "^1.11.2") (d #t) (k 0)) (d (n "if-addrs") (r "^0.6.5") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "ipnet") (r "^2.3.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.80") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("netioapi" "ntdef" "winerror" "ws2def"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0k0apibsc70zaa47nwbms7l3kz7813w26g9bbsndq45wjjrgny5s")))

(define-public crate-if-watch-0.1.7 (c (n "if-watch") (v "0.1.7") (d (list (d (n "async-io") (r "^1.3.0") (d #t) (t "cfg(not(windows))") (k 0)) (d (n "env_logger") (r "^0.8.2") (d #t) (k 2)) (d (n "futures") (r "^0.3.8") (t "cfg(windows)") (k 0)) (d (n "futures-lite") (r "^1.11.2") (d #t) (k 0)) (d (n "if-addrs") (r "^0.6.5") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "ipnet") (r "^2.3.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.81") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("netioapi" "ntdef" "winerror" "ws2def"))) (d #t) (t "cfg(windows)") (k 0)))) (h "03bdzl8cynr2k2yg9ryddyycwd15k6cdsis85f45rc76c7iwbmqn")))

(define-public crate-if-watch-0.1.8 (c (n "if-watch") (v "0.1.8") (d (list (d (n "async-io") (r "^1.3.0") (d #t) (t "cfg(not(windows))") (k 0)) (d (n "env_logger") (r "^0.8.2") (d #t) (k 2)) (d (n "futures") (r "^0.3.8") (t "cfg(windows)") (k 0)) (d (n "futures-lite") (r "^1.11.2") (d #t) (k 0)) (d (n "if-addrs") (r "^0.6.5") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "ipnet") (r "^2.3.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.81") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("netioapi" "ntdef" "winerror" "ws2def"))) (d #t) (t "cfg(windows)") (k 0)))) (h "11awhd4aw8qw5k4bbb3j1phkad97nip702lghv9x1w53af4m7f4p")))

(define-public crate-if-watch-0.2.0 (c (n "if-watch") (v "0.2.0") (d (list (d (n "async-io") (r "^1.3.1") (d #t) (t "cfg(not(windows))") (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.13") (t "cfg(windows)") (k 0)) (d (n "futures-lite") (r "^1.11.3") (d #t) (k 0)) (d (n "if-addrs") (r "^0.6.5") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "ipnet") (r "^2.3.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.86") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("netioapi" "ntdef" "winerror" "ws2def"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1dllyi2aqa5fjgsizg1y5j71q0gikcablx14q8msp92fin854vba")))

(define-public crate-if-watch-0.2.1 (c (n "if-watch") (v "0.2.1") (d (list (d (n "async-io") (r "^1.3.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.13") (t "cfg(windows)") (k 0)) (d (n "futures-lite") (r "^1.11.3") (d #t) (k 0)) (d (n "if-addrs") (r "^0.6.5") (d #t) (k 0)) (d (n "ipnet") (r "^2.3.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.86") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("netioapi" "ntdef" "winerror" "ws2def"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1rd4bvwlznc7rs52z4i31q3dqd5n4c3lczn3haa83k28vb5hwk0l")))

(define-public crate-if-watch-0.2.2 (c (n "if-watch") (v "0.2.2") (d (list (d (n "async-io") (r "^1.3.1") (d #t) (t "cfg(not(windows))") (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.13") (t "cfg(windows)") (k 0)) (d (n "futures-lite") (r "^1.11.3") (d #t) (k 0)) (d (n "if-addrs") (r "^0.6.5") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "ipnet") (r "^2.3.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.86") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("netioapi" "ntdef" "winerror" "ws2def"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0y8ix7pfvvdxzcbhk125qbs6lb2c1g5vjkxjkh240cmdggvbg2mf")))

(define-public crate-if-watch-0.3.0 (c (n "if-watch") (v "0.3.0") (d (list (d (n "async-io") (r "^1.3.1") (d #t) (t "cfg(not(windows))") (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.13") (t "cfg(windows)") (k 0)) (d (n "futures-lite") (r "^1.11.3") (d #t) (k 0)) (d (n "if-addrs") (r "^0.7.0") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "ipnet") (r "^2.3.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.86") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("netioapi" "ntdef" "winerror" "ws2def"))) (d #t) (t "cfg(windows)") (k 0)))) (h "132k2mg6awb6gs7w10hdgly0fl6lswpv2rbc8z5x20b313cbfa7c")))

(define-public crate-if-watch-1.0.0 (c (n "if-watch") (v "1.0.0") (d (list (d (n "async-io") (r "^1.6.0") (d #t) (t "cfg(not(any(target_os = \"ios\", target_os = \"linux\", target_os = \"macos\", target_os = \"windows\")))") (k 0)) (d (n "core-foundation") (r "^0.9.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.19") (d #t) (k 0)) (d (n "if-addrs") (r "^0.7.0") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "if-addrs") (r "^0.7.0") (d #t) (t "cfg(not(any(target_os = \"ios\", target_os = \"linux\", target_os = \"macos\", target_os = \"windows\")))") (k 0)) (d (n "if-addrs") (r "^0.7.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "ipnet") (r "^2.3.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rtnetlink") (r "^0.9.0") (f (quote ("smol_socket"))) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "system-configuration") (r "^0.5.0") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "windows") (r "^0.29.0") (f (quote ("Win32_NetworkManagement_IpHelper" "Win32_Foundation" "Win32_Networking_WinSock"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1wsjpkvv9m69d1b6j1cfsd2zjzdj00f0q4iym0f3b2ac7ly4m3xf")))

(define-public crate-if-watch-1.1.0 (c (n "if-watch") (v "1.1.0") (d (list (d (n "async-io") (r "^1.6.0") (d #t) (t "cfg(not(any(target_os = \"ios\", target_os = \"linux\", target_os = \"macos\", target_os = \"windows\")))") (k 0)) (d (n "core-foundation") (r "^0.9.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.19") (d #t) (k 0)) (d (n "if-addrs") (r "^0.7.0") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "if-addrs") (r "^0.7.0") (d #t) (t "cfg(not(any(target_os = \"ios\", target_os = \"linux\", target_os = \"macos\", target_os = \"windows\")))") (k 0)) (d (n "if-addrs") (r "^0.7.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "ipnet") (r "^2.3.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rtnetlink") (r "^0.9.0") (f (quote ("smol_socket"))) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "system-configuration") (r "^0.5.0") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "windows") (r "^0.34.0") (f (quote ("Win32_NetworkManagement_IpHelper" "Win32_Foundation" "Win32_Networking_WinSock"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1xqcmyb551d6v38i4hqwbm086zb9rdpshw5c45frc9ixg8v5jkbp")))

(define-public crate-if-watch-1.1.1 (c (n "if-watch") (v "1.1.1") (d (list (d (n "async-io") (r "^1.6.0") (d #t) (t "cfg(not(any(target_os = \"ios\", target_os = \"linux\", target_os = \"macos\", target_os = \"windows\")))") (k 0)) (d (n "core-foundation") (r "^0.9.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.19") (d #t) (k 0)) (d (n "if-addrs") (r "^0.7.0") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "if-addrs") (r "^0.7.0") (d #t) (t "cfg(not(any(target_os = \"ios\", target_os = \"linux\", target_os = \"macos\", target_os = \"windows\")))") (k 0)) (d (n "if-addrs") (r "^0.7.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "ipnet") (r "^2.3.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rtnetlink") (r "^0.10.0") (f (quote ("smol_socket"))) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "system-configuration") (r "^0.5.0") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "windows") (r "^0.34.0") (f (quote ("Win32_NetworkManagement_IpHelper" "Win32_Foundation" "Win32_Networking_WinSock"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1487012n6lpd40mdx10f9fc55cxpm6nn6jzk6zgk1nkdxgqpsnh1")))

(define-public crate-if-watch-2.0.0 (c (n "if-watch") (v "2.0.0") (d (list (d (n "async-io") (r "^1.6.0") (d #t) (t "cfg(not(any(target_os = \"ios\", target_os = \"linux\", target_os = \"macos\", target_os = \"windows\")))") (k 0)) (d (n "core-foundation") (r "^0.9.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.19") (d #t) (k 0)) (d (n "if-addrs") (r "^0.7.0") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "if-addrs") (r "^0.7.0") (d #t) (t "cfg(not(any(target_os = \"ios\", target_os = \"linux\", target_os = \"macos\", target_os = \"windows\")))") (k 0)) (d (n "if-addrs") (r "^0.7.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "ipnet") (r "^2.3.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rtnetlink") (r "^0.10.0") (f (quote ("smol_socket"))) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "system-configuration") (r "^0.5.0") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "windows") (r "^0.34.0") (f (quote ("Win32_NetworkManagement_IpHelper" "Win32_Foundation" "Win32_Networking_WinSock"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1pb7xvv2lwlij3dj6lr5ii4nmsp56m073ndfwq6w0hqaay700p06")))

(define-public crate-if-watch-3.0.0 (c (n "if-watch") (v "3.0.0") (d (list (d (n "async-io") (r "^1.6.0") (d #t) (t "cfg(not(any(target_os = \"ios\", target_os = \"linux\", target_os = \"macos\", target_os = \"windows\")))") (k 0)) (d (n "core-foundation") (r "^0.9.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.19") (d #t) (k 0)) (d (n "if-addrs") (r "^0.7.0") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "if-addrs") (r "^0.7.0") (d #t) (t "cfg(not(any(target_os = \"ios\", target_os = \"linux\", target_os = \"macos\", target_os = \"windows\")))") (k 0)) (d (n "if-addrs") (r "^0.7.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "ipnet") (r "^2.3.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rtnetlink") (r "^0.10.0") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "smol") (r "^1.2.5") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 2)) (d (n "system-configuration") (r "^0.5.0") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "tokio") (r "^1.21.2") (f (quote ("rt"))) (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "tokio") (r "^1.21.2") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "windows") (r "^0.34.0") (f (quote ("Win32_NetworkManagement_IpHelper" "Win32_Foundation" "Win32_Networking_WinSock"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0bh677yh0ahnm91knx3vijqg6frr3qg6khh6mmfi51g4hsxvsyms") (s 2) (e (quote (("tokio" "dep:tokio" "rtnetlink/tokio_socket") ("smol" "dep:smol" "rtnetlink/smol_socket"))))))

(define-public crate-if-watch-3.0.1 (c (n "if-watch") (v "3.0.1") (d (list (d (n "async-io") (r "^1.6.0") (d #t) (t "cfg(not(any(target_os = \"ios\", target_os = \"linux\", target_os = \"macos\", target_os = \"windows\")))") (k 0)) (d (n "core-foundation") (r "^0.9.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.19") (d #t) (k 0)) (d (n "if-addrs") (r "^0.7.0") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "if-addrs") (r "^0.7.0") (d #t) (t "cfg(not(any(target_os = \"ios\", target_os = \"linux\", target_os = \"macos\", target_os = \"windows\")))") (k 0)) (d (n "if-addrs") (r "^0.7.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "ipnet") (r "^2.3.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rtnetlink") (r "^0.10.0") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "smol") (r "^1.2.5") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 2)) (d (n "system-configuration") (r "^0.5.0") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "tokio") (r "^1.21.2") (f (quote ("rt"))) (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "tokio") (r "^1.21.2") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "windows") (r "^0.34.0") (f (quote ("Win32_NetworkManagement_IpHelper" "Win32_Foundation" "Win32_Networking_WinSock"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "17zpf2r7l38dl1w8zpwa1c0n0q8di7dsq280gb8nqaab45056im9") (s 2) (e (quote (("tokio" "dep:tokio" "rtnetlink/tokio_socket") ("smol" "dep:smol" "rtnetlink/smol_socket"))))))

(define-public crate-if-watch-3.1.0 (c (n "if-watch") (v "3.1.0") (d (list (d (n "async-io") (r "^1.6.0") (d #t) (t "cfg(not(any(target_os = \"ios\", target_os = \"linux\", target_os = \"macos\", target_os = \"windows\")))") (k 0)) (d (n "core-foundation") (r "^0.9.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.19") (d #t) (k 0)) (d (n "if-addrs") (r "^0.7.0") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "if-addrs") (r "^0.7.0") (d #t) (t "cfg(not(any(target_os = \"ios\", target_os = \"linux\", target_os = \"macos\", target_os = \"windows\")))") (k 0)) (d (n "if-addrs") (r "^0.7.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "ipnet") (r "^2.3.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rtnetlink") (r "^0.10.0") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "smol") (r "^1.2.5") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 2)) (d (n "system-configuration") (r "^0.5.0") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "tokio") (r "^1.21.2") (f (quote ("rt"))) (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "tokio") (r "^1.21.2") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "windows") (r "^0.51.0") (f (quote ("Win32_NetworkManagement_IpHelper" "Win32_Foundation" "Win32_NetworkManagement_Ndis" "Win32_Networking_WinSock"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0gih1jxjaknr35pld35yxikp5ajd5y0ffkflycb9xq3zfzjr5f5v") (s 2) (e (quote (("tokio" "dep:tokio" "rtnetlink/tokio_socket") ("smol" "dep:smol" "rtnetlink/smol_socket"))))))

(define-public crate-if-watch-3.2.0 (c (n "if-watch") (v "3.2.0") (d (list (d (n "async-io") (r "^2.0.0") (d #t) (t "cfg(not(any(target_os = \"ios\", target_os = \"linux\", target_os = \"macos\", target_os = \"windows\")))") (k 0)) (d (n "core-foundation") (r "^0.9.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.19") (d #t) (k 0)) (d (n "if-addrs") (r "^0.10.0") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "if-addrs") (r "^0.10.0") (d #t) (t "cfg(not(any(target_os = \"ios\", target_os = \"linux\", target_os = \"macos\", target_os = \"windows\")))") (k 0)) (d (n "if-addrs") (r "^0.10.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "ipnet") (r "^2.3.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rtnetlink") (r "^0.10.0") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "smol") (r "^1.2.5") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 2)) (d (n "system-configuration") (r "^0.5.0") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "tokio") (r "^1.21.2") (f (quote ("rt"))) (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "tokio") (r "^1.21.2") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "windows") (r "^0.51.0") (f (quote ("Win32_NetworkManagement_IpHelper" "Win32_Foundation" "Win32_NetworkManagement_Ndis" "Win32_Networking_WinSock"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "07kyvhha4l41gg4a79vli0ksyg34mq22xi4w2sbhxknphqn45c6n") (s 2) (e (quote (("tokio" "dep:tokio" "rtnetlink/tokio_socket") ("smol" "dep:smol" "rtnetlink/smol_socket"))))))

