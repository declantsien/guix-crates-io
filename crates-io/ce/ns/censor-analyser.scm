(define-module (crates-io ce ns censor-analyser) #:use-module (crates-io))

(define-public crate-censor-analyser-0.2.0 (c (n "censor-analyser") (v "0.2.0") (d (list (d (n "clap") (r "^2.33.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r "^0.23.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "image") (r "^0.23.14") (f (quote ("png"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "json") (r "^0.12.4") (d #t) (k 0)) (d (n "stdweb") (r "^0.4.20") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ureq") (r "^2.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0qs9jh0hw5vww8fyccbwkqhhfyypdz8biq6ym8hqy2s2a29msgfs")))

(define-public crate-censor-analyser-0.2.1 (c (n "censor-analyser") (v "0.2.1") (d (list (d (n "clap") (r "^2.33.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "const_format") (r "^0.2.17") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r "^0.23.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "image") (r "^0.23.14") (f (quote ("png"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "json") (r "^0.12.4") (d #t) (k 0)) (d (n "stdweb") (r "^0.4.20") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ureq") (r "^2.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0yaj3gzzdb82hgpfkwh5cks5b6cg6h09zn2vw8cwrir060nswpjw")))

(define-public crate-censor-analyser-0.2.2 (c (n "censor-analyser") (v "0.2.2") (d (list (d (n "clap") (r "^2.33.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "const_format") (r "^0.2.17") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r "^0.23.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "image") (r "^0.23.14") (f (quote ("png"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "json") (r "^0.12.4") (d #t) (k 0)) (d (n "stdweb") (r "^0.4.20") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ureq") (r "^2.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1sp09222r34f2v6h230dnmdy62cvq7yvw021yzc45br3wdf2x6p1")))

(define-public crate-censor-analyser-0.2.3 (c (n "censor-analyser") (v "0.2.3") (d (list (d (n "clap") (r "^2.33.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "const_format") (r "^0.2.17") (d #t) (k 0)) (d (n "escape_string") (r "^0.1.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r "^0.23.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "image") (r "^0.23.14") (f (quote ("png"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "json") (r "^0.12.4") (d #t) (k 0)) (d (n "stdweb") (r "^0.4.20") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ureq") (r "^2.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1d5hyanm1jjns85zqkjapn8fz1qyhl7nid3vw7msmwn2jgn6h3vl")))

(define-public crate-censor-analyser-0.3.0 (c (n "censor-analyser") (v "0.3.0") (d (list (d (n "clap") (r "^2.33.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "const_format") (r "^0.2.17") (d #t) (k 0)) (d (n "escape_string") (r "^0.1.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r "^0.23.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "image") (r "^0.23.14") (f (quote ("png"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "json") (r "^0.12.4") (d #t) (k 0)) (d (n "stdweb") (r "^0.4.20") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ureq") (r "^2.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "10qfdnzd0zmn9k58k1mg8s5ww5asnfmzw24hw01pxabsms930qbs")))

(define-public crate-censor-analyser-0.3.1 (c (n "censor-analyser") (v "0.3.1") (d (list (d (n "clap") (r "^2.33.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "const_format") (r "^0.2.17") (d #t) (k 0)) (d (n "escape_string") (r "^0.1.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r "^0.23.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "image") (r "^0.23.14") (f (quote ("png"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "json") (r "^0.12.4") (d #t) (k 0)) (d (n "stdweb") (r "^0.4.20") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ureq") (r "^2.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1mpmldl6ny89y5jh3vr51vgg0gkcw2ip1vwc5y8jl4j25nj97asv")))

(define-public crate-censor-analyser-0.3.2 (c (n "censor-analyser") (v "0.3.2") (d (list (d (n "clap") (r "^2.33.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "const_format") (r "^0.2.17") (d #t) (k 0)) (d (n "escape_string") (r "^0.1.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r "^0.23.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "image") (r "^0.23.14") (f (quote ("png"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "json") (r "^0.12.4") (d #t) (k 0)) (d (n "stdweb") (r "^0.4.20") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ureq") (r "^2.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0w61s7igwna80rxrfm17rqgwzhdqswdvq3mvqvbfrhr993msqzqs")))

(define-public crate-censor-analyser-0.3.3 (c (n "censor-analyser") (v "0.3.3") (d (list (d (n "clap") (r "^2.33.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "const_format") (r "^0.2.17") (d #t) (k 0)) (d (n "escape_string") (r "^0.1.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r "^0.23.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "image") (r "^0.23.14") (f (quote ("png"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "json") (r "^0.12.4") (d #t) (k 0)) (d (n "stdweb") (r "^0.4.20") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ureq") (r "^2.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "02b3z1cpzkjpd230j63b39xp7znb37n1ny1zcxk31vddzx0ksl1k")))

(define-public crate-censor-analyser-0.3.4 (c (n "censor-analyser") (v "0.3.4") (d (list (d (n "clap") (r "^2.33.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "const_format") (r "^0.2.17") (d #t) (k 0)) (d (n "escape_string") (r "^0.1.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r "^0.23.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "image") (r "^0.23.14") (f (quote ("png"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "json") (r "^0.12.4") (d #t) (k 0)) (d (n "stdweb") (r "^0.4.20") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ureq") (r "^2.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0d997r734yrl2siq89cr6cad9lbn7r5fm2c9grz3vavjrbz2cz6d")))

(define-public crate-censor-analyser-0.4.0 (c (n "censor-analyser") (v "0.4.0") (d (list (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "const_format") (r "^0.2.17") (d #t) (k 0)) (d (n "escape_string") (r "^0.1.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r "^0.23.14") (d #t) (k 0)) (d (n "json") (r "^0.12.4") (d #t) (k 0)) (d (n "stdweb") (r "^0.4.20") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ureq") (r "^2.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "13cx454d17krbyjik7x55ip7vqnzdj6p0fc5gnqj289gyd3w8hf4")))

(define-public crate-censor-analyser-0.4.1 (c (n "censor-analyser") (v "0.4.1") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "const_format") (r "^0.2.17") (d #t) (k 0)) (d (n "directories") (r "^3.0.2") (d #t) (k 0)) (d (n "escape_string") (r "^0.1.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r "^0.23.14") (d #t) (k 0)) (d (n "json") (r "^0.12.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "stdweb") (r "^0.4.20") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ureq") (r "^2.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1yajk64gmg12pyvbq3v2qq4vh64234wzndfsg23s7w8ndv5ghk6k")))

(define-public crate-censor-analyser-0.4.2 (c (n "censor-analyser") (v "0.4.2") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "const_format") (r "^0.2.17") (d #t) (k 0)) (d (n "directories") (r "^3.0.2") (d #t) (k 0)) (d (n "escape_string") (r "^0.1.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r "^0.23.14") (d #t) (k 0)) (d (n "img-parts") (r "^0.2.3") (d #t) (k 0)) (d (n "json") (r "^0.12.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "stdweb") (r "^0.4.20") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ureq") (r "^2.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1vfc29jzw64wcm7dni8hgwq3fqy4yr94j7dpljaybrid58zxf1zm")))

(define-public crate-censor-analyser-0.4.3 (c (n "censor-analyser") (v "0.4.3") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "const_format") (r "^0.2.17") (d #t) (k 0)) (d (n "directories") (r "^3.0.2") (d #t) (k 0)) (d (n "escape_string") (r "^0.1.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r "^0.23.14") (d #t) (k 0)) (d (n "img-parts") (r "^0.2.3") (d #t) (k 0)) (d (n "json") (r "^0.12.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "stdweb") (r "^0.4.20") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ureq") (r "^2.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vpsearch") (r "^2.0.1") (d #t) (k 0)))) (h "1zrz4q2i8h5p9kn06hlszrnqw0rwyaz0mfi327mdlmwwpxrwy3jb")))

(define-public crate-censor-analyser-0.5.0 (c (n "censor-analyser") (v "0.5.0") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "const_format") (r "^0.2.17") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8.5") (d #t) (k 0)) (d (n "directories") (r "^3.0.2") (d #t) (k 0)) (d (n "escape_string") (r "^0.1.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r "^0.23.14") (d #t) (k 0)) (d (n "img-parts") (r "^0.2.3") (d #t) (k 0)) (d (n "json") (r "^0.12.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "stdweb") (r "^0.4.20") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ureq") (r "^2.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vpsearch") (r "^2.0.1") (d #t) (k 0)))) (h "0p0lhp7x64dnzp1lbkihs6zs2gamghbhcq71ry112v5d6ydibcza")))

(define-public crate-censor-analyser-0.6.0 (c (n "censor-analyser") (v "0.6.0") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "const_format") (r "^0.2.17") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8.5") (d #t) (k 0)) (d (n "directories") (r "^3.0.2") (d #t) (k 0)) (d (n "escape_string") (r "^0.1.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r "^0.23.14") (d #t) (k 0)) (d (n "img-parts") (r "^0.2.3") (d #t) (k 0)) (d (n "json") (r "^0.12.4") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "stdweb") (r "^0.4.20") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "text_io") (r "^0.1.9") (d #t) (k 0)) (d (n "ureq") (r "^2.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vpsearch") (r "^2.0.1") (d #t) (k 0)))) (h "0da0bxxml7ayx16p7qmfi38lf306rlwiam5xr89dcf6yk4dbw46g")))

