(define-module (crates-io ce ss cess-sp-post) #:use-module (crates-io))

(define-public crate-cess-sp-post-0.1.0 (c (n "cess-sp-post") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.18.0") (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "blake2s_simd") (r "^0.5") (d #t) (k 0)) (d (n "blstrs") (r "^0.4.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "cess-hashers") (r "^0.1.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "cess-hashers") (r "^0.1.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "ff") (r "^0.11.0") (d #t) (k 0)) (d (n "fr32") (r "^0.1.0") (k 0) (p "cess-fr32")) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^5.1.0") (f (quote ("arity2" "arity4" "arity8" "arity11" "arity16" "arity24" "arity36"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^0.1.0") (k 0) (p "cess-sp-core")) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "13svfbs9cw62yw6szavx666k9ar73kv1a966jhnr8fck2f23x49f") (f (quote (("opencl" "storage-proofs-core/opencl" "cess-hashers/opencl" "fr32/opencl" "neptune/opencl") ("default" "opencl") ("cuda" "storage-proofs-core/cuda" "cess-hashers/cuda" "fr32/cuda" "neptune/cuda"))))))

(define-public crate-cess-sp-post-0.1.1 (c (n "cess-sp-post") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.18.0") (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "blake2s_simd") (r "^0.5") (d #t) (k 0)) (d (n "blstrs") (r "^0.4.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "cess-hashers") (r "^0.1.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "cess-hashers") (r "^0.1.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "ff") (r "^0.11.0") (d #t) (k 0)) (d (n "fr32") (r "^0.1.0") (k 0) (p "cess-fr32")) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^5.1.0") (f (quote ("arity2" "arity4" "arity8" "arity11" "arity16" "arity24" "arity36"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^0.1.1") (k 0) (p "cess-sp-core")) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "0zcbfqb5b15mhpk1ag96bashwhri6rjc37zy3907lm8qyi0rxnp4") (f (quote (("opencl" "storage-proofs-core/opencl" "cess-hashers/opencl" "fr32/opencl" "neptune/opencl") ("default" "opencl") ("cuda" "storage-proofs-core/cuda" "cess-hashers/cuda" "fr32/cuda" "neptune/cuda"))))))

(define-public crate-cess-sp-post-0.1.2 (c (n "cess-sp-post") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.18.0") (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "blake2s_simd") (r "^0.5") (d #t) (k 0)) (d (n "blstrs") (r "^0.4.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "cess-hashers") (r "^0.1.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "cess-hashers") (r "^0.1.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "ff") (r "^0.11.0") (d #t) (k 0)) (d (n "fr32") (r "^0.1.0") (k 0) (p "cess-fr32")) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^5.1.0") (f (quote ("arity2" "arity4" "arity8" "arity11" "arity16" "arity24" "arity36"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^0.1.2") (k 0) (p "cess-sp-core")) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "0yp4ka8g0lk832y9c3jmig060hndqczm58j0cww6lv447qqrcdkf") (f (quote (("opencl" "storage-proofs-core/opencl" "cess-hashers/opencl" "fr32/opencl" "neptune/opencl") ("default" "opencl") ("cuda" "storage-proofs-core/cuda" "cess-hashers/cuda" "fr32/cuda" "neptune/cuda"))))))

