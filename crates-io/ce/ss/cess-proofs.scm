(define-module (crates-io ce ss cess-proofs) #:use-module (crates-io))

(define-public crate-cess-proofs-0.1.0 (c (n "cess-proofs") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.18.0") (d #t) (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 0)) (d (n "bitvec") (r "^0.17") (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "blake2s_simd") (r "^0.5.8") (d #t) (k 0)) (d (n "blstrs") (r "^0.4.0") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^1.0.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "cess-hashers") (r "^0.1.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "failure") (r "^0.1.7") (d #t) (k 2)) (d (n "ff") (r "^0.11.0") (d #t) (k 0)) (d (n "fil_logger") (r "^0.1") (d #t) (k 0)) (d (n "fr32") (r "^0.1.0") (k 0) (p "cess-fr32")) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "gperftools") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "group") (r "^0.11.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "memmap") (r "^0.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 0)) (d (n "rayon") (r "^1.1.0") (d #t) (k 0)) (d (n "rexpect") (r "^0.4.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("rc" "derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^0.1.0") (k 0) (p "cess-sp-core")) (d (n "storage-proofs-porep") (r "^0.1.0") (k 0) (p "cess-sp-porep")) (d (n "storage-proofs-post") (r "^0.1.0") (k 0) (p "cess-sp-post")) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "typenum") (r "^1.11.2") (d #t) (k 0)))) (h "03zqlxh7rmga5l6w1s0lnsfkix7b941b1qkldllf8az4kaa3pj5j") (f (quote (("simd" "storage-proofs-core/simd") ("opencl" "storage-proofs-core/opencl" "storage-proofs-porep/opencl" "storage-proofs-post/opencl" "bellperson/opencl" "cess-hashers/opencl" "fr32/opencl") ("heap-profile" "gperftools/heap") ("default" "opencl") ("cuda" "storage-proofs-core/cuda" "storage-proofs-porep/cuda" "storage-proofs-post/cuda" "bellperson/cuda" "cess-hashers/cuda" "fr32/cuda") ("cpu-profile" "gperftools") ("asm" "storage-proofs-core/asm"))))))

(define-public crate-cess-proofs-0.1.1 (c (n "cess-proofs") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.18.0") (d #t) (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 0)) (d (n "bitvec") (r "^0.17") (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "blake2s_simd") (r "^0.5.8") (d #t) (k 0)) (d (n "blstrs") (r "^0.4.0") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^1.0.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "cess-hashers") (r "^0.1.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "failure") (r "^0.1.7") (d #t) (k 2)) (d (n "ff") (r "^0.11.0") (d #t) (k 0)) (d (n "fil_logger") (r "^0.1") (d #t) (k 0)) (d (n "fr32") (r "^0.1.0") (k 0) (p "cess-fr32")) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "gperftools") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "group") (r "^0.11.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "memmap") (r "^0.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 0)) (d (n "rayon") (r "^1.1.0") (d #t) (k 0)) (d (n "rexpect") (r "^0.4.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("rc" "derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^0.1.1") (k 0) (p "cess-sp-core")) (d (n "storage-proofs-porep") (r "^0.1.1") (k 0) (p "cess-sp-porep")) (d (n "storage-proofs-post") (r "^0.1.1") (k 0) (p "cess-sp-post")) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "typenum") (r "^1.11.2") (d #t) (k 0)))) (h "0icrs305s6xl8qm7psmwjzjf3m9zj45m90gi56rkvcaf10hyqrpb") (f (quote (("simd" "storage-proofs-core/simd") ("opencl" "storage-proofs-core/opencl" "storage-proofs-porep/opencl" "storage-proofs-post/opencl" "bellperson/opencl" "cess-hashers/opencl" "fr32/opencl") ("heap-profile" "gperftools/heap") ("default" "opencl") ("cuda" "storage-proofs-core/cuda" "storage-proofs-porep/cuda" "storage-proofs-post/cuda" "bellperson/cuda" "cess-hashers/cuda" "fr32/cuda") ("cpu-profile" "gperftools") ("asm" "storage-proofs-core/asm"))))))

(define-public crate-cess-proofs-0.1.2 (c (n "cess-proofs") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.18.0") (d #t) (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 0)) (d (n "bitvec") (r "^0.17") (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "blake2s_simd") (r "^0.5.8") (d #t) (k 0)) (d (n "blstrs") (r "^0.4.0") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^1.0.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "cess-hashers") (r "^0.1.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "failure") (r "^0.1.7") (d #t) (k 2)) (d (n "ff") (r "^0.11.0") (d #t) (k 0)) (d (n "fil_logger") (r "^0.1") (d #t) (k 0)) (d (n "fr32") (r "^0.1.0") (k 0) (p "cess-fr32")) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "gperftools") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "group") (r "^0.11.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "memmap") (r "^0.7") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 0)) (d (n "rayon") (r "^1.1.0") (d #t) (k 0)) (d (n "rexpect") (r "^0.4.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("rc" "derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "storage-proofs-core") (r "^0.1.2") (k 0) (p "cess-sp-core")) (d (n "storage-proofs-porep") (r "^0.1.2") (k 0) (p "cess-sp-porep")) (d (n "storage-proofs-post") (r "^0.1.2") (k 0) (p "cess-sp-post")) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "typenum") (r "^1.11.2") (d #t) (k 0)))) (h "0gac3hzfdm3y4v0pyc64pib82i79nc0r75cbv7rwx9kn25c09wml") (f (quote (("simd" "storage-proofs-core/simd") ("opencl" "storage-proofs-core/opencl" "storage-proofs-porep/opencl" "storage-proofs-post/opencl" "bellperson/opencl" "cess-hashers/opencl" "fr32/opencl") ("heap-profile" "gperftools/heap") ("default" "opencl") ("cuda" "storage-proofs-core/cuda" "storage-proofs-porep/cuda" "storage-proofs-post/cuda" "bellperson/cuda" "cess-hashers/cuda" "fr32/cuda") ("cpu-profile" "gperftools") ("asm" "storage-proofs-core/asm"))))))

