(define-module (crates-io ce ss cess-sp-porep) #:use-module (crates-io))

(define-public crate-cess-sp-porep-0.1.0 (c (n "cess-sp-porep") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.18.0") (d #t) (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 0)) (d (n "blstrs") (r "^0.4.0") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^1.0.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cess-hashers") (r "^0.1.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "cess-hashers") (r "^0.1.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "fdlimit") (r "^0.2.0") (d #t) (k 0)) (d (n "ff") (r "^0.11.0") (d #t) (k 0)) (d (n "fil_logger") (r "^0.1") (d #t) (k 0)) (d (n "fr32") (r "^0.1.0") (k 0) (p "cess-fr32")) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hwloc") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "mapr") (r "^0.8.0") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^5.1.0") (f (quote ("arity2" "arity4" "arity8" "arity11" "arity16" "arity24" "arity36"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pairing") (r "^0.21") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (f (quote ("compress"))) (d #t) (t "cfg(not(target_arch = \"aarch64\"))") (k 0)) (d (n "sha2") (r "^0.9.3") (f (quote ("compress" "asm"))) (d #t) (t "cfg(target_arch = \"aarch64\")") (k 0)) (d (n "sha2raw") (r "^0.1.0") (d #t) (k 0) (p "cess-sha2raw")) (d (n "storage-proofs-core") (r "^0.1.0") (k 0) (p "cess-sp-core")) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "yastl") (r "^0.1.2") (d #t) (k 0)))) (h "1p9hiasqllp2pnddi9cx5vwl58s1yff9biicaj47vbjzn0qkk9ss") (f (quote (("opencl" "storage-proofs-core/opencl" "cess-hashers/opencl" "neptune/opencl" "bellperson/opencl" "fr32/opencl") ("multicore-sdr" "hwloc") ("isolated-testing") ("default" "opencl" "multicore-sdr") ("cuda" "storage-proofs-core/cuda" "cess-hashers/cuda" "neptune/cuda" "bellperson/cuda" "fr32/cuda"))))))

(define-public crate-cess-sp-porep-0.1.1 (c (n "cess-sp-porep") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.18.0") (d #t) (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 0)) (d (n "blstrs") (r "^0.4.0") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^1.0.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cess-hashers") (r "^0.1.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "cess-hashers") (r "^0.1.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "fdlimit") (r "^0.2.0") (d #t) (k 0)) (d (n "ff") (r "^0.11.0") (d #t) (k 0)) (d (n "fil_logger") (r "^0.1") (d #t) (k 0)) (d (n "fr32") (r "^0.1.0") (k 0) (p "cess-fr32")) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hwloc") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "mapr") (r "^0.8.0") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^5.1.0") (f (quote ("arity2" "arity4" "arity8" "arity11" "arity16" "arity24" "arity36"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pairing") (r "^0.21") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (f (quote ("compress"))) (d #t) (t "cfg(not(target_arch = \"aarch64\"))") (k 0)) (d (n "sha2") (r "^0.9.3") (f (quote ("compress" "asm"))) (d #t) (t "cfg(target_arch = \"aarch64\")") (k 0)) (d (n "sha2raw") (r "^0.1.0") (d #t) (k 0) (p "cess-sha2raw")) (d (n "storage-proofs-core") (r "^0.1.1") (k 0) (p "cess-sp-core")) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "yastl") (r "^0.1.2") (d #t) (k 0)))) (h "0cjmpvsf62b5j9sfvzy6m4krlfqxxsgb7xh9944rvpi2nip05dv2") (f (quote (("opencl" "storage-proofs-core/opencl" "cess-hashers/opencl" "neptune/opencl" "bellperson/opencl" "fr32/opencl") ("multicore-sdr" "hwloc") ("isolated-testing") ("default" "opencl" "multicore-sdr") ("cuda" "storage-proofs-core/cuda" "cess-hashers/cuda" "neptune/cuda" "bellperson/cuda" "fr32/cuda"))))))

(define-public crate-cess-sp-porep-0.1.2 (c (n "cess-sp-porep") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.23") (d #t) (k 0)) (d (n "bellperson") (r "^0.18.0") (d #t) (k 0)) (d (n "bincode") (r "^1.1.2") (d #t) (k 0)) (d (n "blstrs") (r "^0.4.0") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^1.0.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "cess-hashers") (r "^0.1.0") (f (quote ("poseidon" "sha256"))) (k 0)) (d (n "cess-hashers") (r "^0.1.0") (f (quote ("poseidon" "sha256" "blake2s"))) (k 2)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "fdlimit") (r "^0.2.0") (d #t) (k 0)) (d (n "ff") (r "^0.11.0") (d #t) (k 0)) (d (n "fil_logger") (r "^0.1") (d #t) (k 0)) (d (n "fr32") (r "^0.1.0") (k 0) (p "cess-fr32")) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hwloc") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "mapr") (r "^0.8.0") (d #t) (k 0)) (d (n "merkletree") (r "^0.21.0") (d #t) (k 0)) (d (n "neptune") (r "^5.1.0") (f (quote ("arity2" "arity4" "arity8" "arity11" "arity16" "arity24" "arity36"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10.1") (d #t) (k 0)) (d (n "pairing") (r "^0.21") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.3") (f (quote ("compress"))) (d #t) (t "cfg(not(target_arch = \"aarch64\"))") (k 0)) (d (n "sha2") (r "^0.9.3") (f (quote ("compress" "asm"))) (d #t) (t "cfg(target_arch = \"aarch64\")") (k 0)) (d (n "sha2raw") (r "^0.1.0") (d #t) (k 0) (p "cess-sha2raw")) (d (n "storage-proofs-core") (r "^0.1.2") (k 0) (p "cess-sp-core")) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "yastl") (r "^0.1.2") (d #t) (k 0)))) (h "0rvvskadpn1a4z3sxr09j04i2rhywbr5ggw1cw7fqmrc663r090x") (f (quote (("opencl" "storage-proofs-core/opencl" "cess-hashers/opencl" "neptune/opencl" "bellperson/opencl" "fr32/opencl") ("multicore-sdr" "hwloc") ("isolated-testing") ("default" "opencl" "multicore-sdr") ("cuda" "storage-proofs-core/cuda" "cess-hashers/cuda" "neptune/cuda" "bellperson/cuda" "fr32/cuda"))))))

