(define-module (crates-io ce ci cecile) #:use-module (crates-io))

(define-public crate-Cecile-0.0.1 (c (n "Cecile") (v "0.0.1") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7.4") (d #t) (k 0)) (d (n "clap") (r "^4.4.10") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.1") (f (quote ("inline-more"))) (k 0)) (d (n "iota") (r "^0.2.3") (d #t) (k 0)) (d (n "lalrpop") (r "^0.20.0") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.20.0") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "logos") (r "^0.13.0") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.39") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "termcolor") (r "^1.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)))) (h "1k1w7brki480lymzfs4n343gja9vldsxznq23p6kx42jm2k3jy7d") (r "1.74")))

(define-public crate-Cecile-0.0.2 (c (n "Cecile") (v "0.0.2") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7.4") (d #t) (k 0)) (d (n "clap") (r "^4.4.10") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.1") (f (quote ("inline-more"))) (k 0)) (d (n "iota") (r "^0.2.3") (d #t) (k 0)) (d (n "lalrpop") (r "^0.20.0") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.20.0") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "logos") (r "^0.13.0") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.39") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "termcolor") (r "^1.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)))) (h "09x37ywsdqrzqlxxlvj58rcv4jl7v96jyj8mx1f30irlq9cfyd0c") (r "1.74")))

(define-public crate-Cecile-0.0.3 (c (n "Cecile") (v "0.0.3") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7.4") (d #t) (k 0)) (d (n "clap") (r "^4.4.10") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.1") (f (quote ("inline-more"))) (k 0)) (d (n "iota") (r "^0.2.3") (d #t) (k 0)) (d (n "lalrpop") (r "^0.20.0") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.20.0") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "logos") (r "^0.13.0") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.39") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "termcolor") (r "^1.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)))) (h "06l6jy7cbpwj7k539mw1ycr7qsrxzn8grr02zambr3la0pyxjsc4") (r "1.74")))

(define-public crate-Cecile-0.0.4 (c (n "Cecile") (v "0.0.4") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7.4") (d #t) (k 0)) (d (n "clap") (r "^4.4.10") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.1") (f (quote ("inline-more"))) (k 0)) (d (n "iota") (r "^0.2.3") (d #t) (k 0)) (d (n "lalrpop") (r "^0.20.0") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.20.0") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "logos") (r "^0.13.0") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.39") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "termcolor") (r "^1.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)))) (h "1dfky8x5ylh2b73jwx11al0mfnmc00q8ilbajvdjlbs7k3l092v2") (r "1.74")))

(define-public crate-Cecile-0.0.5 (c (n "Cecile") (v "0.0.5") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7.4") (d #t) (k 0)) (d (n "clap") (r "^4.4.10") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.1") (f (quote ("inline-more"))) (k 0)) (d (n "iota") (r "^0.2.3") (d #t) (k 0)) (d (n "lalrpop") (r "^0.20.0") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.20.0") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "logos") (r "^0.13.0") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.39") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "termcolor") (r "^1.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)))) (h "04rvvrqygry38wxis3pch8wy2r06ihlshq3xs2xz4hwikj557vg9") (r "1.74")))

(define-public crate-Cecile-0.0.6 (c (n "Cecile") (v "0.0.6") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7.4") (d #t) (k 0)) (d (n "clap") (r "^4.4.10") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.1") (f (quote ("inline-more"))) (k 0)) (d (n "iota") (r "^0.2.3") (d #t) (k 0)) (d (n "lalrpop") (r "^0.20.0") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.20.0") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "logos") (r "^0.13.0") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.39") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "termcolor") (r "^1.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)))) (h "1yjlw06fqgm6adyz5909f3kkqd95mcyqpznjry12l6bqmzqw233j") (r "1.74")))

(define-public crate-Cecile-0.0.7 (c (n "Cecile") (v "0.0.7") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7.4") (d #t) (k 0)) (d (n "clap") (r "^4.4.10") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.1") (f (quote ("inline-more"))) (k 0)) (d (n "iota") (r "^0.2.3") (d #t) (k 0)) (d (n "lalrpop") (r "^0.20.0") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.20.0") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "logos") (r "^0.13.0") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.39") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "termcolor") (r "^1.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)))) (h "1cps52waa61g8zi4b3l99fhn82arq48ggpmmafg3xz44vn08vd9b") (r "1.74")))

(define-public crate-Cecile-0.0.8 (c (n "Cecile") (v "0.0.8") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7.4") (d #t) (k 0)) (d (n "clap") (r "^4.4.10") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.1") (f (quote ("inline-more"))) (k 0)) (d (n "iota") (r "^0.2.3") (d #t) (k 0)) (d (n "lalrpop") (r "^0.20.0") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.20.0") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "logos") (r "^0.13.0") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.39") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "termcolor") (r "^1.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)))) (h "0fk56r67m8d3j5pxxnmhm7xxkkl72nn92xkcjgsky3diingppkgv") (r "1.74")))

(define-public crate-Cecile-0.0.9 (c (n "Cecile") (v "0.0.9") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7.4") (d #t) (k 0)) (d (n "clap") (r "^4.4.10") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.1") (f (quote ("inline-more"))) (k 0)) (d (n "iota") (r "^0.2.3") (d #t) (k 0)) (d (n "lalrpop") (r "^0.20.0") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.20.0") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "logos") (r "^0.13.0") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.39") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "termcolor") (r "^1.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)))) (h "1n7gr0by7q0xl0bs3my4f2ymmiairppiva2f00hp1ibp9a8wx76v") (r "1.74")))

(define-public crate-Cecile-0.1.0 (c (n "Cecile") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7.4") (d #t) (k 0)) (d (n "clap") (r "^4.4.10") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "dirs") (r "^5.0.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.1") (f (quote ("inline-more"))) (k 0)) (d (n "iota") (r "^0.2.3") (d #t) (k 0)) (d (n "lalrpop") (r "^0.20.0") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.20.0") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "logos") (r "^0.13.0") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.39") (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.47.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reedline") (r "^0.26.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "termcolor") (r "^1.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-highlight") (r "^0.20.1") (d #t) (k 0)))) (h "0rjylg9vldv4q8dsbp875x9rkdr614v9vb0mz51lmcs3gq5yxy9j") (r "1.74")))

(define-public crate-Cecile-0.1.1 (c (n "Cecile") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7.4") (d #t) (k 0)) (d (n "clap") (r "^4.4.10") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "dirs") (r "^5.0.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.1") (f (quote ("inline-more"))) (k 0)) (d (n "iota") (r "^0.2.3") (d #t) (k 0)) (d (n "lalrpop") (r "^0.20.0") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.20.0") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "logos") (r "^0.13.0") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.39") (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.47.0") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("cpp" "flamegraph" "prost-codec"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reedline") (r "^0.26.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "termcolor") (r "^1.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-highlight") (r "^0.20.1") (d #t) (k 0)))) (h "1a9kal412q4m2v43v9w76cjqxza63l584489m46c09p784h7q5ma") (s 2) (e (quote (("pprof" "dep:pprof")))) (r "1.74")))

(define-public crate-Cecile-0.1.2 (c (n "Cecile") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7.4") (d #t) (k 0)) (d (n "clap") (r "^4.4.10") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "dirs") (r "^5.0.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.1") (f (quote ("inline-more"))) (k 0)) (d (n "iota") (r "^0.2.3") (d #t) (k 0)) (d (n "lalrpop") (r "^0.20.0") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.20.0") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "logos") (r "^0.13.0") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.39") (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.47.0") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("cpp" "flamegraph" "prost-codec"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reedline") (r "^0.26.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "termcolor") (r "^1.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-highlight") (r "^0.20.1") (d #t) (k 0)))) (h "1bhsm4v1bilifqj66c53q72a3igra4zhi1j75xmkjcf7gfijyi0c") (s 2) (e (quote (("pprof" "dep:pprof")))) (r "1.74")))

(define-public crate-Cecile-0.1.3 (c (n "Cecile") (v "0.1.3") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7.4") (d #t) (k 0)) (d (n "clap") (r "^4.4.10") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "dirs") (r "^5.0.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.1") (f (quote ("inline-more"))) (k 0)) (d (n "iota") (r "^0.2.3") (d #t) (k 0)) (d (n "lalrpop") (r "^0.20.0") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.20.0") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "logos") (r "^0.13.0") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.39") (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.47.0") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("cpp" "flamegraph" "prost-codec"))) (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reedline") (r "^0.26.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "termcolor") (r "^1.2.0") (d #t) (k 0)) (d (n "test-generator") (r "^0.3.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-highlight") (r "^0.20.1") (d #t) (k 0)))) (h "0w27kv8a0v33hl9r2d356cqb96cq1aryj9cfr2qnxjmrxij7zp5n") (s 2) (e (quote (("pprof" "dep:pprof")))) (r "1.74")))

(define-public crate-Cecile-0.1.4 (c (n "Cecile") (v "0.1.4") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7.4") (d #t) (k 0)) (d (n "clap") (r "^4.4.10") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "dirs") (r "^5.0.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.1") (f (quote ("inline-more"))) (k 0)) (d (n "iota") (r "^0.2.3") (d #t) (k 0)) (d (n "lalrpop") (r "^0.20.0") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.20.0") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "logos") (r "^0.13.0") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.39") (d #t) (k 0)) (d (n "nu-ansi-term") (r "^0.47.0") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("cpp" "flamegraph" "prost-codec"))) (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reedline") (r "^0.26.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "termcolor") (r "^1.2.0") (d #t) (k 0)) (d (n "test-generator") (r "^0.3.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.4") (d #t) (k 0)) (d (n "tree-sitter-highlight") (r "^0.20.1") (d #t) (k 0)))) (h "1y0rk5lpb1nsysgrq1w0qqjfkiq3p4qsy763j5qw22706r79sa7q") (f (quote (("optimize")))) (s 2) (e (quote (("pprof" "dep:pprof")))) (r "1.74")))

(define-public crate-Cecile-0.1.5 (c (n "Cecile") (v "0.1.5") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7.4") (d #t) (k 0)) (d (n "clap") (r "^4.4.10") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "dirs") (r "^5.0.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.1") (f (quote ("inline-more"))) (k 0)) (d (n "iota") (r "^0.2.3") (d #t) (k 0)) (d (n "lalrpop") (r "^0.20.0") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.20.0") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "logos") (r "^0.13.0") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.27") (t "cfg(not(any(miri, target_family = \"wasm\")))") (k 0)) (d (n "nu-ansi-term") (r "^0.47.0") (o #t) (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("cpp" "flamegraph" "prost-codec"))) (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.6.5") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "reedline") (r "^0.26.0") (o #t) (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "termcolor") (r "^1.2.0") (d #t) (k 0)) (d (n "test-generator") (r "^0.3.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-highlight") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.67") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "067xz92wj078qvyb94372asql9drqiqh4p5nj2j04lg3114q7ad9") (f (quote (("optimize") ("default" "optimize" "repl")))) (s 2) (e (quote (("repl" "dep:dirs" "dep:nu-ansi-term" "dep:reedline" "dep:tree-sitter" "dep:tree-sitter-highlight") ("pprof" "dep:pprof")))) (r "1.74")))

(define-public crate-Cecile-0.1.6 (c (n "Cecile") (v "0.1.6") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7.4") (d #t) (k 0)) (d (n "clap") (r "^4.4.10") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "dirs") (r "^5.0.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.1") (f (quote ("inline-more"))) (k 0)) (d (n "iota") (r "^0.2.3") (d #t) (k 0)) (d (n "lalrpop") (r "^0.20.0") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.20.0") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "logos") (r "^0.13.0") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.27") (t "cfg(not(any(miri, target_family = \"wasm\")))") (k 0)) (d (n "nu-ansi-term") (r "^0.47.0") (o #t) (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("cpp" "flamegraph" "prost-codec"))) (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.6.5") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "reedline") (r "^0.26.0") (o #t) (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "termcolor") (r "^1.2.0") (d #t) (k 0)) (d (n "test-generator") (r "^0.3.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-highlight") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.67") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "0plmvflx1vi1kk65zwk65xlyaaya20xz2yy95j76v45ghyh0s66v") (f (quote (("optimize") ("default" "optimize" "repl")))) (s 2) (e (quote (("repl" "dep:dirs" "dep:nu-ansi-term" "dep:reedline" "dep:tree-sitter" "dep:tree-sitter-highlight") ("pprof" "dep:pprof")))) (r "1.74")))

(define-public crate-Cecile-0.1.7 (c (n "Cecile") (v "0.1.7") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7.4") (d #t) (k 0)) (d (n "clap") (r "^4.4.10") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "dirs") (r "^5.0.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.1") (f (quote ("inline-more"))) (k 0)) (d (n "iota") (r "^0.2.3") (d #t) (k 0)) (d (n "lalrpop") (r "^0.20.0") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.20.0") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "logos") (r "^0.13.0") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.27") (t "cfg(not(any(miri, target_family = \"wasm\")))") (k 0)) (d (n "nu-ansi-term") (r "^0.47.0") (o #t) (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("cpp" "flamegraph" "prost-codec"))) (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.6.5") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "reedline") (r "^0.26.0") (o #t) (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "termcolor") (r "^1.2.0") (d #t) (k 0)) (d (n "test-generator") (r "^0.3.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-highlight") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.67") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)))) (h "0pb81f0wi6wj9n9hlni6w8hmapa24xjm3hbq2nz582cwrjgbian2") (f (quote (("optimize") ("default" "optimize" "repl")))) (s 2) (e (quote (("repl" "dep:dirs" "dep:nu-ansi-term" "dep:reedline" "dep:tree-sitter" "dep:tree-sitter-highlight") ("pprof" "dep:pprof")))) (r "1.74")))

