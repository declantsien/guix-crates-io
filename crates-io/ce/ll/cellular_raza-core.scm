(define-module (crates-io ce ll cellular_raza-core) #:use-module (crates-io))

(define-public crate-cellular_raza-core-0.0.4 (c (n "cellular_raza-core") (v "0.0.4") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "cellular_raza-concepts") (r "^0.0.4") (d #t) (k 0)) (d (n "cellular_raza-core-derive") (r "^0.0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (o #t) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "hurdles") (r "^1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "kdam") (r "^0.5") (f (quote ("template"))) (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "plotters") (r "^0.3") (d #t) (k 0)) (d (n "quick-xml") (r "^0.28") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sled") (r "^0.34") (d #t) (k 0)))) (h "1zdgk2rj6k96npr0awb9z624mv5kg815m4ch9ms1s6h9zwm0i5hc") (f (quote (("gradients") ("default" "gradients" "timestamp")))) (y #t) (s 2) (e (quote (("timestamp" "dep:chrono"))))))

(define-public crate-cellular_raza-core-0.0.5 (c (n "cellular_raza-core") (v "0.0.5") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "cellular_raza-concepts") (r "^0.0.5") (d #t) (k 0)) (d (n "cellular_raza-core-derive") (r "^0.0.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (o #t) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "hurdles") (r "^1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "kdam") (r "^0.5") (f (quote ("template"))) (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "plotters") (r "^0.3") (d #t) (k 0)) (d (n "quick-xml") (r "^0.28") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sled") (r "^0.34") (d #t) (k 0)))) (h "121zknqa4qgwcm9wy46j3id6v17wjam15y1c9k4ibwl55nrm111w") (f (quote (("gradients") ("default" "gradients" "timestamp")))) (s 2) (e (quote (("timestamp" "dep:chrono"))))))

(define-public crate-cellular_raza-core-0.0.6 (c (n "cellular_raza-core") (v "0.0.6") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "cellular_raza-concepts") (r "^0.0.6") (d #t) (k 0)) (d (n "cellular_raza-core-proc-macro") (r "^0.0.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (o #t) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "hurdles") (r "^1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "kdam") (r "^0.5") (f (quote ("template"))) (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "plotters") (r "^0.3") (d #t) (k 0)) (d (n "quick-xml") (r "^0.28") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sled") (r "^0.34") (d #t) (k 0)))) (h "05g23zpy30sz8criazpvm5zgjj5lyyv0px80zkfy1j784nmcznvm") (f (quote (("gradients") ("default" "gradients" "timestamp")))) (s 2) (e (quote (("timestamp" "dep:chrono"))))))

(define-public crate-cellular_raza-core-0.0.7 (c (n "cellular_raza-core") (v "0.0.7") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "cellular_raza-concepts") (r "^0.0.6") (d #t) (k 0)) (d (n "cellular_raza-core-proc-macro") (r "^0.0.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (o #t) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "hurdles") (r "^1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "kdam") (r "^0.5") (f (quote ("template"))) (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "plotters") (r "^0.3") (d #t) (k 0)) (d (n "quick-xml") (r "^0.28") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (o #t) (d #t) (k 0)))) (h "191axk89aymw9c86825h4ci4d9qiky0l6w89m9fa6hhb2xfvl8nd") (f (quote (("gradients" "cellular_raza-concepts/gradients") ("default" "gradients" "timestamp")))) (s 2) (e (quote (("tracing" "dep:tracing" "dep:tracing-subscriber") ("timestamp" "dep:chrono"))))))

(define-public crate-cellular_raza-core-0.0.8 (c (n "cellular_raza-core") (v "0.0.8") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "cellular_raza-concepts") (r "^0.0.8") (d #t) (k 0)) (d (n "cellular_raza-core-proc-macro") (r "^0.0.8") (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (o #t) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "hurdles") (r "^1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "kdam") (r "^0.5") (f (quote ("template"))) (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "plotters") (r "^0.3") (f (quote ("bitmap_backend" "bitmap_encoder" "bitmap_gif" "svg_backend" "chrono" "image" "deprecated_items" "all_series" "all_elements" "full_palette" "colormaps"))) (k 0)) (d (n "quick-xml") (r "^0.28") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (o #t) (d #t) (k 0)))) (h "0hwlf51bfgbzxp5vjp67mls5hw5y5ypjfk9rcmmbsfc1z5x928gl") (f (quote (("gradients" "cellular_raza-concepts/gradients") ("default" "gradients" "timestamp")))) (s 2) (e (quote (("tracing" "dep:tracing" "dep:tracing-subscriber") ("timestamp" "dep:chrono"))))))

