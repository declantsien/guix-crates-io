(define-module (crates-io ce ll cellular_raza) #:use-module (crates-io))

(define-public crate-cellular_raza-0.0.1 (c (n "cellular_raza") (v "0.0.1") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "hurdles") (r "^1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "nalgebra") (r "^0.31") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "ode_integrate") (r "^0.0.2") (d #t) (k 0)) (d (n "plotters") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "uuid") (r "^1.2") (d #t) (k 0)))) (h "0ajgxdjm9jm6c06r4b6ikz08k0j40dafmccfh01n3ys3h3avk6qj") (y #t)))

(define-public crate-cellular_raza-0.0.2 (c (n "cellular_raza") (v "0.0.2") (d (list (d (n "async-std") (r "^1.12") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "hurdles") (r "^1.0") (d #t) (k 0)) (d (n "indicatif") (r "^0.17") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "ode_integrate") (r "^0.0.2") (d #t) (k 0)) (d (n "plotters") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "sled") (r "^0.34") (o #t) (d #t) (k 0)) (d (n "typed-sled") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1k0bjw2rdykgr9phmkpzdjcbb4wfh4wdpyh5h2brjsqcwbnkp4km") (f (quote (("test_exhaustive") ("no_fluid_mechanics") ("no_db") ("default" "db_sled") ("db_json_dump")))) (y #t) (s 2) (e (quote (("db_sled" "dep:sled" "dep:typed-sled"))))))

(define-public crate-cellular_raza-0.0.3 (c (n "cellular_raza") (v "0.0.3") (d (list (d (n "async-std") (r "^1.12") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "hurdles") (r "^1.0") (d #t) (k 0)) (d (n "indicatif") (r "^0.17") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "ode_integrate") (r "^0.0.2") (d #t) (k 0)) (d (n "plotters") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "sled") (r "^0.34") (o #t) (d #t) (k 0)) (d (n "typed-sled") (r "^0.2") (o #t) (d #t) (k 0)))) (h "0792fl207612va16gr68581r8yf6i8vf5dmvxam7di9a3ni3dqxr") (f (quote (("test_exhaustive") ("no_gradients") ("no_fluid_mechanics") ("no_db") ("default" "db_sled") ("db_json_dump")))) (y #t) (s 2) (e (quote (("db_sled" "dep:sled" "dep:typed-sled"))))))

(define-public crate-cellular_raza-0.0.4 (c (n "cellular_raza") (v "0.0.4") (d (list (d (n "cellular_raza-building-blocks") (r "^0.0.4") (d #t) (k 0)) (d (n "cellular_raza-concepts") (r "^0.0.4") (d #t) (k 0)) (d (n "cellular_raza-concepts-derive") (r "^0.0.4") (d #t) (k 0)) (d (n "cellular_raza-core") (r "^0.0.4") (d #t) (k 0)) (d (n "cellular_raza-core-derive") (r "^0.0.4") (d #t) (k 0)))) (h "0rnzbh2hazij21q2ypvc73nk0jiqq7qz4q8i5f8kcb3l831h3zcf") (f (quote (("pyo3" "cellular_raza-building-blocks/pyo3") ("gradients") ("default" "gradients")))) (y #t)))

(define-public crate-cellular_raza-0.0.5 (c (n "cellular_raza") (v "0.0.5") (d (list (d (n "cellular_raza-building-blocks") (r "^0.0.5") (d #t) (k 0)) (d (n "cellular_raza-concepts") (r "^0.0.5") (d #t) (k 0)) (d (n "cellular_raza-concepts-derive") (r "^0.0.5") (d #t) (k 0)) (d (n "cellular_raza-core") (r "^0.0.5") (d #t) (k 0)) (d (n "cellular_raza-core-derive") (r "^0.0.5") (d #t) (k 0)))) (h "1cdic0c0ki4zgpj1q23cwnwqfh8iwc9a1yf9v8d3lvfrzs76i54z") (f (quote (("pyo3" "cellular_raza-building-blocks/pyo3") ("gradients") ("default" "gradients"))))))

(define-public crate-cellular_raza-0.0.6 (c (n "cellular_raza") (v "0.0.6") (d (list (d (n "cellular_raza-building-blocks") (r "^0.0.6") (d #t) (k 0)) (d (n "cellular_raza-concepts") (r "^0.0.6") (d #t) (k 0)) (d (n "cellular_raza-concepts-derive") (r "^0.0.6") (d #t) (k 0)) (d (n "cellular_raza-core") (r "^0.0.6") (d #t) (k 0)))) (h "1cbjicb3jga0x39ywmbigdxabjb5l4q037ns5zk6ff6s5a8ydgaz") (f (quote (("pyo3" "cellular_raza-building-blocks/pyo3") ("gradients") ("default" "gradients"))))))

(define-public crate-cellular_raza-0.0.8 (c (n "cellular_raza") (v "0.0.8") (d (list (d (n "cellular_raza-building-blocks") (r "^0.0.8") (d #t) (k 0)) (d (n "cellular_raza-concepts") (r "^0.0.8") (d #t) (k 0)) (d (n "cellular_raza-core") (r "^0.0.8") (d #t) (k 0)))) (h "0kwpdhdkw81bj16jrp725rs9mdzsacijx2v6q833m6zb0yr79grd") (f (quote (("tracing" "cellular_raza-core/tracing") ("timestamp" "cellular_raza-core/timestamp") ("pyo3" "cellular_raza-building-blocks/pyo3") ("gradients" "cellular_raza-concepts/gradients" "cellular_raza-core/gradients" "cellular_raza-building-blocks/gradients") ("default" "gradients"))))))

(define-public crate-cellular_raza-0.0.9 (c (n "cellular_raza") (v "0.0.9") (d (list (d (n "cellular_raza-building-blocks") (r "^0.0.9") (d #t) (k 0)) (d (n "cellular_raza-concepts") (r "^0.0.9") (d #t) (k 0)) (d (n "cellular_raza-core") (r "^0.0.9") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (f (quote ("serde-serialize" "rand"))) (d #t) (k 2)) (d (n "num") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (f (quote ("serde1"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "1yzj73addwkzka9h0z4b02y2icbrr4akf7qq2sb7hlb8dk6gpwg7") (f (quote (("tracing" "cellular_raza-core/tracing") ("timestamp" "cellular_raza-core/timestamp") ("pyo3" "cellular_raza-building-blocks/pyo3" "cellular_raza-core/pyo3") ("gradients" "cellular_raza-concepts/gradients" "cellular_raza-core/gradients" "cellular_raza-building-blocks/gradients") ("default" "gradients"))))))

