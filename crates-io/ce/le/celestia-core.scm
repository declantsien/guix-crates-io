(define-module (crates-io ce le celestia-core) #:use-module (crates-io))

(define-public crate-celestia-core-0.34.0 (c (n "celestia-core") (v "0.34.0") (d (list (d (n "bytes") (r "^1.2") (f (quote ("serde"))) (k 0)) (d (n "celestia-core-proto") (r "^0.34.0") (k 0)) (d (n "digest") (r "^0.10") (k 0)) (d (n "ed25519") (r "^2") (f (quote ("alloc"))) (k 0)) (d (n "ed25519-consensus") (r "^2") (o #t) (k 0)) (d (n "flex-error") (r "^0.4.4") (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "instant") (r "^0.1") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "k256") (r "^0.13") (f (quote ("alloc" "ecdsa"))) (o #t) (k 0)) (d (n "k256") (r "^0.13") (f (quote ("ecdsa"))) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "once_cell") (r "^1.3") (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "prost") (r "^0.12") (k 0)) (d (n "prost-types") (r "^0.12") (k 0)) (d (n "ripemd") (r "^0.1.3") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11") (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "serde_repr") (r "^0.1") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "signature") (r "^2") (f (quote ("alloc"))) (k 0)) (d (n "subtle") (r "^2") (k 0)) (d (n "subtle-encoding") (r "^0.5") (f (quote ("bech32-preview"))) (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros" "parsing"))) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive" "alloc"))) (k 0)))) (h "07vig0mq56564bpaqap2k6pgvwflp56z8315bfkz1ybyky72cib6") (f (quote (("wasm-bindgen" "instant/wasm-bindgen") ("std" "flex-error/std" "flex-error/eyre_tracer" "clock") ("secp256k1" "k256" "ripemd") ("rust-crypto" "sha2" "ed25519-consensus") ("default" "std" "rust-crypto") ("clock" "time/std"))))))

