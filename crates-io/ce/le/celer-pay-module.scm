(define-module (crates-io ce le celer-pay-module) #:use-module (crates-io))

(define-public crate-celer-pay-module-0.8.8 (c (n "celer-pay-module") (v "0.8.8") (d (list (d (n "celer-pay-module-rpc-runtime-api") (r "^0.8.8") (k 0)) (d (n "codec") (r "^1.3.4") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-support") (r "^2.0.0") (k 0)) (d (n "frame-system") (r "^2.0.0") (k 0)) (d (n "mock-boolean-condition") (r "^0.8.8") (k 2)) (d (n "mock-numeric-condition") (r "^0.8.8") (k 0)) (d (n "pallet-balances") (r "^2.0.0") (k 0)) (d (n "pallet-timestamp") (r "^2.0.0") (k 0)) (d (n "serde") (r "^1.0.106") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sp-core") (r "^2.0.0") (k 0)) (d (n "sp-io") (r "^2.0.0") (k 0)) (d (n "sp-runtime") (r "^2.0.0") (k 0)) (d (n "sp-std") (r "^2.0.0") (k 0)))) (h "1hw39w4xwvl4w0j1lx48pc8dxk0717624qzw8x3lbi7fbrjm6jkc") (f (quote (("std" "codec/std" "serde" "sp-io/std" "sp-core/std" "sp-std/std" "sp-runtime/std" "frame-support/std" "frame-system/std" "pallet-balances/std" "pallet-timestamp/std" "mock-numeric-condition/std" "celer-pay-module-rpc-runtime-api/std") ("default" "std"))))))

