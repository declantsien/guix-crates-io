(define-module (crates-io ce le celestia-types) #:use-module (crates-io))

(define-public crate-celestia-types-0.1.0 (c (n "celestia-types") (v "0.1.0") (d (list (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "bech32") (r "^0.9.1") (d #t) (k 0)) (d (n "blockstore") (r "^0.1.0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "celestia-proto") (r "^0.1.0") (d #t) (k 0)) (d (n "celestia-tendermint") (r "^0.32.0") (f (quote ("std" "rust-crypto"))) (k 0)) (d (n "celestia-tendermint-proto") (r "^0.32.0") (d #t) (k 0)) (d (n "cid") (r "^0.11") (f (quote ("std"))) (k 0)) (d (n "const_format") (r "^0.2.31") (d #t) (k 0)) (d (n "ed25519-consensus") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "ed25519-consensus") (r "^2.1.0") (d #t) (k 2)) (d (n "enum_dispatch") (r "^0.3.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "indoc") (r "^2.0.4") (d #t) (k 2)) (d (n "libp2p-identity") (r "^0.2.7") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "multihash") (r "^0.19.1") (d #t) (k 0)) (d (n "nmt-rs") (r "^0.1.0") (d #t) (k 0)) (d (n "proptest") (r "^1.2.0") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ruint") (r "^1.8.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.97") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0zvmc99knfd4v51h2hbgh69fkk98yafn1h80g63z6gqqgkkkhsaz") (f (quote (("wasm-bindgen" "celestia-tendermint/wasm-bindgen") ("default" "p2p")))) (s 2) (e (quote (("test-utils" "dep:ed25519-consensus" "dep:rand") ("p2p" "dep:libp2p-identity" "dep:multiaddr" "dep:serde_repr"))))))

(define-public crate-celestia-types-0.1.1 (c (n "celestia-types") (v "0.1.1") (d (list (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "bech32") (r "^0.9.1") (d #t) (k 0)) (d (n "blockstore") (r "^0.1.0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "celestia-proto") (r "^0.1.0") (d #t) (k 0)) (d (n "celestia-tendermint") (r "^0.32.1") (f (quote ("std" "rust-crypto"))) (k 0)) (d (n "celestia-tendermint-proto") (r "^0.32.1") (d #t) (k 0)) (d (n "cid") (r "^0.11") (f (quote ("std"))) (k 0)) (d (n "const_format") (r "^0.2.31") (d #t) (k 0)) (d (n "ed25519-consensus") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "ed25519-consensus") (r "^2.1.0") (d #t) (k 2)) (d (n "enum_dispatch") (r "^0.3.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "indoc") (r "^2.0.4") (d #t) (k 2)) (d (n "libp2p-identity") (r "^0.2.7") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "multihash") (r "^0.19.1") (d #t) (k 0)) (d (n "nmt-rs") (r "^0.1.0") (d #t) (k 0)) (d (n "proptest") (r "^1.2.0") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ruint") (r "^1.8.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.97") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1sr4ivwca367dax3dlqica36l5gmiji3chn02nrjaw95k1k4qg7w") (f (quote (("wasm-bindgen" "celestia-tendermint/wasm-bindgen") ("default" "p2p")))) (s 2) (e (quote (("test-utils" "dep:ed25519-consensus" "dep:rand") ("p2p" "dep:libp2p-identity" "dep:multiaddr" "dep:serde_repr"))))))

(define-public crate-celestia-types-0.2.0 (c (n "celestia-types") (v "0.2.0") (d (list (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "bech32") (r "^0.9.1") (d #t) (k 0)) (d (n "blockstore") (r "^0.5") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "celestia-proto") (r "^0.2.0") (d #t) (k 0)) (d (n "celestia-tendermint") (r "^0.32.1") (f (quote ("std" "rust-crypto"))) (k 0)) (d (n "celestia-tendermint-proto") (r "^0.32.1") (d #t) (k 0)) (d (n "cid") (r "^0.11") (f (quote ("std"))) (k 0)) (d (n "const_format") (r "^0.2.31") (d #t) (k 0)) (d (n "ed25519-consensus") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "ed25519-consensus") (r "^2.1.0") (d #t) (k 2)) (d (n "enum_dispatch") (r "^0.3.12") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.10") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "indoc") (r "^2.0.4") (d #t) (k 2)) (d (n "leopard-codec") (r "^0.1") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (o #t) (d #t) (k 0)) (d (n "multiaddr") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "multihash") (r "^0.19.1") (d #t) (k 0)) (d (n "nmt-rs") (r "^0.1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "ruint") (r "^1.8.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.97") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "09xlf2qsr5skwfa215apcyr3in3vnplwphk97j5fqc9192dcw3g2") (f (quote (("wasm-bindgen" "celestia-tendermint/wasm-bindgen") ("default" "p2p")))) (s 2) (e (quote (("test-utils" "dep:ed25519-consensus" "dep:rand") ("p2p" "dep:libp2p-identity" "dep:multiaddr" "dep:serde_repr"))))))

