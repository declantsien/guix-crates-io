(define-module (crates-io nv im nvim-oxi) #:use-module (crates-io))

(define-public crate-nvim-oxi-0.1.0 (c (n "nvim-oxi") (v "0.1.0") (d (list (d (n "derive_builder") (r "^0.11") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nvim-types") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 0)) (d (n "oxi-module") (r "^0.1") (d #t) (k 0)) (d (n "oxi-test") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "121s1hmzg24c61n2yl1l99p7x9ysg5qf1b18xa8gsnjaiggzd3zx") (f (quote (("nightly")))) (s 2) (e (quote (("test" "dep:oxi-test")))) (r "1.62")))

(define-public crate-nvim-oxi-0.1.1 (c (n "nvim-oxi") (v "0.1.1") (d (list (d (n "derive_builder") (r "^0.11") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nvim-types") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 0)) (d (n "oxi-module") (r "^0.1") (d #t) (k 0)) (d (n "oxi-test") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1mbbkz8nkij4knz51nqshrzjcg7n3yi7cdvnvzwpl3llprvwvrpa") (f (quote (("nightly")))) (s 2) (e (quote (("test" "dep:oxi-test")))) (r "1.62")))

(define-public crate-nvim-oxi-0.1.2 (c (n "nvim-oxi") (v "0.1.2") (d (list (d (n "derive_builder") (r "^0.11") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nvim-types") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 0)) (d (n "oxi-module") (r "^0.1") (d #t) (k 0)) (d (n "oxi-test") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1z6sivajplc2ji4kdgrkhb2y09y847mlj9g8y4w9ygchpl5cq9nr") (f (quote (("nightly")))) (s 2) (e (quote (("test" "dep:oxi-test")))) (r "1.62")))

(define-public crate-nvim-oxi-0.1.3 (c (n "nvim-oxi") (v "0.1.3") (d (list (d (n "derive_builder") (r "^0.11") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nvim-types") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 0)) (d (n "oxi-module") (r "^0.1") (d #t) (k 0)) (d (n "oxi-test") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1m6wy2d87cd47wgb23byj9vpfbr9cllj8jp64pq45cqy7a9936c9") (f (quote (("nightly")))) (s 2) (e (quote (("test" "dep:oxi-test")))) (r "1.62")))

(define-public crate-nvim-oxi-0.2.0 (c (n "nvim-oxi") (v "0.2.0") (d (list (d (n "libuv-bindings") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "luajit-bindings") (r "^0.2.0") (d #t) (k 0)) (d (n "mlua") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "mlua") (r "^0.8") (f (quote ("luajit" "module" "vendored"))) (d #t) (k 2)) (d (n "nvim-api") (r "^0.2.0") (d #t) (k 0)) (d (n "nvim-types") (r "^0.2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "oxi-module") (r "^0.2.0") (d #t) (k 0)) (d (n "oxi-test") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 2)))) (h "023y2ydwi0fvdrbk2w1945zw3ayhwligvl2p84haigvikndmwjg6") (f (quote (("test" "oxi-test") ("neovim-nightly" "nvim-types/neovim-nightly" "nvim-api/neovim-nightly") ("neovim-0-8" "nvim-types/neovim-0-8" "nvim-api/neovim-0-8") ("neovim-0-7" "nvim-types/neovim-0-7" "nvim-api/neovim-0-7") ("libuv" "libuv-bindings") ("default" "neovim-0-8")))) (s 2) (e (quote (("mlua" "dep:mlua")))) (r "1.62")))

(define-public crate-nvim-oxi-0.2.1 (c (n "nvim-oxi") (v "0.2.1") (d (list (d (n "libuv-bindings") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "luajit-bindings") (r "^0.2.0") (d #t) (k 0)) (d (n "mlua") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "mlua") (r "^0.8") (f (quote ("luajit" "module" "vendored"))) (d #t) (k 2)) (d (n "nvim-api") (r "^0.2.0") (d #t) (k 0)) (d (n "nvim-types") (r "^0.2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "oxi-module") (r "^0.2.0") (d #t) (k 0)) (d (n "oxi-test") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 2)))) (h "1za45mfpx9bbhdimxdspfqb9v2svxpmr1ic2pp6z8dgygkq3mkm5") (f (quote (("test" "oxi-test") ("neovim-nightly" "nvim-types/neovim-nightly" "nvim-api/neovim-nightly") ("neovim-0-8" "nvim-types/neovim-0-8" "nvim-api/neovim-0-8") ("neovim-0-7" "nvim-types/neovim-0-7" "nvim-api/neovim-0-7") ("libuv" "libuv-bindings")))) (s 2) (e (quote (("mlua" "dep:mlua")))) (r "1.62")))

(define-public crate-nvim-oxi-0.2.2 (c (n "nvim-oxi") (v "0.2.2") (d (list (d (n "libuv-bindings") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "luajit-bindings") (r "^0.2.0") (d #t) (k 0)) (d (n "mlua") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "mlua") (r "^0.8") (f (quote ("luajit" "module" "vendored"))) (d #t) (k 2)) (d (n "nvim-api") (r "^0.2.0") (d #t) (k 0)) (d (n "nvim-types") (r "^0.2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "oxi-module") (r "^0.2.0") (d #t) (k 0)) (d (n "oxi-test") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 2)))) (h "1cdc9cm9idl70h053b0sp9mcw1lcmy72cyqk178m55g3i8kw33wi") (f (quote (("test" "oxi-test") ("neovim-nightly" "nvim-types/neovim-nightly" "nvim-api/neovim-nightly") ("neovim-0-8" "nvim-types/neovim-0-8" "nvim-api/neovim-0-8") ("neovim-0-7" "nvim-types/neovim-0-7" "nvim-api/neovim-0-7") ("libuv" "libuv-bindings")))) (s 2) (e (quote (("mlua" "dep:mlua")))) (r "1.62")))

(define-public crate-nvim-oxi-0.3.0 (c (n "nvim-oxi") (v "0.3.0") (d (list (d (n "miniserde") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "mlua") (r "^0.8") (f (quote ("luajit"))) (o #t) (d #t) (k 0)) (d (n "mlua") (r "^0.8") (f (quote ("luajit" "module" "vendored"))) (d #t) (k 2)) (d (n "oxi-api") (r "^0.3.0") (d #t) (k 0)) (d (n "oxi-libuv") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "oxi-luajit") (r "^0.3.0") (d #t) (k 0)) (d (n "oxi-macros") (r "^0.3.0") (f (quote ("module"))) (d #t) (k 0)) (d (n "oxi-types") (r "^0.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 2)))) (h "0qchhafgxnbvi2l0ah7j3x4z31rvi3rvxc6d99v4zmlfb3q3n3yi") (f (quote (("test" "oxi-macros/test" "miniserde") ("neovim-nightly" "oxi-api/neovim-nightly") ("neovim-0-9" "oxi-api/neovim-0-9") ("neovim-0-8" "oxi-api/neovim-0-8") ("libuv" "oxi-libuv")))) (s 2) (e (quote (("mlua" "dep:mlua"))))))

(define-public crate-nvim-oxi-0.4.0 (c (n "nvim-oxi") (v "0.4.0") (d (list (d (n "miniserde") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "mlua") (r "^0.9") (f (quote ("luajit"))) (o #t) (d #t) (k 0)) (d (n "mlua") (r "^0.9") (f (quote ("luajit" "module" "vendored"))) (d #t) (k 2)) (d (n "oxi-api") (r "^0.4.0") (d #t) (k 0)) (d (n "oxi-libuv") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "oxi-luajit") (r "^0.4.0") (d #t) (k 0)) (d (n "oxi-macros") (r "^0.4.0") (f (quote ("module"))) (d #t) (k 0)) (d (n "oxi-types") (r "^0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 2)))) (h "0w2gsfw2qdjpvqkf7r5wmzn29h5hgbcll78w3ysvr82h8n1d8574") (f (quote (("test" "oxi-macros/test" "miniserde") ("neovim-nightly" "oxi-api/neovim-nightly" "oxi-libuv/use-1-46") ("neovim-0-9" "oxi-api/neovim-0-9" "oxi-libuv/use-1-46") ("neovim-0-8" "oxi-api/neovim-0-8" "oxi-libuv/use-1-44") ("libuv" "oxi-libuv")))) (s 2) (e (quote (("mlua" "dep:mlua"))))))

(define-public crate-nvim-oxi-0.4.1 (c (n "nvim-oxi") (v "0.4.1") (d (list (d (n "miniserde") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "mlua") (r "^0.9") (f (quote ("luajit"))) (o #t) (d #t) (k 0)) (d (n "mlua") (r "^0.9") (f (quote ("luajit" "module"))) (d #t) (k 2)) (d (n "oxi-api") (r "^0.4.1") (d #t) (k 0)) (d (n "oxi-libuv") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "oxi-luajit") (r "^0.4.1") (d #t) (k 0)) (d (n "oxi-macros") (r "^0.4.1") (f (quote ("module"))) (d #t) (k 0)) (d (n "oxi-types") (r "^0.4.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 2)))) (h "0iwxzdvh9vsmymnm2w2y76czdrzyi0ic3015lxw4df6m0m7a4b3h") (f (quote (("test" "oxi-macros/test" "miniserde") ("neovim-nightly" "oxi-api/neovim-nightly" "oxi-libuv/use-1-46") ("neovim-0-9" "oxi-api/neovim-0-9" "oxi-libuv/use-1-46") ("neovim-0-8" "oxi-api/neovim-0-8" "oxi-libuv/use-1-44") ("libuv" "oxi-libuv")))) (s 2) (e (quote (("mlua" "dep:mlua"))))))

(define-public crate-nvim-oxi-0.4.2 (c (n "nvim-oxi") (v "0.4.2") (d (list (d (n "miniserde") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "mlua") (r "^0.9") (f (quote ("luajit"))) (o #t) (d #t) (k 0)) (d (n "mlua") (r "^0.9") (f (quote ("luajit" "module"))) (d #t) (k 2)) (d (n "oxi-api") (r "^0.4.2") (d #t) (k 0)) (d (n "oxi-libuv") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "oxi-luajit") (r "^0.4.2") (d #t) (k 0)) (d (n "oxi-macros") (r "^0.4.2") (f (quote ("module"))) (d #t) (k 0)) (d (n "oxi-types") (r "^0.4.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 2)))) (h "124x2x525db822h0mkr519qqvd5sxbspcsqp5lz07hcs1grsxjan") (f (quote (("test" "oxi-macros/test" "miniserde") ("neovim-nightly" "oxi-api/neovim-nightly" "oxi-libuv/use-1-46") ("neovim-0-9" "oxi-api/neovim-0-9" "oxi-libuv/use-1-46") ("neovim-0-8" "oxi-api/neovim-0-8" "oxi-libuv/use-1-44") ("libuv" "oxi-libuv") ("__vendored_luajit" "mlua/vendored")))) (s 2) (e (quote (("mlua" "dep:mlua"))))))

(define-public crate-nvim-oxi-0.5.0 (c (n "nvim-oxi") (v "0.5.0") (d (list (d (n "api") (r "^0.5.0") (d #t) (k 0) (p "nvim-oxi-api")) (d (n "libuv") (r "^0.5.0") (o #t) (d #t) (k 0) (p "nvim-oxi-libuv")) (d (n "luajit") (r "^0.5.0") (d #t) (k 0) (p "nvim-oxi-luajit")) (d (n "macros") (r "^0.5.0") (f (quote ("plugin"))) (d #t) (k 0) (p "nvim-oxi-macros")) (d (n "miniserde") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "mlua") (r "^0.9") (f (quote ("luajit"))) (o #t) (d #t) (k 0)) (d (n "mlua") (r "^0.9") (f (quote ("luajit" "module"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "types") (r "^0.5.0") (f (quote ("serde"))) (d #t) (k 0) (p "nvim-oxi-types")))) (h "1zji9c3xl0jll9472m68m4xbw8hh4l0icpgl3jiwj1w1md8ckk09") (f (quote (("test-terminator" "test" "libuv" "macros/test-terminator") ("test" "macros/test" "miniserde") ("neovim-nightly" "api/neovim-nightly") ("neovim-0-9" "api/neovim-0-9") ("neovim-0-10" "api/neovim-0-10") ("__vendored_luajit" "mlua/vendored")))) (s 2) (e (quote (("mlua" "dep:mlua") ("libuv" "dep:libuv"))))))

