(define-module (crates-io ms iz msiz_rustc-ap-syntax) #:use-module (crates-io))

(define-public crate-msiz_rustc-ap-syntax-1.0.0 (c (n "msiz_rustc-ap-syntax") (v "1.0.0") (d (list (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "errors") (r "^1.0.0") (d #t) (k 0) (p "msiz_rustc-ap-rustc_errors")) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rustc_data_structures") (r "^1.0.0") (d #t) (k 0) (p "msiz_rustc-ap-rustc_data_structures")) (d (n "rustc_lexer") (r "^1.0.0") (d #t) (k 0) (p "msiz_rustc-ap-rustc_lexer")) (d (n "rustc_macros") (r "^1.0.0") (d #t) (k 0) (p "msiz_rustc-ap-rustc_macros")) (d (n "rustc_serialize") (r "^1.0.0") (d #t) (k 0) (p "msiz_rustc-ap-serialize")) (d (n "rustc_target") (r "^1.0.0") (d #t) (k 0) (p "msiz_rustc-ap-rustc_target")) (d (n "scoped-tls") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^0.6.7") (f (quote ("union" "may_dangle"))) (d #t) (k 0)) (d (n "syntax_pos") (r "^1.0.0") (d #t) (k 0) (p "msiz_rustc-ap-syntax_pos")))) (h "044f341xdndklp4m5n883qn4y1cacf2a5668lvf5w1aaywc2hfvr")))

(define-public crate-msiz_rustc-ap-syntax-2.0.0 (c (n "msiz_rustc-ap-syntax") (v "2.0.0") (d (list (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "errors") (r "^2.0.0") (d #t) (k 0) (p "msiz_rustc-ap-rustc_errors")) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rustc_data_structures") (r "^2.0.0") (d #t) (k 0) (p "msiz_rustc-ap-rustc_data_structures")) (d (n "rustc_lexer") (r "^2.0.0") (d #t) (k 0) (p "msiz_rustc-ap-rustc_lexer")) (d (n "rustc_macros") (r "^2.0.0") (d #t) (k 0) (p "msiz_rustc-ap-rustc_macros")) (d (n "rustc_serialize") (r "^2.0.0") (d #t) (k 0) (p "msiz_rustc-ap-serialize")) (d (n "rustc_target") (r "^2.0.0") (d #t) (k 0) (p "msiz_rustc-ap-rustc_target")) (d (n "scoped-tls") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^0.6.7") (f (quote ("union" "may_dangle"))) (d #t) (k 0)) (d (n "syntax_pos") (r "^2.0.0") (d #t) (k 0) (p "msiz_rustc-ap-syntax_pos")))) (h "09il0v1f9ffkn99qf203dphjgh47dyin838wj5x3zjh8ildjjp91")))

(define-public crate-msiz_rustc-ap-syntax-3.0.0 (c (n "msiz_rustc-ap-syntax") (v "3.0.0") (d (list (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "errors") (r "^3.0.0") (d #t) (k 0) (p "msiz_rustc-ap-rustc_errors")) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rustc_data_structures") (r "^3.0.0") (d #t) (k 0) (p "msiz_rustc-ap-rustc_data_structures")) (d (n "rustc_lexer") (r "^3.0.0") (d #t) (k 0) (p "msiz_rustc-ap-rustc_lexer")) (d (n "rustc_macros") (r "^3.0.0") (d #t) (k 0) (p "msiz_rustc-ap-rustc_macros")) (d (n "rustc_serialize") (r "^3.0.0") (d #t) (k 0) (p "msiz_rustc-ap-serialize")) (d (n "rustc_target") (r "^3.0.0") (d #t) (k 0) (p "msiz_rustc-ap-rustc_target")) (d (n "scoped-tls") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^0.6.7") (f (quote ("union" "may_dangle"))) (d #t) (k 0)) (d (n "syntax_pos") (r "^3.0.0") (d #t) (k 0) (p "msiz_rustc-ap-syntax_pos")))) (h "1bwjrmadshbid47khn38vifwj9qbylc8zqahin2h2xqzhyb6d6fi")))

