(define-module (crates-io ms iz msiz_rustc-ap-rustc_data_structures) #:use-module (crates-io))

(define-public crate-msiz_rustc-ap-rustc_data_structures-1.0.0 (c (n "msiz_rustc-ap-rustc_data_structures") (v "1.0.0") (d (list (d (n "cfg-if") (r "^0.1.2") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.6.5") (f (quote ("nightly"))) (d #t) (k 0)) (d (n "ena") (r "^0.13") (d #t) (k 0)) (d (n "graphviz") (r "^1.0.0") (d #t) (k 0) (p "msiz_rustc-ap-graphviz")) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "jobserver_crate") (r "^0.1.13") (d #t) (k 0) (p "jobserver")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.7") (f (quote ("nightly"))) (d #t) (k 0)) (d (n "rayon") (r "^0.2.0") (d #t) (k 0) (p "rustc-rayon")) (d (n "rayon-core") (r "^0.2.0") (d #t) (k 0) (p "rustc-rayon-core")) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "rustc_serialize") (r "^1.0.0") (d #t) (k 0) (p "msiz_rustc-ap-serialize")) (d (n "smallvec") (r "^0.6.7") (f (quote ("union" "may_dangle"))) (d #t) (k 0)) (d (n "stable_deref_trait") (r "^1.0.0") (d #t) (k 0)))) (h "0frkclvwx7gxjvj7yj6dc90nbpvhv2isnqd8zkqrchdnyfzkpbcx")))

(define-public crate-msiz_rustc-ap-rustc_data_structures-2.0.0 (c (n "msiz_rustc-ap-rustc_data_structures") (v "2.0.0") (d (list (d (n "cfg-if") (r "^0.1.2") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.6.5") (f (quote ("nightly"))) (d #t) (k 0)) (d (n "ena") (r "^0.13") (d #t) (k 0)) (d (n "graphviz") (r "^2.0.0") (d #t) (k 0) (p "msiz_rustc-ap-graphviz")) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "jobserver_crate") (r "^0.1.13") (d #t) (k 0) (p "jobserver")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.7") (f (quote ("nightly"))) (d #t) (k 0)) (d (n "rayon") (r "^0.2.0") (d #t) (k 0) (p "rustc-rayon")) (d (n "rayon-core") (r "^0.2.0") (d #t) (k 0) (p "rustc-rayon-core")) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "rustc_serialize") (r "^2.0.0") (d #t) (k 0) (p "msiz_rustc-ap-serialize")) (d (n "smallvec") (r "^0.6.7") (f (quote ("union" "may_dangle"))) (d #t) (k 0)) (d (n "stable_deref_trait") (r "^1.0.0") (d #t) (k 0)))) (h "0mif14s5lh6yk18lng32qkwdfk090dpqnjm4073sqcszpvzhr72p")))

(define-public crate-msiz_rustc-ap-rustc_data_structures-3.0.0 (c (n "msiz_rustc-ap-rustc_data_structures") (v "3.0.0") (d (list (d (n "cfg-if") (r "^0.1.2") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.6.5") (f (quote ("nightly"))) (d #t) (k 0)) (d (n "ena") (r "^0.13") (d #t) (k 0)) (d (n "graphviz") (r "^3.0.0") (d #t) (k 0) (p "msiz_rustc-ap-graphviz")) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "jobserver_crate") (r "^0.1.13") (d #t) (k 0) (p "jobserver")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.7") (f (quote ("nightly"))) (d #t) (k 0)) (d (n "rayon") (r "^0.2.0") (d #t) (k 0) (p "rustc-rayon")) (d (n "rayon-core") (r "^0.2.0") (d #t) (k 0) (p "rustc-rayon-core")) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "rustc_serialize") (r "^3.0.0") (d #t) (k 0) (p "msiz_rustc-ap-serialize")) (d (n "smallvec") (r "^0.6.7") (f (quote ("union" "may_dangle"))) (d #t) (k 0)) (d (n "stable_deref_trait") (r "^1.0.0") (d #t) (k 0)))) (h "00rkdgmmijb6jc96ajs312dbl69rdxzz20dfw0z613szd9hg6mlf")))

