(define-module (crates-io ms r- msr-core) #:use-module (crates-io))

(define-public crate-msr-core-0.0.0 (c (n "msr-core") (v "0.0.0") (h "15s3khijagqz2n2hjcq3gaqqrvr83b11zlrl2ybwbyxk28k4lz6p")))

(define-public crate-msr-core-0.3.0 (c (n "msr-core") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.53") (o #t) (k 0)) (d (n "bs58") (r "^0.4.0") (o #t) (k 0)) (d (n "csv") (r "^1.1.6") (o #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "loom") (r "^0.5.4") (d #t) (t "cfg(loom)") (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 2)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "thread-priority") (r "^0.7.0") (o #t) (k 0)) (d (n "time") (r "^0.3.7") (f (quote ("local-offset" "macros" "formatting" "parsing"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (o #t) (k 0)))) (h "0bhcvz9pnln19xynr4bv7750qm7ri1nppwgshc0qd0qwcdmw51zr") (f (quote (("with-serde" "serde" "time/serde-well-known") ("with-register-recorder" "with-serde" "serde/derive" "anyhow/std" "bs58/std") ("with-realtime-worker-thread" "anyhow/std" "thread-priority") ("with-event-journal" "with-serde" "serde/derive" "anyhow/std" "bs58/std" "uuid/v4") ("with-csv-storage" "with-serde" "csv") ("with-csv-register-recorder" "with-register-recorder" "with-csv-storage") ("with-csv-event-journal" "with-event-journal" "with-csv-storage") ("full" "with-csv-event-journal" "with-csv-register-recorder" "with-realtime-worker-thread") ("default"))))))

(define-public crate-msr-core-0.3.1 (c (n "msr-core") (v "0.3.1") (d (list (d (n "anyhow") (r "^1.0.55") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (o #t) (k 0)) (d (n "csv") (r "^1.1.6") (o #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "loom") (r "^0.5.4") (d #t) (t "cfg(loom)") (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 2)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "thread-priority") (r "^0.8.0") (o #t) (k 0)) (d (n "time") (r "^0.3.7") (f (quote ("local-offset" "macros" "formatting" "parsing"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (o #t) (k 0)))) (h "040w37kmplmwqrmqp96ckynr57xf9hw017j12wz3cmi7fqmapi5g") (f (quote (("with-serde" "serde" "time/serde-well-known") ("with-register-recorder" "with-serde" "serde/derive" "bs58/std") ("with-realtime-worker-thread" "thread-priority") ("with-event-journal" "with-serde" "serde/derive" "bs58/std" "uuid/v4") ("with-csv-storage" "with-serde" "csv") ("with-csv-register-recorder" "with-register-recorder" "with-csv-storage") ("with-csv-event-journal" "with-event-journal" "with-csv-storage") ("full" "with-csv-event-journal" "with-csv-register-recorder" "with-realtime-worker-thread") ("default"))))))

(define-public crate-msr-core-0.3.2 (c (n "msr-core") (v "0.3.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bs58") (r "^0.4") (o #t) (k 0)) (d (n "csv") (r "^1.1") (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "loom") (r "^0.5") (d #t) (t "cfg(loom)") (k 0)) (d (n "num-derive") (r "^0.3") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "thread-priority") (r "^0.8") (o #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("local-offset" "macros" "formatting" "parsing"))) (d #t) (k 0)) (d (n "uuid") (r "^1.1") (o #t) (k 0)))) (h "0iidz21h4qrmjd6bx7398q0ialmwv0sxw1xgvz8drafpwzyjrnv5") (f (quote (("register-recorder" "serde/derive" "bs58/std") ("realtime-worker-thread" "thread-priority") ("full" "csv-event-journal" "csv-register-recorder" "realtime-worker-thread") ("event-journal" "serde/derive" "bs58/std" "uuid/v4") ("default") ("csv-storage" "serde" "csv") ("csv-register-recorder" "register-recorder" "csv-storage") ("csv-event-journal" "event-journal" "csv-storage")))) (s 2) (e (quote (("serde" "dep:serde" "time/serde-well-known"))))))

(define-public crate-msr-core-0.3.3 (c (n "msr-core") (v "0.3.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bs58") (r "^0.4") (o #t) (k 0)) (d (n "csv") (r "^1.1") (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "loom") (r "^0.5") (d #t) (t "cfg(loom)") (k 0)) (d (n "num-derive") (r "^0.3") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "thread-priority") (r "^0.8") (o #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("local-offset" "macros" "formatting" "parsing"))) (d #t) (k 0)) (d (n "uuid") (r "^1.1") (o #t) (k 0)))) (h "10cpdz0lzrm5c6hphgrbzr208q97433qwvflbraxl1kxv28x0zq3") (f (quote (("register-recorder" "serde/derive" "bs58/std") ("realtime-worker-thread" "thread-priority") ("full" "csv-event-journal" "csv-register-recorder" "realtime-worker-thread") ("event-journal" "serde/derive" "bs58/std" "uuid/v4") ("default") ("csv-storage" "serde" "csv") ("csv-register-recorder" "register-recorder" "csv-storage") ("csv-event-journal" "event-journal" "csv-storage")))) (s 2) (e (quote (("serde" "dep:serde" "time/serde-well-known"))))))

(define-public crate-msr-core-0.3.4 (c (n "msr-core") (v "0.3.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bs58") (r "^0.4") (o #t) (k 0)) (d (n "csv") (r "^1.1") (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "loom") (r "^0.5") (d #t) (t "cfg(loom)") (k 0)) (d (n "num-derive") (r "^0.3") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "thread-priority") (r "^0.9") (o #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("local-offset" "macros" "formatting" "parsing"))) (d #t) (k 0)) (d (n "uuid") (r "^1.1") (o #t) (k 0)))) (h "0sx0dyn74xb9bpnngcjjd6x9ra9b55i095dlppjpq7dybh50b1ly") (f (quote (("register-recorder" "serde/derive" "bs58/std") ("realtime-worker-thread" "thread-priority") ("full" "csv-event-journal" "csv-register-recorder" "realtime-worker-thread") ("event-journal" "serde/derive" "bs58/std" "uuid/v4") ("default") ("csv-storage" "serde" "csv") ("csv-register-recorder" "register-recorder" "csv-storage") ("csv-event-journal" "event-journal" "csv-storage")))) (s 2) (e (quote (("serde" "dep:serde" "time/serde-well-known"))))))

(define-public crate-msr-core-0.3.5 (c (n "msr-core") (v "0.3.5") (d (list (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (o #t) (k 0)) (d (n "csv") (r "^1.1.6") (o #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "loom") (r "^0.5.6") (d #t) (t "cfg(loom)") (k 0)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 2)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "thread-priority") (r "^0.9.2") (o #t) (k 0)) (d (n "time") (r "^0.3.15") (f (quote ("local-offset" "macros" "formatting" "parsing"))) (d #t) (k 0)) (d (n "ulid") (r "^1.0.0") (o #t) (d #t) (k 0)))) (h "17pwbrqk4yc7zf1hh1j6sfhpc6w7l5pylfkx63xdgmvc88krfa2b") (f (quote (("register-recorder" "serde/derive" "bs58/std") ("realtime-worker-thread" "thread-priority") ("full" "csv-event-journal" "csv-register-recorder" "realtime-worker-thread") ("event-journal" "serde/derive" "ulid") ("default") ("csv-storage" "serde" "csv") ("csv-register-recorder" "register-recorder" "csv-storage") ("csv-event-journal" "event-journal" "csv-storage")))) (s 2) (e (quote (("serde" "dep:serde" "time/serde-well-known"))))))

(define-public crate-msr-core-0.3.6 (c (n "msr-core") (v "0.3.6") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "base64") (r "^0.13.1") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (o #t) (k 0)) (d (n "csv") (r "^1.1.6") (o #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "loom") (r "^0.5.6") (d #t) (t "cfg(loom)") (k 0)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 2)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "thread-priority") (r "^0.10.0") (o #t) (k 0)) (d (n "time") (r "^0.3.16") (f (quote ("local-offset" "macros" "formatting" "parsing"))) (d #t) (k 0)) (d (n "ulid") (r "^1.0.0") (o #t) (d #t) (k 0)))) (h "0anx89yrih8s6bn4qyq05rrsdvyagm701a0d2jd8r2wqgs25fzxk") (f (quote (("register-recorder" "serde/derive" "bs58/std") ("realtime-worker-thread" "thread-priority") ("full" "csv-event-journal" "csv-register-recorder" "realtime-worker-thread") ("event-journal" "serde/derive" "ulid") ("default") ("csv-storage" "serde" "csv") ("csv-register-recorder" "register-recorder" "csv-storage") ("csv-event-journal" "event-journal" "csv-storage")))) (s 2) (e (quote (("serde" "dep:serde" "time/serde-well-known"))))))

(define-public crate-msr-core-0.3.7 (c (n "msr-core") (v "0.3.7") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 0)) (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "csv") (r "^1.2.2") (o #t) (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "loom") (r "^0.6.1") (d #t) (t "cfg(loom)") (k 0)) (d (n "num-derive") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "serde") (r "^1.0.178") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.104") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.104") (d #t) (k 2)) (d (n "tempfile") (r "^3.7.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.44") (d #t) (k 0)) (d (n "thread-priority") (r "^0.13.1") (o #t) (k 0)) (d (n "time") (r "^0.3.23") (f (quote ("local-offset" "macros" "formatting" "parsing"))) (d #t) (k 0)) (d (n "ulid") (r "^1.0.0") (o #t) (d #t) (k 0)))) (h "0qm8dzlgy4qhjqnw62cmyc7lr6k4mxa3izvsjz10c8zpcbcqbq7s") (f (quote (("register-recorder" "serde/derive") ("realtime-worker-thread" "thread-priority") ("full" "csv-event-journal" "csv-register-recorder" "realtime-worker-thread") ("event-journal" "serde/derive" "ulid") ("default") ("csv-storage" "serde" "csv") ("csv-register-recorder" "register-recorder" "csv-storage") ("csv-event-journal" "event-journal" "csv-storage")))) (s 2) (e (quote (("serde" "dep:serde" "time/serde-human-readable")))) (r "1.71")))

