(define-module (crates-io tc -n tc-network) #:use-module (crates-io))

(define-public crate-tc-network-0.0.0 (c (n "tc-network") (v "0.0.0") (h "1zwkb9kzzr341qmki9c00nsj522s3h2jv4933w5zrlmn9gajv8cw") (y #t)))

(define-public crate-tc-network-0.8.0 (c (n "tc-network") (v "0.8.0") (d (list (d (n "arithmetic") (r "^2.0.2") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3") (d #t) (k 2)) (d (n "async-std") (r "^1.6.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "asynchronous-codec") (r "^0.5") (d #t) (k 0)) (d (n "bitflags") (r "^1.2.0") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "codec") (r "^2.0.1") (f (quote ("derive"))) (d #t) (k 0) (p "tetsy-scale-codec")) (d (n "derive_more") (r "^0.99.2") (d #t) (k 0)) (d (n "either") (r "^1.5.3") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.9") (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "forktree") (r "^2.0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.9") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "ip_network") (r "^0.3.4") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.2") (d #t) (k 0)) (d (n "linked_hash_set") (r "^0.1.3") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "lru") (r "^0.6.3") (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "pin-project") (r "^0.4.6") (d #t) (k 0)) (d (n "prometheus-endpoint") (r "^0.8.1") (d #t) (k 0) (p "prometheus-endpoint")) (d (n "prost") (r "^0.7") (d #t) (k 0)) (d (n "prost-build") (r "^0.7") (d #t) (k 1)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.101") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.41") (d #t) (k 0)) (d (n "smallvec") (r "^1.5.0") (d #t) (k 0)) (d (n "tc-block-builder") (r "^0.8.0") (d #t) (k 0)) (d (n "tc-client-api") (r "^2.0.0") (d #t) (k 0)) (d (n "tc-peerset") (r "^2.0.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "tet-core") (r "^2.0.2") (d #t) (k 0)) (d (n "tetcore-tracing") (r "^2.0.2") (d #t) (k 2)) (d (n "tetcore-utils") (r "^2.0.2") (d #t) (k 0)) (d (n "tetsy-libp2p") (r "^0.34.2") (f (quote ("dns" "identify" "kad" "mdns" "mplex" "noise" "ping" "request-response" "tcp-async-io" "websocket" "remux" "wasm-ext"))) (k 0)) (d (n "tetsy-libp2p") (r "^0.34.2") (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tp-blockchain") (r "^2.0.2") (d #t) (k 0)) (d (n "tp-consensus") (r "^0.8.2") (d #t) (k 0)) (d (n "tp-keyring") (r "^2.0.2") (d #t) (k 2)) (d (n "tp-runtime") (r "^2.0.2") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.6.0") (f (quote ("futures" "asynchronous_codec"))) (d #t) (k 0)) (d (n "void") (r "^1.0.2") (d #t) (k 0)) (d (n "wasm-timer") (r "^0.2") (d #t) (k 0)) (d (n "zeroize") (r "^1.2.0") (d #t) (k 0)))) (h "1jdswvbgy5ji4fsmz6v0jhmb70z0j63n2gy5xb538cgh9ci6ap86") (f (quote (("default"))))))

