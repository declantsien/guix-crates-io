(define-module (crates-io tc -s tc-scalar) #:use-module (crates-io))

(define-public crate-tc-scalar-0.1.0 (c (n "tc-scalar") (v "0.1.0") (d (list (d (n "async-hash") (r "^0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.3") (d #t) (k 0)) (d (n "destream") (r "^0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "get-size") (r "^0.1") (d #t) (k 0)) (d (n "get-size-derive") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "safecast") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "tc-error") (r "^0.8") (d #t) (k 0)) (d (n "tc-transact") (r "^0.17") (d #t) (k 0)) (d (n "tc-value") (r "^0.9") (d #t) (k 0)) (d (n "tcgeneric") (r "^0.7") (d #t) (k 0)))) (h "06zsbp7nygisdsllrm8hhw7kad7vdsr1dvbj0dj1c4gysabmm7yf")))

(define-public crate-tc-scalar-0.2.0 (c (n "tc-scalar") (v "0.2.0") (d (list (d (n "async-hash") (r "^0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.3") (d #t) (k 0)) (d (n "destream") (r "^0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "get-size") (r "^0.1") (d #t) (k 0)) (d (n "get-size-derive") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "safecast") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.11") (d #t) (k 0)) (d (n "tc-error") (r "^0.9") (d #t) (k 0)) (d (n "tc-transact") (r "^0.18") (d #t) (k 0)) (d (n "tc-value") (r "^0.10") (d #t) (k 0)) (d (n "tcgeneric") (r "^0.8") (d #t) (k 0)))) (h "1xv9rmkm249mkmrkcsnxfsn94ysh02glbvqgbpxgnjwnx6s1c87l")))

(define-public crate-tc-scalar-0.3.0 (c (n "tc-scalar") (v "0.3.0") (d (list (d (n "async-hash") (r "^0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.3") (d #t) (k 0)) (d (n "destream") (r "^0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "get-size") (r "^0.1") (d #t) (k 0)) (d (n "get-size-derive") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "safecast") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.11") (d #t) (k 0)) (d (n "tc-error") (r "^0.10") (d #t) (k 0)) (d (n "tc-transact") (r "^0.19") (d #t) (k 0)) (d (n "tc-value") (r "^0.11") (d #t) (k 0)) (d (n "tcgeneric") (r "^0.9") (d #t) (k 0)))) (h "0cmfabm76x1drnqqh8010l7mb2rrnw841ns3m519xn7scr6s1wrp")))

(define-public crate-tc-scalar-0.4.0 (c (n "tc-scalar") (v "0.4.0") (d (list (d (n "async-hash") (r "^0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.3") (d #t) (k 0)) (d (n "destream") (r "^0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "get-size") (r "^0.1") (d #t) (k 0)) (d (n "get-size-derive") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "safecast") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.11") (d #t) (k 0)) (d (n "tc-error") (r "^0.11") (d #t) (k 0)) (d (n "tc-transact") (r "^0.20") (d #t) (k 0)) (d (n "tc-value") (r "^0.12") (d #t) (k 0)) (d (n "tcgeneric") (r "^0.10") (d #t) (k 0)))) (h "0nfp69karj3yfqsvsbvqcjxxm585hb0l530xgkhc030kq44799hs")))

