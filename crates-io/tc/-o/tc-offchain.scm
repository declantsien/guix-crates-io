(define-module (crates-io tc -o tc-offchain) #:use-module (crates-io))

(define-public crate-tc-offchain-0.0.0 (c (n "tc-offchain") (v "0.0.0") (h "0ajxgjrg0qzwr1kn0v4ha6zjmgyvnfgb31rx9k2wbipp5psk2zh9") (y #t)))

(define-public crate-tc-offchain-2.0.0 (c (n "tc-offchain") (v "2.0.0") (d (list (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "codec") (r "^2.0.1") (f (quote ("derive"))) (d #t) (k 0) (p "tetsy-scale-codec")) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.9") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.13.9") (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "hyper-rustls") (r "^0.21.0") (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num_cpus") (r "^1.10") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "tc-block-builder") (r "^0.8.0") (d #t) (k 2)) (d (n "tc-client-api") (r "^2.0.0") (d #t) (k 0)) (d (n "tc-client-db") (r "^0.8.0") (d #t) (k 2)) (d (n "tc-keystore") (r "^2.0.0") (d #t) (k 0)) (d (n "tc-network") (r "^0.8.0") (d #t) (k 0)) (d (n "tc-transaction-pool") (r "^2.0.0") (d #t) (k 2)) (d (n "tet-core") (r "^2.0.2") (d #t) (k 0)) (d (n "tetcore-tracing") (r "^2.0.2") (d #t) (k 2)) (d (n "tetcore-utils") (r "^2.0.2") (d #t) (k 0)) (d (n "threadpool") (r "^1.7") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (d #t) (k 2)) (d (n "tp-api") (r "^2.0.2") (d #t) (k 0)) (d (n "tp-consensus") (r "^0.8.2") (d #t) (k 2)) (d (n "tp-offchain") (r "^2.0.2") (d #t) (k 0)) (d (n "tp-runtime") (r "^2.0.2") (d #t) (k 0)) (d (n "tp-transaction-pool") (r "^2.0.2") (d #t) (k 2)))) (h "0dvhzdjq9kp62qhgvws27k6zam6zskw0bxvx7dws3mr35w6harwm") (f (quote (("default"))))))

