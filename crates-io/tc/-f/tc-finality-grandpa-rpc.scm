(define-module (crates-io tc -f tc-finality-grandpa-rpc) #:use-module (crates-io))

(define-public crate-tc-finality-grandpa-rpc-0.0.0 (c (n "tc-finality-grandpa-rpc") (v "0.0.0") (h "12fwrm1acdrgqir20264mjxy7k85w9cy4v6xmanksv39i6ia74gl") (y #t)))

(define-public crate-tc-finality-grandpa-rpc-0.8.0 (c (n "tc-finality-grandpa-rpc") (v "0.8.0") (d (list (d (n "derive_more") (r "^0.99.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (f (quote ("compat"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.105") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.50") (d #t) (k 0)) (d (n "tc-block-builder") (r "^0.8.0") (d #t) (k 2)) (d (n "tc-client-api") (r "^2.0.0") (d #t) (k 0)) (d (n "tc-finality-grandpa") (r "^0.8.0") (d #t) (k 0)) (d (n "tc-rpc") (r "^2.0.0") (d #t) (k 0)) (d (n "tc-rpc") (r "^2.0.0") (f (quote ("test-helpers"))) (d #t) (k 2)) (d (n "tet-core") (r "^2.0.2") (d #t) (k 0)) (d (n "tet-core") (r "^2.0.2") (d #t) (k 2)) (d (n "tetsy-finality-grandpa") (r "^0.13.0") (f (quote ("derive-codec"))) (d #t) (k 0)) (d (n "tetsy-jsonrpc-core") (r "^15.1.0") (d #t) (k 0)) (d (n "tetsy-jsonrpc-core-client") (r "^15.1.0") (d #t) (k 0)) (d (n "tetsy-jsonrpc-derive") (r "^15.1.0") (d #t) (k 0)) (d (n "tetsy-jsonrpc-pubsub") (r "^15.1.0") (d #t) (k 0)) (d (n "tetsy-scale-codec") (r "^2.0.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tp-blockchain") (r "^2.0.2") (d #t) (k 0)) (d (n "tp-consensus") (r "^0.8.2") (d #t) (k 2)) (d (n "tp-finality-grandpa") (r "^2.0.2") (d #t) (k 2)) (d (n "tp-keyring") (r "^2.0.2") (d #t) (k 2)) (d (n "tp-runtime") (r "^2.0.2") (d #t) (k 0)))) (h "1xvbfvrkpb3a347hlv2yyrka1ccrkf2m105afhmayjblgi5q6mlg")))

