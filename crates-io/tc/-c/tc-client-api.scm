(define-module (crates-io tc -c tc-client-api) #:use-module (crates-io))

(define-public crate-tc-client-api-0.0.0 (c (n "tc-client-api") (v "0.0.0") (h "0vg0lb3blywrqhccwndczwrxy9nnwd8pnl51bl058v1cfmmqa4vy") (y #t)))

(define-public crate-tc-client-api-2.0.0 (c (n "tc-client-api") (v "2.0.0") (d (list (d (n "codec") (r "^2.0.1") (f (quote ("derive"))) (k 0) (p "tetsy-scale-codec")) (d (n "derive_more") (r "^0.99.2") (d #t) (k 0)) (d (n "externalities") (r "^0.8.2") (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "prometheus-endpoint") (r "^0.8.1") (d #t) (k 0) (p "prometheus-endpoint")) (d (n "tc-executor") (r "^0.8.0") (d #t) (k 0)) (d (n "tet-core") (r "^2.0.2") (k 0)) (d (n "tetcore-database") (r "^2.0.2") (d #t) (k 0)) (d (n "tetcore-std") (r "^2.0.2") (k 0)) (d (n "tetcore-storage") (r "^2.0.2") (d #t) (k 0)) (d (n "tetcore-utils") (r "^2.0.2") (d #t) (k 0)) (d (n "tetsy-hash-db") (r "^0.15.2") (k 0)) (d (n "tetsy-kvdb") (r "^0.9.0") (d #t) (k 0)) (d (n "tetsy-kvdb-memorydb") (r "^0.9.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 2)) (d (n "tp-api") (r "^2.0.2") (d #t) (k 0)) (d (n "tp-blockchain") (r "^2.0.2") (d #t) (k 0)) (d (n "tp-consensus") (r "^0.8.2") (d #t) (k 0)) (d (n "tp-inherents") (r "^2.0.2") (k 0)) (d (n "tp-keystore") (r "^0.8.1") (k 0)) (d (n "tp-runtime") (r "^2.0.2") (k 0)) (d (n "tp-state-machine") (r "^0.8.2") (d #t) (k 0)) (d (n "tp-transaction-pool") (r "^2.0.2") (d #t) (k 0)) (d (n "tp-trie") (r "^2.0.2") (d #t) (k 0)) (d (n "tp-version") (r "^2.0.2") (k 0)))) (h "1xiizhm79qqw4sp94b97vmjv4nj3lgs4yc72qgs8i0f6w111l6lz")))

