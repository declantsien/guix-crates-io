(define-module (crates-io tc -c tc-client-db) #:use-module (crates-io))

(define-public crate-tc-client-db-0.0.0 (c (n "tc-client-db") (v "0.0.0") (h "1jf307jfn67yp5xkhhhimlbl0fd3lzkgzqwicwlp98yl9k38wrb4") (y #t)))

(define-public crate-tc-client-db-0.8.0 (c (n "tc-client-db") (v "0.8.0") (d (list (d (n "arithmetic") (r "^2.0.2") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.18") (d #t) (k 0)) (d (n "codec") (r "^2.0.1") (f (quote ("derive"))) (d #t) (k 0) (p "tetsy-scale-codec")) (d (n "linked-hash-map") (r "^0.5.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "prometheus-endpoint") (r "^0.8.1") (d #t) (k 0) (p "prometheus-endpoint")) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "tc-client-api") (r "^2.0.0") (d #t) (k 0)) (d (n "tc-executor") (r "^0.8.0") (d #t) (k 0)) (d (n "tc-state-db") (r "^0.8.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "tet-core") (r "^2.0.2") (d #t) (k 0)) (d (n "tetcore-database") (r "^2.0.2") (d #t) (k 0)) (d (n "tetcore-tracing") (r "^2.0.2") (d #t) (k 2)) (d (n "tetsy-db") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "tetsy-hash-db") (r "^0.15.2") (d #t) (k 0)) (d (n "tetsy-kvdb") (r "^0.9.0") (d #t) (k 0)) (d (n "tetsy-kvdb-memorydb") (r "^0.9.0") (d #t) (k 0)) (d (n "tetsy-kvdb-rocksdb") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "tetsy-kvdb-rocksdb") (r "^0.11.0") (d #t) (k 2)) (d (n "tetsy-util-mem") (r "^0.9.0") (f (quote ("std"))) (k 0)) (d (n "tp-blockchain") (r "^2.0.2") (d #t) (k 0)) (d (n "tp-consensus") (r "^0.8.2") (d #t) (k 0)) (d (n "tp-keyring") (r "^2.0.2") (d #t) (k 2)) (d (n "tp-runtime") (r "^2.0.2") (d #t) (k 0)) (d (n "tp-state-machine") (r "^0.8.2") (d #t) (k 0)) (d (n "tp-trie") (r "^2.0.2") (d #t) (k 0)))) (h "1h89jwhbrr8qpsyz9k6dq4n1jqyvmyg0q567fj2yg0jk05b1plgg") (f (quote (("with-tetsy-kvdb-rocksdb" "tetsy-kvdb-rocksdb") ("with-tetsy-db" "tetsy-db") ("test-helpers") ("default"))))))

