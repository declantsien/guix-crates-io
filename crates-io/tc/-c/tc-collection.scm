(define-module (crates-io tc -c tc-collection) #:use-module (crates-io))

(define-public crate-tc-collection-0.1.0 (c (n "tc-collection") (v "0.1.0") (d (list (d (n "async-hash") (r "^0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "b-table") (r "~0.1.1") (f (quote ("all"))) (d #t) (k 0)) (d (n "b-tree") (r "~0.2.1") (f (quote ("all"))) (d #t) (k 0)) (d (n "collate") (r "^0.3") (f (quote ("stream"))) (d #t) (k 0)) (d (n "destream") (r "^0.7") (d #t) (k 0)) (d (n "ds-ext") (r "^0.1") (d #t) (k 0)) (d (n "freqfs") (r "^0.8") (f (quote ("logging"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ha-ndarray") (r "~0.1.1") (f (quote ("freqfs" "stream"))) (d #t) (k 0)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("release_max_level_info"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.15") (d #t) (k 0)) (d (n "pin-project") (r "^1.1") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "safecast") (r "^0.2") (d #t) (k 0)) (d (n "tc-error") (r "^0.8") (d #t) (k 0)) (d (n "tc-scalar") (r "^0.1") (d #t) (k 0)) (d (n "tc-transact") (r "^0.17") (d #t) (k 0)) (d (n "tc-value") (r "^0.9") (d #t) (k 0)) (d (n "tcgeneric") (r "^0.7") (d #t) (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("sync"))) (d #t) (k 0)))) (h "14smhsybdqsmda43h7qmmidc7jrh0vvhrw3ca6i4xdpj7r3m8j86") (f (quote (("opencl" "ha-ndarray/opencl"))))))

(define-public crate-tc-collection-0.2.0 (c (n "tc-collection") (v "0.2.0") (d (list (d (n "async-hash") (r "^0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "b-table") (r "^0.2") (f (quote ("all"))) (d #t) (k 0)) (d (n "b-tree") (r "^0.3") (f (quote ("all"))) (d #t) (k 0)) (d (n "collate") (r "^0.4") (f (quote ("stream"))) (d #t) (k 0)) (d (n "destream") (r "^0.7") (d #t) (k 0)) (d (n "ds-ext") (r "~0.1.3") (d #t) (k 0)) (d (n "freqfs") (r "^0.9") (f (quote ("logging"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ha-ndarray") (r "^0.2") (f (quote ("freqfs" "stream"))) (d #t) (k 0)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("release_max_level_info"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.15") (d #t) (k 0)) (d (n "pin-project") (r "^1.1") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "safecast") (r "^0.2") (d #t) (k 0)) (d (n "smallvec") (r "^1.11") (d #t) (k 0)) (d (n "tc-error") (r "^0.9") (d #t) (k 0)) (d (n "tc-scalar") (r "^0.2") (d #t) (k 0)) (d (n "tc-transact") (r "^0.18") (d #t) (k 0)) (d (n "tc-value") (r "^0.10") (d #t) (k 0)) (d (n "tcgeneric") (r "^0.8") (d #t) (k 0)) (d (n "tokio") (r "^1.33") (f (quote ("sync"))) (d #t) (k 0)))) (h "0qnpg7dhmnlr4y10006m9575pw43zscz4yav8kp0c745x8snii2g") (f (quote (("opencl" "ha-ndarray/opencl"))))))

(define-public crate-tc-collection-0.3.0 (c (n "tc-collection") (v "0.3.0") (d (list (d (n "async-hash") (r "^0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "b-table") (r "^0.2") (f (quote ("all"))) (d #t) (k 0)) (d (n "b-tree") (r "^0.3") (f (quote ("all"))) (d #t) (k 0)) (d (n "collate") (r "^0.4") (f (quote ("stream"))) (d #t) (k 0)) (d (n "destream") (r "^0.7") (d #t) (k 0)) (d (n "ds-ext") (r "~0.1.3") (d #t) (k 0)) (d (n "freqfs") (r "^0.9") (f (quote ("logging"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ha-ndarray") (r "^0.3") (f (quote ("freqfs" "stream"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("release_max_level_info"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16") (d #t) (k 0)) (d (n "pin-project") (r "^1.1") (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "safecast") (r "^0.2") (d #t) (k 0)) (d (n "smallvec") (r "^1.11") (d #t) (k 0)) (d (n "tc-error") (r "^0.10") (d #t) (k 0)) (d (n "tc-scalar") (r "^0.3") (d #t) (k 0)) (d (n "tc-transact") (r "^0.19") (d #t) (k 0)) (d (n "tc-value") (r "^0.11") (d #t) (k 0)) (d (n "tcgeneric") (r "^0.9") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("sync"))) (d #t) (k 0)))) (h "1zq7vb6w5sdzghb3scb979zb2r7a9mzm3kmld4vilxyy34zjlgsr") (f (quote (("opencl" "ha-ndarray/opencl"))))))

(define-public crate-tc-collection-0.4.0 (c (n "tc-collection") (v "0.4.0") (d (list (d (n "async-hash") (r "^0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "b-table") (r "^0.2") (f (quote ("all"))) (d #t) (k 0)) (d (n "b-tree") (r "^0.3") (f (quote ("all"))) (d #t) (k 0)) (d (n "collate") (r "^0.4") (f (quote ("stream"))) (d #t) (k 0)) (d (n "destream") (r "^0.7") (d #t) (k 0)) (d (n "ds-ext") (r "~0.1.3") (d #t) (k 0)) (d (n "freqfs") (r "^0.9") (f (quote ("logging"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ha-ndarray") (r "^0.3") (f (quote ("freqfs" "stream"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("release_max_level_info"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16") (d #t) (k 0)) (d (n "pin-project") (r "^1.1") (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "safecast") (r "^0.2") (d #t) (k 0)) (d (n "smallvec") (r "^1.11") (d #t) (k 0)) (d (n "tc-error") (r "^0.11") (d #t) (k 0)) (d (n "tc-scalar") (r "^0.4") (d #t) (k 0)) (d (n "tc-transact") (r "^0.20") (d #t) (k 0)) (d (n "tc-value") (r "^0.12") (d #t) (k 0)) (d (n "tcgeneric") (r "^0.10") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("sync"))) (d #t) (k 0)))) (h "184rma0xb4pmrpcim2z938ynlfhww9pb74gxaycrg4615ilv0jnw") (f (quote (("opencl" "ha-ndarray/opencl"))))))

