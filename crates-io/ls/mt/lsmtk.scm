(define-module (crates-io ls mt lsmtk) #:use-module (crates-io))

(define-public crate-lsmtk-0.1.0 (c (n "lsmtk") (v "0.1.0") (d (list (d (n "arrrg") (r "^0.2") (d #t) (k 0)) (d (n "arrrg_derive") (r "^0.2") (d #t) (k 0)) (d (n "biometrics") (r "^0.4") (d #t) (k 0)) (d (n "buffertk") (r "^0.4") (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 0)) (d (n "mani") (r "^0.1") (d #t) (k 0)) (d (n "prototk") (r "^0.4") (d #t) (k 0)) (d (n "prototk_derive") (r "^0.4") (d #t) (k 0)) (d (n "setsum") (r "^0.4") (d #t) (k 0)) (d (n "sst") (r "^0.4") (d #t) (k 0)) (d (n "zerror") (r "^0.2") (d #t) (k 0)) (d (n "zerror_core") (r "^0.3") (d #t) (k 0)) (d (n "zerror_derive") (r "^0.1") (d #t) (k 0)))) (h "1ghngan3b736009c9m6bf5343vvf94fwh5h2hl9jzclvd0w2p26g")))

(define-public crate-lsmtk-0.2.0 (c (n "lsmtk") (v "0.2.0") (d (list (d (n "arrrg") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "arrrg_derive") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "biometrics") (r "^0.5") (d #t) (k 0)) (d (n "buffertk") (r "^0.5") (d #t) (k 0)) (d (n "getopts") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "indicio") (r "^0.2") (d #t) (k 0)) (d (n "keyvalint") (r "^0.2") (d #t) (k 0)) (d (n "mani") (r "^0.2") (d #t) (k 0)) (d (n "one_two_eight") (r "^0.4") (d #t) (k 0)) (d (n "prototk") (r "^0.5") (d #t) (k 0)) (d (n "prototk_derive") (r "^0.5") (d #t) (k 0)) (d (n "setsum") (r "^0.5") (d #t) (k 0)) (d (n "skipfree") (r "^0.1") (d #t) (k 0)) (d (n "sst") (r "^0.5") (d #t) (k 0)) (d (n "sync42") (r "^0.5") (d #t) (k 0)) (d (n "utilz") (r "^0.3") (d #t) (k 0)) (d (n "zerror") (r "^0.3") (d #t) (k 0)) (d (n "zerror_core") (r "^0.4") (d #t) (k 0)) (d (n "zerror_derive") (r "^0.2") (d #t) (k 0)))) (h "063dnhcx1b7vg51cqvb0f5dzq0bmz3zpzfkpf3f9f7ynrwbhw3bp") (f (quote (("default" "binaries") ("binaries" "command_line")))) (s 2) (e (quote (("command_line" "dep:arrrg" "dep:arrrg_derive" "dep:getopts"))))))

(define-public crate-lsmtk-0.3.0 (c (n "lsmtk") (v "0.3.0") (d (list (d (n "arrrg") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "arrrg_derive") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "biometrics") (r "^0.6") (d #t) (k 0)) (d (n "buffertk") (r "^0.6") (d #t) (k 0)) (d (n "getopts") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "indicio") (r "^0.3") (d #t) (k 0)) (d (n "keyvalint") (r "^0.3") (d #t) (k 0)) (d (n "mani") (r "^0.3") (d #t) (k 0)) (d (n "one_two_eight") (r "^0.4") (d #t) (k 0)) (d (n "prototk") (r "^0.6") (d #t) (k 0)) (d (n "prototk_derive") (r "^0.6") (d #t) (k 0)) (d (n "setsum") (r "^0.5") (d #t) (k 0)) (d (n "skipfree") (r "^0.2") (d #t) (k 0)) (d (n "sst") (r "^0.6") (d #t) (k 0)) (d (n "sync42") (r "^0.6") (d #t) (k 0)) (d (n "utilz") (r "^0.3") (d #t) (k 0)) (d (n "zerror") (r "^0.4") (d #t) (k 0)) (d (n "zerror_core") (r "^0.5") (d #t) (k 0)) (d (n "zerror_derive") (r "^0.3") (d #t) (k 0)))) (h "0cpn8bmk06f1lnxlapbws20vsk49mf7za8dvvdiq6q7sqaykk46z") (f (quote (("default" "binaries") ("binaries" "command_line")))) (s 2) (e (quote (("command_line" "dep:arrrg" "dep:arrrg_derive" "dep:getopts"))))))

