(define-module (crates-io ls mt lsmtree) #:use-module (crates-io))

(define-public crate-lsmtree-0.0.1 (c (n "lsmtree") (v "0.0.1") (d (list (d (n "bytes") (r "^1.2") (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (f (quote ("asm-aarch64"))) (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "12m0fc3hgmi98igpkiga2wqwrp3qy73n2dmahs28aqxlz99vb7vh") (f (quote (("std" "bytes/default") ("default" "std"))))))

(define-public crate-lsmtree-0.0.2 (c (n "lsmtree") (v "0.0.2") (d (list (d (n "bytes") (r "^1.2") (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "0fxrz4rihn3mgs1cdw3421aacaifhyg6vvlkf4wh0dzs7mw8pz3g") (f (quote (("std" "bytes/default") ("default" "std"))))))

(define-public crate-lsmtree-0.0.3 (c (n "lsmtree") (v "0.0.3") (d (list (d (n "bytes") (r "^1.2") (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "1hb11gasq19nvhgqgqy735al5sq4903h8x41ayangkrd1nawp7i5") (f (quote (("std" "bytes/default") ("default" "std"))))))

(define-public crate-lsmtree-0.0.4 (c (n "lsmtree") (v "0.0.4") (d (list (d (n "bytes") (r "^1.2") (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "0kq3ibgrq3kqdsiz8zwy2hdw4alyrccq0b0vwkacp37y6dksr872") (f (quote (("std" "bytes/default") ("default" "std"))))))

(define-public crate-lsmtree-0.0.5 (c (n "lsmtree") (v "0.0.5") (d (list (d (n "bytes") (r "^1.2") (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "0ifwhfcxc31i2snwpyzvgnjqrb4jzc4ik6pw4yqmywvw3rf0718p") (f (quote (("std" "bytes/default") ("default" "std"))))))

(define-public crate-lsmtree-0.0.6 (c (n "lsmtree") (v "0.0.6") (d (list (d (n "bytes") (r "^1.2") (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "1karqvsznnnp7h510mxnfzpr4n46ikn3qcpp8pkr4qgvvv1y1rf4") (f (quote (("std" "bytes/default") ("default" "std"))))))

(define-public crate-lsmtree-0.0.8 (c (n "lsmtree") (v "0.0.8") (d (list (d (n "bytes") (r "^1.2") (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "1bqbv5xma51yfvwaarc6a7s015bdgarjcysldf9hm9q30825c5i2") (f (quote (("std" "bytes/default") ("default" "std"))))))

(define-public crate-lsmtree-0.1.0 (c (n "lsmtree") (v "0.1.0") (d (list (d (n "bytes") (r "^1.2") (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (f (quote ("asm-aarch64"))) (d #t) (t "cfg(target_arch = \"aarch64\")") (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "0ilfqfghd7zpqj8l1lph7h8bkxl9qs798mngppsdz7wzlx84dx8q") (f (quote (("std" "bytes/default") ("default" "std"))))))

(define-public crate-lsmtree-0.1.1 (c (n "lsmtree") (v "0.1.1") (d (list (d (n "bytes") (r "^1.2") (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (f (quote ("asm-aarch64"))) (d #t) (t "cfg(target_arch = \"aarch64\")") (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "00rfkx6zzjx8khhwsvlf5kmmdpc7xiaph1dc9sq8qzwidw9ncvri") (f (quote (("std" "bytes/default") ("default" "std"))))))

