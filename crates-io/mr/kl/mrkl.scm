(define-module (crates-io mr kl mrkl) #:use-module (crates-io))

(define-public crate-mrkl-0.0.2 (c (n "mrkl") (v "0.0.2") (d (list (d (n "digest-hash") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.9") (d #t) (k 0)) (d (n "rayon") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.7") (d #t) (k 2)))) (h "04illgwvahzr9a0cic0m6130hb9vdbc735xlpkix8spxz6lz85wn") (f (quote (("serialization" "serde" "serde_derive" "generic-array/serde") ("parallel" "rayon") ("digest" "digest-hash") ("default" "digest" "parallel" "serialization"))))))

(define-public crate-mrkl-0.0.3 (c (n "mrkl") (v "0.0.3") (d (list (d (n "digest-hash") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.9") (d #t) (k 0)) (d (n "rayon") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.7") (d #t) (k 2)))) (h "0qy02fa8djiyhf636lw796xi7p1bgzk8cajnipy2jb0v5z8czryx") (f (quote (("serialization" "serde" "serde_derive" "generic-array/serde") ("parallel" "rayon") ("digest" "digest-hash") ("default" "digest" "parallel" "serialization"))))))

(define-public crate-mrkl-0.0.4 (c (n "mrkl") (v "0.0.4") (d (list (d (n "digest-hash") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.12") (d #t) (k 0)) (d (n "rayon") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.8") (d #t) (k 2)))) (h "0gj3bk3pk2gw1c41ky4in4sl9mhsx9qfss6zj1wvf5cs5h90b06x") (f (quote (("serialization" "serde" "serde_derive" "generic-array/serde") ("parallel" "rayon") ("digest" "digest-hash") ("default" "digest" "parallel" "serialization"))))))

