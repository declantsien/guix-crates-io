(define-module (crates-io p2 #{56}# p256_flow) #:use-module (crates-io))

(define-public crate-p256_flow-1.0.0 (c (n "p256_flow") (v "1.0.0") (d (list (d (n "blobby") (r "^0.3") (d #t) (k 2)) (d (n "ecdsa-core") (r "^1.0.0") (f (quote ("der"))) (o #t) (k 0) (p "ecdsa-flow")) (d (n "ecdsa-core") (r "^1.0.0") (f (quote ("dev"))) (k 2) (p "ecdsa-flow")) (d (n "elliptic-curve-flow") (r "^1.0.0") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha3") (r "^0.9.1") (k 0)))) (h "090rkc7ibi1ifr7lgry23x8gi6gv6a8jgj5xrv35g548hx70d2m3") (f (quote (("test-vectors" "hex-literal") ("std" "ecdsa-core/std" "elliptic-curve-flow/std") ("sha256" "digest") ("pkcs8" "elliptic-curve-flow/pkcs8") ("pem" "elliptic-curve-flow/pem" "pkcs8") ("jwk" "elliptic-curve-flow/jwk") ("ecdsa" "arithmetic" "ecdsa-core/sign" "ecdsa-core/verify" "sha256") ("ecdh" "arithmetic" "elliptic-curve-flow/ecdh") ("digest" "ecdsa-core/digest" "ecdsa-core/hazmat") ("default" "arithmetic" "ecdsa" "pkcs8" "std" "sha256") ("bits" "arithmetic" "elliptic-curve-flow/bits") ("arithmetic" "elliptic-curve-flow/arithmetic"))))))

