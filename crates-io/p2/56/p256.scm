(define-module (crates-io p2 #{56}# p256) #:use-module (crates-io))

(define-public crate-p256-0.0.0 (c (n "p256") (v "0.0.0") (h "13h6lrvnw43pnjcz8iq1v82ls7p5x8f5xdz923wr6aa3yzfycv4j") (y #t)))

(define-public crate-p256-0.1.0 (c (n "p256") (v "0.1.0") (d (list (d (n "elliptic-curve") (r "^0.3") (f (quote ("weierstrass"))) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "subtle") (r "^2.2.2") (o #t) (k 0)))) (h "0hjcc176wmv2bgf3gxqg0gzm8lh2blr51qmni8mab5pwba50aal1") (f (quote (("test-vectors") ("std" "elliptic-curve/std") ("default" "arithmetic" "std") ("arithmetic" "subtle"))))))

(define-public crate-p256-0.2.0 (c (n "p256") (v "0.2.0") (d (list (d (n "elliptic-curve") (r "^0.3") (f (quote ("weierstrass"))) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "subtle") (r "^2.2.2") (o #t) (k 0)))) (h "0cyirz96n2njbf85px9csnkxm9dwddligqsdqwaw53k3r8rhwr46") (f (quote (("test-vectors") ("std" "elliptic-curve/std") ("default" "arithmetic" "std") ("arithmetic" "subtle"))))))

(define-public crate-p256-0.3.0 (c (n "p256") (v "0.3.0") (d (list (d (n "elliptic-curve") (r "^0.4") (f (quote ("weierstrass"))) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "subtle") (r "^2.2.2") (o #t) (k 0)))) (h "1kvn8iw5gwf2jyqpx193mp2k9lcgcfxna7px6lkknrhm2nvyq9d4") (f (quote (("test-vectors") ("std" "elliptic-curve/std") ("default" "arithmetic" "std") ("arithmetic" "subtle"))))))

(define-public crate-p256-0.4.0 (c (n "p256") (v "0.4.0") (d (list (d (n "ecdsa-core") (r "^0.7") (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.7") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.5") (f (quote ("weierstrass"))) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "rand_core") (r "^0.5") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (k 0)))) (h "1jx0d03ndqf119s5pxjx1dnkcl7gnwqgk427sj5r0wcdll9yhn05") (f (quote (("zeroize" "elliptic-curve/zeroize") ("test-vectors") ("std" "elliptic-curve/std") ("sha256" "ecdsa-core/digest" "ecdsa-core/hazmat" "sha2") ("rand" "elliptic-curve/rand") ("oid" "elliptic-curve/oid") ("ecdsa" "arithmetic" "ecdsa-core/signer" "ecdsa-core/verifier" "rand" "sha256" "zeroize") ("ecdh" "elliptic-curve/ecdh" "rand" "zeroize") ("default" "arithmetic" "std") ("arithmetic"))))))

(define-public crate-p256-0.4.1 (c (n "p256") (v "0.4.1") (d (list (d (n "ecdsa-core") (r "^0.7") (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.7") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.5") (f (quote ("weierstrass"))) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "rand_core") (r "^0.5") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (k 0)))) (h "0m5ss03s0gp2q9khfnsbf5fx9ng4198hm2j1fkiq6slax7sszy59") (f (quote (("zeroize" "elliptic-curve/zeroize") ("test-vectors") ("std" "elliptic-curve/std") ("sha256" "ecdsa-core/digest" "ecdsa-core/hazmat" "sha2") ("rand" "elliptic-curve/rand") ("oid" "elliptic-curve/oid") ("ecdsa" "arithmetic" "ecdsa-core/signer" "ecdsa-core/verifier" "rand" "sha256" "zeroize") ("ecdh" "elliptic-curve/ecdh" "rand" "zeroize") ("default" "arithmetic" "std") ("arithmetic"))))))

(define-public crate-p256-0.5.0-rc (c (n "p256") (v "0.5.0-rc") (d (list (d (n "ecdsa-core") (r "^0.8") (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.8") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.6") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "rand_core") (r "^0.5") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (k 0)))) (h "0q3b83lx8k0yjvkiy9v9hi0317z1lk1bp8f17hlwdmkrxs2yzwww") (f (quote (("zeroize" "elliptic-curve/zeroize") ("test-vectors") ("std" "elliptic-curve/std") ("sha256" "digest" "ecdsa-core/hazmat" "sha2") ("oid" "elliptic-curve/oid") ("ecdsa" "arithmetic" "ecdsa-core/sign" "ecdsa-core/verify" "sha256" "zeroize") ("ecdh" "elliptic-curve/ecdh" "zeroize") ("digest" "elliptic-curve/digest" "ecdsa-core/digest") ("default" "arithmetic" "std") ("arithmetic" "elliptic-curve/arithmetic"))))))

(define-public crate-p256-0.5.0 (c (n "p256") (v "0.5.0") (d (list (d (n "ecdsa-core") (r "^0.8") (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.8") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.6") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "rand_core") (r "^0.5") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (k 0)))) (h "0z5k163amgvas5001n6anrwm788vf8scdhnyr0hpv7s69ajaa28r") (f (quote (("zeroize" "elliptic-curve/zeroize") ("test-vectors") ("std" "elliptic-curve/std") ("sha256" "digest" "ecdsa-core/hazmat" "sha2") ("oid" "elliptic-curve/oid") ("ecdsa" "arithmetic" "ecdsa-core/sign" "ecdsa-core/verify" "sha256" "zeroize") ("ecdh" "elliptic-curve/ecdh" "zeroize") ("digest" "elliptic-curve/digest" "ecdsa-core/digest") ("default" "arithmetic" "std") ("arithmetic" "elliptic-curve/arithmetic"))))))

(define-public crate-p256-0.5.1 (c (n "p256") (v "0.5.1") (d (list (d (n "ecdsa-core") (r "^0.8") (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.8") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.6") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "rand_core") (r "^0.5") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (k 0)))) (h "0qbv6a4grw1l533pa7dgqiyrr5g04nmvqyjp8xcrs9kqbhvq5g8f") (f (quote (("zeroize" "elliptic-curve/zeroize") ("test-vectors") ("std" "elliptic-curve/std") ("sha256" "digest" "ecdsa-core/hazmat" "sha2") ("oid" "elliptic-curve/oid") ("ecdsa" "arithmetic" "ecdsa-core/sign" "ecdsa-core/verify" "sha256" "zeroize") ("ecdh" "elliptic-curve/ecdh" "zeroize") ("digest" "elliptic-curve/digest" "ecdsa-core/digest") ("default" "arithmetic" "std") ("arithmetic" "elliptic-curve/arithmetic"))))))

(define-public crate-p256-0.5.2 (c (n "p256") (v "0.5.2") (d (list (d (n "ecdsa-core") (r "^0.8") (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.8") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.6") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "rand_core") (r "^0.5") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (k 0)))) (h "1009131aanv8bp5ywvbb9dyc5x7gqx0gm5pmwav54c2zgs7da3i8") (f (quote (("zeroize" "elliptic-curve/zeroize") ("test-vectors") ("std" "elliptic-curve/std") ("sha256" "digest" "ecdsa-core/hazmat" "sha2") ("oid" "elliptic-curve/oid") ("ecdsa" "arithmetic" "ecdsa-core/sign" "ecdsa-core/verify" "sha256" "zeroize") ("ecdh" "elliptic-curve/ecdh" "zeroize") ("digest" "elliptic-curve/digest" "ecdsa-core/digest") ("default" "arithmetic" "std") ("arithmetic" "elliptic-curve/arithmetic"))))))

(define-public crate-p256-0.6.0 (c (n "p256") (v "0.6.0") (d (list (d (n "ecdsa-core") (r "^0.9") (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.9") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.7") (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "rand_core") (r "^0.5") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (k 0)))) (h "1xfk7jdxkak74igklnz7p4ndkjg07nd4lrn649v4ryv8k5rxgsjc") (f (quote (("zeroize" "elliptic-curve/zeroize") ("test-vectors" "hex-literal") ("std" "elliptic-curve/std") ("sha256" "digest" "ecdsa-core/hazmat" "sha2") ("pkcs8" "elliptic-curve/pkcs8" "zeroize") ("pem" "elliptic-curve/pem" "pkcs8") ("ecdsa" "arithmetic" "ecdsa-core/sign" "ecdsa-core/verify" "sha256" "zeroize") ("ecdh" "elliptic-curve/ecdh" "zeroize") ("digest" "elliptic-curve/digest" "ecdsa-core/digest") ("default" "arithmetic" "pkcs8" "std") ("arithmetic" "elliptic-curve/arithmetic"))))))

(define-public crate-p256-0.7.0 (c (n "p256") (v "0.7.0") (d (list (d (n "ecdsa-core") (r "^0.10") (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.10") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.8") (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "rand_core") (r "^0.5") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (k 0)))) (h "1k0jgwyhcjsw7sg3w1yclf91lqgpkyg2xijf92n5h6j3slp4vvc0") (f (quote (("zeroize" "elliptic-curve/zeroize") ("test-vectors" "hex-literal") ("std" "elliptic-curve/std") ("sha256" "digest" "ecdsa-core/hazmat" "sha2") ("pkcs8" "elliptic-curve/pkcs8" "zeroize") ("pem" "elliptic-curve/pem" "pkcs8") ("ecdsa" "arithmetic" "ecdsa-core/sign" "ecdsa-core/verify" "sha256" "zeroize") ("ecdh" "elliptic-curve/ecdh" "zeroize") ("digest" "elliptic-curve/digest" "ecdsa-core/digest") ("default" "arithmetic" "pkcs8" "std") ("arithmetic" "elliptic-curve/arithmetic"))))))

(define-public crate-p256-0.7.1 (c (n "p256") (v "0.7.1") (d (list (d (n "ecdsa-core") (r "^0.10") (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.10") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.8") (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "rand_core") (r "^0.5") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (k 0)))) (h "15rdz894qjlywx5hdinljf2rqwmnxljyk90z3hls72rp3llpmwrr") (f (quote (("zeroize" "elliptic-curve/zeroize") ("test-vectors" "hex-literal") ("std" "elliptic-curve/std") ("sha256" "digest" "ecdsa-core/hazmat" "sha2") ("pkcs8" "elliptic-curve/pkcs8" "zeroize") ("pem" "elliptic-curve/pem" "pkcs8") ("ecdsa" "arithmetic" "ecdsa-core/sign" "ecdsa-core/verify" "sha256" "zeroize") ("ecdh" "elliptic-curve/ecdh" "zeroize") ("digest" "elliptic-curve/digest" "ecdsa-core/digest") ("default" "arithmetic" "pkcs8" "std") ("arithmetic" "elliptic-curve/arithmetic"))))))

(define-public crate-p256-0.7.2 (c (n "p256") (v "0.7.2") (d (list (d (n "ecdsa-core") (r "^0.10") (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.10") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.8") (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "rand_core") (r "^0.5") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (k 0)))) (h "1r4xjkh34r8fcpha80w6p8f64vkfiyrlhjms0lrz7csb41m1k83w") (f (quote (("zeroize" "elliptic-curve/zeroize") ("test-vectors" "hex-literal") ("std" "ecdsa-core/std" "elliptic-curve/std") ("sha256" "digest" "ecdsa-core/hazmat" "sha2") ("pkcs8" "elliptic-curve/pkcs8" "zeroize") ("pem" "elliptic-curve/pem" "pkcs8") ("ecdsa" "arithmetic" "ecdsa-core/sign" "ecdsa-core/verify" "sha256" "zeroize") ("ecdh" "elliptic-curve/ecdh" "zeroize") ("digest" "elliptic-curve/digest" "ecdsa-core/digest") ("default" "arithmetic" "pkcs8" "std") ("arithmetic" "elliptic-curve/arithmetic"))))))

(define-public crate-p256-0.8.0-pre (c (n "p256") (v "0.8.0-pre") (d (list (d (n "ecdsa-core") (r "=0.11.0-pre.1") (f (quote ("der"))) (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "=0.11.0-pre.1") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.9") (f (quote ("hazmat"))) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (k 0)))) (h "19xkankvzwixgypk134y4bzgmfipxs7hjjrn2ky1ialv65256d37") (f (quote (("zeroize" "elliptic-curve/zeroize") ("test-vectors" "hex-literal") ("std" "ecdsa-core/std" "elliptic-curve/std") ("sha256" "digest" "ecdsa-core/hazmat" "sha2") ("pkcs8" "elliptic-curve/pkcs8" "zeroize") ("pem" "elliptic-curve/pem" "pkcs8") ("jwk" "elliptic-curve/jwk") ("ecdsa" "arithmetic" "ecdsa-core/sign" "ecdsa-core/verify" "sha256" "zeroize") ("ecdh" "arithmetic" "elliptic-curve/ecdh" "zeroize") ("digest" "ecdsa-core/digest") ("default" "arithmetic" "pkcs8" "std") ("arithmetic" "elliptic-curve/arithmetic")))) (y #t)))

(define-public crate-p256-0.8.0-pre.1 (c (n "p256") (v "0.8.0-pre.1") (d (list (d (n "blobby") (r "^0.3") (d #t) (k 2)) (d (n "ecdsa-core") (r "=0.11.0-pre.2") (f (quote ("der"))) (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "=0.11.0-pre.2") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.9") (f (quote ("hazmat"))) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (k 0)))) (h "0z47065k16jnr2sr496f3kkkgr6lcrbf7fxjsw8vh1kgzcwr81pm") (f (quote (("zeroize" "elliptic-curve/zeroize") ("test-vectors" "hex-literal") ("std" "ecdsa-core/std" "elliptic-curve/std") ("sha256" "digest" "ecdsa-core/hazmat" "sha2") ("pkcs8" "elliptic-curve/pkcs8" "zeroize") ("pem" "elliptic-curve/pem" "pkcs8") ("jwk" "elliptic-curve/jwk") ("ecdsa" "arithmetic" "ecdsa-core/sign" "ecdsa-core/verify" "sha256" "zeroize") ("ecdh" "arithmetic" "elliptic-curve/ecdh" "zeroize") ("digest" "ecdsa-core/digest") ("default" "arithmetic" "pkcs8" "std") ("arithmetic" "elliptic-curve/arithmetic"))))))

(define-public crate-p256-0.7.3 (c (n "p256") (v "0.7.3") (d (list (d (n "ecdsa-core") (r "^0.10") (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.10") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.8") (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "rand_core") (r "^0.5") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (k 0)))) (h "14gfvdiy59rdhfm680r4sicb2ffnrg94cryl58nzpj0fx5pw1p4a") (f (quote (("zeroize" "elliptic-curve/zeroize") ("test-vectors" "hex-literal") ("std" "ecdsa-core/std" "elliptic-curve/std") ("sha256" "digest" "ecdsa-core/hazmat" "sha2") ("pkcs8" "elliptic-curve/pkcs8" "zeroize") ("pem" "elliptic-curve/pem" "pkcs8") ("ecdsa" "arithmetic" "ecdsa-core/sign" "ecdsa-core/verify" "sha256" "zeroize") ("ecdh" "elliptic-curve/ecdh" "zeroize") ("digest" "elliptic-curve/digest" "ecdsa-core/digest") ("default" "arithmetic" "ecdsa" "pkcs8" "std") ("arithmetic" "elliptic-curve/arithmetic"))))))

(define-public crate-p256-0.8.0 (c (n "p256") (v "0.8.0") (d (list (d (n "blobby") (r "^0.3") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.11") (f (quote ("der"))) (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.11") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.9.11") (f (quote ("hazmat"))) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (k 0)))) (h "1jyjmsby2ymmjn0z2wfmpnr8i9alnkbiqm3d0jpjx42ky3vh3wqw") (f (quote (("zeroize" "elliptic-curve/zeroize") ("test-vectors" "hex-literal") ("std" "ecdsa-core/std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("pkcs8" "elliptic-curve/pkcs8" "zeroize") ("pem" "elliptic-curve/pem" "pkcs8") ("jwk" "elliptic-curve/jwk") ("ecdsa" "arithmetic" "ecdsa-core/sign" "ecdsa-core/verify" "sha256" "zeroize") ("ecdh" "arithmetic" "elliptic-curve/ecdh" "zeroize") ("digest" "ecdsa-core/digest" "ecdsa-core/hazmat") ("default" "arithmetic" "ecdsa" "pkcs8" "std") ("arithmetic" "elliptic-curve/arithmetic"))))))

(define-public crate-p256-0.8.1 (c (n "p256") (v "0.8.1") (d (list (d (n "blobby") (r "^0.3") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.11") (f (quote ("der"))) (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.11") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.9.11") (f (quote ("hazmat"))) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (k 0)))) (h "0i2qrrx6vg2hjrr55wkhil0a7llgvw22npmg2r67qaakfhlga19g") (f (quote (("zeroize" "elliptic-curve/zeroize") ("test-vectors" "hex-literal") ("std" "ecdsa-core/std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("pkcs8" "elliptic-curve/pkcs8" "zeroize") ("pem" "elliptic-curve/pem" "pkcs8") ("jwk" "elliptic-curve/jwk") ("ecdsa" "arithmetic" "ecdsa-core/sign" "ecdsa-core/verify" "sha256" "zeroize") ("ecdh" "arithmetic" "elliptic-curve/ecdh" "zeroize") ("digest" "ecdsa-core/digest" "ecdsa-core/hazmat") ("default" "arithmetic" "ecdsa" "pkcs8" "std") ("arithmetic" "elliptic-curve/arithmetic"))))))

(define-public crate-p256-0.9.0 (c (n "p256") (v "0.9.0") (d (list (d (n "blobby") (r "^0.3") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.12") (f (quote ("der"))) (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.12") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.10") (f (quote ("hazmat"))) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (k 0)))) (h "11ni90qif6apl497c2rbqzhxv0vipp8pnfak55kqlk5f3f73clyh") (f (quote (("zeroize" "elliptic-curve/zeroize") ("test-vectors" "hex-literal") ("std" "ecdsa-core/std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("pkcs8" "elliptic-curve/pkcs8" "zeroize") ("pem" "elliptic-curve/pem" "pkcs8") ("jwk" "elliptic-curve/jwk") ("ecdsa" "arithmetic" "ecdsa-core/sign" "ecdsa-core/verify" "sha256" "zeroize") ("ecdh" "arithmetic" "elliptic-curve/ecdh" "zeroize") ("digest" "ecdsa-core/digest" "ecdsa-core/hazmat") ("default" "arithmetic" "ecdsa" "pkcs8" "std") ("bits" "arithmetic" "elliptic-curve/bits") ("arithmetic" "elliptic-curve/arithmetic"))))))

(define-public crate-p256-0.10.0-pre.1 (c (n "p256") (v "0.10.0-pre.1") (d (list (d (n "blobby") (r "^0.3") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.13") (f (quote ("der"))) (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.13") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.11") (f (quote ("hazmat" "sec1"))) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sec1") (r "^0.2") (k 0)) (d (n "sha2") (r "^0.9") (o #t) (k 0)))) (h "0j0s262gxl7ial6cx1y4icqxidvb60kfh59b5dn3yhdy9j5glikz") (f (quote (("test-vectors" "hex-literal") ("std" "ecdsa-core/std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("serde" "ecdsa-core/serde" "elliptic-curve/serde" "sec1/serde") ("pkcs8" "elliptic-curve/pkcs8") ("pem" "elliptic-curve/pem" "ecdsa-core/pem" "pkcs8") ("jwk" "elliptic-curve/jwk") ("ecdsa" "arithmetic" "ecdsa-core/sign" "ecdsa-core/verify" "sha256") ("ecdh" "arithmetic" "elliptic-curve/ecdh") ("digest" "ecdsa-core/digest" "ecdsa-core/hazmat") ("default" "arithmetic" "ecdsa" "pkcs8" "std") ("bits" "arithmetic" "elliptic-curve/bits") ("arithmetic" "elliptic-curve/arithmetic")))) (r "1.56")))

(define-public crate-p256-0.10.0 (c (n "p256") (v "0.10.0") (d (list (d (n "blobby") (r "^0.3") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.13") (f (quote ("der"))) (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.13") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.11.5") (f (quote ("hazmat" "sec1"))) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sec1") (r "^0.2") (k 0)) (d (n "sha2") (r "^0.9") (o #t) (k 0)))) (h "1yklbyf0i4dasmvv4iswqjd2hv24q764nly6i99d9d9i00qwbq6h") (f (quote (("test-vectors" "hex-literal") ("std" "ecdsa-core/std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("serde" "ecdsa-core/serde" "elliptic-curve/serde" "sec1/serde") ("pkcs8" "elliptic-curve/pkcs8") ("pem" "elliptic-curve/pem" "ecdsa-core/pem" "pkcs8") ("jwk" "elliptic-curve/jwk") ("ecdsa" "arithmetic" "ecdsa-core/sign" "ecdsa-core/verify" "sha256") ("ecdh" "arithmetic" "elliptic-curve/ecdh") ("digest" "ecdsa-core/digest" "ecdsa-core/hazmat") ("default" "arithmetic" "ecdsa" "pkcs8" "std") ("bits" "arithmetic" "elliptic-curve/bits") ("arithmetic" "elliptic-curve/arithmetic")))) (r "1.56")))

(define-public crate-p256-0.10.1 (c (n "p256") (v "0.10.1") (d (list (d (n "blobby") (r "^0.3") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.13") (f (quote ("der"))) (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.13") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.11.7") (f (quote ("hazmat" "sec1"))) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sec1") (r "^0.2") (k 0)) (d (n "sha2") (r "^0.9") (o #t) (k 0)))) (h "0fsfnanz6pn82wxa58pwbj7zp8sip58829i66kirzgjzcy06swqr") (f (quote (("voprf" "elliptic-curve/voprf" "sha2") ("test-vectors" "hex-literal") ("std" "ecdsa-core/std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("serde" "ecdsa-core/serde" "elliptic-curve/serde" "sec1/serde") ("pkcs8" "elliptic-curve/pkcs8") ("pem" "elliptic-curve/pem" "ecdsa-core/pem" "pkcs8") ("jwk" "elliptic-curve/jwk") ("hash2curve" "elliptic-curve/hash2curve") ("ecdsa" "arithmetic" "ecdsa-core/sign" "ecdsa-core/verify" "sha256") ("ecdh" "arithmetic" "elliptic-curve/ecdh") ("digest" "ecdsa-core/digest" "ecdsa-core/hazmat") ("default" "arithmetic" "ecdsa" "pkcs8" "std") ("bits" "arithmetic" "elliptic-curve/bits") ("arithmetic" "elliptic-curve/arithmetic")))) (r "1.56")))

(define-public crate-p256-0.11.0-pre.0 (c (n "p256") (v "0.11.0-pre.0") (d (list (d (n "blobby") (r "^0.3") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.14.0-pre.1") (f (quote ("der"))) (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.14.0-pre.1") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.12.0-pre.1") (f (quote ("hazmat" "sec1"))) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sec1") (r "^0.2") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (k 0)))) (h "0b3y3f1gsf242f3i2v6a4hi7m0jzaqx1lh9hprw82q79q3712ias") (f (quote (("voprf" "elliptic-curve/voprf" "sha2") ("test-vectors" "hex-literal") ("std" "ecdsa-core/std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("serde" "ecdsa-core/serde" "elliptic-curve/serde" "sec1/serde") ("pkcs8" "elliptic-curve/pkcs8") ("pem" "elliptic-curve/pem" "ecdsa-core/pem" "pkcs8") ("jwk" "elliptic-curve/jwk") ("hash2curve" "arithmetic" "elliptic-curve/hash2curve") ("ecdsa" "arithmetic" "ecdsa-core/sign" "ecdsa-core/verify" "sha256") ("ecdh" "arithmetic" "elliptic-curve/ecdh") ("digest" "ecdsa-core/digest" "ecdsa-core/hazmat") ("default" "arithmetic" "ecdsa" "pkcs8" "std") ("bits" "arithmetic" "elliptic-curve/bits") ("arithmetic" "elliptic-curve/arithmetic")))) (r "1.57")))

(define-public crate-p256-0.11.0 (c (n "p256") (v "0.11.0") (d (list (d (n "blobby") (r "^0.3") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.14") (f (quote ("der"))) (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.14") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.12") (f (quote ("hazmat" "sec1"))) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "serdect") (r "^0.1") (o #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (k 0)))) (h "1ww97amdahizlbk0f4j2p10kkzxm91baclvdcl4w0hzbfimk7rzk") (f (quote (("voprf" "elliptic-curve/voprf" "sha2") ("test-vectors" "hex-literal") ("std" "ecdsa-core/std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("serde" "ecdsa-core/serde" "elliptic-curve/serde" "serdect") ("pkcs8" "ecdsa-core/pkcs8" "elliptic-curve/pkcs8") ("pem" "elliptic-curve/pem" "ecdsa-core/pem" "pkcs8") ("jwk" "elliptic-curve/jwk") ("hash2curve" "arithmetic" "elliptic-curve/hash2curve") ("ecdsa" "arithmetic" "ecdsa-core/sign" "ecdsa-core/verify" "sha256") ("ecdh" "arithmetic" "elliptic-curve/ecdh") ("digest" "ecdsa-core/digest" "ecdsa-core/hazmat") ("default" "arithmetic" "ecdsa" "pkcs8" "std") ("bits" "arithmetic" "elliptic-curve/bits") ("arithmetic" "elliptic-curve/arithmetic")))) (r "1.57")))

(define-public crate-p256-0.11.1 (c (n "p256") (v "0.11.1") (d (list (d (n "blobby") (r "^0.3") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.14") (f (quote ("der"))) (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.14") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.12.1") (f (quote ("hazmat" "sec1"))) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "serdect") (r "^0.1") (o #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (k 0)))) (h "151mqd8m25c8ib97saz4fwkg4nhw098i051gazg2l7pm13flxx2i") (f (quote (("voprf" "elliptic-curve/voprf" "sha2") ("test-vectors" "hex-literal") ("std" "ecdsa-core/std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("serde" "ecdsa-core/serde" "elliptic-curve/serde" "serdect") ("pkcs8" "ecdsa-core/pkcs8" "elliptic-curve/pkcs8") ("pem" "elliptic-curve/pem" "ecdsa-core/pem" "pkcs8") ("jwk" "elliptic-curve/jwk") ("hash2curve" "arithmetic" "elliptic-curve/hash2curve") ("expose-field" "arithmetic") ("ecdsa" "arithmetic" "ecdsa-core/sign" "ecdsa-core/verify" "sha256") ("ecdh" "arithmetic" "elliptic-curve/ecdh") ("digest" "ecdsa-core/digest" "ecdsa-core/hazmat") ("default" "arithmetic" "ecdsa" "pkcs8" "std") ("bits" "arithmetic" "elliptic-curve/bits") ("arithmetic" "elliptic-curve/arithmetic")))) (r "1.57")))

(define-public crate-p256-0.12.0-pre.0 (c (n "p256") (v "0.12.0-pre.0") (d (list (d (n "blobby") (r "^0.3") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "ecdsa-core") (r "=0.15.0-pre.0") (f (quote ("der"))) (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "=0.15.0-pre.0") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.12") (f (quote ("hazmat" "sec1"))) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "primeorder") (r "^0.0.1") (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "serdect") (r "^0.1") (o #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (k 0)))) (h "1rcw79n2imbkwwnfnrkznqijy3mnbs7icnfsk9cjn9kc778shpr7") (f (quote (("voprf" "elliptic-curve/voprf" "sha2") ("test-vectors" "hex-literal") ("std" "alloc" "ecdsa-core/std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("serde" "ecdsa-core/serde" "elliptic-curve/serde" "serdect") ("pkcs8" "ecdsa-core/pkcs8" "elliptic-curve/pkcs8") ("pem" "elliptic-curve/pem" "ecdsa-core/pem" "pkcs8") ("jwk" "elliptic-curve/jwk") ("hash2curve" "arithmetic" "elliptic-curve/hash2curve") ("expose-field" "arithmetic") ("ecdsa" "arithmetic" "ecdsa-core/sign" "ecdsa-core/verify" "sha256") ("ecdh" "arithmetic" "elliptic-curve/ecdh") ("digest" "ecdsa-core/digest" "ecdsa-core/hazmat") ("default" "arithmetic" "ecdsa" "pkcs8" "std") ("bits" "arithmetic" "elliptic-curve/bits") ("arithmetic" "elliptic-curve/arithmetic") ("alloc" "elliptic-curve/alloc")))) (r "1.57")))

(define-public crate-p256-0.12.0-pre.1 (c (n "p256") (v "0.12.0-pre.1") (d (list (d (n "blobby") (r "^0.3") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "ecdsa-core") (r "=0.15.0-pre.1") (f (quote ("der"))) (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "=0.15.0-pre.1") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.12") (f (quote ("hazmat" "sec1"))) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "primeorder") (r "=0.0.2") (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "serdect") (r "^0.1") (o #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (k 0)))) (h "0l1ljviklm5nnbnp2s31bc5cfcy0fggx5mkd113gjlsc1lhkn6pw") (f (quote (("voprf" "elliptic-curve/voprf" "sha2") ("test-vectors" "hex-literal") ("std" "alloc" "ecdsa-core/std" "elliptic-curve/std") ("sha256" "digest" "sha2") ("serde" "ecdsa-core/serde" "elliptic-curve/serde" "serdect") ("pkcs8" "ecdsa-core/pkcs8" "elliptic-curve/pkcs8") ("pem" "elliptic-curve/pem" "ecdsa-core/pem" "pkcs8") ("jwk" "elliptic-curve/jwk") ("hash2curve" "arithmetic" "elliptic-curve/hash2curve") ("expose-field" "arithmetic") ("ecdsa" "arithmetic" "ecdsa-core/sign" "ecdsa-core/verify" "sha256") ("ecdh" "arithmetic" "elliptic-curve/ecdh") ("digest" "ecdsa-core/digest" "ecdsa-core/hazmat") ("default" "arithmetic" "ecdsa" "pkcs8" "std") ("bits" "arithmetic" "elliptic-curve/bits") ("arithmetic" "elliptic-curve/arithmetic") ("alloc" "elliptic-curve/alloc")))) (r "1.57")))

(define-public crate-p256-0.12.0 (c (n "p256") (v "0.12.0") (d (list (d (n "blobby") (r "^0.3") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.15") (f (quote ("der"))) (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.15") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.12") (f (quote ("hazmat" "sec1"))) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "primeorder") (r "^0.12") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "serdect") (r "^0.1") (o #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (k 0)))) (h "0m8f1d0n69bvm4xpranhwv3nrvcq3lcfqn4cqsxbqhyfrfrj9ha9") (f (quote (("voprf" "elliptic-curve/voprf" "sha2") ("test-vectors" "hex-literal") ("sha256" "digest" "sha2") ("serde" "ecdsa-core/serde" "elliptic-curve/serde" "serdect") ("pkcs8" "ecdsa-core/pkcs8" "elliptic-curve/pkcs8") ("pem" "elliptic-curve/pem" "ecdsa-core/pem" "pkcs8") ("jwk" "elliptic-curve/jwk") ("hash2curve" "arithmetic" "elliptic-curve/hash2curve") ("expose-field" "arithmetic") ("ecdsa" "arithmetic" "ecdsa-core/signing" "ecdsa-core/verifying" "sha256") ("ecdh" "arithmetic" "elliptic-curve/ecdh") ("digest" "ecdsa-core/digest" "ecdsa-core/hazmat") ("default" "arithmetic" "ecdsa" "pkcs8" "std") ("bits" "arithmetic" "elliptic-curve/bits") ("arithmetic" "elliptic-curve/arithmetic")))) (s 2) (e (quote (("std" "alloc" "ecdsa-core?/std" "elliptic-curve/std") ("alloc" "ecdsa-core?/alloc" "elliptic-curve/alloc")))) (r "1.60")))

(define-public crate-p256-0.13.0 (c (n "p256") (v "0.13.0") (d (list (d (n "blobby") (r "^0.3") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.16") (f (quote ("der"))) (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.16") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.13") (f (quote ("hazmat" "sec1"))) (k 0)) (d (n "hex-literal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "primeorder") (r "^0.13") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "serdect") (r "^0.2") (o #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (k 0)))) (h "0iwdbgjkyb08pi29b1d3mq9ki185g4iwqm5hvv9sz0mabhzdlw3j") (f (quote (("voprf" "elliptic-curve/voprf" "sha2") ("test-vectors" "hex-literal") ("sha256" "digest" "sha2") ("serde" "ecdsa-core/serde" "elliptic-curve/serde" "serdect") ("pkcs8" "ecdsa-core/pkcs8" "elliptic-curve/pkcs8") ("pem" "elliptic-curve/pem" "ecdsa-core/pem" "pkcs8") ("jwk" "elliptic-curve/jwk") ("hash2curve" "arithmetic" "elliptic-curve/hash2curve") ("expose-field" "arithmetic") ("ecdsa" "arithmetic" "ecdsa-core/signing" "ecdsa-core/verifying" "sha256") ("ecdh" "arithmetic" "elliptic-curve/ecdh") ("digest" "ecdsa-core/digest" "ecdsa-core/hazmat") ("default" "arithmetic" "ecdsa" "pkcs8" "std") ("bits" "arithmetic" "elliptic-curve/bits") ("arithmetic" "elliptic-curve/arithmetic")))) (s 2) (e (quote (("std" "alloc" "ecdsa-core?/std" "elliptic-curve/std") ("alloc" "ecdsa-core?/alloc" "elliptic-curve/alloc")))) (r "1.65")))

(define-public crate-p256-0.13.1 (c (n "p256") (v "0.13.1") (d (list (d (n "blobby") (r "^0.3") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.16") (f (quote ("der"))) (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.16") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.13.1") (f (quote ("hazmat" "sec1"))) (k 0)) (d (n "hex-literal") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "primeorder") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "primeorder") (r "^0.13") (f (quote ("dev"))) (d #t) (k 2)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "serdect") (r "^0.2") (o #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (k 0)))) (h "1npr4r72rzbz527xy0bqcyxlczcl15zksk1g5farg19z46w08wyw") (f (quote (("voprf" "elliptic-curve/voprf" "sha2") ("sha256" "digest" "sha2") ("serde" "ecdsa-core/serde" "elliptic-curve/serde" "serdect") ("pkcs8" "ecdsa-core/pkcs8" "elliptic-curve/pkcs8") ("pem" "elliptic-curve/pem" "ecdsa-core/pem" "pkcs8") ("jwk" "elliptic-curve/jwk") ("hash2curve" "arithmetic" "elliptic-curve/hash2curve") ("expose-field" "arithmetic") ("ecdsa" "arithmetic" "ecdsa-core/signing" "ecdsa-core/verifying" "sha256") ("ecdh" "arithmetic" "elliptic-curve/ecdh") ("digest" "ecdsa-core/digest" "ecdsa-core/hazmat") ("default" "arithmetic" "ecdsa" "pkcs8" "std") ("bits" "arithmetic" "elliptic-curve/bits")))) (s 2) (e (quote (("test-vectors" "dep:hex-literal") ("std" "alloc" "ecdsa-core?/std" "elliptic-curve/std") ("arithmetic" "dep:primeorder" "elliptic-curve/arithmetic") ("alloc" "ecdsa-core?/alloc" "elliptic-curve/alloc")))) (r "1.65")))

(define-public crate-p256-0.13.2 (c (n "p256") (v "0.13.2") (d (list (d (n "blobby") (r "^0.3") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "ecdsa-core") (r "^0.16") (f (quote ("der"))) (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "^0.16") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "^0.13.1") (f (quote ("hazmat" "sec1"))) (k 0)) (d (n "hex-literal") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "primeorder") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "primeorder") (r "^0.13") (f (quote ("dev"))) (d #t) (k 2)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "serdect") (r "^0.2") (o #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (k 0)))) (h "0jyd3c3k239ybs59ixpnl7dqkmm072fr1js8kh7ldx58bzc3m1n9") (f (quote (("voprf" "elliptic-curve/voprf" "sha2") ("sha256" "digest" "sha2") ("pem" "elliptic-curve/pem" "ecdsa-core/pem" "pkcs8") ("jwk" "elliptic-curve/jwk") ("hash2curve" "arithmetic" "elliptic-curve/hash2curve") ("expose-field" "arithmetic") ("ecdsa" "arithmetic" "ecdsa-core/signing" "ecdsa-core/verifying" "sha256") ("ecdh" "arithmetic" "elliptic-curve/ecdh") ("digest" "ecdsa-core/digest" "ecdsa-core/hazmat") ("default" "arithmetic" "ecdsa" "pem" "std") ("bits" "arithmetic" "elliptic-curve/bits")))) (s 2) (e (quote (("test-vectors" "dep:hex-literal") ("std" "alloc" "ecdsa-core?/std" "elliptic-curve/std") ("serde" "ecdsa-core?/serde" "elliptic-curve/serde" "primeorder?/serde" "serdect") ("pkcs8" "ecdsa-core?/pkcs8" "elliptic-curve/pkcs8") ("arithmetic" "dep:primeorder" "elliptic-curve/arithmetic") ("alloc" "ecdsa-core?/alloc" "elliptic-curve/alloc")))) (r "1.65")))

(define-public crate-p256-0.14.0-pre.0 (c (n "p256") (v "0.14.0-pre.0") (d (list (d (n "blobby") (r "^0.3") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "ecdsa-core") (r "=0.17.0-pre.4") (f (quote ("der"))) (o #t) (k 0) (p "ecdsa")) (d (n "ecdsa-core") (r "=0.17.0-pre.4") (f (quote ("dev"))) (k 2) (p "ecdsa")) (d (n "elliptic-curve") (r "=0.14.0-pre.3") (f (quote ("hazmat" "sec1"))) (k 0)) (d (n "hex-literal") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "primeorder") (r "=0.14.0-pre.0") (o #t) (d #t) (k 0)) (d (n "primeorder") (r "=0.14.0-pre.0") (f (quote ("dev"))) (d #t) (k 2)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "serdect") (r "^0.2") (o #t) (k 0)) (d (n "sha2") (r "=0.11.0-pre.2") (o #t) (k 0)))) (h "1ms37cnsp9srrc7442pkz0kmvhzccsfcc87vz0x5akw9zviwga80") (f (quote (("voprf" "elliptic-curve/voprf" "sha2") ("sha256" "digest" "sha2") ("pem" "elliptic-curve/pem" "ecdsa-core/pem" "pkcs8") ("jwk" "elliptic-curve/jwk") ("hash2curve" "arithmetic" "elliptic-curve/hash2curve") ("expose-field" "arithmetic") ("ecdsa" "arithmetic" "ecdsa-core/signing" "ecdsa-core/verifying" "sha256") ("ecdh" "arithmetic" "elliptic-curve/ecdh") ("digest" "ecdsa-core/digest" "ecdsa-core/hazmat") ("default" "arithmetic" "ecdsa" "pem" "std") ("bits" "arithmetic" "elliptic-curve/bits")))) (s 2) (e (quote (("test-vectors" "dep:hex-literal") ("std" "alloc" "ecdsa-core?/std" "elliptic-curve/std") ("serde" "ecdsa-core?/serde" "elliptic-curve/serde" "primeorder?/serde" "serdect") ("pkcs8" "ecdsa-core?/pkcs8" "elliptic-curve/pkcs8") ("arithmetic" "dep:primeorder" "elliptic-curve/arithmetic") ("alloc" "ecdsa-core?/alloc" "elliptic-curve/alloc" "primeorder?/alloc")))) (r "1.73")))

