(define-module (crates-io p2 pa p2panda-rs) #:use-module (crates-io))

(define-public crate-p2panda-rs-0.1.0 (c (n "p2panda-rs") (v "0.1.0") (d (list (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.65") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.2") (d #t) (k 2)))) (h "0bb8id0kzl7apvgi3plwiyck03lk9miwjfi7igj82s7lbsc9bhbx")))

(define-public crate-p2panda-rs-0.2.0 (c (n "p2panda-rs") (v "0.2.0") (d (list (d (n "arrayvec") (r "^0.5.2") (d #t) (k 0)) (d (n "bamboo-rs-core") (r "^0.1.0") (d #t) (k 0)) (d (n "cddl") (r "^0.8.7") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.7.3") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rstest") (r "^0.11.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.2") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1.7") (d #t) (k 0)) (d (n "sqlx") (r "^0.5.9") (f (quote ("runtime-async-std-rustls" "all-databases"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.29") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.78") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.28") (d #t) (k 2)) (d (n "yamf-hash") (r "^0.1.2") (d #t) (k 0)))) (h "090s3wllkyss2a5w5asvnj9yn2hhvbwn0gh5wrjx9v8nb9rwj408") (f (quote (("default") ("db-sqlx" "sqlx"))))))

(define-public crate-p2panda-rs-0.2.1 (c (n "p2panda-rs") (v "0.2.1") (d (list (d (n "arrayvec") (r "^0.5.2") (d #t) (k 0)) (d (n "bamboo-rs-core") (r "^0.1.0") (d #t) (k 0)) (d (n "cddl") (r "^0.8.7") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.7.3") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rstest") (r "^0.11.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.2") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1.7") (d #t) (k 0)) (d (n "sqlx") (r "^0.5.9") (f (quote ("runtime-async-std-rustls" "all-databases"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.29") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.78") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.28") (d #t) (k 2)) (d (n "yamf-hash") (r "^0.1.2") (d #t) (k 0)))) (h "1dvsnf2m46ss6kajz6p46g6m4bjiifzm26kdpcdc73s9km1zmibg") (f (quote (("default") ("db-sqlx" "sqlx"))))))

(define-public crate-p2panda-rs-0.3.0 (c (n "p2panda-rs") (v "0.3.0") (d (list (d (n "aquamarine") (r "^0.1.11") (d #t) (k 0)) (d (n "arrayvec") (r "^0.5.2") (d #t) (k 0)) (d (n "bamboo-rs-core-ed25519-yasmf") (r "^0.1.1") (d #t) (k 0)) (d (n "cddl") (r "^0.8.7") (d #t) (k 0)) (d (n "ciborium") (r "^0.2.0") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ctor") (r "^0.1.2") (d #t) (k 2)) (d (n "ed25519") (r "^1.3.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "incremental-topo") (r "^0.1.2") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "openmls") (r "^0.4.1") (f (quote ("crypto-subtle"))) (d #t) (k 0)) (d (n "openmls") (r "^0.4.1") (f (quote ("crypto-subtle" "test-utils"))) (d #t) (k 2)) (d (n "openmls_memory_keystore") (r "^0.1.0") (d #t) (k 0)) (d (n "openmls_rust_crypto") (r "^0.1.0") (d #t) (k 0)) (d (n "openmls_traits") (r "^0.1.0") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.7.3") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rstest") (r "^0.12.0") (d #t) (k 2)) (d (n "rstest_reuse") (r "^0.1.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.132") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.73") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tls_codec") (r "^0.2.0") (f (quote ("derive" "serde_serialize"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.78") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.28") (d #t) (k 2)) (d (n "yasmf-hash") (r "^0.1.1") (d #t) (k 0)))) (h "0ah9d5gjh0m2xn84dvvhhhs64drwc3va00r3y7n33ssm786spch2")))

(define-public crate-p2panda-rs-0.4.0 (c (n "p2panda-rs") (v "0.4.0") (d (list (d (n "arrayvec") (r "^0.5.2") (d #t) (k 0)) (d (n "async-std") (r "^1.12.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "bamboo-rs-core-ed25519-yasmf") (r "^0.1.1") (d #t) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (f (quote ("serde_cbor"))) (k 0)) (d (n "ciborium") (r "^0.2.0") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "ctor") (r "^0.1.22") (d #t) (k 2)) (d (n "ed25519") (r "^1.5.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "incremental-topo") (r "^0.1.2") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lipmaa-link") (r "^0.2.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "openmls") (r "^0.4.1") (f (quote ("crypto-subtle"))) (d #t) (k 0)) (d (n "openmls") (r "^0.4.1") (f (quote ("crypto-subtle" "test-utils"))) (d #t) (k 2)) (d (n "openmls_memory_keystore") (r "^0.1.0") (d #t) (k 0)) (d (n "openmls_rust_crypto") (r "^0.1.0") (d #t) (k 0)) (d (n "openmls_traits") (r "^0.1.0") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.7.3") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "regex") (r "^1.5.6") (d #t) (k 0)) (d (n "rstest") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.15.0") (d #t) (k 2)) (d (n "rstest_reuse") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "rstest_reuse") (r "^0.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4.3") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tls_codec") (r "^0.2.0") (f (quote ("derive" "serde_serialize"))) (d #t) (k 0)) (d (n "varu64") (r "^0.7.0") (o #t) (k 0)) (d (n "varu64") (r "^0.7.0") (k 2)) (d (n "wasm-bindgen") (r "^0.2.81") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.31") (d #t) (k 2)) (d (n "yasmf-hash") (r "^0.1.1") (d #t) (k 0)))) (h "0hrvdzz4jmi0jk8281miih2yy7dyz09lmx46mirj0riqkylkgh0h") (s 2) (e (quote (("testing" "dep:rstest" "dep:rstest_reuse" "dep:varu64"))))))

(define-public crate-p2panda-rs-0.5.0 (c (n "p2panda-rs") (v "0.5.0") (d (list (d (n "arrayvec") (r "^0.5.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 2)) (d (n "bamboo-rs-core-ed25519-yasmf") (r "^0.1.1") (d #t) (k 0)) (d (n "ciborium") (r "^0.2.0") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "ctor") (r "^0.1.23") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1.0.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "incremental-topo") (r "^0.1.2") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.59") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lipmaa-link") (r "^0.2.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.13.1") (d #t) (k 0)) (d (n "openmls") (r "^0.4.1") (f (quote ("crypto-subtle"))) (o #t) (d #t) (k 0)) (d (n "openmls") (r "^0.4.1") (f (quote ("crypto-subtle" "test-utils"))) (d #t) (k 2)) (d (n "openmls_memory_keystore") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "openmls_rust_crypto") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "openmls_traits") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "rstest") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.15.0") (d #t) (k 2)) (d (n "rstest_reuse") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "rstest_reuse") (r "^0.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.143") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)) (d (n "tls_codec") (r "^0.2.0") (f (quote ("derive" "serde_serialize"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.20.1") (f (quote ("rt" "macros" "rt-multi-thread"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.20.1") (f (quote ("rt" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "varu64") (r "^0.7.0") (o #t) (k 0)) (d (n "varu64") (r "^0.7.0") (k 2)) (d (n "wasm-bindgen") (r "^0.2.82") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.31") (d #t) (k 2)) (d (n "yasmf-hash") (r "^0.1.1") (d #t) (k 0)))) (h "1y5l96syx3j9dm5x3ifacp78l1v5wf5n9m25k6zr46js3kqlxvmi") (s 2) (e (quote (("test-utils" "storage-provider" "dep:rstest" "dep:rstest_reuse" "dep:varu64" "dep:tokio" "dep:async-trait") ("storage-provider" "dep:async-trait") ("secret-group" "dep:openmls" "dep:openmls_memory_keystore" "dep:openmls_rust_crypto" "dep:openmls_traits" "dep:tls_codec"))))))

(define-public crate-p2panda-rs-0.6.0 (c (n "p2panda-rs") (v "0.6.0") (d (list (d (n "arrayvec") (r "^0.5.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 2)) (d (n "bamboo-rs-core-ed25519-yasmf") (r "^0.1.1") (d #t) (k 0)) (d (n "ciborium") (r "^0.2.0") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "ctor") (r "^0.1.23") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1.0.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "incremental-topo") (r "^0.1.2") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.59") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lipmaa-link") (r "^0.2.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.13.1") (d #t) (k 0)) (d (n "openmls") (r "^0.4.1") (f (quote ("crypto-subtle"))) (o #t) (d #t) (k 0)) (d (n "openmls") (r "^0.4.1") (f (quote ("crypto-subtle" "test-utils"))) (d #t) (k 2)) (d (n "openmls_memory_keystore") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "openmls_rust_crypto") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "openmls_traits") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "rstest") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.15.0") (d #t) (k 2)) (d (n "rstest_reuse") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "rstest_reuse") (r "^0.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.143") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)) (d (n "tls_codec") (r "^0.2.0") (f (quote ("derive" "serde_serialize"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.20.1") (f (quote ("rt" "macros" "rt-multi-thread"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.20.1") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "varu64") (r "^0.7.0") (o #t) (k 0)) (d (n "varu64") (r "^0.7.0") (k 2)) (d (n "wasm-bindgen") (r "^0.2.82") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.31") (d #t) (k 2)) (d (n "yasmf-hash") (r "^0.1.1") (d #t) (k 0)))) (h "1ppdz240ws60n2anjwbcjglgz7shqbilp8bvg42jdkc3h72v1nk4") (s 2) (e (quote (("test-utils" "storage-provider" "dep:rstest" "dep:rstest_reuse" "dep:varu64" "dep:tokio" "dep:async-trait") ("storage-provider" "dep:async-trait") ("secret-group" "dep:openmls" "dep:openmls_memory_keystore" "dep:openmls_rust_crypto" "dep:openmls_traits" "dep:tls_codec"))))))

(define-public crate-p2panda-rs-0.7.0 (c (n "p2panda-rs") (v "0.7.0") (d (list (d (n "arrayvec") (r "^0.5.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.64") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.64") (d #t) (k 2)) (d (n "bamboo-rs-core-ed25519-yasmf") (r "^0.1.1") (d #t) (k 0)) (d (n "ciborium") (r "^0.2.0") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (t "cfg(unix)") (k 2)) (d (n "ctor") (r "^0.1.26") (d #t) (t "cfg(unix)") (k 2)) (d (n "ed25519-dalek") (r "^1.0.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "incremental-topo") (r "^0.2.1") (d #t) (t "cfg(unix)") (k 2)) (d (n "js-sys") (r "^0.3.61") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lipmaa-link") (r "^0.2.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.0") (d #t) (k 0)) (d (n "openmls") (r "^0.4.1") (f (quote ("crypto-subtle"))) (o #t) (d #t) (k 0)) (d (n "openmls") (r "^0.4.1") (f (quote ("crypto-subtle" "test-utils"))) (d #t) (t "cfg(unix)") (k 2)) (d (n "openmls_memory_keystore") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "openmls_rust_crypto") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "openmls_traits") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (t "cfg(unix)") (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "rstest") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.16.0") (d #t) (k 2)) (d (n "rstest_reuse") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "rstest_reuse") (r "^0.5.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tls_codec") (r "^0.2.0") (f (quote ("derive" "serde_serialize"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("rt" "macros" "rt-multi-thread"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "varu64") (r "^0.7.0") (o #t) (k 0)) (d (n "varu64") (r "^0.7.0") (k 2)) (d (n "wasm-bindgen") (r "^0.2.84") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "yasmf-hash") (r "^0.1.1") (d #t) (k 0)))) (h "1bmndcg9mjzpskgs0gas57vmxpm9sk65iwasma1sqnnczypb94x8") (s 2) (e (quote (("test-utils" "storage-provider" "dep:rstest" "dep:rstest_reuse" "dep:varu64" "dep:tokio" "dep:async-trait") ("storage-provider" "dep:async-trait") ("secret-group" "dep:openmls" "dep:openmls_memory_keystore" "dep:openmls_rust_crypto" "dep:openmls_traits" "dep:tls_codec"))))))

(define-public crate-p2panda-rs-0.7.1 (c (n "p2panda-rs") (v "0.7.1") (d (list (d (n "arrayvec") (r "^0.5.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.64") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.64") (d #t) (k 2)) (d (n "bamboo-rs-core-ed25519-yasmf") (r "^0.1.1") (d #t) (k 0)) (d (n "ciborium") (r "^0.2.0") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (t "cfg(unix)") (k 2)) (d (n "ctor") (r "^0.1.26") (d #t) (t "cfg(unix)") (k 2)) (d (n "ed25519-dalek") (r "^1.0.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "incremental-topo") (r "^0.2.1") (d #t) (t "cfg(unix)") (k 2)) (d (n "js-sys") (r "^0.3.61") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lipmaa-link") (r "^0.2.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.0") (d #t) (k 0)) (d (n "openmls") (r "^0.4.1") (f (quote ("crypto-subtle"))) (o #t) (d #t) (k 0)) (d (n "openmls") (r "^0.4.1") (f (quote ("crypto-subtle" "test-utils"))) (d #t) (t "cfg(unix)") (k 2)) (d (n "openmls_memory_keystore") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "openmls_rust_crypto") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "openmls_traits") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (t "cfg(unix)") (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "rstest") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.16.0") (d #t) (k 2)) (d (n "rstest_reuse") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "rstest_reuse") (r "^0.5.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tls_codec") (r "^0.2.0") (f (quote ("derive" "serde_serialize"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("rt" "macros" "rt-multi-thread"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "varu64") (r "^0.7.0") (o #t) (k 0)) (d (n "varu64") (r "^0.7.0") (k 2)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "yasmf-hash") (r "^0.1.1") (d #t) (k 0)))) (h "1c1lyh8gxsqavsqw2di0sw85dis3kmzzgzc7sfd0nnzldmd0wbs6") (s 2) (e (quote (("test-utils" "storage-provider" "dep:rstest" "dep:rstest_reuse" "dep:varu64" "dep:tokio" "dep:async-trait") ("storage-provider" "dep:async-trait") ("secret-group" "dep:openmls" "dep:openmls_memory_keystore" "dep:openmls_rust_crypto" "dep:openmls_traits" "dep:tls_codec"))))))

(define-public crate-p2panda-rs-0.8.0 (c (n "p2panda-rs") (v "0.8.0") (d (list (d (n "arrayvec") (r "^0.5.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.64") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.64") (d #t) (k 2)) (d (n "bamboo-rs-core-ed25519-yasmf") (r "^0.1.1") (d #t) (k 0)) (d (n "ciborium") (r "^0.2.0") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (t "cfg(unix)") (k 2)) (d (n "ctor") (r "^0.1.26") (d #t) (t "cfg(unix)") (k 2)) (d (n "ed25519-dalek") (r "^1.0.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "incremental-topo") (r "^0.2.1") (d #t) (t "cfg(unix)") (k 2)) (d (n "js-sys") (r "^0.3.61") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lipmaa-link") (r "^0.2.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.0") (d #t) (k 0)) (d (n "openmls") (r "^0.4.1") (f (quote ("crypto-subtle"))) (o #t) (d #t) (k 0)) (d (n "openmls") (r "^0.4.1") (f (quote ("crypto-subtle" "test-utils"))) (d #t) (t "cfg(unix)") (k 2)) (d (n "openmls_memory_keystore") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "openmls_rust_crypto") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "openmls_traits") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (t "cfg(unix)") (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "rstest") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.16.0") (d #t) (k 2)) (d (n "rstest_reuse") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "rstest_reuse") (r "^0.5.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tls_codec") (r "^0.2.0") (f (quote ("derive" "serde_serialize"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("rt" "macros" "rt-multi-thread"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "varu64") (r "^0.7.0") (o #t) (k 0)) (d (n "varu64") (r "^0.7.0") (k 2)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "yasmf-hash") (r "^0.1.1") (d #t) (k 0)))) (h "0i1xm21w3lf9wnvkj5zvgkwwjpznhlw058yfdx5lvc3zdsiq3kfa") (s 2) (e (quote (("test-utils" "storage-provider" "dep:rstest" "dep:rstest_reuse" "dep:varu64" "dep:tokio" "dep:async-trait") ("storage-provider" "dep:async-trait") ("secret-group" "dep:openmls" "dep:openmls_memory_keystore" "dep:openmls_rust_crypto" "dep:openmls_traits" "dep:tls_codec"))))))

(define-public crate-p2panda-rs-0.8.1 (c (n "p2panda-rs") (v "0.8.1") (d (list (d (n "arrayvec") (r "^0.5.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.64") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.64") (d #t) (k 2)) (d (n "bamboo-rs-core-ed25519-yasmf") (r "^0.1.1") (d #t) (k 0)) (d (n "ciborium") (r "^0.2.0") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (t "cfg(unix)") (k 2)) (d (n "ctor") (r "^0.1.26") (d #t) (t "cfg(unix)") (k 2)) (d (n "ed25519-dalek") (r "^1.0.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "incremental-topo") (r "^0.2.1") (d #t) (t "cfg(unix)") (k 2)) (d (n "js-sys") (r "^0.3.61") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lipmaa-link") (r "^0.2.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.0") (d #t) (k 0)) (d (n "openmls") (r "^0.4.1") (f (quote ("crypto-subtle"))) (o #t) (d #t) (k 0)) (d (n "openmls") (r "^0.4.1") (f (quote ("crypto-subtle" "test-utils"))) (d #t) (t "cfg(unix)") (k 2)) (d (n "openmls_memory_keystore") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "openmls_rust_crypto") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "openmls_traits") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (t "cfg(unix)") (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "rstest") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.16.0") (d #t) (k 2)) (d (n "rstest_reuse") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "rstest_reuse") (r "^0.5.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tls_codec") (r "^0.2.0") (f (quote ("derive" "serde_serialize"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("rt" "macros" "rt-multi-thread"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "varu64") (r "^0.7.0") (o #t) (k 0)) (d (n "varu64") (r "^0.7.0") (k 2)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "yasmf-hash") (r "^0.1.1") (d #t) (k 0)))) (h "15wd1xpylhxqahdr5k5a0fdrhfsklwdw5g92gpvs1jm39gv8w8pa") (s 2) (e (quote (("test-utils" "storage-provider" "dep:rstest" "dep:rstest_reuse" "dep:varu64" "dep:tokio" "dep:async-trait") ("storage-provider" "dep:async-trait") ("secret-group" "dep:openmls" "dep:openmls_memory_keystore" "dep:openmls_rust_crypto" "dep:openmls_traits" "dep:tls_codec"))))))

