(define-module (crates-io hn sw hnsw_rs) #:use-module (crates-io))

(define-public crate-hnsw_rs-0.1.0 (c (n "hnsw_rs") (v "0.1.0") (d (list (d (n "clap") (r "^2.29") (d #t) (k 0)) (d (n "cpu-time") (r "^0.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.2") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.4") (d #t) (k 0)) (d (n "hashbrown") (r "^0.3") (d #t) (k 0)) (d (n "hdf5") (r "^0.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("max_level_debug" "release_max_level_info"))) (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.6") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "rayon") (r "^0.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "simdeez") (r "^0.6") (d #t) (k 0)) (d (n "simple_logger") (r "^1.0") (d #t) (k 0)) (d (n "skiplist") (r "^0.2.10") (d #t) (k 0)) (d (n "time") (r "^0.1.39") (d #t) (k 0)) (d (n "typename") (r "^0.1") (d #t) (k 0)))) (h "0kagkdp9a2qwjgy2dwjqkf45z6zfvvb7cmjpr14y1gv8rb2r9mwn")))

(define-public crate-hnsw_rs-0.1.1 (c (n "hnsw_rs") (v "0.1.1") (d (list (d (n "clap") (r "^2.29") (d #t) (k 0)) (d (n "cpu-time") (r "^0.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.2") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.4") (d #t) (k 0)) (d (n "hashbrown") (r "^0.3") (d #t) (k 0)) (d (n "hdf5") (r "^0.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("max_level_debug" "release_max_level_info"))) (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.6") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "rayon") (r "^0.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "simdeez") (r "^0.6") (d #t) (k 0)) (d (n "simple_logger") (r "^1.0") (d #t) (k 0)) (d (n "skiplist") (r "^0.2.10") (d #t) (k 0)) (d (n "time") (r "^0.1.39") (d #t) (k 0)) (d (n "typename") (r "^0.1") (d #t) (k 0)))) (h "0lnw533m3bijpl76byxf901shrm1h6h3xf6mggl4kn9zny46c6ib")))

(define-public crate-hnsw_rs-0.1.2 (c (n "hnsw_rs") (v "0.1.2") (d (list (d (n "clap") (r "^2.29") (d #t) (k 0)) (d (n "cpu-time") (r "^0.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.2") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.4") (d #t) (k 0)) (d (n "hashbrown") (r "^0.3") (d #t) (k 0)) (d (n "hdf5") (r "^0.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("max_level_debug" "release_max_level_info"))) (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.6") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "rayon") (r "^0.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "simdeez") (r "^0.6") (d #t) (k 0)) (d (n "simple_logger") (r "^1.0") (d #t) (k 0)) (d (n "skiplist") (r "^0.2.10") (d #t) (k 0)) (d (n "time") (r "^0.1.39") (d #t) (k 0)) (d (n "typename") (r "^0.1") (d #t) (k 0)))) (h "0myabmzbww28n6qdjgxzdngr13csgq8pj9i4f39531b3ssnyw6ac")))

(define-public crate-hnsw_rs-0.1.3 (c (n "hnsw_rs") (v "0.1.3") (d (list (d (n "clap") (r "^2.29") (d #t) (k 0)) (d (n "cpu-time") (r "^0.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.7") (d #t) (k 0)) (d (n "hashbrown") (r "^0.3") (d #t) (k 0)) (d (n "hdf5") (r "^0.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("max_level_debug" "release_max_level_info"))) (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rayon") (r "^0.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "simdeez") (r "^0.6") (d #t) (k 0)) (d (n "simple_logger") (r "^1.0") (d #t) (k 0)) (d (n "skiplist") (r "^0.2.10") (d #t) (k 0)) (d (n "time") (r "^0.1.39") (d #t) (k 0)) (d (n "typename") (r "^0.1") (d #t) (k 0)))) (h "1s0nhcl6xxsh1nkcf6a73gby48v0mkdgc647l1jlhn59l9qd0yv9")))

(define-public crate-hnsw_rs-0.1.4 (c (n "hnsw_rs") (v "0.1.4") (d (list (d (n "clap") (r "^2.29") (d #t) (k 0)) (d (n "cpu-time") (r "^0.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.3") (d #t) (k 0)) (d (n "hdf5") (r "^0.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("max_level_debug" "release_max_level_info"))) (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rayon") (r "^0.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "simdeez") (r "^0.6") (d #t) (k 0)) (d (n "simple_logger") (r "^1.0") (d #t) (k 0)) (d (n "skiplist") (r "^0.2.10") (d #t) (k 0)) (d (n "time") (r "^0.1.39") (d #t) (k 0)) (d (n "typename") (r "^0.1") (d #t) (k 0)))) (h "11qfifim6534vpkayby0pgb7sxrg3spl72yyv06psghykd1b0rhs")))

(define-public crate-hnsw_rs-0.1.5 (c (n "hnsw_rs") (v "0.1.5") (d (list (d (n "clap") (r "^2.29") (d #t) (k 0)) (d (n "cpu-time") (r "^0.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.3") (d #t) (k 0)) (d (n "hdf5") (r "^0.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("max_level_debug" "release_max_level_info"))) (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rayon") (r "^0.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "simdeez") (r "^0.6") (d #t) (k 0)) (d (n "simple_logger") (r "^1.0") (d #t) (k 0)) (d (n "skiplist") (r "^0.2.10") (d #t) (k 0)) (d (n "time") (r "^0.1.39") (d #t) (k 0)) (d (n "typename") (r "^0.1") (d #t) (k 0)))) (h "0bra41g8py6rrcz7xiin36cpkc541zkdkfhzbhnka7aacpmdxhsj")))

(define-public crate-hnsw_rs-0.1.6 (c (n "hnsw_rs") (v "0.1.6") (d (list (d (n "clap") (r "^2.29") (d #t) (k 0)) (d (n "cpu-time") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "hashbrown") (r "^0.9") (d #t) (k 0)) (d (n "hdf5") (r "^0.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("max_level_debug" "release_max_level_info"))) (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rayon") (r "^0.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "simdeez") (r "^1.0") (d #t) (k 0)) (d (n "skiplist") (r "^0.3") (d #t) (k 0)) (d (n "time") (r "^0.2") (d #t) (k 0)) (d (n "typename") (r "^0.1") (d #t) (k 0)))) (h "1yy472v6882n41ncfdzixf6c7rflb27zmkrjzsj5jdhzi0zabxd1")))

(define-public crate-hnsw_rs-0.1.7 (c (n "hnsw_rs") (v "0.1.7") (d (list (d (n "clap") (r "^2.29") (d #t) (k 0)) (d (n "cpu-time") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "hashbrown") (r "^0.9") (d #t) (k 0)) (d (n "hdf5") (r "^0.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("max_level_debug" "release_max_level_info"))) (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rayon") (r "^0.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "simdeez") (r "^1.0") (d #t) (k 0)) (d (n "skiplist") (r "^0.3") (d #t) (k 0)) (d (n "time") (r "^0.2") (d #t) (k 0)) (d (n "typename") (r "^0.1") (d #t) (k 0)))) (h "1l46qjxc7xhy1slcn7vl7hgw3vsbv2nvzv2wbcdvb1qf6wnxkqaq")))

(define-public crate-hnsw_rs-0.1.8 (c (n "hnsw_rs") (v "0.1.8") (d (list (d (n "clap") (r ">=2.29.0, <3.0.0") (d #t) (k 0)) (d (n "cpu-time") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "env_logger") (r ">=0.7.0, <0.8.0") (d #t) (k 0)) (d (n "hashbrown") (r ">=0.9.0, <0.10.0") (d #t) (k 0)) (d (n "hdf5") (r ">=0.7.0, <0.8.0") (d #t) (k 0)) (d (n "lazy_static") (r ">=1.4.0, <2.0.0") (d #t) (k 0)) (d (n "log") (r ">=0.4.0, <0.5.0") (f (quote ("max_level_debug" "release_max_level_info"))) (d #t) (k 0)) (d (n "ndarray") (r ">=0.13.0, <0.14.0") (d #t) (k 0)) (d (n "num_cpus") (r ">=1.8.0, <2.0.0") (d #t) (k 0)) (d (n "parking_lot") (r ">=0.11.0, <0.12.0") (d #t) (k 0)) (d (n "rand") (r ">=0.7.0, <0.8.0") (d #t) (k 0)) (d (n "rayon") (r ">=0.9.0, <0.10.0") (d #t) (k 0)) (d (n "serde") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "serde_derive") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "simdeez") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "skiplist") (r ">=0.3.0, <0.4.0") (d #t) (k 0)) (d (n "time") (r ">=0.2.0, <0.3.0") (d #t) (k 0)) (d (n "typename") (r ">=0.1.0, <0.2.0") (d #t) (k 0)))) (h "1mn1s38a26xfa8jvmninm9l4b2ldykv68if21154a76ndidymxi5")))

(define-public crate-hnsw_rs-0.1.9 (c (n "hnsw_rs") (v "0.1.9") (d (list (d (n "clap") (r "^2.29") (d #t) (k 0)) (d (n "cpu-time") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "hashbrown") (r "^0.9") (d #t) (k 0)) (d (n "hdf5") (r "^0.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rayon") (r "^0.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "simdeez") (r "^1.0") (d #t) (k 0)) (d (n "skiplist") (r "^0.3") (d #t) (k 0)) (d (n "time") (r "^0.2") (d #t) (k 0)) (d (n "typename") (r "^0.1") (d #t) (k 0)))) (h "14ll1xbawymfppczi95aq2411lcxqj93x43406zz7x94x82j6nq6")))

(define-public crate-hnsw_rs-0.1.10 (c (n "hnsw_rs") (v "0.1.10") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "clap") (r "^2.29") (d #t) (k 0)) (d (n "cpu-time") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "hashbrown") (r "^0.9") (d #t) (k 0)) (d (n "hdf5") (r "^0.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "simdeez") (r "^1.0") (d #t) (k 0)) (d (n "skiplist") (r "^0.3") (d #t) (k 0)) (d (n "time") (r "^0.2") (d #t) (k 0)))) (h "1dsmw1y52pi0n8k0486c2x3b8jjdbkvrhfps5vgjxp42lpbp5al0")))

(define-public crate-hnsw_rs-0.1.11 (c (n "hnsw_rs") (v "0.1.11") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "clap") (r "^2.29") (d #t) (k 0)) (d (n "cpu-time") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "hashbrown") (r "^0.9") (d #t) (k 0)) (d (n "hdf5") (r "^0.7") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (d #t) (k 2)) (d (n "num_cpus") (r "^1.8.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "simdeez") (r "^1.0") (d #t) (k 0)) (d (n "skiplist") (r "^0.3") (d #t) (k 0)) (d (n "time") (r "^0.2") (d #t) (k 0)))) (h "0dvq56174jr37r7pdi2ggg0nb0r9j6sdisb2krih0i13yqgr19w4")))

(define-public crate-hnsw_rs-0.1.12 (c (n "hnsw_rs") (v "0.1.12") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "clap") (r "^2.29") (d #t) (k 0)) (d (n "cpu-time") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "hashbrown") (r "^0.9") (d #t) (k 0)) (d (n "hdf5") (r "^0.7") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.14") (d #t) (k 2)) (d (n "num_cpus") (r "^1.8.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "simdeez") (r "^1.0") (d #t) (k 0)) (d (n "skiplist") (r "^0.3") (d #t) (k 0)) (d (n "time") (r "^0.2") (d #t) (k 0)))) (h "1s753p6bxcvggn3rb8wb710bbnhnkj02gh1an17aj9qk8qzrh4iv")))

(define-public crate-hnsw_rs-0.1.13 (c (n "hnsw_rs") (v "0.1.13") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "clap") (r "^2.29") (d #t) (k 0)) (d (n "cpu-time") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "hashbrown") (r "^0.9") (d #t) (k 0)) (d (n "hdf5") (r "^0.7") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.14") (d #t) (k 2)) (d (n "num_cpus") (r "^1.8.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "simdeez") (r "^1.0") (d #t) (k 0)) (d (n "skiplist") (r "^0.3") (d #t) (k 0)))) (h "1jz8in6ihxx522wy7qh5hfvkksp5ni23zvmv75qvrvy101dbrx8j")))

(define-public crate-hnsw_rs-0.1.14 (c (n "hnsw_rs") (v "0.1.14") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "clap") (r "^2.29") (d #t) (k 0)) (d (n "cpu-time") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "hashbrown") (r "^0.9") (d #t) (k 0)) (d (n "hdf5") (r "^0.7") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.14") (d #t) (k 2)) (d (n "num_cpus") (r "^1.8.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "simdeez") (r "^1.0") (d #t) (k 0)) (d (n "skiplist") (r "^0.3") (d #t) (k 0)))) (h "1vpiwxrymkhzbqs4x0jna13wld738q2ni2kx36li211srf5bcg76")))

(define-public crate-hnsw_rs-0.1.15 (c (n "hnsw_rs") (v "0.1.15") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "clap") (r "^2.29") (d #t) (k 0)) (d (n "cpu-time") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "hashbrown") (r "^0.9") (d #t) (k 0)) (d (n "hdf5") (r "^0.7") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.14") (d #t) (k 2)) (d (n "num_cpus") (r "^1.8.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "simdeez") (r "^1.0") (d #t) (k 0)) (d (n "skiplist") (r "^0.3") (d #t) (k 0)))) (h "105rf97gimljnr6a27nh2f35gx46fvxhahgs79nnv4v3d7vap9p2")))

(define-public crate-hnsw_rs-0.1.16 (c (n "hnsw_rs") (v "0.1.16") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "cpu-time") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "hashbrown") (r "^0.9") (d #t) (k 0)) (d (n "hdf5") (r "^0.8") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 2)) (d (n "num_cpus") (r "^1.8.0") (d #t) (k 0)) (d (n "packed_simd_2") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "simdeez") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "skiplist") (r "^0.3") (d #t) (k 0)))) (h "0abnd1jx4kjhn3jf6siprnps50mgas48l7wjw91w52hz4igbfy34") (f (quote (("stdsimd" "packed_simd_2") ("simdeez_f" "simdeez"))))))

(define-public crate-hnsw_rs-0.1.17 (c (n "hnsw_rs") (v "0.1.17") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "cpu-time") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "hashbrown") (r "^0.9") (d #t) (k 0)) (d (n "hdf5") (r "^0.8") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8.0") (d #t) (k 0)) (d (n "packed_simd_2") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "simdeez") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "skiplist") (r "^0.3") (d #t) (k 0)))) (h "0fl1pdqycz7qb423i3xhhdjcf2k89nxxpm7ay905y42krsslpm6h") (f (quote (("stdsimd" "packed_simd_2") ("simdeez_f" "simdeez"))))))

(define-public crate-hnsw_rs-0.1.18 (c (n "hnsw_rs") (v "0.1.18") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "cpu-time") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "hashbrown") (r "^0.9") (d #t) (k 0)) (d (n "hdf5") (r "^0.8") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8.0") (d #t) (k 0)) (d (n "packed_simd_2") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "simdeez") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "skiplist") (r "^0.3") (d #t) (k 0)))) (h "15vhdmwmbndz6sxa5ifpn2yskiqcnck1ibvqpk3mnqrznlrbrb6q") (f (quote (("stdsimd" "packed_simd_2") ("simdeez_f" "simdeez"))))))

(define-public crate-hnsw_rs-0.1.19 (c (n "hnsw_rs") (v "0.1.19") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "cpu-time") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "hashbrown") (r "^0.9") (d #t) (k 0)) (d (n "hdf5") (r "^0.8") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.8.0") (d #t) (k 0)) (d (n "packed_simd_2") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "simdeez") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "skiplist") (r "^0.3") (d #t) (k 0)))) (h "19dj2q0jcc7znr1gsnwm1q9lw11p5ik50vi833xg40cp8lkqfc5h") (f (quote (("stdsimd" "packed_simd_2") ("simdeez_f" "simdeez"))))))

(define-public crate-hnsw_rs-0.2.0 (c (n "hnsw_rs") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "cpu-time") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (d #t) (k 0)) (d (n "hdf5") (r "^0.8") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mmap-rs") (r "^0.6") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 0)) (d (n "packed_simd_2") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "simdeez") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "skiplist") (r "^0.3") (d #t) (k 0)))) (h "1wc5mm0ri104d361iqz8rm4jcha9kr0fz1glh60rqcvc6h00zx5s") (f (quote (("stdsimd" "packed_simd_2") ("simdeez_f" "simdeez") ("default"))))))

(define-public crate-hnsw_rs-0.2.1 (c (n "hnsw_rs") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cpu-time") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (d #t) (k 0)) (d (n "hdf5") (r "^0.8") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mmap-rs") (r "^0.6") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "simdeez") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "skiplist") (r "^0.5") (d #t) (k 0)))) (h "1p0v8aqd1q6sjgw907cgqzb94vvd2a2s014iv4c35q09ib5j9n9r") (f (quote (("stdsimd") ("simdeez_f" "simdeez") ("default"))))))

(define-public crate-hnsw_rs-0.3.0 (c (n "hnsw_rs") (v "0.3.0") (d (list (d (n "anndists") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cpu-time") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (d #t) (k 0)) (d (n "hdf5") (r "^0.8") (d #t) (k 2)) (d (n "indexmap") (r "^2.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mmap-rs") (r "^0.6") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "skiplist") (r "^0.5") (d #t) (k 2)))) (h "0rkd3cqx9z5alkprii1vkvjpdi1mcizaympx95jmvk09wmpllng4") (f (quote (("stdsimd" "anndists/stdsimd") ("simdeez_f" "anndists/simdeez_f") ("default"))))))

