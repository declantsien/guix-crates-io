(define-module (crates-io or kh orkhon) #:use-module (crates-io))

(define-public crate-orkhon-0.1.0 (c (n "orkhon") (v "0.1.0") (d (list (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.1") (d #t) (k 0)) (d (n "error-chain") (r "^0.12.1") (d #t) (k 0)) (d (n "futures-preview") (r "^0.3.0-alpha.16") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "pyo3") (r "^0.7.0-alpha.1") (d #t) (k 0)) (d (n "runtime") (r "^0.3.0-alpha.4") (d #t) (k 2)) (d (n "runtime-tokio") (r "^0.3.0-alpha.3") (d #t) (k 2)) (d (n "smallvec") (r "^0.6.9") (d #t) (k 0)) (d (n "static_assertions") (r "^0.3.2") (d #t) (k 2)) (d (n "tract-core") (r "^0.3.3") (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.3.3") (d #t) (k 0)))) (h "1v4bbnmnsn4dkgxdnw7dh48hm4l4ar11xkakiqkyj8g2qqc065s0")))

(define-public crate-orkhon-0.2.0 (c (n "orkhon") (v "0.2.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.6.1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lever") (r "^0.1.1-alpha.11") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "nuclei") (r "^0.1.2-alpha.1") (d #t) (k 2)) (d (n "pyo3") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 2)) (d (n "smallvec") (r "^1.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tract-core") (r "^0.11") (d #t) (k 0)) (d (n "tract-onnx") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.11") (f (quote ("conform"))) (d #t) (k 0)))) (h "0g68lyl2isci9hs6j7f3m1ga4vflf3yg4harha4vqkfzck34widm") (f (quote (("pymodel" "pyo3") ("onnxmodel" "tract-onnx") ("default"))))))

(define-public crate-orkhon-0.2.1 (c (n "orkhon") (v "0.2.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.6.1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lever") (r "^0.1.1-alpha.11") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "nuclei") (r "^0.1.2-alpha.1") (d #t) (k 2)) (d (n "pyo3") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 2)) (d (n "smallvec") (r "^1.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tract-core") (r "^0.11") (d #t) (k 0)) (d (n "tract-onnx") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.11") (f (quote ("conform"))) (d #t) (k 0)))) (h "0sywxj9144rgbjwcmyn0c9rr3cpvlfiawcqcc75zddd1s3nnjq9z") (f (quote (("pymodel" "pyo3") ("onnxmodel" "tract-onnx") ("default"))))))

(define-public crate-orkhon-0.2.2-alpha.1 (c (n "orkhon") (v "0.2.2-alpha.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.6.1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lever") (r "^0.1.1-alpha.11") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "nuclei") (r "^0.1.2-alpha.1") (d #t) (k 2)) (d (n "pyo3") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 2)) (d (n "smallvec") (r "^1.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tract-core") (r "^0.11") (d #t) (k 0)) (d (n "tract-onnx") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.11") (f (quote ("conform"))) (d #t) (k 0)))) (h "1c84lgzp2zmcxkanfn1bd2zkz7q5iflz510amfx0176qc1s3abxw") (f (quote (("pymodel" "pyo3") ("onnxmodel" "tract-onnx") ("default"))))))

(define-public crate-orkhon-0.2.2 (c (n "orkhon") (v "0.2.2") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.6.1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lever") (r "^0.1.1-alpha.11") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "nuclei") (r "^0.1.2-alpha.1") (d #t) (k 2)) (d (n "pyo3") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tract-core") (r "^0.11") (d #t) (k 0)) (d (n "tract-onnx") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.11") (f (quote ("conform"))) (d #t) (k 0)))) (h "08fwz6vxjck3c7yagjgwgam2mdyvh8h3yc8m8n55i1f3m3al637m") (f (quote (("pymodel" "pyo3") ("onnxmodel" "tract-onnx") ("default"))))))

(define-public crate-orkhon-0.2.3-alpha.1 (c (n "orkhon") (v "0.2.3-alpha.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.6.1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lever") (r "^0.1.1-alpha.11") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "nuclei") (r "^0.1.2-alpha.1") (d #t) (k 2)) (d (n "pyo3") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tract-core") (r "^0.11") (d #t) (k 0)) (d (n "tract-onnx") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.11") (f (quote ("conform"))) (d #t) (k 0)))) (h "1aa1niip1qdq8151niff89yjayr8xxfczjw66c1dfd5l6g4nw8ym") (f (quote (("pymodel" "pyo3") ("onnxmodel" "tract-onnx") ("default"))))))

(define-public crate-orkhon-0.2.3-alpha.2 (c (n "orkhon") (v "0.2.3-alpha.2") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.6.1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lever") (r "^0.1.1-alpha.11") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "nuclei") (r "^0.1.2-alpha.1") (d #t) (k 2)) (d (n "pyo3") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tract-core") (r "^0.12") (d #t) (k 0)) (d (n "tract-onnx") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.12") (f (quote ("conform"))) (o #t) (d #t) (k 0)))) (h "0gmgziwwpklkjhpwl08n4fx13f62v586p2cyzaq7zmsjisb076xb") (f (quote (("tfmodel" "tract-tensorflow") ("pymodel" "pyo3") ("onnxmodel" "tract-onnx") ("default"))))))

(define-public crate-orkhon-0.2.3 (c (n "orkhon") (v "0.2.3") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.6.1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lever") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "nuclei") (r "^0.1") (d #t) (k 2)) (d (n "pyo3") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tract-core") (r "^0.12") (d #t) (k 0)) (d (n "tract-onnx") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "tract-tensorflow") (r "^0.12") (f (quote ("conform"))) (o #t) (d #t) (k 0)))) (h "09rdswr056v5n6c11sy155zq7pgk27dyqhv5ynp43is2ayn3zcci") (f (quote (("tfmodel" "tract-tensorflow") ("pymodel" "pyo3") ("onnxmodel" "tract-onnx") ("default"))))))

