(define-module (crates-io or a- ora-store-sqlx) #:use-module (crates-io))

(define-public crate-ora-store-sqlx-0.1.0 (c (n "ora-store-sqlx") (v "0.1.0") (d (list (d (n "async-stream") (r "^0.3.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.72") (d #t) (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "ora-client") (r "^0.1.0") (d #t) (k 0)) (d (n "ora-common") (r "^0.1.0") (d #t) (k 0)) (d (n "ora-scheduler") (r "^0.1.0") (d #t) (k 0)) (d (n "ora-worker") (r "^0.1.0") (d #t) (k 0)) (d (n "sea-query") (r "^0.30.0") (f (quote ("with-uuid" "with-time" "with-json" "derive" "backend-postgres"))) (k 0)) (d (n "sea-query-binder") (r "^0.5.0") (f (quote ("with-uuid" "with-time" "with-json" "sqlx-postgres"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.104") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "sqlx") (r "^0.7.1") (f (quote ("time" "uuid" "json"))) (k 0)) (d (n "sqlx-migrate") (r "^0.7.0") (d #t) (k 0)) (d (n "sqlx-migrate") (r "^0.7.0") (f (quote ("generate"))) (d #t) (k 1)) (d (n "time") (r "^0.3.23") (d #t) (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("time" "rt" "sync" "macros"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "0i14czq643hmmb15b35g9nvrcw4m9asp4ghjwmz9n8g0dgvg7p5z") (f (quote (("postgres" "sqlx/postgres" "sqlx-migrate/postgres") ("default" "postgres"))))))

(define-public crate-ora-store-sqlx-0.2.0 (c (n "ora-store-sqlx") (v "0.2.0") (d (list (d (n "async-stream") (r "^0.3.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.72") (d #t) (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "ora-client") (r "^0.2.0") (d #t) (k 0)) (d (n "ora-common") (r "^0.1.0") (d #t) (k 0)) (d (n "ora-scheduler") (r "^0.2.0") (d #t) (k 0)) (d (n "ora-worker") (r "^0.2.1") (d #t) (k 0)) (d (n "sea-query") (r "^0.30.0") (f (quote ("with-uuid" "with-time" "with-json" "derive" "backend-postgres"))) (k 0)) (d (n "sea-query-binder") (r "^0.5.0") (f (quote ("with-uuid" "with-time" "with-json" "sqlx-postgres"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.104") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "sqlx") (r "^0.7.1") (f (quote ("time" "uuid" "json"))) (k 0)) (d (n "sqlx-migrate") (r "^0.7.0") (d #t) (k 0)) (d (n "sqlx-migrate") (r "^0.7.0") (f (quote ("generate"))) (d #t) (k 1)) (d (n "time") (r "^0.3.23") (d #t) (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("time" "rt" "sync" "macros"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1mcnz0y1kw9gaphb695vns07my2l2aqfw64nswryr6xh0gph51gj") (f (quote (("postgres" "sqlx/postgres" "sqlx-migrate/postgres") ("default" "postgres"))))))

(define-public crate-ora-store-sqlx-0.2.1 (c (n "ora-store-sqlx") (v "0.2.1") (d (list (d (n "async-stream") (r "^0.3.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.72") (d #t) (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "ora-client") (r "^0.2.0") (d #t) (k 0)) (d (n "ora-common") (r "^0.1.1") (d #t) (k 0)) (d (n "ora-scheduler") (r "^0.2.0") (d #t) (k 0)) (d (n "ora-worker") (r "^0.2.1") (d #t) (k 0)) (d (n "sea-query") (r "^0.30.0") (f (quote ("with-uuid" "with-time" "with-json" "derive" "backend-postgres"))) (k 0)) (d (n "sea-query-binder") (r "^0.5.0") (f (quote ("with-uuid" "with-time" "with-json" "sqlx-postgres"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.104") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "sqlx") (r "^0.7.1") (f (quote ("time" "uuid" "json"))) (k 0)) (d (n "sqlx-migrate") (r "^0.7.0") (d #t) (k 0)) (d (n "sqlx-migrate") (r "^0.7.0") (f (quote ("generate"))) (d #t) (k 1)) (d (n "time") (r "^0.3.23") (d #t) (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("time" "rt" "sync" "macros"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "02w16wixqbhd5n6jqhzr0c7zpw63yw0kimh8ks39ss5bmvfipl3f") (f (quote (("postgres" "sqlx/postgres" "sqlx-migrate/postgres") ("default" "postgres"))))))

(define-public crate-ora-store-sqlx-0.3.0 (c (n "ora-store-sqlx") (v "0.3.0") (d (list (d (n "async-stream") (r "^0.3.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.72") (d #t) (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "ora-client") (r "^0.2.0") (d #t) (k 0)) (d (n "ora-common") (r "^0.1.1") (d #t) (k 0)) (d (n "ora-scheduler") (r "^0.2.0") (d #t) (k 0)) (d (n "ora-worker") (r "^0.3.0") (d #t) (k 0)) (d (n "sea-query") (r "^0.30.0") (f (quote ("with-uuid" "with-time" "with-json" "derive" "backend-postgres"))) (k 0)) (d (n "sea-query-binder") (r "^0.5.0") (f (quote ("with-uuid" "with-time" "with-json" "sqlx-postgres"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.104") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "sqlx") (r "^0.7.1") (f (quote ("time" "uuid" "json"))) (k 0)) (d (n "sqlx-migrate") (r "^0.7.0") (d #t) (k 0)) (d (n "sqlx-migrate") (r "^0.7.0") (f (quote ("generate"))) (d #t) (k 1)) (d (n "time") (r "^0.3.23") (d #t) (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("time" "rt" "sync" "macros"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "14d5xkb35jvcbs6yaraxq29q0076ysjwcscf83wws1n0nkfs46an") (f (quote (("postgres" "sqlx/postgres" "sqlx-migrate/postgres") ("default" "postgres"))))))

(define-public crate-ora-store-sqlx-0.3.1 (c (n "ora-store-sqlx") (v "0.3.1") (d (list (d (n "async-stream") (r "^0.3.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.72") (d #t) (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "ora-client") (r "^0.2.1") (d #t) (k 0)) (d (n "ora-common") (r "^0.1.1") (d #t) (k 0)) (d (n "ora-scheduler") (r "^0.2.0") (d #t) (k 0)) (d (n "ora-worker") (r "^0.3.0") (d #t) (k 0)) (d (n "sea-query") (r "^0.30.0") (f (quote ("with-uuid" "with-time" "with-json" "derive" "backend-postgres"))) (k 0)) (d (n "sea-query-binder") (r "^0.5.0") (f (quote ("with-uuid" "with-time" "with-json" "sqlx-postgres"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.104") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "sqlx") (r "^0.7.1") (f (quote ("time" "uuid" "json"))) (k 0)) (d (n "sqlx-migrate") (r "^0.7.0") (d #t) (k 0)) (d (n "sqlx-migrate") (r "^0.7.0") (f (quote ("generate"))) (d #t) (k 1)) (d (n "time") (r "^0.3.23") (d #t) (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("time" "rt" "sync" "macros"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1cra8ri1i97kbnxcficqcaxxbxbkidrdc0pllg5rjmz4waa5pa17") (f (quote (("postgres" "sqlx/postgres" "sqlx-migrate/postgres") ("default" "postgres"))))))

(define-public crate-ora-store-sqlx-0.3.2 (c (n "ora-store-sqlx") (v "0.3.2") (d (list (d (n "async-stream") (r "^0.3.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.72") (d #t) (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "ora-client") (r "^0.2.1") (d #t) (k 0)) (d (n "ora-common") (r "^0.1.2") (d #t) (k 0)) (d (n "ora-scheduler") (r "^0.2.1") (d #t) (k 0)) (d (n "ora-worker") (r "^0.4.0") (d #t) (k 0)) (d (n "sea-query") (r "^0.30.0") (f (quote ("with-uuid" "with-time" "with-json" "derive" "backend-postgres"))) (k 0)) (d (n "sea-query-binder") (r "^0.5.0") (f (quote ("with-uuid" "with-time" "with-json" "sqlx-postgres"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.104") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "sqlx") (r "^0.7.1") (f (quote ("time" "uuid" "json"))) (k 0)) (d (n "sqlx-migrate") (r "^0.7.0") (d #t) (k 0)) (d (n "sqlx-migrate") (r "^0.7.0") (f (quote ("generate"))) (d #t) (k 1)) (d (n "time") (r "^0.3.23") (d #t) (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("time" "rt" "sync" "macros"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "107kjy2sqps6i9kkcl57lnn2zv4a3rk76zk2lfgzfn9nb3ky34r3") (f (quote (("postgres" "sqlx/postgres" "sqlx-migrate/postgres") ("default" "postgres"))))))

(define-public crate-ora-store-sqlx-0.4.0 (c (n "ora-store-sqlx") (v "0.4.0") (d (list (d (n "async-stream") (r "^0.3.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.72") (d #t) (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "ora-client") (r "^0.2.1") (d #t) (k 0)) (d (n "ora-common") (r "^0.1.2") (d #t) (k 0)) (d (n "ora-scheduler") (r "^0.2.1") (d #t) (k 0)) (d (n "ora-worker") (r "^0.4.2") (d #t) (k 0)) (d (n "sea-query") (r "^0.30.0") (f (quote ("with-uuid" "with-time" "with-json" "derive" "backend-postgres"))) (k 0)) (d (n "sea-query-binder") (r "^0.5.0") (f (quote ("with-uuid" "with-time" "with-json" "sqlx-postgres"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.104") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "sqlx") (r "^0.7.1") (f (quote ("time" "uuid" "json"))) (k 0)) (d (n "sqlx-migrate") (r "^0.7.0") (d #t) (k 0)) (d (n "sqlx-migrate") (r "^0.7.0") (f (quote ("generate"))) (d #t) (k 1)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "time") (r "^0.3.23") (d #t) (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("time" "rt" "sync" "macros"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "13ixcx6dyjazj35h9jjag8amlyq827nkfkpyxkpdb0a8jgci0zgc") (f (quote (("postgres" "sqlx/postgres" "sqlx-migrate/postgres") ("default" "postgres"))))))

(define-public crate-ora-store-sqlx-0.5.0 (c (n "ora-store-sqlx") (v "0.5.0") (d (list (d (n "async-stream") (r "^0.3.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.72") (d #t) (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "ora-client") (r "^0.2.1") (d #t) (k 0)) (d (n "ora-common") (r "^0.1.2") (d #t) (k 0)) (d (n "ora-scheduler") (r "^0.2.1") (d #t) (k 0)) (d (n "ora-worker") (r "^0.4.2") (d #t) (k 0)) (d (n "sea-query") (r "^0.30.0") (f (quote ("with-uuid" "with-time" "with-json" "derive" "backend-postgres"))) (k 0)) (d (n "sea-query-binder") (r "^0.5.0") (f (quote ("with-uuid" "with-time" "with-json" "sqlx-postgres"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.104") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "sqlx") (r "^0.7.1") (f (quote ("time" "uuid" "json"))) (k 0)) (d (n "sqlx-migrate") (r "^0.7.0") (d #t) (k 0)) (d (n "sqlx-migrate") (r "^0.7.0") (f (quote ("generate"))) (d #t) (k 1)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "time") (r "^0.3.23") (d #t) (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("time" "rt" "sync" "macros"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1kxkj5zyl4czx9z4lw60iddg9svyirdfqs5w7pmvhs7v1y828mhi") (f (quote (("postgres" "sqlx/postgres" "sqlx-migrate/postgres") ("default" "postgres"))))))

(define-public crate-ora-store-sqlx-0.5.1 (c (n "ora-store-sqlx") (v "0.5.1") (d (list (d (n "async-stream") (r "^0.3.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.72") (d #t) (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "ora-client") (r "^0.2.1") (d #t) (k 0)) (d (n "ora-common") (r "^0.1.2") (d #t) (k 0)) (d (n "ora-scheduler") (r "^0.2.1") (d #t) (k 0)) (d (n "ora-worker") (r "^0.4.2") (d #t) (k 0)) (d (n "sea-query") (r "^0.30.0") (f (quote ("with-uuid" "with-time" "with-json" "derive" "backend-postgres"))) (k 0)) (d (n "sea-query-binder") (r "^0.5.0") (f (quote ("with-uuid" "with-time" "with-json" "sqlx-postgres"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.104") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "sqlx") (r "^0.7.1") (f (quote ("time" "uuid" "json"))) (k 0)) (d (n "sqlx-migrate") (r "^0.7.0") (d #t) (k 0)) (d (n "sqlx-migrate") (r "^0.7.0") (f (quote ("generate"))) (d #t) (k 1)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "time") (r "^0.3.23") (d #t) (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("time" "rt" "sync" "macros"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "0cxzmki6miffqk9z0544nfa2cmz7m7ijdm690lrvb2pp0lwg2hqy") (f (quote (("postgres" "sqlx/postgres" "sqlx-migrate/postgres") ("default" "postgres"))))))

(define-public crate-ora-store-sqlx-0.5.2 (c (n "ora-store-sqlx") (v "0.5.2") (d (list (d (n "async-stream") (r "^0.3.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.72") (d #t) (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "ora-client") (r "^0.2.1") (d #t) (k 0)) (d (n "ora-common") (r "^0.1.2") (d #t) (k 0)) (d (n "ora-scheduler") (r "^0.2.1") (d #t) (k 0)) (d (n "ora-worker") (r "^0.4.2") (d #t) (k 0)) (d (n "sea-query") (r "^0.30.0") (f (quote ("with-uuid" "with-time" "with-json" "derive" "backend-postgres"))) (k 0)) (d (n "sea-query-binder") (r "^0.5.0") (f (quote ("with-uuid" "with-time" "with-json" "sqlx-postgres"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.104") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "sqlx") (r "^0.7.1") (f (quote ("time" "uuid" "json"))) (k 0)) (d (n "sqlx-migrate") (r "^0.7.0") (d #t) (k 0)) (d (n "sqlx-migrate") (r "^0.7.0") (f (quote ("generate"))) (d #t) (k 1)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "time") (r "^0.3.23") (d #t) (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("time" "rt" "sync" "macros"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "0icf67ikxvk23mmrgss3mba20zh1nnz8kdhabah60071bij5n685") (f (quote (("postgres" "sqlx/postgres" "sqlx-migrate/postgres") ("default" "postgres"))))))

(define-public crate-ora-store-sqlx-0.6.0 (c (n "ora-store-sqlx") (v "0.6.0") (d (list (d (n "async-stream") (r "^0.3.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.72") (d #t) (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "ora-client") (r "^0.3.0") (d #t) (k 0)) (d (n "ora-common") (r "^0.1.2") (d #t) (k 0)) (d (n "ora-scheduler") (r "^0.2.1") (d #t) (k 0)) (d (n "ora-worker") (r "^0.4.2") (d #t) (k 0)) (d (n "sea-query") (r "^0.30.0") (f (quote ("with-uuid" "with-time" "with-json" "derive" "backend-postgres"))) (k 0)) (d (n "sea-query-binder") (r "^0.5.0") (f (quote ("with-uuid" "with-time" "with-json" "sqlx-postgres"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.104") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "sqlx") (r "^0.7.1") (f (quote ("time" "uuid" "json"))) (k 0)) (d (n "sqlx-migrate") (r "^0.7.0") (d #t) (k 0)) (d (n "sqlx-migrate") (r "^0.7.0") (f (quote ("generate"))) (d #t) (k 1)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "time") (r "^0.3.23") (d #t) (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("time" "rt" "sync" "macros"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "0j3ap0bbmgsw6hq2q07h8g0m1f2ph8mxy3bf1cn6ycd1mp0h77bn") (f (quote (("postgres" "sqlx/postgres" "sqlx-migrate/postgres") ("default" "postgres"))))))

(define-public crate-ora-store-sqlx-0.6.1 (c (n "ora-store-sqlx") (v "0.6.1") (d (list (d (n "async-stream") (r "^0.3.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.72") (d #t) (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "ora-client") (r "^0.3.0") (d #t) (k 0)) (d (n "ora-common") (r "^0.1.2") (d #t) (k 0)) (d (n "ora-scheduler") (r "^0.2.1") (d #t) (k 0)) (d (n "ora-worker") (r "^0.4.2") (d #t) (k 0)) (d (n "sea-query") (r "^0.30.0") (f (quote ("with-uuid" "with-time" "with-json" "derive" "backend-postgres"))) (k 0)) (d (n "sea-query-binder") (r "^0.5.0") (f (quote ("with-uuid" "with-time" "with-json" "sqlx-postgres"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.104") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "sqlx") (r "^0.7.1") (f (quote ("time" "uuid" "json"))) (k 0)) (d (n "sqlx-migrate") (r "^0.7.0") (d #t) (k 0)) (d (n "sqlx-migrate") (r "^0.7.0") (f (quote ("generate"))) (d #t) (k 1)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "time") (r "^0.3.23") (d #t) (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("time" "rt" "sync" "macros"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1wc76hxzhck622jp8hlcxhhn53vcsajn55bypcq7hggm7ncy4j1b") (f (quote (("postgres" "sqlx/postgres" "sqlx-migrate/postgres") ("default" "postgres"))))))

