(define-module (crates-io or gi orgize) #:use-module (crates-io))

(define-public crate-orgize-0.1.0 (c (n "orgize") (v "0.1.0") (d (list (d (n "jetscii") (r "^0.4.3") (d #t) (k 0)) (d (n "memchr") (r "^2") (d #t) (k 0)))) (h "1r46nxvimcm0xsp76hpdkssh6khbdsbahj3rc93yfjd1y9r269jp")))

(define-public crate-orgize-0.1.1 (c (n "orgize") (v "0.1.1") (d (list (d (n "jetscii") (r "^0.4.3") (d #t) (k 0)) (d (n "memchr") (r "^2") (d #t) (k 0)))) (h "1nrw5mhcy8954ik6bcx3ydc374ky01ry747pdg4hcv3xkvh2df2i")))

(define-public crate-orgize-0.1.2 (c (n "orgize") (v "0.1.2") (d (list (d (n "jetscii") (r "^0.4.3") (d #t) (k 0)) (d (n "memchr") (r "^2") (d #t) (k 0)))) (h "0fmc6z1q36jygpm20lmmld0n2wbv8iz5xi7fvyqadav6mwqq9l99")))

(define-public crate-orgize-0.1.3 (c (n "orgize") (v "0.1.3") (d (list (d (n "jetscii") (r "^0.4.3") (d #t) (k 0)) (d (n "memchr") (r "^2") (d #t) (k 0)))) (h "0hm5aypq919yv8c6v1yl43i3j7c1ikvinjy5kghpfscfpxq5xdis")))

(define-public crate-orgize-0.2.0 (c (n "orgize") (v "0.2.0") (d (list (d (n "bytecount") (r "^0.5.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (o #t) (d #t) (k 0)) (d (n "indextree") (r "^3.2.0") (d #t) (k 0)) (d (n "jetscii") (r "^0.4.4") (d #t) (k 0)) (d (n "memchr") (r "^2.2.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (d #t) (k 2)) (d (n "slugify") (r "^0.1.0") (d #t) (k 2)))) (h "0x507s78gkwq6m35gkq2m31l6ww49yg1m2swcbmyx1kd9by7b29n") (f (quote (("extra-serde-info" "serde") ("default" "serde" "chrono"))))))

(define-public crate-orgize-0.3.0 (c (n "orgize") (v "0.3.0") (d (list (d (n "bytecount") (r "^0.5.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (o #t) (d #t) (k 0)) (d (n "indextree") (r "^4.0.0") (d #t) (k 0)) (d (n "jetscii") (r "^0.4.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 2)) (d (n "memchr") (r "^2.2.1") (d #t) (k 0)) (d (n "nom") (r "^5.0.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.98") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_indextree") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 2)) (d (n "slugify") (r "^0.1.0") (d #t) (k 2)) (d (n "syntect") (r "^3.2.1") (d #t) (k 2)))) (h "17svy6g0cwn4p1ri5ffh97j2wh44zbj084p4macj4gwlxi1vv054") (f (quote (("ser" "serde" "serde_indextree") ("default" "ser"))))))

(define-public crate-orgize-0.3.1 (c (n "orgize") (v "0.3.1") (d (list (d (n "bytecount") (r "^0.6.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.9") (o #t) (d #t) (k 0)) (d (n "indextree") (r "^4.0.0") (d #t) (k 0)) (d (n "jetscii") (r "^0.4.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "memchr") (r "^2.2.1") (d #t) (k 0)) (d (n "nom") (r "^5.0.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.100") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_indextree") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 2)) (d (n "slugify") (r "^0.1.0") (d #t) (k 2)) (d (n "syntect") (r "^3.2.1") (d #t) (k 2)))) (h "09g1bxw3k2d0f950qkwpmdg0ffgc738jk6ckqn0s12ncwg9pg9il") (f (quote (("ser" "serde" "serde_indextree") ("default" "ser"))))))

(define-public crate-orgize-0.4.0 (c (n "orgize") (v "0.4.0") (d (list (d (n "bytecount") (r "^0.6.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.9") (o #t) (d #t) (k 0)) (d (n "indextree") (r "^4.0.0") (d #t) (k 0)) (d (n "jetscii") (r "^0.4.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "memchr") (r "^2.2.1") (d #t) (k 0)) (d (n "nom") (r "^5.0.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.100") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_indextree") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 2)) (d (n "slugify") (r "^0.1.0") (d #t) (k 2)) (d (n "syntect") (r "^3.2.1") (o #t) (d #t) (k 0)))) (h "01viqcb1w80l9fqj91l91bp6kwn07659vsfxsf5wmw3jmv0n51k8") (f (quote (("ser" "serde" "serde_indextree") ("default" "ser"))))))

(define-public crate-orgize-0.4.1 (c (n "orgize") (v "0.4.1") (d (list (d (n "bytecount") (r "^0.6.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.9") (o #t) (d #t) (k 0)) (d (n "indextree") (r "^4.0.0") (d #t) (k 0)) (d (n "jetscii") (r "^0.4.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "memchr") (r "^2.2.1") (d #t) (k 0)) (d (n "nom") (r "^5.0.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.100") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_indextree") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 2)) (d (n "slugify") (r "^0.1.0") (d #t) (k 2)) (d (n "syntect") (r "^3.2.1") (o #t) (d #t) (k 0)))) (h "0np5m9c0ccvinb1lh453zhkvzqkswl6dsagmk5cgfnsy54a87i4i") (f (quote (("ser" "serde" "serde_indextree") ("default" "ser"))))))

(define-public crate-orgize-0.4.2 (c (n "orgize") (v "0.4.2") (d (list (d (n "bytecount") (r "^0.6.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.9") (o #t) (d #t) (k 0)) (d (n "indextree") (r "^4.0.0") (d #t) (k 0)) (d (n "jetscii") (r "^0.4.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "memchr") (r "^2.2.1") (d #t) (k 0)) (d (n "nom") (r "^5.0.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.101") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_indextree") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.41") (d #t) (k 2)) (d (n "slugify") (r "^0.1.0") (d #t) (k 2)) (d (n "syntect") (r "^3.3.0") (o #t) (d #t) (k 0)))) (h "1azgdda84vsqcymgfc04bnsanz4l0928jrb3r8jpvcm51vmaq9dd") (f (quote (("ser" "serde" "serde_indextree") ("default" "ser"))))))

(define-public crate-orgize-0.5.0 (c (n "orgize") (v "0.5.0") (d (list (d (n "bytecount") (r "^0.6.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.9") (o #t) (d #t) (k 0)) (d (n "indextree") (r "^4.0.0") (d #t) (k 0)) (d (n "jetscii") (r "^0.4.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "memchr") (r "^2.2.1") (d #t) (k 0)) (d (n "nom") (r "^5.0.1") (f (quote ("std"))) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.101") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_indextree") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.41") (d #t) (k 2)) (d (n "slugify") (r "^0.1.0") (d #t) (k 2)) (d (n "syntect") (r "^3.3.0") (o #t) (d #t) (k 0)))) (h "1zr6yk86k107z1vnllir8rx78isi6cfcb1dakxw10dkzmm04mc6i") (f (quote (("ser" "serde" "serde_indextree") ("default" "ser"))))))

(define-public crate-orgize-0.6.0 (c (n "orgize") (v "0.6.0") (d (list (d (n "bytecount") (r "^0.6.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.9") (o #t) (d #t) (k 0)) (d (n "indextree") (r "^4.0.0") (d #t) (k 0)) (d (n "jetscii") (r "^0.4.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "memchr") (r "^2.2.1") (d #t) (k 0)) (d (n "nom") (r "^5.0.1") (f (quote ("std"))) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.102") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_indextree") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.41") (d #t) (k 2)) (d (n "slugify") (r "^0.1.0") (d #t) (k 2)) (d (n "syntect") (r "^3.3.0") (o #t) (d #t) (k 0)))) (h "1vxdx81j5b141cdnw058i830ky994mnw1ikxarm7h67dxadaxhvp") (f (quote (("ser" "serde" "serde_indextree") ("default" "ser"))))))

(define-public crate-orgize-0.7.0 (c (n "orgize") (v "0.7.0") (d (list (d (n "bytecount") (r "^0.6.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.9") (o #t) (d #t) (k 0)) (d (n "indextree") (r "^4.0.0") (d #t) (k 0)) (d (n "jetscii") (r "^0.4.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "memchr") (r "^2.2.1") (d #t) (k 0)) (d (n "nom") (r "^5.0.1") (f (quote ("std"))) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.102") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_indextree") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.41") (d #t) (k 2)) (d (n "slugify") (r "^0.1.0") (d #t) (k 2)) (d (n "syntect") (r "^3.3.0") (o #t) (d #t) (k 0)))) (h "1q8v73yvbw5r3zp7n3h6pq5kwl0i5qm4r00rdbcyjcq06jzy5py4") (f (quote (("ser" "serde" "serde_indextree") ("default" "ser"))))))

(define-public crate-orgize-0.8.0 (c (n "orgize") (v "0.8.0") (d (list (d (n "bytecount") (r "^0.6.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "indextree") (r "^4.0.0") (d #t) (k 0)) (d (n "jetscii") (r "^0.4.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "memchr") (r "^2.3.3") (d #t) (k 0)) (d (n "nom") (r "^5.1.1") (f (quote ("std"))) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.106") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_indextree") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 2)) (d (n "slugify") (r "^0.1.0") (d #t) (k 2)) (d (n "syntect") (r "^4.1.0") (o #t) (d #t) (k 0)))) (h "1hkihmar4id0w9jfgcxa59hg1ln8yn0gpk8fw01b4zgp4ilwiwmp") (f (quote (("ser" "serde" "serde_indextree") ("default" "ser"))))))

(define-public crate-orgize-0.8.1 (c (n "orgize") (v "0.8.1") (d (list (d (n "bytecount") (r "^0.6.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "indextree") (r "^4.0.0") (d #t) (k 0)) (d (n "jetscii") (r "^0.4.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "memchr") (r "^2.3.3") (d #t) (k 0)) (d (n "nom") (r "^5.1.1") (f (quote ("std"))) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.106") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_indextree") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 2)) (d (n "slugify") (r "^0.1.0") (d #t) (k 2)) (d (n "syntect") (r "^4.1.0") (o #t) (d #t) (k 0)))) (h "0882akjmlzyz7lml1ddkb1icscdkaalky5famj25dsq9qhqn9fqi") (f (quote (("ser" "serde" "serde_indextree") ("default" "ser"))))))

(define-public crate-orgize-0.8.2 (c (n "orgize") (v "0.8.2") (d (list (d (n "bytecount") (r "^0.6.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "indextree") (r "^4.0.0") (d #t) (k 0)) (d (n "jetscii") (r "^0.4.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "memchr") (r "^2.3.3") (d #t) (k 0)) (d (n "nom") (r "^5.1.1") (f (quote ("std"))) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.106") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_indextree") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 2)) (d (n "slugify") (r "^0.1.0") (d #t) (k 2)) (d (n "syntect") (r "^4.1.0") (o #t) (d #t) (k 0)))) (h "06z2rv323sjf4kinfxgf1ilrf0y09d9ksqczlxhz57kydfp13sc4") (f (quote (("ser" "serde" "serde_indextree") ("default" "ser"))))))

(define-public crate-orgize-0.8.3 (c (n "orgize") (v "0.8.3") (d (list (d (n "bytecount") (r "^0.6.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "indextree") (r "^4.0.0") (d #t) (k 0)) (d (n "jetscii") (r "^0.4.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "memchr") (r "^2.3.3") (d #t) (k 0)) (d (n "nom") (r "^5.1.1") (f (quote ("std"))) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.106") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_indextree") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 2)) (d (n "slugify") (r "^0.1.0") (d #t) (k 2)) (d (n "syntect") (r "^4.1.0") (o #t) (d #t) (k 0)))) (h "04sdb3pjiyyd08zya97lrjv8j7j0qqqkmhvrmqgmd5v8gnw0ycp1") (f (quote (("ser" "serde" "serde_indextree") ("default" "ser"))))))

(define-public crate-orgize-0.8.4 (c (n "orgize") (v "0.8.4") (d (list (d (n "bytecount") (r "^0.6.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.11") (o #t) (d #t) (k 0)) (d (n "indextree") (r "^4.0.0") (d #t) (k 0)) (d (n "jetscii") (r "^0.4.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "memchr") (r "^2.3.3") (d #t) (k 0)) (d (n "nom") (r "^5.1.1") (f (quote ("std"))) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.106") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_indextree") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 2)) (d (n "slugify") (r "^0.1.0") (d #t) (k 2)) (d (n "syntect") (r "^4.1.0") (o #t) (d #t) (k 0)))) (h "1xlsny9k7lwvlcawmqlrzsh5x4fsmsm0jpfyi16bzrawfm1yzrmx") (f (quote (("ser" "serde" "serde_indextree") ("default" "ser"))))))

(define-public crate-orgize-0.9.0 (c (n "orgize") (v "0.9.0") (d (list (d (n "bytecount") (r "^0.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.7") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "indextree") (r "^4.3") (d #t) (k 0)) (d (n "jetscii") (r "^0.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "memchr") (r "^2.4") (d #t) (k 0)) (d (n "nom") (r "^7.0") (f (quote ("std"))) (k 0)) (d (n "pretty_assertions") (r "^1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde_indextree") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "slugify") (r "^0.1") (d #t) (k 2)) (d (n "syntect") (r "^4.6") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "wee_alloc") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1ynpryx33yzhfb8dsnzflzsh37p39lyfv0wgw430rh33z2l9hj8y") (f (quote (("wasm" "serde-wasm-bindgen" "wasm-bindgen" "wee_alloc") ("ser" "serde" "serde_indextree" "indexmap/serde-1") ("default" "ser"))))))

(define-public crate-orgize-0.10.0-alpha.1 (c (n "orgize") (v "0.10.0-alpha.1") (d (list (d (n "bytecount") (r "^0.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "indexmap") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "insta") (r "^1.29") (d #t) (k 2)) (d (n "jetscii") (r "^0.5") (d #t) (k 0)) (d (n "memchr") (r "^2.5") (d #t) (k 0)) (d (n "nom") (r "^7.1") (f (quote ("std"))) (k 0)) (d (n "rowan") (r "^0.15") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "slugify") (r "^0.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt"))) (d #t) (k 2)))) (h "1xxvcjcy25g9mgacc1v1pycgxh5p9q5pdaxhc0a69j09r50s521m") (f (quote (("default")))) (s 2) (e (quote (("indexmap" "dep:indexmap") ("chrono" "dep:chrono"))))))

(define-public crate-orgize-0.10.0-alpha.2 (c (n "orgize") (v "0.10.0-alpha.2") (d (list (d (n "bytecount") (r "^0.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "indexmap") (r "^2.1") (o #t) (d #t) (k 0)) (d (n "insta") (r "^1.29") (d #t) (k 2)) (d (n "jetscii") (r "^0.5") (d #t) (k 0)) (d (n "memchr") (r "^2.5") (d #t) (k 0)) (d (n "nom") (r "^7.1") (f (quote ("std"))) (k 0)) (d (n "rowan") (r "^0.15") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "slugify") (r "^0.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt"))) (d #t) (k 2)))) (h "0xhfm36sr4pflgrd4rqkbckzfkn8vm9mkjmrmkahwqwrhxkp5v57") (f (quote (("default")))) (s 2) (e (quote (("indexmap" "dep:indexmap") ("chrono" "dep:chrono"))))))

(define-public crate-orgize-0.10.0-alpha.3 (c (n "orgize") (v "0.10.0-alpha.3") (d (list (d (n "bytecount") (r "^0.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "indexmap") (r "^2.1") (o #t) (d #t) (k 0)) (d (n "insta") (r "^1.29") (d #t) (k 2)) (d (n "jetscii") (r "^0.5") (d #t) (k 0)) (d (n "memchr") (r "^2.5") (d #t) (k 0)) (d (n "nom") (r "^7.1") (f (quote ("std"))) (k 0)) (d (n "rowan") (r "^0.15") (d #t) (k 0)) (d (n "slugify") (r "^0.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt"))) (d #t) (k 2)))) (h "1gr3nv4mjjkw324cmc5b369nlvyid2hl0by4vw3q8xcm0aawp2sl") (f (quote (("default")))) (s 2) (e (quote (("indexmap" "dep:indexmap") ("chrono" "dep:chrono"))))))

(define-public crate-orgize-0.10.0-alpha.4 (c (n "orgize") (v "0.10.0-alpha.4") (d (list (d (n "bytecount") (r "^0.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "indexmap") (r "^2.1") (o #t) (d #t) (k 0)) (d (n "insta") (r "^1.29") (d #t) (k 2)) (d (n "jetscii") (r "^0.5") (d #t) (k 0)) (d (n "memchr") (r "^2.5") (d #t) (k 0)) (d (n "nom") (r "^7.1") (f (quote ("std"))) (k 0)) (d (n "rowan") (r "^0.15") (d #t) (k 0)) (d (n "slugify") (r "^0.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt"))) (d #t) (k 2)))) (h "07rwm6qjwfhv8n27pn2kvcy6f093kgmibxvhpr7wzm83kv62dp22") (f (quote (("default")))) (s 2) (e (quote (("indexmap" "dep:indexmap") ("chrono" "dep:chrono"))))))

(define-public crate-orgize-0.10.0-alpha.5 (c (n "orgize") (v "0.10.0-alpha.5") (d (list (d (n "bytecount") (r "^0.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "indexmap") (r "^2.1") (o #t) (d #t) (k 0)) (d (n "insta") (r "^1.29") (d #t) (k 2)) (d (n "jetscii") (r "^0.5") (d #t) (k 0)) (d (n "memchr") (r "^2.5") (d #t) (k 0)) (d (n "nom") (r "^7.1") (f (quote ("std"))) (k 0)) (d (n "rowan") (r "^0.15") (d #t) (k 0)) (d (n "slugify") (r "^0.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt"))) (d #t) (k 2)))) (h "0kccpbj9hb7blda24xwzbzin02645clf1lq5m406fprg5w3ac3rn") (f (quote (("default")))) (s 2) (e (quote (("indexmap" "dep:indexmap") ("chrono" "dep:chrono"))))))

(define-public crate-orgize-0.10.0-alpha.6 (c (n "orgize") (v "0.10.0-alpha.6") (d (list (d (n "bytecount") (r "^0.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "indexmap") (r "^2.1") (o #t) (d #t) (k 0)) (d (n "insta") (r "^1.29") (d #t) (k 2)) (d (n "jetscii") (r "^0.5") (d #t) (k 0)) (d (n "memchr") (r "^2.5") (d #t) (k 0)) (d (n "nom") (r "^7.1") (f (quote ("std"))) (k 0)) (d (n "rowan") (r "^0.15") (d #t) (k 0)) (d (n "slugify") (r "^0.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt"))) (d #t) (k 2)))) (h "1d9qdyq2h8f9bl83sz56j7g0fpw477q8q6b008qyzmky7ilcvqx8") (f (quote (("default")))) (s 2) (e (quote (("indexmap" "dep:indexmap") ("chrono" "dep:chrono"))))))

(define-public crate-orgize-0.10.0-alpha.7 (c (n "orgize") (v "0.10.0-alpha.7") (d (list (d (n "bytecount") (r "^0.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "indexmap") (r "^2.1") (o #t) (d #t) (k 0)) (d (n "insta") (r "^1.29") (d #t) (k 2)) (d (n "jetscii") (r "^0.5") (d #t) (k 0)) (d (n "memchr") (r "^2.5") (d #t) (k 0)) (d (n "nom") (r "^7.1") (f (quote ("std"))) (k 0)) (d (n "rowan") (r "^0.15") (d #t) (k 0)) (d (n "slugify") (r "^0.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt"))) (d #t) (k 2)))) (h "1nakgq6jl4igxrvcvh8lk2wnkmwflms6xpqrz4d3x1fk70nk598f") (f (quote (("default")))) (s 2) (e (quote (("indexmap" "dep:indexmap") ("chrono" "dep:chrono"))))))

(define-public crate-orgize-0.10.0-alpha.8 (c (n "orgize") (v "0.10.0-alpha.8") (d (list (d (n "bytecount") (r "^0.6") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "indexmap") (r "^2.1") (o #t) (d #t) (k 0)) (d (n "insta") (r "^1.29") (d #t) (k 2)) (d (n "jetscii") (r "^0.5") (d #t) (k 0)) (d (n "memchr") (r "^2.5") (d #t) (k 0)) (d (n "nom") (r "^7.1") (f (quote ("std"))) (k 0)) (d (n "rowan") (r "^0.15") (d #t) (k 0)) (d (n "slugify") (r "^0.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt"))) (d #t) (k 2)))) (h "0qlwwggxy0qjk69g8c5wrw9ymkr5l7w0qzxabgsxm8gqgkwl77q0") (f (quote (("default")))) (s 2) (e (quote (("tracing" "dep:tracing") ("indexmap" "dep:indexmap") ("chrono" "dep:chrono"))))))

(define-public crate-orgize-0.10.0-alpha.9 (c (n "orgize") (v "0.10.0-alpha.9") (d (list (d (n "bytecount") (r "^0.6") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "indexmap") (r "^2.1") (o #t) (d #t) (k 0)) (d (n "insta") (r "^1.29") (d #t) (k 2)) (d (n "jetscii") (r "^0.5") (d #t) (k 0)) (d (n "memchr") (r "^2.5") (d #t) (k 0)) (d (n "nom") (r "^7.1") (f (quote ("std"))) (k 0)) (d (n "rowan") (r "^0.15") (d #t) (k 0)) (d (n "slugify") (r "^0.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt"))) (d #t) (k 2)))) (h "0lylxhna55w54qkf56g545ab9lrw5s2q12lclz3r3r66l3rpd2fp") (f (quote (("default")))) (s 2) (e (quote (("tracing" "dep:tracing") ("indexmap" "dep:indexmap") ("chrono" "dep:chrono"))))))

