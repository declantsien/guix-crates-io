(define-module (crates-io or ou orouter-wireless) #:use-module (crates-io))

(define-public crate-orouter-wireless-0.1.0 (c (n "orouter-wireless") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.75") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.4") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.4.6") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "crc16") (r "^0.4.0") (d #t) (k 0)) (d (n "defmt") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "heapless") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (f (quote ("small_rng"))) (o #t) (k 0)))) (h "0b2kj5rxh8ww27mjjanxd5s694vfdm6ddwhpmj5izbfvwyaj8l3p") (f (quote (("std" "log" "rand") ("no_std" "heapless" "defmt") ("default" "std") ("__internal_binary" "clap" "anyhow" "base64" "hex")))) (y #t)))

(define-public crate-orouter-wireless-0.1.1 (c (n "orouter-wireless") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.75") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.4") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.4.6") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "crc16") (r "^0.4.0") (d #t) (k 0)) (d (n "defmt") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "heapless") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (f (quote ("small_rng"))) (o #t) (k 0)))) (h "1ylw08w11vlpp4mbi8n7nw5dcrk83w7ln9wan0brjiavriksbiip") (f (quote (("std" "log" "rand") ("no_std" "heapless" "defmt") ("default" "std") ("__internal_binary" "clap" "anyhow" "base64" "hex"))))))

