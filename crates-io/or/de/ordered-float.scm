(define-module (crates-io or de ordered-float) #:use-module (crates-io))

(define-public crate-ordered-float-0.0.1 (c (n "ordered-float") (v "0.0.1") (d (list (d (n "stainless") (r "*") (d #t) (k 0)))) (h "1z4m5ljdcc561ncr970s8wigxmpip79ya9y1pp5bzl8f5n4xv8ys") (y #t)))

(define-public crate-ordered-float-0.0.2 (c (n "ordered-float") (v "0.0.2") (d (list (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "stainless") (r "*") (d #t) (k 2)))) (h "1wnf81pib6ffnv78zpqqmp046wanliyrwb99kj76h47lkcnk37p1") (y #t)))

(define-public crate-ordered-float-0.1.0 (c (n "ordered-float") (v "0.1.0") (d (list (d (n "num") (r "^0.1") (k 0)) (d (n "stainless") (r "^0.1") (d #t) (k 2)))) (h "1qxp8d4vlgrg2ryrafj0vvn1pfd4jmnm39j802wcqd84pq8195jd")))

(define-public crate-ordered-float-0.2.0 (c (n "ordered-float") (v "0.2.0") (d (list (d (n "num") (r "^0.1") (k 0)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "stainless") (r "^0.1") (d #t) (k 2)) (d (n "unreachable") (r "^0.0") (d #t) (k 0)))) (h "0wwh2rs2mhfq93p7wdbw2s6ac8vv64zsb5m5bkddp51160bk9hnq")))

(define-public crate-ordered-float-0.2.1 (c (n "ordered-float") (v "0.2.1") (d (list (d (n "num") (r "^0.1") (k 0)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "stainless") (r "^0.1") (d #t) (k 2)) (d (n "unreachable") (r "^0.0") (d #t) (k 0)))) (h "0g3g3x765mr7x30sl3vi9albr3cqaw4pmjh4g9vk0p10zcp9n09w")))

(define-public crate-ordered-float-0.2.2 (c (n "ordered-float") (v "0.2.2") (d (list (d (n "num") (r "^0.1") (k 0)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "stainless") (r "^0.1") (d #t) (k 2)) (d (n "unreachable") (r "^0.0") (d #t) (k 0)))) (h "1krymjw685ilhfklg2ngmrvlfyv9w0545nxmx4xq46ds8984ib3b")))

(define-public crate-ordered-float-0.2.3 (c (n "ordered-float") (v "0.2.3") (d (list (d (n "num-traits") (r "^0.1") (k 0)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "stainless") (r "^0.1") (d #t) (k 2)) (d (n "unreachable") (r "^0.1") (d #t) (k 0)))) (h "0ybjig39a1srqfyh0snj5sa6v1jv65svppsdbafsf4c654w1alfc")))

(define-public crate-ordered-float-0.3.0 (c (n "ordered-float") (v "0.3.0") (d (list (d (n "num-traits") (r "^0.1") (k 0)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "stainless") (r "^0.1") (d #t) (k 2)) (d (n "unreachable") (r "^0.1") (d #t) (k 0)))) (h "0l5mkxf5vsv58bd932gghjv37zgvki1xai4p0kjggzgnczgfmf1p")))

(define-public crate-ordered-float-0.4.0 (c (n "ordered-float") (v "0.4.0") (d (list (d (n "num-traits") (r "^0.1") (k 0)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "stainless") (r "^0.1") (d #t) (k 2)) (d (n "unreachable") (r "^0.1") (d #t) (k 0)))) (h "1a00qb0k30dv2md6sip64kgsfqjs1qkdsayx56zf16l86xhcj4ns")))

(define-public crate-ordered-float-0.5.0 (c (n "ordered-float") (v "0.5.0") (d (list (d (n "num-traits") (r "^0.1") (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "stainless") (r "^0.1") (d #t) (k 2)) (d (n "unreachable") (r "^0.1") (d #t) (k 0)))) (h "07r4a8hqcbx3bnbpgf7qwbkrc0ll6ks8ya3d482hvcj71rn5pljq")))

(define-public crate-ordered-float-1.0.0 (c (n "ordered-float") (v "1.0.0") (d (list (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "unreachable") (r "^1") (d #t) (k 0)))) (h "1m09qgaw05kc6wg4hylz1f9j6br5vf3142sg80sdn7ya1zdwi8z9")))

(define-public crate-ordered-float-0.5.1 (c (n "ordered-float") (v "0.5.1") (d (list (d (n "num-traits") (r "^0.1") (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "stainless") (r "^0.1") (d #t) (k 2)) (d (n "unreachable") (r "^1.0") (d #t) (k 0)))) (h "1d61w26s5jrc3vx4vgrmkgps20dd31cwiiafynlvavcch3dx813h")))

(define-public crate-ordered-float-1.0.1 (c (n "ordered-float") (v "1.0.1") (d (list (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "1hmwrnwi1fvy1c70j887xnwxxkjhqr3zxyqwb06f53p2x3lia01g") (f (quote (("std") ("default" "std"))))))

(define-public crate-ordered-float-0.5.2 (c (n "ordered-float") (v "0.5.2") (d (list (d (n "num-traits") (r "^0.1") (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "stainless") (r "^0.1") (d #t) (k 2)) (d (n "unreachable") (r "^1.0") (d #t) (k 0)))) (h "17b6ck0kvdwfch742ndixbbj9fivylnnn53s5hlkyp948fb2bdby")))

(define-public crate-ordered-float-1.0.2 (c (n "ordered-float") (v "1.0.2") (d (list (d (n "num-traits") (r "^0.2.1") (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "0625x96987kspdxbikry5mb7hsf5pdc5bbanxd8wjwqlx0ar71hq") (f (quote (("std" "num-traits/std") ("default" "std"))))))

(define-public crate-ordered-float-1.1.0 (c (n "ordered-float") (v "1.1.0") (d (list (d (n "num-traits") (r "^0.2.1") (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "0ya51sgwdggjg2m575vac7m8bxb6x2xvq7j6r3hpvmwlwm5r6h9p") (f (quote (("std" "num-traits/std") ("default" "std"))))))

(define-public crate-ordered-float-2.0.0 (c (n "ordered-float") (v "2.0.0") (d (list (d (n "num-traits") (r "^0.2.1") (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "198l2g8dy8s7ca69khm6xjah0aqszaifjjmw5093n0npcmqh7scz") (f (quote (("std" "num-traits/std") ("default" "std"))))))

(define-public crate-ordered-float-2.0.1 (c (n "ordered-float") (v "2.0.1") (d (list (d (n "num-traits") (r "^0.2.1") (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "012jgk2cpg2pqfqb8j00p88hn6k442945z0fqplfvwvfhybyrkfs") (f (quote (("std" "num-traits/std") ("default" "std"))))))

(define-public crate-ordered-float-1.1.1 (c (n "ordered-float") (v "1.1.1") (d (list (d (n "num-traits") (r "^0.2.1") (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "1drp3v9jsm1mn0wqp4p5y19j3bmz3w5rw4yxzi39zlld4wssy19k") (f (quote (("std" "num-traits/std") ("default" "std"))))))

(define-public crate-ordered-float-2.1.0 (c (n "ordered-float") (v "2.1.0") (d (list (d (n "num-traits") (r "^0.2.1") (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "1qrqj5fij8h5jr1lzhg8jr7rdyy55sfhxxffa21h6m3bmp97h1r0") (f (quote (("std" "num-traits/std") ("default" "std")))) (y #t)))

(define-public crate-ordered-float-2.1.1 (c (n "ordered-float") (v "2.1.1") (d (list (d (n "num-traits") (r "^0.2.1") (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "0632g8bacvras6nig1bb1ihgc560476jkrb3is6n542ll86q8vvn") (f (quote (("std" "num-traits/std") ("default" "std"))))))

(define-public crate-ordered-float-2.2.0 (c (n "ordered-float") (v "2.2.0") (d (list (d (n "num-traits") (r "^0.2.1") (k 0)) (d (n "schemars") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "04nyw1fyr4dhnykg8c0ihc8npi1r9zi2gvyfkbpfb5ybmqcqj2xm") (f (quote (("std" "num-traits/std") ("default" "std"))))))

(define-public crate-ordered-float-2.3.0 (c (n "ordered-float") (v "2.3.0") (d (list (d (n "num-traits") (r "^0.2.1") (k 0)) (d (n "schemars") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "0xxx9hi8di6cda9qbshpkmnhjphhyriflc63rz2l3ggk0dmbh7v5") (f (quote (("std" "num-traits/std") ("default" "std"))))))

(define-public crate-ordered-float-2.4.0 (c (n "ordered-float") (v "2.4.0") (d (list (d (n "num-traits") (r "^0.2.1") (k 0)) (d (n "schemars") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "0xd2q4qdg1c7qknf3gp6fqpl31g67sj9hf6gpzdc86bhvlvrbnbn") (f (quote (("std" "num-traits/std") ("default" "std"))))))

(define-public crate-ordered-float-2.5.0 (c (n "ordered-float") (v "2.5.0") (d (list (d (n "num-traits") (r "^0.2.1") (k 0)) (d (n "rand") (r "^0.8.3") (o #t) (k 0)) (d (n "schemars") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "0qclykfcbwhlk41i03l8ikvp8lj69r1x1j04wp1n3ckkb6b4i4w0") (f (quote (("std" "num-traits/std" "rand/std" "rand/std_rng") ("default" "std"))))))

(define-public crate-ordered-float-2.5.1 (c (n "ordered-float") (v "2.5.1") (d (list (d (n "num-traits") (r "^0.2.1") (k 0)) (d (n "rand") (r "^0.8.3") (o #t) (k 0)) (d (n "schemars") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "1hpxm9mh948488cs4hhmhabbiya941rq2jgpj44mwf7587xzq07i") (f (quote (("std" "num-traits/std") ("randtest" "rand/std" "rand/std_rng") ("default" "std"))))))

(define-public crate-ordered-float-2.6.0 (c (n "ordered-float") (v "2.6.0") (d (list (d (n "num-traits") (r "^0.2.1") (k 0)) (d (n "rand") (r "^0.8.3") (o #t) (k 0)) (d (n "schemars") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "0s9wgg60pkwchjr9z0nqnljcjqzlpbni87vha738wjfmsf467skd") (f (quote (("std" "num-traits/std") ("randtest" "rand/std" "rand/std_rng") ("default" "std"))))))

(define-public crate-ordered-float-2.7.0 (c (n "ordered-float") (v "2.7.0") (d (list (d (n "num-traits") (r "^0.2.1") (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (o #t) (k 0)) (d (n "schemars") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "1wqgayi11rsx3clb0g4hicjs4yjx4y4j2873mck1y9v91zmh57q3") (f (quote (("std" "num-traits/std") ("randtest" "rand/std" "rand/std_rng") ("default" "std"))))))

(define-public crate-ordered-float-2.8.0 (c (n "ordered-float") (v "2.8.0") (d (list (d (n "num-traits") (r "^0.2.1") (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (o #t) (k 0)) (d (n "rkyv") (r "^0.7") (f (quote ("size_32"))) (o #t) (k 0)) (d (n "schemars") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "0bf63jdkdkyrlhfn04nl5h397fprzvvlpybf0bl53a5kg1ld1jcp") (f (quote (("std" "num-traits/std") ("randtest" "rand/std" "rand/std_rng") ("default" "std"))))))

(define-public crate-ordered-float-2.9.0 (c (n "ordered-float") (v "2.9.0") (d (list (d (n "num-traits") (r "^0.2.1") (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (o #t) (k 0)) (d (n "rkyv") (r "^0.7") (f (quote ("size_32"))) (o #t) (k 0)) (d (n "schemars") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "19hrgvyd1jx8szq04yyqs91fng4xdy4qbqy3y0lhq58bclsx38wa") (f (quote (("std" "num-traits/std") ("randtest" "rand/std" "rand/std_rng") ("default" "std"))))))

(define-public crate-ordered-float-2.10.0 (c (n "ordered-float") (v "2.10.0") (d (list (d (n "arbitrary") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.1") (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (o #t) (k 0)) (d (n "rkyv") (r "^0.7") (f (quote ("size_32"))) (o #t) (k 0)) (d (n "schemars") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "11qdskfgk911bs541avzkrfahq6arnb2bkvzs0c36na2m4ncyh3r") (f (quote (("std" "num-traits/std") ("randtest" "rand/std" "rand/std_rng") ("default" "std"))))))

(define-public crate-ordered-float-3.0.0 (c (n "ordered-float") (v "3.0.0") (d (list (d (n "arbitrary") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.1") (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (o #t) (k 0)) (d (n "rkyv") (r "^0.7") (f (quote ("size_32"))) (o #t) (k 0)) (d (n "schemars") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "1qiafdfbq47k0kbldd3fx9mykqy438d22izyq315jypapysbmg4n") (f (quote (("std" "num-traits/std") ("randtest" "rand/std" "rand/std_rng") ("default" "std"))))))

(define-public crate-ordered-float-3.1.0 (c (n "ordered-float") (v "3.1.0") (d (list (d (n "arbitrary") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.1") (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (o #t) (k 0)) (d (n "rkyv") (r "^0.7") (f (quote ("size_32"))) (o #t) (k 0)) (d (n "schemars") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "0anc6mrks36vw0nm2svpx0hnx280n0ahr0b5kicyzlhffcadpzwq") (f (quote (("std" "num-traits/std") ("randtest" "rand/std" "rand/std_rng") ("default" "std"))))))

(define-public crate-ordered-float-3.2.0 (c (n "ordered-float") (v "3.2.0") (d (list (d (n "arbitrary") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.1") (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (o #t) (k 0)) (d (n "rkyv") (r "^0.7") (f (quote ("size_32"))) (o #t) (k 0)) (d (n "schemars") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "04849xfn2fj6qihsw7jbi9qfd2lwj7mhln71qsn63i2kgd8kd78j") (f (quote (("std" "num-traits/std") ("randtest" "rand/std" "rand/std_rng") ("default" "std"))))))

(define-public crate-ordered-float-3.3.0 (c (n "ordered-float") (v "3.3.0") (d (list (d (n "arbitrary") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.1") (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (o #t) (k 0)) (d (n "rkyv") (r "^0.7") (f (quote ("size_32"))) (o #t) (k 0)) (d (n "schemars") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "speedy") (r "^0.8.3") (o #t) (k 0)))) (h "19rsn0vjiiki3qnavhbs2n27f26zyqzglmxjw92yr41z34qf6x0z") (f (quote (("std" "num-traits/std") ("randtest" "rand/std" "rand/std_rng") ("default" "std"))))))

(define-public crate-ordered-float-3.4.0 (c (n "ordered-float") (v "3.4.0") (d (list (d (n "arbitrary") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.12.2") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.1") (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (o #t) (k 0)) (d (n "rkyv") (r "^0.7") (f (quote ("size_32"))) (o #t) (k 0)) (d (n "schemars") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "speedy") (r "^0.8.3") (o #t) (k 0)))) (h "1gr31ksgbqariv6hz3s5bc15a5vh4k65dyn8m7j59lhnji0b2knq") (f (quote (("std" "num-traits/std") ("randtest" "rand/std" "rand/std_rng") ("default" "std"))))))

(define-public crate-ordered-float-3.5.0 (c (n "ordered-float") (v "3.5.0") (d (list (d (n "arbitrary") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.12.2") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.1") (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (o #t) (k 0)) (d (n "rkyv") (r "^0.7") (f (quote ("size_32"))) (o #t) (k 0)) (d (n "schemars") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "speedy") (r "^0.8.3") (o #t) (k 0)))) (h "1b8qf25cl671fhy9flw58dks3rl44b6rlaabnd5vnn346sp1s01j") (f (quote (("std" "num-traits/std") ("randtest" "rand/std" "rand/std_rng") ("default" "std"))))))

(define-public crate-ordered-float-3.6.0 (c (n "ordered-float") (v "3.6.0") (d (list (d (n "arbitrary") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.12.2") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.1") (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (o #t) (k 0)) (d (n "rkyv") (r "^0.7") (f (quote ("size_32"))) (o #t) (k 0)) (d (n "schemars") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "speedy") (r "^0.8.3") (o #t) (k 0)))) (h "0kr58gwy08flcigpmdjcqpc9ycpgn843ga5szxh6hzlrgqrq98qk") (f (quote (("std" "num-traits/std") ("randtest" "rand/std" "rand/std_rng") ("default" "std"))))))

(define-public crate-ordered-float-3.7.0 (c (n "ordered-float") (v "3.7.0") (d (list (d (n "arbitrary") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.12.2") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.1") (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (o #t) (k 0)) (d (n "rkyv") (r "^0.7.41") (o #t) (k 0)) (d (n "schemars") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "speedy") (r "^0.8.3") (o #t) (k 0)))) (h "04s2grvnc3mni4isd7i8hl5viqv8mnqcwx645h8g4ycaizgdphig") (f (quote (("std" "num-traits/std") ("rkyv" "rkyv_32") ("randtest" "rand/std" "rand/std_rng") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "rand/serde1") ("rkyv_ck" "rkyv?/validation") ("rkyv_64" "dep:rkyv" "rkyv?/size_64") ("rkyv_32" "dep:rkyv" "rkyv?/size_32") ("rkyv_16" "dep:rkyv" "rkyv?/size_16"))))))

(define-public crate-ordered-float-3.8.0 (c (n "ordered-float") (v "3.8.0") (d (list (d (n "arbitrary") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.12.2") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.1") (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (o #t) (k 0)) (d (n "rkyv") (r "^0.7.41") (o #t) (k 0)) (d (n "schemars") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "speedy") (r "^0.8.3") (o #t) (k 0)))) (h "1x6a2y4xa9b13cl2yai61l5ccfh8vhy15hzk39wshh9n9r4b25vl") (f (quote (("std" "num-traits/std") ("rkyv" "rkyv_32") ("randtest" "rand/std" "rand/std_rng") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "rand?/serde1") ("rkyv_ck" "rkyv?/validation") ("rkyv_64" "dep:rkyv" "rkyv?/size_64") ("rkyv_32" "dep:rkyv" "rkyv?/size_32") ("rkyv_16" "dep:rkyv" "rkyv?/size_16"))))))

(define-public crate-ordered-float-3.9.0 (c (n "ordered-float") (v "3.9.0") (d (list (d (n "arbitrary") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.12.2") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.1") (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (o #t) (k 0)) (d (n "rkyv") (r "^0.7.41") (o #t) (k 0)) (d (n "schemars") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "speedy") (r "^0.8.3") (o #t) (k 0)))) (h "1d100cm8in73913mjmj9wm3za9h6lm6lyns94kxv1gr675pkwv8j") (f (quote (("std" "num-traits/std") ("rkyv" "rkyv_32") ("randtest" "rand/std" "rand/std_rng") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "rand?/serde1") ("rkyv_ck" "rkyv?/validation") ("rkyv_64" "dep:rkyv" "rkyv?/size_64") ("rkyv_32" "dep:rkyv" "rkyv?/size_32") ("rkyv_16" "dep:rkyv" "rkyv?/size_16"))))))

(define-public crate-ordered-float-3.9.1 (c (n "ordered-float") (v "3.9.1") (d (list (d (n "arbitrary") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.12.2") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.1") (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (o #t) (k 0)) (d (n "rkyv") (r "^0.7.41") (f (quote ("rend"))) (o #t) (k 0)) (d (n "schemars") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "speedy") (r "^0.8.3") (o #t) (k 0)))) (h "01nxkrh16kvy0n9rhqkd3l68rz29i9faxd1jcc1n7kga2y096m1a") (f (quote (("std" "num-traits/std") ("rkyv" "rkyv_32") ("randtest" "rand/std" "rand/std_rng") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "rand?/serde1") ("rkyv_ck" "rkyv?/validation") ("rkyv_64" "dep:rkyv" "rkyv?/size_64") ("rkyv_32" "dep:rkyv" "rkyv?/size_32") ("rkyv_16" "dep:rkyv" "rkyv?/size_16"))))))

(define-public crate-ordered-float-4.0.0 (c (n "ordered-float") (v "4.0.0") (d (list (d (n "arbitrary") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.12.2") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.1") (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (o #t) (k 0)) (d (n "rkyv") (r "^0.7.41") (f (quote ("rend"))) (o #t) (k 0)) (d (n "schemars") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "speedy") (r "^0.8.3") (o #t) (k 0)))) (h "19dnml2lv2jjh3x7wdkwj85w65xrzwz5jrqf675jh7zbxzp4ar8y") (f (quote (("std" "num-traits/std") ("rkyv" "rkyv_32") ("randtest" "rand/std" "rand/std_rng") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "rand?/serde1") ("rkyv_ck" "rkyv?/validation") ("rkyv_64" "dep:rkyv" "rkyv?/size_64") ("rkyv_32" "dep:rkyv" "rkyv?/size_32") ("rkyv_16" "dep:rkyv" "rkyv?/size_16")))) (r "1.60")))

(define-public crate-ordered-float-4.1.0 (c (n "ordered-float") (v "4.1.0") (d (list (d (n "arbitrary") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.12.2") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.1") (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (o #t) (k 0)) (d (n "rkyv") (r "^0.7.41") (f (quote ("rend"))) (o #t) (k 0)) (d (n "schemars") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "speedy") (r "^0.8.3") (o #t) (k 0)))) (h "1mc5rj9hrxbx02zhhkfmxsyybr24sf9x0ijfi2f95mxkwgrl19g3") (f (quote (("std" "num-traits/std") ("rkyv" "rkyv_32") ("randtest" "rand/std" "rand/std_rng") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "rand?/serde1") ("rkyv_ck" "rkyv?/validation") ("rkyv_64" "dep:rkyv" "rkyv?/size_64") ("rkyv_32" "dep:rkyv" "rkyv?/size_32") ("rkyv_16" "dep:rkyv" "rkyv?/size_16")))) (r "1.60")))

(define-public crate-ordered-float-2.10.1 (c (n "ordered-float") (v "2.10.1") (d (list (d (n "arbitrary") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.1") (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (o #t) (k 0)) (d (n "rkyv") (r "^0.7") (f (quote ("size_32"))) (o #t) (k 0)) (d (n "schemars") (r "^0.6.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "075i108hr95pr7hy4fgxivib5pky3b6b22rywya5qyd2wmkrvwb8") (f (quote (("std" "num-traits/std") ("randtest" "rand/std" "rand/std_rng") ("default" "std"))))))

(define-public crate-ordered-float-3.9.2 (c (n "ordered-float") (v "3.9.2") (d (list (d (n "arbitrary") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.12.2") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.1") (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (o #t) (k 0)) (d (n "rkyv") (r "^0.7.41") (f (quote ("rend"))) (o #t) (k 0)) (d (n "schemars") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "speedy") (r "^0.8.3") (o #t) (k 0)))) (h "1p3jkxlz89ndm4lmwr2n5kdnckhm5pcmqqkihkag259dff8c7qgi") (f (quote (("std" "num-traits/std") ("rkyv" "rkyv_32") ("randtest" "rand/std" "rand/std_rng") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "rand?/serde1") ("rkyv_ck" "rkyv?/validation") ("rkyv_64" "dep:rkyv" "rkyv?/size_64") ("rkyv_32" "dep:rkyv" "rkyv?/size_32") ("rkyv_16" "dep:rkyv" "rkyv?/size_16"))))))

(define-public crate-ordered-float-4.1.1 (c (n "ordered-float") (v "4.1.1") (d (list (d (n "arbitrary") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.12.2") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.1") (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (o #t) (k 0)) (d (n "rkyv") (r "^0.7.41") (f (quote ("rend"))) (o #t) (k 0)) (d (n "schemars") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "speedy") (r "^0.8.3") (o #t) (k 0)))) (h "1s517iacgl1m251xvnaqx6ci0hij6pmpv8h0ryfcyd1i16l00sak") (f (quote (("std" "num-traits/std") ("rkyv" "rkyv_32") ("randtest" "rand/std" "rand/std_rng") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "rand?/serde1") ("rkyv_ck" "rkyv?/validation") ("rkyv_64" "dep:rkyv" "rkyv?/size_64") ("rkyv_32" "dep:rkyv" "rkyv?/size_32") ("rkyv_16" "dep:rkyv" "rkyv?/size_16")))) (r "1.60")))

(define-public crate-ordered-float-4.2.0 (c (n "ordered-float") (v "4.2.0") (d (list (d (n "arbitrary") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "borsh") (r "^1.2.0") (o #t) (k 0)) (d (n "bytemuck") (r "^1.12.2") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.1") (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (o #t) (k 0)) (d (n "rkyv") (r "^0.7.41") (f (quote ("rend"))) (o #t) (k 0)) (d (n "schemars") (r "^0.8.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "speedy") (r "^0.8.3") (o #t) (k 0)))) (h "0kjqcvvbcsibbx3hnj7ag06bd9gv2zfi5ja6rgyh2kbxbh3zfvd7") (f (quote (("std" "num-traits/std") ("rkyv" "rkyv_32") ("randtest" "rand/std" "rand/std_rng") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde" "rand?/serde1") ("rkyv_ck" "rkyv?/validation") ("rkyv_64" "dep:rkyv" "rkyv?/size_64") ("rkyv_32" "dep:rkyv" "rkyv?/size_32") ("rkyv_16" "dep:rkyv" "rkyv?/size_16")))) (r "1.60")))

