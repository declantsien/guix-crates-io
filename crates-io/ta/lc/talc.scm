(define-module (crates-io ta lc talc) #:use-module (crates-io))

(define-public crate-talc-1.0.0 (c (n "talc") (v "1.0.0") (d (list (d (n "average") (r "^0.13.1") (d #t) (k 2)) (d (n "fastrand") (r "^1.9.0") (d #t) (k 2)) (d (n "good_memory_allocator") (r "^0.1.7") (f (quote ("spin" "allocator"))) (d #t) (k 2)) (d (n "linked_list_allocator") (r "^0.10.3") (f (quote ("use_spin_nightly" "const_mut_refs" "alloc_ref"))) (d #t) (k 2)) (d (n "simple-chunk-allocator") (r "^0.1.5") (d #t) (k 2)) (d (n "spin") (r "^0.9.4") (o #t) (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5.0") (d #t) (k 2)))) (h "0y1lbj9wk06hdgal2h8da2wh3zcj9g3cgd2iqwgpmw8w67a8fd79") (f (quote (("default" "spin" "allocator") ("allocator" "spin"))))))

(define-public crate-talc-2.0.0 (c (n "talc") (v "2.0.0") (d (list (d (n "buddy-alloc") (r "^0.5") (d #t) (k 2)) (d (n "fastrand") (r "^1.9") (d #t) (k 2)) (d (n "good_memory_allocator") (r "^0.1") (f (quote ("spin" "allocator"))) (d #t) (k 2)) (d (n "linked_list_allocator") (r "^0.10") (f (quote ("use_spin_nightly" "const_mut_refs" "alloc_ref"))) (d #t) (k 2)) (d (n "lock_api") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.9.8") (f (quote ("lock_api" "spin_mutex"))) (k 2)))) (h "17zxayg9gh5kgx2rc8gdd9fp0z08p6rqkpvb6pvdiff5iranfnhg") (f (quote (("default" "allocator") ("allocator" "lock_api"))))))

(define-public crate-talc-2.1.0 (c (n "talc") (v "2.1.0") (d (list (d (n "buddy-alloc") (r "^0.5") (d #t) (k 2)) (d (n "dlmalloc") (r "^0.2.4") (d #t) (k 2)) (d (n "fastrand") (r "^1.9") (d #t) (k 2)) (d (n "good_memory_allocator") (r "^0.1") (f (quote ("spin" "allocator"))) (d #t) (k 2)) (d (n "linked_list_allocator") (r "^0.10") (f (quote ("use_spin_nightly" "const_mut_refs" "alloc_ref"))) (d #t) (k 2)) (d (n "lock_api") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.9.8") (f (quote ("lock_api" "spin_mutex"))) (k 2)))) (h "1l4qa3q9cdx1llkd6wk5bwkhjzv0fqs5i4byw0d2lgmfmaah9fq1") (f (quote (("fuzzing") ("default" "allocator") ("allocator" "lock_api"))))))

(define-public crate-talc-2.2.0 (c (n "talc") (v "2.2.0") (d (list (d (n "buddy-alloc") (r "^0.5") (d #t) (k 2)) (d (n "dlmalloc") (r "^0.2.4") (d #t) (k 2)) (d (n "fastrand") (r "^1.9") (d #t) (k 2)) (d (n "good_memory_allocator") (r "^0.1") (f (quote ("spin" "allocator"))) (d #t) (k 2)) (d (n "linked_list_allocator") (r "^0.10") (f (quote ("use_spin_nightly" "const_mut_refs" "alloc_ref"))) (d #t) (k 2)) (d (n "lock_api") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.9.8") (f (quote ("lock_api" "spin_mutex"))) (k 2)))) (h "15gdr26a0qqg649dav3w7cqvz3hqrdm2vw2jql7ngp0y7habmlb6") (f (quote (("fuzzing") ("default" "allocator") ("allocator" "lock_api"))))))

(define-public crate-talc-2.2.1 (c (n "talc") (v "2.2.1") (d (list (d (n "buddy-alloc") (r "^0.5") (d #t) (k 2)) (d (n "dlmalloc") (r "^0.2.4") (k 2)) (d (n "fastrand") (r "^1.9") (d #t) (k 2)) (d (n "good_memory_allocator") (r "^0.1") (f (quote ("spin" "allocator"))) (d #t) (k 2)) (d (n "linked_list_allocator") (r "^0.10") (f (quote ("use_spin_nightly" "const_mut_refs" "alloc_ref"))) (d #t) (k 2)) (d (n "lock_api") (r "^0.4") (o #t) (k 0)) (d (n "prev_talc") (r "^2") (d #t) (k 2) (p "talc")) (d (n "spin") (r "^0.9.8") (f (quote ("lock_api" "spin_mutex"))) (k 2)))) (h "1dzlqqjmhahiz3aa00lc1fag37bq2zf04q31qfiwcdqaasbkpsd0") (f (quote (("fuzzing") ("default" "allocator") ("allocator" "lock_api"))))))

(define-public crate-talc-2.2.2 (c (n "talc") (v "2.2.2") (d (list (d (n "buddy-alloc") (r "^0.5") (d #t) (k 2)) (d (n "dlmalloc") (r "^0.2.4") (k 2)) (d (n "fastrand") (r "^1.9") (d #t) (k 2)) (d (n "good_memory_allocator") (r "^0.1") (f (quote ("spin" "allocator"))) (d #t) (k 2)) (d (n "linked_list_allocator") (r "^0.10") (f (quote ("use_spin_nightly" "const_mut_refs" "alloc_ref"))) (d #t) (k 2)) (d (n "lock_api") (r "^0.4") (o #t) (k 0)) (d (n "prev_talc") (r "^2") (d #t) (k 2) (p "talc")) (d (n "spin") (r "^0.9.8") (f (quote ("lock_api" "spin_mutex"))) (k 2)))) (h "1inpgqamfra672ymxvavsv16mbcn3abszq4g6chfbdfqiny9rhb0") (f (quote (("fuzzing") ("default" "allocator") ("allocator" "lock_api"))))))

(define-public crate-talc-3.0.0 (c (n "talc") (v "3.0.0") (d (list (d (n "buddy-alloc") (r "^0.5") (d #t) (k 2)) (d (n "dlmalloc") (r "^0.2.4") (k 2)) (d (n "fastrand") (r "^1.9") (d #t) (k 2)) (d (n "good_memory_allocator") (r "^0.1") (f (quote ("spin" "allocator"))) (d #t) (k 2)) (d (n "linked_list_allocator") (r "^0.10") (f (quote ("use_spin_nightly" "const_mut_refs" "alloc_ref"))) (d #t) (k 2)) (d (n "lock_api") (r "^0.4") (o #t) (k 0)) (d (n "prev_talc") (r "^2") (d #t) (k 2) (p "talc")) (d (n "spin") (r "^0.9.8") (f (quote ("lock_api" "spin_mutex"))) (k 2)))) (h "1hnlks8a5mmyh46xiqvbpldpdm88sbviqb77rhv1prp704sn402z") (f (quote (("fuzzing") ("default" "allocator") ("allocator" "lock_api"))))))

(define-public crate-talc-3.0.1 (c (n "talc") (v "3.0.1") (d (list (d (n "buddy-alloc") (r "^0.5") (d #t) (k 2)) (d (n "dlmalloc") (r "^0.2.4") (k 2)) (d (n "fastrand") (r "^1.9") (d #t) (k 2)) (d (n "good_memory_allocator") (r "^0.1") (f (quote ("spin" "allocator"))) (d #t) (k 2)) (d (n "linked_list_allocator") (r "^0.10") (f (quote ("use_spin_nightly" "const_mut_refs" "alloc_ref"))) (d #t) (k 2)) (d (n "lock_api") (r "^0.4") (o #t) (k 0)) (d (n "prev_talc") (r "^2") (d #t) (k 2) (p "talc")) (d (n "spin") (r "^0.9.8") (f (quote ("lock_api" "spin_mutex"))) (k 2)))) (h "1434issqmd7z1jsxwz68y4zcjfnra8m5lr499r8rbwncdrp71gpi") (f (quote (("fuzzing") ("default" "allocator") ("allocator" "lock_api"))))))

(define-public crate-talc-3.1.0 (c (n "talc") (v "3.1.0") (d (list (d (n "buddy-alloc") (r "^0.5") (d #t) (k 2)) (d (n "dlmalloc") (r "^0.2.4") (k 2)) (d (n "fastrand") (r "^1.9") (d #t) (k 2)) (d (n "good_memory_allocator") (r "^0.1") (f (quote ("spin" "allocator"))) (d #t) (k 2)) (d (n "linked_list_allocator") (r "^0.10") (f (quote ("use_spin_nightly" "const_mut_refs" "alloc_ref"))) (d #t) (k 2)) (d (n "lock_api") (r "^0.4") (o #t) (k 0)) (d (n "prev_talc") (r "^2") (d #t) (k 2) (p "talc")) (d (n "spin") (r "^0.9.8") (f (quote ("lock_api" "spin_mutex"))) (k 2)))) (h "10fnzix77cbv7h2gr414qkrn1nz6smbfm7d27h02ixkcbzrca00r") (f (quote (("nightly_api") ("fuzzing") ("default" "allocator" "nightly_api") ("allocator" "lock_api")))) (r "1.67.1")))

(define-public crate-talc-3.1.1 (c (n "talc") (v "3.1.1") (d (list (d (n "buddy-alloc") (r "^0.5") (d #t) (k 2)) (d (n "dlmalloc") (r "^0.2.4") (k 2)) (d (n "fastrand") (r "^1.9") (d #t) (k 2)) (d (n "good_memory_allocator") (r "^0.1") (f (quote ("spin" "allocator"))) (d #t) (k 2)) (d (n "linked_list_allocator") (r "^0.10") (f (quote ("use_spin_nightly" "const_mut_refs" "alloc_ref"))) (d #t) (k 2)) (d (n "lock_api") (r "^0.4") (o #t) (k 0)) (d (n "prev_talc") (r "^2") (d #t) (k 2) (p "talc")) (d (n "spin") (r "^0.9.8") (f (quote ("lock_api" "spin_mutex"))) (k 2)))) (h "1qiilshn6hp2l22b9k8n5imv6pnbnzdygvyhn82p9cryk6p2nkfz") (f (quote (("nightly_api") ("fuzzing") ("default" "allocator" "nightly_api") ("allocator" "lock_api")))) (r "1.67.1")))

(define-public crate-talc-3.1.2 (c (n "talc") (v "3.1.2") (d (list (d (n "buddy-alloc") (r "^0.5") (d #t) (k 2)) (d (n "dlmalloc") (r "^0.2.4") (k 2)) (d (n "fastrand") (r "^1.9") (d #t) (k 2)) (d (n "good_memory_allocator") (r "^0.1") (f (quote ("spin" "allocator"))) (d #t) (k 2)) (d (n "linked_list_allocator") (r "^0.10") (f (quote ("use_spin_nightly" "const_mut_refs" "alloc_ref"))) (d #t) (k 2)) (d (n "lock_api") (r "^0.4") (o #t) (k 0)) (d (n "prev_talc") (r "^2") (d #t) (k 2) (p "talc")) (d (n "spin") (r "^0.9.8") (f (quote ("lock_api" "spin_mutex"))) (k 2)))) (h "0agc9sn68xjbnyyjc5dvqr04nhhsph5a4n74bmw24as0cs7qwg63") (f (quote (("nightly_api") ("fuzzing") ("default" "allocator" "nightly_api") ("allocator" "lock_api")))) (r "1.67.1")))

(define-public crate-talc-4.0.0 (c (n "talc") (v "4.0.0") (d (list (d (n "buddy-alloc") (r "^0.5") (d #t) (k 2)) (d (n "dlmalloc") (r "^0.2.4") (k 2)) (d (n "fastrand") (r "^1.9") (d #t) (k 2)) (d (n "good_memory_allocator") (r "^0.1") (f (quote ("spin" "allocator"))) (d #t) (k 2)) (d (n "linked_list_allocator") (r "^0.10") (f (quote ("use_spin_nightly" "const_mut_refs" "alloc_ref"))) (d #t) (k 2)) (d (n "lock_api") (r "^0.4") (o #t) (k 0)) (d (n "prev_talc") (r "^2") (d #t) (k 2) (p "talc")) (d (n "spin") (r "^0.9.8") (f (quote ("lock_api" "spin_mutex"))) (k 2)))) (h "1dq07wv0fh0985cw0w6gs34260zp031qip612kapjwjygwcr12jc") (f (quote (("nightly_api") ("fuzzing") ("default" "allocator" "nightly_api") ("allocator" "lock_api")))) (r "1.67.1")))

(define-public crate-talc-4.1.0 (c (n "talc") (v "4.1.0") (d (list (d (n "buddy-alloc") (r "^0.5") (d #t) (k 2)) (d (n "dlmalloc") (r "^0.2.4") (f (quote ("global"))) (k 2)) (d (n "fastrand") (r "^1.9") (d #t) (k 2)) (d (n "good_memory_allocator") (r "^0.1") (f (quote ("spin" "allocator"))) (d #t) (k 2)) (d (n "linked_list_allocator") (r "^0.10") (f (quote ("use_spin_nightly" "const_mut_refs" "alloc_ref"))) (d #t) (k 2)) (d (n "lock_api") (r "^0.4") (o #t) (k 0)) (d (n "spin") (r "^0.9.8") (f (quote ("lock_api" "spin_mutex"))) (k 2)))) (h "08q29fqnkv28h6drs5bg61b472f5dqz74dfkg8m5yx6zx7v45j3z") (f (quote (("nightly_api") ("fuzzing") ("default" "lock_api" "allocator" "nightly_api") ("counters") ("allocator" "lock_api")))) (y #t) (r "1.67.1")))

(define-public crate-talc-4.1.1 (c (n "talc") (v "4.1.1") (d (list (d (n "buddy-alloc") (r "^0.5") (d #t) (k 2)) (d (n "dlmalloc") (r "^0.2.4") (f (quote ("global"))) (k 2)) (d (n "fastrand") (r "^1.9") (d #t) (k 2)) (d (n "good_memory_allocator") (r "^0.1") (f (quote ("spin" "allocator"))) (d #t) (k 2)) (d (n "linked_list_allocator") (r "^0.10") (f (quote ("use_spin_nightly" "const_mut_refs" "alloc_ref"))) (d #t) (k 2)) (d (n "lock_api") (r "^0.4") (o #t) (k 0)) (d (n "spin") (r "^0.9.8") (f (quote ("lock_api" "spin_mutex"))) (k 2)))) (h "05kzrn65209bzhdmsbjldf932qj2i6pl6h283mqdacxlxzamabnr") (f (quote (("nightly_api") ("fuzzing") ("default" "lock_api" "allocator" "nightly_api") ("counters") ("allocator" "lock_api")))) (r "1.67.1")))

(define-public crate-talc-4.2.0 (c (n "talc") (v "4.2.0") (d (list (d (n "buddy-alloc") (r "^0.5") (d #t) (k 2)) (d (n "dlmalloc") (r "^0.2.4") (f (quote ("global"))) (k 2)) (d (n "fastrand") (r "^1.9") (d #t) (k 2)) (d (n "good_memory_allocator") (r "^0.1") (f (quote ("spin" "allocator"))) (d #t) (k 2)) (d (n "linked_list_allocator") (r "^0.10") (f (quote ("use_spin_nightly" "const_mut_refs" "alloc_ref"))) (d #t) (k 2)) (d (n "lock_api") (r "^0.4") (o #t) (k 0)) (d (n "spin") (r "^0.9.8") (f (quote ("lock_api" "spin_mutex"))) (k 2)))) (h "06n1cfgzcambm8ph8ps9246pj6k8mw3x8q45qmd9hxfjsg7sjk0h") (f (quote (("nightly_api") ("fuzzing") ("default" "lock_api" "allocator" "nightly_api") ("counters") ("allocator" "lock_api")))) (r "1.67.1")))

(define-public crate-talc-4.3.0 (c (n "talc") (v "4.3.0") (d (list (d (n "buddy-alloc") (r "^0.5") (d #t) (k 2)) (d (n "dlmalloc") (r "^0.2.4") (f (quote ("global"))) (k 2)) (d (n "fastrand") (r "^1.9") (d #t) (k 2)) (d (n "frusa") (r "^0.1.2") (d #t) (k 2)) (d (n "good_memory_allocator") (r "^0.1") (f (quote ("spin" "allocator"))) (d #t) (k 2)) (d (n "linked_list_allocator") (r "^0.10") (f (quote ("use_spin_nightly" "const_mut_refs" "alloc_ref"))) (d #t) (k 2)) (d (n "lock_api") (r "^0.4") (o #t) (k 0)) (d (n "rlsf") (r "^0.2.1") (d #t) (k 2)) (d (n "spin") (r "^0.9.8") (f (quote ("lock_api" "spin_mutex"))) (k 2)))) (h "183gphcwz29njnbm8nvhm0qpa9ghcgvdv84rmj1qkklj519xr9k0") (f (quote (("nightly_api") ("fuzzing") ("default" "lock_api" "allocator" "nightly_api") ("counters") ("allocator" "lock_api")))) (r "1.67.1")))

(define-public crate-talc-4.3.1 (c (n "talc") (v "4.3.1") (d (list (d (n "buddy-alloc") (r "^0.5") (d #t) (k 2)) (d (n "dlmalloc") (r "^0.2.4") (f (quote ("global"))) (k 2)) (d (n "fastrand") (r "^1.9") (d #t) (k 2)) (d (n "frusa") (r "^0.1.2") (d #t) (k 2)) (d (n "good_memory_allocator") (r "^0.1") (f (quote ("spin" "allocator"))) (d #t) (k 2)) (d (n "linked_list_allocator") (r "^0.10") (f (quote ("use_spin_nightly" "const_mut_refs" "alloc_ref"))) (d #t) (k 2)) (d (n "lock_api") (r "^0.4") (o #t) (k 0)) (d (n "rlsf") (r "^0.2.1") (d #t) (k 2)) (d (n "spin") (r "^0.9.8") (f (quote ("lock_api" "spin_mutex"))) (k 2)))) (h "02wliph9crnkmjz1v9x5k18j58xhrnf38vn10px37c60j6gxni2j") (f (quote (("nightly_api") ("fuzzing") ("default" "lock_api" "allocator" "nightly_api") ("counters") ("allocator" "lock_api")))) (r "1.67.1")))

(define-public crate-talc-4.4.0 (c (n "talc") (v "4.4.0") (d (list (d (n "allocator-api2") (r "^0.2") (o #t) (k 0)) (d (n "lock_api") (r "^0.4") (o #t) (k 0)) (d (n "spin") (r "^0.9.8") (f (quote ("lock_api" "spin_mutex"))) (k 2)))) (h "17ysrczn4drgm5pjb9a4zgf9mh26r6g54wvwjr4kgks1fypppzcr") (f (quote (("nightly_api") ("fuzzing") ("default" "lock_api" "allocator" "nightly_api") ("counters") ("allocator" "lock_api")))) (r "1.67.1")))

(define-public crate-talc-4.4.1 (c (n "talc") (v "4.4.1") (d (list (d (n "allocator-api2") (r "^0.2") (o #t) (k 0)) (d (n "lock_api") (r "^0.4") (o #t) (k 0)) (d (n "spin") (r "^0.9.8") (f (quote ("lock_api" "spin_mutex"))) (k 2)))) (h "1j6axnf887z3ddpwsvfarlrrs4xnwj9xi0gp1cxddbcs57n15gh4") (f (quote (("nightly_api") ("fuzzing") ("default" "lock_api" "allocator" "nightly_api") ("counters") ("allocator" "lock_api")))) (r "1.67.1")))

