(define-module (crates-io ta ur tauri-plugin-notification) #:use-module (crates-io))

(define-public crate-tauri-plugin-notification-2.0.0-alpha.0 (c (n "tauri-plugin-notification") (v "2.0.0-alpha.0") (d (list (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "notify-rust") (r "^4.5") (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "tauri") (r "^2.0.0-alpha.9") (d #t) (k 0)) (d (n "tauri-build") (r "^2.0.0-alpha.5") (d #t) (k 1)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde" "parsing" "formatting"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "win7-notifications") (r "^0.3.1") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "1jggd27xshq2b3y3fjifajlmvy9y11nlcdnx1f5n73qm61i85rwj") (f (quote (("windows7-compat" "win7-notifications")))) (l "tauri-plugin-notification")))

(define-public crate-tauri-plugin-notification-2.0.0-alpha.1 (c (n "tauri-plugin-notification") (v "2.0.0-alpha.1") (d (list (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "notify-rust") (r "^4.5") (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "tauri") (r "^2.0.0-alpha.9") (d #t) (k 0)) (d (n "tauri-build") (r "^2.0.0-alpha.5") (d #t) (k 1)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde" "parsing" "formatting"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "win7-notifications") (r "^0.3.1") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "1jxrsskzkgmgiqlbj30dzi4dg77zx7rk8sjxnz72fvkc5kkygksx") (f (quote (("windows7-compat" "win7-notifications")))) (l "tauri-plugin-notification")))

(define-public crate-tauri-plugin-notification-2.0.0-alpha.2 (c (n "tauri-plugin-notification") (v "2.0.0-alpha.2") (d (list (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "notify-rust") (r "^4.5") (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "tauri") (r "^2.0.0-alpha.11") (d #t) (k 0)) (d (n "tauri-build") (r "^2.0.0-alpha.8") (d #t) (k 1)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde" "parsing" "formatting"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "win7-notifications") (r "^0.3.1") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "07icngg3aw623awcsgkwmcxdymn5kyahvr2cflvmj50m3x28d0yl") (f (quote (("windows7-compat" "win7-notifications")))) (l "tauri-plugin-notification")))

(define-public crate-tauri-plugin-notification-2.0.0-alpha.3 (c (n "tauri-plugin-notification") (v "2.0.0-alpha.3") (d (list (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "notify-rust") (r "^4.5") (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "tauri") (r "^2.0.0-alpha.12") (d #t) (k 0)) (d (n "tauri-build") (r "^2.0.0-alpha.8") (d #t) (k 1)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde" "parsing" "formatting"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "win7-notifications") (r "^0.3.1") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "12ym2ycihl61w3kixf5r1mjlymkkjv8937dgwmw04jgg49nwpr1a") (f (quote (("windows7-compat" "win7-notifications")))) (l "tauri-plugin-notification")))

(define-public crate-tauri-plugin-notification-2.0.0-alpha.4 (c (n "tauri-plugin-notification") (v "2.0.0-alpha.4") (d (list (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "notify-rust") (r "^4.5") (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "tauri") (r "^2.0.0-alpha.16") (d #t) (k 0)) (d (n "tauri-build") (r "^2.0.0-alpha.10") (d #t) (k 1)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde" "parsing" "formatting"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "win7-notifications") (r "^0.3.1") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "07fi9alw2hcgjxvdlv556dry359dykb5hqc277x23vsvsy5yd6aj") (f (quote (("windows7-compat" "win7-notifications") ("dox" "tauri/dox")))) (l "tauri-plugin-notification") (r "1.70")))

(define-public crate-tauri-plugin-notification-2.0.0-alpha.5 (c (n "tauri-plugin-notification") (v "2.0.0-alpha.5") (d (list (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "notify-rust") (r "^4.5") (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "tauri") (r "^2.0.0-alpha.17") (d #t) (k 0)) (d (n "tauri-build") (r "^2.0.0-alpha.11") (d #t) (k 1)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde" "parsing" "formatting"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "win7-notifications") (r "^0.3.1") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "05q5456394br03ayz7qc3k6mlccr0fmjxg2grqyhg880hw9x7dv7") (f (quote (("windows7-compat" "win7-notifications")))) (l "tauri-plugin-notification") (r "1.70")))

(define-public crate-tauri-plugin-notification-2.0.0-alpha.6 (c (n "tauri-plugin-notification") (v "2.0.0-alpha.6") (d (list (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "notify-rust") (r "^4.5") (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "tauri") (r "^2.0.0-alpha.18") (d #t) (k 0)) (d (n "tauri-build") (r "^2.0.0-alpha.12") (d #t) (k 1)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde" "parsing" "formatting"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "win7-notifications") (r "^0.3.1") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows-version") (r "^0.1") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "1zknimj9rbxprim7vajlnkh7ckrb1qf0i02993il0bygd1hfax3r") (f (quote (("windows7-compat" "win7-notifications" "windows-version")))) (l "tauri-plugin-notification") (r "1.70")))

(define-public crate-tauri-plugin-notification-2.0.0-alpha.7 (c (n "tauri-plugin-notification") (v "2.0.0-alpha.7") (d (list (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "notify-rust") (r "^4.5") (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "tauri") (r "^2.0.0-alpha.20") (d #t) (k 0)) (d (n "tauri-build") (r "^2.0.0-alpha.13") (d #t) (k 1)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde" "parsing" "formatting"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "win7-notifications") (r "^0.3.1") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows-version") (r "^0.1") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "1g7k7l5vjfgvmz38w6spi7hzjm4ar7p930flp5r0wpa967iwzqf5") (f (quote (("windows7-compat" "win7-notifications" "windows-version")))) (l "tauri-plugin-notification") (r "1.70")))

(define-public crate-tauri-plugin-notification-2.0.0-beta.0 (c (n "tauri-plugin-notification") (v "2.0.0-beta.0") (d (list (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "notify-rust") (r "^4.5") (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "tauri") (r "^2.0.0-beta.1") (d #t) (k 0)) (d (n "tauri-plugin") (r "^2.0.0-beta.0") (f (quote ("build"))) (d #t) (k 1)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde" "parsing" "formatting"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "win7-notifications") (r "^0.3.1") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows-version") (r "^0.1") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "0fs8rwhhzsanxjfvad5snx6dszfj013x85l24s3rivc2g5hxv47k") (f (quote (("windows7-compat" "win7-notifications" "windows-version")))) (l "tauri-plugin-notification") (r "1.70")))

(define-public crate-tauri-plugin-notification-2.0.0-beta.1 (c (n "tauri-plugin-notification") (v "2.0.0-beta.1") (d (list (d (n "chrono") (r "^0.4") (o #t) (d #t) (t "cfg(target_os=\"macos\")") (k 0)) (d (n "color-backtrace") (r "^0.5") (d #t) (k 2)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "image") (r "^0.24") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "mac-notification-sys") (r "^0.6") (d #t) (t "cfg(target_os=\"macos\")") (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "tauri") (r "^2.0.0-beta.4") (d #t) (k 0)) (d (n "tauri-plugin") (r "^2.0.0-beta.3") (f (quote ("build"))) (d #t) (k 1)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde" "parsing" "formatting"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "win7-notifications") (r "^0.3.1") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows-version") (r "^0.1") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "winrt-notification") (r "^0.1") (d #t) (t "cfg(target_os=\"windows\")") (k 0) (p "tauri-winrt-notification")) (d (n "zbus") (r "^4") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)))) (h "1zm2x9gdynw8q1798v4k2y4w02x9fdlx7gn17jh4lxibgw608p56") (f (quote (("windows7-compat" "win7-notifications" "windows-version") ("default" "zbus" "async") ("async")))) (l "tauri-plugin-notification") (r "1.75")))

(define-public crate-tauri-plugin-notification-2.0.0-beta.2 (c (n "tauri-plugin-notification") (v "2.0.0-beta.2") (d (list (d (n "chrono") (r "^0.4") (o #t) (d #t) (t "cfg(target_os=\"macos\")") (k 0)) (d (n "color-backtrace") (r "^0.5") (d #t) (k 2)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "image") (r "^0.24") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "mac-notification-sys") (r "^0.6") (d #t) (t "cfg(target_os=\"macos\")") (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "tauri") (r "^2.0.0-beta.9") (d #t) (k 0)) (d (n "tauri-plugin") (r "^2.0.0-beta.7") (f (quote ("build"))) (d #t) (k 1)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde" "parsing" "formatting"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "win7-notifications") (r "^0.3.1") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows-version") (r "^0.1") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "winrt-notification") (r "^0.1") (d #t) (t "cfg(target_os=\"windows\")") (k 0) (p "tauri-winrt-notification")) (d (n "zbus") (r "^4") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)))) (h "0rdlv5qm4ga3pjym0vh9nnvclfaahnaazn4gp2k4j176scbr9ihn") (f (quote (("windows7-compat" "win7-notifications" "windows-version") ("default" "zbus" "async") ("async")))) (l "tauri-plugin-notification") (r "1.75")))

(define-public crate-tauri-plugin-notification-2.0.0-beta.3 (c (n "tauri-plugin-notification") (v "2.0.0-beta.3") (d (list (d (n "chrono") (r "^0.4") (o #t) (d #t) (t "cfg(target_os=\"macos\")") (k 0)) (d (n "color-backtrace") (r "^0.5") (d #t) (k 2)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "mac-notification-sys") (r "^0.6") (d #t) (t "cfg(target_os=\"macos\")") (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "tauri") (r "^2.0.0-beta.12") (d #t) (k 0)) (d (n "tauri-plugin") (r "^2.0.0-beta.10") (f (quote ("build"))) (d #t) (k 1)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde" "parsing" "formatting"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "win7-notifications") (r "^0.3.1") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows-version") (r "^0.1") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "winrt-notification") (r "^0.1") (d #t) (t "cfg(target_os=\"windows\")") (k 0) (p "tauri-winrt-notification")) (d (n "zbus") (r "^4") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)))) (h "0lwks6dp6mq1n486j37ks3f7b3gnd8dwiy8809fqfzdzv02778rf") (f (quote (("windows7-compat" "win7-notifications" "windows-version") ("default" "zbus" "async") ("async")))) (l "tauri-plugin-notification") (r "1.75")))

(define-public crate-tauri-plugin-notification-2.0.0-beta.4 (c (n "tauri-plugin-notification") (v "2.0.0-beta.4") (d (list (d (n "chrono") (r "^0.4") (o #t) (d #t) (t "cfg(target_os=\"macos\")") (k 0)) (d (n "color-backtrace") (r "^0.6") (d #t) (k 2)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "mac-notification-sys") (r "^0.6") (d #t) (t "cfg(target_os=\"macos\")") (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "tauri") (r "^2.0.0-beta.15") (d #t) (k 0)) (d (n "tauri-plugin") (r "^2.0.0-beta.12") (f (quote ("build"))) (d #t) (k 1)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde" "parsing" "formatting"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "win7-notifications") (r "^0.4.3") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows-version") (r "^0.1") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "winrt-notification") (r "^0.2") (d #t) (t "cfg(target_os=\"windows\")") (k 0) (p "tauri-winrt-notification")) (d (n "zbus") (r "^4") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)))) (h "0xxivn1f6kbmbk1zs3m0ji8vq7g6g2dqnhxcbawvcim0558bxa75") (f (quote (("windows7-compat" "win7-notifications" "windows-version") ("default" "zbus" "async") ("async")))) (l "tauri-plugin-notification") (r "1.75")))

(define-public crate-tauri-plugin-notification-2.0.0-beta.5 (c (n "tauri-plugin-notification") (v "2.0.0-beta.5") (d (list (d (n "chrono") (r "^0.4") (o #t) (d #t) (t "cfg(target_os=\"macos\")") (k 0)) (d (n "color-backtrace") (r "^0.6") (d #t) (k 2)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "mac-notification-sys") (r "^0.6") (d #t) (t "cfg(target_os=\"macos\")") (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "tauri") (r "^2.0.0-beta.17") (d #t) (k 0)) (d (n "tauri-plugin") (r "^2.0.0-beta.13") (f (quote ("build"))) (d #t) (k 1)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde" "parsing" "formatting"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "win7-notifications") (r "^0.4.3") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows-version") (r "^0.1") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "winrt-notification") (r "^0.2") (d #t) (t "cfg(target_os=\"windows\")") (k 0) (p "tauri-winrt-notification")) (d (n "zbus") (r "^4") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)))) (h "0x2fc9j0slpx0h9dzqxwzj4zv5w0gihkqad86z4b5aj17mykk5pa") (f (quote (("windows7-compat" "win7-notifications" "windows-version") ("default" "zbus" "async") ("async")))) (l "tauri-plugin-notification") (r "1.75")))

