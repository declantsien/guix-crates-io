(define-module (crates-io ta ur tauri-bundler) #:use-module (crates-io))

(define-public crate-tauri-bundler-0.4.0 (c (n "tauri-bundler") (v "0.4.0") (d (list (d (n "ar") (r "^0.8.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.11.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "handlebars") (r "^3.0") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "hex") (r "^0.4") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "icns") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.22.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "libflate") (r "^0.1") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "msi") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "target_build_utils") (r "^0.3") (d #t) (k 0)) (d (n "tauri-utils") (r "^0.4") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "term") (r "^0.6.1") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v5"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "zip") (r "^0.5") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)))) (h "1sxyspl7mkf85idlc2qnhll326265nxw4h1hwa4x8d36g0lpzzfv") (f (quote (("ios") ("dmg") ("appimage"))))))

(define-public crate-tauri-bundler-0.4.1 (c (n "tauri-bundler") (v "0.4.1") (d (list (d (n "ar") (r "^0.8.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.11.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "handlebars") (r "^3.0") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "hex") (r "^0.4") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "icns") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.22.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "libflate") (r "^0.1") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "msi") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "target_build_utils") (r "^0.3") (d #t) (k 0)) (d (n "tauri-utils") (r "^0.4") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "term") (r "^0.6.1") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v5"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "zip") (r "^0.5") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)))) (h "0y7ngh2jq8y1y0qchdmw2zs45815gfdqblawmppg292mzisbm709") (f (quote (("ios") ("dmg") ("appimage"))))))

(define-public crate-tauri-bundler-0.4.2 (c (n "tauri-bundler") (v "0.4.2") (d (list (d (n "ar") (r "^0.8.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.11.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "handlebars") (r "^3.0") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "hex") (r "^0.4") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "icns") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.22.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "libflate") (r "^0.1") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "msi") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "target_build_utils") (r "^0.3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "term") (r "^0.6.1") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v5"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "zip") (r "^0.5") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)))) (h "0icpp60qz355sinacga2qgb1qpavz45v5a1www12j6vys215ggxl") (f (quote (("ios") ("dmg") ("appimage"))))))

(define-public crate-tauri-bundler-0.4.3 (c (n "tauri-bundler") (v "0.4.3") (d (list (d (n "ar") (r "^0.8.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.11.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "handlebars") (r "^3.0") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "hex") (r "^0.4") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "icns") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.22.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "libflate") (r "^0.1") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "msi") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "target_build_utils") (r "^0.3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "term") (r "^0.6.1") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v5"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "zip") (r "^0.5") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)))) (h "1mbfbxjh8zc4fk4r2zyp6mcbpr7r6mz6kdlgn1km39pkx20acdg5") (f (quote (("ios") ("dmg") ("appimage"))))))

(define-public crate-tauri-bundler-0.4.4 (c (n "tauri-bundler") (v "0.4.4") (d (list (d (n "ar") (r "^0.8.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.11.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "handlebars") (r "^3.0") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "hex") (r "^0.4") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "icns") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.22.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "libflate") (r "^0.1") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "msi") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "target_build_utils") (r "^0.3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "term") (r "^0.6.1") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v5"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "zip") (r "^0.5") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)))) (h "1pir4pnqd43jawi4c5bqjwv92yk75ipj1d1ggpijpji8dkcsvcn6") (f (quote (("ios") ("dmg") ("appimage"))))))

(define-public crate-tauri-bundler-0.5.0 (c (n "tauri-bundler") (v "0.5.0") (d (list (d (n "ar") (r "^0.8.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.12.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "handlebars") (r "^3.0") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "hex") (r "^0.4") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "icns") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.23.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "libflate") (r "^0.1") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "msi") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "target_build_utils") (r "^0.3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "term") (r "^0.6.1") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v5"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "zip") (r "^0.5") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)))) (h "0nlkgas2x0vp12xbqz21sq3dhzl1sxwz51n73hm0p4bj3rqkjkh5") (f (quote (("ios") ("dmg") ("appimage"))))))

(define-public crate-tauri-bundler-0.6.0 (c (n "tauri-bundler") (v "0.6.0") (d (list (d (n "ar") (r "^0.8.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.13.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "handlebars") (r "^3.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "icns") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.23.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libflate") (r "^1.0") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "msi") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "target_build_utils") (r "^0.3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "term") (r "^0.6.1") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v5"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "zip") (r "^0.5") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)))) (h "0rz0386qy45gsa9m3bnc175j2w7c9nb1k7fqy2kazpqy85mfwq9g")))

(define-public crate-tauri-bundler-0.6.1 (c (n "tauri-bundler") (v "0.6.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.8.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.14.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "handlebars") (r "^3.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "icns") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.23.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libflate") (r "^1.0") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "msi") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "runas") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "target_build_utils") (r "^0.3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "term") (r "^0.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v5"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "zip") (r "^0.5") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)))) (h "0h84rlg20z0zm71lik0g5fmlmz7jy2sljw8pv7blh06n6qps91fz")))

(define-public crate-tauri-bundler-0.7.0 (c (n "tauri-bundler") (v "0.7.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.8.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.14.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "handlebars") (r "^3.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "icns") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.23.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libflate") (r "^1.0") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "msi") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "runas") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "target_build_utils") (r "^0.3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "term") (r "^0.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v5"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "zip") (r "^0.5") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)))) (h "1pzb07zc8zf0ax1n1gqzr3v69776cnds22vy5ym316rjpn60s25a")))

(define-public crate-tauri-bundler-0.8.0 (c (n "tauri-bundler") (v "0.8.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.8.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.15.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "handlebars") (r "^3.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "icns") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.23.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libflate") (r "^1.0") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "msi") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "runas") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "target_build_utils") (r "^0.3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "term") (r "^0.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v5"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "zip") (r "^0.5") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)))) (h "15nmbgrg2dqb0jj9hrqmhm74y79ipmza1khf99vamvzd0pgikqjb")))

(define-public crate-tauri-bundler-0.8.1 (c (n "tauri-bundler") (v "0.8.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.8.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.15.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "handlebars") (r "^3.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "icns") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.23.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libflate") (r "^1.0") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "msi") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "runas") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "target_build_utils") (r "^0.3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "term") (r "^0.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v5"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "zip") (r "^0.5") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)))) (h "1jm7j6v04kz3cs21yhh0ay0dizk7rrdp82b9r5bxglhdpr01lxyf")))

(define-public crate-tauri-bundler-0.8.2 (c (n "tauri-bundler") (v "0.8.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.8.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.15.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "handlebars") (r "^3.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "icns") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.23.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libflate") (r "^1.0") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "msi") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "runas") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "target_build_utils") (r "^0.3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "term") (r "^0.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v5"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "zip") (r "^0.5") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)))) (h "0ncrxf3034j6i9a9cby37sp6iscmc8llpfql6c7il9mhpv2787ny")))

(define-public crate-tauri-bundler-0.8.3 (c (n "tauri-bundler") (v "0.8.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.8.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.15.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "handlebars") (r "^3.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "icns") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.23.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libflate") (r "^1.0") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "msi") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "runas") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "target_build_utils") (r "^0.3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "term") (r "^0.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v5"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "zip") (r "^0.5") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)))) (h "0w8302s5b0cxiq0sq09gq4wk3rjc1asbjs0zgs1ncgmb4js0ikfl")))

(define-public crate-tauri-bundler-0.8.4 (c (n "tauri-bundler") (v "0.8.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.8.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.15.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "handlebars") (r "^3.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "icns") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.23.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libflate") (r "^1.0") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "msi") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "runas") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "target_build_utils") (r "^0.3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "term") (r "^0.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v5"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "zip") (r "^0.5") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)))) (h "1cns250161vg5v33agjpd11qni1vpzw2sj9x5pqb8k13hn956ppz")))

(define-public crate-tauri-bundler-0.8.5 (c (n "tauri-bundler") (v "0.8.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.8.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.15.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "handlebars") (r "^3.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "icns") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.23.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libflate") (r "^1.0") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "msi") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "runas") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "target_build_utils") (r "^0.3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "term") (r "^0.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v5"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "zip") (r "^0.5") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)))) (h "1j6flc6af4w8mx3h9k61iq5a42pjgzanl85l52k0hkmzs4ns2b00")))

(define-public crate-tauri-bundler-0.9.0 (c (n "tauri-bundler") (v "0.9.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.8.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.15.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "handlebars") (r "^3.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "icns") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.23.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libflate") (r "^1.0") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "msi") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "runas") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "target_build_utils") (r "^0.3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "term") (r "^0.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v5"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "zip") (r "^0.5") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)))) (h "0k9gww643rw84rywxn4vbxv5sjmf8p7mdzwvrc6msk104vvmaa2r")))

(define-public crate-tauri-bundler-0.9.1 (c (n "tauri-bundler") (v "0.9.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.8.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.15.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "handlebars") (r "^3.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "icns") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.23.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libflate") (r "^1.0") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "msi") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "runas") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "target_build_utils") (r "^0.3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "term") (r "^0.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v5"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "zip") (r "^0.5") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)))) (h "1kdw6rhrsnrljknzffxgn2ndqzyv39ah3imr54zdbfr5yj9s4hwy")))

(define-public crate-tauri-bundler-0.9.2 (c (n "tauri-bundler") (v "0.9.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.8.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.15.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "handlebars") (r "^3.4") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "icns") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.23.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libflate") (r "^1.0") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "msi") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "runas") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "target_build_utils") (r "^0.3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "term") (r "^0.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v5"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "zip") (r "^0.5") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)))) (h "1vgfjpgx5l877vifx8s4qhh0c4v4cqlngjqwrkg08b2kxhmmnyl0")))

(define-public crate-tauri-bundler-0.9.3 (c (n "tauri-bundler") (v "0.9.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.8.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.15.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "handlebars") (r "^3.4") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "icns") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.23.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libflate") (r "^1.0") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "msi") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "runas") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "target_build_utils") (r "^0.3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "term") (r "^0.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v5"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "zip") (r "^0.5") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)))) (h "1nrsdiv48qaxignqf5l2h7y5hiz7nvyk374s044kdvxh3lknxzrj")))

(define-public crate-tauri-bundler-0.9.4 (c (n "tauri-bundler") (v "0.9.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.8.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.16.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "dirs-next") (r "^1.0.2") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "handlebars") (r "^3.5") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "icns") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.23.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libflate") (r "^1.0") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "msi") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "runas") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "target_build_utils") (r "^0.3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "term") (r "^0.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.7") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v5"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "zip") (r "^0.5") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)))) (h "0dcwqlsg2clrhhzz7fswynfkyc1sgvgsmara5kpjp4m8vq5j1szf")))

(define-public crate-tauri-bundler-1.0.0-beta-rc.0 (c (n "tauri-bundler") (v "1.0.0-beta-rc.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.8.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.17.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "handlebars") (r "^3.5") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "icns") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.23.14") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libflate") (r "^1.0") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "winreg") (r "^0.8") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.5") (d #t) (k 0)))) (h "10v49jqplchq5bnzpc2qj51l0dvrq1xbgkqsjkyfj0zq5g30lily") (y #t)))

(define-public crate-tauri-bundler-1.0.0-beta-rc.1 (c (n "tauri-bundler") (v "1.0.0-beta-rc.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.8.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.17.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "handlebars") (r "^3.5") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "icns") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.23.14") (d #t) (k 0)) (d (n "libflate") (r "^1.1") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (t "cfg(not(target_os = \"linux\"))") (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "winreg") (r "^0.8") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.5") (d #t) (k 0)))) (h "1jzx7ky7qirm527a5znbi6xz20ivb0z8jwvb5dja8mbiqxd4p80x") (y #t)))

(define-public crate-tauri-bundler-1.0.0-beta.0 (c (n "tauri-bundler") (v "1.0.0-beta.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.8.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.17") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "chrono") (r "^0.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "handlebars") (r "^3.5") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "icns") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.23.14") (d #t) (k 0)) (d (n "libflate") (r "^1.1") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "winreg") (r "^0.8") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.5") (d #t) (k 0)))) (h "0nj7fiqfhwjdblzvkcvspm3i815wsq7z06dbc9df4p8lq4y7ij02")))

(define-public crate-tauri-bundler-1.0.0-beta.1 (c (n "tauri-bundler") (v "1.0.0-beta.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.8.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.17") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "chrono") (r "^0.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "handlebars") (r "^4.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "icns") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.23.14") (d #t) (k 0)) (d (n "libflate") (r "^1.1") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "winreg") (r "^0.9") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.5") (d #t) (k 0)))) (h "12iz1yqiyanmmniwbsm5cjyn9cw4mx9g2hzxz115zhmy9gwxrwdr")))

(define-public crate-tauri-bundler-1.0.0-beta.2 (c (n "tauri-bundler") (v "1.0.0-beta.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.8.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.17") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "chrono") (r "^0.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "handlebars") (r "^4.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "icns") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.23.14") (d #t) (k 0)) (d (n "libflate") (r "^1.1") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "winreg") (r "^0.9") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.5") (d #t) (k 0)))) (h "0jbi620bx3ybyx6q1wdi1fr4ycp2gaippamkmla5iyld6z3g8kh0")))

(define-public crate-tauri-bundler-1.0.0-beta.3 (c (n "tauri-bundler") (v "1.0.0-beta.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.8.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.17") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "chrono") (r "^0.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "handlebars") (r "^4.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "icns") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.23.14") (d #t) (k 0)) (d (n "libflate") (r "^1.1") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "winreg") (r "^0.9") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.5") (d #t) (k 0)))) (h "0qajpsxvwhwl2qp4fcbylfwx4dn5p71lmzpmwrfw7ypjljqddi32")))

(define-public crate-tauri-bundler-1.0.0-beta.4 (c (n "tauri-bundler") (v "1.0.0-beta.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.8.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.17") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "chrono") (r "^0.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "handlebars") (r "^4.1") (d #t) (k 0)) (d (n "heck") (r "^0.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "icns") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.23.14") (d #t) (k 0)) (d (n "libflate") (r "^1.1") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "winreg") (r "^0.9") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.5") (d #t) (k 0)))) (h "0dkdp6xj0f2rhhz4770zn5mkr2dcyycm8znaxcb4yypq942k8f3g")))

(define-public crate-tauri-bundler-1.0.0-rc.0 (c (n "tauri-bundler") (v "1.0.0-rc.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.18") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^4.2") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "icns") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.24.0") (d #t) (k 0)) (d (n "libflate") (r "^1.1") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.0-rc.0") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "winreg") (r "^0.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.5") (d #t) (k 0)))) (h "1c4m4mb29n1n4fhz5nyl4vddb0fvs3wri16nwpm35k6r0hirm772") (r "1.57")))

(define-public crate-tauri-bundler-1.0.0-rc.1 (c (n "tauri-bundler") (v "1.0.0-rc.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.18") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^4.2") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "icns") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.24.0") (d #t) (k 0)) (d (n "libflate") (r "^1.1") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.0-rc.1") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "winreg") (r "^0.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.5") (d #t) (k 0)))) (h "1kx37h0j8g0c371idrj8azrg9c400j1pj7f4yfxhk40zfh6b41fs") (r "1.57")))

(define-public crate-tauri-bundler-1.0.0-rc.2 (c (n "tauri-bundler") (v "1.0.0-rc.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.18") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^4.2") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "icns") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.24.0") (d #t) (k 0)) (d (n "libflate") (r "^1.1") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.0-rc.2") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "termcolor") (r "^1.1.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "winreg") (r "^0.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.5") (d #t) (k 0)))) (h "1fib3kbwcwf7blsiqr2ijl4zqh97rfkhjy31kz7jxaxx8khnlk7x") (r "1.57")))

(define-public crate-tauri-bundler-1.0.0-rc.3 (c (n "tauri-bundler") (v "1.0.0-rc.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.18") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^4.2") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "icns") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.24.1") (d #t) (k 0)) (d (n "libflate") (r "^1.1") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.0-rc.3") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "termcolor") (r "^1.1.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "winreg") (r "^0.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.5") (d #t) (k 0)))) (h "0dwys4kaj90lz719p9l60nh13c93xgyh3dbgldvyhy7flfiz0zl0") (r "1.57")))

(define-public crate-tauri-bundler-1.0.0-rc.4 (c (n "tauri-bundler") (v "1.0.0-rc.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.18") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^4.2") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "icns") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.24.1") (d #t) (k 0)) (d (n "libflate") (r "^1.1") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.0-rc.4") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "termcolor") (r "^1.1.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "winreg") (r "^0.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (d #t) (k 0)))) (h "0s17v58g91qsz0b5rycskzb836h12n1b7nz5li0121ql5jar05rw") (r "1.57")))

(define-public crate-tauri-bundler-1.0.0-rc.5 (c (n "tauri-bundler") (v "1.0.0-rc.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.19") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^4.2") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "icns") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.24.1") (d #t) (k 0)) (d (n "libflate") (r "^1.2") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.0-rc.5") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "termcolor") (r "^1.1.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "winreg") (r "^0.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (d #t) (k 0)))) (h "0hb8sk9c06cxiimgjiqalczddl6h95vqi5ifqa6qli0pxq9a1bxa") (r "1.57")))

(define-public crate-tauri-bundler-1.0.0-rc.6 (c (n "tauri-bundler") (v "1.0.0-rc.6") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "attohttpc") (r "^0.19") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^4.2") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "icns") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.24.2") (d #t) (k 0)) (d (n "libflate") (r "^1.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.0-rc.6") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "winreg") (r "^0.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0rzbvl0d934pki9qw1bsm0k0maj0v43xckkdf1gmrx8lhz5xd64k") (r "1.57")))

(define-public crate-tauri-bundler-1.0.0-rc.7 (c (n "tauri-bundler") (v "1.0.0-rc.7") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "attohttpc") (r "^0.19") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^4.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "icns") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.24.2") (d #t) (k 0)) (d (n "libflate") (r "^1.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.0-rc.7") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "winreg") (r "^0.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "17h3cbg20xnyw5drj8c4msl6zpz8hli7k3vrarvra2kfvi4fnpw3") (r "1.57")))

(define-public crate-tauri-bundler-1.0.0-rc.8 (c (n "tauri-bundler") (v "1.0.0-rc.8") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "attohttpc") (r "^0.19") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^4.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "icns") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.24.2") (d #t) (k 0)) (d (n "libflate") (r "^1.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.0-rc.7") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "winreg") (r "^0.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1k8yrwz79d9k58rd406cnfvm8zzhiq4kb8hky0pg3g8yvfxmr8cd") (r "1.57")))

(define-public crate-tauri-bundler-1.0.0-rc.9 (c (n "tauri-bundler") (v "1.0.0-rc.9") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "attohttpc") (r "^0.19") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^4.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "icns") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.24.2") (d #t) (k 0)) (d (n "libflate") (r "^1.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.0-rc.8") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "winreg") (r "^0.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "10jndcvfkzax65jmbrdqqnm8spyc0lg5x7v2nx7lc2z4w2nmm4y2") (r "1.57")))

(define-public crate-tauri-bundler-1.0.0-rc.10 (c (n "tauri-bundler") (v "1.0.0-rc.10") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "attohttpc") (r "^0.19") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^4.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "icns") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.24.2") (d #t) (k 0)) (d (n "libflate") (r "^1.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.0-rc.9") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "winreg") (r "^0.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "021plsnwx4hjzhhdds22z94zyjbs2yvjh4s3ni3n8vgjfwmbrixx") (r "1.57")))

(define-public crate-tauri-bundler-1.0.0 (c (n "tauri-bundler") (v "1.0.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "attohttpc") (r "^0.19") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^4.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "icns") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.24.2") (d #t) (k 0)) (d (n "libflate") (r "^1.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.0") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "winreg") (r "^0.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0i5xwmbvk32az43mb26jdym0r24mfmvh3za670r2dd32drk3vy4i") (r "1.57")))

(define-public crate-tauri-bundler-1.0.1 (c (n "tauri-bundler") (v "1.0.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "attohttpc") (r "^0.19") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^4.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "icns") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.24.2") (d #t) (k 0)) (d (n "libflate") (r "^1.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "semver") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.1") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "winreg") (r "^0.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1zsqfky1sa4dfl5xrn50a2as2b851d3dsc9h2gr7fq6p1w96czha") (r "1.57")))

(define-public crate-tauri-bundler-1.0.2 (c (n "tauri-bundler") (v "1.0.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "attohttpc") (r "^0.19") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^4.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "icns") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.24.2") (d #t) (k 0)) (d (n "libflate") (r "^1.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "semver") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.2") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "winreg") (r "^0.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1nr3f8yrbdhdp6636i4c90s5x95jwy64qskbjxr5p2is6y3rc90q") (r "1.57")))

(define-public crate-tauri-bundler-1.0.3 (c (n "tauri-bundler") (v "1.0.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "attohttpc") (r "^0.19") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^4.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "icns") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.24.2") (d #t) (k 0)) (d (n "libflate") (r "^1.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "semver") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.3") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "winreg") (r "^0.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1vfm95adxm0k68kl24kc7wld4qq4ymyxbganb7apa4yx0jmqg9h4") (r "1.57")))

(define-public crate-tauri-bundler-1.0.4 (c (n "tauri-bundler") (v "1.0.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "attohttpc") (r "^0.19") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^4.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "icns") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.24.2") (d #t) (k 0)) (d (n "libflate") (r "^1.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "semver") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.3") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "winreg") (r "^0.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0qraxlqg2wdfdmymbspnw27vblbj7xfyhmppm6zzbwjbr8d4sx0m") (r "1.57")))

(define-public crate-tauri-bundler-1.0.5 (c (n "tauri-bundler") (v "1.0.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "attohttpc") (r "^0.19") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^4.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "icns") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.24.2") (d #t) (k 0)) (d (n "libflate") (r "^1.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "semver") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.3") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "winreg") (r "^0.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0wdrml34ln9af8p7dv668i616ylm5r9b1rgf7d6ws0p2ki9fsjjx") (r "1.57")))

(define-public crate-tauri-bundler-1.0.6 (c (n "tauri-bundler") (v "1.0.6") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "attohttpc") (r "^0.22") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^4.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.3") (d #t) (k 0)) (d (n "libflate") (r "^1.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "semver") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-utils") (r "^1.1.0") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "winreg") (r "^0.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1icw4mvhc95zyba29aij70vv2k2hrp87m4s2h7nw232yqdm5a140") (r "1.57")))

(define-public crate-tauri-bundler-1.0.7 (c (n "tauri-bundler") (v "1.0.7") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "attohttpc") (r "^0.22") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^4.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.3") (d #t) (k 0)) (d (n "libflate") (r "^1.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "semver") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-utils") (r "^1.1.1") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "winreg") (r "^0.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1hxkzsygsc7s3860qghgdv6ncii4lljihbly7l0qmvkb9s45ag0v") (r "1.57")))

(define-public crate-tauri-bundler-1.1.0 (c (n "tauri-bundler") (v "1.1.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "attohttpc") (r "^0.23") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^4.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.4") (d #t) (k 0)) (d (n "libflate") (r "^1.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "semver") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-utils") (r "^1.2.0") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "winreg") (r "^0.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "18sxmwpwbsjaw3s5gh2px46qmwi0ls7xyy8q2rr6hgnd8mxizh3i") (r "1.59")))

(define-public crate-tauri-bundler-1.1.1 (c (n "tauri-bundler") (v "1.1.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "attohttpc") (r "^0.24") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^4.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.4") (d #t) (k 0)) (d (n "libflate") (r "^1.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "semver") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-utils") (r "^1.2.1") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "winreg") (r "^0.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1bn1j3j2nsgm8z044lk3jwcgr9a4q7h2ywlp6806bb9gw9ihzv08") (r "1.59")))

(define-public crate-tauri-bundler-1.1.2 (c (n "tauri-bundler") (v "1.1.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "attohttpc") (r "^0.24") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^4.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.5") (d #t) (k 0)) (d (n "libflate") (r "^1.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "semver") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-utils") (r "^1.2.1") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "winreg") (r "^0.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "07vffdxj15alds2xsj3k0gh016zdi2i11630ky4iy6rrw07621jy") (r "1.59")))

(define-public crate-tauri-bundler-2.0.0-alpha.0 (c (n "tauri-bundler") (v "2.0.0-alpha.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "attohttpc") (r "^0.24") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^4.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.5") (d #t) (k 0)) (d (n "libflate") (r "^1.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "semver") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-alpha.0") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "winreg") (r "^0.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1bd2hmbgwphxdjpk8qbynmw025asz558ibnj4ls9lxisklq0mbpd") (r "1.59")))

(define-public crate-tauri-bundler-2.0.0-alpha.1 (c (n "tauri-bundler") (v "2.0.0-alpha.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "attohttpc") (r "^0.24") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^4.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.5") (d #t) (k 0)) (d (n "libflate") (r "^1.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "semver") (r "^1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-alpha.1") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "winreg") (r "^0.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0ad5hbqk4d3mppc88ynhmryrjz45dizdfh6cprd5vpn0vdhg68x3") (r "1.64")))

(define-public crate-tauri-bundler-2.0.0-alpha.2 (c (n "tauri-bundler") (v "2.0.0-alpha.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "attohttpc") (r "^0.24") (d #t) (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^4.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.5") (d #t) (k 0)) (d (n "libflate") (r "^1.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-alpha.2") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "winreg") (r "^0.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (d #t) (k 0)))) (h "04hjfdvnw1c95gsvmdcnpwxy90zbv9z62c2na5cdqc6spkkvlcxj") (r "1.64")))

(define-public crate-tauri-bundler-2.0.0-alpha.3 (c (n "tauri-bundler") (v "2.0.0-alpha.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^4.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.5") (d #t) (k 0)) (d (n "libflate") (r "^1.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-alpha.3") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ureq") (r "^2.5") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "winreg") (r "^0.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (d #t) (k 0)))) (h "12m5y6z7ganc0akynn9z32alm1dxm656zhc56cxfh46wk5w3hbpr") (r "1.64")))

(define-public crate-tauri-bundler-2.0.0-alpha.4 (c (n "tauri-bundler") (v "2.0.0-alpha.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^4.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.5") (d #t) (k 0)) (d (n "libflate") (r "^1.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-alpha.4") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ureq") (r "^2.5") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "winreg") (r "^0.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (d #t) (k 0)))) (h "12dv9hrsqhxjnjwikzgnsf3nxikpbpy4bnn1b12vv7mv07n9c7ix") (r "1.64")))

(define-public crate-tauri-bundler-1.2.0 (c (n "tauri-bundler") (v "1.2.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "attohttpc") (r "^0.24") (d #t) (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^4.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.6") (d #t) (k 0)) (d (n "libflate") (r "^1.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-utils") (r "^1.3.0") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "winreg") (r "^0.50") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (d #t) (k 0)))) (h "0kf3sj0545hxsbzid58d0c4m2jsdx7pn4xkh1m2ys663dxikrfgs") (r "1.60")))

(define-public crate-tauri-bundler-1.2.1 (c (n "tauri-bundler") (v "1.2.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "attohttpc") (r "^0.24") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^4.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.6") (d #t) (k 0)) (d (n "libflate") (r "^1.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-utils") (r "^1.3.0") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "winreg") (r "^0.50") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (d #t) (k 0)))) (h "0181r0yr9q74khhm5sdw3vk77bxs1bax7ban89n0i3iq5iavh067") (f (quote (("rustls" "attohttpc/rustls") ("native-tls-vendored" "attohttpc/tls-native-vendored") ("default" "attohttpc/default")))) (r "1.60")))

(define-public crate-tauri-bundler-2.0.0-alpha.5 (c (n "tauri-bundler") (v "2.0.0-alpha.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^4.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.6") (d #t) (k 0)) (d (n "libflate") (r "^1.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-alpha.5") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ureq") (r "^2.5") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "winreg") (r "^0.50") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (d #t) (k 0)))) (h "1ggmdj95dl3ifi308wfbfrxj53hfh8l8bylw6rhna72ry8hy61bm") (r "1.65")))

(define-public crate-tauri-bundler-1.3.0 (c (n "tauri-bundler") (v "1.3.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^4.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.6") (d #t) (k 0)) (d (n "libflate") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4.19") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-utils") (r "^1.4.0") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.6.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ureq") (r "^2.6") (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "winreg") (r "^0.50") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (d #t) (k 0)))) (h "00wzg9r68lqg6bdj1bbgdc7sax4rgcqp2s0w9c3n8cf1b4hjbq90") (f (quote (("rustls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "rustls")))) (r "1.60")))

(define-public crate-tauri-bundler-2.0.0-alpha.6 (c (n "tauri-bundler") (v "2.0.0-alpha.6") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^4.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.6") (d #t) (k 0)) (d (n "libflate") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4.19") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-alpha.6") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.6.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ureq") (r "^2.6") (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "winreg") (r "^0.50") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (k 0)))) (h "061dih3gwnfcsayybnbcx6mz4ngmr58kmdr4vclrlvhpzc0c7agy") (f (quote (("rustls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "rustls")))) (r "1.65")))

(define-public crate-tauri-bundler-2.0.0-alpha.7 (c (n "tauri-bundler") (v "2.0.0-alpha.7") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^4.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.7") (d #t) (k 0)) (d (n "libflate") (r "^2.0") (d #t) (k 0)) (d (n "log") (r "^0.4.19") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.40") (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-alpha.7") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.7.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ureq") (r "^2.7") (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "winreg") (r "^0.50") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 0)))) (h "1k98z1whjykwrf6bwg861l2l0xby7zlj9aqcjhxzgz4xmp8q9s05") (f (quote (("rustls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "rustls")))) (r "1.65")))

(define-public crate-tauri-bundler-2.0.0-alpha.8 (c (n "tauri-bundler") (v "2.0.0-alpha.8") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^4.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.7") (d #t) (k 0)) (d (n "libflate") (r "^2.0") (d #t) (k 0)) (d (n "log") (r "^0.4.19") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.40") (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-alpha.7") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.7.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ureq") (r "^2.7") (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "winreg") (r "^0.50") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 0)))) (h "0gpz42q66lxjk0hgbm6wb9dpf6ccfyjs4h4dac3g7117x12x9llr") (f (quote (("rustls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "rustls")))) (r "1.65")))

(define-public crate-tauri-bundler-1.4.0 (c (n "tauri-bundler") (v "1.4.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^4.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.6") (d #t) (k 0)) (d (n "libflate") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4.19") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-utils") (r "^1.5.0") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.6.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ureq") (r "^2.6") (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_System_SystemInformation" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "^0.50") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (d #t) (k 0)))) (h "0xhqnpjrlqdscbpydmv4g15878phjlmk4f0hzjlqwscgl1f9622c") (f (quote (("rustls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "rustls")))) (r "1.60")))

(define-public crate-tauri-bundler-2.0.0-alpha.9 (c (n "tauri-bundler") (v "2.0.0-alpha.9") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^4.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.7") (d #t) (k 0)) (d (n "libflate") (r "^2.0") (d #t) (k 0)) (d (n "log") (r "^0.4.19") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.40") (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-alpha.8") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.7.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ureq") (r "^2.7") (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "winreg") (r "^0.50") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 0)))) (h "0hbk8hkxprmz8gmp9j43516da9rvdfqimhqh7wpfq356waaxcb2v") (f (quote (("rustls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "rustls")))) (r "1.65")))

(define-public crate-tauri-bundler-1.4.1 (c (n "tauri-bundler") (v "1.4.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^4.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.6") (d #t) (k 0)) (d (n "libflate") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4.19") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-utils") (r "^1.5.0") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.6.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ureq") (r "^2.6") (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_System_SystemInformation" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "^0.50") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (d #t) (k 0)))) (h "0rxq54f7hskwifh6x91fq372khlxn0hnxsli7kix98ldl0b2hss9") (f (quote (("rustls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "rustls")))) (r "1.60")))

(define-public crate-tauri-bundler-1.4.2 (c (n "tauri-bundler") (v "1.4.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^4.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.6") (d #t) (k 0)) (d (n "libflate") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4.19") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-utils") (r "^1.5.0") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.6.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ureq") (r "^2.6") (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_System_SystemInformation" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "^0.50") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (d #t) (k 0)))) (h "16c7b554zvcxpqim3pzaywngn5gj046mpvqhsyfpajzcv39cmcw9") (f (quote (("rustls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "rustls")))) (r "1.60")))

(define-public crate-tauri-bundler-1.4.3 (c (n "tauri-bundler") (v "1.4.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^4.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.6") (d #t) (k 0)) (d (n "libflate") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4.19") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-utils") (r "^1.5.0") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.6.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ureq") (r "^2.6") (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_System_SystemInformation" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "^0.50") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (d #t) (k 0)))) (h "1cm8gxj7bzc5zggf20ifmnjchih0qd6vpp31sznax70p07sjxlyj") (f (quote (("rustls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "rustls")))) (r "1.60")))

(define-public crate-tauri-bundler-2.0.0-alpha.10 (c (n "tauri-bundler") (v "2.0.0-alpha.10") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^4.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.7") (d #t) (k 0)) (d (n "libflate") (r "^2.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.40") (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-alpha.9") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.7.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ureq") (r "^2.7") (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "winreg") (r "^0.50") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 0)))) (h "1llh1r81nxsdbdxsig8j98mw138ba4ijgpwcmxk88gjj7yr1j1bw") (f (quote (("rustls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "rustls")))) (r "1.70")))

(define-public crate-tauri-bundler-1.4.4 (c (n "tauri-bundler") (v "1.4.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^4.4") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.7") (d #t) (k 0)) (d (n "libflate") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.40") (d #t) (k 0)) (d (n "tauri-utils") (r "^1.5.0") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ureq") (r "^2.8") (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_System_SystemInformation" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "^0.51") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (d #t) (k 0)))) (h "15kmis7y6vh875b4hqvwv5vflb36zg72a1hlhr1a4ivhmj8gppsg") (f (quote (("rustls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "rustls")))) (r "1.60")))

(define-public crate-tauri-bundler-1.4.5 (c (n "tauri-bundler") (v "1.4.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^4.4") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.7") (d #t) (k 0)) (d (n "libflate") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.40") (d #t) (k 0)) (d (n "tauri-utils") (r "^1.5.0") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ureq") (r "^2.8") (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_System_SystemInformation" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "^0.51") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (d #t) (k 0)))) (h "1cy0k0h9c0dhyrw68c3cirm1w49hhm0kah871l2fqwify5bpmj1h") (f (quote (("rustls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "rustls")))) (r "1.60")))

(define-public crate-tauri-bundler-2.0.0-alpha.11 (c (n "tauri-bundler") (v "2.0.0-alpha.11") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^4.4") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.7") (d #t) (k 0)) (d (n "libflate") (r "^2.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.40") (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-alpha.10") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ureq") (r "^2.8") (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_System_SystemInformation" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "^0.51") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 0)))) (h "11lmjj0d3gwg27glz8w1kdcyqc6pd6946i7g1f1pmk6gdi0qw4dv") (f (quote (("rustls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "rustls")))) (r "1.70")))

(define-public crate-tauri-bundler-2.0.0-alpha.12 (c (n "tauri-bundler") (v "2.0.0-alpha.12") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^4.4") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.7") (d #t) (k 0)) (d (n "libflate") (r "^2.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.40") (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-alpha.11") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.8.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ureq") (r "^2.8") (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_System_SystemInformation" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "^0.51") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 0)))) (h "0yacjbawpmxsp2gb6wsvg70mdm0njjkl0sg9ayhhmjvlzzcpb0p7") (f (quote (("rustls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "rustls")))) (r "1.70")))

(define-public crate-tauri-bundler-1.4.6 (c (n "tauri-bundler") (v "1.4.6") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^4.5") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.7") (d #t) (k 0)) (d (n "libflate") (r "^2.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.40") (d #t) (k 0)) (d (n "tauri-utils") (r "^1.5.0") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.8.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ureq") (r "^2.8") (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_System_SystemInformation" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "^0.51") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (d #t) (k 0)))) (h "1k93nxsc5ndamfj3p4r8w49w4h64r1bysa1y1h0jnwbl9lq8zb8x") (f (quote (("rustls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "rustls")))) (r "1.60")))

(define-public crate-tauri-bundler-1.4.7 (c (n "tauri-bundler") (v "1.4.7") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^4.5") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.7") (d #t) (k 0)) (d (n "libflate") (r "^2.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.40") (d #t) (k 0)) (d (n "tauri-utils") (r "^1.5.0") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.8.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ureq") (r "^2.8") (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_System_SystemInformation" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "^0.51") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (d #t) (k 0)))) (h "1kzlfawkjz8cfs48irwlxpssyllnmchk00alapkpwc833q69yx9x") (f (quote (("rustls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "rustls")))) (r "1.60")))

(define-public crate-tauri-bundler-2.0.0-alpha.13 (c (n "tauri-bundler") (v "2.0.0-alpha.13") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^4.4") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.7") (d #t) (k 0)) (d (n "libflate") (r "^2.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.40") (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-alpha.12") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.8.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ureq") (r "^2.8") (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_System_SystemInformation" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "^0.51") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 0)))) (h "1yq28rqyrc91w9sfmqdvap0sma4j2sg2rqyydkz6nwf4r935l94b") (f (quote (("rustls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "rustls")))) (r "1.70")))

(define-public crate-tauri-bundler-1.4.8 (c (n "tauri-bundler") (v "1.4.8") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^4.5") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.7") (d #t) (k 0)) (d (n "libflate") (r "^2.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.40") (d #t) (k 0)) (d (n "tauri-utils") (r "^1.5.2") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.8.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ureq") (r "^2.8") (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_System_SystemInformation" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "^0.51") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (d #t) (k 0)))) (h "1d203ylb55w9zfmgcfjcyplhlynp5x89f47m87pkcj0cscq3jsgl") (f (quote (("rustls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "rustls")))) (r "1.60")))

(define-public crate-tauri-bundler-2.0.0-alpha.14 (c (n "tauri-bundler") (v "2.0.0-alpha.14") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^5.0") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.7") (d #t) (k 0)) (d (n "libflate") (r "^2.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "rpm") (r "^0.13.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.40") (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-alpha.13") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.8.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ureq") (r "^2.8") (f (quote ("socks-proxy"))) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_System_SystemInformation" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "^0.51") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 0)))) (h "1c1cign1xzzf907hpc19jcj67nk13w7yxpk62myk3if73wpx8i8d") (f (quote (("rustls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "rustls")))) (r "1.70")))

(define-public crate-tauri-bundler-2.0.0-beta.0 (c (n "tauri-bundler") (v "2.0.0-beta.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^5.0") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.7") (d #t) (k 0)) (d (n "libflate") (r "^2.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "rpm") (r "^0.13.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.40") (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.0") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.8.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ureq") (r "^2.8") (f (quote ("socks-proxy"))) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_System_SystemInformation" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "^0.51") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 0)))) (h "042rc8j6llvsq2q4lrp395fcyb6h878i7agyj7gqr5hjjh48pj94") (f (quote (("rustls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "rustls")))) (r "1.70")))

(define-public crate-tauri-bundler-2.0.0-beta.1 (c (n "tauri-bundler") (v "2.0.0-beta.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^5.0") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.7") (d #t) (k 0)) (d (n "libflate") (r "^2.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "rpm") (r "^0.13.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.40") (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.1") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.8.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ureq") (r "^2.8") (f (quote ("socks-proxy"))) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_System_SystemInformation" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "^0.51") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 0)))) (h "1hxjkarxsnqdxzy3azgjy0sr99xbcdj223672f2z3b85p7i8p3r4") (f (quote (("rustls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "rustls")))) (r "1.70")))

(define-public crate-tauri-bundler-1.5.0 (c (n "tauri-bundler") (v "1.5.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^4.5") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.7") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.40") (d #t) (k 0)) (d (n "tauri-utils") (r "^1.5.2") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.8.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ureq") (r "^2.9.1") (f (quote ("socks-proxy"))) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_System_SystemInformation" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "^0.51") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (d #t) (k 0)))) (h "0amx9kp1ly9asi6ccgi3d4rzpd2fmgcjl06dhfa2cn564ff75hfy") (f (quote (("rustls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "rustls")))) (r "1.60")))

(define-public crate-tauri-bundler-2.0.0-beta.2 (c (n "tauri-bundler") (v "2.0.0-beta.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^5.0") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.7") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "rpm") (r "^0.13.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.40") (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.2") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.8.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ureq") (r "^2.9.1") (f (quote ("socks-proxy"))) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_System_SystemInformation" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "^0.51") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 0)))) (h "179d16bvzwsqcqszjqvwjnw67580ybfmgc44fi7qna3c5z9n9yib") (f (quote (("rustls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "rustls")))) (r "1.70")))

(define-public crate-tauri-bundler-2.0.0-beta.3 (c (n "tauri-bundler") (v "2.0.0-beta.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^5.0") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.7") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "rpm") (r "^0.13.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.40") (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.3") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.8.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ureq") (r "^2.9.1") (f (quote ("socks-proxy"))) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_System_SystemInformation" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "^0.51") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 0)))) (h "0hp5cwmb80vx481cg5i2mdi2j0q9hqfhch2i1wvjhy1spmz74g9c") (f (quote (("rustls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "rustls")))) (r "1.70")))

(define-public crate-tauri-bundler-2.0.1-beta.0 (c (n "tauri-bundler") (v "2.0.1-beta.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^5.0") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.7") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "rpm") (r "^0.13.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.40") (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.4") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.8.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ureq") (r "^2.9.1") (f (quote ("socks-proxy"))) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_System_SystemInformation" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "^0.51") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 0)))) (h "18cqim8xyvj9mxma2i97fiyg894nr37kn7rg55m0a4v1aifivm8x") (f (quote (("rustls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "rustls")))) (r "1.70")))

(define-public crate-tauri-bundler-2.0.1-beta.1 (c (n "tauri-bundler") (v "2.0.1-beta.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^5.0") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.7") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "rpm") (r "^0.13.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.40") (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.5") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.8.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ureq") (r "^2.9.1") (f (quote ("socks-proxy"))) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_System_SystemInformation" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "^0.51") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 0)))) (h "023ji35qdc5v2v24fcr8qqp5b3nphdgbbvxxxxzqxg8i49xhdf6x") (f (quote (("rustls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "rustls")))) (r "1.70")))

(define-public crate-tauri-bundler-2.0.1-beta.2 (c (n "tauri-bundler") (v "2.0.1-beta.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^5.0") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.7") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (f (quote ("kv_unstable"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "rpm") (r "^0.13.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.40") (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.6") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.8.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ureq") (r "^2.9.1") (f (quote ("socks-proxy"))) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_System_SystemInformation" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "^0.51") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 0)))) (h "1qh90iv2fmva7q3rpawhvlk8qzcv58mvh7s4rjvmd0pr5vbgnlrb") (f (quote (("rustls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "rustls")))) (r "1.70")))

(define-public crate-tauri-bundler-2.0.1-beta.3 (c (n "tauri-bundler") (v "2.0.1-beta.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^5.1") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.9") (d #t) (k 0)) (d (n "log") (r "^0.4.21") (f (quote ("kv"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "rpm") (r "^0.13.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.11.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.40") (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.7") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ureq") (r "^2.9.6") (f (quote ("socks-proxy"))) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.52") (f (quote ("Win32_System_SystemInformation" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "^0.52") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 0)))) (h "1a8nb80arjdzvajdzankf2xmiq4rwq721v9fss123wikcg78sfii") (f (quote (("rustls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "rustls")))) (r "1.70")))

(define-public crate-tauri-bundler-1.5.1 (c (n "tauri-bundler") (v "1.5.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^4.5") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.7") (d #t) (k 0)) (d (n "log") (r "^0.4.21") (f (quote ("kv"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.40") (d #t) (k 0)) (d (n "tauri-utils") (r "^1.5.3") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.8.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ureq") (r "^2.9.1") (f (quote ("socks-proxy"))) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_System_SystemInformation" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "^0.51") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (d #t) (k 0)))) (h "012fq4sqcdpxha7x121km30kvqnf0dgxg6qha7p7h2c25q5hszb5") (f (quote (("rustls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "rustls")))) (r "1.60")))

(define-public crate-tauri-bundler-2.0.1-beta.4 (c (n "tauri-bundler") (v "2.0.1-beta.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^5.1") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.9") (d #t) (k 0)) (d (n "log") (r "^0.4.21") (f (quote ("kv"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "rpm") (r "^0.14.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.11.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.40") (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.8") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ureq") (r "^2.9.6") (f (quote ("socks-proxy"))) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.52") (f (quote ("Win32_System_SystemInformation" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "^0.52") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 0)))) (h "1bjnpk32zxbvrinkpvjcnbdwin1igsv7b753h458nn5fy9r7ph54") (f (quote (("rustls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "rustls")))) (r "1.70")))

(define-public crate-tauri-bundler-2.0.1-beta.5 (c (n "tauri-bundler") (v "2.0.1-beta.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^5.1") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.9") (d #t) (k 0)) (d (n "log") (r "^0.4.21") (f (quote ("kv"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "rpm") (r "^0.14.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.11.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.40") (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.9") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ureq") (r "^2.9.6") (f (quote ("socks-proxy"))) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.52") (f (quote ("Win32_System_SystemInformation" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "^0.52") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 0)))) (h "15v12y2gpsv9cpw72bizjirfxfn88vn0pk1bn1y2r70bvkgx5q87") (f (quote (("rustls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "rustls")))) (r "1.70")))

(define-public crate-tauri-bundler-2.0.1-beta.6 (c (n "tauri-bundler") (v "2.0.1-beta.6") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^5.1") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.9") (d #t) (k 0)) (d (n "log") (r "^0.4.21") (f (quote ("kv"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "rpm") (r "^0.14.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.11.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.40") (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.10") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ureq") (r "^2.9.6") (f (quote ("socks-proxy"))) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.52") (f (quote ("Win32_System_SystemInformation" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "^0.52") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 0)))) (h "0w80s0qll52s50hncsvas724ay8mamjmyccfhgxaa67f6p93jw9i") (f (quote (("rustls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "rustls")))) (r "1.70")))

(define-public crate-tauri-bundler-2.0.1-beta.7 (c (n "tauri-bundler") (v "2.0.1-beta.7") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^5.1") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.9") (d #t) (k 0)) (d (n "log") (r "^0.4.21") (f (quote ("kv"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "rpm") (r "^0.14.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.11.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.40") (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.10") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ureq") (r "^2.9.6") (f (quote ("socks-proxy"))) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.52") (f (quote ("Win32_System_SystemInformation" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "^0.52") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 0)))) (h "16c2jdyrw7m2dg1qy4n0xhdc1hik8iny0f062if0f9w0qzcryby2") (f (quote (("rustls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "rustls")))) (r "1.70")))

(define-public crate-tauri-bundler-2.0.1-beta.8 (c (n "tauri-bundler") (v "2.0.1-beta.8") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^5.1") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.9") (d #t) (k 0)) (d (n "log") (r "^0.4.21") (f (quote ("kv"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "rpm") (r "^0.14.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.11.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.40") (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.11") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ureq") (r "^2.9.6") (f (quote ("socks-proxy"))) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.52") (f (quote ("Win32_System_SystemInformation" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "^0.52") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 0)))) (h "0fmncq0aq357455d0r7f5chr6d43nh6db2r0jksbk4gdc9i2q01n") (f (quote (("rustls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "rustls")))) (r "1.70")))

(define-public crate-tauri-bundler-2.0.1-beta.9 (c (n "tauri-bundler") (v "2.0.1-beta.9") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^5.1") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.9") (d #t) (k 0)) (d (n "log") (r "^0.4.21") (f (quote ("kv"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "rpm") (r "^0.14.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.11.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.40") (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.12") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ureq") (r "^2.9.6") (f (quote ("socks-proxy"))) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.52") (f (quote ("Win32_System_SystemInformation" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "^0.52") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 0)))) (h "1g3jk52sqgx8j5c24xi7faa0wrb5abi6s56ss8p79mbwhajk26yb") (f (quote (("rustls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "rustls")))) (r "1.70")))

(define-public crate-tauri-bundler-1.5.2 (c (n "tauri-bundler") (v "1.5.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^4.5") (d #t) (k 0)) (d (n "heck") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.7") (d #t) (k 0)) (d (n "log") (r "^0.4.21") (f (quote ("kv"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.40") (d #t) (k 0)) (d (n "tauri-utils") (r "^1.5.3") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.8.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ureq") (r "^2.9.1") (f (quote ("socks-proxy"))) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_System_SystemInformation" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "^0.51") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (d #t) (k 0)))) (h "0sdfkihzvvkd2yhhnn2b0lwvfjkpl2p92k50y2mzhwf2h7na97s7") (f (quote (("rustls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "rustls")))) (r "1.60")))

(define-public crate-tauri-bundler-2.0.1-beta.10 (c (n "tauri-bundler") (v "2.0.1-beta.10") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^5.1") (d #t) (k 0)) (d (n "heck") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.9") (d #t) (k 0)) (d (n "log") (r "^0.4.21") (f (quote ("kv"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "rpm") (r "^0.14.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.11.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.40") (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.13") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ureq") (r "^2.9.6") (f (quote ("socks-proxy"))) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.52") (f (quote ("Win32_System_SystemInformation" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "^0.52") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 0)))) (h "1pm1q5lvwlwc1733c7ylg64ijjfsd8bzkcs9fd66vrdvf9zbra0w") (f (quote (("rustls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "rustls")))) (r "1.70")))

(define-public crate-tauri-bundler-2.0.1-beta.11 (c (n "tauri-bundler") (v "2.0.1-beta.11") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^5.1") (d #t) (k 0)) (d (n "heck") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.9") (d #t) (k 0)) (d (n "log") (r "^0.4.21") (f (quote ("kv"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "rpm") (r "^0.14.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.11.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.40") (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.13") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ureq") (r "^2.9.6") (f (quote ("socks-proxy"))) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.52") (f (quote ("Win32_System_SystemInformation" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "^0.52") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 0)))) (h "089drh029jmgsw4xhffg6qdydw6ngjqpbzx8wpkl8r0mmb5852rm") (f (quote (("rustls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "rustls")))) (r "1.70")))

(define-public crate-tauri-bundler-1.5.3 (c (n "tauri-bundler") (v "1.5.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^4.5") (d #t) (k 0)) (d (n "heck") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.7") (d #t) (k 0)) (d (n "log") (r "^0.4.21") (f (quote ("kv"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.40") (d #t) (k 0)) (d (n "tauri-utils") (r "^1.5.4") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.8.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ureq") (r "^2.9.1") (f (quote ("socks-proxy"))) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_System_SystemInformation" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "^0.51") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (d #t) (k 0)))) (h "10pa60iv0b6bxfasqjkr55xv93zabidqqdna9x2b1wxmagciapnq") (f (quote (("rustls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "rustls")))) (r "1.60")))

(define-public crate-tauri-bundler-2.0.1-beta.12 (c (n "tauri-bundler") (v "2.0.1-beta.12") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^5.1") (d #t) (k 0)) (d (n "heck") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.9") (d #t) (k 0)) (d (n "log") (r "^0.4.21") (f (quote ("kv"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "rpm") (r "^0.14.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.11.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.40") (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.14") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ureq") (r "^2.9.6") (f (quote ("socks-proxy"))) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.52") (f (quote ("Win32_System_SystemInformation" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "^0.52") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 0)))) (h "1xvg49p9xlmkhb5gn67kja58m50zys8wjx59m0nyn3xg6b3li7ra") (f (quote (("rustls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "rustls")))) (r "1.70")))

(define-public crate-tauri-bundler-2.0.1-beta.13 (c (n "tauri-bundler") (v "2.0.1-beta.13") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^5.1") (d #t) (k 0)) (d (n "heck") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.9") (d #t) (k 0)) (d (n "log") (r "^0.4.21") (f (quote ("kv"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "rpm") (r "^0.14.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.11.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.40") (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.15") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ureq") (r "^2.9.6") (f (quote ("socks-proxy"))) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.52") (f (quote ("Win32_System_SystemInformation" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "^0.52") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 0)))) (h "15vza6yygpz0h24inp1awkv4gbyzm16fdy1dvsfq97k7cdww9slb") (f (quote (("rustls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "rustls")))) (r "1.70")))

(define-public crate-tauri-bundler-1.5.4 (c (n "tauri-bundler") (v "1.5.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^4.5") (d #t) (k 0)) (d (n "heck") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.7") (d #t) (k 0)) (d (n "log") (r "^0.4.21") (f (quote ("kv"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.40") (d #t) (k 0)) (d (n "tauri-utils") (r "^1.5.4") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.8.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ureq") (r "^2.9.1") (f (quote ("socks-proxy"))) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_System_SystemInformation" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "^0.51") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (d #t) (k 0)))) (h "0bx4w3d61ngnb6y47f41wlsfxckhk3nwvmawj102xa19rqa29lip") (f (quote (("rustls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "rustls")))) (r "1.60")))

(define-public crate-tauri-bundler-2.0.1-beta.14 (c (n "tauri-bundler") (v "2.0.1-beta.14") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^5.1") (d #t) (k 0)) (d (n "heck") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.9") (d #t) (k 0)) (d (n "log") (r "^0.4.21") (f (quote ("kv"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "rpm") (r "^0.14.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.11.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.40") (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.16") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ureq") (r "^2.9.6") (f (quote ("socks-proxy"))) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.52") (f (quote ("Win32_System_SystemInformation" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "^0.52") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 0)))) (h "1p7ail4i1sx7ipj18yxdf9avmmkc07zn2diqnn1hm6p3ks0jfp2m") (f (quote (("rustls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "rustls")))) (r "1.70")))

(define-public crate-tauri-bundler-2.0.1-beta.15 (c (n "tauri-bundler") (v "2.0.1-beta.15") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^5.1") (d #t) (k 0)) (d (n "heck") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.9") (d #t) (k 0)) (d (n "log") (r "^0.4.21") (f (quote ("kv"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "rpm") (r "^0.14.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.11.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.40") (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.17") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ureq") (r "^2.9.6") (f (quote ("socks-proxy"))) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "windows-registry") (r "^0.1.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-sys") (r "^0.52") (f (quote ("Win32_System_SystemInformation" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 0)))) (h "0yx9cgrfinbbm04ah2j1vacjd6dhgh81s51dgi9gzl8gnfd62fi7") (f (quote (("rustls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "rustls")))) (r "1.70")))

(define-public crate-tauri-bundler-2.0.1-beta.16 (c (n "tauri-bundler") (v "2.0.1-beta.16") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ar") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "bitness") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "handlebars") (r "^5.1") (d #t) (k 0)) (d (n "heck") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24.9") (d #t) (k 0)) (d (n "log") (r "^0.4.21") (f (quote ("kv"))) (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "rpm") (r "^0.14.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.11.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.40") (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.17") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ureq") (r "^2.9.6") (f (quote ("socks-proxy"))) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "windows-registry") (r "^0.1.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows-sys") (r "^0.52") (f (quote ("Win32_System_SystemInformation" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 0)))) (h "0z3f20hwsf9nn2rk5dm806ar2klf8irygi16nb7bnp2sk93zxi24") (f (quote (("rustls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "rustls")))) (r "1.70")))

