(define-module (crates-io ta ur tauri) #:use-module (crates-io))

(define-public crate-tauri-0.1.0 (c (n "tauri") (v "0.1.0") (d (list (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.3") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "hyper-old-types") (r "^0.11.0") (d #t) (k 0)) (d (n "ignore") (r "^0.4.10") (d #t) (k 0)) (d (n "includedir") (r "^0.5.0") (d #t) (k 0)) (d (n "includedir_codegen") (r "^0.5.0") (d #t) (k 1)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pbr") (r "^1") (d #t) (k 0)) (d (n "phf") (r "^0.7.24") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.9") (d #t) (k 0)) (d (n "semver") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.42") (d #t) (k 0)) (d (n "sysinfo") (r "^0.9") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "threadpool") (r "^1.7") (d #t) (k 0)) (d (n "tiny_http") (r "^0.6") (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "web-view") (r "^0.5.4") (d #t) (k 0)) (d (n "webbrowser") (r "^0.5.2") (d #t) (k 0)) (d (n "zip") (r "^0.5.3") (d #t) (k 0)))) (h "1frwvr893xxrkfn8khx8frf6kgz1ka23zqj61r9djg30cfd1dh6w") (f (quote (("writeFile") ("setTitle") ("readTextFile") ("readBinaryFile") ("open") ("listFiles") ("listDirs") ("execute") ("emit") ("embedded-server") ("edge" "web-view/edge") ("dev") ("all-api"))))))

(define-public crate-tauri-0.1.1 (c (n "tauri") (v "0.1.1") (d (list (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.3") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "hyper-old-types") (r "^0.11.0") (d #t) (k 0)) (d (n "ignore") (r "^0.4.10") (d #t) (k 0)) (d (n "includedir") (r "^0.5.0") (d #t) (k 0)) (d (n "includedir_codegen") (r "^0.5.0") (d #t) (k 1)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pbr") (r "^1") (d #t) (k 0)) (d (n "phf") (r "^0.7.24") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.9") (d #t) (k 0)) (d (n "semver") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.42") (d #t) (k 0)) (d (n "sysinfo") (r "^0.9") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "threadpool") (r "^1.7") (d #t) (k 0)) (d (n "tiny_http") (r "^0.6") (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "web-view") (r "^0.5.4") (d #t) (k 0)) (d (n "webbrowser") (r "^0.5.2") (d #t) (k 0)) (d (n "zip") (r "^0.5.3") (d #t) (k 0)))) (h "1i996qpbzzwk22y19gg2n4irkydmh42dx2z4k2spn62qwfx7m1yr") (f (quote (("writeFile") ("setTitle") ("readTextFile") ("readBinaryFile") ("open") ("listFiles") ("listDirs") ("execute") ("emit") ("embedded-server") ("edge" "web-view/edge") ("dev") ("all-api"))))))

(define-public crate-tauri-0.1.2 (c (n "tauri") (v "0.1.2") (d (list (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.3") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "hyper-old-types") (r "^0.11.0") (d #t) (k 0)) (d (n "ignore") (r "^0.4.10") (d #t) (k 0)) (d (n "includedir") (r "^0.5.0") (d #t) (k 0)) (d (n "includedir_codegen") (r "^0.5.0") (d #t) (k 1)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pbr") (r "^1") (d #t) (k 0)) (d (n "phf") (r "^0.7.24") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.9") (d #t) (k 0)) (d (n "semver") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.42") (d #t) (k 0)) (d (n "sysinfo") (r "^0.9") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "threadpool") (r "^1.7") (d #t) (k 0)) (d (n "tiny_http") (r "^0.6") (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "web-view") (r "^0.5.4") (d #t) (k 0)) (d (n "webbrowser") (r "^0.5.2") (d #t) (k 0)) (d (n "zip") (r "^0.5.3") (d #t) (k 0)))) (h "1y73q85mg11d40myrmfvpqlb8c9l9b93kpnwp4hdnp8qi226g93w") (f (quote (("writeFile") ("setTitle") ("readTextFile") ("readBinaryFile") ("open") ("listFiles") ("listDirs") ("execute") ("emit") ("embedded-server") ("edge" "web-view/edge") ("dev") ("all-api"))))))

(define-public crate-tauri-0.1.3 (c (n "tauri") (v "0.1.3") (d (list (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.3") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "hyper-old-types") (r "^0.11.0") (d #t) (k 0)) (d (n "ignore") (r "^0.4.10") (d #t) (k 0)) (d (n "includedir") (r "^0.5.0") (d #t) (k 0)) (d (n "includedir_codegen") (r "^0.5.0") (d #t) (k 1)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pbr") (r "^1") (d #t) (k 0)) (d (n "phf") (r "^0.7.24") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.9") (d #t) (k 0)) (d (n "semver") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.42") (d #t) (k 0)) (d (n "sysinfo") (r "^0.9") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "threadpool") (r "^1.7") (d #t) (k 0)) (d (n "tiny_http") (r "^0.6") (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "web-view") (r "^0.5.4") (d #t) (k 0)) (d (n "webbrowser") (r "^0.5.2") (d #t) (k 0)) (d (n "zip") (r "^0.5.3") (d #t) (k 0)))) (h "00hl2q99jh3f7a4dv6vf7kwhl8m7037aarrrr10777h46rvyks4i") (f (quote (("writeFile") ("setTitle") ("readTextFile") ("readBinaryFile") ("open") ("listFiles") ("listDirs") ("execute") ("emit") ("embedded-server") ("edge" "web-view/edge") ("dev") ("all-api"))))))

(define-public crate-tauri-0.2.0 (c (n "tauri") (v "0.2.0") (d (list (d (n "base64") (r "^0.11.0") (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "either") (r "^1.5.3") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "hyper-old-types") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pbr") (r "^1") (o #t) (d #t) (k 0)) (d (n "phf") (r "^0.8.0") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 1)) (d (n "reqwest") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "semver") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 1)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.42") (d #t) (k 1)) (d (n "sysinfo") (r "^0.10") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "tauri_includedir") (r "^0.5.0") (d #t) (k 0)) (d (n "tauri_includedir_codegen") (r "^0.5.1") (d #t) (k 1)) (d (n "tempdir") (r "^0.3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "threadpool") (r "^1.7") (d #t) (k 0)) (d (n "tiny_http") (r "^0.6") (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "web-view") (r "^0.5.4") (d #t) (k 0)) (d (n "webbrowser") (r "^0.5.2") (d #t) (k 0)) (d (n "zip") (r "^0.5.3") (d #t) (k 0)))) (h "1gr644458y78yx9rpi9i28d4aarid4fkvb7cbszihx2z5697pms3") (f (quote (("writeFile") ("updater") ("setTitle") ("readTextFile") ("readBinaryFile") ("open") ("no-server") ("listFiles") ("listDirs") ("execute") ("emit") ("embedded-server") ("edge" "web-view/edge") ("dev-server") ("all-api"))))))

(define-public crate-tauri-0.3.0 (c (n "tauri") (v "0.3.0") (d (list (d (n "base64") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "phf") (r "^0.8.0") (d #t) (k 0)) (d (n "proptest") (r "^0.9.4") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "tauri-api") (r "^0.3") (d #t) (k 0)) (d (n "tauri_includedir") (r "^0.5.0") (d #t) (k 0)) (d (n "tauri_includedir_codegen") (r "^0.5.1") (d #t) (k 1)) (d (n "threadpool") (r "^1.7") (d #t) (k 0)) (d (n "tiny_http") (r "^0.6") (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "web-view") (r "^0.5.4") (d #t) (k 0)) (d (n "webbrowser") (r "^0.5.2") (d #t) (k 0)))) (h "168n221y9jn7j14v1jl8vyywfcnkk8cb0im8p6lyrix0h390a0s6") (f (quote (("writeFile") ("setTitle") ("readTextFile") ("readBinaryFile") ("open") ("no-server") ("listFiles") ("listDirs") ("execute") ("event") ("embedded-server") ("edge" "web-view/edge") ("dev-server") ("all-api"))))))

(define-public crate-tauri-0.3.1 (c (n "tauri") (v "0.3.1") (d (list (d (n "base64") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "phf") (r "^0.8.0") (d #t) (k 0)) (d (n "proptest") (r "^0.9.4") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "tauri-api") (r "^0.3") (d #t) (k 0)) (d (n "tauri_includedir") (r "^0.5.0") (d #t) (k 0)) (d (n "tauri_includedir_codegen") (r "^0.5.1") (d #t) (k 1)) (d (n "threadpool") (r "^1.7") (d #t) (k 0)) (d (n "tiny_http") (r "^0.6") (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "web-view") (r "^0.5.4") (d #t) (k 0)) (d (n "webbrowser") (r "^0.5.2") (d #t) (k 0)))) (h "1v1lvv2cxzkf7nqjvn1b9wx4abx48m6mysgk582l9sdhrnv1ppmj") (f (quote (("writeFile") ("setTitle") ("readTextFile") ("readBinaryFile") ("open") ("no-server") ("listFiles") ("listDirs") ("execute") ("event") ("embedded-server") ("edge" "web-view/edge") ("dev-server") ("all-api"))))))

(define-public crate-tauri-0.3.2 (c (n "tauri") (v "0.3.2") (d (list (d (n "base64") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "phf") (r "^0.8.0") (d #t) (k 0)) (d (n "proptest") (r "^0.9.4") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "tauri-api") (r "^0.3") (d #t) (k 0)) (d (n "tauri_includedir") (r "^0.5.0") (d #t) (k 0)) (d (n "tauri_includedir_codegen") (r "^0.5.1") (d #t) (k 1)) (d (n "threadpool") (r "^1.7") (d #t) (k 0)) (d (n "tiny_http") (r "^0.6") (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "web-view") (r "^0.5.4") (d #t) (k 0)) (d (n "webbrowser") (r "^0.5.2") (d #t) (k 0)))) (h "1gai9hki8ja0rkgcz2wsqjjf52gyyjv6r7b811wbgivr549g7rdr") (f (quote (("writeFile") ("setTitle") ("readTextFile") ("readBinaryFile") ("open") ("no-server") ("listFiles") ("listDirs") ("execute") ("event") ("embedded-server") ("edge" "web-view/edge") ("dev-server") ("all-api"))))))

(define-public crate-tauri-0.4.0 (c (n "tauri") (v "0.4.0") (d (list (d (n "base64") (r "^0.11.0") (d #t) (k 0)) (d (n "error-chain") (r "^0.12.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "phf") (r "^0.8.0") (d #t) (k 0)) (d (n "proptest") (r "^0.9.5") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tauri-api") (r "^0.4") (d #t) (k 0)) (d (n "tauri_includedir") (r "^0.5.0") (d #t) (k 0)) (d (n "tauri_includedir_codegen") (r "^0.5.2") (d #t) (k 1)) (d (n "threadpool") (r "^1.7") (d #t) (k 0)) (d (n "tiny_http") (r "^0.6") (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "web-view") (r "^0.6.0") (d #t) (k 0)) (d (n "webbrowser") (r "^0.5.2") (d #t) (k 0)))) (h "107y61hajgvw015m5j995bn64rv2yq6by7hv4gv7vslyn1a2hf0b") (f (quote (("writeFile") ("updater") ("setTitle") ("readTextFile") ("readBinaryFile") ("open") ("no-server") ("listFiles") ("listDirs") ("execute") ("event") ("embedded-server") ("edge" "web-view/edge") ("dev-server") ("all-api"))))))

(define-public crate-tauri-0.4.1 (c (n "tauri") (v "0.4.1") (d (list (d (n "base64") (r "^0.11.0") (d #t) (k 0)) (d (n "error-chain") (r "^0.12.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "phf") (r "^0.8.0") (d #t) (k 0)) (d (n "proptest") (r "^0.9.5") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tauri-api") (r "^0.4") (d #t) (k 0)) (d (n "tauri_includedir") (r "^0.5.0") (d #t) (k 0)) (d (n "tauri_includedir_codegen") (r "^0.5.2") (d #t) (k 1)) (d (n "threadpool") (r "^1.7") (d #t) (k 0)) (d (n "tiny_http") (r "^0.6") (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "web-view") (r "^0.6.0") (d #t) (k 0)) (d (n "webbrowser") (r "^0.5.2") (d #t) (k 0)))) (h "1n0my32lljgk0fvvqgiyrj7znbx43y8mn1rkjv012v7d3l2kfdnc") (f (quote (("writeFile") ("updater") ("setTitle") ("readTextFile") ("readBinaryFile") ("open") ("no-server") ("listFiles") ("listDirs") ("execute") ("event") ("embedded-server") ("edge" "web-view/edge") ("dev-server") ("all-api"))))))

(define-public crate-tauri-0.4.2 (c (n "tauri") (v "0.4.2") (d (list (d (n "base64") (r "^0.11.0") (d #t) (k 0)) (d (n "error-chain") (r "^0.12.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "phf") (r "^0.8.0") (d #t) (k 0)) (d (n "proptest") (r "^0.9.5") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tauri-api") (r "^0.4") (d #t) (k 0)) (d (n "tauri_includedir") (r "^0.5.0") (d #t) (k 0)) (d (n "tauri_includedir_codegen") (r "^0.5.2") (d #t) (k 1)) (d (n "threadpool") (r "^1.7") (d #t) (k 0)) (d (n "tiny_http") (r "^0.6") (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "web-view") (r "^0.6.0") (d #t) (k 0)) (d (n "webbrowser") (r "^0.5.2") (d #t) (k 0)))) (h "04h15l9hi3bqbaxpmiqzdcaf904bshfr9gxh39iivhjc0zm10vm7") (f (quote (("writeFile") ("updater") ("setTitle") ("readTextFile") ("readBinaryFile") ("open") ("no-server") ("listFiles") ("listDirs") ("execute") ("event") ("embedded-server") ("edge" "web-view/edge") ("dev-server") ("all-api"))))))

(define-public crate-tauri-0.4.3 (c (n "tauri") (v "0.4.3") (d (list (d (n "base64") (r "^0.11.0") (d #t) (k 0)) (d (n "error-chain") (r "^0.12.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "phf") (r "^0.8.0") (d #t) (k 0)) (d (n "proptest") (r "^0.9.5") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tauri-api") (r "^0.4") (d #t) (k 0)) (d (n "tauri_includedir") (r "^0.5.0") (d #t) (k 0)) (d (n "tauri_includedir_codegen") (r "^0.5.2") (d #t) (k 1)) (d (n "threadpool") (r "^1.7") (d #t) (k 0)) (d (n "tiny_http") (r "^0.6") (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "web-view") (r "^0.6.0") (d #t) (k 0)) (d (n "webbrowser") (r "^0.5.2") (d #t) (k 0)))) (h "0klphqxgyscvhjbvqqwpxj79vq4m1p2r6qra45r80vw48pxwgg63") (f (quote (("writeFile") ("updater") ("setTitle") ("readTextFile") ("readBinaryFile") ("open") ("no-server") ("listFiles") ("listDirs") ("execute") ("event") ("embedded-server") ("edge" "web-view/edge") ("dev-server") ("all-api"))))))

(define-public crate-tauri-0.5.0 (c (n "tauri") (v "0.5.0") (d (list (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "error-chain") (r "^0.12.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "phf") (r "^0.8.0") (d #t) (k 0)) (d (n "proptest") (r "^0.9.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tauri-api") (r "^0.5") (d #t) (k 0)) (d (n "tauri_includedir") (r "^0.5.0") (d #t) (k 0)) (d (n "tauri_includedir_codegen") (r "^0.5.2") (d #t) (k 1)) (d (n "threadpool") (r "^1.7") (d #t) (k 0)) (d (n "tiny_http") (r "^0.6") (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "web-view") (r "= 0.6.2") (d #t) (k 0)) (d (n "webbrowser") (r "^0.5.2") (d #t) (k 0)) (d (n "webview-sys") (r "= 0.5.0") (d #t) (k 0)))) (h "11klj55krrih6p9kx6hz6sa0krsvf3wmdzwa88pqwgrzy6z6g9xy") (f (quote (("write-file") ("updater") ("set-title") ("save-dialog") ("rename-file") ("remove-file") ("remove-dir") ("read-text-file") ("read-dir") ("read-binary-file") ("open-dialog") ("open") ("no-server") ("execute") ("event") ("embedded-server") ("edge" "web-view/edge") ("dev-server") ("create-dir") ("copy-file") ("all-api"))))))

(define-public crate-tauri-0.5.1 (c (n "tauri") (v "0.5.1") (d (list (d (n "base64") (r "^0.12.1") (d #t) (k 0)) (d (n "error-chain") (r "^0.12.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "phf") (r "^0.8.0") (d #t) (k 0)) (d (n "proptest") (r "^0.9.6") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tauri-api") (r "^0.5") (d #t) (k 0)) (d (n "tauri_includedir") (r "^0.5.0") (d #t) (k 0)) (d (n "tauri_includedir_codegen") (r "^0.5.2") (d #t) (k 1)) (d (n "threadpool") (r "^1.8") (d #t) (k 0)) (d (n "tiny_http") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "web-view") (r "= 0.6.2") (d #t) (k 0)) (d (n "webbrowser") (r "^0.5.2") (d #t) (k 0)) (d (n "webview-sys") (r "= 0.5.0") (d #t) (k 0)))) (h "0a06vgfnxsr6qp7pc8s8bhizi22m8v36n4s54mkf3v3haa942kq8") (f (quote (("write-file") ("updater") ("set-title") ("save-dialog") ("rename-file") ("remove-file") ("remove-dir") ("read-text-file") ("read-dir") ("read-binary-file") ("open-dialog") ("open") ("no-server") ("execute") ("event") ("embedded-server" "tiny_http") ("edge" "web-view/edge") ("create-dir") ("copy-file") ("all-api"))))))

(define-public crate-tauri-0.5.2 (c (n "tauri") (v "0.5.2") (d (list (d (n "base64") (r "^0.12.1") (d #t) (k 0)) (d (n "error-chain") (r "^0.12.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "phf") (r "^0.8.0") (d #t) (k 0)) (d (n "proptest") (r "^0.9.6") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tauri-api") (r "^0.5") (d #t) (k 0)) (d (n "tauri_includedir") (r "^0.5.0") (d #t) (k 0)) (d (n "tauri_includedir_codegen") (r "^0.5.2") (d #t) (k 1)) (d (n "threadpool") (r "^1.8") (d #t) (k 0)) (d (n "tiny_http") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "web-view") (r "= 0.6.2") (d #t) (k 0)) (d (n "webbrowser") (r "^0.5.2") (d #t) (k 0)) (d (n "webview-sys") (r "= 0.5.0") (d #t) (k 0)))) (h "1gvljd9631bp73j8y7jmdq06pbqqk3hm0fiw15x96vgr6ygfw926") (f (quote (("write-file") ("updater") ("set-title") ("save-dialog") ("rename-file") ("remove-file") ("remove-dir") ("read-text-file") ("read-dir") ("read-binary-file") ("open-dialog") ("open") ("no-server") ("execute") ("event") ("embedded-server" "tiny_http") ("edge" "web-view/edge") ("create-dir") ("copy-file") ("all-api"))))))

(define-public crate-tauri-0.5.3 (c (n "tauri") (v "0.5.3") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "base64") (r "^0.12.1") (d #t) (k 0)) (d (n "envmnt") (r "^0.8.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "phf") (r "^0.8.0") (d #t) (k 0)) (d (n "proptest") (r "^0.10.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tauri-api") (r "^0.5") (d #t) (k 0)) (d (n "tauri_includedir") (r "^0.5.0") (d #t) (k 0)) (d (n "tauri_includedir_codegen") (r "^0.5.2") (d #t) (k 1)) (d (n "thiserror") (r "^1.0.19") (d #t) (k 0)) (d (n "threadpool") (r "^1.8") (d #t) (k 0)) (d (n "tiny_http") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "web-view") (r "^0.6.2") (d #t) (k 0)) (d (n "webbrowser") (r "^0.5.4") (d #t) (k 0)) (d (n "webview-sys") (r "^0.5.0") (d #t) (k 0)))) (h "1j5cb12iwnyvva7q0rwcb8g5j08fwjk7g2x3h13nybrzd9m81p8f") (f (quote (("write-file") ("updater") ("set-title") ("save-dialog") ("rename-file") ("remove-file") ("remove-dir") ("read-text-file") ("read-dir") ("read-binary-file") ("open-dialog") ("open") ("no-server") ("execute") ("event") ("embedded-server" "tiny_http") ("edge" "web-view/edge") ("create-dir") ("copy-file") ("all-api"))))))

(define-public crate-tauri-0.6.0 (c (n "tauri") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "base64") (r "^0.12.2") (d #t) (k 0)) (d (n "envmnt") (r "^0.8.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "phf") (r "^0.8.0") (d #t) (k 0)) (d (n "proptest") (r "^0.10.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tauri-api") (r "^0.6") (d #t) (k 0)) (d (n "tauri_includedir") (r "^0.5.0") (d #t) (k 0)) (d (n "tauri_includedir_codegen") (r "^0.5.2") (d #t) (k 1)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "threadpool") (r "^1.8") (d #t) (k 0)) (d (n "tiny_http") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "web-view") (r "^0.6.2") (d #t) (k 0)) (d (n "webbrowser") (r "^0.5.4") (d #t) (k 0)) (d (n "webview-sys") (r "^0.5.0") (d #t) (k 0)))) (h "0343s13l3l58f5vdr3zbw5hfhq46ajvbyx5diyjqw4yff4rps79d") (f (quote (("write-file") ("updater") ("set-title") ("save-dialog") ("rename-file") ("remove-file") ("remove-dir") ("read-text-file") ("read-dir") ("read-binary-file") ("open-dialog") ("open") ("notification" "tauri-api/notification") ("no-server") ("execute") ("event") ("embedded-server" "tiny_http") ("edge" "web-view/edge") ("create-dir") ("copy-file") ("cli" "tauri-api/cli") ("all-api" "tauri-api/notification"))))))

(define-public crate-tauri-0.6.2 (c (n "tauri") (v "0.6.2") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "base64") (r "^0.12.2") (d #t) (k 0)) (d (n "envmnt") (r "^0.8.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "phf") (r "^0.8.0") (d #t) (k 0)) (d (n "proptest") (r "^0.10.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tauri-api") (r "^0.6") (d #t) (k 0)) (d (n "tauri-web-view") (r "^0.6.2") (d #t) (k 0)) (d (n "tauri-webview-sys") (r "^0.5.0") (d #t) (k 0)) (d (n "tauri_includedir") (r "^0.5.0") (d #t) (k 0)) (d (n "tauri_includedir_codegen") (r "^0.5.2") (d #t) (k 1)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "threadpool") (r "^1.8") (d #t) (k 0)) (d (n "tiny_http") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webbrowser") (r "^0.5.4") (d #t) (k 0)))) (h "0nbj5dcnfaj2gf7w32izqgh83g3qz2ng3qfqcrffimqhavic9vlp") (f (quote (("write-file") ("updater") ("set-title") ("save-dialog") ("rename-file") ("remove-file") ("remove-dir") ("read-text-file") ("read-dir") ("read-binary-file") ("open-dialog") ("open") ("notification" "tauri-api/notification") ("no-server") ("execute") ("event") ("embedded-server" "tiny_http") ("edge" "tauri-web-view/edge") ("create-dir") ("copy-file") ("cli" "tauri-api/cli") ("all-api" "tauri-api/notification"))))))

(define-public crate-tauri-0.7.0 (c (n "tauri") (v "0.7.0") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "base64") (r "^0.12.3") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.0") (d #t) (k 1)) (d (n "envmnt") (r "^0.8.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "phf") (r "^0.8.0") (d #t) (k 0)) (d (n "proptest") (r "^0.10.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tauri-api") (r "^0.7") (d #t) (k 0)) (d (n "tauri-web-view") (r "^0.6.2") (d #t) (k 0)) (d (n "tauri-webview-sys") (r "^0.5.0") (d #t) (k 0)) (d (n "tauri_includedir") (r "^0.6.0") (d #t) (k 0)) (d (n "tauri_includedir_codegen") (r "^0.6.1") (d #t) (k 1)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "threadpool") (r "^1.8") (d #t) (k 0)) (d (n "tiny_http") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webbrowser") (r "^0.5.4") (d #t) (k 0)))) (h "00z67gxl7p2hyh28lpqv4smg6zhpfcpzrf99bnl967zw3nphzzcs") (f (quote (("write-file") ("updater") ("set-title") ("save-dialog") ("rename-file") ("remove-file") ("remove-dir") ("read-text-file") ("read-dir") ("read-binary-file") ("open-dialog") ("open") ("notification" "tauri-api/notification") ("no-server") ("execute") ("event") ("embedded-server" "tiny_http") ("edge" "tauri-web-view/edge") ("create-dir") ("copy-file") ("cli" "tauri-api/cli") ("all-api" "tauri-api/notification"))))))

(define-public crate-tauri-0.7.1 (c (n "tauri") (v "0.7.1") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "base64") (r "^0.12.3") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.0") (d #t) (k 1)) (d (n "envmnt") (r "^0.8.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "phf") (r "^0.8.0") (d #t) (k 0)) (d (n "proptest") (r "^0.10.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tauri-api") (r "^0.7") (d #t) (k 0)) (d (n "tauri-web-view") (r "^0.6.2") (d #t) (k 0)) (d (n "tauri-webview-sys") (r "^0.5.0") (d #t) (k 0)) (d (n "tauri_includedir") (r "^0.6.0") (d #t) (k 0)) (d (n "tauri_includedir_codegen") (r "^0.6.2") (d #t) (k 1)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "threadpool") (r "^1.8") (d #t) (k 0)) (d (n "tiny_http") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webbrowser") (r "^0.5.4") (d #t) (k 0)))) (h "160kfys01wp4bgv3b35wfv5yh6zb5gkhw7q3qfaysw7dgckwk8ws") (f (quote (("write-file") ("updater") ("set-title") ("save-dialog") ("rename-file") ("remove-file") ("remove-dir") ("read-text-file") ("read-dir") ("read-binary-file") ("open-dialog") ("open") ("notification" "tauri-api/notification") ("no-server") ("execute") ("event") ("embedded-server" "tiny_http") ("edge" "tauri-web-view/edge") ("create-dir") ("copy-file") ("cli" "tauri-api/cli") ("all-api" "tauri-api/notification"))))))

(define-public crate-tauri-0.7.2 (c (n "tauri") (v "0.7.2") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "base64") (r "^0.12.3") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.0") (d #t) (k 1)) (d (n "envmnt") (r "^0.8.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "phf") (r "^0.8.0") (d #t) (k 0)) (d (n "proptest") (r "^0.10.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tauri-api") (r "^0.7") (d #t) (k 0)) (d (n "tauri-web-view") (r "^0.6.2") (d #t) (k 0)) (d (n "tauri-webview-sys") (r "^0.5.0") (d #t) (k 0)) (d (n "tauri_includedir") (r "^0.6.0") (d #t) (k 0)) (d (n "tauri_includedir_codegen") (r "^0.6.2") (d #t) (k 1)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "threadpool") (r "^1.8") (d #t) (k 0)) (d (n "tiny_http") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webbrowser") (r "^0.5.4") (d #t) (k 0)))) (h "0a2qqjsl75680zy3kdyxbljk15dxafmn304msmnq4bnyh7j00hpd") (f (quote (("write-file") ("updater") ("set-title") ("save-dialog") ("rename-file") ("remove-file") ("remove-dir") ("read-text-file") ("read-dir") ("read-binary-file") ("open-dialog") ("open") ("notification" "tauri-api/notification") ("no-server") ("execute") ("event") ("embedded-server" "tiny_http") ("edge" "tauri-web-view/edge") ("create-dir") ("copy-file") ("cli" "tauri-api/cli") ("all-api" "tauri-api/notification"))))))

(define-public crate-tauri-0.7.3 (c (n "tauri") (v "0.7.3") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "base64") (r "^0.12.3") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.0") (d #t) (k 1)) (d (n "envmnt") (r "^0.8.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "phf") (r "^0.8.0") (d #t) (k 0)) (d (n "proptest") (r "^0.10.0") (d #t) (k 2)) (d (n "runas") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tauri-api") (r "^0.7") (d #t) (k 0)) (d (n "tauri-web-view") (r "^0.6.2") (d #t) (k 0)) (d (n "tauri-webview-sys") (r "^0.5.0") (d #t) (k 0)) (d (n "tauri_includedir") (r "^0.6.0") (d #t) (k 0)) (d (n "tauri_includedir_codegen") (r "^0.6.2") (d #t) (k 1)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "threadpool") (r "^1.8") (d #t) (k 0)) (d (n "tiny_http") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webbrowser") (r "^0.5.4") (d #t) (k 0)))) (h "1xk3haybrmy5pqffmjpvhykw1pkmfvbfypgx0n7h710lxpc35rqg") (f (quote (("write-file") ("updater") ("set-title") ("save-dialog") ("rename-file") ("remove-file") ("remove-dir") ("read-text-file") ("read-dir") ("read-binary-file") ("open-dialog") ("open") ("notification" "tauri-api/notification") ("no-server") ("execute") ("event") ("embedded-server" "tiny_http") ("edge" "tauri-web-view/edge") ("create-dir") ("copy-file") ("cli" "tauri-api/cli") ("all-api" "tauri-api/notification"))))))

(define-public crate-tauri-0.7.4 (c (n "tauri") (v "0.7.4") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "base64") (r "^0.12.3") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.0") (d #t) (k 1)) (d (n "envmnt") (r "^0.8.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "phf") (r "^0.8.0") (d #t) (k 0)) (d (n "proptest") (r "^0.10.0") (d #t) (k 2)) (d (n "runas") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tauri-api") (r "^0.7") (d #t) (k 0)) (d (n "tauri-web-view") (r "^0.6.2") (d #t) (k 0)) (d (n "tauri-webview-sys") (r "^0.5.0") (d #t) (k 0)) (d (n "tauri_includedir") (r "^0.6.0") (d #t) (k 0)) (d (n "tauri_includedir_codegen") (r "^0.6.2") (d #t) (k 1)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "threadpool") (r "^1.8") (d #t) (k 0)) (d (n "tiny_http") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webbrowser") (r "^0.5.4") (d #t) (k 0)))) (h "190ng90mw2hal6mlf5984s6i1ac5dsj29n8i4a4aqvi9y23asfhr") (f (quote (("write-file") ("updater") ("set-title") ("save-dialog") ("rename-file") ("remove-file") ("remove-dir") ("read-text-file") ("read-dir") ("read-binary-file") ("open-dialog") ("open") ("notification" "tauri-api/notification") ("no-server") ("execute") ("event") ("embedded-server" "tiny_http") ("edge" "tauri-web-view/edge") ("create-dir") ("copy-file") ("cli" "tauri-api/cli") ("all-api" "tauri-api/notification"))))))

(define-public crate-tauri-0.7.5 (c (n "tauri") (v "0.7.5") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "base64") (r "^0.12.3") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.0") (d #t) (k 1)) (d (n "envmnt") (r "^0.8.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "phf") (r "^0.8.0") (d #t) (k 0)) (d (n "proptest") (r "^0.10.0") (d #t) (k 2)) (d (n "runas") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tauri-api") (r "^0.7") (d #t) (k 0)) (d (n "tauri-web-view") (r "^0.6.2") (d #t) (k 0)) (d (n "tauri-webview-sys") (r "^0.5.0") (d #t) (k 0)) (d (n "tauri_includedir") (r "^0.6.0") (d #t) (k 0)) (d (n "tauri_includedir_codegen") (r "^0.6.2") (d #t) (k 1)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "threadpool") (r "^1.8") (d #t) (k 0)) (d (n "tiny_http") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webbrowser") (r "^0.5.4") (d #t) (k 0)))) (h "1a9yhw6xwsca5cs14s4j6a0vlnksbnfqwpgyiirl5p6p7s4zjqyn") (f (quote (("write-file") ("updater") ("set-title") ("save-dialog") ("rename-file") ("remove-file") ("remove-dir") ("read-text-file") ("read-dir") ("read-binary-file") ("open-dialog") ("open") ("notification" "tauri-api/notification") ("no-server") ("execute") ("event") ("embedded-server" "tiny_http") ("edge" "tauri-web-view/edge") ("create-dir") ("copy-file") ("cli" "tauri-api/cli") ("all-api" "tauri-api/notification"))))))

(define-public crate-tauri-0.8.0 (c (n "tauri") (v "0.8.0") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "base64") (r "^0.12.3") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.0") (d #t) (k 1)) (d (n "envmnt") (r "^0.8.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "phf") (r "^0.8.0") (d #t) (k 0)) (d (n "proptest") (r "^0.10.0") (d #t) (k 2)) (d (n "runas") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tauri-api") (r "^0.7") (d #t) (k 0)) (d (n "tauri_includedir") (r "^0.6.0") (d #t) (k 0)) (d (n "tauri_includedir_codegen") (r "^0.6.2") (d #t) (k 1)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "threadpool") (r "^1.8") (d #t) (k 0)) (d (n "tiny_http") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "urlencoding") (r "^1.1.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webbrowser") (r "^0.5.4") (d #t) (k 0)) (d (n "webview_official") (r "^0.0.1") (d #t) (k 0)))) (h "128jnycq16hxvz499xmxvl0h6g879k09k4im049jpdj6ayqalbgp") (f (quote (("write-file") ("updater") ("set-title") ("save-dialog") ("rename-file") ("remove-file") ("remove-dir") ("read-text-file") ("read-dir") ("read-binary-file") ("open-dialog") ("open") ("notification" "tauri-api/notification") ("no-server") ("execute") ("event") ("embedded-server" "tiny_http") ("create-dir") ("copy-file") ("cli" "tauri-api/cli") ("all-api" "tauri-api/notification"))))))

(define-public crate-tauri-0.9.0 (c (n "tauri") (v "0.9.0") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "base64") (r "^0.12.3") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.0") (d #t) (k 1)) (d (n "envmnt") (r "^0.8.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "phf") (r "^0.8.0") (d #t) (k 0)) (d (n "proptest") (r "^0.10.0") (d #t) (k 2)) (d (n "runas") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tauri-api") (r "^0.7.3") (d #t) (k 0)) (d (n "tauri_includedir") (r "^0.6.0") (d #t) (k 0)) (d (n "tauri_includedir_codegen") (r "^0.6.2") (d #t) (k 1)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "threadpool") (r "^1.8") (d #t) (k 0)) (d (n "tiny_http") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "urlencoding") (r "^1.1.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webbrowser") (r "^0.5.5") (d #t) (k 0)) (d (n "webview_official") (r "^0.0.2") (d #t) (k 0)))) (h "09r542qa5q0wbl4vzmfpf6ma7z8lnskwi90npxdm8pns8bv7prk1") (f (quote (("write-file") ("updater") ("set-title") ("save-dialog") ("rename-file") ("remove-file") ("remove-dir") ("read-text-file") ("read-dir") ("read-binary-file") ("open-dialog") ("open") ("notification" "tauri-api/notification") ("no-server") ("execute") ("event") ("embedded-server" "tiny_http") ("create-dir") ("copy-file") ("cli" "tauri-api/cli") ("all-api" "tauri-api/notification"))))))

(define-public crate-tauri-0.9.1 (c (n "tauri") (v "0.9.1") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "base64") (r "^0.12.3") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.0") (d #t) (k 1)) (d (n "envmnt") (r "^0.8.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "phf") (r "^0.8.0") (d #t) (k 0)) (d (n "proptest") (r "^0.10.0") (d #t) (k 2)) (d (n "runas") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tauri-api") (r "^0.7.3") (d #t) (k 0)) (d (n "tauri_includedir") (r "^0.6.0") (d #t) (k 0)) (d (n "tauri_includedir_codegen") (r "^0.6.2") (d #t) (k 1)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "threadpool") (r "^1.8") (d #t) (k 0)) (d (n "tiny_http") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "urlencoding") (r "^1.1.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webbrowser") (r "^0.5.5") (d #t) (k 0)) (d (n "webview_official") (r "^0.0.2") (d #t) (k 0)))) (h "1nzjc2ranw7sw0hngr7920sk0viwqbc1gmg24gjllh2kqp2pazbx") (f (quote (("write-file") ("updater") ("set-title") ("save-dialog") ("rename-file") ("remove-file") ("remove-dir") ("read-text-file") ("read-dir") ("read-binary-file") ("open-dialog") ("open") ("notification" "tauri-api/notification") ("no-server") ("execute") ("event") ("embedded-server" "tiny_http") ("create-dir") ("copy-file") ("cli" "tauri-api/cli") ("all-api" "tauri-api/notification"))))))

(define-public crate-tauri-0.9.2 (c (n "tauri") (v "0.9.2") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "base64") (r "^0.12.3") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.0") (d #t) (k 1)) (d (n "envmnt") (r "^0.8.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "phf") (r "^0.8.0") (d #t) (k 0)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "runas") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tauri-api") (r "^0.7.4") (d #t) (k 0)) (d (n "tauri_includedir") (r "^0.6.0") (d #t) (k 0)) (d (n "tauri_includedir_codegen") (r "^0.6.2") (d #t) (k 1)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "threadpool") (r "^1.8") (d #t) (k 0)) (d (n "tiny_http") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "urlencoding") (r "^1.1.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webbrowser") (r "^0.5.5") (d #t) (k 0)) (d (n "webview_official") (r "^0.0.3") (d #t) (k 0)))) (h "1vqwj585s05ak5inhiwbqr3qz93pbfv3k1mprajcl2d4y25slgkp") (f (quote (("write-file") ("updater") ("set-title") ("save-dialog") ("rename-file") ("remove-file") ("remove-dir") ("read-text-file") ("read-dir") ("read-binary-file") ("open-dialog") ("open") ("notification" "tauri-api/notification") ("no-server") ("execute") ("event") ("embedded-server" "tiny_http") ("create-dir") ("copy-file") ("cli" "tauri-api/cli") ("all-api" "tauri-api/notification"))))))

(define-public crate-tauri-0.10.0 (c (n "tauri") (v "0.10.0") (d (list (d (n "anyhow") (r "^1.0.33") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.0") (d #t) (k 1)) (d (n "envmnt") (r "^0.8.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "phf") (r "^0.8.0") (d #t) (k 0)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "runas") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tauri-api") (r "^0.7.5") (d #t) (k 0)) (d (n "tauri_includedir") (r "^0.6.0") (d #t) (k 0)) (d (n "tauri_includedir_codegen") (r "^0.6.2") (d #t) (k 1)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "threadpool") (r "^1.8") (d #t) (k 0)) (d (n "tiny_http") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "urlencoding") (r "^1.1.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webbrowser") (r "^0.5.5") (d #t) (k 0)) (d (n "webview_official") (r "^0.0.3") (d #t) (k 0)))) (h "03rfspyqy75kbii9a0ic31m504ag837wljwh68cvra9l4h6dsb18") (f (quote (("write-file") ("write-binary-file") ("updater") ("set-title") ("save-dialog") ("rename-file") ("remove-file") ("remove-dir") ("read-text-file") ("read-dir") ("read-binary-file") ("path-api") ("open-dialog") ("open") ("notification" "tauri-api/notification") ("no-server") ("http-request") ("execute") ("event") ("embedded-server" "tiny_http") ("create-dir") ("copy-file") ("cli" "tauri-api/cli") ("all-api" "tauri-api/notification"))))))

(define-public crate-tauri-0.11.0 (c (n "tauri") (v "0.11.0") (d (list (d (n "anyhow") (r "^1.0.37") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "envmnt") (r "^0.8.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "phf") (r "^0.8.0") (d #t) (k 0)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "runas") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tauri-api") (r "^0.7.5") (d #t) (k 0)) (d (n "tauri_includedir") (r "^0.6.0") (d #t) (k 0)) (d (n "tauri_includedir_codegen") (r "^0.6.2") (d #t) (k 1)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "threadpool") (r "^1.8") (d #t) (k 0)) (d (n "tiny_http") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "urlencoding") (r "^1.1.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webbrowser") (r "^0.5.5") (d #t) (k 0)) (d (n "webview_official") (r "^0.0.3") (d #t) (k 0)))) (h "1g0zh6jhmzrml4nvbw441ak9lh8ia5p2jvi2j3dra6p54s60qsjk") (f (quote (("write-file") ("write-binary-file") ("updater") ("set-title") ("save-dialog") ("rename-file") ("remove-file") ("remove-dir") ("read-text-file") ("read-dir") ("read-binary-file") ("path-api") ("open-dialog") ("open") ("notification" "tauri-api/notification") ("no-server") ("http-request") ("execute") ("event") ("embedded-server" "tiny_http") ("create-dir") ("copy-file") ("cli" "tauri-api/cli") ("all-api" "tauri-api/notification"))))))

(define-public crate-tauri-0.11.1 (c (n "tauri") (v "0.11.1") (d (list (d (n "anyhow") (r "^1.0.37") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "envmnt") (r "^0.8.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "phf") (r "^0.8.0") (d #t) (k 0)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "runas") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tauri-api") (r "^0.7.5") (d #t) (k 0)) (d (n "tauri_includedir") (r "^0.6.0") (d #t) (k 0)) (d (n "tauri_includedir_codegen") (r "^0.6.2") (d #t) (k 1)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "threadpool") (r "^1.8") (d #t) (k 0)) (d (n "tiny_http") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "urlencoding") (r "^1.1.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webbrowser") (r "^0.5.5") (d #t) (k 0)) (d (n "webview_official") (r "^0.0.4") (d #t) (k 0)))) (h "0k3gdwsh5c9hqhvpm2w63mzd0w5ksifqgzj5xllf2mblsdslmbx9") (f (quote (("write-file") ("write-binary-file") ("updater") ("set-title") ("save-dialog") ("rename-file") ("remove-file") ("remove-dir") ("read-text-file") ("read-dir") ("read-binary-file") ("path-api") ("open-dialog") ("open") ("notification" "tauri-api/notification") ("no-server") ("http-request") ("execute") ("event") ("embedded-server" "tiny_http") ("create-dir") ("copy-file") ("cli" "tauri-api/cli") ("all-api" "tauri-api/notification"))))))

(define-public crate-tauri-1.0.0-beta-rc.0 (c (n "tauri") (v "1.0.0-beta-rc.0") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "clap") (r "=3.0.0-beta.2") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ignore") (r "^0.4.17") (d #t) (k 0)) (d (n "minisign-verify") (r "^0.1.8") (d #t) (k 0)) (d (n "mockito") (r "^0.29") (d #t) (k 2)) (d (n "notify-rust") (r "^4.3.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "open") (r "^1.6.0") (d #t) (k 0)) (d (n "os_pipe") (r "^0.9") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "multipart"))) (d #t) (k 0)) (d (n "rfd") (r "^0.2.2") (d #t) (k 0)) (d (n "semver") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "shared_child") (r "^0.3") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "tauri-hotkey") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "tauri-macros") (r "^1.0.0-beta-rc.0") (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.0-beta-rc.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tinyfiledialogs") (r "^3.3") (d #t) (k 0)) (d (n "tokio") (r "^1.4") (f (quote ("rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.1") (d #t) (k 2)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4"))) (d #t) (k 0)) (d (n "wry") (r "^0.8") (d #t) (k 0)) (d (n "zip") (r "^0.5.11") (d #t) (k 0)))) (h "08vl7pw7d7mq3hbalwvj4g6kyzvkgvkk6xv1f2cn4kj8d14r20gm") (f (quote (("window-create") ("window-all") ("updater" "reqwest/default-tls") ("shell-open") ("shell-execute") ("shell-all") ("notification-all" "notify-rust") ("http-request") ("http-all") ("global-shortcut-all" "tauri-hotkey") ("fs-write-file") ("fs-write-binary-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-text-file") ("fs-read-dir") ("fs-read-binary-file") ("fs-path-api") ("fs-create-dir") ("fs-copy-file") ("fs-all") ("dialog-save") ("dialog-open") ("dialog-all") ("custom-protocol" "tauri-macros/custom-protocol") ("cli" "clap") ("api-all" "notification-all" "global-shortcut-all" "updater")))) (y #t)))

(define-public crate-tauri-1.0.0-beta-rc.2 (c (n "tauri") (v "1.0.0-beta-rc.2") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "clap") (r "=3.0.0-beta.2") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ignore") (r "^0.4.17") (d #t) (k 0)) (d (n "minisign-verify") (r "^0.1.8") (d #t) (k 0)) (d (n "mockito") (r "^0.30") (d #t) (k 2)) (d (n "notify-rust") (r "^4.3.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "open") (r "^1.6.0") (d #t) (k 0)) (d (n "os_pipe") (r "^0.9") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "multipart"))) (d #t) (k 0)) (d (n "rfd") (r "^0.2.2") (d #t) (k 0)) (d (n "semver") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "shared_child") (r "^0.3") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "tauri-hotkey") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "tauri-macros") (r "^1.0.0-beta-rc.0") (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.0-beta-rc.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tinyfiledialogs") (r "^3.3") (d #t) (k 0)) (d (n "tokio") (r "^1.5") (f (quote ("rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.1") (d #t) (k 2)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4"))) (d #t) (k 0)) (d (n "wry") (r "^0.8") (d #t) (k 0)) (d (n "zip") (r "^0.5.12") (d #t) (k 0)))) (h "1nfrdf5hjicagbxil5qa3ma69chxhwz5k80j9wqnhdn1wyp2y4yj") (f (quote (("window-create") ("window-all") ("updater" "reqwest/default-tls") ("shell-open") ("shell-execute") ("shell-all") ("notification-all" "notify-rust") ("http-request") ("http-all") ("global-shortcut-all" "tauri-hotkey") ("fs-write-file") ("fs-write-binary-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-text-file") ("fs-read-dir") ("fs-read-binary-file") ("fs-path-api") ("fs-create-dir") ("fs-copy-file") ("fs-all") ("dialog-save") ("dialog-open") ("dialog-all") ("custom-protocol" "tauri-macros/custom-protocol") ("cli" "clap") ("api-all" "notification-all" "global-shortcut-all" "updater")))) (y #t)))

(define-public crate-tauri-1.0.0-beta-rc.3 (c (n "tauri") (v "1.0.0-beta-rc.3") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "clap") (r "=3.0.0-beta.2") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ignore") (r "^0.4.17") (d #t) (k 0)) (d (n "minisign-verify") (r "^0.1.8") (d #t) (k 0)) (d (n "mockito") (r "^0.30") (d #t) (k 2)) (d (n "notify-rust") (r "^4.3.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "open") (r "^1.7.0") (d #t) (k 0)) (d (n "os_pipe") (r "^0.9") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "multipart"))) (d #t) (k 0)) (d (n "rfd") (r "^0.3.0") (d #t) (k 0)) (d (n "semver") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "shared_child") (r "^0.3") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "tauri-hotkey") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "tauri-macros") (r "^1.0.0-beta-rc.0") (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.0-beta-rc.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tinyfiledialogs") (r "^3.3") (d #t) (k 0)) (d (n "tokio") (r "^1.5") (f (quote ("rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.1") (d #t) (k 2)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4"))) (d #t) (k 0)) (d (n "wry") (r "^0.8") (d #t) (k 0)) (d (n "zip") (r "^0.5.12") (d #t) (k 0)))) (h "076kfrqv8lkibr4wbas387x9qdkiz03xak8xs6pi48qzn8gf9xm9") (f (quote (("window-create") ("window-all") ("updater" "reqwest/default-tls") ("shell-open") ("shell-execute") ("shell-all") ("notification-all" "notify-rust") ("http-request") ("http-all") ("global-shortcut-all" "tauri-hotkey") ("fs-write-file") ("fs-write-binary-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-text-file") ("fs-read-dir") ("fs-read-binary-file") ("fs-path-api") ("fs-create-dir") ("fs-copy-file") ("fs-all") ("dialog-save") ("dialog-open") ("dialog-all") ("custom-protocol" "tauri-macros/custom-protocol") ("cli" "clap") ("api-all" "notification-all" "global-shortcut-all" "updater")))) (y #t)))

(define-public crate-tauri-1.0.0-beta-rc.4 (c (n "tauri") (v "1.0.0-beta-rc.4") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "clap") (r "=3.0.0-beta.2") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ignore") (r "^0.4.17") (d #t) (k 0)) (d (n "minisign-verify") (r "^0.1.8") (d #t) (k 0)) (d (n "mockito") (r "^0.30") (d #t) (k 2)) (d (n "notify-rust") (r "^4.3.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "open") (r "^1.7.0") (d #t) (k 0)) (d (n "os_pipe") (r "^0.9") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "multipart"))) (d #t) (k 0)) (d (n "rfd") (r "^0.3.0") (d #t) (k 0)) (d (n "semver") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "shared_child") (r "^0.3") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "tauri-hotkey") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "tauri-macros") (r "^1.0.0-beta-rc.1") (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.0-beta-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tinyfiledialogs") (r "^3.3") (d #t) (k 0)) (d (n "tokio") (r "^1.5") (f (quote ("rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.1") (d #t) (k 2)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4"))) (d #t) (k 0)) (d (n "wry") (r "^0.8") (d #t) (k 0)) (d (n "zip") (r "^0.5.12") (d #t) (k 0)))) (h "1x16x4lr59l90kn8flsizhfagszg4rvwnhhsw26ccrqjs3sxfc22") (f (quote (("window-create") ("window-all") ("updater" "reqwest/default-tls") ("shell-open") ("shell-execute") ("shell-all") ("notification-all" "notify-rust") ("http-request") ("http-all") ("global-shortcut-all" "tauri-hotkey") ("fs-write-file") ("fs-write-binary-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-text-file") ("fs-read-dir") ("fs-read-binary-file") ("fs-path-api") ("fs-create-dir") ("fs-copy-file") ("fs-all") ("dialog-save") ("dialog-open") ("dialog-all") ("custom-protocol" "tauri-macros/custom-protocol") ("cli" "clap") ("api-all" "notification-all" "global-shortcut-all" "updater")))) (y #t)))

(define-public crate-tauri-1.0.0-beta.0 (c (n "tauri") (v "1.0.0-beta.0") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "clap") (r "=3.0.0-beta.2") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ignore") (r "^0.4.17") (d #t) (k 0)) (d (n "image") (r "^0.23") (d #t) (k 0)) (d (n "minisign-verify") (r "^0.1.8") (d #t) (k 0)) (d (n "mockito") (r "^0.30") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "open") (r "^1.7.0") (d #t) (k 0)) (d (n "os_pipe") (r "^0.9") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "multipart"))) (d #t) (k 0)) (d (n "rfd") (r "^0.3.0") (d #t) (k 0)) (d (n "semver") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "shared_child") (r "^0.3") (d #t) (k 0)) (d (n "state") (r "^0.4") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "tauri-hotkey") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "tauri-macros") (r "^1.0.0-beta.0") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.1.0") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.0-beta.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tinyfiledialogs") (r "^3.3") (d #t) (k 0)) (d (n "tokio") (r "^1.5") (f (quote ("rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.1") (d #t) (k 2)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4"))) (d #t) (k 0)) (d (n "zip") (r "^0.5.12") (d #t) (k 0)))) (h "1slwxbjqfylak5jnngp0z22g6j7icrm85147qz0ih87ji77x96xa") (f (quote (("wry" "tauri-runtime-wry") ("window-create") ("window-all") ("updater" "reqwest/default-tls") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-open") ("shell-execute") ("shell-all") ("notification-all" "notify-rust") ("menu" "tauri-runtime/menu" "tauri-runtime-wry/menu") ("http-request") ("http-all") ("global-shortcut-all" "tauri-hotkey") ("fs-write-file") ("fs-write-binary-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-text-file") ("fs-read-dir") ("fs-read-binary-file") ("fs-path-api") ("fs-create-dir") ("fs-copy-file") ("fs-all") ("dox" "tauri-runtime-wry/dox") ("dialog-save") ("dialog-open") ("dialog-all") ("default" "wry") ("custom-protocol" "tauri-macros/custom-protocol") ("cli" "clap") ("api-all" "notification-all" "global-shortcut-all" "updater"))))))

(define-public crate-tauri-1.0.0-beta.1 (c (n "tauri") (v "1.0.0-beta.1") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "clap") (r "=3.0.0-beta.2") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ignore") (r "^0.4.17") (d #t) (k 0)) (d (n "image") (r "^0.23") (d #t) (k 0)) (d (n "minisign-verify") (r "^0.1.8") (d #t) (k 0)) (d (n "mockito") (r "^0.30") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "open") (r "^1.7.0") (d #t) (k 0)) (d (n "os_pipe") (r "^0.9") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "multipart"))) (d #t) (k 0)) (d (n "rfd") (r "^0.3.0") (d #t) (k 0)) (d (n "semver") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "shared_child") (r "^0.3") (d #t) (k 0)) (d (n "state") (r "^0.4") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "tauri-hotkey") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "tauri-macros") (r "^1.0.0-beta.1") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.1.1") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.0-beta.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tinyfiledialogs") (r "^3.3") (d #t) (k 0)) (d (n "tokio") (r "^1.5") (f (quote ("rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.1") (d #t) (k 2)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4"))) (d #t) (k 0)) (d (n "zip") (r "^0.5.12") (d #t) (k 0)))) (h "0xyvmxalmfw4mdisb95gyb2kn2lbk4davm18xdyb55j3krvhkp2g") (f (quote (("wry" "tauri-runtime-wry") ("window-create") ("window-all") ("updater" "reqwest/default-tls") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-open") ("shell-execute") ("shell-all") ("notification-all" "notify-rust") ("menu" "tauri-runtime/menu" "tauri-runtime-wry/menu") ("http-request") ("http-all") ("global-shortcut-all" "tauri-hotkey") ("fs-write-file") ("fs-write-binary-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-text-file") ("fs-read-dir") ("fs-read-binary-file") ("fs-path-api") ("fs-create-dir") ("fs-copy-file") ("fs-all") ("dox" "tauri-runtime-wry/dox") ("dialog-save") ("dialog-open") ("dialog-all") ("default" "wry") ("custom-protocol" "tauri-macros/custom-protocol") ("cli" "clap") ("api-all" "notification-all" "global-shortcut-all" "updater"))))))

(define-public crate-tauri-1.0.0-beta.2 (c (n "tauri") (v "1.0.0-beta.2") (d (list (d (n "attohttpc") (r "^0.17") (f (quote ("json" "form"))) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "clap") (r "=3.0.0-beta.2") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "either") (r "^1.6") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "minisign-verify") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.30") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "open") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "multipart"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.4") (d #t) (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "shared_child") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.0.0-beta.2") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.1.2") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.0-beta.1") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.7") (f (quote ("rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)) (d (n "zip") (r "^0.5") (d #t) (k 0)))) (h "02nn7z17f4hb76v7kr9zqzxkfk3fql84m7x6a60bl32kibw7qcw9") (f (quote (("wry" "tauri-runtime-wry") ("window-create") ("window-all") ("updater" "minisign-verify" "base64") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-open" "open") ("shell-execute" "shared_child" "os_pipe") ("shell-all" "shell-open" "shell-execute") ("reqwest-client" "reqwest" "bytes") ("notification-all" "notify-rust") ("menu" "tauri-runtime/menu" "tauri-runtime-wry/menu") ("http-request") ("http-all") ("global-shortcut-all") ("fs-write-file") ("fs-write-binary-file" "base64") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-text-file") ("fs-read-dir") ("fs-read-binary-file") ("fs-path") ("fs-create-dir") ("fs-copy-file") ("fs-all") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "raw-window-handle") ("dialog-open" "raw-window-handle") ("dialog-all" "dialog-open" "dialog-save") ("default" "wry") ("custom-protocol" "tauri-macros/custom-protocol") ("cli" "clap") ("api-all" "notification-all" "global-shortcut-all" "shell-all" "dialog-all" "updater"))))))

(define-public crate-tauri-1.0.0-beta.3 (c (n "tauri") (v "1.0.0-beta.3") (d (list (d (n "attohttpc") (r "^0.17") (f (quote ("json" "form"))) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "clap") (r "=3.0.0-beta.2") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "either") (r "^1.6") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "minisign-verify") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.30") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "open") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "multipart"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.4") (d #t) (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "shared_child") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.0.0-beta.3") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.1.3") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.0-beta.1") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.7") (f (quote ("rt" "rt-multi-thread" "sync" "fs"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)) (d (n "zip") (r "^0.5") (d #t) (k 0)))) (h "12lk617vj7xdwp81b04w3llqda7kfkfbvhxbxg0yqbbr8yy6545h") (f (quote (("wry" "tauri-runtime-wry") ("window-create") ("window-all") ("updater" "minisign-verify" "base64") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-open" "open") ("shell-execute" "shared_child" "os_pipe") ("shell-all" "shell-open" "shell-execute") ("reqwest-client" "reqwest" "bytes") ("notification-all" "notify-rust") ("menu" "tauri-runtime/menu" "tauri-runtime-wry/menu") ("http-request") ("http-all") ("global-shortcut-all") ("fs-write-file") ("fs-write-binary-file" "base64") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-text-file") ("fs-read-dir") ("fs-read-binary-file") ("fs-path") ("fs-create-dir") ("fs-copy-file") ("fs-all") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "raw-window-handle") ("dialog-open" "raw-window-handle") ("dialog-all" "dialog-open" "dialog-save") ("default" "wry") ("custom-protocol" "tauri-macros/custom-protocol") ("cli" "clap") ("api-all" "notification-all" "global-shortcut-all" "shell-all" "dialog-all" "updater"))))))

(define-public crate-tauri-1.0.0-beta.4 (c (n "tauri") (v "1.0.0-beta.4") (d (list (d (n "attohttpc") (r "^0.17") (f (quote ("json" "form"))) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "clap") (r "=3.0.0-beta.2") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "either") (r "^1.6") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "minisign-verify") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.30") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "open") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "multipart"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.4") (d #t) (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "shared_child") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.0.0-beta.3") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.1.3") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.0-beta.1") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.7") (f (quote ("rt" "rt-multi-thread" "sync" "fs"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)) (d (n "zip") (r "^0.5") (d #t) (k 0)))) (h "1dxayiznpcgxn4mvwr9d9k4c544v6v5sdif51c33smw4ybsd6bj0") (f (quote (("wry" "tauri-runtime-wry") ("window-create") ("window-all") ("updater" "minisign-verify" "base64") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-open" "open") ("shell-execute" "shared_child" "os_pipe") ("shell-all" "shell-open" "shell-execute") ("reqwest-client" "reqwest" "bytes") ("notification-all" "notify-rust") ("menu" "tauri-runtime/menu" "tauri-runtime-wry/menu") ("http-request") ("http-all") ("global-shortcut-all") ("fs-write-file") ("fs-write-binary-file" "base64") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-text-file") ("fs-read-dir") ("fs-read-binary-file") ("fs-path") ("fs-create-dir") ("fs-copy-file") ("fs-all") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "raw-window-handle") ("dialog-open" "raw-window-handle") ("dialog-all" "dialog-open" "dialog-save") ("default" "wry") ("custom-protocol" "tauri-macros/custom-protocol") ("cli" "clap") ("api-all" "notification-all" "global-shortcut-all" "shell-all" "dialog-all" "updater"))))))

(define-public crate-tauri-1.0.0-beta.5 (c (n "tauri") (v "1.0.0-beta.5") (d (list (d (n "attohttpc") (r "^0.17") (f (quote ("json" "form"))) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "clap") (r "=3.0.0-beta.2") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "either") (r "^1.6") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glib") (r "^0.10") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.9") (f (quote ("v3_16"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "minisign-verify") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.30") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "open") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "multipart"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.4") (d #t) (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "shared_child") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.0.0-beta.4") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.1.4") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.0-beta.2") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.7") (f (quote ("rt" "rt-multi-thread" "sync" "fs"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)) (d (n "zip") (r "^0.5") (d #t) (k 0)))) (h "0lf1qavg7q2glqxgq0adnbxyda9kw6kg9i38bg84nx14cjrhn5b4") (f (quote (("wry" "tauri-runtime-wry") ("window-create") ("window-all") ("updater" "minisign-verify" "base64") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-open" "open") ("shell-execute" "shared_child" "os_pipe") ("shell-all" "shell-open" "shell-execute") ("reqwest-client" "reqwest" "bytes") ("notification-all" "notify-rust") ("menu" "tauri-runtime/menu" "tauri-runtime-wry/menu") ("http-request") ("http-all") ("global-shortcut-all") ("fs-write-file") ("fs-write-binary-file" "base64") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-text-file") ("fs-read-dir") ("fs-read-binary-file") ("fs-path") ("fs-create-dir") ("fs-copy-file") ("fs-all") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "raw-window-handle") ("dialog-open" "raw-window-handle") ("dialog-all" "dialog-open" "dialog-save") ("default" "wry") ("custom-protocol" "tauri-macros/custom-protocol") ("cli" "clap") ("api-all" "notification-all" "global-shortcut-all" "shell-all" "dialog-all" "updater"))))))

(define-public crate-tauri-1.0.0-beta.6 (c (n "tauri") (v "1.0.0-beta.6") (d (list (d (n "attohttpc") (r "^0.17") (f (quote ("json" "form"))) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "clap") (r "=3.0.0-beta.2") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "either") (r "^1.6") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12") (d #t) (k 0)) (d (n "glib") (r "^0.14") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.14") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "minisign-verify") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.30") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "open") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3.0.6") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "multipart"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.4.3") (f (quote ("parent"))) (d #t) (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "shared_child") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.0.0-beta.5") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.2.0") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.0-beta.3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.9") (f (quote ("rt" "rt-multi-thread" "sync" "fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.9") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)) (d (n "zip") (r "^0.5") (d #t) (k 0)))) (h "1ykzhn0bay3z8z2sz60zawl340s43bmsy1wn70z50ih7fxgl5arr") (f (quote (("wry" "tauri-runtime-wry") ("window-create") ("window-all") ("updater" "minisign-verify" "base64") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-open" "open") ("shell-execute" "shared_child" "os_pipe") ("shell-all" "shell-open" "shell-execute") ("reqwest-client" "reqwest" "bytes") ("path-all") ("os-all" "os_info") ("notification-all" "notify-rust") ("http-request") ("http-all") ("global-shortcut-all") ("fs-write-file") ("fs-write-binary-file" "base64") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-text-file") ("fs-read-dir") ("fs-read-binary-file") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-write-binary-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "raw-window-handle") ("dialog-open" "raw-window-handle") ("dialog-all" "dialog-open" "dialog-save") ("default" "wry") ("custom-protocol" "tauri-macros/custom-protocol") ("cli" "clap") ("api-all" "notification-all" "global-shortcut-all" "shell-all" "os-all" "dialog-all" "updater" "path-all"))))))

(define-public crate-tauri-1.0.0-beta.7 (c (n "tauri") (v "1.0.0-beta.7") (d (list (d (n "attohttpc") (r "^0.17") (f (quote ("json" "form"))) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "clap") (r "=3.0.0-beta.2") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "either") (r "^1.6") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12") (d #t) (k 0)) (d (n "glib") (r "^0.14") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.14") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "minisign-verify") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.30") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "open") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3.0.6") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "multipart"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.4.3") (f (quote ("parent"))) (d #t) (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "shared_child") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.0.0-beta.5") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.2.0") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.0-beta.3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.9") (f (quote ("rt" "rt-multi-thread" "sync" "fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.9") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)) (d (n "zip") (r "^0.5") (d #t) (k 0)))) (h "1kvm7m0ib564mfds6nzji8lvx36w31l075ld4n36zbpcly824j5k") (f (quote (("wry" "tauri-runtime-wry") ("window-create") ("window-all") ("updater" "minisign-verify" "base64") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-open" "open") ("shell-execute" "shared_child" "os_pipe") ("shell-all" "shell-open" "shell-execute") ("reqwest-client" "reqwest" "bytes") ("path-all") ("os-all" "os_info") ("notification-all" "notify-rust") ("http-request") ("http-all") ("global-shortcut-all") ("fs-write-file") ("fs-write-binary-file" "base64") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-text-file") ("fs-read-dir") ("fs-read-binary-file") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-write-binary-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save") ("dialog-open") ("dialog-all" "dialog-open" "dialog-save") ("default" "wry") ("custom-protocol" "tauri-macros/custom-protocol") ("cli" "clap") ("api-all" "notification-all" "global-shortcut-all" "shell-all" "os-all" "dialog-all" "updater" "path-all"))))))

(define-public crate-tauri-1.0.0-beta.8 (c (n "tauri") (v "1.0.0-beta.8") (d (list (d (n "attohttpc") (r "^0.17") (f (quote ("json" "form"))) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "clap") (r "=3.0.0-beta.2") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "either") (r "^1.6") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12") (d #t) (k 0)) (d (n "glib") (r "^0.14") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "gtk") (r "^0.14") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "minisign-verify") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.30") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "open") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3.0.6") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "multipart"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.4.3") (f (quote ("parent"))) (d #t) (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "shared_child") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.0.0-beta.5") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.2.1") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.0-beta.3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.9") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.9") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)) (d (n "zip") (r "^0.5") (d #t) (k 0)))) (h "02fy1r87l0dj2kiibsg1hqblm3wbdgbncg6xj3z87f3grjfmg83r") (f (quote (("wry" "tauri-runtime-wry") ("window-create") ("window-all") ("updater" "minisign-verify" "base64") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-open" "open") ("shell-execute" "shared_child" "os_pipe") ("shell-all" "shell-open" "shell-execute") ("reqwest-client" "reqwest" "bytes") ("path-all") ("os-all" "os_info") ("notification-all" "notify-rust") ("http-request") ("http-all") ("global-shortcut-all") ("fs-write-file") ("fs-write-binary-file" "base64") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-text-file") ("fs-read-dir") ("fs-read-binary-file") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-write-binary-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save") ("dialog-open") ("dialog-all" "dialog-open" "dialog-save") ("default" "wry") ("custom-protocol" "tauri-macros/custom-protocol") ("cli" "clap") ("api-all" "notification-all" "global-shortcut-all" "shell-all" "os-all" "dialog-all" "updater" "path-all"))))))

(define-public crate-tauri-1.0.0-rc.0 (c (n "tauri") (v "1.0.0-rc.0") (d (list (d (n "attohttpc") (r "^0.18") (f (quote ("json" "form"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "data-url") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "either") (r "^1.6") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.30") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.9") (d #t) (k 0)) (d (n "open") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.4.2") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "multipart"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.7.0") (f (quote ("parent"))) (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.0.0-rc.0") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.3.0") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.0-rc.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)) (d (n "windows") (r "^0.30.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 2)) (d (n "zip") (r "^0.5") (d #t) (k 0)))) (h "1x0nksl0miwk4kzmzmqlsq4izm95yjdw7iylp9walmfqqfylpk85") (f (quote (("wry" "tauri-runtime-wry") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-min-size") ("window-set-max-size") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-start-dragging" "window-print") ("updater" "minisign-verify" "base64" "http-api" "dialog-ask") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "command" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "command" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-client" "reqwest" "bytes") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-all" "os_info") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("http-request" "http-api") ("http-api" "attohttpc") ("http-all" "http-request") ("global-shortcut-all") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression") ("custom-protocol" "tauri-macros/custom-protocol") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("command" "shared_child" "os_pipe") ("clipboard-write-text") ("clipboard-read-text") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("cli" "clap") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all")))) (r "1.57")))

(define-public crate-tauri-1.0.0-rc.1 (c (n "tauri") (v "1.0.0-rc.1") (d (list (d (n "attohttpc") (r "^0.18") (f (quote ("json" "form"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "data-url") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "either") (r "^1.6") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.30") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.9") (d #t) (k 0)) (d (n "open") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.4.2") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "multipart"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.7.0") (f (quote ("parent"))) (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.0.0-rc.1") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.3.1") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)) (d (n "windows") (r "^0.30.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 2)) (d (n "zip") (r "^0.5") (d #t) (k 0)))) (h "0qmi2hdsqk0gq83nxaf48sy3lwwpd5m695hkslfzjdlbfk373469") (f (quote (("wry" "tauri-runtime-wry") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-min-size") ("window-set-max-size") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-start-dragging" "window-print") ("updater" "minisign-verify" "base64" "http-api" "dialog-ask") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "command" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "command" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-client" "reqwest" "bytes") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-all" "os_info") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("http-request" "http-api") ("http-api" "attohttpc") ("http-all" "http-request") ("global-shortcut-all") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression") ("custom-protocol" "tauri-macros/custom-protocol") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("command" "shared_child" "os_pipe") ("clipboard-write-text") ("clipboard-read-text") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("cli" "clap") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all")))) (r "1.57")))

(define-public crate-tauri-1.0.0-rc.2 (c (n "tauri") (v "1.0.0-rc.2") (d (list (d (n "attohttpc") (r "^0.18") (f (quote ("json" "form"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "data-url") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "either") (r "^1.6") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.30") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.9") (d #t) (k 0)) (d (n "open") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.4.2") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "multipart"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.7.0") (f (quote ("parent"))) (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.0.0-rc.1") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.3.1") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.0-rc.1") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)) (d (n "windows") (r "^0.30.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 2)) (d (n "zip") (r "^0.5") (d #t) (k 0)))) (h "0ldv6vpbas5sx82gy54rx31m57za50py8gxvkiczgx6irw5xww9m") (f (quote (("wry" "tauri-runtime-wry") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-min-size") ("window-set-max-size") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-start-dragging" "window-print") ("updater" "minisign-verify" "base64" "http-api" "dialog-ask") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "command" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "command" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-client" "reqwest" "bytes") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-all" "os_info") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("http-request" "http-api") ("http-api" "attohttpc") ("http-all" "http-request") ("global-shortcut-all") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression") ("custom-protocol" "tauri-macros/custom-protocol") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("command" "shared_child" "os_pipe") ("clipboard-write-text") ("clipboard-read-text") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("cli" "clap") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all")))) (r "1.57")))

(define-public crate-tauri-1.0.0-rc.3 (c (n "tauri") (v "1.0.0-rc.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.18") (f (quote ("json" "form"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "data-url") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "either") (r "^1.6") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.30") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.9") (d #t) (k 0)) (d (n "open") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.4.2") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "multipart"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.7.0") (f (quote ("parent"))) (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.0.0-rc.2") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.3.2") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.0-rc.2") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)) (d (n "windows") (r "^0.30.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 2)) (d (n "zip") (r "^0.5") (d #t) (k 0)))) (h "1r5wylhxk5rz375f9k66iv8b6bqkz01fjk4p7v6056qzzm7ll35v") (f (quote (("wry" "tauri-runtime-wry") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-min-size") ("window-set-max-size") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-start-dragging" "window-print") ("updater" "minisign-verify" "base64" "http-api" "dialog-ask") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "command" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "command" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-client" "reqwest" "bytes") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-all" "os_info") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("http-request" "http-api") ("http-api" "attohttpc") ("http-all" "http-request") ("global-shortcut-all") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression") ("custom-protocol" "tauri-macros/custom-protocol") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("command" "shared_child" "os_pipe") ("clipboard-write-text") ("clipboard-read-text") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("cli" "clap") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all")))) (r "1.57")))

(define-public crate-tauri-1.0.0-rc.4 (c (n "tauri") (v "1.0.0-rc.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.18") (f (quote ("json" "form"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "data-url") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "either") (r "^1.6") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "infer") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.4") (o #t) (d #t) (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.30") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.9") (d #t) (k 0)) (d (n "open") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "png") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.4.2") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "multipart"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.7.0") (f (quote ("parent"))) (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.0.0-rc.3") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.3.3") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.0-rc.3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)) (d (n "windows") (r "^0.30.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.5") (o #t) (k 0)))) (h "0bn8anv37x8nxsb8hw31rg329lrq83r647b73gh437787n5sf4hi") (f (quote (("wry" "tauri-runtime-wry") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-min-size") ("window-set-max-size") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-start-dragging" "window-print") ("updater" "minisign-verify" "base64" "http-api" "dialog-ask" "fs-extract-api") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-client" "reqwest" "bytes") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe" "memchr") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-all" "os_info") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-api" "attohttpc") ("http-all" "http-request") ("global-shortcut-all") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text") ("clipboard-read-text") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("cli" "clap") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all") ("__updater-docs" "minisign-verify" "base64" "http-api" "dialog-ask") ("__isolation-docs" "tauri-utils/__isolation-docs" "tauri-macros/__isolation-docs")))) (r "1.57")))

(define-public crate-tauri-1.0.0-rc.5 (c (n "tauri") (v "1.0.0-rc.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.18") (f (quote ("json" "form"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "data-url") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "either") (r "^1.6") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "infer") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.4") (o #t) (d #t) (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "open") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.4.2") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "multipart" "stream"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "tar") (r "^0.4.36") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.0.0-rc.4") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.3.4") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.0-rc.4") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)) (d (n "windows") (r "^0.30.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "1wp1gds9dwvgmbnp92wmmz2dx0fbzjbxkjyr58iarbdx6w2a6dx7") (f (quote (("wry" "tauri-runtime-wry") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-min-size") ("window-set-max-size") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-start-dragging" "window-print") ("updater" "minisign-verify" "base64" "http-api" "dialog-ask" "fs-extract-api") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-client" "reqwest" "bytes") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe" "memchr") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-all" "os_info") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-api" "attohttpc") ("http-all" "http-request") ("global-shortcut-all") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text") ("clipboard-read-text") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("cli" "clap") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all") ("__updater-docs" "minisign-verify" "base64" "http-api" "dialog-ask")))) (r "1.57")))

(define-public crate-tauri-1.0.0-rc.6 (c (n "tauri") (v "1.0.0-rc.6") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.18") (f (quote ("json" "form"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "data-url") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "either") (r "^1.6") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "infer") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.4") (o #t) (d #t) (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "open") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.4.2") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "multipart" "stream"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "tar") (r "^0.4.36") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.0.0-rc.4") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.3.4") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.0-rc.4") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)) (d (n "windows") (r "^0.30.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "01rhrxm1vcklx5cilmrxdrild9223cvy359d03i0g6iz9fii9mgn") (f (quote (("wry" "tauri-runtime-wry") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-min-size") ("window-set-max-size") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-start-dragging" "window-print") ("updater" "minisign-verify" "base64" "http-api" "dialog-ask" "fs-extract-api") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-client" "reqwest" "bytes") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe" "memchr") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-all" "os_info") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-api" "attohttpc") ("http-all" "http-request") ("global-shortcut-all") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text") ("clipboard-read-text") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("cli" "clap") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all") ("__updater-docs" "minisign-verify" "base64" "http-api" "dialog-ask")))) (r "1.57")))

(define-public crate-tauri-1.0.0-rc.7 (c (n "tauri") (v "1.0.0-rc.7") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.19") (f (quote ("json" "form"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "data-url") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "either") (r "^1.6") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "infer") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (k 1)) (d (n "open") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.4.2") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "tar") (r "^0.4.36") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.0.0-rc.5") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.4.0") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.0-rc.5") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "windows") (r "^0.30.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "0bybv9vz6priv3s5sch1hq5zg9x9jx100m6dnzpwx9v3hcmhv082") (f (quote (("wry" "tauri-runtime-wry") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-min-size") ("window-set-max-size") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-start-dragging" "window-print") ("updater" "minisign-verify" "base64" "http-api" "dialog-ask" "fs-extract-api") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-client" "reqwest" "bytes") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-all" "os_info") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "attohttpc/multipart-form" "reqwest/multipart") ("http-api" "attohttpc") ("http-all" "http-request") ("gtk-tray" "tauri-runtime-wry/gtk-tray") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception" "ayatana-tray") ("custom-protocol" "tauri-macros/custom-protocol") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("ayatana-tray" "tauri-runtime-wry/ayatana-tray") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all") ("__updater-docs" "minisign-verify" "base64" "http-api" "dialog-ask")))) (r "1.57")))

(define-public crate-tauri-1.0.0-rc.8 (c (n "tauri") (v "1.0.0-rc.8") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.19") (f (quote ("json" "form"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "data-url") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "infer") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (k 1)) (d (n "open") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.4.2") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "tar") (r "^0.4.36") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.0.0-rc.5") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.4.0") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.0-rc.5") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "windows") (r "^0.30.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "0jh7sd7zj96sqm7i68cp26d117bvh2y8bsjipg0vjad2bh27hyak") (f (quote (("wry" "tauri-runtime-wry") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-min-size") ("window-set-max-size") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-start-dragging" "window-print") ("updater" "minisign-verify" "base64" "http-api" "dialog-ask" "fs-extract-api") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-client" "reqwest" "bytes") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-all" "os_info") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "attohttpc/multipart-form" "reqwest/multipart") ("http-api" "attohttpc") ("http-all" "http-request") ("gtk-tray" "tauri-runtime-wry/gtk-tray") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("ayatana-tray" "tauri-runtime-wry/ayatana-tray") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all") ("__updater-docs" "minisign-verify" "base64" "http-api" "dialog-ask") ("__fs-extract-api-docs")))) (r "1.57")))

(define-public crate-tauri-1.0.0-rc.9 (c (n "tauri") (v "1.0.0-rc.9") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.19") (f (quote ("json" "form"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "infer") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (f (quote ("d"))) (o #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (k 1)) (d (n "open") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.4.2") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "tar") (r "^0.4.36") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.0.0-rc.6") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.5.0") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.0-rc.6") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.17") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.13.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.30.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "05rnsg2mv6js00mrs52hsnnz8dj3kiqb26d3m85j7q5y1r5fyk53") (f (quote (("wry" "tauri-runtime-wry") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-min-size") ("window-set-max-size") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-start-dragging" "window-print") ("updater" "minisign-verify" "base64" "http-api" "dialog-ask" "fs-extract-api") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-client" "reqwest" "bytes") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-all" "os_info") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "attohttpc/multipart-form" "reqwest/multipart") ("http-api" "attohttpc") ("http-all" "http-request") ("gtk-tray" "tauri-runtime-wry/gtk-tray") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("ayatana-tray" "tauri-runtime-wry/ayatana-tray") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all") ("__updater-docs" "minisign-verify" "base64" "http-api" "dialog-ask") ("__fs-extract-api-docs")))) (r "1.57")))

(define-public crate-tauri-1.0.0-rc.10 (c (n "tauri") (v "1.0.0-rc.10") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.19") (f (quote ("json" "form"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "infer") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (f (quote ("d"))) (o #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (k 1)) (d (n "open") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.4.2") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "tar") (r "^0.4.36") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.0.0-rc.6") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.5.0") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.0-rc.6") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.13.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.30.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "0my26hhkf2f74p2p0nsib7is25f5mj3wpcc2yi56hqrm6inv2nkd") (f (quote (("wry" "tauri-runtime-wry") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-min-size") ("window-set-max-size") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-start-dragging" "window-print") ("updater" "minisign-verify" "base64" "http-api" "dialog-ask" "fs-extract-api") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-client" "reqwest" "bytes") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-all" "os_info") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "attohttpc/multipart-form" "reqwest/multipart") ("http-api" "attohttpc") ("http-all" "http-request") ("gtk-tray" "tauri-runtime-wry/gtk-tray") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("ayatana-tray" "tauri-runtime-wry/ayatana-tray") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all") ("__updater-docs" "minisign-verify" "base64" "http-api" "dialog-ask") ("__fs-extract-api-docs")))) (r "1.57")))

(define-public crate-tauri-1.0.0-rc.11 (c (n "tauri") (v "1.0.0-rc.11") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.19") (f (quote ("json" "form"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "infer") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (f (quote ("d"))) (o #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (k 1)) (d (n "open") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.4.2") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "tar") (r "^0.4.36") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.0.0-rc.7") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.5.1") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.5.2") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.0-rc.7") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.13.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.30.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "10if7savjy4vbvy91y8h6s67ri0zl1rddbcc51x3n7qry853bix4") (f (quote (("wry" "tauri-runtime-wry") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-min-size") ("window-set-max-size") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-start-dragging" "window-print") ("updater" "minisign-verify" "base64" "http-api" "dialog-ask" "fs-extract-api") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-client" "reqwest" "bytes") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-all" "os_info") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "attohttpc/multipart-form" "reqwest/multipart") ("http-api" "attohttpc") ("http-all" "http-request") ("gtk-tray" "tauri-runtime-wry/gtk-tray") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("ayatana-tray" "tauri-runtime-wry/ayatana-tray") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all") ("__updater-docs" "minisign-verify" "base64" "http-api" "dialog-ask") ("__fs-extract-api-docs")))) (r "1.57")))

(define-public crate-tauri-1.0.0-rc.12 (c (n "tauri") (v "1.0.0-rc.12") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.19") (f (quote ("json" "form"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "infer") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (f (quote ("d"))) (o #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (k 1)) (d (n "open") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.4.2") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "tar") (r "^0.4.36") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.0.0-rc.7") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.6.0") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.0-rc.7") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.16.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.37.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "1c2hf8qdl480nl3h3cyqhzylkhlcil01dvfxsa38qixxcns82dq7") (f (quote (("wry" "tauri-runtime-wry") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-min-size") ("window-set-max-size") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-start-dragging" "window-print") ("updater" "minisign-verify" "base64" "http-api" "dialog-ask" "fs-extract-api") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-client" "reqwest" "bytes") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-all" "os_info") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "attohttpc/multipart-form" "reqwest/multipart") ("http-api" "attohttpc") ("http-all" "http-request") ("gtk-tray" "tauri-runtime-wry/gtk-tray") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("ayatana-tray" "tauri-runtime-wry/ayatana-tray") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all")))) (r "1.57")))

(define-public crate-tauri-1.0.0-rc.13 (c (n "tauri") (v "1.0.0-rc.13") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.19") (f (quote ("json" "form"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "infer") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (f (quote ("d"))) (o #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (k 1)) (d (n "open") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.4.2") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "tar") (r "^0.4.36") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.0.0-rc.7") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.6.0") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.0-rc.7") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.16.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.37.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "0mhsap0mqlmafr3lvs8c4mr3hb5skp8vmdk9sn79vn5pz2yj2pa9") (f (quote (("wry" "tauri-runtime-wry") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-min-size") ("window-set-max-size") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-start-dragging" "window-print") ("updater" "minisign-verify" "base64" "http-api" "dialog-ask" "fs-extract-api") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-client" "reqwest" "bytes") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-all" "os_info") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "attohttpc/multipart-form" "reqwest/multipart") ("http-api" "attohttpc") ("http-all" "http-request") ("gtk-tray" "tauri-runtime-wry/gtk-tray") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("ayatana-tray" "tauri-runtime-wry/ayatana-tray") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all")))) (r "1.57")))

(define-public crate-tauri-1.0.0-rc.14 (c (n "tauri") (v "1.0.0-rc.14") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.19") (f (quote ("json" "form"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "infer") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (f (quote ("d"))) (o #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (k 1)) (d (n "open") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3.2.0") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.4.2") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "tar") (r "^0.4.36") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.0.0-rc.8") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.6.0") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.0-rc.8") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing" "formatting"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.16.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.37.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "0kzy83fykpyyxbxbnmhpdgnip48y6cy2xyb8larxl27rhy50ibw1") (f (quote (("wry" "tauri-runtime-wry") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-min-size") ("window-set-max-size") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-start-dragging" "window-print") ("updater" "minisign-verify" "time" "base64" "http-api" "dialog-ask" "fs-extract-api") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-client" "reqwest" "bytes") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-all" "os_info") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "attohttpc/multipart-form" "reqwest/multipart") ("http-api" "attohttpc") ("http-all" "http-request") ("gtk-tray" "tauri-runtime-wry/gtk-tray") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("ayatana-tray" "tauri-runtime-wry/ayatana-tray") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all")))) (r "1.57")))

(define-public crate-tauri-1.0.0-rc.15 (c (n "tauri") (v "1.0.0-rc.15") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.19") (f (quote ("json" "form"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "infer") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (f (quote ("d"))) (o #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 1)) (d (n "open") (r "^3.0") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3.4.0") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.4.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.6") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.0.0-rc.9") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.7.0") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.0-rc.9") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing" "formatting"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.16.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.37.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "0hfvgcvgia3i9a2q53z4flhz7d812yvfc3haivpr3lczw2akwlyb") (f (quote (("wry" "tauri-runtime-wry") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-min-size") ("window-set-max-size") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-start-dragging" "window-print") ("updater" "minisign-verify" "time" "base64" "http-api" "dialog-ask" "fs-extract-api") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-client" "reqwest" "bytes") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-all" "os_info") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "attohttpc/multipart-form" "reqwest/multipart") ("http-api" "attohttpc") ("http-all" "http-request") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all")))) (r "1.57")))

(define-public crate-tauri-1.0.0-rc.16 (c (n "tauri") (v "1.0.0-rc.16") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.19") (f (quote ("json" "form"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "infer") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (f (quote ("d"))) (o #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 1)) (d (n "open") (r "^3.0") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3.4.0") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.4.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.6") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.0.0-rc.10") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.8.0") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.0-rc.9") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing" "formatting"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.16.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.37.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "1xj27qnhxqfw3vl01m5zlg1mcx0a4kmbfic3cxs3qwfzxgr7cx9w") (f (quote (("wry" "tauri-runtime-wry") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-min-size") ("window-set-max-size") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-start-dragging" "window-print") ("updater" "minisign-verify" "time" "base64" "http-api" "dialog-ask" "fs-extract-api") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-client" "reqwest" "bytes") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-all" "os_info") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "attohttpc/multipart-form" "reqwest/multipart") ("http-api" "attohttpc") ("http-all" "http-request") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all")))) (r "1.57")))

(define-public crate-tauri-1.0.0-rc.17 (c (n "tauri") (v "1.0.0-rc.17") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.19") (f (quote ("json" "form"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "infer") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (f (quote ("d"))) (o #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 1)) (d (n "open") (r "^3.0") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3.4.0") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.4.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.6") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.0.0-rc.11") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.8.1") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.0-rc.9") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing" "formatting"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.16.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.37.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "19f2k0pggqy0a38jny94n1cvnsbaxjv8vk1ffbrmr1pxn3mjl9lc") (f (quote (("wry" "tauri-runtime-wry") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-min-size") ("window-set-max-size") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-start-dragging" "window-print") ("updater" "minisign-verify" "time" "base64" "http-api" "dialog-ask" "fs-extract-api") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-client" "reqwest" "bytes") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-all" "os_info") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "attohttpc/multipart-form" "reqwest/multipart") ("http-api" "attohttpc") ("http-all" "http-request") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all")))) (r "1.57")))

(define-public crate-tauri-1.0.0 (c (n "tauri") (v "1.0.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.19") (f (quote ("json" "form"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "infer") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (f (quote ("d"))) (o #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 1)) (d (n "open") (r "^3.0") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3.4.0") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.4.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.6") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.0.0") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.9.0") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.0") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing" "formatting"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.16.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.37.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "18db3jc57m91c2mj59xsfax6wypszll7g6zza59ns94gpdhbn7lf") (f (quote (("wry" "tauri-runtime-wry") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-min-size") ("window-set-max-size") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-start-dragging" "window-print") ("updater" "minisign-verify" "time" "base64" "http-api" "dialog-ask" "fs-extract-api") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-client" "reqwest" "bytes") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-all" "os_info") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "attohttpc/multipart-form" "reqwest/multipart") ("http-api" "attohttpc") ("http-all" "http-request") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all")))) (r "1.57")))

(define-public crate-tauri-1.0.1 (c (n "tauri") (v "1.0.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.19") (f (quote ("json" "form"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "infer") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (f (quote ("d"))) (o #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 1)) (d (n "open") (r "^3.0") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3.4.0") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.4.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.6") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.0.1") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.10.0") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.1") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing" "formatting"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.16.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "win7-notifications") (r "^0.3.0") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.37.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "1xwwdyk2bryrp1yp3jdpnl73jhdb9z5f682ypvpvpwk92bk8azx2") (f (quote (("wry" "tauri-runtime-wry") ("windows7-compat" "win7-notifications") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-min-size") ("window-set-max-size") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-start-dragging" "window-print") ("updater" "minisign-verify" "time" "base64" "http-api" "dialog-ask" "fs-extract-api") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-client" "reqwest" "bytes") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-all" "os_info") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "attohttpc/multipart-form" "reqwest/multipart") ("http-api" "attohttpc") ("http-all" "http-request") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all")))) (r "1.57")))

(define-public crate-tauri-1.0.2 (c (n "tauri") (v "1.0.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.19") (f (quote ("json" "form"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "infer") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (f (quote ("d"))) (o #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 1)) (d (n "open") (r "^3.0") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3.4.0") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.4.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.6") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.0.2") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.10.1") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.2") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing" "formatting"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.16.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "win7-notifications") (r "^0.3.0") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.37.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "1s8fw448wbxjq7pfac7bgfsvpv755jj52qc861ar6d4xakn425j2") (f (quote (("wry" "tauri-runtime-wry") ("windows7-compat" "win7-notifications") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-min-size") ("window-set-max-size") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-start-dragging" "window-print") ("updater" "minisign-verify" "time" "base64" "http-api" "dialog-ask" "fs-extract-api") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-client" "reqwest" "bytes") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-all" "os_info") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "attohttpc/multipart-form" "reqwest/multipart") ("http-api" "attohttpc") ("http-all" "http-request") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all")))) (r "1.57")))

(define-public crate-tauri-1.0.3 (c (n "tauri") (v "1.0.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.19") (f (quote ("json" "form"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "infer") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (f (quote ("d"))) (o #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 1)) (d (n "open") (r "^3.0") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3.4.0") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.4.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.6") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.0.3") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.10.2") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.3") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing" "formatting"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.16.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "win7-notifications") (r "^0.3.0") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.37.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "1ml64d3935hvksiqjad0knl9gmrdswn2s86dmv008b5xw08w47yn") (f (quote (("wry" "tauri-runtime-wry") ("windows7-compat" "win7-notifications") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-min-size") ("window-set-max-size") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-start-dragging" "window-print") ("updater" "minisign-verify" "time" "base64" "http-api" "dialog-ask" "fs-extract-api") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-client" "reqwest" "bytes") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-all" "os_info") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "attohttpc/multipart-form" "reqwest/multipart") ("http-api" "attohttpc") ("http-all" "http-request") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all")))) (r "1.57")))

(define-public crate-tauri-1.0.4 (c (n "tauri") (v "1.0.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.19") (f (quote ("json" "form"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "infer") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (f (quote ("d"))) (o #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 1)) (d (n "open") (r "^3.0") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3.4.0") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.4.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.6") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.0.4") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.10.2") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.3") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing" "formatting"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.16.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "win7-notifications") (r "^0.3.0") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.37.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "10vc63f2qzxh9m51m34z1nq4mfb51p2gziz59dlpc0nl7nyn2zw2") (f (quote (("wry" "tauri-runtime-wry") ("windows7-compat" "win7-notifications") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-min-size") ("window-set-max-size") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-start-dragging" "window-print") ("updater" "minisign-verify" "time" "base64" "http-api" "dialog-ask" "fs-extract-api") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-client" "reqwest" "bytes") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-all" "os_info") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "attohttpc/multipart-form" "reqwest/multipart") ("http-api" "attohttpc") ("http-all" "http-request") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all")))) (r "1.57")))

(define-public crate-tauri-1.0.5 (c (n "tauri") (v "1.0.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.19") (f (quote ("json" "form"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "infer") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (f (quote ("d"))) (o #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 1)) (d (n "open") (r "^3.0") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3.4.0") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.4.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.6") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.0.4") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.10.2") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.3") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing" "formatting"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.16.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "win7-notifications") (r "^0.3.0") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.37.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "1p8sbhra05w20zhvwis4qx8c0dj4kc8105nk5dlc4sah2a5nm9g1") (f (quote (("wry" "tauri-runtime-wry") ("windows7-compat" "win7-notifications") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-min-size") ("window-set-max-size") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-start-dragging" "window-print") ("updater" "minisign-verify" "time" "base64" "http-api" "dialog-ask" "fs-extract-api") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-client" "reqwest" "bytes") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-all" "os_info") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "attohttpc/multipart-form" "reqwest/multipart") ("http-api" "attohttpc") ("http-all" "http-request") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all")))) (r "1.57")))

(define-public crate-tauri-1.1.0 (c (n "tauri") (v "1.1.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.22") (f (quote ("compress" "json" "form"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "encoding_rs") (r "^0.8.31") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "infer") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (f (quote ("d"))) (o #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 1)) (d (n "open") (r "^3.0") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3.5.0") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.10") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.1.0") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.11.0") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.1.0") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing" "formatting"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "win7-notifications") (r "^0.3.1") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "0nq30c7ac206v698lvk9401s1xjw9nxgydzj73zk3f6s3h5s84qn") (f (quote (("wry" "tauri-runtime-wry") ("windows7-compat" "win7-notifications") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-min-size") ("window-set-max-size") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-start-dragging" "window-print") ("updater" "minisign-verify" "time" "base64" "http-api" "dialog-ask" "fs-extract-api") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-native-tls-vendored" "reqwest-client" "reqwest/native-tls-vendored") ("reqwest-client" "reqwest" "bytes") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-all" "os_info") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust") ("native-tls-vendored" "attohttpc/tls-vendored") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "attohttpc/multipart-form" "reqwest/multipart") ("http-api" "attohttpc") ("http-all" "http-request") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-exists") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-exists" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all")))) (r "1.57")))

(define-public crate-tauri-1.0.6 (c (n "tauri") (v "1.0.6") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.19") (f (quote ("json" "form"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "infer") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (f (quote ("d"))) (o #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 1)) (d (n "open") (r "^3.0") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3.4.0") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.4.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.6") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.0.4") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.10.2") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.3") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing" "formatting"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.16.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "win7-notifications") (r "^0.3.0") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.37.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "0ixs14jibw0yybz8m53ybas72gzk3ajylqzh1s6yaaqysy46man0") (f (quote (("wry" "tauri-runtime-wry") ("windows7-compat" "win7-notifications") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-min-size") ("window-set-max-size") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-start-dragging" "window-print") ("updater" "minisign-verify" "time" "base64" "http-api" "dialog-ask" "fs-extract-api") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-client" "reqwest" "bytes") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-all" "os_info") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "attohttpc/multipart-form" "reqwest/multipart") ("http-api" "attohttpc") ("http-all" "http-request") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all")))) (r "1.57")))

(define-public crate-tauri-1.1.1 (c (n "tauri") (v "1.1.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.22") (f (quote ("compress" "json" "form"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "encoding_rs") (r "^0.8.31") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "infer") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (f (quote ("d"))) (o #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 1)) (d (n "open") (r "^3.0") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3.5.0") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.10") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.1.1") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.11.1") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.1.1") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing" "formatting"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "win7-notifications") (r "^0.3.1") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "1smwlxqvzcmhv0hpv878fcpqk4y0njfpzmzc5fdwm58xssmj5gzg") (f (quote (("wry" "tauri-runtime-wry") ("windows7-compat" "win7-notifications") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-min-size") ("window-set-max-size") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-start-dragging" "window-print") ("updater" "minisign-verify" "time" "base64" "http-api" "dialog-ask" "fs-extract-api") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-native-tls-vendored" "reqwest-client" "reqwest/native-tls-vendored") ("reqwest-client" "reqwest" "bytes") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-all" "os_info") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust") ("native-tls-vendored" "attohttpc/tls-vendored") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "attohttpc/multipart-form" "reqwest/multipart") ("http-api" "attohttpc") ("http-all" "http-request") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-exists") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-exists" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all")))) (r "1.57")))

(define-public crate-tauri-1.2.0 (c (n "tauri") (v "1.2.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.22") (f (quote ("compress" "json" "form"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "encoding_rs") (r "^0.8.31") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "infer") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (f (quote ("d"))) (o #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 1)) (d (n "open") (r "^3.0") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3.5.0") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.2") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.10") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.2.0") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.12.0") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.2.0") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing" "formatting"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18.2") (f (quote ("v2_36"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "win7-notifications") (r "^0.3.1") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "0766g7x2p5b6j7bxcd3yd64m60lddxjhsnmrvcgdjfwjq92mw4xc") (f (quote (("wry" "tauri-runtime-wry") ("windows7-compat" "win7-notifications") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-min-size") ("window-set-max-size") ("window-set-ignore-cursor-events") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-set-ignore-cursor-events" "window-start-dragging" "window-print") ("updater" "minisign-verify" "time" "base64" "http-api" "dialog-ask" "fs-extract-api") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-native-tls-vendored" "reqwest-client" "reqwest/native-tls-vendored") ("reqwest-client" "reqwest" "bytes") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-all" "os_info") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust") ("native-tls-vendored" "attohttpc/tls-vendored") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "attohttpc/multipart-form" "reqwest/multipart") ("http-api" "attohttpc") ("http-all" "http-request") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-exists") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-exists" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("app-show") ("app-hide") ("app-all" "app-show" "app-hide") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all" "app-all")))) (r "1.59")))

(define-public crate-tauri-1.0.7 (c (n "tauri") (v "1.0.7") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.19") (f (quote ("json" "form"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "infer") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (f (quote ("d"))) (o #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 1)) (d (n "open") (r "^3.0") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3.4.0") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.4.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.6") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.0.4") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.10.2") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.3") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing" "formatting"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.16.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "win7-notifications") (r "^0.3.0") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.37.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "1ijbdlk8v0jq6b58zvrm7jjwv9yjd1jlxi2dw664w5l880rkwp7p") (f (quote (("wry" "tauri-runtime-wry") ("windows7-compat" "win7-notifications") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-min-size") ("window-set-max-size") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-start-dragging" "window-print") ("updater" "minisign-verify" "time" "base64" "http-api" "dialog-ask" "fs-extract-api") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-client" "reqwest" "bytes") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-all" "os_info") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "attohttpc/multipart-form" "reqwest/multipart") ("http-api" "attohttpc") ("http-all" "http-request") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all")))) (r "1.57")))

(define-public crate-tauri-1.1.2 (c (n "tauri") (v "1.1.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.22") (f (quote ("compress" "json" "form"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "encoding_rs") (r "^0.8.31") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "infer") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (f (quote ("d"))) (o #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 1)) (d (n "open") (r "^3.0") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3.5.0") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.10") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.1.1") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.11.1") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.1.1") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing" "formatting"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "win7-notifications") (r "^0.3.1") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "0r394dq3brrhddlgcq7l3rwc8wz7jn3vmmlnizjl71d2f5r0zmwg") (f (quote (("wry" "tauri-runtime-wry") ("windows7-compat" "win7-notifications") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-min-size") ("window-set-max-size") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-start-dragging" "window-print") ("updater" "minisign-verify" "time" "base64" "http-api" "dialog-ask" "fs-extract-api") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-native-tls-vendored" "reqwest-client" "reqwest/native-tls-vendored") ("reqwest-client" "reqwest" "bytes") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-all" "os_info") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust") ("native-tls-vendored" "attohttpc/tls-vendored") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "attohttpc/multipart-form" "reqwest/multipart") ("http-api" "attohttpc") ("http-all" "http-request") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-exists") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-exists" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all")))) (r "1.57")))

(define-public crate-tauri-1.2.1 (c (n "tauri") (v "1.2.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.22") (f (quote ("compress" "json" "form"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "encoding_rs") (r "^0.8.31") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "infer") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (f (quote ("d"))) (o #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 1)) (d (n "open") (r "^3.0") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3.5.0") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.2") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.10") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.2.1") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.12.1") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.2.1") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing" "formatting"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18.2") (f (quote ("v2_36"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "win7-notifications") (r "^0.3.1") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "118sigywmrmdppc7qmjzis23bqbzvjkfvbvyc1asvp6lp543880q") (f (quote (("wry" "tauri-runtime-wry") ("windows7-compat" "win7-notifications") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-min-size") ("window-set-max-size") ("window-set-ignore-cursor-events") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-set-ignore-cursor-events" "window-start-dragging" "window-print") ("updater" "minisign-verify" "time" "base64" "http-api" "dialog-ask" "fs-extract-api") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-native-tls-vendored" "reqwest-client" "reqwest/native-tls-vendored") ("reqwest-client" "reqwest" "bytes") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-all" "os_info") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust") ("native-tls-vendored" "attohttpc/tls-vendored") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-protocol-headers" "tauri-runtime-wry/linux-headers") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "attohttpc/multipart-form" "reqwest/multipart") ("http-api" "attohttpc") ("http-all" "http-request") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-exists") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-exists" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("app-show") ("app-hide") ("app-all" "app-show" "app-hide") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all" "app-all")))) (r "1.59")))

(define-public crate-tauri-1.2.2 (c (n "tauri") (v "1.2.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.22") (f (quote ("compress" "json" "form"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "encoding_rs") (r "^0.8.31") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "infer") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (f (quote ("d"))) (o #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 1)) (d (n "open") (r "^3.0") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3.5.0") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.2") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.10") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.2.1") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.12.1") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.2.1") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing" "formatting"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18.2") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "win7-notifications") (r "^0.3.1") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "1n4q9c0fmqd0mkn9nr9zmmlhlqf48kqvy5rqf1rl65mjb9w1vsnq") (f (quote (("wry" "tauri-runtime-wry") ("windows7-compat" "win7-notifications") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-min-size") ("window-set-max-size") ("window-set-ignore-cursor-events") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-set-ignore-cursor-events" "window-start-dragging" "window-print") ("updater" "minisign-verify" "time" "base64" "http-api" "dialog-ask" "fs-extract-api") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-native-tls-vendored" "reqwest-client" "reqwest/native-tls-vendored") ("reqwest-client" "reqwest" "bytes") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-all" "os_info") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust") ("native-tls-vendored" "attohttpc/tls-vendored") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-protocol-headers" "tauri-runtime-wry/linux-headers" "webkit2gtk/v2_36") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "attohttpc/multipart-form" "reqwest/multipart") ("http-api" "attohttpc") ("http-all" "http-request") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-exists") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-exists" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("app-show") ("app-hide") ("app-all" "app-show" "app-hide") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all" "app-all")))) (r "1.59")))

(define-public crate-tauri-2.0.0-alpha.0 (c (n "tauri") (v "2.0.0-alpha.0") (d (list (d (n "android_logger") (r "^0.9") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.24") (f (quote ("compress" "json" "form"))) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "encoding_rs") (r "^0.8.31") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "infer") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (f (quote ("d"))) (o #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 1)) (d (n "open") (r "^3.0") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3.5.0") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "percent-encoding") (r "^2.2") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (o #t) (k 0)) (d (n "rfd") (r "^0.10") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-macros") (r "^2.0.0-alpha.0") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.13.0-alpha.0") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.13.0-alpha.0") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-alpha.0") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing" "formatting"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18.2") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "win7-notifications") (r "^0.3.1") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "1hymng2i7qkdrd5j99x9lyjk69ipx1hmhprd8dj8gqj5absmmjia") (f (quote (("wry" "tauri-runtime-wry") ("windows7-compat" "win7-notifications") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-min-size") ("window-set-max-size") ("window-set-ignore-cursor-events") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-set-ignore-cursor-events" "window-start-dragging" "window-print") ("updater" "minisign-verify" "time" "base64" "http-api" "dialog-ask" "fs-extract-api") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-native-tls-vendored" "reqwest-client" "reqwest/native-tls-vendored") ("reqwest-default-tls" "reqwest-client" "reqwest/default-tls") ("reqwest-client" "reqwest" "bytes") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-all" "os_info") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust") ("native-tls-vendored" "attohttpc/tls-vendored") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-protocol-headers" "tauri-runtime-wry/linux-headers" "webkit2gtk/v2_36") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "attohttpc/multipart-form" "reqwest/multipart") ("http-api") ("http-all" "http-request") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-exists") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-exists" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default-tls" "attohttpc/tls-native") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("app-show") ("app-hide") ("app-all" "app-show" "app-hide") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all" "app-all")))) (r "1.59")))

(define-public crate-tauri-2.0.0-alpha.1 (c (n "tauri") (v "2.0.0-alpha.1") (d (list (d (n "android_logger") (r "^0.9") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.24") (f (quote ("compress" "json" "form"))) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "encoding_rs") (r "^0.8.31") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "infer") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (f (quote ("d"))) (o #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 1)) (d (n "open") (r "^3.0") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3.5.0") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "percent-encoding") (r "^2.2") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (o #t) (k 0)) (d (n "rfd") (r "^0.10") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-macros") (r "^2.0.0-alpha.0") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.13.0-alpha.0") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.13.0-alpha.0") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-alpha.0") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing" "formatting"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18.2") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "win7-notifications") (r "^0.3.1") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "1haif35npb3yh4sm7ra3l7bp95ic1i9mc1imlykg3l2wcp9sqwvf") (f (quote (("wry" "tauri-runtime-wry") ("windows7-compat" "win7-notifications") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-min-size") ("window-set-max-size") ("window-set-ignore-cursor-events") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-set-ignore-cursor-events" "window-start-dragging" "window-print") ("updater" "minisign-verify" "time" "base64" "http-api" "dialog-ask" "fs-extract-api") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-native-tls-vendored" "reqwest-client" "reqwest/native-tls-vendored") ("reqwest-default-tls" "reqwest-client" "reqwest/default-tls") ("reqwest-client" "reqwest" "bytes") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-all" "os_info") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust") ("native-tls-vendored" "attohttpc/tls-vendored") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-protocol-headers" "tauri-runtime-wry/linux-headers" "webkit2gtk/v2_36") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "attohttpc/multipart-form" "reqwest/multipart") ("http-api") ("http-all" "http-request") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-exists") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-exists" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default-tls" "attohttpc/tls-native") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("app-show") ("app-hide") ("app-all" "app-show" "app-hide") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all" "app-all")))) (r "1.59")))

(define-public crate-tauri-1.2.3 (c (n "tauri") (v "1.2.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.22") (f (quote ("compress" "json" "form"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "encoding_rs") (r "^0.8.31") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "infer") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (f (quote ("d"))) (o #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 1)) (d (n "open") (r "^3.0") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3.5.0") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.2") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.10") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.2.1") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.12.1") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.2.1") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing" "formatting"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18.2") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "win7-notifications") (r "^0.3.1") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "0yb6j5da3izbp0d89jv85xddq2v3z08nwarvm0qm0smvwc784j2v") (f (quote (("wry" "tauri-runtime-wry") ("windows7-compat" "win7-notifications") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-min-size") ("window-set-max-size") ("window-set-ignore-cursor-events") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-set-ignore-cursor-events" "window-start-dragging" "window-print") ("updater" "minisign-verify" "time" "base64" "http-api" "dialog-ask" "fs-extract-api") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-native-tls-vendored" "reqwest-client" "reqwest/native-tls-vendored") ("reqwest-client" "reqwest" "bytes") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-all" "os_info") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust") ("native-tls-vendored" "attohttpc/tls-vendored") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-protocol-headers" "tauri-runtime-wry/linux-headers" "webkit2gtk/v2_36") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "attohttpc/multipart-form" "reqwest/multipart") ("http-api" "attohttpc") ("http-all" "http-request") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-exists") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-exists" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("app-show") ("app-hide") ("app-all" "app-show" "app-hide") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all" "app-all")))) (r "1.59")))

(define-public crate-tauri-1.1.3 (c (n "tauri") (v "1.1.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.22") (f (quote ("compress" "json" "form"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "encoding_rs") (r "^0.8.31") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "infer") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (f (quote ("d"))) (o #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 1)) (d (n "open") (r "^3.0") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3.5.0") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.10") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.1.1") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.11.1") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.1.1") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing" "formatting"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "win7-notifications") (r "^0.3.1") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "0drdz20swzhabmvh8kpys2k9y3yjgn585rm0fk125ybbk9vf4hr6") (f (quote (("wry" "tauri-runtime-wry") ("windows7-compat" "win7-notifications") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-min-size") ("window-set-max-size") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-start-dragging" "window-print") ("updater" "minisign-verify" "time" "base64" "http-api" "dialog-ask" "fs-extract-api") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-native-tls-vendored" "reqwest-client" "reqwest/native-tls-vendored") ("reqwest-client" "reqwest" "bytes") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-all" "os_info") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust") ("native-tls-vendored" "attohttpc/tls-vendored") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "attohttpc/multipart-form" "reqwest/multipart") ("http-api" "attohttpc") ("http-all" "http-request") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-exists") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-exists" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all")))) (r "1.57")))

(define-public crate-tauri-1.0.8 (c (n "tauri") (v "1.0.8") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.19") (f (quote ("json" "form"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "infer") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (f (quote ("d"))) (o #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 1)) (d (n "open") (r "^3.0") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3.4.0") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.4.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.6") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.0.4") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.10.2") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.3") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing" "formatting"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.16.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "win7-notifications") (r "^0.3.0") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.37.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "06xjzjp21dgbi2df99qzdqxr987vmzi9gnpbxr9f456ifqx5sfmn") (f (quote (("wry" "tauri-runtime-wry") ("windows7-compat" "win7-notifications") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-min-size") ("window-set-max-size") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-start-dragging" "window-print") ("updater" "minisign-verify" "time" "base64" "http-api" "dialog-ask" "fs-extract-api") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-client" "reqwest" "bytes") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-all" "os_info") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "attohttpc/multipart-form" "reqwest/multipart") ("http-api" "attohttpc") ("http-all" "http-request") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all")))) (r "1.57")))

(define-public crate-tauri-2.0.0-alpha.2 (c (n "tauri") (v "2.0.0-alpha.2") (d (list (d (n "android_logger") (r "^0.9") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.24") (f (quote ("compress" "json" "form"))) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "encoding_rs") (r "^0.8.31") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "infer") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (f (quote ("d"))) (o #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 1)) (d (n "open") (r "^3.0") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3.5.0") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "percent-encoding") (r "^2.2") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (o #t) (k 0)) (d (n "rfd") (r "^0.10") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-macros") (r "^2.0.0-alpha.0") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.13.0-alpha.0") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.13.0-alpha.0") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-alpha.0") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing" "formatting"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18.2") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "win7-notifications") (r "^0.3.1") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "19cx2xncacvl88gzvqil95ipbw88hc3p9gsk2j6vjfl5lpbs5p68") (f (quote (("wry" "tauri-runtime-wry") ("windows7-compat" "win7-notifications") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-min-size") ("window-set-max-size") ("window-set-ignore-cursor-events") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-set-ignore-cursor-events" "window-start-dragging" "window-print") ("updater" "minisign-verify" "time" "base64" "http-api" "dialog-ask" "fs-extract-api") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-native-tls-vendored" "reqwest-client" "reqwest/native-tls-vendored") ("reqwest-default-tls" "reqwest-client" "reqwest/default-tls") ("reqwest-client" "reqwest" "bytes") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-all" "os_info") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust") ("native-tls-vendored" "attohttpc/tls-vendored") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-protocol-headers" "tauri-runtime-wry/linux-headers" "webkit2gtk/v2_36") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "attohttpc/multipart-form" "reqwest/multipart") ("http-api") ("http-all" "http-request") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-exists") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-exists" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default-tls" "attohttpc/tls-native") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("app-show") ("app-hide") ("app-all" "app-show" "app-hide") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all" "app-all")))) (r "1.59")))

(define-public crate-tauri-1.2.4 (c (n "tauri") (v "1.2.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.22") (f (quote ("compress" "json" "form"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "encoding_rs") (r "^0.8.31") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "ignore") (r "=0.4.18") (d #t) (k 0)) (d (n "infer") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (f (quote ("d"))) (o #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 1)) (d (n "open") (r "^3.0") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3.5.0") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.2") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.10") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.2.1") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.12.1") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.2.1") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing" "formatting"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18.2") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "win7-notifications") (r "^0.3.1") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "0jf4xdh04zk1al4icv61as8lzf4jr57vx0iwnjxbnz2yacfhyzpy") (f (quote (("wry" "tauri-runtime-wry") ("windows7-compat" "win7-notifications") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-min-size") ("window-set-max-size") ("window-set-ignore-cursor-events") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-set-ignore-cursor-events" "window-start-dragging" "window-print") ("updater" "minisign-verify" "time" "base64" "http-api" "dialog-ask" "fs-extract-api") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-native-tls-vendored" "reqwest-client" "reqwest/native-tls-vendored") ("reqwest-client" "reqwest" "bytes") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-all" "os_info") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust") ("native-tls-vendored" "attohttpc/tls-vendored") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-protocol-headers" "tauri-runtime-wry/linux-headers" "webkit2gtk/v2_36") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "attohttpc/multipart-form" "reqwest/multipart") ("http-api" "attohttpc") ("http-all" "http-request") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-exists") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-exists" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("app-show") ("app-hide") ("app-all" "app-show" "app-hide") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all" "app-all")))) (r "1.59")))

(define-public crate-tauri-2.0.0-alpha.3 (c (n "tauri") (v "2.0.0-alpha.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.24") (f (quote ("compress" "json" "form"))) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "encoding_rs") (r "^0.8.31") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "glib") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.16") (f (quote ("v3_24"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "ignore") (r "=0.4.18") (d #t) (k 0)) (d (n "infer") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (f (quote ("d"))) (o #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 1)) (d (n "open") (r "^3.0") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3.5.0") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "percent-encoding") (r "^2.2") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (o #t) (k 0)) (d (n "rfd") (r "^0.11.0") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-macros") (r "^2.0.0-alpha.1") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.13.0-alpha.1") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.13.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-alpha.1") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing" "formatting"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.19.1") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "win7-notifications") (r "^0.3.1") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "024r7rfzfdw9g6gj4iy6dclx0kj7friic17bs89msm1c8lan1szk") (f (quote (("wry" "tauri-runtime-wry") ("windows7-compat" "win7-notifications") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-min-size") ("window-set-max-size") ("window-set-ignore-cursor-events") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-set-ignore-cursor-events" "window-start-dragging" "window-print") ("updater" "minisign-verify" "time" "base64" "http-api" "dialog-ask" "fs-extract-api") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-native-tls-vendored" "reqwest-client" "reqwest/native-tls-vendored") ("reqwest-default-tls" "reqwest-client" "reqwest/default-tls") ("reqwest-client" "reqwest" "bytes") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-all" "os_info") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust") ("native-tls-vendored" "attohttpc/tls-vendored") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-protocol-headers" "tauri-runtime-wry/linux-headers" "webkit2gtk/v2_36") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "attohttpc/multipart-form" "reqwest/multipart") ("http-api") ("http-all" "http-request") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-exists") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-exists" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default-tls" "attohttpc/tls-native") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("app-show") ("app-hide") ("app-all" "app-show" "app-hide") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all" "app-all")))) (r "1.64")))

(define-public crate-tauri-2.0.0-alpha.4 (c (n "tauri") (v "2.0.0-alpha.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "encoding_rs") (r "^0.8.31") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "glib") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.16") (f (quote ("v3_24"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "ignore") (r "=0.4.18") (d #t) (k 0)) (d (n "infer") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "jni") (r "^0.20") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (f (quote ("d"))) (o #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 1)) (d (n "open") (r "^3.0") (o #t) (d #t) (k 0)) (d (n "os_info") (r "=3.5.0") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.2") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "=0.5.0") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (k 0)) (d (n "rfd") (r "^0.11") (f (quote ("gtk3" "common-controls-v6"))) (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "swift-rs") (r "^1.0.3") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-build") (r "^2.0.0-alpha.1") (d #t) (k 1)) (d (n "tauri-macros") (r "^2.0.0-alpha.2") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.13.0-alpha.2") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.13.0-alpha.2") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-alpha.2") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "=0.3.15") (f (quote ("parsing" "formatting"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "unarray") (r "=0.1.3") (d #t) (k 2)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.19.1") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.22") (d #t) (t "cfg(windows)") (k 0)) (d (n "win7-notifications") (r "^0.3.1") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.44") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "07580a65jsplndd8lqs809rn9pbdv7is5cdk3xnsp33znidq64z1") (f (quote (("wry" "tauri-runtime-wry") ("windows7-compat" "win7-notifications") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-shadow") ("window-set-resizable") ("window-set-position") ("window-set-min-size") ("window-set-max-size") ("window-set-ignore-cursor-events") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-content-protected") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-shadow" "window-set-always-on-top" "window-set-content-protected" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-set-ignore-cursor-events" "window-start-dragging" "window-print") ("updater" "minisign-verify" "time" "base64" "http-api" "dialog-ask" "fs-extract-api") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-all" "os_info") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust") ("native-tls-vendored" "reqwest/native-tls-vendored") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-protocol-headers" "tauri-runtime-wry/linux-headers" "webkit2gtk/v2_36") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "reqwest/multipart") ("http-api") ("http-all" "http-request") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-exists") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-exists" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default-tls" "reqwest/default-tls") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("app-show") ("app-hide") ("app-all" "app-show" "app-hide") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all" "app-all")))) (l "Tauri") (r "1.64")))

(define-public crate-tauri-2.0.0-alpha.5 (c (n "tauri") (v "2.0.0-alpha.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "encoding_rs") (r "^0.8.31") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "glib") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.16") (f (quote ("v3_24"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "infer") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "jni") (r "^0.20") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 1)) (d (n "open") (r "^3.0") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.2") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (k 0)) (d (n "rfd") (r "^0.11") (f (quote ("gtk3" "common-controls-v6"))) (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "swift-rs") (r "^1.0.3") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-build") (r "^2.0.0-alpha.1") (d #t) (k 1)) (d (n "tauri-macros") (r "^2.0.0-alpha.3") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.13.0-alpha.3") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.13.0-alpha.3") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-alpha.3") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing" "formatting"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.19.1") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.22") (d #t) (t "cfg(windows)") (k 0)) (d (n "win7-notifications") (r "^0.3.1") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.44") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "0vg741xjkvpijj4vzfa0acslxxqbvmnsd8w6lx72v5cd42b614ix") (f (quote (("wry" "tauri-runtime-wry") ("windows7-compat" "win7-notifications") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-shadow") ("window-set-resizable") ("window-set-position") ("window-set-min-size") ("window-set-max-size") ("window-set-ignore-cursor-events") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-content-protected") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-shadow" "window-set-always-on-top" "window-set-content-protected" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-set-ignore-cursor-events" "window-start-dragging" "window-print") ("updater" "minisign-verify" "time" "base64" "http-api" "dialog-ask" "fs-extract-api") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("rustls-tls" "reqwest/rustls-tls") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-all" "os_info") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-protocol-headers" "tauri-runtime-wry/linux-headers" "webkit2gtk/v2_36") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "reqwest/multipart") ("http-api") ("http-all" "http-request") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-exists") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-exists" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("app-show") ("app-hide") ("app-all" "app-show" "app-hide") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all" "app-all")))) (l "Tauri") (r "1.64")))

(define-public crate-tauri-2.0.0-alpha.6 (c (n "tauri") (v "2.0.0-alpha.6") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "encoding_rs") (r "^0.8.31") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "glib") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.16") (f (quote ("v3_24"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "infer") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "jni") (r "^0.20") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 1)) (d (n "open") (r "^3.0") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.2") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (k 0)) (d (n "rfd") (r "^0.11") (f (quote ("gtk3" "common-controls-v6"))) (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "swift-rs") (r "^1.0.3") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-build") (r "^2.0.0-alpha.1") (d #t) (k 1)) (d (n "tauri-macros") (r "^2.0.0-alpha.3") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.13.0-alpha.3") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.13.0-alpha.3") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-alpha.3") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing" "formatting"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.19.1") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.22") (d #t) (t "cfg(windows)") (k 0)) (d (n "win7-notifications") (r "^0.3.1") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.44") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "0hlmhlwrp3zim273vwnlxlmah363xc792bv8g5fmxyxvkadkfzz8") (f (quote (("wry" "tauri-runtime-wry") ("windows7-compat" "win7-notifications") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-shadow") ("window-set-resizable") ("window-set-position") ("window-set-min-size") ("window-set-max-size") ("window-set-ignore-cursor-events") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-content-protected") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-shadow" "window-set-always-on-top" "window-set-content-protected" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-set-ignore-cursor-events" "window-start-dragging" "window-print") ("updater" "minisign-verify" "time" "base64" "http-api" "dialog-ask" "fs-extract-api") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("rustls-tls" "reqwest/rustls-tls") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-all" "os_info") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-protocol-headers" "tauri-runtime-wry/linux-headers" "webkit2gtk/v2_36") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "reqwest/multipart") ("http-api") ("http-all" "http-request") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-exists") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-exists" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("app-show") ("app-hide") ("app-all" "app-show" "app-hide") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all" "app-all")))) (l "Tauri") (r "1.64")))

(define-public crate-tauri-2.0.0-alpha.7 (c (n "tauri") (v "2.0.0-alpha.7") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "encoding_rs") (r "^0.8.31") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "glib") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.16") (f (quote ("v3_24"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "infer") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "jni") (r "^0.20") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 1)) (d (n "open") (r "^3.0") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.2") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (k 0)) (d (n "rfd") (r "^0.11") (f (quote ("gtk3" "common-controls-v6"))) (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "swift-rs") (r "^1.0.4") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-build") (r "^2.0.0-alpha.1") (d #t) (k 1)) (d (n "tauri-macros") (r "^2.0.0-alpha.4") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.13.0-alpha.4") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.13.0-alpha.4") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-alpha.4") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing" "formatting"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.19.1") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.22") (d #t) (t "cfg(windows)") (k 0)) (d (n "win7-notifications") (r "^0.3.1") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.44") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "1ydk2qv0fhhmfxklmmmsll7bax7ncz2ibhn4dcddxz2gwxh28nx8") (f (quote (("wry" "tauri-runtime-wry") ("windows7-compat" "win7-notifications") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-shadow") ("window-set-resizable") ("window-set-position") ("window-set-min-size") ("window-set-max-size") ("window-set-ignore-cursor-events") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-content-protected") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-shadow" "window-set-always-on-top" "window-set-content-protected" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-set-ignore-cursor-events" "window-start-dragging" "window-print") ("updater" "minisign-verify" "time" "base64" "http-api" "dialog-ask" "fs-extract-api") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("rustls-tls" "reqwest/rustls-tls") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-all" "os_info") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-protocol-headers" "tauri-runtime-wry/linux-headers" "webkit2gtk/v2_36") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "reqwest/multipart") ("http-api") ("http-all" "http-request") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-exists") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-exists" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("app-show") ("app-hide") ("app-all" "app-show" "app-hide") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all" "app-all")))) (l "Tauri") (r "1.64")))

(define-public crate-tauri-2.0.0-alpha.8 (c (n "tauri") (v "2.0.0-alpha.8") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "encoding_rs") (r "^0.8.31") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "glib") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.16") (f (quote ("v3_24"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "infer") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "jni") (r "^0.20") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 1)) (d (n "open") (r "^3.0") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.2") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (k 0)) (d (n "rfd") (r "^0.11") (f (quote ("gtk3" "common-controls-v6"))) (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "swift-rs") (r "^1.0.4") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-build") (r "^2.0.0-alpha.1") (d #t) (k 1)) (d (n "tauri-macros") (r "^2.0.0-alpha.4") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.13.0-alpha.4") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.13.0-alpha.4") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-alpha.4") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing" "formatting"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.19.1") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.22") (d #t) (t "cfg(windows)") (k 0)) (d (n "win7-notifications") (r "^0.3.1") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.44") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "1yqq47fblfl9dcqvys9i7aaijamjxrwgf283zmrnlf8arbjfyppj") (f (quote (("wry" "tauri-runtime-wry") ("windows7-compat" "win7-notifications") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-shadow") ("window-set-resizable") ("window-set-position") ("window-set-min-size") ("window-set-max-size") ("window-set-ignore-cursor-events") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-content-protected") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-shadow" "window-set-always-on-top" "window-set-content-protected" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-set-ignore-cursor-events" "window-start-dragging" "window-print") ("updater" "minisign-verify" "time" "base64" "http-api" "dialog-ask" "fs-extract-api") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("rustls-tls" "reqwest/rustls-tls") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-all" "os_info") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-protocol-headers" "tauri-runtime-wry/linux-headers" "webkit2gtk/v2_36") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "reqwest/multipart") ("http-api") ("http-all" "http-request") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-exists") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-exists" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("app-show") ("app-hide") ("app-all" "app-show" "app-hide") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all" "app-all")))) (l "Tauri") (r "1.64")))

(define-public crate-tauri-1.3.0 (c (n "tauri") (v "1.3.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.22") (f (quote ("compress" "json" "form"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "encoding_rs") (r "^0.8.31") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "ignore") (r "=0.4.18") (d #t) (k 0)) (d (n "infer") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 1)) (d (n "open") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.2") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "=0.5.0") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.10") (f (quote ("gtk3" "common-controls-v6"))) (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.3.0") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.13.0") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.3.0") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "=0.3.15") (f (quote ("parsing" "formatting"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18.2") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "win7-notifications") (r "^0.3.1") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "winnow") (r "=0.4.1") (d #t) (k 2)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "0hpqd4zshpaigybm5i51jq9sidnv2067b81n2grj4rsmx2ia6ayl") (f (quote (("wry" "tauri-runtime-wry") ("windows7-compat" "win7-notifications") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-min-size") ("window-set-max-size") ("window-set-ignore-cursor-events") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-content-protected") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-content-protected" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-set-ignore-cursor-events" "window-start-dragging" "window-print") ("updater" "minisign-verify" "time" "base64" "http-api" "dialog-ask" "fs-extract-api") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-native-tls-vendored" "reqwest-client" "reqwest/native-tls-vendored") ("reqwest-client" "reqwest" "bytes") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-all" "os_info") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust") ("native-tls-vendored" "attohttpc/tls-vendored") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-protocol-headers" "tauri-runtime-wry/linux-headers" "webkit2gtk/v2_36") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "attohttpc/multipart-form" "reqwest/multipart") ("http-api" "attohttpc") ("http-all" "http-request") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-exists") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-exists" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("app-show") ("app-hide") ("app-all" "app-show" "app-hide") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all" "app-all")))) (r "1.60")))

(define-public crate-tauri-1.2.5 (c (n "tauri") (v "1.2.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.22") (f (quote ("compress" "json" "form"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "encoding_rs") (r "^0.8.31") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "ignore") (r "=0.4.18") (d #t) (k 0)) (d (n "infer") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (f (quote ("d"))) (o #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 1)) (d (n "open") (r "^3.0") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3.5.0") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.2") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.10") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.2.1") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.12.2") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.12.3") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.2.1") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing" "formatting"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18.2") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "win7-notifications") (r "^0.3.1") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "04i4lb8qr1d8sc6vbw5npfr5flcschs3jh7kvl7qcvas6rrgx8g3") (f (quote (("wry" "tauri-runtime-wry") ("windows7-compat" "win7-notifications") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-min-size") ("window-set-max-size") ("window-set-ignore-cursor-events") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-set-ignore-cursor-events" "window-start-dragging" "window-print") ("updater" "minisign-verify" "time" "base64" "http-api" "dialog-ask" "fs-extract-api") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-native-tls-vendored" "reqwest-client" "reqwest/native-tls-vendored") ("reqwest-client" "reqwest" "bytes") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-all" "os_info") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust") ("native-tls-vendored" "attohttpc/tls-vendored") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-protocol-headers" "tauri-runtime-wry/linux-headers" "webkit2gtk/v2_36") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "attohttpc/multipart-form" "reqwest/multipart") ("http-api" "attohttpc") ("http-all" "http-request") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-exists") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-exists" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("app-show") ("app-hide") ("app-all" "app-show" "app-hide") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all" "app-all")))) (r "1.59")))

(define-public crate-tauri-1.1.4 (c (n "tauri") (v "1.1.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.22") (f (quote ("compress" "json" "form"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "encoding_rs") (r "^0.8.31") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "infer") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (f (quote ("d"))) (o #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 1)) (d (n "open") (r "^3.0") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3.5.0") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.10") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.1.1") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.11.2") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.1.1") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing" "formatting"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "win7-notifications") (r "^0.3.1") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "008pncf88rpn32sj6x8q92pgjwyqkvcw86kjj6080cr858zq7l6a") (f (quote (("wry" "tauri-runtime-wry") ("windows7-compat" "win7-notifications") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-min-size") ("window-set-max-size") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-start-dragging" "window-print") ("updater" "minisign-verify" "time" "base64" "http-api" "dialog-ask" "fs-extract-api") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-native-tls-vendored" "reqwest-client" "reqwest/native-tls-vendored") ("reqwest-client" "reqwest" "bytes") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-all" "os_info") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust") ("native-tls-vendored" "attohttpc/tls-vendored") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "attohttpc/multipart-form" "reqwest/multipart") ("http-api" "attohttpc") ("http-all" "http-request") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-exists") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-exists" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all")))) (r "1.57")))

(define-public crate-tauri-1.0.9 (c (n "tauri") (v "1.0.9") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "attohttpc") (r "^0.19") (f (quote ("json" "form"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "infer") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (f (quote ("d"))) (o #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 1)) (d (n "open") (r "^3.0") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3.4.0") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.4.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.6") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.0.4") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.10.3") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.10.3") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.0.3") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing" "formatting"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.16.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "win7-notifications") (r "^0.3.0") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.37.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "010mw2adhdlrmabb8319mchpi8bsx57rk2k9p82xria85365r4qd") (f (quote (("wry" "tauri-runtime-wry") ("windows7-compat" "win7-notifications") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-min-size") ("window-set-max-size") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-start-dragging" "window-print") ("updater" "minisign-verify" "time" "base64" "http-api" "dialog-ask" "fs-extract-api") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-client" "reqwest" "bytes") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-all" "os_info") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "attohttpc/multipart-form" "reqwest/multipart") ("http-api" "attohttpc") ("http-all" "http-request") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all")))) (r "1.57")))

(define-public crate-tauri-2.0.0-alpha.9 (c (n "tauri") (v "2.0.0-alpha.9") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "glib") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.16") (f (quote ("v3_24"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "infer") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "jni") (r "^0.20") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 1)) (d (n "percent-encoding") (r "^2.2") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "swift-rs") (r "^1.0.4") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "tauri-build") (r "^2.0.0-alpha.1") (d #t) (k 1)) (d (n "tauri-macros") (r "^2.0.0-alpha.5") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.13.0-alpha.5") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.13.0-alpha.5") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-alpha.5") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.19.1") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.22") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.44") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "winnow") (r "=0.4.1") (d #t) (k 2)))) (h "1d20bm8wf07s0bzwpzznvsjjvrk90v7m6ym15sy04446vwf6qnv9") (f (quote (("wry" "tauri-runtime-wry") ("window-data-url" "data-url") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("rustls-tls" "reqwest/rustls-tls") ("protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("objc-exception" "tauri-runtime-wry/objc-exception") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-protocol-headers" "tauri-runtime-wry/linux-headers" "webkit2gtk/v2_36") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("dox" "tauri-runtime-wry/dox") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression")))) (l "Tauri") (r "1.65")))

(define-public crate-tauri-1.4.0 (c (n "tauri") (v "1.4.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "encoding_rs") (r "^0.8.31") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "infer") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 1)) (d (n "open") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.2") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.10") (f (quote ("gtk3" "common-controls-v6"))) (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "sys-locale") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.4.0") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.14.0") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.4.0") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing" "formatting"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18.2") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "win7-notifications") (r "^0.3.1") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "1zlc7z800vhn7rmr9p1ja46in0yf5lc55g86j955dn88gqy8jdfc") (f (quote (("wry" "tauri-runtime-wry") ("windows7-compat" "win7-notifications") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-minimizable") ("window-set-min-size") ("window-set-maximizable") ("window-set-max-size") ("window-set-ignore-cursor-events") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-content-protected") ("window-set-closable") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-maximizable" "window-set-minimizable" "window-set-closable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-content-protected" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-set-ignore-cursor-events" "window-start-dragging" "window-print") ("updater" "minisign-verify" "time" "base64" "http-api" "dialog-ask" "fs-extract-api") ("test") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-native-tls-vendored" "native-tls-vendored") ("reqwest-client" "http-api") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-api" "sys-locale") ("os-all" "os_info" "os-api") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust") ("native-tls-vendored" "reqwest/native-tls-vendored") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-protocol-headers" "tauri-runtime-wry/linux-headers" "webkit2gtk/v2_36") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "reqwest/multipart") ("http-api" "reqwest" "bytes") ("http-all" "http-request") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-exists") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-exists" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("app-show") ("app-hide") ("app-all" "app-show" "app-hide") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all" "app-all")))) (r "1.60")))

(define-public crate-tauri-1.4.1 (c (n "tauri") (v "1.4.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "encoding_rs") (r "^0.8.31") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "infer") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 1)) (d (n "open") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.2") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.10") (f (quote ("gtk3" "common-controls-v6"))) (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "sys-locale") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.4.0") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.14.0") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.4.0") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing" "formatting"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18.2") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "win7-notifications") (r "^0.3.1") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "07nrw7hpmlydxir60sia4vya5zkrfl7qghqdwsl0fm73k0l55gkz") (f (quote (("wry" "tauri-runtime-wry") ("windows7-compat" "win7-notifications") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-minimizable") ("window-set-min-size") ("window-set-maximizable") ("window-set-max-size") ("window-set-ignore-cursor-events") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-content-protected") ("window-set-closable") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-maximizable" "window-set-minimizable" "window-set-closable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-content-protected" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-set-ignore-cursor-events" "window-start-dragging" "window-print") ("updater" "minisign-verify" "time" "base64" "http-api" "dialog-ask" "fs-extract-api") ("test") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-native-tls-vendored" "native-tls-vendored") ("reqwest-client" "http-api") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-api" "sys-locale") ("os-all" "os_info" "os-api") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust") ("native-tls-vendored" "reqwest/native-tls-vendored") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-protocol-headers" "tauri-runtime-wry/linux-headers" "webkit2gtk/v2_36") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "reqwest/multipart") ("http-api" "reqwest" "bytes") ("http-all" "http-request") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-exists") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-exists" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("app-show") ("app-hide") ("app-all" "app-show" "app-hide") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all" "app-all")))) (r "1.60")))

(define-public crate-tauri-2.0.0-alpha.10 (c (n "tauri") (v "2.0.0-alpha.10") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.15") (d #t) (k 2)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "glib") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.16") (f (quote ("v3_24"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "infer") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "jni") (r "^0.20") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 1)) (d (n "percent-encoding") (r "^2.2") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "swift-rs") (r "^1.0.4") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "tauri-build") (r "^2.0.0-alpha.1") (d #t) (k 1)) (d (n "tauri-macros") (r "^2.0.0-alpha.6") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.13.0-alpha.6") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.13.0-alpha.6") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-alpha.6") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.19.1") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.22") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.44") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)))) (h "138mvvq6g476cgz8jj58ijkmfgyn3s4az5k88wfsl573fmx3f61f") (f (quote (("wry" "tauri-runtime-wry") ("window-data-url" "data-url") ("test") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("rustls-tls" "reqwest/rustls-tls") ("protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("objc-exception" "tauri-runtime-wry/objc-exception") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-protocol-headers" "tauri-runtime-wry/linux-headers" "webkit2gtk/v2_36") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("dox" "tauri-runtime-wry/dox") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression")))) (l "Tauri") (r "1.65")))

(define-public crate-tauri-2.0.0-alpha.11 (c (n "tauri") (v "2.0.0-alpha.11") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.15") (d #t) (k 2)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "glib") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.16") (f (quote ("v3_24"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "infer") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "muda") (r "^0.8") (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 1)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.2.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "state") (r "^0.6") (d #t) (k 0)) (d (n "swift-rs") (r "^1.0.5") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "tauri-build") (r "^2.0.0-alpha.7") (d #t) (k 1)) (d (n "tauri-macros") (r "^2.0.0-alpha.7") (d #t) (k 0)) (d (n "tauri-runtime") (r "^1.0.0-alpha.0") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^1.0.0-alpha.0") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-alpha.7") (f (quote ("resources"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tray-icon") (r "^0.8") (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^1.1") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.25") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.48") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)))) (h "19m99rwyd4frsd2cq3dqm7z5zrk3pwx47kdq5y3fkqz95k1sbl7s") (f (quote (("wry" "tauri-runtime-wry") ("window-data-url" "data-url") ("test") ("rustls-tls" "reqwest/rustls-tls") ("protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("objc-exception" "tauri-runtime-wry/objc-exception") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-libxdo" "tray-icon/libxdo" "muda/libxdo") ("linux-ipc-protocol" "tauri-runtime-wry/linux-protocol-body" "webkit2gtk/v2_40") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("dox" "tauri-runtime-wry/dox") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression")))) (l "Tauri") (s 2) (e (quote (("tray-icon" "dep:tray-icon") ("default" "wry" "compression" "objc-exception" "tray-icon?/common-controls-v6" "muda/common-controls-v6")))) (r "1.65")))

(define-public crate-tauri-2.0.0-alpha.12 (c (n "tauri") (v "2.0.0-alpha.12") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.15") (d #t) (k 2)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "glib") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.16") (f (quote ("v3_24"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-range") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "http-range") (r "^0.1.4") (d #t) (k 2)) (d (n "ico") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "infer") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "muda") (r "^0.8") (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 1)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.2.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "state") (r "^0.6") (d #t) (k 0)) (d (n "swift-rs") (r "^1.0.5") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "tauri-build") (r "^2.0.0-alpha.8") (d #t) (k 1)) (d (n "tauri-macros") (r "^2.0.0-alpha.7") (d #t) (k 0)) (d (n "tauri-runtime") (r "^1.0.0-alpha.1") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^1.0.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-alpha.7") (f (quote ("resources"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tray-icon") (r "^0.8") (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^1.1") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.25") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.48") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)))) (h "061kdkclqss7maqj03qr4ida95856hhm6dpr3cgai1ya1kd9kqwf") (f (quote (("wry" "tauri-runtime-wry") ("window-data-url" "data-url") ("test") ("rustls-tls" "reqwest/rustls-tls") ("protocol-asset" "http-range") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("objc-exception" "tauri-runtime-wry/objc-exception") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-libxdo" "tray-icon/libxdo" "muda/libxdo") ("linux-ipc-protocol" "tauri-runtime-wry/linux-protocol-body" "webkit2gtk/v2_40") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("dox" "tauri-runtime-wry/dox") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression")))) (l "Tauri") (s 2) (e (quote (("tray-icon" "dep:tray-icon") ("default" "wry" "compression" "objc-exception" "tray-icon?/common-controls-v6" "muda/common-controls-v6")))) (r "1.65")))

(define-public crate-tauri-2.0.0-alpha.13 (c (n "tauri") (v "2.0.0-alpha.13") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.15") (d #t) (k 2)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "glib") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.16") (f (quote ("v3_24"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-range") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "http-range") (r "^0.1.4") (d #t) (k 2)) (d (n "ico") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "infer") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "muda") (r "^0.8") (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 1)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.2.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "state") (r "^0.6") (d #t) (k 0)) (d (n "swift-rs") (r "^1.0.5") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "tauri-build") (r "^2.0.0-alpha.8") (d #t) (k 1)) (d (n "tauri-macros") (r "^2.0.0-alpha.7") (d #t) (k 0)) (d (n "tauri-runtime") (r "^1.0.0-alpha.1") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^1.0.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-alpha.7") (f (quote ("resources"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tray-icon") (r "^0.8") (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^1.1") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.25") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.48") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)))) (h "04sys0y9v1mfmkarmk0apr6y1ifa2w9jwlq1di2mfdi74jvq1537") (f (quote (("wry" "tauri-runtime-wry") ("window-data-url" "data-url") ("test") ("rustls-tls" "reqwest/rustls-tls") ("protocol-asset" "http-range") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("objc-exception" "tauri-runtime-wry/objc-exception") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-libxdo" "tray-icon/libxdo" "muda/libxdo") ("linux-ipc-protocol" "tauri-runtime-wry/linux-protocol-body" "webkit2gtk/v2_40") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("dox" "tauri-runtime-wry/dox") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression")))) (l "Tauri") (s 2) (e (quote (("tray-icon" "dep:tray-icon") ("default" "wry" "compression" "objc-exception" "tray-icon?/common-controls-v6" "muda/common-controls-v6")))) (r "1.65")))

(define-public crate-tauri-2.0.0-alpha.14 (c (n "tauri") (v "2.0.0-alpha.14") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.15") (d #t) (k 2)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "glib") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.16") (f (quote ("v3_24"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-range") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "http-range") (r "^0.1.4") (d #t) (k 2)) (d (n "ico") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "infer") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "muda") (r "^0.8") (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 1)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.2.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "state") (r "^0.6") (d #t) (k 0)) (d (n "swift-rs") (r "^1.0.5") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "tauri-build") (r "^2.0.0-alpha.8") (d #t) (k 1)) (d (n "tauri-macros") (r "^2.0.0-alpha.7") (d #t) (k 0)) (d (n "tauri-runtime") (r "^1.0.0-alpha.1") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^1.0.0-alpha.2") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-alpha.7") (f (quote ("resources"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tray-icon") (r "^0.8") (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^1.1") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.25") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.48") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1mzc9yczk0a8vp1gyy313gyqmhnjabpxjdk0gv1agqqgsavc1b26") (f (quote (("wry" "tauri-runtime-wry") ("window-data-url" "data-url") ("test") ("rustls-tls" "reqwest/rustls-tls") ("protocol-asset" "http-range") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("objc-exception" "tauri-runtime-wry/objc-exception") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-libxdo" "tray-icon/libxdo" "muda/libxdo") ("linux-ipc-protocol" "tauri-runtime-wry/linux-protocol-body" "webkit2gtk/v2_40") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("dox" "tauri-runtime-wry/dox") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression")))) (l "Tauri") (s 2) (e (quote (("tray-icon" "dep:tray-icon") ("default" "wry" "compression" "objc-exception" "tray-icon?/common-controls-v6" "muda/common-controls-v6")))) (r "1.65")))

(define-public crate-tauri-1.5.0 (c (n "tauri") (v "1.5.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "encoding_rs") (r "^0.8.31") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "infer") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 1)) (d (n "open") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.2") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.10") (f (quote ("gtk3" "common-controls-v6"))) (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "sys-locale") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.4.1") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.14.1") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.5.0") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing" "formatting"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18.2") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "win7-notifications") (r "^0.4") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "03484yvmqg7vggqqv0s8agra2laajfsllw6cf8ag038aglky7bkj") (f (quote (("wry" "tauri-runtime-wry") ("windows7-compat" "win7-notifications") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-minimizable") ("window-set-min-size") ("window-set-maximizable") ("window-set-max-size") ("window-set-ignore-cursor-events") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-content-protected") ("window-set-closable") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-maximizable" "window-set-minimizable" "window-set-closable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-content-protected" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-set-ignore-cursor-events" "window-start-dragging" "window-print") ("updater" "minisign-verify" "time" "base64" "http-api" "dialog-ask" "fs-extract-api") ("test") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-native-tls-vendored" "native-tls-vendored") ("reqwest-client" "http-api") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-api" "sys-locale") ("os-all" "os_info" "os-api") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust") ("native-tls-vendored" "reqwest/native-tls-vendored") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-protocol-headers" "tauri-runtime-wry/linux-headers" "webkit2gtk/v2_36") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "reqwest/multipart") ("http-api" "reqwest" "bytes") ("http-all" "http-request") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-exists") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-exists" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("app-show") ("app-hide") ("app-all" "app-show" "app-hide") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all" "app-all")))) (r "1.60")))

(define-public crate-tauri-1.5.1 (c (n "tauri") (v "1.5.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "encoding_rs") (r "^0.8.31") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "infer") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 1)) (d (n "open") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.2") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.10") (f (quote ("gtk3" "common-controls-v6"))) (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "sys-locale") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.4.1") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.14.1") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.5.0") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing" "formatting"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18.2") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "win7-notifications") (r "^0.4") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "1gh6k2kr1949d7ri30kx5d9jx4im9776n6ws2ia30qgr7c3caf02") (f (quote (("wry" "tauri-runtime-wry") ("windows7-compat" "win7-notifications") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-minimizable") ("window-set-min-size") ("window-set-maximizable") ("window-set-max-size") ("window-set-ignore-cursor-events") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-content-protected") ("window-set-closable") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-maximizable" "window-set-minimizable" "window-set-closable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-content-protected" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-set-ignore-cursor-events" "window-start-dragging" "window-print") ("updater" "minisign-verify" "time" "base64" "http-api" "dialog-ask" "fs-extract-api") ("test") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-native-tls-vendored" "native-tls-vendored") ("reqwest-client" "http-api") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-api" "sys-locale") ("os-all" "os_info" "os-api") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust") ("native-tls-vendored" "reqwest/native-tls-vendored") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-protocol-headers" "tauri-runtime-wry/linux-headers" "webkit2gtk/v2_36") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "reqwest/multipart") ("http-api" "reqwest" "bytes") ("http-all" "http-request") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-exists") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-exists" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("app-show") ("app-hide") ("app-all" "app-show" "app-hide") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all" "app-all")))) (r "1.60")))

(define-public crate-tauri-2.0.0-alpha.15 (c (n "tauri") (v "2.0.0-alpha.15") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.15") (d #t) (k 2)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "glib") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.16") (f (quote ("v3_24"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-range") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "http-range") (r "^0.1.4") (d #t) (k 2)) (d (n "ico") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "infer") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "muda") (r "^0.8") (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 1)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.2.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "state") (r "^0.6") (d #t) (k 0)) (d (n "swift-rs") (r "^1.0.5") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "tauri-build") (r "^2.0.0-alpha.9") (d #t) (k 1)) (d (n "tauri-macros") (r "^2.0.0-alpha.8") (d #t) (k 0)) (d (n "tauri-runtime") (r "^1.0.0-alpha.2") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^1.0.0-alpha.3") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-alpha.8") (f (quote ("resources"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tray-icon") (r "^0.8") (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^1.1") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.25") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.48") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1r2xybcw6i5kpchrrnvz7ccq83h2c3pfn7qkkdl8mgyn5b41v3yd") (f (quote (("wry" "tauri-runtime-wry") ("window-data-url" "data-url") ("test") ("rustls-tls" "reqwest/rustls-tls") ("protocol-asset" "http-range") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("objc-exception" "tauri-runtime-wry/objc-exception") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-libxdo" "tray-icon/libxdo" "muda/libxdo") ("linux-ipc-protocol" "tauri-runtime-wry/linux-protocol-body" "webkit2gtk/v2_40") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("dox" "tauri-runtime-wry/dox") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression")))) (l "Tauri") (s 2) (e (quote (("tray-icon" "dep:tray-icon") ("default" "wry" "compression" "objc-exception" "tray-icon?/common-controls-v6" "muda/common-controls-v6")))) (r "1.65")))

(define-public crate-tauri-1.5.2 (c (n "tauri") (v "1.5.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "encoding_rs") (r "^0.8.31") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "infer") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 1)) (d (n "open") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.2") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.10") (f (quote ("gtk3" "common-controls-v6"))) (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "sys-locale") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.4.1") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.14.1") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.5.0") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing" "formatting"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18.2") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "win7-notifications") (r "^0.4") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "1ndk9l12xvfypdpwzqfswjkrqzakwy65xcandx6kdvr5y4y6gzlv") (f (quote (("wry" "tauri-runtime-wry") ("windows7-compat" "win7-notifications") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-minimizable") ("window-set-min-size") ("window-set-maximizable") ("window-set-max-size") ("window-set-ignore-cursor-events") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-content-protected") ("window-set-closable") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-maximizable" "window-set-minimizable" "window-set-closable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-content-protected" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-set-ignore-cursor-events" "window-start-dragging" "window-print") ("updater" "minisign-verify" "time" "base64" "http-api" "dialog-ask" "fs-extract-api") ("test") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-native-tls-vendored" "native-tls-vendored") ("reqwest-client" "http-api") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-api" "sys-locale") ("os-all" "os_info" "os-api") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust") ("native-tls-vendored" "reqwest/native-tls-vendored") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-protocol-headers" "tauri-runtime-wry/linux-headers" "webkit2gtk/v2_36") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "reqwest/multipart") ("http-api" "reqwest" "bytes") ("http-all" "http-request") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-exists") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-exists" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("app-show") ("app-hide") ("app-all" "app-show" "app-hide") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all" "app-all")))) (r "1.60")))

(define-public crate-tauri-2.0.0-alpha.16 (c (n "tauri") (v "2.0.0-alpha.16") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.15") (d #t) (k 2)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "glib") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.16") (f (quote ("v3_24"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-range") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "http-range") (r "^0.1.4") (d #t) (k 2)) (d (n "ico") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "infer") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "muda") (r "^0.8") (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 1)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.2.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "state") (r "^0.6") (d #t) (k 0)) (d (n "swift-rs") (r "^1.0.5") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "tauri-build") (r "^2.0.0-alpha.10") (d #t) (k 1)) (d (n "tauri-macros") (r "^2.0.0-alpha.9") (d #t) (k 0)) (d (n "tauri-runtime") (r "^1.0.0-alpha.3") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^1.0.0-alpha.4") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-alpha.9") (f (quote ("resources"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tray-icon") (r "^0.8") (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (o #t) (d #t) (k 0)) (d (n "webkit2gtk") (r "^1.1") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.25") (d #t) (t "cfg(windows)") (k 0)) (d (n "window-vibrancy") (r "^0.4") (d #t) (k 0)) (d (n "windows") (r "^0.48") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1ikzfzdnd06pzd624m11d0y45hswfyzhw85f85bmmnkgx4kww3rm") (f (quote (("wry" "tauri-runtime-wry") ("window-data-url" "data-url") ("test") ("rustls-tls" "reqwest/rustls-tls") ("protocol-asset" "http-range") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("objc-exception" "tauri-runtime-wry/objc-exception") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-libxdo" "tray-icon/libxdo" "muda/libxdo") ("linux-ipc-protocol" "tauri-runtime-wry/linux-protocol-body" "webkit2gtk/v2_40") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation" "uuid") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("dox" "tauri-runtime-wry/dox") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression")))) (l "Tauri") (s 2) (e (quote (("tray-icon" "dep:tray-icon") ("default" "wry" "compression" "objc-exception" "tray-icon?/common-controls-v6" "muda/common-controls-v6")))) (r "1.70")))

(define-public crate-tauri-2.0.0-alpha.17 (c (n "tauri") (v "2.0.0-alpha.17") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.15") (d #t) (k 2)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.18") (f (quote ("v3_24"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-range") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "http-range") (r "^0.1.4") (d #t) (k 2)) (d (n "ico") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "infer") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "muda") (r "^0.10") (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 1)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.2.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "state") (r "^0.6") (d #t) (k 0)) (d (n "swift-rs") (r "^1.0.5") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "tauri-build") (r "^2.0.0-alpha.11") (d #t) (k 1)) (d (n "tauri-macros") (r "^2.0.0-alpha.10") (d #t) (k 0)) (d (n "tauri-runtime") (r "^1.0.0-alpha.4") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^1.0.0-alpha.5") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-alpha.10") (f (quote ("resources"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tray-icon") (r "^0.10") (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (o #t) (d #t) (k 0)) (d (n "webkit2gtk") (r "=2.0") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.27") (d #t) (t "cfg(windows)") (k 0)) (d (n "window-vibrancy") (r "^0.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "window-vibrancy") (r "^0.4") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.51") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0y1g8jsqf7idavap3z0p9h1njg7bdr4hdx9khr48350cy7klabw9") (f (quote (("wry" "tauri-runtime-wry") ("window-data-url" "data-url") ("test") ("rustls-tls" "reqwest/rustls-tls") ("protocol-asset" "http-range") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("objc-exception" "tauri-runtime-wry/objc-exception") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-libxdo" "tray-icon/libxdo" "muda/libxdo") ("linux-ipc-protocol" "tauri-runtime-wry/linux-protocol-body" "webkit2gtk/v2_40") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation" "uuid") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression")))) (l "Tauri") (s 2) (e (quote (("tray-icon" "dep:tray-icon") ("default" "wry" "compression" "objc-exception" "tray-icon?/common-controls-v6" "muda/common-controls-v6")))) (r "1.70")))

(define-public crate-tauri-2.0.0-alpha.18 (c (n "tauri") (v "2.0.0-alpha.18") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.17") (d #t) (k 2)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.18") (f (quote ("v3_24"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "ico") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "infer") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "muda") (r "^0.11") (f (quote ("serde"))) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 1)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "state") (r "^0.6") (d #t) (k 0)) (d (n "swift-rs") (r "^1.0.6") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "tauri-build") (r "^2.0.0-alpha.12") (d #t) (k 1)) (d (n "tauri-macros") (r "^2.0.0-alpha.11") (d #t) (k 0)) (d (n "tauri-runtime") (r "^1.0.0-alpha.5") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^1.0.0-alpha.6") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-alpha.11") (f (quote ("resources"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tray-icon") (r "^0.11") (f (quote ("serde"))) (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (o #t) (d #t) (k 0)) (d (n "webkit2gtk") (r "=2.0.1") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.27") (d #t) (t "cfg(windows)") (k 0)) (d (n "window-vibrancy") (r "^0.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "window-vibrancy") (r "^0.4") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.51") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1k4zh9h4ldpdmsqslz2vj5i37bzk20pxwl76lf9618bg4j6frikd") (f (quote (("wry" "tauri-runtime-wry") ("window-data-url" "data-url") ("test") ("rustls-tls" "reqwest/rustls-tls") ("protocol-asset" "http-range") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("objc-exception" "tauri-runtime-wry/objc-exception") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-libxdo" "tray-icon/libxdo" "muda/libxdo") ("linux-ipc-protocol" "tauri-runtime-wry/linux-protocol-body" "webkit2gtk/v2_40") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation" "uuid") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression")))) (l "Tauri") (s 2) (e (quote (("tray-icon" "dep:tray-icon") ("default" "wry" "compression" "objc-exception" "tray-icon?/common-controls-v6" "muda/common-controls-v6")))) (r "1.70")))

(define-public crate-tauri-1.5.3 (c (n "tauri") (v "1.5.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "encoding_rs") (r "^0.8.31") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "infer") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 1)) (d (n "open") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.2") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.10") (f (quote ("gtk3" "common-controls-v6"))) (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "sys-locale") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.4.2") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.14.1") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.14.2") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.5.0") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing" "formatting"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18.2") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "win7-notifications") (r "^0.4") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "1qkv34g23w0xlpmy2vwdgvv26scpanwgbcf1qh68vpmcfav67m9j") (f (quote (("wry" "tauri-runtime-wry") ("windows7-compat" "win7-notifications") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-minimizable") ("window-set-min-size") ("window-set-maximizable") ("window-set-max-size") ("window-set-ignore-cursor-events") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-content-protected") ("window-set-closable") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-maximizable" "window-set-minimizable" "window-set-closable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-content-protected" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-set-ignore-cursor-events" "window-start-dragging" "window-print") ("updater" "minisign-verify" "time" "base64" "http-api" "dialog-ask" "fs-extract-api") ("test") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-native-tls-vendored" "native-tls-vendored") ("reqwest-client" "http-api") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-api" "sys-locale") ("os-all" "os_info" "os-api") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust") ("native-tls-vendored" "reqwest/native-tls-vendored") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-protocol-headers" "tauri-runtime-wry/linux-headers" "webkit2gtk/v2_36") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "reqwest/multipart") ("http-api" "reqwest" "bytes") ("http-all" "http-request") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-exists") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-exists" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("app-show") ("app-hide") ("app-all" "app-show" "app-hide") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all" "app-all")))) (s 2) (e (quote (("tracing" "dep:tracing" "tauri-macros/tracing" "tauri-runtime-wry/tracing")))) (r "1.60")))

(define-public crate-tauri-2.0.0-alpha.19 (c (n "tauri") (v "2.0.0-alpha.19") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.17") (d #t) (k 2)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.18") (f (quote ("v3_24"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "ico") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "infer") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "muda") (r "^0.11") (f (quote ("serde"))) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "state") (r "^0.6") (d #t) (k 0)) (d (n "swift-rs") (r "^1.0.6") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "tauri-build") (r "^2.0.0-alpha.12") (d #t) (k 1)) (d (n "tauri-macros") (r "^2.0.0-alpha.11") (d #t) (k 0)) (d (n "tauri-runtime") (r "^1.0.0-alpha.6") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^1.0.0-alpha.7") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-alpha.11") (f (quote ("resources"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tray-icon") (r "^0.11") (f (quote ("serde"))) (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (o #t) (d #t) (k 0)) (d (n "webkit2gtk") (r "=2.0.1") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.28") (d #t) (t "cfg(windows)") (k 0)) (d (n "window-vibrancy") (r "^0.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "window-vibrancy") (r "^0.4") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.52") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0ywn7hhizfn1mk5p8yf9zn1hqq0v92b7jssjicxffrv9accpmqnj") (f (quote (("wry" "tauri-runtime-wry") ("window-data-url" "data-url") ("test") ("rustls-tls" "reqwest/rustls-tls") ("protocol-asset" "http-range") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("objc-exception" "tauri-runtime-wry/objc-exception") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-libxdo" "tray-icon/libxdo" "muda/libxdo") ("linux-ipc-protocol" "tauri-runtime-wry/linux-protocol-body" "webkit2gtk/v2_40") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation" "uuid") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression")))) (l "Tauri") (s 2) (e (quote (("tray-icon" "dep:tray-icon") ("default" "wry" "compression" "objc-exception" "tray-icon?/common-controls-v6" "muda/common-controls-v6")))) (r "1.70")))

(define-public crate-tauri-2.0.0-alpha.20 (c (n "tauri") (v "2.0.0-alpha.20") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.17") (d #t) (k 2)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.18") (f (quote ("v3_24"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "ico") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "infer") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "muda") (r "^0.11") (f (quote ("serde"))) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "state") (r "^0.6") (d #t) (k 0)) (d (n "swift-rs") (r "^1.0.6") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "tauri-build") (r "^2.0.0-alpha.13") (d #t) (k 1)) (d (n "tauri-macros") (r "^2.0.0-alpha.12") (d #t) (k 0)) (d (n "tauri-runtime") (r "^1.0.0-alpha.7") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^1.0.0-alpha.8") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-alpha.12") (f (quote ("resources"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tray-icon") (r "^0.11") (f (quote ("serde"))) (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (o #t) (d #t) (k 0)) (d (n "webkit2gtk") (r "=2.0.1") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.28") (d #t) (t "cfg(windows)") (k 0)) (d (n "window-vibrancy") (r "^0.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "window-vibrancy") (r "^0.4") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.52") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1q9xizs4mlli3srsrbk91g74wfdpwyax75frv9fzvlrr7j3n7yq5") (f (quote (("wry" "tauri-runtime-wry") ("window-data-url" "data-url") ("test") ("rustls-tls" "reqwest/rustls-tls") ("protocol-asset" "http-range") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("objc-exception" "tauri-runtime-wry/objc-exception") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-libxdo" "tray-icon/libxdo" "muda/libxdo") ("linux-ipc-protocol" "tauri-runtime-wry/linux-protocol-body" "webkit2gtk/v2_40") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation" "uuid") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression")))) (l "Tauri") (s 2) (e (quote (("tray-icon" "dep:tray-icon") ("default" "wry" "compression" "objc-exception" "tray-icon?/common-controls-v6" "muda/common-controls-v6")))) (r "1.70")))

(define-public crate-tauri-1.5.4 (c (n "tauri") (v "1.5.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "encoding_rs") (r "^0.8.31") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "infer") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "notify-rust") (r "^4.5") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 1)) (d (n "open") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.2") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.10") (f (quote ("gtk3" "common-controls-v6"))) (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "sys-locale") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.4.3") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.14.2") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.14.3") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.5.2") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing" "formatting"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18.2") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "win7-notifications") (r "^0.4") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "1br9s4xa2qdrv1cgpnffpsmyq5xmc03ggk465jbnlxs3jm5w09zx") (f (quote (("wry" "tauri-runtime-wry") ("windows7-compat" "win7-notifications") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-minimizable") ("window-set-min-size") ("window-set-maximizable") ("window-set-max-size") ("window-set-ignore-cursor-events") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-content-protected") ("window-set-closable") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-maximizable" "window-set-minimizable" "window-set-closable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-content-protected" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-set-ignore-cursor-events" "window-start-dragging" "window-print") ("updater" "minisign-verify" "time" "base64" "http-api" "dialog-ask" "fs-extract-api") ("test") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-native-tls-vendored" "native-tls-vendored") ("reqwest-client" "http-api") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-api" "sys-locale") ("os-all" "os_info" "os-api") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust") ("native-tls-vendored" "reqwest/native-tls-vendored") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-protocol-headers" "tauri-runtime-wry/linux-headers" "webkit2gtk/v2_36") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "reqwest/multipart") ("http-api" "reqwest" "bytes") ("http-all" "http-request") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-exists") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-exists" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("app-show") ("app-hide") ("app-all" "app-show" "app-hide") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all" "app-all")))) (s 2) (e (quote (("tracing" "dep:tracing" "tauri-macros/tracing" "tauri-runtime-wry/tracing")))) (r "1.60")))

(define-public crate-tauri-2.0.0-alpha.21 (c (n "tauri") (v "2.0.0-alpha.21") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.17") (d #t) (k 2)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.18") (f (quote ("v3_24"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "ico") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "infer") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "muda") (r "^0.11") (f (quote ("serde"))) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "state") (r "^0.6") (d #t) (k 0)) (d (n "swift-rs") (r "^1.0.6") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "tauri-build") (r "^2.0.0-alpha.14") (d #t) (k 1)) (d (n "tauri-macros") (r "^2.0.0-alpha.13") (d #t) (k 0)) (d (n "tauri-runtime") (r "^1.0.0-alpha.8") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^1.0.0-alpha.9") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-alpha.13") (f (quote ("resources"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tray-icon") (r "^0.11") (f (quote ("serde"))) (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (o #t) (d #t) (k 0)) (d (n "webkit2gtk") (r "=2.0.1") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.28") (d #t) (t "cfg(windows)") (k 0)) (d (n "window-vibrancy") (r "^0.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "window-vibrancy") (r "^0.4") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.52") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)))) (h "08lp527d621mdks1823lriyan7v0k7rxg89ynxicz7xzh3w056ly") (f (quote (("wry" "tauri-runtime-wry") ("window-data-url" "data-url") ("test") ("rustls-tls" "reqwest/rustls-tls") ("protocol-asset" "http-range") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("objc-exception" "tauri-runtime-wry/objc-exception") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-libxdo" "tray-icon/libxdo" "muda/libxdo") ("linux-ipc-protocol" "tauri-runtime-wry/linux-protocol-body" "webkit2gtk/v2_40") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation" "uuid") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression")))) (l "Tauri") (s 2) (e (quote (("tray-icon" "dep:tray-icon") ("tracing" "dep:tracing" "tauri-macros/tracing" "tauri-runtime-wry/tracing") ("default" "wry" "compression" "objc-exception" "tray-icon?/common-controls-v6" "muda/common-controls-v6")))) (r "1.70")))

(define-public crate-tauri-2.0.0-beta.0 (c (n "tauri") (v "2.0.0-beta.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.17") (d #t) (k 2)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.18") (f (quote ("v3_24"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "ico") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "infer") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "muda") (r "^0.11") (f (quote ("serde"))) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "state") (r "^0.6") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "swift-rs") (r "^1.0.6") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "tauri-build") (r "^2.0.0-beta.0") (k 1)) (d (n "tauri-macros") (r "^2.0.0-beta.0") (d #t) (k 0)) (d (n "tauri-runtime") (r "^2.0.0-beta.0") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^2.0.0-beta.0") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.0") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.0") (f (quote ("build"))) (d #t) (k 1)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tray-icon") (r "^0.11") (f (quote ("serde"))) (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (o #t) (d #t) (k 0)) (d (n "webkit2gtk") (r "=2.0.1") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.28") (d #t) (t "cfg(windows)") (k 0)) (d (n "window-vibrancy") (r "^0.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "window-vibrancy") (r "^0.4") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.52") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)))) (h "01v0h9ggw9k6xhjv1i0pqa3gqnc5jgximciql85p06560mihxcja") (f (quote (("wry" "tauri-runtime-wry") ("webview-data-url" "data-url") ("unstable") ("test") ("rustls-tls" "reqwest/rustls-tls") ("protocol-asset" "http-range") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("objc-exception" "tauri-runtime-wry/objc-exception") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("macos-proxy" "tauri-runtime-wry/macos-proxy") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-libxdo" "tray-icon/libxdo" "muda/libxdo") ("linux-ipc-protocol" "tauri-runtime-wry/linux-protocol-body" "webkit2gtk/v2_40") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation" "uuid") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception" "common-controls-v6") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression")))) (l "Tauri") (s 2) (e (quote (("tray-icon" "dep:tray-icon") ("tracing" "dep:tracing" "tauri-macros/tracing" "tauri-runtime-wry/tracing") ("common-controls-v6" "tray-icon?/common-controls-v6" "muda/common-controls-v6")))) (r "1.70")))

(define-public crate-tauri-2.0.0-beta.1 (c (n "tauri") (v "2.0.0-beta.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.17") (d #t) (k 2)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.18") (f (quote ("v3_24"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "ico") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "infer") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "muda") (r "^0.11") (f (quote ("serde"))) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "state") (r "^0.6") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "swift-rs") (r "^1.0.6") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "tauri-build") (r "^2.0.0-beta.0") (k 1)) (d (n "tauri-macros") (r "^2.0.0-beta.0") (d #t) (k 0)) (d (n "tauri-runtime") (r "^2.0.0-beta.0") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^2.0.0-beta.0") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.0") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.0") (f (quote ("build"))) (d #t) (k 1)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tray-icon") (r "^0.11") (f (quote ("serde"))) (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (o #t) (d #t) (k 0)) (d (n "webkit2gtk") (r "=2.0.1") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.28") (d #t) (t "cfg(windows)") (k 0)) (d (n "window-vibrancy") (r "^0.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "window-vibrancy") (r "^0.4") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.52") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0708wpn57n0whyn4d4max2i11cgqkplwb9yyc3jgms4mzjbch10g") (f (quote (("wry" "tauri-runtime-wry") ("webview-data-url" "data-url") ("unstable") ("test") ("rustls-tls" "reqwest/rustls-tls") ("protocol-asset" "http-range") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("objc-exception" "tauri-runtime-wry/objc-exception") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("macos-proxy" "tauri-runtime-wry/macos-proxy") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-libxdo" "tray-icon/libxdo" "muda/libxdo") ("linux-ipc-protocol" "tauri-runtime-wry/linux-protocol-body" "webkit2gtk/v2_40") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation" "uuid") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception" "common-controls-v6") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression")))) (l "Tauri") (s 2) (e (quote (("tray-icon" "dep:tray-icon") ("tracing" "dep:tracing" "tauri-macros/tracing" "tauri-runtime-wry/tracing") ("common-controls-v6" "tray-icon?/common-controls-v6" "muda/common-controls-v6")))) (r "1.70")))

(define-public crate-tauri-2.0.0-beta.2 (c (n "tauri") (v "2.0.0-beta.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.17") (d #t) (k 2)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.18") (f (quote ("v3_24"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "ico") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "infer") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "muda") (r "^0.11") (f (quote ("serde"))) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "nix") (r "^0.26.0") (f (quote ("user" "socket" "uio"))) (t "cfg(unix)") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "state") (r "^0.6") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "swift-rs") (r "^1.0.6") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "tauri-build") (r "^2.0.0-beta.1") (k 1)) (d (n "tauri-macros") (r "^2.0.0-beta.1") (d #t) (k 0)) (d (n "tauri-runtime") (r "^2.0.0-beta.1") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^2.0.0-beta.1") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.1") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.1") (f (quote ("build"))) (d #t) (k 1)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tray-icon") (r "^0.11") (f (quote ("serde"))) (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (o #t) (d #t) (k 0)) (d (n "webkit2gtk") (r "=2.0.1") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.28") (d #t) (t "cfg(windows)") (k 0)) (d (n "window-vibrancy") (r "^0.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "window-vibrancy") (r "^0.4") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.52") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0q2c618g0y6gf31hc0zfv91f3z7qv36w43pfilwp9wcbqd3d3155") (f (quote (("wry" "tauri-runtime-wry") ("webview-data-url" "data-url") ("unstable") ("test") ("rustls-tls" "reqwest/rustls-tls") ("protocol-asset" "http-range") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("objc-exception" "tauri-runtime-wry/objc-exception") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("macos-proxy" "tauri-runtime-wry/macos-proxy") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-libxdo" "tray-icon/libxdo" "muda/libxdo") ("linux-ipc-protocol" "tauri-runtime-wry/linux-protocol-body" "webkit2gtk/v2_40") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation" "uuid") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception" "common-controls-v6") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression")))) (l "Tauri") (s 2) (e (quote (("tray-icon" "dep:tray-icon") ("tracing" "dep:tracing" "tauri-macros/tracing" "tauri-runtime-wry/tracing") ("common-controls-v6" "tray-icon?/common-controls-v6" "muda/common-controls-v6")))) (r "1.70")))

(define-public crate-tauri-1.6.0 (c (n "tauri") (v "1.6.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (t "cfg(windows)") (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "encoding_rs") (r "^0.8.31") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("std" "serde"))) (o #t) (d #t) (k 0)) (d (n "infer") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "nix") (r "^0.26.0") (f (quote ("user" "socket" "uio"))) (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "notify-rust") (r "^4.5") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 1)) (d (n "open") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.2") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.10") (f (quote ("gtk3" "common-controls-v6"))) (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value" "preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "sys-locale") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.4.3") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.14.2") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.14.4") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.5.2") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing" "formatting"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18.2") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "win7-notifications") (r "^0.4") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "1aj98shfqw513h2jny9v65k1dvn6m1i7lyjg42cm2x600zzj198d") (f (quote (("wry" "tauri-runtime-wry") ("windows7-compat" "win7-notifications") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-minimizable") ("window-set-min-size") ("window-set-maximizable") ("window-set-max-size") ("window-set-ignore-cursor-events") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-content-protected") ("window-set-closable") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-maximizable" "window-set-minimizable" "window-set-closable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-content-protected" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-set-ignore-cursor-events" "window-start-dragging" "window-print") ("updater" "minisign-verify" "time" "base64" "http-api" "dialog-ask" "fs-extract-api") ("test") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-native-tls-vendored" "native-tls-vendored") ("reqwest-client" "http-api") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-api" "sys-locale") ("os-all" "os_info" "os-api") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust" "nix") ("native-tls-vendored" "reqwest/native-tls-vendored") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-protocol-headers" "tauri-runtime-wry/linux-headers" "webkit2gtk/v2_36") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "reqwest/multipart") ("http-api" "reqwest" "bytes" "indexmap") ("http-all" "http-request") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-exists") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-exists" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("app-show") ("app-hide") ("app-all" "app-show" "app-hide") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all" "app-all")))) (s 2) (e (quote (("tracing" "dep:tracing" "tauri-macros/tracing" "tauri-runtime-wry/tracing")))) (r "1.60")))

(define-public crate-tauri-2.0.0-beta.3 (c (n "tauri") (v "2.0.0-beta.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.17") (d #t) (k 2)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.18") (f (quote ("v3_24"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "ico") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "infer") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "muda") (r "^0.11") (f (quote ("serde"))) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "state") (r "^0.6") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "swift-rs") (r "^1.0.6") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "tauri-build") (r "^2.0.0-beta.2") (k 1)) (d (n "tauri-macros") (r "^2.0.0-beta.2") (d #t) (k 0)) (d (n "tauri-runtime") (r "^2.0.0-beta.2") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^2.0.0-beta.2") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.2") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.2") (f (quote ("build"))) (d #t) (k 1)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tray-icon") (r "^0.11") (f (quote ("serde"))) (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (o #t) (d #t) (k 0)) (d (n "webkit2gtk") (r "=2.0.1") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.28") (d #t) (t "cfg(windows)") (k 0)) (d (n "window-vibrancy") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "window-vibrancy") (r "^0.5") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.52") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1pmg00842jjpl1zwlzhpw8faqhja2ghzyg4afffqif9z1q9psjb6") (f (quote (("wry" "tauri-runtime-wry") ("webview-data-url" "data-url") ("unstable") ("test") ("rustls-tls" "reqwest/rustls-tls") ("protocol-asset" "http-range") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("objc-exception" "tauri-runtime-wry/objc-exception") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("macos-proxy" "tauri-runtime-wry/macos-proxy") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-libxdo" "tray-icon/libxdo" "muda/libxdo") ("linux-ipc-protocol" "tauri-runtime-wry/linux-protocol-body" "webkit2gtk/v2_40") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation" "uuid") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception" "common-controls-v6") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression")))) (l "Tauri") (s 2) (e (quote (("tray-icon" "dep:tray-icon") ("tracing" "dep:tracing" "tauri-macros/tracing" "tauri-runtime-wry/tracing") ("common-controls-v6" "tray-icon?/common-controls-v6" "muda/common-controls-v6")))) (r "1.70")))

(define-public crate-tauri-2.0.0-beta.4 (c (n "tauri") (v "2.0.0-beta.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.17") (d #t) (k 2)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.18") (f (quote ("v3_24"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "ico") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "infer") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "muda") (r "^0.11") (f (quote ("serde"))) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "state") (r "^0.6") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "swift-rs") (r "^1.0.6") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "tauri-build") (r "^2.0.0-beta.3") (k 1)) (d (n "tauri-macros") (r "^2.0.0-beta.3") (d #t) (k 0)) (d (n "tauri-runtime") (r "^2.0.0-beta.3") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^2.0.0-beta.3") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.3") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.3") (f (quote ("build"))) (d #t) (k 1)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tray-icon") (r "^0.11") (f (quote ("serde"))) (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (o #t) (d #t) (k 0)) (d (n "webkit2gtk") (r "=2.0.1") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.28") (d #t) (t "cfg(windows)") (k 0)) (d (n "window-vibrancy") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "window-vibrancy") (r "^0.5") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.52") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1r7j3436c9g0nsqk7510g16czh5wiisarygz2dcdhblkks010sxv") (f (quote (("wry" "tauri-runtime-wry") ("webview-data-url" "data-url") ("unstable") ("test") ("rustls-tls" "reqwest/rustls-tls") ("protocol-asset" "http-range") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("objc-exception" "tauri-runtime-wry/objc-exception") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("macos-proxy" "tauri-runtime-wry/macos-proxy") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-libxdo" "tray-icon/libxdo" "muda/libxdo") ("linux-ipc-protocol" "tauri-runtime-wry/linux-protocol-body" "webkit2gtk/v2_40") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation" "uuid") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception" "common-controls-v6") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression")))) (l "Tauri") (s 2) (e (quote (("tray-icon" "dep:tray-icon") ("tracing" "dep:tracing" "tauri-macros/tracing" "tauri-runtime-wry/tracing") ("common-controls-v6" "tray-icon?/common-controls-v6" "muda/common-controls-v6")))) (r "1.70")))

(define-public crate-tauri-2.0.0-beta.5 (c (n "tauri") (v "2.0.0-beta.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.17") (d #t) (k 2)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.18") (f (quote ("v3_24"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "ico") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "infer") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "muda") (r "^0.11") (f (quote ("serde"))) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "state") (r "^0.6") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "swift-rs") (r "^1.0.6") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "tauri-build") (r "^2.0.0-beta.4") (k 1)) (d (n "tauri-macros") (r "^2.0.0-beta.4") (d #t) (k 0)) (d (n "tauri-runtime") (r "^2.0.0-beta.4") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^2.0.0-beta.4") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.4") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.4") (f (quote ("build"))) (d #t) (k 1)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tray-icon") (r "^0.11") (f (quote ("serde"))) (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (o #t) (d #t) (k 0)) (d (n "webkit2gtk") (r "=2.0.1") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.28") (d #t) (t "cfg(windows)") (k 0)) (d (n "window-vibrancy") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "window-vibrancy") (r "^0.5") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.52") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0gk7fxfp4bbn0ixjmdwcazvq6ly6pw1zkrq8hgi3nb740pa4i4nq") (f (quote (("wry" "tauri-runtime-wry") ("webview-data-url" "data-url") ("unstable") ("test") ("rustls-tls" "reqwest/rustls-tls") ("protocol-asset" "http-range") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("objc-exception" "tauri-runtime-wry/objc-exception") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("macos-proxy" "tauri-runtime-wry/macos-proxy") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-libxdo" "tray-icon/libxdo" "muda/libxdo") ("linux-ipc-protocol" "tauri-runtime-wry/linux-protocol-body" "webkit2gtk/v2_40") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation" "uuid") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception" "common-controls-v6") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression")))) (l "Tauri") (s 2) (e (quote (("tray-icon" "dep:tray-icon") ("tracing" "dep:tracing" "tauri-macros/tracing" "tauri-runtime-wry/tracing") ("common-controls-v6" "tray-icon?/common-controls-v6" "muda/common-controls-v6")))) (r "1.70")))

(define-public crate-tauri-2.0.0-beta.6 (c (n "tauri") (v "2.0.0-beta.6") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.17") (d #t) (k 2)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.18") (f (quote ("v3_24"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "ico") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "infer") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "muda") (r "^0.11") (f (quote ("serde"))) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "state") (r "^0.6") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "swift-rs") (r "^1.0.6") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "tauri-build") (r "^2.0.0-beta.4") (k 1)) (d (n "tauri-macros") (r "^2.0.0-beta.4") (d #t) (k 0)) (d (n "tauri-runtime") (r "^2.0.0-beta.4") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^2.0.0-beta.4") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.4") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.4") (f (quote ("build"))) (d #t) (k 1)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tray-icon") (r "^0.11") (f (quote ("serde"))) (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (o #t) (d #t) (k 0)) (d (n "webkit2gtk") (r "=2.0.1") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.28") (d #t) (t "cfg(windows)") (k 0)) (d (n "window-vibrancy") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "window-vibrancy") (r "^0.5") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.52") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)))) (h "07d2n5iq1br0mf74dkqsymfwl90zxwkxw012jzlx3dgjcckl0gap") (f (quote (("wry" "tauri-runtime-wry") ("webview-data-url" "data-url") ("unstable") ("test") ("rustls-tls" "reqwest/rustls-tls") ("protocol-asset" "http-range") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("objc-exception" "tauri-runtime-wry/objc-exception") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("macos-proxy" "tauri-runtime-wry/macos-proxy") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-libxdo" "tray-icon/libxdo" "muda/libxdo") ("linux-ipc-protocol" "tauri-runtime-wry/linux-protocol-body" "webkit2gtk/v2_40") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation" "uuid") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception" "common-controls-v6") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression")))) (l "Tauri") (s 2) (e (quote (("tray-icon" "dep:tray-icon") ("tracing" "dep:tracing" "tauri-macros/tracing" "tauri-runtime-wry/tracing") ("common-controls-v6" "tray-icon?/common-controls-v6" "muda/common-controls-v6")))) (r "1.70")))

(define-public crate-tauri-2.0.0-beta.7 (c (n "tauri") (v "2.0.0-beta.7") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.17") (d #t) (k 2)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.18") (f (quote ("v3_24"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "ico") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "infer") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "muda") (r "^0.11") (f (quote ("serde"))) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "state") (r "^0.6") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "swift-rs") (r "^1.0.6") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "tauri-build") (r "^2.0.0-beta.5") (k 1)) (d (n "tauri-macros") (r "^2.0.0-beta.5") (d #t) (k 0)) (d (n "tauri-runtime") (r "^2.0.0-beta.5") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^2.0.0-beta.5") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.5") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.5") (f (quote ("build"))) (d #t) (k 1)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tray-icon") (r "^0.11") (f (quote ("serde"))) (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "url") (r "^2.4") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (o #t) (d #t) (k 0)) (d (n "webkit2gtk") (r "=2.0.1") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.28") (d #t) (t "cfg(windows)") (k 0)) (d (n "window-vibrancy") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "window-vibrancy") (r "^0.5") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.52") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1bsdyz4ckrbzshysal112hbrhrmjvlgab6a36jp3fz6b72l55zrp") (f (quote (("wry" "tauri-runtime-wry") ("webview-data-url" "data-url") ("unstable") ("test") ("rustls-tls" "reqwest/rustls-tls") ("protocol-asset" "http-range") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("objc-exception" "tauri-runtime-wry/objc-exception") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("macos-proxy" "tauri-runtime-wry/macos-proxy") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-libxdo" "tray-icon/libxdo" "muda/libxdo") ("linux-ipc-protocol" "tauri-runtime-wry/linux-protocol-body" "webkit2gtk/v2_40") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation" "uuid") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception" "common-controls-v6") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression")))) (l "Tauri") (s 2) (e (quote (("tray-icon" "dep:tray-icon") ("tracing" "dep:tracing" "tauri-macros/tracing" "tauri-runtime-wry/tracing") ("common-controls-v6" "tray-icon?/common-controls-v6" "muda/common-controls-v6")))) (r "1.70")))

(define-public crate-tauri-1.6.1 (c (n "tauri") (v "1.6.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (t "cfg(windows)") (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "encoding_rs") (r "^0.8.31") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("std" "serde"))) (o #t) (d #t) (k 0)) (d (n "infer") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "nix") (r "^0.26.0") (f (quote ("user" "socket" "uio"))) (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "notify-rust") (r "^4.5") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 1)) (d (n "open") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.2") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.10") (f (quote ("gtk3" "common-controls-v6"))) (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value" "preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "sys-locale") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.4.3") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.14.2") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.14.5") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.5.3") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing" "formatting"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18.2") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "win7-notifications") (r "^0.4") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "1v8gmhx89cy0p3gfi2ijr83kh1q9x6qv9jxgkz95avg34mvi2y7h") (f (quote (("wry" "tauri-runtime-wry") ("windows7-compat" "win7-notifications") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-minimizable") ("window-set-min-size") ("window-set-maximizable") ("window-set-max-size") ("window-set-ignore-cursor-events") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-content-protected") ("window-set-closable") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-maximizable" "window-set-minimizable" "window-set-closable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-content-protected" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-set-ignore-cursor-events" "window-start-dragging" "window-print") ("updater" "minisign-verify" "time" "base64" "http-api" "dialog-ask" "fs-extract-api") ("test") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-native-tls-vendored" "native-tls-vendored") ("reqwest-client" "http-api") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-api" "sys-locale") ("os-all" "os_info" "os-api") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust" "nix") ("native-tls-vendored" "reqwest/native-tls-vendored") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-protocol-headers" "tauri-runtime-wry/linux-headers" "webkit2gtk/v2_36") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "reqwest/multipart") ("http-api" "reqwest" "bytes" "indexmap") ("http-all" "http-request") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-exists") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-exists" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("app-show") ("app-hide") ("app-all" "app-show" "app-hide") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all" "app-all")))) (s 2) (e (quote (("tracing" "dep:tracing" "tauri-macros/tracing" "tauri-runtime-wry/tracing")))) (r "1.60")))

(define-public crate-tauri-2.0.0-beta.8 (c (n "tauri") (v "2.0.0-beta.8") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.17") (d #t) (k 2)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.18") (f (quote ("v3_24"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "ico") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "infer") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "muda") (r "^0.11") (f (quote ("serde"))) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "state") (r "^0.6") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "swift-rs") (r "^1.0.6") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "tauri-build") (r "^2.0.0-beta.6") (k 1)) (d (n "tauri-macros") (r "^2.0.0-beta.6") (d #t) (k 0)) (d (n "tauri-runtime") (r "^2.0.0-beta.6") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^2.0.0-beta.6") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.6") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.6") (f (quote ("build"))) (d #t) (k 1)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tray-icon") (r "^0.11") (f (quote ("serde"))) (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (o #t) (d #t) (k 0)) (d (n "webkit2gtk") (r "=2.0.1") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.28") (d #t) (t "cfg(windows)") (k 0)) (d (n "window-vibrancy") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "window-vibrancy") (r "^0.5") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.52") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1zrw4wa83arypx9adghngacxzgc5ap14biki1wy865jkrxf3vgdj") (f (quote (("wry" "tauri-runtime-wry") ("webview-data-url" "data-url") ("unstable") ("test") ("rustls-tls" "reqwest/rustls-tls") ("protocol-asset" "http-range") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("objc-exception" "tauri-runtime-wry/objc-exception") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("macos-proxy" "tauri-runtime-wry/macos-proxy") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-libxdo" "tray-icon/libxdo" "muda/libxdo") ("linux-ipc-protocol" "tauri-runtime-wry/linux-protocol-body" "webkit2gtk/v2_40") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation" "uuid") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception" "common-controls-v6") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression")))) (l "Tauri") (s 2) (e (quote (("tray-icon" "dep:tray-icon") ("tracing" "dep:tracing" "tauri-macros/tracing" "tauri-runtime-wry/tracing") ("common-controls-v6" "tray-icon?/common-controls-v6" "muda/common-controls-v6")))) (r "1.70")))

(define-public crate-tauri-2.0.0-beta.9 (c (n "tauri") (v "2.0.0-beta.9") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.17") (d #t) (k 2)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.18") (f (quote ("v3_24"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "ico") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "infer") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "muda") (r "^0.11") (f (quote ("serde"))) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "state") (r "^0.6") (d #t) (k 0)) (d (n "swift-rs") (r "^1.0.6") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "tauri-build") (r "^2.0.0-beta.7") (k 1)) (d (n "tauri-macros") (r "^2.0.0-beta.7") (d #t) (k 0)) (d (n "tauri-runtime") (r "^2.0.0-beta.7") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^2.0.0-beta.7") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.7") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.7") (f (quote ("build"))) (d #t) (k 1)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tray-icon") (r "^0.11") (f (quote ("serde"))) (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (o #t) (d #t) (k 0)) (d (n "webkit2gtk") (r "=2.0.1") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.28") (d #t) (t "cfg(windows)") (k 0)) (d (n "window-vibrancy") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "window-vibrancy") (r "^0.5") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.52") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1xdlvxapj8v67kv2c1q0h8mwhxdkjgz40zw80m51chdxcqam4fim") (f (quote (("wry" "tauri-runtime-wry") ("webview-data-url" "data-url") ("unstable" "tauri-runtime-wry/unstable") ("test") ("rustls-tls" "reqwest/rustls-tls") ("protocol-asset" "http-range") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("objc-exception" "tauri-runtime-wry/objc-exception") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("macos-proxy" "tauri-runtime-wry/macos-proxy") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-libxdo" "tray-icon/libxdo" "muda/libxdo") ("linux-ipc-protocol" "tauri-runtime-wry/linux-protocol-body" "webkit2gtk/v2_40") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation" "uuid") ("image-png" "png" "infer") ("image-ico" "ico" "infer") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception" "common-controls-v6") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression")))) (l "Tauri") (s 2) (e (quote (("tray-icon" "dep:tray-icon") ("tracing" "dep:tracing" "tauri-macros/tracing" "tauri-runtime-wry/tracing") ("common-controls-v6" "tray-icon?/common-controls-v6" "muda/common-controls-v6")))) (r "1.70")))

(define-public crate-tauri-2.0.0-beta.10 (c (n "tauri") (v "2.0.0-beta.10") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.17") (d #t) (k 2)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.18") (f (quote ("v3_24"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "ico") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "infer") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "muda") (r "^0.11") (f (quote ("serde"))) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "state") (r "^0.6") (d #t) (k 0)) (d (n "swift-rs") (r "^1.0.6") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "tauri-build") (r "^2.0.0-beta.8") (k 1)) (d (n "tauri-macros") (r "^2.0.0-beta.8") (d #t) (k 0)) (d (n "tauri-runtime") (r "^2.0.0-beta.8") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^2.0.0-beta.8") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.8") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.8") (f (quote ("build"))) (d #t) (k 1)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tray-icon") (r "^0.11") (f (quote ("serde"))) (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "urlpattern") (r "^0.2") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (o #t) (d #t) (k 0)) (d (n "webkit2gtk") (r "=2.0.1") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.28") (d #t) (t "cfg(windows)") (k 0)) (d (n "window-vibrancy") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "window-vibrancy") (r "^0.5") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.52") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)))) (h "15yn21jhkpvrz0qhbnb3hl512yr49k0igl0v2sgz42b7nfy6xbg7") (f (quote (("wry" "tauri-runtime-wry") ("webview-data-url" "data-url") ("unstable" "tauri-runtime-wry/unstable") ("test") ("rustls-tls" "reqwest/rustls-tls") ("protocol-asset" "http-range") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("objc-exception" "tauri-runtime-wry/objc-exception") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("macos-proxy" "tauri-runtime-wry/macos-proxy") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-libxdo" "tray-icon/libxdo" "muda/libxdo") ("linux-ipc-protocol" "tauri-runtime-wry/linux-protocol-body" "webkit2gtk/v2_40") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation" "uuid") ("image-png" "png" "infer") ("image-ico" "ico" "infer") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception" "common-controls-v6") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression")))) (l "Tauri") (s 2) (e (quote (("tray-icon" "dep:tray-icon") ("tracing" "dep:tracing" "tauri-macros/tracing" "tauri-runtime-wry/tracing") ("common-controls-v6" "tray-icon?/common-controls-v6" "muda/common-controls-v6")))) (r "1.70")))

(define-public crate-tauri-2.0.0-beta.11 (c (n "tauri") (v "2.0.0-beta.11") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.17") (d #t) (k 2)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.18") (f (quote ("v3_24"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "image") (r "^0.24") (o #t) (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "muda") (r "^0.11") (f (quote ("serde"))) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "state") (r "^0.6") (d #t) (k 0)) (d (n "swift-rs") (r "^1.0.6") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "tauri-build") (r "^2.0.0-beta.9") (k 1)) (d (n "tauri-macros") (r "^2.0.0-beta.9") (d #t) (k 0)) (d (n "tauri-runtime") (r "^2.0.0-beta.9") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^2.0.0-beta.9") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.9") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.9") (f (quote ("build"))) (d #t) (k 1)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tray-icon") (r "^0.11") (f (quote ("serde"))) (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "urlpattern") (r "^0.2") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (o #t) (d #t) (k 0)) (d (n "webkit2gtk") (r "=2.0.1") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.28") (d #t) (t "cfg(windows)") (k 0)) (d (n "window-vibrancy") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "window-vibrancy") (r "^0.5") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.52") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1s5la46h75xdxar18h2an3nd1d7qmbphf9rv5a6lh25qrs4qihf4") (f (quote (("wry" "tauri-runtime-wry") ("webview-data-url" "data-url") ("unstable" "tauri-runtime-wry/unstable") ("test") ("rustls-tls" "reqwest/rustls-tls") ("protocol-asset" "http-range") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("objc-exception" "tauri-runtime-wry/objc-exception") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("macos-proxy" "tauri-runtime-wry/macos-proxy") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-libxdo" "tray-icon/libxdo" "muda/libxdo") ("linux-ipc-protocol" "tauri-runtime-wry/linux-protocol-body" "webkit2gtk/v2_40") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation" "uuid") ("image-png" "image/png") ("image-ico" "image/ico") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception" "common-controls-v6") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression")))) (l "Tauri") (s 2) (e (quote (("tray-icon" "dep:tray-icon") ("tracing" "dep:tracing" "tauri-macros/tracing" "tauri-runtime-wry/tracing") ("common-controls-v6" "tray-icon?/common-controls-v6" "muda/common-controls-v6")))) (r "1.70")))

(define-public crate-tauri-2.0.0-beta.12 (c (n "tauri") (v "2.0.0-beta.12") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.17") (d #t) (k 2)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.18") (f (quote ("v3_24"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "image") (r "^0.24") (o #t) (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "muda") (r "^0.12") (f (quote ("serde"))) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "state") (r "^0.6") (d #t) (k 0)) (d (n "swift-rs") (r "^1.0.6") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "tauri-build") (r "^2.0.0-beta.10") (k 1)) (d (n "tauri-macros") (r "^2.0.0-beta.10") (d #t) (k 0)) (d (n "tauri-runtime") (r "^2.0.0-beta.10") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^2.0.0-beta.10") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.10") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.10") (f (quote ("build"))) (d #t) (k 1)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tray-icon") (r "^0.12") (f (quote ("serde"))) (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "urlpattern") (r "^0.2") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (o #t) (d #t) (k 0)) (d (n "webkit2gtk") (r "=2.0.1") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.28") (d #t) (t "cfg(windows)") (k 0)) (d (n "window-vibrancy") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "window-vibrancy") (r "^0.5") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.52") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1v6wzqnajaiwkr4gxjy42jl01r2fzi8qxg1k50r76sqlqqk00gf3") (f (quote (("wry" "tauri-runtime-wry") ("webview-data-url" "data-url") ("unstable" "tauri-runtime-wry/unstable") ("test") ("rustls-tls" "reqwest/rustls-tls") ("protocol-asset" "http-range") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("objc-exception" "tauri-runtime-wry/objc-exception") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("macos-proxy" "tauri-runtime-wry/macos-proxy") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-libxdo" "tray-icon/libxdo" "muda/libxdo") ("linux-ipc-protocol" "tauri-runtime-wry/linux-protocol-body" "webkit2gtk/v2_40") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation" "uuid") ("image-png" "image/png") ("image-ico" "image/ico") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception" "common-controls-v6") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression")))) (l "Tauri") (s 2) (e (quote (("tray-icon" "dep:tray-icon") ("tracing" "dep:tracing" "tauri-macros/tracing" "tauri-runtime-wry/tracing") ("common-controls-v6" "tray-icon?/common-controls-v6" "muda/common-controls-v6")))) (r "1.70")))

(define-public crate-tauri-2.0.0-beta.13 (c (n "tauri") (v "2.0.0-beta.13") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.17") (d #t) (k 2)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.18") (f (quote ("v3_24"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "image") (r "^0.24") (o #t) (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "muda") (r "^0.12") (f (quote ("serde"))) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "state") (r "^0.6") (d #t) (k 0)) (d (n "swift-rs") (r "^1.0.6") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "tauri-build") (r "^2.0.0-beta.10") (k 1)) (d (n "tauri-macros") (r "^2.0.0-beta.10") (d #t) (k 0)) (d (n "tauri-runtime") (r "^2.0.0-beta.10") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^2.0.0-beta.10") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.10") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.10") (f (quote ("build"))) (d #t) (k 1)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tray-icon") (r "^0.12") (f (quote ("serde"))) (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "urlpattern") (r "^0.2") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (o #t) (d #t) (k 0)) (d (n "webkit2gtk") (r "=2.0.1") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.28") (d #t) (t "cfg(windows)") (k 0)) (d (n "window-vibrancy") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "window-vibrancy") (r "^0.5") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.52") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1k1jy0v0aqin2gpv274w3b365y5ghcc9mvdqpwhawxchd949l49v") (f (quote (("wry" "tauri-runtime-wry") ("webview-data-url" "data-url") ("unstable" "tauri-runtime-wry/unstable") ("test") ("rustls-tls" "reqwest/rustls-tls") ("protocol-asset" "http-range") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("objc-exception" "tauri-runtime-wry/objc-exception") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("macos-proxy" "tauri-runtime-wry/macos-proxy") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-libxdo" "tray-icon/libxdo" "muda/libxdo") ("linux-ipc-protocol" "tauri-runtime-wry/linux-protocol-body" "webkit2gtk/v2_40") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation" "uuid") ("image-png" "image/png") ("image-ico" "image/ico") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception" "common-controls-v6") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression")))) (l "Tauri") (s 2) (e (quote (("tray-icon" "dep:tray-icon") ("tracing" "dep:tracing" "tauri-macros/tracing" "tauri-runtime-wry/tracing") ("common-controls-v6" "tray-icon?/common-controls-v6" "muda/common-controls-v6")))) (r "1.70")))

(define-public crate-tauri-2.0.0-beta.14 (c (n "tauri") (v "2.0.0-beta.14") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.17") (d #t) (k 2)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.18") (f (quote ("v3_24"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^1.1") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "image") (r "^0.24") (o #t) (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "muda") (r "^0.13") (f (quote ("serde"))) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("json" "stream"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "state") (r "^0.6") (d #t) (k 0)) (d (n "swift-rs") (r "^1.0.6") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "tauri-build") (r "^2.0.0-beta.11") (k 1)) (d (n "tauri-macros") (r "^2.0.0-beta.11") (d #t) (k 0)) (d (n "tauri-runtime") (r "^2.0.0-beta.11") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^2.0.0-beta.11") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.11") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.11") (f (quote ("build"))) (d #t) (k 1)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tray-icon") (r "^0.13") (f (quote ("serde"))) (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "urlpattern") (r "^0.2") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (o #t) (d #t) (k 0)) (d (n "webkit2gtk") (r "=2.0.1") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.29") (d #t) (t "cfg(windows)") (k 0)) (d (n "window-vibrancy") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "window-vibrancy") (r "^0.5") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.54") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0jighiqhq3f9fx8hvvkmllz9yglrg1yf92sg48an8j47nsyv03x5") (f (quote (("wry" "tauri-runtime-wry") ("webview-data-url" "data-url") ("unstable" "tauri-runtime-wry/unstable") ("test") ("rustls-tls" "reqwest/rustls-tls") ("protocol-asset" "http-range") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("objc-exception" "tauri-runtime-wry/objc-exception") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("macos-proxy" "tauri-runtime-wry/macos-proxy") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-libxdo" "tray-icon/libxdo" "muda/libxdo") ("linux-ipc-protocol" "tauri-runtime-wry/linux-protocol-body" "webkit2gtk/v2_40") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation" "uuid") ("image-png" "image/png") ("image-ico" "image/ico") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception" "common-controls-v6") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression")))) (l "Tauri") (s 2) (e (quote (("tray-icon" "dep:tray-icon") ("tracing" "dep:tracing" "tauri-macros/tracing" "tauri-runtime-wry/tracing") ("common-controls-v6" "tray-icon?/common-controls-v6" "muda/common-controls-v6")))) (r "1.70")))

(define-public crate-tauri-2.0.0-beta.15 (c (n "tauri") (v "2.0.0-beta.15") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.17") (d #t) (k 2)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.18") (f (quote ("v3_24"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^1.1") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "image") (r "^0.24") (o #t) (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "muda") (r "^0.13") (f (quote ("serde"))) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("json" "stream"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "state") (r "^0.6") (d #t) (k 0)) (d (n "swift-rs") (r "^1.0.6") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "tauri-build") (r "^2.0.0-beta.12") (k 1)) (d (n "tauri-macros") (r "^2.0.0-beta.12") (d #t) (k 0)) (d (n "tauri-runtime") (r "^2.0.0-beta.12") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^2.0.0-beta.12") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.12") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.12") (f (quote ("build"))) (d #t) (k 1)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tray-icon") (r "^0.13") (f (quote ("serde"))) (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "urlpattern") (r "^0.2") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (o #t) (d #t) (k 0)) (d (n "webkit2gtk") (r "=2.0.1") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.29") (d #t) (t "cfg(windows)") (k 0)) (d (n "window-vibrancy") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "window-vibrancy") (r "^0.5") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.54") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)))) (h "12hiszshalz5vcdbyfbm2z61vm784dvz3jvacvqz38spk5jvl2nd") (f (quote (("wry" "tauri-runtime-wry") ("webview-data-url" "data-url") ("unstable" "tauri-runtime-wry/unstable") ("test") ("rustls-tls" "reqwest/rustls-tls") ("protocol-asset" "http-range") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("objc-exception" "tauri-runtime-wry/objc-exception") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("macos-proxy" "tauri-runtime-wry/macos-proxy") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-libxdo" "tray-icon/libxdo" "muda/libxdo") ("linux-ipc-protocol" "tauri-runtime-wry/linux-protocol-body" "webkit2gtk/v2_40") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation" "uuid") ("image-png" "image/png") ("image-ico" "image/ico") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception" "common-controls-v6") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression")))) (l "Tauri") (s 2) (e (quote (("tray-icon" "dep:tray-icon") ("tracing" "dep:tracing" "tauri-macros/tracing" "tauri-runtime-wry/tracing") ("common-controls-v6" "tray-icon?/common-controls-v6" "muda/common-controls-v6")))) (r "1.70")))

(define-public crate-tauri-1.6.2 (c (n "tauri") (v "1.6.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (t "cfg(windows)") (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "encoding_rs") (r "^0.8.31") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.5") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("std" "serde"))) (o #t) (d #t) (k 0)) (d (n "infer") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "nix") (r "^0.26.0") (f (quote ("user" "socket" "uio"))) (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "notify-rust") (r "^4.5") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 1)) (d (n "open") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.2") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.10") (f (quote ("gtk3" "common-controls-v6"))) (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value" "preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "sys-locale") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.4.3") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.14.2") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.14.5") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.5.3") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing" "formatting"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18.2") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "win7-notifications") (r "^0.4") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "1m3qrmq4ab569wi7mph20mhn48hi353rvhwv981bigr1fz6fyyh4") (f (quote (("wry" "tauri-runtime-wry") ("windows7-compat" "win7-notifications") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-minimizable") ("window-set-min-size") ("window-set-maximizable") ("window-set-max-size") ("window-set-ignore-cursor-events") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-content-protected") ("window-set-closable") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-maximizable" "window-set-minimizable" "window-set-closable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-content-protected" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-set-ignore-cursor-events" "window-start-dragging" "window-print") ("updater" "minisign-verify" "time" "base64" "http-api" "dialog-ask" "fs-extract-api") ("test") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-native-tls-vendored" "native-tls-vendored") ("reqwest-client" "http-api") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-api" "sys-locale") ("os-all" "os_info" "os-api") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust" "nix") ("native-tls-vendored" "reqwest/native-tls-vendored") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-protocol-headers" "tauri-runtime-wry/linux-headers" "webkit2gtk/v2_36") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "reqwest/multipart") ("http-api" "reqwest" "bytes" "indexmap") ("http-all" "http-request") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-exists") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-exists" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("app-show") ("app-hide") ("app-all" "app-show" "app-hide") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all" "app-all")))) (s 2) (e (quote (("tracing" "dep:tracing" "tauri-macros/tracing" "tauri-runtime-wry/tracing")))) (r "1.60")))

(define-public crate-tauri-2.0.0-beta.16 (c (n "tauri") (v "2.0.0-beta.16") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.17") (d #t) (k 2)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.18") (f (quote ("v3_24"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "http") (r "^1.1") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "image") (r "^0.24") (o #t) (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "muda") (r "^0.13") (f (quote ("serde"))) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("json" "stream"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "state") (r "^0.6") (d #t) (k 0)) (d (n "swift-rs") (r "^1.0.6") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "tauri-build") (r "^2.0.0-beta.13") (k 1)) (d (n "tauri-macros") (r "^2.0.0-beta.13") (d #t) (k 0)) (d (n "tauri-runtime") (r "^2.0.0-beta.13") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^2.0.0-beta.13") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.13") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.13") (f (quote ("build"))) (d #t) (k 1)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tray-icon") (r "^0.13") (f (quote ("serde"))) (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "urlpattern") (r "^0.2") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (o #t) (d #t) (k 0)) (d (n "webkit2gtk") (r "=2.0.1") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.30") (d #t) (t "cfg(windows)") (k 0)) (d (n "window-vibrancy") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "window-vibrancy") (r "^0.5") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.56") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0li6a4qssmdb34bdx6dl92bk4dr9cdw4khpn93wmrghbcyxiwhad") (f (quote (("wry" "tauri-runtime-wry") ("webview-data-url" "data-url") ("unstable" "tauri-runtime-wry/unstable") ("test") ("rustls-tls" "reqwest/rustls-tls") ("protocol-asset" "http-range") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("objc-exception" "tauri-runtime-wry/objc-exception") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("macos-proxy" "tauri-runtime-wry/macos-proxy") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-libxdo" "tray-icon/libxdo" "muda/libxdo") ("linux-ipc-protocol" "tauri-runtime-wry/linux-protocol-body" "webkit2gtk/v2_40") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation" "uuid") ("image-png" "image/png") ("image-ico" "image/ico") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception" "common-controls-v6") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression")))) (l "Tauri") (s 2) (e (quote (("tray-icon" "dep:tray-icon") ("tracing" "dep:tracing" "tauri-macros/tracing" "tauri-runtime-wry/tracing") ("common-controls-v6" "tray-icon?/common-controls-v6" "muda/common-controls-v6")))) (r "1.70")))

(define-public crate-tauri-2.0.0-beta.17 (c (n "tauri") (v "2.0.0-beta.17") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.17") (d #t) (k 2)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.18") (f (quote ("v3_24"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.5") (d #t) (k 0)) (d (n "heck") (r "^0.5") (d #t) (k 1)) (d (n "http") (r "^1.1") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "image") (r "^0.24") (o #t) (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "muda") (r "^0.13") (f (quote ("serde"))) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("json" "stream"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "specta") (r "^2.0.0-rc.9") (f (quote ("function"))) (o #t) (k 0)) (d (n "state") (r "^0.6") (d #t) (k 0)) (d (n "swift-rs") (r "^1.0.6") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "tauri-build") (r "^2.0.0-beta.13") (k 1)) (d (n "tauri-macros") (r "^2.0.0-beta.13") (d #t) (k 0)) (d (n "tauri-runtime") (r "^2.0.0-beta.14") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^2.0.0-beta.14") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.13") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.13") (f (quote ("build"))) (d #t) (k 1)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tray-icon") (r "^0.13") (f (quote ("serde"))) (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "urlpattern") (r "^0.2") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (o #t) (d #t) (k 0)) (d (n "webkit2gtk") (r "=2.0.1") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.30") (d #t) (t "cfg(windows)") (k 0)) (d (n "window-vibrancy") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "window-vibrancy") (r "^0.5") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.56") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0rk2qbajgx8qm13abjvir5s39m6ymznvmw2574jigwfx1r4xbvaz") (f (quote (("wry" "tauri-runtime-wry") ("webview-data-url" "data-url") ("unstable" "tauri-runtime-wry/unstable") ("test") ("rustls-tls" "reqwest/rustls-tls") ("protocol-asset" "http-range") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("objc-exception" "tauri-runtime-wry/objc-exception") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("macos-proxy" "tauri-runtime-wry/macos-proxy") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-libxdo" "tray-icon/libxdo" "muda/libxdo") ("linux-ipc-protocol" "tauri-runtime-wry/linux-protocol-body" "webkit2gtk/v2_40") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation" "uuid") ("image-png" "image/png") ("image-ico" "image/ico") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception" "common-controls-v6") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression")))) (l "Tauri") (s 2) (e (quote (("tray-icon" "dep:tray-icon") ("tracing" "dep:tracing" "tauri-macros/tracing" "tauri-runtime-wry/tracing") ("specta" "dep:specta") ("common-controls-v6" "tray-icon?/common-controls-v6" "muda/common-controls-v6")))) (r "1.70")))

(define-public crate-tauri-1.6.3 (c (n "tauri") (v "1.6.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (t "cfg(windows)") (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "encoding_rs") (r "^0.8.31") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.5") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("std" "serde"))) (o #t) (d #t) (k 0)) (d (n "infer") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "nix") (r "^0.26.0") (f (quote ("user" "socket" "uio"))) (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "notify-rust") (r "^4.5") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 1)) (d (n "open") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.2") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.10") (f (quote ("gtk3" "common-controls-v6"))) (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value" "preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "sys-locale") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.4.4") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.14.3") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.14.6") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.5.4") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing" "formatting"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18.2") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "win7-notifications") (r "^0.4") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "0fcxxdwpy498h4aq5lj4rb1awf35ib0g5kk14mv747ng5l0snkvs") (f (quote (("wry" "tauri-runtime-wry") ("windows7-compat" "win7-notifications") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-minimizable") ("window-set-min-size") ("window-set-maximizable") ("window-set-max-size") ("window-set-ignore-cursor-events") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-content-protected") ("window-set-closable") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-maximizable" "window-set-minimizable" "window-set-closable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-content-protected" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-set-ignore-cursor-events" "window-start-dragging" "window-print") ("updater" "minisign-verify" "time" "base64" "http-api" "dialog-ask" "fs-extract-api") ("test") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-native-tls-vendored" "native-tls-vendored") ("reqwest-client" "http-api") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-api" "sys-locale") ("os-all" "os_info" "os-api") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust" "nix") ("native-tls-vendored" "reqwest/native-tls-vendored") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-protocol-headers" "tauri-runtime-wry/linux-headers" "webkit2gtk/v2_36") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "reqwest/multipart") ("http-api" "reqwest" "bytes" "indexmap") ("http-all" "http-request") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-exists") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-exists" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("app-show") ("app-hide") ("app-all" "app-show" "app-hide") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all" "app-all")))) (s 2) (e (quote (("tracing" "dep:tracing" "tauri-macros/tracing" "tauri-runtime-wry/tracing")))) (r "1.60")))

(define-public crate-tauri-2.0.0-beta.18 (c (n "tauri") (v "2.0.0-beta.18") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.17") (d #t) (k 2)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.18") (f (quote ("v3_24"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.5") (d #t) (k 0)) (d (n "heck") (r "^0.5") (d #t) (k 1)) (d (n "http") (r "^1.1") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "image") (r "^0.24") (o #t) (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "muda") (r "^0.13") (f (quote ("serde"))) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("json" "stream"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "specta") (r "^2.0.0-rc.9") (f (quote ("function"))) (o #t) (k 0)) (d (n "state") (r "^0.6") (d #t) (k 0)) (d (n "swift-rs") (r "^1.0.6") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "tauri-build") (r "^2.0.0-beta.14") (k 1)) (d (n "tauri-macros") (r "^2.0.0-beta.14") (d #t) (k 0)) (d (n "tauri-runtime") (r "^2.0.0-beta.15") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^2.0.0-beta.15") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.14") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.14") (f (quote ("build"))) (d #t) (k 1)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tray-icon") (r "^0.13") (f (quote ("serde"))) (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "urlpattern") (r "^0.2") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (o #t) (d #t) (k 0)) (d (n "webkit2gtk") (r "=2.0.1") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.30") (d #t) (t "cfg(windows)") (k 0)) (d (n "window-vibrancy") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "window-vibrancy") (r "^0.5") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.56") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1s0c711whzisdjlfnfndv0zi6cx1v85a96af4zjavw5nyqxsgk01") (f (quote (("wry" "tauri-runtime-wry") ("webview-data-url" "data-url") ("unstable" "tauri-runtime-wry/unstable") ("test") ("rustls-tls" "reqwest/rustls-tls") ("protocol-asset" "http-range") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("objc-exception" "tauri-runtime-wry/objc-exception") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("macos-proxy" "tauri-runtime-wry/macos-proxy") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-libxdo" "tray-icon/libxdo" "muda/libxdo") ("linux-ipc-protocol" "tauri-runtime-wry/linux-protocol-body" "webkit2gtk/v2_40") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation" "uuid") ("image-png" "image/png") ("image-ico" "image/ico") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception" "common-controls-v6") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression")))) (l "Tauri") (s 2) (e (quote (("tray-icon" "dep:tray-icon") ("tracing" "dep:tracing" "tauri-macros/tracing" "tauri-runtime-wry/tracing") ("specta" "dep:specta") ("common-controls-v6" "tray-icon?/common-controls-v6" "muda/common-controls-v6")))) (r "1.70")))

(define-public crate-tauri-1.6.4 (c (n "tauri") (v "1.6.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (t "cfg(windows)") (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "encoding_rs") (r "^0.8.31") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.5") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("std" "serde"))) (o #t) (d #t) (k 0)) (d (n "infer") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "nix") (r "^0.26.0") (f (quote ("user" "socket" "uio"))) (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "notify-rust") (r "^4.5") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 1)) (d (n "open") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.2") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.10") (f (quote ("gtk3" "common-controls-v6"))) (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value" "preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "sys-locale") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.4.4") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.14.3") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.14.7") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.5.4") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing" "formatting"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18.2") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "win7-notifications") (r "^0.4") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "0fb3yfnvgqbp70avyk82sby0i50j6iqdm56lllq72qxdh98pjpx3") (f (quote (("wry" "tauri-runtime-wry") ("windows7-compat" "win7-notifications") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-minimizable") ("window-set-min-size") ("window-set-maximizable") ("window-set-max-size") ("window-set-ignore-cursor-events") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-content-protected") ("window-set-closable") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-maximizable" "window-set-minimizable" "window-set-closable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-content-protected" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-set-ignore-cursor-events" "window-start-dragging" "window-print") ("updater" "minisign-verify" "time" "base64" "http-api" "dialog-ask" "fs-extract-api") ("test") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-native-tls-vendored" "native-tls-vendored") ("reqwest-client" "http-api") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-api" "sys-locale") ("os-all" "os_info" "os-api") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust" "nix") ("native-tls-vendored" "reqwest/native-tls-vendored") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-protocol-headers" "tauri-runtime-wry/linux-headers" "webkit2gtk/v2_36") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "reqwest/multipart") ("http-api" "reqwest" "bytes" "indexmap") ("http-all" "http-request") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-exists") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-exists" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("app-show") ("app-hide") ("app-all" "app-show" "app-hide") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all" "app-all")))) (s 2) (e (quote (("tracing" "dep:tracing" "tauri-macros/tracing" "tauri-runtime-wry/tracing")))) (r "1.60")))

(define-public crate-tauri-2.0.0-beta.19 (c (n "tauri") (v "2.0.0-beta.19") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.17") (d #t) (k 2)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.18") (f (quote ("v3_24"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.5") (d #t) (k 0)) (d (n "heck") (r "^0.5") (d #t) (k 1)) (d (n "http") (r "^1.1") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "image") (r "^0.24") (o #t) (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "muda") (r "^0.13") (f (quote ("serde"))) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("json" "stream"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "specta") (r "^2.0.0-rc.9") (f (quote ("function"))) (o #t) (k 0)) (d (n "state") (r "^0.6") (d #t) (k 0)) (d (n "swift-rs") (r "^1.0.6") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "tauri-build") (r "^2.0.0-beta.15") (k 1)) (d (n "tauri-macros") (r "^2.0.0-beta.15") (d #t) (k 0)) (d (n "tauri-runtime") (r "^2.0.0-beta.16") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^2.0.0-beta.16") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.15") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.15") (f (quote ("build"))) (d #t) (k 1)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tray-icon") (r "^0.13") (f (quote ("serde"))) (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "urlpattern") (r "^0.2") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (o #t) (d #t) (k 0)) (d (n "webkit2gtk") (r "=2.0.1") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.30") (d #t) (t "cfg(windows)") (k 0)) (d (n "window-vibrancy") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "window-vibrancy") (r "^0.5") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.56") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)))) (h "15gy6hrzkmvrip9gx3jzvcri77znfb9g9rd3s6b79szmwk15p3kg") (f (quote (("wry" "tauri-runtime-wry") ("webview-data-url" "data-url") ("unstable" "tauri-runtime-wry/unstable") ("test") ("rustls-tls" "reqwest/rustls-tls") ("protocol-asset" "http-range") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("objc-exception" "tauri-runtime-wry/objc-exception") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("macos-proxy" "tauri-runtime-wry/macos-proxy") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-libxdo" "tray-icon/libxdo" "muda/libxdo") ("linux-ipc-protocol" "tauri-runtime-wry/linux-protocol-body" "webkit2gtk/v2_40") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation" "uuid") ("image-png" "image/png") ("image-ico" "image/ico") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception" "common-controls-v6") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression")))) (l "Tauri") (s 2) (e (quote (("tray-icon" "dep:tray-icon") ("tracing" "dep:tracing" "tauri-macros/tracing" "tauri-runtime-wry/tracing") ("specta" "dep:specta") ("common-controls-v6" "tray-icon?/common-controls-v6" "muda/common-controls-v6")))) (r "1.70")))

(define-public crate-tauri-1.6.5 (c (n "tauri") (v "1.6.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (t "cfg(windows)") (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "encoding_rs") (r "^0.8.31") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.5") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("std" "serde"))) (o #t) (d #t) (k 0)) (d (n "infer") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "nix") (r "^0.26.0") (f (quote ("user" "socket" "uio"))) (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "notify-rust") (r "^4.5") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 1)) (d (n "open") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.2") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.10") (f (quote ("gtk3" "common-controls-v6"))) (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value" "preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "sys-locale") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.4.4") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.14.3") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.14.7") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.5.4") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing" "formatting"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18.2") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "win7-notifications") (r "^0.4") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "16515xzhdvjpp0vpc9c0pyr30pa1kif74qbhxibvnh6dggvh9khk") (f (quote (("wry" "tauri-runtime-wry") ("windows7-compat" "win7-notifications") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-minimizable") ("window-set-min-size") ("window-set-maximizable") ("window-set-max-size") ("window-set-ignore-cursor-events") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-content-protected") ("window-set-closable") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-maximizable" "window-set-minimizable" "window-set-closable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-content-protected" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-set-ignore-cursor-events" "window-start-dragging" "window-print") ("updater" "minisign-verify" "time" "base64" "http-api" "dialog-ask" "fs-extract-api") ("test") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-native-tls-vendored" "native-tls-vendored") ("reqwest-client" "http-api") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-api" "sys-locale") ("os-all" "os_info" "os-api") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust" "nix") ("native-tls-vendored" "reqwest/native-tls-vendored") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-protocol-headers" "tauri-runtime-wry/linux-headers" "webkit2gtk/v2_36") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "reqwest/multipart") ("http-api" "reqwest" "bytes" "indexmap") ("http-all" "http-request") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-exists") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-exists" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("app-show") ("app-hide") ("app-all" "app-show" "app-hide") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all" "app-all")))) (y #t) (s 2) (e (quote (("tracing" "dep:tracing" "tauri-macros/tracing" "tauri-runtime-wry/tracing")))) (r "1.60")))

(define-public crate-tauri-1.6.6 (c (n "tauri") (v "1.6.6") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (t "cfg(windows)") (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "encoding_rs") (r "^0.8.31") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.5") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("std" "serde"))) (o #t) (d #t) (k 0)) (d (n "infer") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "nix") (r "^0.26.0") (f (quote ("user" "socket" "uio"))) (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "notify-rust") (r "^4.5") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 1)) (d (n "open") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.2") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.10") (f (quote ("gtk3" "common-controls-v6"))) (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value" "preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "sys-locale") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.4.4") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.14.3") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.14.7") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.5.4") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing" "formatting"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18.2") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "win7-notifications") (r "^0.4") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "0hq3ndki4xnd2yshvqpzsym9kg3r0dxk255vs5d8hfbfxm19rygk") (f (quote (("wry" "tauri-runtime-wry") ("windows7-compat" "win7-notifications") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-minimizable") ("window-set-min-size") ("window-set-maximizable") ("window-set-max-size") ("window-set-ignore-cursor-events") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-content-protected") ("window-set-closable") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-maximizable" "window-set-minimizable" "window-set-closable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-content-protected" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-set-ignore-cursor-events" "window-start-dragging" "window-print") ("updater" "minisign-verify" "time" "base64" "http-api" "dialog-ask" "fs-extract-api") ("test") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-native-tls-vendored" "native-tls-vendored") ("reqwest-client" "http-api") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-api" "sys-locale") ("os-all" "os_info" "os-api") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust" "nix") ("native-tls-vendored" "reqwest/native-tls-vendored") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-protocol-headers" "tauri-runtime-wry/linux-headers" "webkit2gtk/v2_36") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "reqwest/multipart") ("http-api" "reqwest" "bytes" "indexmap") ("http-all" "http-request") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-exists") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-exists" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("app-show") ("app-hide") ("app-all" "app-show" "app-hide") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all" "app-all")))) (s 2) (e (quote (("tracing" "dep:tracing" "tauri-macros/tracing" "tauri-runtime-wry/tracing")))) (r "1.60")))

(define-public crate-tauri-1.6.7 (c (n "tauri") (v "1.6.7") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (t "cfg(windows)") (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "encoding_rs") (r "^0.8.31") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("std"))) (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.5") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("std" "serde"))) (o #t) (d #t) (k 0)) (d (n "infer") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "nix") (r "^0.26.0") (f (quote ("user" "socket" "uio"))) (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "notify-rust") (r "^4.5") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 1)) (d (n "open") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.2") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.10") (f (quote ("gtk3" "common-controls-v6"))) (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value" "preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "sys-locale") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.4.4") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.14.3") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.14.8") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.5.4") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing" "formatting"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18.2") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "win7-notifications") (r "^0.4") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("Win32_Foundation" "Win32_UI_WindowsAndMessaging" "Win32_UI_Shell"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "0x1k0jqaw06irhav79ay7ldjm66wba7mffd2ba3vnnz4ddxigiv7") (f (quote (("wry" "tauri-runtime-wry") ("windows7-compat" "win7-notifications") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-minimizable") ("window-set-min-size") ("window-set-maximizable") ("window-set-max-size") ("window-set-ignore-cursor-events") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-content-protected") ("window-set-closable") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-maximizable" "window-set-minimizable" "window-set-closable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-content-protected" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-set-ignore-cursor-events" "window-start-dragging" "window-print") ("updater" "minisign-verify" "time" "base64" "http-api" "dialog-ask" "fs-extract-api") ("test") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-native-tls-vendored" "native-tls-vendored") ("reqwest-client" "http-api") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-api" "sys-locale") ("os-all" "os_info" "os-api") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust" "nix") ("native-tls-vendored" "reqwest/native-tls-vendored") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-protocol-headers" "tauri-runtime-wry/linux-headers" "webkit2gtk/v2_36") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "reqwest/multipart") ("http-api" "reqwest" "bytes" "indexmap") ("http-all" "http-request") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-exists") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-exists" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("app-show") ("app-hide") ("app-all" "app-show" "app-hide") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all" "app-all")))) (s 2) (e (quote (("tracing" "dep:tracing" "tauri-macros/tracing" "tauri-runtime-wry/tracing")))) (r "1.60")))

(define-public crate-tauri-2.0.0-beta.20 (c (n "tauri") (v "2.0.0-beta.20") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.17") (d #t) (k 2)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.18") (f (quote ("v3_24"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.5") (d #t) (k 0)) (d (n "heck") (r "^0.5") (d #t) (k 1)) (d (n "http") (r "^1.1") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "image") (r "^0.24") (o #t) (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "muda") (r "^0.13") (f (quote ("serde"))) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("json" "stream"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "specta") (r "^2.0.0-rc.9") (f (quote ("function"))) (o #t) (k 0)) (d (n "state") (r "^0.6") (d #t) (k 0)) (d (n "swift-rs") (r "^1.0.6") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "tauri-build") (r "^2.0.0-beta.16") (k 1)) (d (n "tauri-macros") (r "^2.0.0-beta.16") (d #t) (k 0)) (d (n "tauri-runtime") (r "^2.0.0-beta.17") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^2.0.0-beta.17") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.16") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.16") (f (quote ("build"))) (d #t) (k 1)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tray-icon") (r "^0.13") (f (quote ("serde"))) (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "urlpattern") (r "^0.2") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (o #t) (d #t) (k 0)) (d (n "webkit2gtk") (r "=2.0.1") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.30") (d #t) (t "cfg(windows)") (k 0)) (d (n "window-vibrancy") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "window-vibrancy") (r "^0.5") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.56") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1cgcj8c1bprr7lh64y01kds33m3k2frh4ybqc527lrxa412sfi4z") (f (quote (("wry" "tauri-runtime-wry") ("webview-data-url" "data-url") ("unstable" "tauri-runtime-wry/unstable") ("test") ("rustls-tls" "reqwest/rustls-tls") ("protocol-asset" "http-range") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("objc-exception" "tauri-runtime-wry/objc-exception") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("macos-proxy" "tauri-runtime-wry/macos-proxy") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-libxdo" "tray-icon/libxdo" "muda/libxdo") ("linux-ipc-protocol" "tauri-runtime-wry/linux-protocol-body" "webkit2gtk/v2_40") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation" "uuid") ("image-png" "image/png") ("image-ico" "image/ico") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception" "common-controls-v6") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression")))) (l "Tauri") (s 2) (e (quote (("tray-icon" "dep:tray-icon") ("tracing" "dep:tracing" "tauri-macros/tracing" "tauri-runtime-wry/tracing") ("specta" "dep:specta") ("common-controls-v6" "tray-icon?/common-controls-v6" "muda/common-controls-v6")))) (r "1.70")))

(define-public crate-tauri-2.0.0-beta.21 (c (n "tauri") (v "2.0.0-beta.21") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.17") (d #t) (k 2)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.18") (f (quote ("v3_24"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.5") (d #t) (k 0)) (d (n "heck") (r "^0.5") (d #t) (k 1)) (d (n "http") (r "^1.1") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "image") (r "^0.24") (o #t) (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "muda") (r "^0.13.4") (f (quote ("serde"))) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("json" "stream"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "specta") (r "^2.0.0-rc.9") (f (quote ("function"))) (o #t) (k 0)) (d (n "state") (r "^0.6") (d #t) (k 0)) (d (n "swift-rs") (r "^1.0.6") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "tauri-build") (r "^2.0.0-beta.17") (k 1)) (d (n "tauri-macros") (r "^2.0.0-beta.17") (d #t) (k 0)) (d (n "tauri-runtime") (r "^2.0.0-beta.18") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^2.0.0-beta.18") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.17") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.17") (f (quote ("build"))) (d #t) (k 1)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tray-icon") (r "^0.14") (f (quote ("serde"))) (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "urlpattern") (r "^0.2") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (o #t) (d #t) (k 0)) (d (n "webkit2gtk") (r "=2.0.1") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.30") (d #t) (t "cfg(windows)") (k 0)) (d (n "window-vibrancy") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "window-vibrancy") (r "^0.5") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.56") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1yr36ad5n8b5qr3kvkzvzpj334xdjxdpp9ncl0jkfqnhirvi5v1v") (f (quote (("wry" "tauri-runtime-wry") ("webview-data-url" "data-url") ("unstable" "tauri-runtime-wry/unstable") ("test") ("rustls-tls" "reqwest/rustls-tls") ("protocol-asset" "http-range") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("objc-exception" "tauri-runtime-wry/objc-exception") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("macos-proxy" "tauri-runtime-wry/macos-proxy") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-libxdo" "tray-icon/libxdo" "muda/libxdo") ("linux-ipc-protocol" "tauri-runtime-wry/linux-protocol-body" "webkit2gtk/v2_40") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation" "uuid") ("image-png" "image/png") ("image-ico" "image/ico") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception" "common-controls-v6") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression")))) (l "Tauri") (s 2) (e (quote (("tray-icon" "dep:tray-icon") ("tracing" "dep:tracing" "tauri-macros/tracing" "tauri-runtime-wry/tracing") ("specta" "dep:specta") ("common-controls-v6" "tray-icon?/common-controls-v6" "muda/common-controls-v6")))) (r "1.70")))

(define-public crate-tauri-2.0.0-beta.22 (c (n "tauri") (v "2.0.0-beta.22") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.17") (d #t) (k 2)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.18") (f (quote ("v3_24"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.5") (d #t) (k 0)) (d (n "heck") (r "^0.5") (d #t) (k 1)) (d (n "http") (r "^1.1") (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "http-range") (r "^0.1.5") (d #t) (k 2)) (d (n "image") (r "^0.24") (o #t) (k 0)) (d (n "jni") (r "^0.21") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "muda") (r "^0.13.4") (f (quote ("serde"))) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "percent-encoding") (r "^2.3") (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("json" "stream"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "specta") (r "^2.0.0-rc.9") (f (quote ("function"))) (o #t) (k 0)) (d (n "state") (r "^0.6") (d #t) (k 0)) (d (n "swift-rs") (r "^1.0.6") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "tauri-build") (r "^2.0.0-beta.17") (k 1)) (d (n "tauri-macros") (r "^2.0.0-beta.17") (d #t) (k 0)) (d (n "tauri-runtime") (r "^2.0.0-beta.18") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^2.0.0-beta.18") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.17") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tauri-utils") (r "^2.0.0-beta.17") (f (quote ("build"))) (d #t) (k 1)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tray-icon") (r "^0.14") (f (quote ("serde"))) (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\", target_os = \"macos\"))") (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "urlpattern") (r "^0.2") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (o #t) (d #t) (k 0)) (d (n "webkit2gtk") (r "=2.0.1") (f (quote ("v2_38"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.30") (d #t) (t "cfg(windows)") (k 0)) (d (n "window-vibrancy") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "window-vibrancy") (r "^0.5") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.56") (f (quote ("Win32_Foundation"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0cdv4z03572pf92pp4ay4vsx076h5ybc84pm4pjsvpf7bb68w9as") (f (quote (("wry" "tauri-runtime-wry") ("webview-data-url" "data-url") ("unstable" "tauri-runtime-wry/unstable") ("test") ("rustls-tls" "reqwest/rustls-tls") ("protocol-asset" "http-range") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("objc-exception" "tauri-runtime-wry/objc-exception") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("macos-proxy" "tauri-runtime-wry/macos-proxy") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-libxdo" "tray-icon/libxdo" "muda/libxdo") ("linux-ipc-protocol" "tauri-runtime-wry/linux-protocol-body" "webkit2gtk/v2_40") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation" "uuid") ("image-png" "image/png") ("image-ico" "image/ico") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception" "common-controls-v6") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression")))) (l "Tauri") (s 2) (e (quote (("tray-icon" "dep:tray-icon") ("tracing" "dep:tracing" "tauri-macros/tracing" "tauri-runtime-wry/tracing") ("specta" "dep:specta") ("common-controls-v6" "tray-icon?/common-controls-v6" "muda/common-controls-v6")))) (r "1.70")))

(define-public crate-tauri-1.6.8 (c (n "tauri") (v "1.6.8") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11") (d #t) (k 2)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "data-url") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (t "cfg(windows)") (k 0)) (d (n "embed_plist") (r "^1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "encoding_rs") (r "^0.8.31") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("std"))) (d #t) (k 0)) (d (n "glib") (r "^0.15") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "gtk") (r "^0.15") (f (quote ("v3_20"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "heck") (r "^0.5") (d #t) (k 1)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "ico") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("std" "serde"))) (o #t) (d #t) (k 0)) (d (n "infer") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "minisign-verify") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "nix") (r "^0.26.0") (f (quote ("user" "socket" "uio"))) (o #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "notify-rust") (r "^4.5") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 1)) (d (n "open") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "os_info") (r "^3") (o #t) (d #t) (k 0)) (d (n "os_pipe") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.2") (d #t) (k 0)) (d (n "png") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (o #t) (d #t) (k 0)) (d (n "rfd") (r "^0.10") (f (quote ("gtk3" "common-controls-v6"))) (o #t) (d #t) (t "cfg(any(target_os = \"macos\", windows, target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value" "preserve_order"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serialize-to-javascript") (r "=0.1.1") (d #t) (k 0)) (d (n "shared_child") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.5") (d #t) (k 0)) (d (n "sys-locale") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tauri-macros") (r "^1.4.4") (d #t) (k 0)) (d (n "tauri-runtime") (r "^0.14.3") (d #t) (k 0)) (d (n "tauri-runtime-wry") (r "^0.14.8") (o #t) (d #t) (k 0)) (d (n "tauri-utils") (r "^1.5.4") (f (quote ("resources"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing" "formatting"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "sync" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webkit2gtk") (r "^0.18.2") (f (quote ("v2_22"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "webview2-com") (r "^0.19.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "win7-notifications") (r "^0.4") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("Win32_Foundation" "Win32_UI_WindowsAndMessaging" "Win32_UI_Shell"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "zip") (r "^0.6") (o #t) (k 0)))) (h "05m5jy2is52ja835m8kil7mg75r2s1172524sn44bpkl7cmpsmkp") (f (quote (("wry" "tauri-runtime-wry") ("windows7-compat" "win7-notifications") ("window-unminimize") ("window-unmaximize") ("window-start-dragging") ("window-show") ("window-set-title") ("window-set-skip-taskbar") ("window-set-size") ("window-set-resizable") ("window-set-position") ("window-set-minimizable") ("window-set-min-size") ("window-set-maximizable") ("window-set-max-size") ("window-set-ignore-cursor-events") ("window-set-icon") ("window-set-fullscreen") ("window-set-focus") ("window-set-decorations") ("window-set-cursor-visible") ("window-set-cursor-position") ("window-set-cursor-icon") ("window-set-cursor-grab") ("window-set-content-protected") ("window-set-closable") ("window-set-always-on-top") ("window-request-user-attention") ("window-print") ("window-minimize") ("window-maximize") ("window-hide") ("window-data-url" "data-url") ("window-create") ("window-close") ("window-center") ("window-all" "window-create" "window-center" "window-request-user-attention" "window-set-resizable" "window-set-maximizable" "window-set-minimizable" "window-set-closable" "window-set-title" "window-maximize" "window-unmaximize" "window-minimize" "window-unminimize" "window-show" "window-hide" "window-close" "window-set-decorations" "window-set-always-on-top" "window-set-content-protected" "window-set-size" "window-set-min-size" "window-set-max-size" "window-set-position" "window-set-fullscreen" "window-set-focus" "window-set-icon" "window-set-skip-taskbar" "window-set-cursor-grab" "window-set-cursor-visible" "window-set-cursor-icon" "window-set-cursor-position" "window-set-ignore-cursor-events" "window-start-dragging" "window-print") ("updater" "minisign-verify" "time" "base64" "http-api" "dialog-ask" "fs-extract-api") ("test") ("system-tray" "tauri-runtime/system-tray" "tauri-runtime-wry/system-tray") ("shell-sidecar" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-open-api" "open" "regex" "tauri-macros/shell-scope") ("shell-open" "shell-open-api") ("shell-execute" "process-command-api" "regex" "tauri-macros/shell-scope") ("shell-all" "shell-execute" "shell-sidecar" "shell-open") ("reqwest-native-tls-vendored" "native-tls-vendored") ("reqwest-client" "http-api") ("protocol-asset") ("protocol-all" "protocol-asset") ("process-relaunch-dangerous-allow-symlink-macos" "tauri-utils/process-relaunch-dangerous-allow-symlink-macos") ("process-relaunch") ("process-exit") ("process-command-api" "shared_child" "os_pipe") ("process-all" "process-relaunch" "process-exit") ("path-all") ("os-api" "sys-locale") ("os-all" "os_info" "os-api") ("objc-exception" "tauri-runtime-wry/objc-exception") ("notification-all" "notification" "dialog-ask") ("notification" "notify-rust" "nix") ("native-tls-vendored" "reqwest/native-tls-vendored") ("macos-private-api" "tauri-runtime/macos-private-api" "tauri-runtime-wry/macos-private-api") ("linux-protocol-headers" "tauri-runtime-wry/linux-headers" "webkit2gtk/v2_36") ("isolation" "tauri-utils/isolation" "tauri-macros/isolation") ("icon-png" "infer" "png") ("icon-ico" "infer" "ico") ("http-request" "http-api") ("http-multipart" "reqwest/multipart") ("http-api" "reqwest" "bytes" "indexmap") ("http-all" "http-request") ("global-shortcut-all" "global-shortcut") ("global-shortcut" "tauri-runtime/global-shortcut" "tauri-runtime-wry/global-shortcut") ("fs-write-file") ("fs-rename-file") ("fs-remove-file") ("fs-remove-dir") ("fs-read-file") ("fs-read-dir") ("fs-extract-api" "zip") ("fs-exists") ("fs-create-dir") ("fs-copy-file") ("fs-all" "fs-copy-file" "fs-create-dir" "fs-exists" "fs-read-file" "fs-read-dir" "fs-remove-dir" "fs-remove-file" "fs-rename-file" "fs-write-file") ("dox" "tauri-runtime-wry/dox") ("dialog-save" "dialog") ("dialog-open" "dialog") ("dialog-message" "dialog") ("dialog-confirm" "dialog") ("dialog-ask" "dialog") ("dialog-all" "dialog-open" "dialog-save" "dialog-message" "dialog-ask") ("dialog" "rfd") ("devtools" "tauri-runtime/devtools" "tauri-runtime-wry/devtools") ("default" "wry" "compression" "objc-exception") ("custom-protocol" "tauri-macros/custom-protocol") ("config-toml" "tauri-macros/config-toml") ("config-json5" "tauri-macros/config-json5") ("compression" "tauri-macros/compression" "tauri-utils/compression") ("clipboard-write-text" "clipboard") ("clipboard-read-text" "clipboard") ("clipboard-all" "clipboard-write-text" "clipboard-read-text") ("clipboard" "tauri-runtime/clipboard" "tauri-runtime-wry/clipboard") ("cli" "clap") ("app-show") ("app-hide") ("app-all" "app-show" "app-hide") ("api-all" "clipboard-all" "dialog-all" "fs-all" "global-shortcut-all" "http-all" "notification-all" "os-all" "path-all" "process-all" "protocol-all" "shell-all" "window-all" "app-all")))) (s 2) (e (quote (("tracing" "dep:tracing" "tauri-macros/tracing" "tauri-runtime-wry/tracing")))) (r "1.60")))

