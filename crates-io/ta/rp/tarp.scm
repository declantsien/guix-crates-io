(define-module (crates-io ta rp tarp) #:use-module (crates-io))

(define-public crate-tarp-0.10.0 (c (n "tarp") (v "0.10.0") (d (list (d (n "cargo") (r "^0.40") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2.31.2") (d #t) (k 0)) (d (n "coveralls-api") (r "^0.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "failure") (r "^0.1.3") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "gimli") (r "^0.19.0") (d #t) (k 0)) (d (n "git2") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "nix") (r "^0.16.0") (d #t) (k 0)) (d (n "object") (r "^0.16") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "quick-xml") (r "^0.17") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.1") (d #t) (k 0)) (d (n "rustc-demangle") (r "^0.1.11") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "void") (r "^1.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.2.5") (d #t) (k 0)))) (h "01854ypksk7pnla7800yinbf30yqrrpw2v2axswndkn1d410plg4")))

(define-public crate-tarp-0.10.1 (c (n "tarp") (v "0.10.1") (d (list (d (n "cargo") (r "^0.40") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2.31.2") (d #t) (k 0)) (d (n "coveralls-api") (r "^0.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "failure") (r "^0.1.3") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "gimli") (r "^0.19.0") (d #t) (k 0)) (d (n "git2") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "nix") (r "^0.16.0") (d #t) (k 0)) (d (n "object") (r "^0.16") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "quick-xml") (r "^0.17") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.1") (d #t) (k 0)) (d (n "rustc-demangle") (r "^0.1.11") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "void") (r "^1.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.2.5") (d #t) (k 0)))) (h "11nm770jl66inr102ifnqmc5vxa34jdkhxbxa7ph6qg0kxzs16rq")))

