(define-module (crates-io ta ri tari_bulletproofs_plus) #:use-module (crates-io))

(define-public crate-tari_bulletproofs_plus-0.2.3 (c (n "tari_bulletproofs_plus") (v "0.2.3") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2") (r "^0.9.1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^4.0.2") (f (quote ("serde" "alloc"))) (k 0) (p "tari-curve25519-dalek")) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "digest") (r "^0.9.0") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "merlin") (r "^2") (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (k 0)) (d (n "serde") (r "^1.0.150") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "0cwd4qiivg79fk1rz00lljbilxmsfmhgsabid3cq169vnll1as5l") (f (quote (("u64_backend" "curve25519-dalek/u64_backend") ("simd_backend" "curve25519-dalek/simd_backend") ("default" "u64_backend"))))))

(define-public crate-tari_bulletproofs_plus-0.3.1 (c (n "tari_bulletproofs_plus") (v "0.3.1") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "byteorder") (r "^1") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^4.0.3") (f (quote ("serde" "rand_core"))) (d #t) (k 0) (p "tari-curve25519-dalek")) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "digest") (r "^0.10") (k 0)) (d (n "itertools") (r "^0.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "merlin") (r "^3") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "1n8h1hicvrgsdals8qw006m4kwy2ak3bxm5shcjrbgzkyi3w1k75")))

(define-public crate-tari_bulletproofs_plus-0.3.2 (c (n "tari_bulletproofs_plus") (v "0.3.2") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "byteorder") (r "^1") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^4.0.3") (f (quote ("serde" "rand_core"))) (d #t) (k 0) (p "tari-curve25519-dalek")) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "digest") (r "^0.10") (k 0)) (d (n "itertools") (r "^0.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "merlin") (r "^3") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "1n0g54b4yjyy0w7cb2bfg2diz2gdk1a9bml0588lj4gvpyz9rg4s")))

(define-public crate-tari_bulletproofs_plus-0.4.0 (c (n "tari_bulletproofs_plus") (v "0.4.0") (d (list (d (n "bincode") (r "^1") (k 2)) (d (n "blake2") (r "^0.10") (k 0)) (d (n "byteorder") (r "^1") (k 0)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "curve25519-dalek") (r "^4.1") (f (quote ("alloc" "group" "rand_core" "serde" "zeroize"))) (k 0)) (d (n "digest") (r "^0.10") (f (quote ("alloc"))) (k 0)) (d (n "ff") (r "^0.13.0") (k 0)) (d (n "itertools") (r "^0.12") (f (quote ("use_alloc"))) (k 0)) (d (n "merlin") (r "^3") (k 0)) (d (n "once_cell") (r "^1") (f (quote ("alloc" "critical-section"))) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("alloc"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc"))) (k 0)) (d (n "sha3") (r "^0.10") (k 0)) (d (n "thiserror-no-std") (r "^2") (k 0)) (d (n "zeroize") (r "^1") (f (quote ("alloc" "derive"))) (k 0)))) (h "0m1cy75abg20gh595span8102xvp9664rii2x0c3q01vkrr5gb4f") (f (quote (("std" "blake2/std" "byteorder/std" "digest/std" "ff/std" "itertools/use_std" "merlin/std" "once_cell/std" "rand_core/std" "serde/std" "sha3/std" "zeroize/std") ("rand" "rand_core/getrandom") ("default" "rand" "std"))))))

