(define-module (crates-io ta ng tangram_linear) #:use-module (crates-io))

(define-public crate-tangram_linear-0.4.0 (c (n "tangram_linear") (v "0.4.0") (d (list (d (n "buffalo") (r "^0.1") (f (quote ("ndarray_0_15"))) (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (f (quote ("color"))) (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tangram_features") (r "^0.4") (d #t) (k 0)) (d (n "tangram_kill_chip") (r "^0.4") (d #t) (k 0)) (d (n "tangram_metrics") (r "^0.4") (d #t) (k 0)) (d (n "tangram_progress_counter") (r "^0.4") (d #t) (k 0)) (d (n "tangram_table") (r "^0.4") (d #t) (k 0)) (d (n "tangram_zip") (r "^0.4") (d #t) (k 0)))) (h "0szy8vdcw89xwxp6z6xzg4q5wynah1cykdwnrhbgszx3xxd03msl")))

(define-public crate-tangram_linear-0.5.0 (c (n "tangram_linear") (v "0.5.0") (d (list (d (n "buffalo") (r "^0.1") (f (quote ("ndarray_0_15"))) (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (f (quote ("color"))) (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tangram_features") (r "=0.5.0") (d #t) (k 0)) (d (n "tangram_kill_chip") (r "=0.5.0") (d #t) (k 0)) (d (n "tangram_metrics") (r "=0.5.0") (d #t) (k 0)) (d (n "tangram_progress_counter") (r "=0.5.0") (d #t) (k 0)) (d (n "tangram_table") (r "=0.5.0") (d #t) (k 0)) (d (n "tangram_zip") (r "=0.5.0") (d #t) (k 0)))) (h "0w760pik5wqyhcmn6cyyd1awn8vckiclaxal759wyappihlv113z")))

(define-public crate-tangram_linear-0.6.0 (c (n "tangram_linear") (v "0.6.0") (d (list (d (n "buffalo") (r "^0.1") (f (quote ("ndarray_0_15"))) (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (f (quote ("color"))) (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tangram_features") (r "=0.6.0") (d #t) (k 0)) (d (n "tangram_kill_chip") (r "=0.6.0") (d #t) (k 0)) (d (n "tangram_metrics") (r "=0.6.0") (d #t) (k 0)) (d (n "tangram_progress_counter") (r "=0.6.0") (d #t) (k 0)) (d (n "tangram_table") (r "=0.6.0") (d #t) (k 0)) (d (n "tangram_zip") (r "=0.6.0") (d #t) (k 0)))) (h "0ypx5g5rn5zy3yv9x89hcysx4cqx15wrcp063jgp8zz27ysiwbv6")))

(define-public crate-tangram_linear-0.7.0 (c (n "tangram_linear") (v "0.7.0") (d (list (d (n "buffalo") (r "^0.1") (f (quote ("ndarray_0_15"))) (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (f (quote ("color"))) (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tangram_features") (r "^0.7.0") (d #t) (k 0)) (d (n "tangram_kill_chip") (r "^0.7.0") (d #t) (k 0)) (d (n "tangram_metrics") (r "^0.7.0") (d #t) (k 0)) (d (n "tangram_progress_counter") (r "^0.7.0") (d #t) (k 0)) (d (n "tangram_table") (r "^0.7.0") (d #t) (k 0)) (d (n "tangram_zip") (r "^0.7.0") (d #t) (k 0)))) (h "0b62lsc38l3qdc9n1q7gw5z9rz3f15j6hhqn3i0bhvli4gc6bp8f")))

