(define-module (crates-io ta pl taplo) #:use-module (crates-io))

(define-public crate-taplo-1.0.0-alpha.1 (c (n "taplo") (v "1.0.0-alpha.1") (d (list (d (n "assert-json-diff") (r "^1.0.3") (d #t) (k 2)) (d (n "chrono") (r "^0.4.11") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "logos") (r "^0.11.4") (d #t) (k 0)) (d (n "lsp-types") (r "^0.74.1") (d #t) (k 0)) (d (n "rowan") (r "^0.10.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "1kjlbkd0bqk78bn3vrikl4xdf75vvjrpkj42a5al383xk7dfkhix") (f (quote (("serialize" "serde") ("default")))) (y #t)))

(define-public crate-taplo-1.0.0-alpha.2 (c (n "taplo") (v "1.0.0-alpha.2") (d (list (d (n "assert-json-diff") (r "^1.0.3") (d #t) (k 2)) (d (n "chrono") (r "^0.4.11") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "logos") (r "^0.11.4") (d #t) (k 0)) (d (n "lsp-types") (r "^0.74.1") (d #t) (k 0)) (d (n "rowan") (r "^0.10.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "0657xsi062198klinfw61sp3agkhqkvl99iiz86x0y0llr76hnlp") (f (quote (("serialize" "serde") ("default")))) (y #t)))

(define-public crate-taplo-1.0.0-alpha.3 (c (n "taplo") (v "1.0.0-alpha.3") (d (list (d (n "assert-json-diff") (r "^1.0.3") (d #t) (k 2)) (d (n "chrono") (r "^0.4.11") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "logos") (r "^0.11.4") (d #t) (k 0)) (d (n "lsp-types") (r "^0.74.1") (d #t) (k 0)) (d (n "rowan") (r "^0.10.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "0l1h1pvr36lsx6rg3clgsb146mfh6vx5rq70k7cmnlp3hzrb0d03") (f (quote (("serialize" "serde") ("default")))) (y #t)))

(define-public crate-taplo-1.0.0-alpha.4 (c (n "taplo") (v "1.0.0-alpha.4") (d (list (d (n "assert-json-diff") (r "^1.0.3") (d #t) (k 2)) (d (n "chrono") (r "^0.4.11") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "logos") (r "^0.11.4") (d #t) (k 0)) (d (n "lsp-types") (r "^0.74.1") (d #t) (k 0)) (d (n "rowan") (r "^0.10.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "toml") (r "^0.5") (d #t) (k 2)))) (h "0m77fskjfwfmxkn8z740jlv4rc7azf8mfzhiw4d4z99gzfc35pp1") (f (quote (("serialize" "serde") ("default") ("bench")))) (y #t)))

(define-public crate-taplo-1.0.0-alpha.5 (c (n "taplo") (v "1.0.0-alpha.5") (d (list (d (n "assert-json-diff") (r "^1.0.3") (d #t) (k 2)) (d (n "chrono") (r "^0.4.11") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "logos") (r "^0.11.4") (d #t) (k 0)) (d (n "lsp-types") (r "^0.74.1") (d #t) (k 0)) (d (n "rowan") (r "^0.10.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "toml") (r "^0.5") (d #t) (k 2)))) (h "0izp0kb82y9039r7ybz6hfk8hpjmvj619vl118kr08knvpysdc1x") (f (quote (("default")))) (y #t)))

(define-public crate-taplo-1.0.0-alpha.6 (c (n "taplo") (v "1.0.0-alpha.6") (d (list (d (n "assert-json-diff") (r "^1.0.3") (d #t) (k 2)) (d (n "chrono") (r "^0.4.11") (d #t) (k 0)) (d (n "indexmap") (r "^1.3.2") (d #t) (k 0)) (d (n "logos") (r "^0.11.4") (d #t) (k 0)) (d (n "lsp-types") (r "^0.74.1") (d #t) (k 0)) (d (n "rowan") (r "^0.10.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "verify") (r "^0.3") (f (quote ("schemars"))) (o #t) (d #t) (k 0)))) (h "1ncw5xz3rzgq0ckc55dqx3xs3q20a2f4asmlqwsmis76r8iga49i") (f (quote (("default")))) (y #t)))

(define-public crate-taplo-0.1.0 (c (n "taplo") (v "0.1.0") (d (list (d (n "assert-json-diff") (r "^1.1") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "logos") (r "^0.11.4") (d #t) (k 0)) (d (n "lsp-types") (r "^0.74.1") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "rowan") (r "^0.10.0") (d #t) (k 0)) (d (n "schemars") (r "^0.8.0-alpha-4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.4") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "verify") (r "^0.3") (f (quote ("schemars"))) (o #t) (d #t) (k 0)))) (h "03ypbz88wwhxgpsai679kmbfqn3rpchzmdz4jah183igyasrd27h") (f (quote (("rewrite") ("default" "serde" "verify" "rewrite"))))))

(define-public crate-taplo-0.2.0 (c (n "taplo") (v "0.2.0") (d (list (d (n "assert-json-diff") (r "^1") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "logos") (r "^0.11.4") (d #t) (k 0)) (d (n "lsp-types") (r "^0.74.1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rowan") (r "^0.10.0") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "verify") (r "^0.3") (f (quote ("schemars" "serde"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1zjfrqdfb9aq26qyy7g9c0lb3wsn3l292zw4vbh2l2nbvqyijl1y") (f (quote (("serde" "serde_crate" "serde_json") ("schema" "once_cell" "schemars" "serde") ("rewrite") ("default") ("_internal_nodejs" "serde" "verify" "schema"))))))

(define-public crate-taplo-0.2.1 (c (n "taplo") (v "0.2.1") (d (list (d (n "assert-json-diff") (r "^1") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "logos") (r "^0.11.4") (d #t) (k 0)) (d (n "lsp-types") (r "^0.74.1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rowan") (r "^0.10.0") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "verify") (r "^0.3") (f (quote ("schemars" "serde"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "01isx1m1a1b75a866adq38k5r24650f2ks8p2n4fxy1fa8799gl9") (f (quote (("serde" "serde_crate" "serde_json") ("schema" "once_cell" "schemars" "serde") ("rewrite") ("default") ("_internal_nodejs" "serde" "verify" "schema"))))))

(define-public crate-taplo-0.3.0 (c (n "taplo") (v "0.3.0") (d (list (d (n "assert-json-diff") (r "^1") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "logos") (r "^0.11.4") (d #t) (k 0)) (d (n "lsp-types") (r "^0.74.1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rowan") (r "^0.10.0") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "verify") (r "^0.3") (f (quote ("schemars" "serde"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "07m0ny2hypxx5xw1kj22gf6mqzwq2mbspxr5mls43yjajf5z5l8h") (f (quote (("serde" "serde_crate" "serde_json") ("schema" "once_cell" "schemars" "serde") ("rewrite"))))))

(define-public crate-taplo-0.3.1 (c (n "taplo") (v "0.3.1") (d (list (d (n "assert-json-diff") (r "^1") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "logos") (r "^0.11.4") (d #t) (k 0)) (d (n "lsp-types") (r "^0.74.1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rowan") (r "^0.10.0") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "verify") (r "^0.3") (f (quote ("schemars" "serde"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "11z10ja54jhsjzh7gcbxkbwhw317a1s894k089cx111x9gw8al59") (f (quote (("serde" "serde_crate" "serde_json") ("schema" "once_cell" "schemars" "serde") ("rewrite"))))))

(define-public crate-taplo-0.4.0 (c (n "taplo") (v "0.4.0") (d (list (d (n "assert-json-diff") (r "^1") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "logos") (r "^0.11.4") (d #t) (k 0)) (d (n "lsp-types") (r ">=0.79, <0.82") (d #t) (k 0)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rowan") (r "^0.10.0") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "verify") (r "^0.3") (f (quote ("schemars" "serde"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0bmjgyh7yazgld7z7ikzs3nrj5lka3lnw5phfs1al2bz9vx9pfg8") (f (quote (("serde" "serde_crate" "serde_json") ("schema" "once_cell" "schemars" "serde") ("rewrite"))))))

(define-public crate-taplo-0.5.0 (c (n "taplo") (v "0.5.0") (d (list (d (n "assert-json-diff") (r "^1") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "logos") (r "^0.11.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rowan") (r "^0.10.0") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "semver") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "verify") (r "^0.3") (f (quote ("schemars" "serde"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "084q1dil5g7p55safwv3dz720gs0nvxp9wixvsr8ch5imkyqrhsp") (f (quote (("serde" "serde_crate" "serde_json") ("schema" "once_cell" "schemars" "serde") ("rewrite"))))))

(define-public crate-taplo-0.5.1 (c (n "taplo") (v "0.5.1") (d (list (d (n "assert-json-diff") (r "^1") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "logos") (r "^0.11.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rowan") (r "^0.10.0") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "semver") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "verify") (r "^0.3") (f (quote ("schemars" "serde"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "16vab13dwa7n3x67h46avkgh88l9dggxwhqfki0qnacnk8hqn7xj") (f (quote (("serde" "serde_crate" "serde_json") ("schema" "once_cell" "schemars" "serde") ("rewrite"))))))

(define-public crate-taplo-0.5.2 (c (n "taplo") (v "0.5.2") (d (list (d (n "assert-json-diff") (r "^2") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "logos") (r "^0.11.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rowan") (r "^0.10.0") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "semver") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "verify") (r "^0.3") (f (quote ("schemars" "serde"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0hb7ki93fz24gsdbdnywd7l79p94h7f35yf7hjii1j8y7gzwxq7g") (f (quote (("serde" "serde_crate" "serde_json") ("schema" "once_cell" "schemars" "serde") ("rewrite"))))))

(define-public crate-taplo-0.5.3 (c (n "taplo") (v "0.5.3") (d (list (d (n "assert-json-diff") (r "^2") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "logos") (r "^0.11.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rowan") (r "^0.10.0") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "semver") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "verify") (r "^0.3") (f (quote ("schemars" "serde"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0yxxn42l26kqw7y12wczw3p56nqbibs2nffv8jzlqg1g0rvq2na7") (f (quote (("serde" "serde_crate" "serde_json") ("schema" "once_cell" "schemars" "serde") ("rewrite"))))))

(define-public crate-taplo-0.5.4 (c (n "taplo") (v "0.5.4") (d (list (d (n "assert-json-diff") (r "^2") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "logos") (r "^0.11.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rowan") (r "^0.10.0") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "semver") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "verify") (r "^0.3") (f (quote ("schemars" "serde"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "049hd01sr17f2dv2bz0l9b86kdd26v8qyrah2sfhgdb7z3ld299a") (f (quote (("serde" "serde_crate" "serde_json") ("schema" "once_cell" "schemars" "serde") ("rewrite"))))))

(define-public crate-taplo-0.6.0 (c (n "taplo") (v "0.6.0") (d (list (d (n "assert-json-diff") (r "^2") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "difference") (r "^2.0.0") (d #t) (k 2)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "logos") (r "^0.12.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rowan") (r "^0.12.6") (d #t) (k 0)) (d (n "schemars") (r "^0.8.3") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "time") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "verify") (r "^0.3") (f (quote ("schemars" "serde"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "076y3bwxbkjlhiaaxh82xzskvr7xw676i7kmdcpbrmq18lmi30qa") (f (quote (("wasm_bindgen" "wasm-bindgen" "toml") ("serde" "serde_crate" "serde_json") ("schema" "once_cell" "schemars" "serde") ("rewrite") ("default" "wasm_bindgen"))))))

(define-public crate-taplo-0.6.1 (c (n "taplo") (v "0.6.1") (d (list (d (n "assert-json-diff") (r "^2") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "difference") (r "^2.0.0") (d #t) (k 2)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "logos") (r "^0.12.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rowan") (r "^0.12.6") (d #t) (k 0)) (d (n "schemars") (r "^0.8.3") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "time") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "verify") (r "^0.3") (f (quote ("schemars" "serde"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1p3zljr65gl1yng7qv7ccs72ag2wfvrl5g3z1gjxi27pps7knd7y") (f (quote (("wasm_bindgen" "wasm-bindgen" "toml") ("serde" "serde_crate" "serde_json") ("schema" "once_cell" "schemars" "serde") ("rewrite") ("default" "wasm_bindgen"))))))

(define-public crate-taplo-0.6.2 (c (n "taplo") (v "0.6.2") (d (list (d (n "assert-json-diff") (r "^2") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "difference") (r "^2.0.0") (d #t) (k 2)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "logos") (r "^0.12.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rowan") (r "^0.12.6") (d #t) (k 0)) (d (n "schemars") (r "^0.8.3") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "time") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "verify") (r "^0.3") (f (quote ("schemars" "serde"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "151qyrakqpzjn4cahpzybwliprfcfbd8sj4xm9w5r052lc6r8jrq") (f (quote (("wasm_bindgen" "wasm-bindgen" "toml") ("serde" "serde_crate" "serde_json") ("schema" "once_cell" "schemars" "serde") ("rewrite") ("default" "wasm_bindgen"))))))

(define-public crate-taplo-0.6.3 (c (n "taplo") (v "0.6.3") (d (list (d (n "assert-json-diff") (r "^2") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "difference") (r "^2.0.0") (d #t) (k 2)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "logos") (r "^0.12.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rowan") (r "^0.12.6") (d #t) (k 0)) (d (n "schemars") (r "^0.8.3") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "time") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "verify") (r "^0.3") (f (quote ("schemars" "serde"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "10cz778ry144bx8wpd94q79nzclx1l9qi8r0gcd23p3aphjc72bv") (f (quote (("wasm_bindgen" "wasm-bindgen" "toml") ("serde" "serde_crate" "serde_json") ("schema" "once_cell" "schemars" "serde") ("rewrite") ("default" "wasm_bindgen"))))))

(define-public crate-taplo-0.7.0 (c (n "taplo") (v "0.7.0") (d (list (d (n "assert-json-diff") (r "^2") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "difference") (r "^2.0.0") (d #t) (k 2)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "logos") (r "^0.12.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rowan") (r "^0.14.1") (d #t) (k 0)) (d (n "schemars") (r "^0.8.3") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "time") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "verify") (r "^0.3") (f (quote ("schemars" "serde"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0nbjflb31fcn1r0wf8ffcd7kh5gqil55mwj8803az5a0zysprlfm") (f (quote (("wasm_bindgen" "wasm-bindgen" "toml") ("serde" "serde_crate" "serde_json") ("schema" "once_cell" "schemars" "serde") ("rewrite") ("default" "wasm_bindgen"))))))

(define-public crate-taplo-0.8.0 (c (n "taplo") (v "0.8.0") (d (list (d (n "ahash") (r "^0.7.6") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5.0") (d #t) (k 0)) (d (n "assert-json-diff") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "difference") (r "^2.0.0") (d #t) (k 2)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "globset") (r "^0.4.8") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "logos") (r "^0.12.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "pprof") (r "^0.7.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "rowan") (r "^0.15.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "time") (r "^0.3.3") (f (quote ("parsing" "formatting" "macros"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.30") (d #t) (k 0)))) (h "0si5nhj6zmflzjvfrpqsk0x9lkfj8yv7aawkq8fgy95vqqh21g15") (f (quote (("schema" "schemars") ("default" "serde"))))))

(define-public crate-taplo-0.9.0 (c (n "taplo") (v "0.9.0") (d (list (d (n "ahash") (r "^0.7.6") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5.0") (d #t) (k 0)) (d (n "assert-json-diff") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "difference") (r "^2.0.0") (d #t) (k 2)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "globset") (r "^0.4.8") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "logos") (r "^0.12.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "pprof") (r "^0.9.1") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "rowan") (r "^0.15.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "time") (r "^0.3.3") (f (quote ("parsing" "formatting" "macros"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.30") (d #t) (k 0)))) (h "02pg6i8hlys9r17kmgq7yb8pil7yz86hdl48zbg0d6dzc0fs8shp") (f (quote (("schema" "schemars") ("default" "serde"))))))

(define-public crate-taplo-0.10.0 (c (n "taplo") (v "0.10.0") (d (list (d (n "ahash") (r "^0.7.6") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5.0") (d #t) (k 0)) (d (n "assert-json-diff") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "difference") (r "^2.0.0") (d #t) (k 2)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "globset") (r "^0.4.8") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "logos") (r "^0.12.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "pprof") (r "^0.9.1") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "rowan") (r "^0.15.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "time") (r "^0.3.3") (f (quote ("parsing" "formatting" "macros"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.30") (d #t) (k 0)))) (h "0gabky48hdw9fy12c7s7h831j1y8a52w05fwvp8x46ix92qpslyp") (f (quote (("schema" "schemars") ("default" "serde"))))))

(define-public crate-taplo-0.11.0 (c (n "taplo") (v "0.11.0") (d (list (d (n "ahash") (r "^0.8.0") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5.0") (d #t) (k 0)) (d (n "assert-json-diff") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "difference") (r "^2.0.0") (d #t) (k 2)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "globset") (r "^0.4.8") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "logos") (r "^0.12.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "pprof") (r "^0.9.1") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "rowan") (r "^0.15.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "time") (r "^0.3.3") (f (quote ("parsing" "formatting" "macros"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.30") (d #t) (k 0)))) (h "1r8nq4x2fghmap0b9a27fp4mhgxkgq5js1jjzs34g5zlc4v528c3") (f (quote (("schema" "schemars") ("default" "serde"))))))

(define-public crate-taplo-0.11.1 (c (n "taplo") (v "0.11.1") (d (list (d (n "ahash") (r "^0.7.6") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5.0") (d #t) (k 0)) (d (n "assert-json-diff") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "difference") (r "^2.0.0") (d #t) (k 2)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "globset") (r "^0.4.8") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "logos") (r "^0.12.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "pprof") (r "^0.9.1") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "rowan") (r "^0.15.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "time") (r "^0.3.3") (f (quote ("parsing" "formatting" "macros"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.30") (d #t) (k 0)))) (h "0s5k1mrfbxkbiwf8s401acw41dy6dxw7a3ilxvm19if9rhrf74kx") (f (quote (("schema" "schemars") ("default" "serde"))))))

(define-public crate-taplo-0.12.0 (c (n "taplo") (v "0.12.0") (d (list (d (n "ahash") (r "^0.7.6") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5.0") (d #t) (k 0)) (d (n "assert-json-diff") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "difference") (r "^2.0.0") (d #t) (k 2)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "globset") (r "^0.4.8") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "logos") (r "^0.12.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "pprof") (r "^0.9.1") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "rowan") (r "^0.15.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "time") (r "^0.3.3") (f (quote ("parsing" "formatting" "macros"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.30") (d #t) (k 0)))) (h "1zk63kw7v5dmzj4iz2n5wkzydf2029zdxq0xiaahz8005d5ylwck") (f (quote (("schema" "schemars") ("default" "serde"))))))

(define-public crate-taplo-0.12.1 (c (n "taplo") (v "0.12.1") (d (list (d (n "ahash") (r "^0.7.6") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5.0") (d #t) (k 0)) (d (n "assert-json-diff") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "difference") (r "^2.0.0") (d #t) (k 2)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "globset") (r "^0.4.8") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "logos") (r "^0.12.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "pprof") (r "^0.9.1") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "rowan") (r "^0.15.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "time") (r "^0.3.3") (f (quote ("parsing" "formatting" "macros"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.30") (d #t) (k 0)))) (h "05s824yz48g2b6y5mzhpfsbs3nmx05pkydm9m6pcjdyg49qmf8id") (f (quote (("schema" "schemars") ("default" "serde"))))))

(define-public crate-taplo-0.13.0 (c (n "taplo") (v "0.13.0") (d (list (d (n "ahash") (r "^0.8.3") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5.0") (d #t) (k 0)) (d (n "assert-json-diff") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "difference") (r "^2.0.0") (d #t) (k 2)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "globset") (r "^0.4.8") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "logos") (r "^0.12.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "pprof") (r "^0.9.1") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "rowan") (r "^0.15.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "time") (r "^0.3.3") (f (quote ("parsing" "formatting" "macros"))) (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 2)) (d (n "tracing") (r "^0.1.30") (d #t) (k 0)))) (h "0hkrg76l62lgxa6n6i6h9b5qvv8dyw9si371lng40r1i7007bbsj") (f (quote (("schema" "schemars") ("default" "serde"))))))

