(define-module (crates-io ta pl taplo-cli) #:use-module (crates-io))

(define-public crate-taplo-cli-0.1.0 (c (n "taplo-cli") (v "0.1.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (f (quote ("suggestions" "std" "cargo"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "pretty-lint") (r "^0.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (d #t) (k 0)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "taplo") (r "^0.2") (f (quote ("serde" "verify" "schema"))) (d #t) (k 0)) (d (n "tokio") (r "^0.3") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 0)) (d (n "tokio-compat-02") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "verify") (r "^0.3") (f (quote ("schemars"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (k 0)))) (h "1mr8asq5x0gpq680rqyv6h2i7g9nnawifhwyvx6ccm51z3k9hws3") (f (quote (("default" "tokio-compat-02") ("_internal_wasm_testing") ("_internal_nodejs" "console_error_panic_hook"))))))

(define-public crate-taplo-cli-0.1.1 (c (n "taplo-cli") (v "0.1.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (f (quote ("suggestions" "std" "cargo"))) (d #t) (k 0) (p "tamasfe-clap")) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "pretty-lint") (r "^0.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (d #t) (k 0)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "taplo") (r "^0.3") (f (quote ("serde" "verify" "schema"))) (d #t) (k 0)) (d (n "tokio") (r "^0.3") (f (quote ("rt-multi-thread" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-compat-02") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "verify") (r "^0.3") (f (quote ("schemars"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0frqi9lp1pcxnmy5scrflbi2vfbpg0i8galdlqwfld4v90vv0dyl") (f (quote (("default"))))))

(define-public crate-taplo-cli-0.2.0 (c (n "taplo-cli") (v "0.2.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (f (quote ("suggestions" "std" "cargo"))) (d #t) (k 0) (p "tamasfe-clap")) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "pretty-lint") (r "^0.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (d #t) (k 0)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "taplo") (r "^0.3.1") (f (quote ("serde" "verify" "schema"))) (d #t) (k 0)) (d (n "tokio") (r "^0.3") (f (quote ("rt-multi-thread" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-compat-02") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "verify") (r "^0.3") (f (quote ("schemars"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "08ml11ck8m7hv3i14213541wc6qyhmfvnzkz03q862y53a7blfk5") (f (quote (("default"))))))

(define-public crate-taplo-cli-0.3.0 (c (n "taplo-cli") (v "0.3.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (f (quote ("suggestions" "std" "cargo"))) (d #t) (k 0) (p "tamasfe-clap")) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "pretty-lint") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (d #t) (k 0)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "taplo") (r "^0.5.1") (f (quote ("serde" "verify" "schema"))) (d #t) (k 0)) (d (n "time") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "macros" "fs"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-compat-02") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "verify") (r "^0.3") (f (quote ("schemars"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0hyb319h2jk24yz5igyf3p64w7n2f76nlcjk372cznia1bf1yrvy") (f (quote (("nightly") ("default"))))))

(define-public crate-taplo-cli-0.3.1 (c (n "taplo-cli") (v "0.3.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (f (quote ("suggestions" "std" "cargo"))) (d #t) (k 0) (p "tamasfe-clap")) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "pretty-lint") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (d #t) (k 0)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "taplo") (r "^0.5.1") (f (quote ("serde" "verify" "schema"))) (d #t) (k 0)) (d (n "time") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "macros" "fs"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-compat-02") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "verify") (r "^0.3") (f (quote ("schemars"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1b8m6x4j1snzcq3mdxffdzznwzp1amnqx87fh9pi0m1vpji3lymh") (f (quote (("nightly") ("default"))))))

(define-public crate-taplo-cli-0.3.2 (c (n "taplo-cli") (v "0.3.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (f (quote ("suggestions" "std" "cargo"))) (d #t) (k 0) (p "tamasfe-clap")) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "pretty-lint") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (d #t) (k 0)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "taplo") (r "^0.5.2") (f (quote ("serde" "verify" "schema"))) (d #t) (k 0)) (d (n "time") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "macros" "fs"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-compat-02") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "verify") (r "^0.3") (f (quote ("schemars"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0yimc8l5v1ki1s4nripr3x42a7a6qsjfkdi9r267pj627gaplkw5") (f (quote (("nightly") ("default"))))))

(define-public crate-taplo-cli-0.4.0 (c (n "taplo-cli") (v "0.4.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (f (quote ("suggestions" "std" "cargo"))) (d #t) (k 0) (p "tamasfe-clap")) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "pretty-lint") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("json"))) (d #t) (k 0)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "taplo") (r "^0.6.0") (f (quote ("serde" "verify" "schema"))) (d #t) (k 0)) (d (n "time") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "macros" "fs"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "verify") (r "^0.3") (f (quote ("schemars"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "09r3hgsp8xz87yvamiw60zrl6yainris6iq2ysd1d11qp1crkr59") (f (quote (("nightly") ("default"))))))

(define-public crate-taplo-cli-0.4.1 (c (n "taplo-cli") (v "0.4.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (f (quote ("suggestions" "std" "cargo"))) (d #t) (k 0) (p "tamasfe-clap")) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "pretty-lint") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("json"))) (d #t) (k 0)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "taplo") (r "^0.7.0") (f (quote ("serde" "verify" "schema"))) (d #t) (k 0)) (d (n "time") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "macros" "fs"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "verify") (r "^0.3") (f (quote ("schemars"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1hvws18gjmkgpa13jx9f22jhmmf7m2i10imlh1w2dqcwxp7m8l1n") (f (quote (("nightly") ("default"))))))

(define-public crate-taplo-cli-0.5.0 (c (n "taplo-cli") (v "0.5.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (f (quote ("suggestions" "std" "cargo"))) (d #t) (k 0) (p "tamasfe-clap")) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "pretty-lint") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("json"))) (d #t) (k 0)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "taplo") (r "^0.7.0") (f (quote ("serde" "verify" "schema"))) (d #t) (k 0)) (d (n "time") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "macros" "fs"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "verify") (r "^0.3") (f (quote ("schemars"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1qg7nhdyf76rjf4sw2jzv38j1vw4xl4i50v0s9p0i8mrw8nl84f5") (f (quote (("nightly") ("default"))))))

(define-public crate-taplo-cli-0.6.0 (c (n "taplo-cli") (v "0.6.0") (d (list (d (n "anyhow") (r "^1") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-ctrlc") (r "^1.2.0") (f (quote ("stream"))) (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lsp-async-stub") (r "^0.5.0") (f (quote ("tokio-tcp" "tokio-stdio"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("json"))) (d #t) (k 0)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "taplo") (r "^0.8.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "taplo-common") (r "^0.1.0") (d #t) (k 0)) (d (n "taplo-lsp") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "macros" "fs"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.7") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "05w9ffvlrlx98l2dldrpi4xlf4imj37p33qj0px7clrxz69zfklp") (f (quote (("toml-test") ("plugin-crates" "taplo-lsp/plugin-crates") ("lsp" "taplo-lsp") ("default" "lsp" "plugin-crates"))))))

(define-public crate-taplo-cli-0.6.1 (c (n "taplo-cli") (v "0.6.1") (d (list (d (n "anyhow") (r "^1") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-ctrlc") (r "^1.2.0") (f (quote ("stream"))) (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lsp-async-stub") (r "^0.5.0") (f (quote ("tokio-tcp" "tokio-stdio"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("json"))) (d #t) (k 0)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "taplo") (r "^0.8.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "taplo-common") (r "^0.1.0") (d #t) (k 0)) (d (n "taplo-lsp") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "macros" "fs"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.7") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "0szlxyqlri7kpq6dcn73km46rbq4xinn9rbsyk3rzkg8qrj74dzp") (f (quote (("toml-test") ("plugin-crates" "taplo-lsp/plugin-crates") ("lsp" "taplo-lsp") ("default" "lsp" "plugin-crates"))))))

(define-public crate-taplo-cli-0.6.2 (c (n "taplo-cli") (v "0.6.2") (d (list (d (n "anyhow") (r "^1") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-ctrlc") (r "^1.2.0") (f (quote ("stream"))) (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lsp-async-stub") (r "^0.5.0") (f (quote ("tokio-tcp" "tokio-stdio"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("json"))) (d #t) (k 0)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "taplo") (r "^0.8.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "taplo-common") (r "^0.1.0") (d #t) (k 0)) (d (n "taplo-lsp") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "macros" "fs"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.7") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "0wdjpgr8xcdvs5s29jmynqba0yk8vpd5lda4pxknk87yg7r328kg") (f (quote (("toml-test") ("plugin-crates" "taplo-lsp/plugin-crates") ("lsp" "taplo-lsp") ("default" "lsp" "plugin-crates"))))))

(define-public crate-taplo-cli-0.6.3 (c (n "taplo-cli") (v "0.6.3") (d (list (d (n "anyhow") (r "^1") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-ctrlc") (r "^1.2.0") (f (quote ("stream"))) (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lsp-async-stub") (r "^0.5.0") (f (quote ("tokio-tcp" "tokio-stdio"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("json"))) (d #t) (k 0)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "taplo") (r "^0.8.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "taplo-common") (r "^0.1.2") (d #t) (k 0)) (d (n "taplo-lsp") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "macros" "fs"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.7") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "0x5pwymaj47xw0rrbg9ng8dw7pfd05vg430g5g6dbn8m0l4dp4a4") (f (quote (("toml-test") ("plugin-crates" "taplo-lsp/plugin-crates") ("lsp" "taplo-lsp") ("default" "lsp" "plugin-crates"))))))

(define-public crate-taplo-cli-0.6.5 (c (n "taplo-cli") (v "0.6.5") (d (list (d (n "anyhow") (r "^1") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-ctrlc") (r "^1.2.0") (f (quote ("stream"))) (o #t) (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lsp-async-stub") (r "^0.6.0") (f (quote ("tokio-tcp" "tokio-stdio"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("json"))) (d #t) (k 0)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "taplo") (r "^0.9.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "taplo-common") (r "^0.2.0") (d #t) (k 0)) (d (n "taplo-lsp") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("sync" "fs" "time" "io-std" "rt-multi-thread" "parking_lot"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("sync" "parking_lot" "io-util"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.7") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "0fssjrm77x99qwbbkvhpk5hn8dah8jc7za112748dhpcyqprvnya") (f (quote (("toml-test") ("lsp" "taplo-lsp" "async-ctrlc") ("default"))))))

(define-public crate-taplo-cli-0.6.6 (c (n "taplo-cli") (v "0.6.6") (d (list (d (n "anyhow") (r "^1") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-ctrlc") (r "^1.2.0") (f (quote ("stream"))) (o #t) (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lsp-async-stub") (r "^0.6.0") (f (quote ("tokio-tcp" "tokio-stdio"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("json"))) (d #t) (k 0)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "taplo") (r "^0.9.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "taplo-common") (r "^0.2.0") (d #t) (k 0)) (d (n "taplo-lsp") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("sync" "fs" "time" "io-std" "rt-multi-thread" "parking_lot"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("sync" "parking_lot" "io-util"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.7") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "1ppi5jhy282q89mvnqqsv9lzballwf4k9dn7qn7a5mbn80rx0as3") (f (quote (("toml-test") ("lsp" "taplo-lsp" "async-ctrlc") ("default"))))))

(define-public crate-taplo-cli-0.6.7 (c (n "taplo-cli") (v "0.6.7") (d (list (d (n "anyhow") (r "^1") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-ctrlc") (r "^1.2.0") (f (quote ("stream"))) (o #t) (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lsp-async-stub") (r "^0.6.0") (f (quote ("tokio-tcp" "tokio-stdio"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("json"))) (d #t) (k 0)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "taplo") (r "^0.9.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "taplo-common") (r "^0.2.0") (d #t) (k 0)) (d (n "taplo-lsp") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("sync" "fs" "time" "io-std" "rt-multi-thread" "parking_lot"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("sync" "parking_lot" "io-util"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.7") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "1791xrdwcgsrvkjwgc9nwb926r8ags0nan7x44iz5wkqpsnrb8bi") (f (quote (("toml-test") ("lsp" "taplo-lsp" "async-ctrlc") ("default"))))))

(define-public crate-taplo-cli-0.6.8 (c (n "taplo-cli") (v "0.6.8") (d (list (d (n "anyhow") (r "^1") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-ctrlc") (r "^1.2.0") (f (quote ("stream"))) (o #t) (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lsp-async-stub") (r "^0.6.0") (f (quote ("tokio-tcp" "tokio-stdio"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("json"))) (d #t) (k 0)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "taplo") (r "^0.9.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "taplo-common") (r "^0.2.0") (d #t) (k 0)) (d (n "taplo-lsp") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("sync" "fs" "time" "io-std" "rt-multi-thread" "parking_lot"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("sync" "parking_lot" "io-util"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.7") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "1yxbjd3hb5mkhrprm852j1ksvdm5pmb6xppikj1avy989lrsgq92") (f (quote (("toml-test") ("lsp" "taplo-lsp" "async-ctrlc") ("default"))))))

(define-public crate-taplo-cli-0.6.9 (c (n "taplo-cli") (v "0.6.9") (d (list (d (n "anyhow") (r "^1") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-ctrlc") (r "^1.2.0") (f (quote ("stream"))) (o #t) (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lsp-async-stub") (r "^0.6.0") (f (quote ("tokio-tcp" "tokio-stdio"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("json"))) (d #t) (k 0)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "taplo") (r "^0.9.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "taplo-common") (r "^0.2.1") (d #t) (k 0)) (d (n "taplo-lsp") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("sync" "fs" "time" "io-std" "rt-multi-thread" "parking_lot"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("sync" "parking_lot" "io-util"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.7") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "1np6mkyq8wxqs15g5hzp0dj6n4q34w0hhr6jlpl0jlqsh9py8m7w") (f (quote (("toml-test") ("lsp" "taplo-lsp" "async-ctrlc") ("default"))))))

(define-public crate-taplo-cli-0.6.10 (c (n "taplo-cli") (v "0.6.10") (d (list (d (n "anyhow") (r "^1") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-ctrlc") (r "^1.2.0") (f (quote ("stream"))) (o #t) (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lsp-async-stub") (r "^0.6.0") (f (quote ("tokio-tcp" "tokio-stdio"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("json"))) (d #t) (k 0)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "taplo") (r "^0.10.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "taplo-common") (r "^0.2.2") (d #t) (k 0)) (d (n "taplo-lsp") (r "^0.4.6") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("sync" "fs" "time" "io-std" "rt-multi-thread" "parking_lot"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("sync" "parking_lot" "io-util"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.7") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "12bnkxn60qqk3p4a2is22p2clhj6n7yyba0zbz7vrgpgbq9z6cbn") (f (quote (("toml-test") ("lsp" "taplo-lsp" "async-ctrlc") ("default"))))))

(define-public crate-taplo-cli-0.7.0 (c (n "taplo-cli") (v "0.7.0") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "anyhow") (r "^1") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-ctrlc") (r "^1.2.0") (f (quote ("stream"))) (o #t) (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lsp-async-stub") (r "^0.6.0") (f (quote ("tokio-tcp" "tokio-stdio"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "prettydiff") (r "^0.6.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.9") (f (quote ("json" "rustls-tls"))) (k 0)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "taplo") (r "^0.11.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "taplo-common") (r "^0.3.0") (d #t) (k 0)) (d (n "taplo-lsp") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("sync" "fs" "time" "io-std" "rt-multi-thread" "parking_lot"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("sync" "parking_lot" "io-util"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.7") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "00gjq021p26mz4maw8kwidsgpi4apb4vhdnfmdp8fkpjvh18nps4") (f (quote (("toml-test") ("lsp" "taplo-lsp" "async-ctrlc") ("default"))))))

(define-public crate-taplo-cli-0.7.2 (c (n "taplo-cli") (v "0.7.2") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "anyhow") (r "^1") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-ctrlc") (r "^1.2.0") (f (quote ("stream"))) (o #t) (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lsp-async-stub") (r "^0.6.0") (f (quote ("tokio-tcp" "tokio-stdio"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "prettydiff") (r "^0.6.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.9") (f (quote ("json"))) (k 0)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "taplo") (r "^0.11.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "taplo-common") (r "^0.3.0") (d #t) (k 0)) (d (n "taplo-lsp") (r "^0.5.0") (o #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("sync" "fs" "time" "io-std" "rt-multi-thread" "parking_lot"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("sync" "parking_lot" "io-util"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.7") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "0b6i4hh0xnnyc1cmwvckj04wvnfc3hffr9k0nq3qj0zp1wljbzln") (f (quote (("toml-test") ("rustls-tls" "taplo-common/rustls-tls") ("native-tls" "taplo-common/native-tls") ("lsp" "taplo-lsp" "async-ctrlc") ("default" "rustls-tls"))))))

(define-public crate-taplo-cli-0.8.0 (c (n "taplo-cli") (v "0.8.0") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "anyhow") (r "^1") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-ctrlc") (r "^1.2.0") (f (quote ("stream"))) (o #t) (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lsp-async-stub") (r "^0.6.0") (f (quote ("tokio-tcp" "tokio-stdio"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "prettydiff") (r "^0.6.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.9") (f (quote ("json"))) (k 0)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "taplo") (r "^0.12.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "taplo-common") (r "^0.4.0") (d #t) (k 0)) (d (n "taplo-lsp") (r "^0.6.0") (o #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("sync" "fs" "time" "io-std" "rt-multi-thread" "parking_lot"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("sync" "parking_lot" "io-util"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.7") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "1icr41krfkm30vw8zvqprv04jbci34j4iw98hdiv50ifwdw8af6i") (f (quote (("toml-test") ("rustls-tls" "taplo-common/rustls-tls") ("native-tls" "taplo-common/native-tls") ("lsp" "taplo-lsp" "async-ctrlc") ("default" "rustls-tls"))))))

(define-public crate-taplo-cli-0.8.1 (c (n "taplo-cli") (v "0.8.1") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "anyhow") (r "^1") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-ctrlc") (r "^1.2.0") (f (quote ("stream"))) (o #t) (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lsp-async-stub") (r "^0.6.0") (f (quote ("tokio-tcp" "tokio-stdio"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "prettydiff") (r "^0.6.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.9") (f (quote ("json"))) (k 0)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "taplo") (r "^0.12.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "taplo-common") (r "^0.4.1") (d #t) (k 0)) (d (n "taplo-lsp") (r "^0.6.1") (o #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("sync" "fs" "time" "io-std" "rt-multi-thread" "parking_lot"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("sync" "parking_lot" "io-util"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.7") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "1db96zz8gki07klc1ghywx1pajskwbmpkysc925mb7ll898balx0") (f (quote (("toml-test") ("rustls-tls" "taplo-common/rustls-tls") ("native-tls" "taplo-common/native-tls") ("lsp" "taplo-lsp" "async-ctrlc") ("default" "rustls-tls"))))))

(define-public crate-taplo-cli-0.9.0 (c (n "taplo-cli") (v "0.9.0") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "anyhow") (r "^1") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-ctrlc") (r "^1.2.0") (f (quote ("stream"))) (o #t) (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "cargo" "env"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lsp-async-stub") (r "^0.6.0") (f (quote ("tokio-tcp" "tokio-stdio"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "prettydiff") (r "^0.6.1") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.9") (f (quote ("json"))) (k 0)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "taplo") (r "^0.13.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "taplo-common") (r "^0.5.0") (d #t) (k 0)) (d (n "taplo-lsp") (r "^0.7.0") (o #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("sync" "fs" "time" "io-std" "rt-multi-thread" "parking_lot"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("sync" "parking_lot" "io-util"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.7") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "1q2kw75f0pacfgwdjrlskc5yqqq8iz97vkmdcmsggkdazh0yl7fd") (f (quote (("toml-test") ("rustls-tls" "taplo-common/rustls-tls") ("native-tls" "taplo-common/native-tls") ("lsp" "taplo-lsp" "async-ctrlc") ("default" "rustls-tls"))))))

