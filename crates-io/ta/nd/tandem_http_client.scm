(define-module (crates-io ta nd tandem_http_client) #:use-module (crates-io))

(define-public crate-tandem_http_client-0.1.0 (c (n "tandem_http_client") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "predicates") (r "^2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tandem") (r "^0.1.0") (d #t) (k 0)) (d (n "tandem_garble_interop") (r "^0.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wee_alloc") (r "^0.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0bah13285p7sa90c4qcgapl0jhgkaxr34mm4nz3x4jknlnhd0i1p") (f (quote (("default" "console_error_panic_hook") ("bin")))) (r "1.60.0")))

(define-public crate-tandem_http_client-0.2.1 (c (n "tandem_http_client") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "predicates") (r "^2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tandem") (r "^0.2.1") (d #t) (k 0)) (d (n "tandem_garble_interop") (r "^0.2.1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wee_alloc") (r "^0.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1jzd08zsp0yq5hm0fbzzd3lzv6ip2v28p4rvhx52r9smw4269jyi") (f (quote (("default" "console_error_panic_hook") ("bin")))) (r "1.60.0")))

(define-public crate-tandem_http_client-0.3.0 (c (n "tandem_http_client") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "predicates") (r "^2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tandem") (r "^0.3.0") (d #t) (k 0)) (d (n "tandem_garble_interop") (r "^0.3.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wee_alloc") (r "^0.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "17vil9xl3l34s26g7fjn4x546i10vx47nv8k4n7hm88w4ak3s14s") (f (quote (("default" "console_error_panic_hook") ("bin")))) (r "1.60.0")))

