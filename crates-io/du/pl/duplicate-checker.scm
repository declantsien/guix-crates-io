(define-module (crates-io du pl duplicate-checker) #:use-module (crates-io))

(define-public crate-duplicate-checker-1.0.0 (c (n "duplicate-checker") (v "1.0.0") (d (list (d (n "async-std") (r "^1") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "data-encoding") (r "^2.3.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "spinners") (r "^4.1.0") (d #t) (k 0)))) (h "0fv75gijzr3y6chpi0k14h41pmvrjr91r3yhgm3jxajh6bbdg0bd") (y #t)))

(define-public crate-duplicate-checker-1.0.1 (c (n "duplicate-checker") (v "1.0.1") (d (list (d (n "async-std") (r "^1") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "data-encoding") (r "^2.3.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "spinners") (r "^4.1.0") (d #t) (k 0)))) (h "0varbvjlsdhnspxp033mpkd68ln2j8v2iw479mwanswa5z8nq1px") (y #t)))

(define-public crate-duplicate-checker-1.0.2 (c (n "duplicate-checker") (v "1.0.2") (d (list (d (n "async-std") (r "^1") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "data-encoding") (r "^2.3.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "spinners") (r "^4.1.0") (d #t) (k 0)))) (h "1g4xgcallgqyvjpc74ks7hr4i754xnh9yxm89lmmyzc0bbgx6jvw") (y #t)))

(define-public crate-duplicate-checker-1.2.0 (c (n "duplicate-checker") (v "1.2.0") (d (list (d (n "async-std") (r "^1") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "data-encoding") (r "^2.3.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "spinners") (r "^4.1.0") (d #t) (k 0)))) (h "1vwk366li8hljrmmcb09ryavcvwq87c44xps394yq00miwj737w7") (y #t)))

(define-public crate-duplicate-checker-1.4.0 (c (n "duplicate-checker") (v "1.4.0") (d (list (d (n "async-std") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.3.10") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "data-encoding") (r "^2.3.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "spinners") (r "^4.1.0") (d #t) (k 0)))) (h "0a02zhk6k5cmfcdghaybjp6rjcy5cbd8vq8qxgymh407gl3naa6x")))

(define-public crate-duplicate-checker-2.0.0 (c (n "duplicate-checker") (v "2.0.0") (d (list (d (n "clap") (r "^4.3.10") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "data-encoding") (r "^2.3.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "spinners") (r "^4.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("macros" "rt" "rt-multi-thread" "sync" "io-std" "io-util" "fs"))) (d #t) (k 0)))) (h "1gk8s6ircd5q7nza5fnj8976bkcigrig6gwvy4mab682fcrfd4ig")))

