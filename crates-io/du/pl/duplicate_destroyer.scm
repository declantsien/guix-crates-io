(define-module (crates-io du pl duplicate_destroyer) #:use-module (crates-io))

(define-public crate-duplicate_destroyer-0.0.1 (c (n "duplicate_destroyer") (v "0.0.1") (d (list (d (n "blake2") (r "^0") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0") (d #t) (k 0)) (d (n "id_tree") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0") (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "threadpool") (r "^1") (d #t) (k 0)))) (h "0hlfc4dzzgfh7whp0drr5xxahmks1s2m7mczqzs1x1b10rz838rn") (f (quote (("cli" "clap")))) (r "1.64")))

(define-public crate-duplicate_destroyer-0.0.2 (c (n "duplicate_destroyer") (v "0.0.2") (d (list (d (n "blake2") (r "^0") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0") (d #t) (k 0)) (d (n "id_tree") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0") (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "threadpool") (r "^1") (d #t) (k 0)))) (h "1qmivkwz18mcd4qaf9p4p7dg1inmhzjcx9lsr1qn9vi19fhkjmp7") (f (quote (("cli" "clap")))) (r "1.64")))

(define-public crate-duplicate_destroyer-0.0.3 (c (n "duplicate_destroyer") (v "0.0.3") (d (list (d (n "blake2") (r "^0") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "copy_confirmer") (r "^0") (o #t) (d #t) (k 0)) (d (n "dialoguer") (r "^0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0") (d #t) (k 0)) (d (n "id_tree") (r "^1") (d #t) (k 0)) (d (n "indicatif") (r "^0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0") (d #t) (k 0)) (d (n "minus") (r "^5") (f (quote ("static_output" "search"))) (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "threadpool") (r "^1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0y9vkzdbd4sxikzljdp6y54xdggr0hx42sa3pca3k6y92vwqg9sr") (f (quote (("cli" "clap" "indicatif" "copy_confirmer" "dialoguer" "minus")))) (r "1.64")))

(define-public crate-duplicate_destroyer-0.0.4 (c (n "duplicate_destroyer") (v "0.0.4") (d (list (d (n "blake2") (r "^0") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "copy_confirmer") (r "^0") (o #t) (d #t) (k 0)) (d (n "dialoguer") (r "^0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0") (d #t) (k 0)) (d (n "id_tree") (r "^1") (d #t) (k 0)) (d (n "indicatif") (r "^0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0") (d #t) (k 0)) (d (n "minus") (r "^5") (f (quote ("static_output" "search"))) (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "threadpool") (r "^1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "16wlzbim2ck7pcjmirjjynj7d34cgvmyjrlv1q78dfqis5s84san") (f (quote (("cli" "clap" "indicatif" "copy_confirmer" "dialoguer" "minus")))) (r "1.64")))

(define-public crate-duplicate_destroyer-0.0.5 (c (n "duplicate_destroyer") (v "0.0.5") (d (list (d (n "blake2") (r "^0") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "copy_confirmer") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "dialoguer") (r "^0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0") (d #t) (k 0)) (d (n "id_tree") (r "^1") (d #t) (k 0)) (d (n "indicatif") (r "^0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0") (d #t) (k 0)) (d (n "minus") (r "^5") (f (quote ("static_output" "search"))) (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "threadpool") (r "^1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0z2vxa5rhxw1v6kbwq4sdcaw4n3wlfiipbn1ysmnfbsrqfdqw1zp") (f (quote (("cli" "clap" "indicatif" "copy_confirmer" "dialoguer" "minus")))) (r "1.64")))

(define-public crate-duplicate_destroyer-0.0.6 (c (n "duplicate_destroyer") (v "0.0.6") (d (list (d (n "blake2") (r "^0") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "copy_confirmer") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "dialoguer") (r "^0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0") (d #t) (k 0)) (d (n "id_tree") (r "^1") (d #t) (k 0)) (d (n "indicatif") (r "^0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0") (d #t) (k 0)) (d (n "minus") (r "^5") (f (quote ("static_output" "search"))) (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "threadpool") (r "^1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1s7a0qfa0v6ghq7z3vvfnfascyn7asdw8nqvywc8ajwpwr3375hw") (f (quote (("cli" "clap" "indicatif" "copy_confirmer" "dialoguer" "minus")))) (r "1.64")))

(define-public crate-duplicate_destroyer-0.0.7 (c (n "duplicate_destroyer") (v "0.0.7") (d (list (d (n "blake2") (r "^0") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "copy_confirmer") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "dialoguer") (r "^0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0") (d #t) (k 0)) (d (n "id_tree") (r "^1") (d #t) (k 0)) (d (n "indicatif") (r "^0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0") (d #t) (k 0)) (d (n "minus") (r "^5") (f (quote ("static_output" "search"))) (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "threadpool") (r "^1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1lhl0jzj5pzbs79vdcc4knlmsbpr0yfgbd7h7i9004ily7z33cv3") (f (quote (("cli" "clap" "indicatif" "copy_confirmer" "dialoguer" "minus")))) (r "1.64")))

(define-public crate-duplicate_destroyer-0.0.8 (c (n "duplicate_destroyer") (v "0.0.8") (d (list (d (n "blake2") (r "^0") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "copy_confirmer") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dialoguer") (r "^0") (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "env_logger") (r "^0") (d #t) (k 0)) (d (n "id_tree") (r "^1") (d #t) (k 0)) (d (n "indicatif") (r "^0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0") (d #t) (k 0)) (d (n "minus") (r "^5") (f (quote ("static_output" "search"))) (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "threadpool") (r "^1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0mx366lpcxcf5l2p6ipzrx2yg3gif6rdd40am5fh2cx84472r41a") (f (quote (("cli" "clap" "indicatif" "copy_confirmer" "dialoguer" "minus")))) (r "1.64")))

