(define-module (crates-io du ni duniter-peer) #:use-module (crates-io))

(define-public crate-duniter-peer-0.55.1 (c (n "duniter-peer") (v "0.55.1") (d (list (d (n "beef") (r "^0.5.0") (d #t) (k 0)) (d (n "dubp-common") (r "^0.55.1") (k 0)) (d (n "log") (r "0.4.*") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "1.0.*") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "1.0.*") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "unwrap") (r "^1.2.1") (d #t) (k 2)))) (h "0z347846nnww3spdsmrvrmm8qkdfb58qw2s6lgq4xk7mknkf5v62") (f (quote (("duniter" "dubp-common/duniter") ("crypto_scrypt" "dubp-common/crypto_scrypt") ("client" "dubp-common/client"))))))

(define-public crate-duniter-peer-0.56.0 (c (n "duniter-peer") (v "0.56.0") (d (list (d (n "beef") (r "^0.5.0") (d #t) (k 0)) (d (n "dubp-common") (r "^0.56.0") (k 0)) (d (n "log") (r "0.4.*") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "1.0.*") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "1.0.*") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "unwrap") (r "^1.2.1") (d #t) (k 2)))) (h "1dbrivnzr69rdcf061i44ydwjx8zybrvaqs7l9mp2hpwsjpmjwml") (f (quote (("duniter" "dubp-common/duniter") ("crypto_scrypt" "dubp-common/crypto_scrypt") ("client" "dubp-common/client"))))))

(define-public crate-duniter-peer-0.57.0 (c (n "duniter-peer") (v "0.57.0") (d (list (d (n "beef") (r "^0.5.0") (d #t) (k 0)) (d (n "dubp-common") (r "^0.57.0") (k 0)) (d (n "log") (r "0.4.*") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "1.0.*") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "1.0.*") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "unwrap") (r "^1.2.1") (d #t) (k 2)))) (h "1lsji42mzk927dgw6fhn51bxd7my0j9nmx06rd9l8a3yn48ga10n") (f (quote (("duniter" "dubp-common/duniter") ("crypto_scrypt" "dubp-common/crypto_scrypt") ("client" "dubp-common/client"))))))

(define-public crate-duniter-peer-0.58.0 (c (n "duniter-peer") (v "0.58.0") (d (list (d (n "beef") (r "^0.5.0") (d #t) (k 0)) (d (n "dubp-common") (r "^0.58.0") (k 0)) (d (n "log") (r "0.4.*") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "1.0.*") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "1.0.*") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "unwrap") (r "^1.2.1") (d #t) (k 2)))) (h "1bycdjjkrj7chml4rir9rplisk4bm1hgjgzqlyhsicdbd2jvnblm") (f (quote (("duniter" "dubp-common/duniter") ("client" "dubp-common/client"))))))

