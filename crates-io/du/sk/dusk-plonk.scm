(define-module (crates-io du sk dusk-plonk) #:use-module (crates-io))

(define-public crate-dusk-plonk-0.1.0 (c (n "dusk-plonk") (v "0.1.0") (d (list (d (n "bincode") (r "^1.2.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3.0") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.1.0") (d #t) (k 0)) (d (n "failure") (r "^0.1") (f (quote ("derive"))) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "merlin") (r "^2.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (k 0)) (d (n "rayon") (r "^1.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.106") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "08m7p0sz6c2b06pyvzklllmf2g6ma259ad966s2q5bhd10kdpdc2") (f (quote (("trace-print" "trace") ("trace") ("nightly") ("default" "serde"))))))

(define-public crate-dusk-plonk-0.2.0 (c (n "dusk-plonk") (v "0.2.0") (d (list (d (n "dusk-bls12_381") (r "^0.1.2") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.3.1") (d #t) (k 0)) (d (n "failure") (r "^0.1.7") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "merlin") (r "^2.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (k 0)) (d (n "rayon") (r "^1.3.0") (d #t) (k 0)))) (h "05mkanh2l4lwwibvpxpwk6c6nfwqkyh9pldk0zkl2qcdv90dgl4v") (f (quote (("trace-print" "trace") ("trace") ("nightly"))))))

(define-public crate-dusk-plonk-0.2.1 (c (n "dusk-plonk") (v "0.2.1") (d (list (d (n "dusk-bls12_381") (r "^0.1.2") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.3.2") (d #t) (k 0)) (d (n "failure") (r "^0.1.7") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "merlin") (r "^2.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (k 0)) (d (n "rayon") (r "^1.3.0") (d #t) (k 0)))) (h "1hvyh6ky17zc2c745lld88vrs829iwiyvbnvqn4hyxfl7qirv1gl") (f (quote (("trace-print" "trace") ("trace") ("nightly")))) (y #t)))

(define-public crate-dusk-plonk-0.2.2 (c (n "dusk-plonk") (v "0.2.2") (d (list (d (n "dusk-bls12_381") (r "^0.1.2") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.3.3") (d #t) (k 0)) (d (n "failure") (r "^0.1.7") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "merlin") (r "^2.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (k 0)) (d (n "rayon") (r "^1.3.0") (d #t) (k 0)))) (h "1w0s2gdjwyvpw084956iqzpzwlyb9f9z78vnqg3jk34z3j7lxa5a") (f (quote (("trace-print" "trace") ("trace") ("nightly"))))))

(define-public crate-dusk-plonk-0.2.3 (c (n "dusk-plonk") (v "0.2.3") (d (list (d (n "dusk-bls12_381") (r "^0.1.2") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.3.4") (d #t) (k 0)) (d (n "failure") (r "^0.1.7") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "merlin") (r "^2.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (k 0)) (d (n "rayon") (r "^1.3.0") (d #t) (k 0)))) (h "04s3xp3bxsw3mllbggdklk6pjax3dgvwds8fz45livnj7i0dna2r") (f (quote (("trace-print" "trace") ("trace") ("nightly"))))))

(define-public crate-dusk-plonk-0.2.4 (c (n "dusk-plonk") (v "0.2.4") (d (list (d (n "dusk-bls12_381") (r "^0.1.2") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.3.5") (d #t) (k 0)) (d (n "failure") (r "^0.1.7") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "merlin") (r "^2.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (k 0)) (d (n "rayon") (r "^1.3.0") (d #t) (k 0)))) (h "11ks1liarwaf8ylib6biyz0ixma8r4sgg18kn8s4y1bh01hgbr92") (f (quote (("trace-print" "trace") ("trace") ("nightly"))))))

(define-public crate-dusk-plonk-0.2.5 (c (n "dusk-plonk") (v "0.2.5") (d (list (d (n "dusk-bls12_381") (r "^0.1.2") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.3.5") (d #t) (k 0)) (d (n "failure") (r "^0.1.7") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "merlin") (r "^2.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (k 0)) (d (n "rayon") (r "^1.3.0") (d #t) (k 0)))) (h "1azrmm53kfbw0kcwhpsph1wk80yh55pzmk9pxsa9gcgy1wsxm2dq") (f (quote (("trace-print" "trace") ("trace") ("nightly"))))))

(define-public crate-dusk-plonk-0.2.6 (c (n "dusk-plonk") (v "0.2.6") (d (list (d (n "dusk-bls12_381") (r "^0.1.2") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.3.5") (d #t) (k 0)) (d (n "failure") (r "^0.1.7") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "merlin") (r "^2.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (k 0)) (d (n "rayon") (r "^1.3.0") (d #t) (k 0)))) (h "0zw3v4zkig1w8idnfncvl66di3b6zii6mhn6nhm4k5yn3sc7wfhg") (f (quote (("trace-print" "trace") ("trace") ("nightly"))))))

(define-public crate-dusk-plonk-0.2.7 (c (n "dusk-plonk") (v "0.2.7") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "dusk-bls12_381") (r "^0.1.2") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.3.6") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "merlin") (r "^2.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (k 0)) (d (n "rayon") (r "^1.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "14c6gg6j9x685pny9r9w2ip46n0nm8r7fwzj1my37a5gjhv1j0yg") (f (quote (("trace-print" "trace") ("trace") ("nightly"))))))

(define-public crate-dusk-plonk-0.2.8 (c (n "dusk-plonk") (v "0.2.8") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "dusk-bls12_381") (r "^0.1.2") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.3.6") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "merlin") (r "^2.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (k 0)) (d (n "rayon") (r "^1.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1z58vn7saflz36a2aihllqqjvk395g8qkff87mlcc9xi11bshkmg") (f (quote (("trace-print" "trace") ("trace") ("nightly"))))))

(define-public crate-dusk-plonk-0.2.9 (c (n "dusk-plonk") (v "0.2.9") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "dusk-bls12_381") (r "^0.1.4") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.3.8") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "merlin") (r "^2.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (k 0)) (d (n "rayon") (r "^1.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1vrg85dfgk6jlc3c0icpgadhk6pzcsmh1dxs1b847clm8x72w8qb") (f (quote (("trace-print" "trace") ("trace") ("nightly"))))))

(define-public crate-dusk-plonk-0.2.10 (c (n "dusk-plonk") (v "0.2.10") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "dusk-bls12_381") (r "^0.1.4") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.3.8") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "merlin") (r "^2.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (k 0)) (d (n "rayon") (r "^1.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1m1aawm6fwim9psxw05h2c11bpfg2cjywm8jp7hjyd9bpj4whzrb") (f (quote (("trace-print" "trace") ("trace") ("nightly"))))))

(define-public crate-dusk-plonk-0.2.11 (c (n "dusk-plonk") (v "0.2.11") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "dusk-bls12_381") (r "^0.1.4") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.3.8") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "merlin") (r "^2.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (k 0)) (d (n "rayon") (r "^1.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1bswhkncsaaqv3l85iylgrpcidzaw6xdwm64mx6jki3xpgxl942f") (f (quote (("trace-print" "trace") ("trace") ("nightly"))))))

(define-public crate-dusk-plonk-0.3.0 (c (n "dusk-plonk") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "dusk-bls12_381") (r "^0.1.4") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.3.8") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "merlin") (r "^2.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (k 0)) (d (n "rayon") (r "^1.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1j9p678z1cbvc81gjkk7c9dvi1zhmcq4z44rmzfaa29xhs7x59q8") (f (quote (("trace-print" "trace") ("trace") ("nightly"))))))

(define-public crate-dusk-plonk-0.3.1 (c (n "dusk-plonk") (v "0.3.1") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "dusk-bls12_381") (r "^0.1.4") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.3.8") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "merlin") (r "^2.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (k 0)) (d (n "rayon") (r "^1.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1f7hds3fkkpssv1hp3kq7diahgzkf8v1qydacfgcazsacvfwym2c") (f (quote (("trace-print" "trace") ("trace") ("nightly"))))))

(define-public crate-dusk-plonk-0.3.2 (c (n "dusk-plonk") (v "0.3.2") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "dusk-bls12_381") (r "^0.1.5") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.3.10") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "merlin") (r "^2.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (k 0)) (d (n "rayon") (r "^1.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1mb6jhn8whic5vl39bd5yfqb8s9ydli8k4hplq5bhlvbi2qgibzq") (f (quote (("trace-print" "trace") ("trace") ("nightly"))))))

(define-public crate-dusk-plonk-0.3.3 (c (n "dusk-plonk") (v "0.3.3") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "dusk-bls12_381") (r "^0.2.0") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "merlin") (r "^2.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (k 0)) (d (n "rayon") (r "^1.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0afa7jbdbnmrbi9lvg3xzk7hmw91qbk3y08rpmkbgwxp4b6h9bwg") (f (quote (("trace-print" "trace") ("trace") ("nightly") ("canon" "dusk-bls12_381/canon" "dusk-jubjub/canon"))))))

(define-public crate-dusk-plonk-0.3.4 (c (n "dusk-plonk") (v "0.3.4") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "dusk-bls12_381") (r "^0.3.0") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.5.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "merlin") (r "^2.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (k 0)) (d (n "rayon") (r "^1.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "00x9hpnh681kcz6j82wb67jgs06rqw4laph1gzczg9jy61kxflq8") (f (quote (("trace-print" "trace") ("trace") ("nightly") ("canon" "dusk-bls12_381/canon" "dusk-jubjub/canon"))))))

(define-public crate-dusk-plonk-0.3.5 (c (n "dusk-plonk") (v "0.3.5") (d (list (d (n "anyhow") (r ">=1.0.32, <2.0.0") (d #t) (k 0)) (d (n "canonical") (r ">=0.4.0, <0.5.0") (o #t) (d #t) (k 0)) (d (n "dusk-bls12_381") (r ">=0.3.0, <0.4.0") (d #t) (k 0)) (d (n "dusk-jubjub") (r ">=0.5.0, <0.6.0") (d #t) (k 0)) (d (n "itertools") (r ">=0.9.0, <0.10.0") (d #t) (k 0)) (d (n "merlin") (r ">=2.0.0, <3.0.0") (d #t) (k 0)) (d (n "rand") (r ">=0.7.2, <0.8.0") (d #t) (k 0)) (d (n "rand") (r ">=0.7.0, <0.8.0") (d #t) (k 2)) (d (n "rand_chacha") (r ">=0.2.0, <0.3.0") (d #t) (k 0)) (d (n "rand_core") (r ">=0.5.0, <0.6.0") (k 0)) (d (n "rayon") (r ">=1.3.0, <2.0.0") (d #t) (k 0)) (d (n "serde") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "thiserror") (r ">=1.0.0, <2.0.0") (d #t) (k 0)))) (h "07bhdflzwsi1pq6wqa6jyxzrr9mmq2iwmpvn855czqkbam8rsbim") (f (quote (("trace-print" "trace") ("trace") ("nightly") ("canon" "dusk-bls12_381/canon" "dusk-jubjub/canon" "canonical"))))))

(define-public crate-dusk-plonk-0.3.6 (c (n "dusk-plonk") (v "0.3.6") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "canonical") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "dusk-bls12_381") (r "^0.3.0") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.5.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "merlin") (r "^2.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (k 0)) (d (n "rayon") (r "^1.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "04wa8j8ndyxsahr7izzqp1lzsflhkpz6nrwgnp123dv96067dggp") (f (quote (("trace-print" "trace") ("trace") ("nightly") ("canon" "dusk-bls12_381/canon" "dusk-jubjub/canon" "canonical"))))))

(define-public crate-dusk-plonk-0.4.0 (c (n "dusk-plonk") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "canonical") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "dusk-bls12_381") (r "^0.5") (d #t) (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.7") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "merlin") (r "^2.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (k 0)) (d (n "rayon") (r "^1.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1axw50s63znaad4w273zshzzhlpsbj7iqmw3hyw5xvsa4gqhxs6y") (f (quote (("trace-print" "trace") ("trace") ("nightly") ("canon" "dusk-bls12_381/canon" "dusk-jubjub/canon" "canonical"))))))

(define-public crate-dusk-plonk-0.5.0 (c (n "dusk-plonk") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "canonical") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "dusk-bls12_381") (r "^0.6") (d #t) (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.8") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "merlin") (r "^2.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (k 0)) (d (n "rayon") (r "^1.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0mbyqvna8z3pfwq88r2082qvalrhvd5n7mh2wl3jlxdmmwl2vv6q") (f (quote (("trace-print" "trace") ("trace") ("nightly") ("canon" "dusk-bls12_381/canon" "dusk-jubjub/canon" "canonical"))))))

(define-public crate-dusk-plonk-0.5.1 (c (n "dusk-plonk") (v "0.5.1") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "canonical") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "dusk-bls12_381") (r "^0.6") (d #t) (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.8") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "merlin") (r "^2.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (k 0)) (d (n "rayon") (r "^1.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "14k75kxj2lb3rmfr56bmnddsr026makcxamh0rpws9431512i8rc") (f (quote (("trace-print" "trace") ("trace") ("nightly") ("canon" "dusk-bls12_381/canon" "dusk-jubjub/canon" "canonical"))))))

(define-public crate-dusk-plonk-0.6.0 (c (n "dusk-plonk") (v "0.6.0") (d (list (d (n "canonical") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "canonical_derive") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "dusk-bls12_381") (r "^0.6") (d #t) (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.8") (d #t) (k 0)) (d (n "hashbrown") (r "^0.9") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "merlin") (r "^2.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (k 0)) (d (n "rayon") (r "^1.3.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "0hcbi9vbilf3qshmin9prhzdb9fx18wga0bbd2fxzpgp6nw7baiy") (f (quote (("trace-print" "trace") ("trace") ("std") ("nightly") ("default" "std") ("canon" "dusk-bls12_381/canon" "dusk-jubjub/canon" "canonical" "canonical_derive"))))))

(define-public crate-dusk-plonk-0.6.1 (c (n "dusk-plonk") (v "0.6.1") (d (list (d (n "canonical") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "canonical_derive") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "dusk-bls12_381") (r "^0.6") (d #t) (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.8") (d #t) (k 0)) (d (n "hashbrown") (r "^0.9") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "merlin") (r "^2.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (k 0)) (d (n "rayon") (r "^1.3.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "1rgyndcjpdi7wdx9igsl5q2zkkfxnkjfccr41v0r3x9725zlwyb9") (f (quote (("trace-print" "trace") ("trace") ("std") ("nightly") ("default" "std") ("canon" "dusk-bls12_381/canon" "dusk-jubjub/canon" "canonical" "canonical_derive"))))))

(define-public crate-dusk-plonk-0.7.0-pre.0 (c (n "dusk-plonk") (v "0.7.0-pre.0") (d (list (d (n "canonical") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "canonical_derive") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "dusk-bls12_381") (r "^0.6") (d #t) (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.8") (d #t) (k 0)) (d (n "hashbrown") (r "^0.9") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "merlin") (r "^2.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (k 0)) (d (n "rayon") (r "^1.3.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "146xlc7jln1xm6zyfmjb4xf2sazz848y05d3amb7ivyan0gjz47c") (f (quote (("trace-print" "trace") ("trace") ("std") ("nightly") ("default" "std") ("canon" "dusk-bls12_381/canon" "dusk-jubjub/canon" "canonical" "canonical_derive"))))))

(define-public crate-dusk-plonk-0.7.0 (c (n "dusk-plonk") (v "0.7.0") (d (list (d (n "canonical") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "canonical_derive") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "dusk-bls12_381") (r "^0.6") (d #t) (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.8") (d #t) (k 0)) (d (n "hashbrown") (r "^0.9") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "merlin") (r "^2.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (k 0)) (d (n "rayon") (r "^1.3.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "0jj8caym0d4zkjqwk94r804gajaz89kgzqqad9jlrcnjhm859l23") (f (quote (("trace-print" "trace") ("trace") ("std") ("nightly") ("default" "std") ("canon" "dusk-bls12_381/canon" "dusk-jubjub/canon" "canonical" "canonical_derive"))))))

(define-public crate-dusk-plonk-0.8.0-rc.0 (c (n "dusk-plonk") (v "0.8.0-rc.0") (d (list (d (n "canonical") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "canonical_derive") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.8.0-rc.0") (f (quote ("groups" "pairings" "endo"))) (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.10.0-rc.0") (k 0)) (d (n "hashbrown") (r "^0.9") (f (quote ("ahash"))) (k 0)) (d (n "itertools") (r "^0.9") (k 0)) (d (n "merlin") (r "^3.0") (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rayon") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "17vxi846qvw2v1wd1jbng8qhf0p6jpdll8badik9cbs87z81fnhq") (f (quote (("trace-print" "trace") ("trace") ("std" "rand_core/std" "dusk-bls12_381/default" "dusk-jubjub/default" "itertools/default" "hashbrown/default" "alloc" "rayon") ("nightly") ("default" "std") ("canon" "dusk-bls12_381/canon" "dusk-jubjub/canon" "canonical" "canonical_derive") ("alloc" "dusk-bls12_381/alloc")))) (y #t)))

(define-public crate-dusk-plonk-0.8.0-rc.1 (c (n "dusk-plonk") (v "0.8.0-rc.1") (d (list (d (n "canonical") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "canonical_derive") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "dusk-bls12_381") (r "^0.8.0-rc.0") (f (quote ("groups" "pairings" "endo"))) (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.10.0-rc.0") (k 0)) (d (n "hashbrown") (r "^0.9") (f (quote ("ahash"))) (k 0)) (d (n "itertools") (r "^0.9") (k 0)) (d (n "merlin") (r "^3.0") (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rayon") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "157sn0989xrffbdw8sfyn0w0zfrwr1li3ddi7sg4cf8a84vagh3d") (f (quote (("trace-print" "trace") ("trace") ("std" "rand_core/std" "dusk-bls12_381/default" "dusk-jubjub/default" "itertools/default" "hashbrown/default" "alloc" "rayon") ("nightly") ("default" "std") ("canon" "dusk-bls12_381/canon" "dusk-jubjub/canon" "canonical" "canonical_derive") ("alloc" "dusk-bls12_381/alloc"))))))

(define-public crate-dusk-plonk-0.8.0 (c (n "dusk-plonk") (v "0.8.0") (d (list (d (n "canonical") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "canonical_derive") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "dusk-bls12_381") (r "^0.8") (f (quote ("groups" "pairings" "endo"))) (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.10") (k 0)) (d (n "hashbrown") (r "^0.9") (f (quote ("ahash"))) (k 0)) (d (n "itertools") (r "^0.9") (k 0)) (d (n "merlin") (r "^3.0") (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rayon") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "11lv4gjw1vr9wc5ri0rc5ksnpcx3lz35andbqgp9ca3hvy1zacmr") (f (quote (("trace-print" "trace") ("trace") ("std" "rand_core/std" "dusk-bls12_381/default" "dusk-jubjub/default" "itertools/default" "hashbrown/default" "alloc" "rayon") ("nightly") ("default" "std") ("canon" "dusk-bls12_381/canon" "dusk-jubjub/canon" "canonical" "canonical_derive") ("alloc" "dusk-bls12_381/alloc"))))))

(define-public crate-dusk-plonk-0.8.1 (c (n "dusk-plonk") (v "0.8.1") (d (list (d (n "canonical") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "canonical_derive") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "dusk-bls12_381") (r "^0.8") (f (quote ("groups" "pairings" "endo"))) (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.10") (k 0)) (d (n "hashbrown") (r "^0.9") (f (quote ("ahash"))) (k 0)) (d (n "itertools") (r "^0.9") (k 0)) (d (n "merlin") (r "^3.0") (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rayon") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "02zckhrwmya3y69c30izhzy81mzhpfi0ar4qllnw7dxahhxwh3zj") (f (quote (("trace-print" "trace") ("trace") ("std" "rand_core/std" "dusk-bls12_381/default" "dusk-jubjub/default" "itertools/default" "hashbrown/default" "alloc" "rayon") ("default" "std") ("canon" "dusk-bls12_381/canon" "dusk-jubjub/canon" "canonical" "canonical_derive") ("alloc" "dusk-bls12_381/alloc"))))))

(define-public crate-dusk-plonk-0.8.2 (c (n "dusk-plonk") (v "0.8.2") (d (list (d (n "canonical") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "canonical_derive") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "dusk-bls12_381") (r "^0.8") (f (quote ("groups" "pairings" "endo"))) (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.10") (k 0)) (d (n "hashbrown") (r "^0.9") (f (quote ("ahash"))) (k 0)) (d (n "itertools") (r "^0.9") (k 0)) (d (n "merlin") (r "^3.0") (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rayon") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "08rc62589a5hr2slim4bvp7gac5hyzkdrz6js3lwzrxwjbljax34") (f (quote (("trace-print" "trace") ("trace") ("std" "rand_core/std" "dusk-bls12_381/default" "dusk-jubjub/default" "itertools/default" "hashbrown/default" "alloc" "rayon") ("default" "std") ("canon" "dusk-bls12_381/canon" "dusk-jubjub/canon" "canonical" "canonical_derive") ("alloc" "dusk-bls12_381/alloc"))))))

(define-public crate-dusk-plonk-0.9.0-rc.0 (c (n "dusk-plonk") (v "0.9.0-rc.0") (d (list (d (n "canonical") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "canonical_derive") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.8") (f (quote ("groups" "pairings" "endo"))) (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.10") (k 0)) (d (n "hashbrown") (r "^0.9") (f (quote ("ahash"))) (k 0)) (d (n "itertools") (r "^0.9") (k 0)) (d (n "merlin") (r "^3.0") (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rayon") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "01r9bm97qv3g9n0acm96mnjd89pmkly22fwp4wf00rgj9mj9mk25") (f (quote (("trace-print" "trace") ("trace") ("std" "rand_core/std" "dusk-bls12_381/default" "dusk-jubjub/default" "itertools/default" "hashbrown/default" "alloc" "rayon") ("default" "std") ("canon" "dusk-bls12_381/canon" "dusk-jubjub/canon" "canonical" "canonical_derive") ("alloc" "dusk-bls12_381/alloc"))))))

(define-public crate-dusk-plonk-0.9.0 (c (n "dusk-plonk") (v "0.9.0") (d (list (d (n "canonical") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "canonical_derive") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.8") (f (quote ("groups" "pairings" "endo"))) (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.10") (k 0)) (d (n "hashbrown") (r "^0.9") (f (quote ("ahash"))) (k 0)) (d (n "itertools") (r "^0.9") (k 0)) (d (n "merlin") (r "^3.0") (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rayon") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "0zjqlb2a551ds1pfh9ffd308s0vwmxn9g9nzbw1wrir12xggjmhz") (f (quote (("trace-print" "trace") ("trace") ("std" "rand_core/std" "dusk-bls12_381/default" "dusk-jubjub/default" "itertools/default" "hashbrown/default" "alloc" "rayon") ("default" "std") ("canon" "dusk-bls12_381/canon" "dusk-jubjub/canon" "canonical" "canonical_derive") ("alloc" "dusk-bls12_381/alloc"))))))

(define-public crate-dusk-plonk-0.9.1 (c (n "dusk-plonk") (v "0.9.1") (d (list (d (n "canonical") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "canonical_derive") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.8") (f (quote ("groups" "pairings" "endo"))) (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.10") (k 0)) (d (n "hashbrown") (r "^0.9") (f (quote ("ahash"))) (k 0)) (d (n "itertools") (r "^0.9") (k 0)) (d (n "merlin") (r "^3.0") (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rayon") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "0103s9vg0jflr8hs5l2ijjyimz1ngjbqharfrqvmkys0fm41zdlw") (f (quote (("trace-print" "trace") ("trace") ("std" "rand_core/std" "dusk-bls12_381/default" "dusk-jubjub/default" "itertools/default" "hashbrown/default" "alloc" "rayon") ("default" "std") ("canon" "dusk-bls12_381/canon" "dusk-jubjub/canon" "canonical" "canonical_derive") ("alloc" "dusk-bls12_381/alloc"))))))

(define-public crate-dusk-plonk-0.9.2 (c (n "dusk-plonk") (v "0.9.2") (d (list (d (n "canonical") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "canonical_derive") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.8") (f (quote ("groups" "pairings" "endo"))) (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.10") (k 0)) (d (n "hashbrown") (r "^0.9") (f (quote ("ahash"))) (k 0)) (d (n "itertools") (r "^0.9") (k 0)) (d (n "merlin") (r "^3.0") (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rayon") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "0ids3mi5k8pzp2j2yy7djx72fhvlfrlm8ld4sla7mga6n3ks3giw") (f (quote (("trace-print" "trace") ("trace") ("std" "rand_core/std" "dusk-bls12_381/default" "dusk-jubjub/default" "itertools/default" "hashbrown/default" "alloc" "rayon") ("default" "std") ("canon" "dusk-bls12_381/canon" "dusk-jubjub/canon" "canonical" "canonical_derive") ("alloc" "dusk-bls12_381/alloc"))))))

(define-public crate-dusk-plonk-0.10.0 (c (n "dusk-plonk") (v "0.10.0") (d (list (d (n "canonical") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "canonical_derive") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.9") (f (quote ("groups" "pairings" "endo"))) (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.11") (k 0)) (d (n "hashbrown") (r "^0.9") (f (quote ("ahash"))) (k 0)) (d (n "itertools") (r "^0.9") (k 0)) (d (n "merlin") (r "^3.0") (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rayon") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "105kxvzi0macnvfm395v9n77q3bgxzcvdiqmnr8zb9fz5v16s37q") (f (quote (("trace-print" "trace") ("trace") ("std" "rand_core/std" "dusk-bls12_381/default" "dusk-jubjub/default" "itertools/default" "hashbrown/default" "alloc" "rayon") ("default" "std") ("canon" "dusk-bls12_381/canon" "dusk-jubjub/canon" "canonical" "canonical_derive") ("alloc" "dusk-bls12_381/alloc"))))))

(define-public crate-dusk-plonk-0.11.0 (c (n "dusk-plonk") (v "0.11.0") (d (list (d (n "canonical") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "canonical_derive") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.9") (f (quote ("groups" "pairings" "endo"))) (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.11") (k 0)) (d (n "hashbrown") (r "^0.9") (f (quote ("ahash"))) (k 0)) (d (n "itertools") (r "^0.9") (k 0)) (d (n "merlin") (r "^3.0") (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rayon") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "11iq5mj8hs008qjwkl9dam5v2csw432mfq3r9xykac06klp45lnz") (f (quote (("trace-print" "trace") ("trace") ("std" "rand_core/std" "dusk-bls12_381/default" "dusk-jubjub/default" "itertools/default" "hashbrown/default" "alloc" "rayon") ("default" "std") ("canon" "dusk-bls12_381/canon" "dusk-jubjub/canon" "canonical" "canonical_derive") ("alloc" "dusk-bls12_381/alloc"))))))

(define-public crate-dusk-plonk-0.12.0-rc.0 (c (n "dusk-plonk") (v "0.12.0-rc.0") (d (list (d (n "canonical") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "canonical_derive") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.10") (f (quote ("groups" "pairings" "endo"))) (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.12.0-rc.0") (k 0)) (d (n "hashbrown") (r "^0.9") (f (quote ("ahash"))) (k 0)) (d (n "itertools") (r "^0.9") (k 0)) (d (n "merlin") (r "^3.0") (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rayon") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "1k3ssbfwrnj49040dc6pa2izs6ca1pmcbjjjrkwgxd8vw0d0ah8z") (f (quote (("trace-print" "trace") ("trace") ("std" "rand_core/std" "dusk-bls12_381/default" "dusk-jubjub/default" "itertools/default" "hashbrown/default" "alloc" "rayon") ("rkyv-impl" "dusk-bls12_381/rkyv" "dusk-jubjub/rkyv-impl" "rkyv") ("default" "std") ("canon" "dusk-bls12_381/canon" "dusk-jubjub/canon" "canonical" "canonical_derive") ("alloc" "dusk-bls12_381/alloc"))))))

(define-public crate-dusk-plonk-0.12.0-rc.1 (c (n "dusk-plonk") (v "0.12.0-rc.1") (d (list (d (n "bytecheck") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "canonical") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "canonical_derive") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.11.0-rc") (f (quote ("groups" "pairings" "endo"))) (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.12.0-rc") (k 0)) (d (n "hashbrown") (r "^0.9") (f (quote ("ahash"))) (k 0)) (d (n "itertools") (r "^0.9") (k 0)) (d (n "merlin") (r "^3.0") (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rayon") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "1ibl3xvzyr5jgpc5j9bqfp18dfrcf2p8q8ffy6a1lvsklm9dyfvn") (f (quote (("trace-print" "trace") ("trace") ("std" "rand_core/std" "dusk-bls12_381/default" "dusk-jubjub/default" "itertools/default" "hashbrown/default" "alloc" "rayon") ("rkyv-impl" "dusk-bls12_381/rkyv-impl" "dusk-jubjub/rkyv-impl" "rkyv" "bytecheck") ("default" "std") ("canon" "dusk-bls12_381/canon" "dusk-jubjub/canon" "canonical" "canonical_derive") ("alloc" "dusk-bls12_381/alloc"))))))

(define-public crate-dusk-plonk-0.12.0 (c (n "dusk-plonk") (v "0.12.0") (d (list (d (n "bytecheck") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "canonical") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "canonical_derive") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.11") (f (quote ("groups" "pairings" "endo"))) (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.12") (k 0)) (d (n "hashbrown") (r "^0.9") (f (quote ("ahash"))) (k 0)) (d (n "itertools") (r "^0.9") (k 0)) (d (n "merlin") (r "^3.0") (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rayon") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "16g8w1yvdn828rakdqqn6gd5f7q0qkxh4wwlk17376hqpp6c3agb") (f (quote (("trace-print" "trace") ("trace") ("std" "rand_core/std" "dusk-bls12_381/default" "dusk-jubjub/default" "itertools/default" "hashbrown/default" "alloc" "rayon") ("rkyv-impl" "dusk-bls12_381/rkyv-impl" "dusk-jubjub/rkyv-impl" "rkyv" "bytecheck") ("default" "std") ("canon" "dusk-bls12_381/canon" "dusk-jubjub/canon" "canonical" "canonical_derive") ("alloc" "dusk-bls12_381/alloc"))))))

(define-public crate-dusk-plonk-0.13.0 (c (n "dusk-plonk") (v "0.13.0") (d (list (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "canonical") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "canonical_derive") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.11") (f (quote ("groups" "pairings" "endo"))) (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-cdf") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.12") (k 0)) (d (n "hashbrown") (r "^0.9") (f (quote ("ahash"))) (k 0)) (d (n "itertools") (r "^0.9") (k 0)) (d (n "merlin") (r "^3.0") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rayon") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7") (o #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "0acmkxzw0qgwxq7b23w408wqali7xhlg738ijgsvy940bvvdvc0b") (f (quote (("std" "rand_core/std" "dusk-bls12_381/default" "dusk-jubjub/default" "itertools/default" "hashbrown/default" "alloc" "rayon") ("rkyv-impl" "dusk-bls12_381/rkyv-impl" "dusk-jubjub/rkyv-impl" "rkyv" "bytecheck") ("default" "std") ("debug" "dusk-cdf" "backtrace") ("canon" "dusk-bls12_381/canon" "dusk-jubjub/canon" "canonical" "canonical_derive") ("alloc" "dusk-bls12_381/alloc"))))))

(define-public crate-dusk-plonk-0.13.1 (c (n "dusk-plonk") (v "0.13.1") (d (list (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "canonical") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "canonical_derive") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.11") (f (quote ("groups" "pairings" "endo"))) (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-cdf") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.12") (k 0)) (d (n "hashbrown") (r "^0.9") (f (quote ("ahash"))) (k 0)) (d (n "itertools") (r "^0.9") (k 0)) (d (n "merlin") (r "^3.0") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rayon") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7") (o #t) (k 0)) (d (n "rkyv") (r "^0.7") (f (quote ("size_32"))) (k 2)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "0zg977j2zzp5vgysq632hamrm4zxc4ba42gizd0kidbxnb6jzqyj") (f (quote (("std" "rand_core/std" "dusk-bls12_381/default" "dusk-jubjub/default" "itertools/default" "hashbrown/default" "alloc" "rayon") ("rkyv-impl" "dusk-bls12_381/rkyv-impl" "dusk-jubjub/rkyv-impl" "rkyv" "bytecheck") ("default" "std") ("debug" "dusk-cdf" "backtrace") ("canon" "dusk-bls12_381/canon" "dusk-jubjub/canon" "canonical" "canonical_derive") ("alloc" "dusk-bls12_381/alloc"))))))

(define-public crate-dusk-plonk-0.14.0 (c (n "dusk-plonk") (v "0.14.0") (d (list (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "canonical") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "canonical_derive") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.11") (f (quote ("groups" "pairings" "endo"))) (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-cdf") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.12") (k 0)) (d (n "hashbrown") (r "^0.9") (f (quote ("ahash"))) (k 0)) (d (n "itertools") (r "^0.9") (k 0)) (d (n "merlin") (r "^3.0") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rayon") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7") (o #t) (k 0)) (d (n "rkyv") (r "^0.7") (f (quote ("size_32"))) (k 2)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "0gd8jnbdb96wb38ifdkp7a42gpp1kyjjj2nr3pijzmlcc1jm4fhx") (f (quote (("std" "rand_core/std" "dusk-bls12_381/default" "dusk-jubjub/default" "itertools/default" "hashbrown/default" "alloc" "rayon") ("rkyv-impl" "dusk-bls12_381/rkyv-impl" "dusk-jubjub/rkyv-impl" "rkyv" "bytecheck") ("default" "std") ("debug" "dusk-cdf" "backtrace") ("canon" "dusk-bls12_381/canon" "dusk-jubjub/canon" "canonical" "canonical_derive") ("alloc" "dusk-bls12_381/alloc"))))))

(define-public crate-dusk-plonk-0.14.1 (c (n "dusk-plonk") (v "0.14.1") (d (list (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "canonical") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "canonical_derive") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.11") (f (quote ("groups" "pairings" "endo"))) (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-cdf") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.12") (k 0)) (d (n "hashbrown") (r "^0.9") (f (quote ("ahash"))) (k 0)) (d (n "itertools") (r "^0.9") (k 0)) (d (n "merlin") (r "^3.0") (k 0)) (d (n "miniz_oxide") (r "^0.7") (f (quote ("with-alloc"))) (o #t) (k 0)) (d (n "msgpacker") (r "^0.4") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rayon") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7") (o #t) (k 0)) (d (n "rkyv") (r "^0.7") (f (quote ("size_32"))) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "10f60cbpddzinbp0daqi6maq813fi5mbxzgj9lz8y551vwxhgpd8") (f (quote (("std" "rand_core/std" "dusk-bls12_381/default" "dusk-jubjub/default" "itertools/default" "hashbrown/default" "msgpacker/std" "miniz_oxide/std" "alloc" "rayon") ("rkyv-impl" "dusk-bls12_381/rkyv-impl" "dusk-jubjub/rkyv-impl" "rkyv" "bytecheck") ("default" "std") ("debug" "dusk-cdf" "backtrace") ("canon" "dusk-bls12_381/canon" "dusk-jubjub/canon" "canonical" "canonical_derive") ("alloc" "dusk-bls12_381/alloc" "msgpacker" "miniz_oxide" "sha2"))))))

(define-public crate-dusk-plonk-0.15.0 (c (n "dusk-plonk") (v "0.15.0") (d (list (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "canonical") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "canonical_derive") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.11") (f (quote ("groups" "pairings" "endo"))) (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-cdf") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.12") (k 0)) (d (n "hashbrown") (r "^0.9") (f (quote ("ahash"))) (k 0)) (d (n "itertools") (r "^0.9") (k 0)) (d (n "merlin") (r "^3.0") (k 0)) (d (n "miniz_oxide") (r "^0.7") (f (quote ("with-alloc"))) (o #t) (k 0)) (d (n "msgpacker") (r "^0.4") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rayon") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7") (o #t) (k 0)) (d (n "rkyv") (r "^0.7") (f (quote ("size_32"))) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "1fqifa8snycxix457r3ay833221lxzl98mcqjll4sana64laijxl") (f (quote (("std" "rand_core/std" "dusk-bls12_381/default" "dusk-jubjub/default" "itertools/default" "hashbrown/default" "msgpacker/std" "miniz_oxide/std" "alloc" "rayon") ("rkyv-impl" "dusk-bls12_381/rkyv-impl" "dusk-jubjub/rkyv-impl" "rkyv" "bytecheck") ("default" "std") ("debug" "dusk-cdf" "backtrace") ("canon" "dusk-bls12_381/canon" "dusk-jubjub/canon" "canonical" "canonical_derive") ("alloc" "dusk-bls12_381/alloc" "msgpacker" "miniz_oxide" "sha2"))))))

(define-public crate-dusk-plonk-0.16.0 (c (n "dusk-plonk") (v "0.16.0") (d (list (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.12") (f (quote ("groups" "pairings"))) (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-cdf") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.13") (k 0)) (d (n "ff") (r "^0.13") (k 0)) (d (n "hashbrown") (r "^0.9") (f (quote ("ahash"))) (k 0)) (d (n "itertools") (r "^0.9") (k 0)) (d (n "merlin") (r "^3.0") (k 0)) (d (n "miniz_oxide") (r "^0.7") (f (quote ("with-alloc"))) (o #t) (k 0)) (d (n "msgpacker") (r "^0.4") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rayon") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7") (o #t) (k 0)) (d (n "rkyv") (r "^0.7") (f (quote ("size_32"))) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "1qyiv1v0c812ldrldn8kg03ck36ibnsz7qdfmhpnb34i6c0dxb40") (f (quote (("std" "rand_core/std" "dusk-bls12_381/default" "dusk-jubjub/default" "itertools/default" "hashbrown/default" "msgpacker/std" "miniz_oxide/std" "alloc" "rayon") ("rkyv-impl" "dusk-bls12_381/rkyv-impl" "dusk-jubjub/rkyv-impl" "rkyv" "bytecheck") ("default" "std") ("debug" "dusk-cdf" "backtrace") ("alloc" "dusk-bls12_381/alloc" "msgpacker" "miniz_oxide" "sha2"))))))

(define-public crate-dusk-plonk-0.17.0 (c (n "dusk-plonk") (v "0.17.0") (d (list (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.12") (f (quote ("groups" "pairings"))) (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-cdf") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.13") (k 0)) (d (n "ff") (r "^0.13") (k 0)) (d (n "hashbrown") (r "^0.9") (f (quote ("ahash"))) (k 0)) (d (n "itertools") (r "^0.9") (k 0)) (d (n "merlin") (r "^3.0") (k 0)) (d (n "miniz_oxide") (r "^0.7") (f (quote ("with-alloc"))) (o #t) (k 0)) (d (n "msgpacker") (r "^0.4") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rayon") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7") (o #t) (k 0)) (d (n "rkyv") (r "^0.7") (f (quote ("size_32"))) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "109a0nzbnifjsrvnfb0mhxyw2fw5868fpx4b9j2g7shxb13z3j5g") (f (quote (("std" "rand_core/std" "dusk-bls12_381/default" "dusk-jubjub/default" "itertools/default" "hashbrown/default" "msgpacker/std" "miniz_oxide/std" "alloc" "rayon") ("rkyv-impl" "dusk-bls12_381/rkyv-impl" "dusk-jubjub/rkyv-impl" "rkyv" "bytecheck") ("default" "std") ("debug" "dusk-cdf" "backtrace") ("alloc" "dusk-bls12_381/alloc" "msgpacker" "miniz_oxide" "sha2"))))))

(define-public crate-dusk-plonk-0.18.0 (c (n "dusk-plonk") (v "0.18.0") (d (list (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.13") (f (quote ("groups" "pairings"))) (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-cdf") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.14") (k 0)) (d (n "ff") (r "^0.13") (k 0)) (d (n "hashbrown") (r "^0.9") (f (quote ("ahash"))) (k 0)) (d (n "itertools") (r "^0.9") (k 0)) (d (n "merlin") (r "^3.0") (k 0)) (d (n "miniz_oxide") (r "^0.7") (f (quote ("with-alloc"))) (o #t) (k 0)) (d (n "msgpacker") (r "^0.4") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rayon") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7") (o #t) (k 0)) (d (n "rkyv") (r "^0.7") (f (quote ("size_32"))) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "02q78v7mknv50asixhmwx011g938ifxpzvz2hbk113hiikpy4567") (f (quote (("std" "rand_core/std" "dusk-bls12_381/default" "dusk-jubjub/default" "itertools/default" "hashbrown/default" "msgpacker/std" "miniz_oxide/std" "alloc" "rayon") ("rkyv-impl" "dusk-bls12_381/rkyv-impl" "dusk-jubjub/rkyv-impl" "rkyv" "bytecheck") ("default" "std") ("debug" "dusk-cdf" "backtrace") ("alloc" "dusk-bls12_381/alloc" "msgpacker" "miniz_oxide" "sha2"))))))

(define-public crate-dusk-plonk-0.19.0 (c (n "dusk-plonk") (v "0.19.0") (d (list (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.13") (f (quote ("groups" "pairings"))) (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-cdf") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.14") (k 0)) (d (n "ff") (r "^0.13") (k 0)) (d (n "hashbrown") (r "^0.9") (f (quote ("ahash"))) (k 0)) (d (n "itertools") (r "^0.9") (k 0)) (d (n "merlin") (r "^3.0") (k 0)) (d (n "miniz_oxide") (r "^0.7") (f (quote ("with-alloc"))) (o #t) (k 0)) (d (n "msgpacker") (r "^0.4") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rayon") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7") (o #t) (k 0)) (d (n "rkyv") (r "^0.7") (f (quote ("size_32"))) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "1sn51s71wyrxn41mgyp0vq1xfjpmg83awz0s7s5rcxa3abxvibj3") (f (quote (("std" "rand_core/std" "dusk-bls12_381/default" "dusk-jubjub/default" "itertools/default" "hashbrown/default" "msgpacker/std" "miniz_oxide/std" "alloc" "rayon") ("rkyv-impl" "dusk-bls12_381/rkyv-impl" "dusk-jubjub/rkyv-impl" "rkyv" "bytecheck") ("default" "std") ("debug" "dusk-cdf" "backtrace") ("alloc" "dusk-bls12_381/alloc" "msgpacker" "miniz_oxide" "sha2"))))))

(define-public crate-dusk-plonk-0.19.1 (c (n "dusk-plonk") (v "0.19.1") (d (list (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.13") (f (quote ("groups" "pairings"))) (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-cdf") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.14") (k 0)) (d (n "ff") (r "^0.13") (k 0)) (d (n "hashbrown") (r "^0.9") (f (quote ("ahash"))) (k 0)) (d (n "itertools") (r "^0.9") (k 0)) (d (n "merlin") (r "^3.0") (k 0)) (d (n "miniz_oxide") (r "^0.7") (f (quote ("with-alloc"))) (o #t) (k 0)) (d (n "msgpacker") (r "^0.4") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rayon") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7") (o #t) (k 0)) (d (n "rkyv") (r "^0.7") (f (quote ("size_32"))) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "0v7mslpjy82h2lvpp57j8d3anc2fs7wwkf8wslyiwy7jw7f0rsgb") (f (quote (("std" "rand_core/std" "dusk-bls12_381/default" "dusk-jubjub/default" "itertools/default" "hashbrown/default" "msgpacker/std" "miniz_oxide/std" "alloc" "rayon") ("rkyv-impl" "dusk-bls12_381/rkyv-impl" "dusk-jubjub/rkyv-impl" "rkyv" "bytecheck") ("default" "std") ("debug" "dusk-cdf" "backtrace") ("alloc" "dusk-bls12_381/alloc" "msgpacker" "miniz_oxide" "sha2"))))))

(define-public crate-dusk-plonk-0.19.2-rc.0 (c (n "dusk-plonk") (v "0.19.2-rc.0") (d (list (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.13") (f (quote ("groups" "pairings"))) (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-cdf") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.14") (k 0)) (d (n "ff") (r "^0.13") (k 0)) (d (n "hashbrown") (r "^0.9") (f (quote ("ahash"))) (k 0)) (d (n "itertools") (r "^0.9") (k 0)) (d (n "merlin") (r "^3.0") (k 0)) (d (n "miniz_oxide") (r "^0.7") (f (quote ("with-alloc"))) (o #t) (k 0)) (d (n "msgpacker") (r "^0.4") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rayon") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7") (o #t) (k 0)) (d (n "rkyv") (r "^0.7") (f (quote ("size_32"))) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "zeroize") (r "^1") (o #t) (d #t) (k 0)))) (h "137vqa0jbjzs039060ijdb2pggls6mg8d5qj3c3knf2iikjxpk1k") (f (quote (("std" "rand_core/std" "dusk-bls12_381/default" "dusk-jubjub/default" "itertools/default" "hashbrown/default" "msgpacker/std" "miniz_oxide/std" "alloc" "rayon") ("rkyv-impl" "dusk-bls12_381/rkyv-impl" "dusk-jubjub/rkyv-impl" "rkyv" "bytecheck") ("default" "std") ("debug" "dusk-cdf" "backtrace") ("alloc" "dusk-bls12_381/alloc" "msgpacker" "miniz_oxide" "sha2"))))))

(define-public crate-dusk-plonk-0.19.2 (c (n "dusk-plonk") (v "0.19.2") (d (list (d (n "backtrace") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.13") (f (quote ("groups" "pairings"))) (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-cdf") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.14") (k 0)) (d (n "ff") (r "^0.13") (k 0)) (d (n "hashbrown") (r "^0.9") (f (quote ("ahash"))) (k 0)) (d (n "itertools") (r "^0.9") (k 0)) (d (n "merlin") (r "^3.0") (k 0)) (d (n "miniz_oxide") (r "^0.7") (f (quote ("with-alloc"))) (o #t) (k 0)) (d (n "msgpacker") (r "^0.4") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rayon") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7") (o #t) (k 0)) (d (n "rkyv") (r "^0.7") (f (quote ("size_32"))) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "zeroize") (r "^1") (o #t) (d #t) (k 0)))) (h "1g8c3rgxi76kaf9f3kd8b6whlih953n3ksck62jqih1zsc7xvcw6") (f (quote (("std" "rand_core/std" "dusk-bls12_381/default" "dusk-jubjub/default" "itertools/default" "hashbrown/default" "msgpacker/std" "miniz_oxide/std" "alloc" "rayon") ("rkyv-impl" "dusk-bls12_381/rkyv-impl" "dusk-jubjub/rkyv-impl" "rkyv" "bytecheck") ("default" "std") ("debug" "dusk-cdf" "backtrace") ("alloc" "dusk-bls12_381/alloc" "msgpacker" "miniz_oxide" "sha2"))))))

