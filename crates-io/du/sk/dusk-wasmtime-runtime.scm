(define-module (crates-io du sk dusk-wasmtime-runtime) #:use-module (crates-io))

(define-public crate-dusk-wasmtime-runtime-21.0.0-alpha (c (n "dusk-wasmtime-runtime") (v "21.0.0-alpha") (d (list (d (n "anyhow") (r "^1.0.22") (d #t) (k 0)) (d (n "cc") (r "^1.0") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.31") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.112") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "mach2") (r "^0.4.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "memfd") (r "^0.6.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "memoffset") (r "^0.9.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.3") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "psm") (r "^0.1.11") (d #t) (t "cfg(target_arch = \"s390x\")") (k 0)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rustix") (r "^0.38.31") (f (quote ("mm"))) (d #t) (t "cfg(unix)") (k 0)) (d (n "sptr") (r "^0.3.2") (d #t) (k 0)) (d (n "wasm-encoder") (r "^0.202.0") (o #t) (d #t) (k 0)) (d (n "wasmtime-asm-macros") (r "=20.0.0") (d #t) (k 0)) (d (n "wasmtime-environ") (r "=21.0.0-alpha") (d #t) (k 0) (p "dusk-wasmtime-environ")) (d (n "wasmtime-fiber") (r "=20.0.0") (o #t) (d #t) (k 0)) (d (n "wasmtime-jit-debug") (r "=20.0.0") (f (quote ("gdb_jit_int"))) (o #t) (d #t) (k 0)) (d (n "wasmtime-slab") (r "=20.0.0") (d #t) (k 0)) (d (n "wasmtime-versioned-export-macros") (r "=20.0.0") (d #t) (k 0)) (d (n "wasmtime-versioned-export-macros") (r "=20.0.0") (d #t) (k 1)) (d (n "wasmtime-wmemcheck") (r "=20.0.0") (o #t) (d #t) (k 0)) (d (n "windows-sys") (r "^0.52.0") (f (quote ("Win32_Foundation" "Win32_System_Kernel" "Win32_System_Memory" "Win32_System_Diagnostics_Debug" "Win32_System_SystemInformation" "Win32_Storage_FileSystem" "Win32_Security"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0zb2mmh7gp3gqhj56y66ip5a3yi572mqa863vnwa9ym4jcq2hcyh") (f (quote (("threads" "wasmtime-environ/threads") ("pooling-allocator") ("gc" "wasmtime-environ/gc")))) (s 2) (e (quote (("wmemcheck" "dep:wasmtime-wmemcheck") ("debug-builtins" "dep:wasmtime-jit-debug") ("coredump" "dep:wasm-encoder") ("component-model" "wasmtime-environ/component-model" "dep:encoding_rs") ("async" "dep:wasmtime-fiber"))))))

