(define-module (crates-io du sk dusk-poseidon) #:use-module (crates-io))

(define-public crate-dusk-poseidon-0.18.0 (c (n "dusk-poseidon") (v "0.18.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "canonical") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "canonical_derive") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "canonical_host") (r "^0.5") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.6") (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-hades") (r "^0.13") (k 0)) (d (n "dusk-jubjub") (r "^0.8") (k 0)) (d (n "dusk-plonk") (r "^0.5") (o #t) (k 0)) (d (n "microkelvin") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "nstack") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)))) (h "1wz41aqwc1jfgj24rfiz5yn1mh49ygrsbvxd27xz49xrwcdh5s1z") (f (quote (("std" "dusk-hades/default" "dusk-bls12_381/default" "dusk-jubjub/std" "dusk-plonk" "anyhow" "thiserror") ("default" "std") ("canon_host" "canon" "canonical/host") ("canon" "dusk-bls12_381/canon" "dusk-jubjub/canon" "canonical" "canonical_derive" "microkelvin" "nstack" "alloc") ("alloc"))))))

(define-public crate-dusk-poseidon-0.19.0 (c (n "dusk-poseidon") (v "0.19.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "canonical") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "canonical_derive") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "canonical_host") (r "^0.5") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.6") (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-hades") (r "^0.14") (k 0)) (d (n "dusk-jubjub") (r "^0.8") (k 0)) (d (n "dusk-plonk") (r "^0.6") (o #t) (k 0)) (d (n "microkelvin") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "nstack") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)))) (h "0fr61879iibn7bxqihmaplawi5brnqlcipgl8x7jvkdcn733b3mc") (f (quote (("std" "dusk-hades/default" "dusk-bls12_381/default" "dusk-jubjub/std" "dusk-plonk" "anyhow" "thiserror") ("default" "std") ("canon_host" "canon" "canonical/host") ("canon" "dusk-bls12_381/canon" "dusk-jubjub/canon" "canonical" "canonical_derive" "microkelvin" "nstack" "alloc") ("alloc"))))))

(define-public crate-dusk-poseidon-0.20.0-pre.0 (c (n "dusk-poseidon") (v "0.20.0-pre.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "canonical") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "canonical_derive") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "canonical_host") (r "^0.5") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.6") (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-hades") (r "^0.15.0-pre") (k 0)) (d (n "dusk-jubjub") (r "^0.8") (k 0)) (d (n "dusk-plonk") (r "^0.7.0-pre") (o #t) (k 0)) (d (n "microkelvin") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "nstack") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)))) (h "03rg9vf0v2l673b4zbl6bb9xzhpr4179jk7cxwwwm542g6c29k06") (f (quote (("std" "dusk-hades/default" "dusk-bls12_381/default" "dusk-jubjub/std" "dusk-plonk" "anyhow" "thiserror") ("default" "std") ("canon_host" "canon" "canonical/host") ("canon" "dusk-bls12_381/canon" "dusk-jubjub/canon" "canonical" "canonical_derive" "microkelvin" "nstack" "alloc") ("alloc"))))))

(define-public crate-dusk-poseidon-0.20.0-pre.1 (c (n "dusk-poseidon") (v "0.20.0-pre.1") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "canonical") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "canonical_derive") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "canonical_host") (r "^0.5") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.6") (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-hades") (r "^0.15.0-pre") (k 0)) (d (n "dusk-jubjub") (r "^0.8") (k 0)) (d (n "dusk-plonk") (r "^0.7.0-pre") (o #t) (k 0)) (d (n "microkelvin") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "nstack") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)))) (h "0yz250j98mrijxmbd4c3f5i8rm0xg3694b2ncgrw9i8xw89g2kf4") (f (quote (("std" "dusk-hades/default" "dusk-bls12_381/default" "dusk-jubjub/std" "dusk-plonk" "anyhow" "thiserror") ("default" "std") ("canon_host" "canon" "canonical/host") ("canon" "dusk-bls12_381/canon" "dusk-jubjub/canon" "canonical" "canonical_derive" "microkelvin" "nstack" "alloc") ("alloc"))))))

(define-public crate-dusk-poseidon-0.20.0 (c (n "dusk-poseidon") (v "0.20.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "canonical") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "canonical_derive") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "canonical_host") (r "^0.5") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.6") (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-hades") (r "^0.15") (k 0)) (d (n "dusk-jubjub") (r "^0.8") (k 0)) (d (n "dusk-plonk") (r "^0.7") (o #t) (k 0)) (d (n "microkelvin") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "nstack") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)))) (h "1dyazhw0pbfxk8960xpzmnj89q4s8xk9iyy7879h7x5ygj8cqmg7") (f (quote (("std" "dusk-hades/default" "dusk-bls12_381/default" "dusk-jubjub/std" "dusk-plonk" "anyhow" "thiserror") ("default" "std") ("canon_host" "canon" "canonical/host") ("canon" "dusk-bls12_381/canon" "dusk-jubjub/canon" "canonical" "canonical_derive" "microkelvin" "nstack" "alloc") ("alloc"))))))

(define-public crate-dusk-poseidon-0.21.0-rc.0 (c (n "dusk-poseidon") (v "0.21.0-rc.0") (d (list (d (n "canonical") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "canonical_derive") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.8.0-rc.0") (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-hades") (r "^0.16.0-rc.0") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.10.0-rc.0") (k 0)) (d (n "dusk-plonk") (r "^0.8.0-rc.1") (f (quote ("alloc"))) (k 0)) (d (n "microkelvin") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "nstack") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 2)))) (h "0c8gvl5mhfmgvj87kzb02j9scc7m2xxnbipz2n4xdza3s9kan41z") (f (quote (("std" "dusk-plonk/default" "dusk-hades/plonk-std" "dusk-bls12_381/default" "dusk-jubjub/std") ("default" "std" "canon") ("canon" "dusk-bls12_381/canon" "dusk-jubjub/canon" "canonical" "canonical_derive" "microkelvin" "nstack" "alloc") ("alloc"))))))

(define-public crate-dusk-poseidon-0.21.0-rc.1 (c (n "dusk-poseidon") (v "0.21.0-rc.1") (d (list (d (n "canonical") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "canonical_derive") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.8") (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-hades") (r "^0.16.0-rc") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.10") (k 0)) (d (n "dusk-plonk") (r "^0.8") (f (quote ("alloc"))) (k 0)) (d (n "microkelvin") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "nstack") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 2)))) (h "1dp194qpj72kr65ivy4my6479sajiczaqnn8rmm3mwg90c1d2v1k") (f (quote (("std" "dusk-plonk/default" "dusk-hades/plonk-std" "dusk-bls12_381/default" "dusk-jubjub/std") ("default" "std" "canon") ("canon" "dusk-bls12_381/canon" "dusk-jubjub/canon" "canonical" "canonical_derive" "microkelvin" "nstack" "alloc") ("alloc")))) (y #t)))

(define-public crate-dusk-poseidon-0.21.0-rc.2 (c (n "dusk-poseidon") (v "0.21.0-rc.2") (d (list (d (n "canonical") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "canonical_derive") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.8") (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-hades") (r "^0.16.0-rc") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.10") (k 0)) (d (n "dusk-plonk") (r "^0.8") (f (quote ("alloc"))) (k 0)) (d (n "microkelvin") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "nstack") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 2)))) (h "0nyybv75i4lg57gpv4wlyqfiz1wd7753af8r1h2cs27cfmwpnqbb") (f (quote (("std" "dusk-plonk/default" "dusk-hades/plonk-std" "dusk-bls12_381/default" "dusk-jubjub/std") ("default" "std" "canon") ("canon" "dusk-bls12_381/canon" "dusk-jubjub/canon" "canonical" "canonical_derive" "microkelvin" "nstack" "alloc") ("alloc"))))))

(define-public crate-dusk-poseidon-0.21.0-rc.3 (c (n "dusk-poseidon") (v "0.21.0-rc.3") (d (list (d (n "canonical") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "canonical_derive") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.8") (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-hades") (r "^0.16.0-rc") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.10") (k 0)) (d (n "dusk-plonk") (r "^0.8") (f (quote ("alloc"))) (k 0)) (d (n "microkelvin") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "nstack") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 2)))) (h "0wnncmif39vvjzvrhmbz23mrg2zw5d4drk73cbnz4jlmx2103vm6") (f (quote (("std" "dusk-plonk/default" "dusk-hades/plonk-std" "dusk-bls12_381/default" "dusk-jubjub/std") ("default" "std" "canon") ("canon" "dusk-bls12_381/canon" "dusk-jubjub/canon" "canonical" "canonical_derive" "microkelvin" "nstack" "alloc") ("alloc"))))))

(define-public crate-dusk-poseidon-0.21.0-rc.4 (c (n "dusk-poseidon") (v "0.21.0-rc.4") (d (list (d (n "canonical") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "canonical_derive") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.8") (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-hades") (r "^0.16.0-rc") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.10") (k 0)) (d (n "dusk-plonk") (r "^0.8") (f (quote ("alloc"))) (k 0)) (d (n "microkelvin") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "nstack") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 2)))) (h "1pg6si9p06znck83qfl8sfrs70im1lhgs3i1lrhsr85lqjg37qzk") (f (quote (("std" "dusk-plonk/default" "dusk-hades/plonk-std" "dusk-bls12_381/default" "dusk-jubjub/std") ("default" "std" "canon") ("canon" "dusk-bls12_381/canon" "dusk-jubjub/canon" "canonical" "canonical_derive" "microkelvin" "nstack" "alloc") ("alloc"))))))

(define-public crate-dusk-poseidon-0.21.0-rc.5 (c (n "dusk-poseidon") (v "0.21.0-rc.5") (d (list (d (n "canonical") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "canonical_derive") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.8") (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-hades") (r "^0.16.0-rc") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.10") (k 0)) (d (n "dusk-plonk") (r "^0.8") (f (quote ("alloc"))) (k 0)) (d (n "microkelvin") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "nstack") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 2)))) (h "0miwr4n915whd4w57rxc8q4lqv0l321996dzw76s79sh57dm85wk") (f (quote (("std" "dusk-plonk/default" "dusk-hades/plonk-std" "dusk-bls12_381/default" "dusk-jubjub/std") ("default" "std" "canon") ("canon" "dusk-bls12_381/canon" "dusk-jubjub/canon" "canonical" "canonical_derive" "microkelvin" "nstack" "alloc") ("alloc"))))))

(define-public crate-dusk-poseidon-0.21.0 (c (n "dusk-poseidon") (v "0.21.0") (d (list (d (n "canonical") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "canonical_derive") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.8") (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-hades") (r "^0.16") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.10") (k 0)) (d (n "dusk-plonk") (r "^0.8") (f (quote ("alloc"))) (k 0)) (d (n "microkelvin") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "nstack") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 2)))) (h "1is20f02smd0ifg80xw7p4j5nr2vqsdm196ww0bv6j3yv9psf9gy") (f (quote (("std" "dusk-plonk/default" "dusk-hades/plonk-std" "dusk-bls12_381/default" "dusk-jubjub/std") ("persistance" "microkelvin/persistance") ("default" "std" "canon") ("canon" "dusk-bls12_381/canon" "dusk-jubjub/canon" "canonical" "canonical_derive" "microkelvin" "nstack" "alloc") ("alloc")))) (y #t)))

(define-public crate-dusk-poseidon-0.22.0-rc.0 (c (n "dusk-poseidon") (v "0.22.0-rc.0") (d (list (d (n "canonical") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "canonical_derive") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.8") (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-hades") (r "^0.16") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.10") (k 0)) (d (n "dusk-plonk") (r "^0.8") (f (quote ("alloc"))) (k 0)) (d (n "microkelvin") (r "^0.10.0-rc") (o #t) (d #t) (k 0)) (d (n "nstack") (r "^0.10.0-rc") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 2)))) (h "0knkciqjq4mh7yxh3v8245s9xk47pazg47dljj8qvnyr9xbn719r") (f (quote (("std" "dusk-plonk/default" "dusk-hades/plonk-std" "dusk-bls12_381/default" "dusk-jubjub/std") ("persistence" "microkelvin/persistence") ("default" "std" "canon") ("canon" "dusk-bls12_381/canon" "dusk-jubjub/canon" "canonical" "canonical_derive" "microkelvin" "nstack" "alloc") ("alloc"))))))

(define-public crate-dusk-poseidon-0.22.0 (c (n "dusk-poseidon") (v "0.22.0") (d (list (d (n "canonical") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "canonical_derive") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.8") (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-hades") (r "^0.16") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.10") (k 0)) (d (n "dusk-plonk") (r "^0.8") (f (quote ("alloc"))) (k 0)) (d (n "microkelvin") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "nstack") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 2)))) (h "0yy2w9yg5csl7g5zffspyvcyxlsv0x5j9c7p3yg9fm3bgbp0q3xm") (f (quote (("std" "dusk-plonk/default" "dusk-hades/plonk-std" "dusk-bls12_381/default" "dusk-jubjub/std") ("persistence" "microkelvin/persistence") ("default" "std" "canon") ("canon" "dusk-bls12_381/canon" "dusk-jubjub/canon" "canonical" "canonical_derive" "microkelvin" "nstack" "alloc") ("alloc"))))))

(define-public crate-dusk-poseidon-0.23.0-rc.0 (c (n "dusk-poseidon") (v "0.23.0-rc.0") (d (list (d (n "canonical") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "canonical_derive") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.8") (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-hades") (r "^0.16") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.10") (k 0)) (d (n "dusk-plonk") (r "^0.8") (f (quote ("alloc"))) (k 0)) (d (n "microkelvin") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "nstack") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 2)))) (h "1921aa8qd9vl3vyp161gs9nrv5gqbyy1ymrx8if236zypswac3cw") (f (quote (("std" "dusk-plonk/default" "dusk-hades/plonk-std" "dusk-bls12_381/default" "dusk-jubjub/std") ("persistence" "microkelvin/persistence") ("default" "std" "canon") ("canon" "dusk-bls12_381/canon" "dusk-jubjub/canon" "canonical" "canonical_derive" "microkelvin" "nstack" "alloc") ("alloc"))))))

(define-public crate-dusk-poseidon-0.23.0-rc.1 (c (n "dusk-poseidon") (v "0.23.0-rc.1") (d (list (d (n "canonical") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "canonical_derive") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.8") (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-hades") (r "^0.17.0-rc") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.10") (k 0)) (d (n "dusk-plonk") (r "^0.9") (f (quote ("alloc"))) (k 0)) (d (n "microkelvin") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "nstack") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (k 2)))) (h "0njar561jlcv3nlhni7dqmg7am86s6izwbm1wrm0ki0gi1gp4fwk") (f (quote (("std" "dusk-hades/plonk" "dusk-bls12_381/default" "dusk-jubjub/std") ("persistence" "microkelvin/persistence") ("default" "std" "canon") ("canon" "dusk-bls12_381/canon" "dusk-jubjub/canon" "canonical" "canonical_derive" "microkelvin" "nstack" "alloc") ("alloc" "dusk-hades/plonk"))))))

(define-public crate-dusk-poseidon-0.23.0-rc.2 (c (n "dusk-poseidon") (v "0.23.0-rc.2") (d (list (d (n "canonical") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "canonical_derive") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.8") (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-hades") (r "^0.17.0-rc") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.10") (k 0)) (d (n "dusk-plonk") (r "^0.9") (f (quote ("alloc"))) (k 0)) (d (n "microkelvin") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "nstack") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (k 2)))) (h "1py8qgnq3iz4iga1jzjx4dg7n1s0ri5p66d3k3l3n46hrw34y87v") (f (quote (("std" "dusk-hades/plonk" "dusk-bls12_381/default" "dusk-jubjub/std") ("persistence" "microkelvin/persistence") ("default" "std" "canon") ("canon" "dusk-bls12_381/canon" "dusk-jubjub/canon" "canonical" "canonical_derive" "microkelvin" "nstack" "alloc") ("alloc" "dusk-hades/plonk"))))))

(define-public crate-dusk-poseidon-0.23.0-rc.3 (c (n "dusk-poseidon") (v "0.23.0-rc.3") (d (list (d (n "canonical") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "canonical_derive") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.8") (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-hades") (r "^0.17.0-rc") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.10") (k 0)) (d (n "dusk-plonk") (r "^0.9") (f (quote ("alloc"))) (k 0)) (d (n "microkelvin") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "nstack") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (k 2)))) (h "10rrhg8rxwp0bhm0byrrxlfqibn69s0d57iib8ygw27h9f77ix1m") (f (quote (("std" "dusk-hades/plonk" "dusk-bls12_381/default" "dusk-jubjub/std") ("persistence" "microkelvin/persistence") ("default" "std" "canon") ("canon" "dusk-bls12_381/canon" "dusk-jubjub/canon" "canonical" "canonical_derive" "microkelvin" "nstack" "alloc") ("alloc" "dusk-hades/plonk"))))))

(define-public crate-dusk-poseidon-0.24.0-rc.0 (c (n "dusk-poseidon") (v "0.24.0-rc.0") (d (list (d (n "canonical") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "canonical_derive") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.8") (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-hades") (r "^0.17.0-rc") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.10") (k 0)) (d (n "dusk-plonk") (r "^0.9") (f (quote ("alloc"))) (k 0)) (d (n "microkelvin") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "nstack") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (k 2)))) (h "198anvr3vhz7lkbhvgmi2kfpcyn0n7sv1v9h2058nys3qb40a9p2") (f (quote (("std" "dusk-hades/plonk" "dusk-bls12_381/default" "dusk-jubjub/std") ("persistence" "microkelvin/persistence") ("default" "std" "canon") ("canon" "dusk-bls12_381/canon" "dusk-jubjub/canon" "canonical" "canonical_derive" "microkelvin" "nstack" "alloc") ("alloc" "dusk-hades/plonk"))))))

(define-public crate-dusk-poseidon-0.25.0-rc.0 (c (n "dusk-poseidon") (v "0.25.0-rc.0") (d (list (d (n "canonical") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "canonical_derive") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.9") (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-hades") (r "^0.18.0-rc") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.11") (k 0)) (d (n "dusk-plonk") (r "^0.10") (f (quote ("alloc"))) (k 0)) (d (n "microkelvin") (r "^0.15.0-rc") (o #t) (d #t) (k 0)) (d (n "nstack") (r "^0.14.0-rc") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (k 2)))) (h "18yvjlvfp3080hy3n74php9a00f89vcpnbba5qb83mrdxnyipfpg") (f (quote (("std" "dusk-hades/plonk" "dusk-bls12_381/default" "dusk-jubjub/std") ("persistence" "microkelvin/persistence") ("default" "std" "canon") ("canon" "dusk-bls12_381/canon" "dusk-jubjub/canon" "canonical" "canonical_derive" "microkelvin" "nstack" "alloc") ("alloc" "dusk-hades/plonk"))))))

(define-public crate-dusk-poseidon-0.26.0-rc.0 (c (n "dusk-poseidon") (v "0.26.0-rc.0") (d (list (d (n "canonical") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "canonical_derive") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.10") (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-hades") (r "^0.19.0-rc") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.12.0-rc") (k 0)) (d (n "dusk-plonk") (r "^0.12.0-rc") (f (quote ("alloc"))) (k 0)) (d (n "microkelvin") (r "^0.15.0-rc") (o #t) (d #t) (k 0)) (d (n "nstack") (r "^0.14.0-rc") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (k 2)) (d (n "rkyv") (r "^0.7") (o #t) (d #t) (k 0)))) (h "05gmhfmhxisnczxrx39ajdkkli52iys7lpz9zk6730s0g06iqyg8") (f (quote (("std" "dusk-hades/plonk" "dusk-bls12_381/default" "dusk-jubjub/std") ("rkyv-impl" "dusk-bls12_381/rkyv" "rkyv") ("persistence" "microkelvin/persistence") ("default" "std" "canon") ("canon" "dusk-bls12_381/canon" "dusk-jubjub/canon" "canonical" "canonical_derive" "microkelvin" "nstack" "alloc") ("alloc" "dusk-hades/plonk"))))))

(define-public crate-dusk-poseidon-0.26.0-rc.1 (c (n "dusk-poseidon") (v "0.26.0-rc.1") (d (list (d (n "bytecheck") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "canonical") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "canonical_derive") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.11.0-rc") (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-hades") (r "^0.19.0-rc") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.12.0-rc") (k 0)) (d (n "dusk-plonk") (r "^0.12.0-rc") (f (quote ("alloc"))) (k 0)) (d (n "microkelvin") (r "^0.15.0-rc") (o #t) (d #t) (k 0)) (d (n "nstack") (r "^0.14.0-rc") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (k 2)) (d (n "rkyv") (r "^0.7") (o #t) (d #t) (k 0)))) (h "0x1s0i2h8rlb7685hixh7svzvaakbp2q6xd8yqqhm192d6nrwvzj") (f (quote (("std" "dusk-hades/plonk" "dusk-bls12_381/default" "dusk-jubjub/std") ("rkyv-impl" "dusk-bls12_381/rkyv-impl" "rkyv" "bytecheck") ("persistence" "microkelvin/persistence") ("default" "std" "canon") ("canon" "dusk-bls12_381/canon" "dusk-jubjub/canon" "canonical" "canonical_derive" "microkelvin" "nstack" "alloc") ("alloc" "dusk-hades/plonk"))))))

(define-public crate-dusk-poseidon-0.26.0 (c (n "dusk-poseidon") (v "0.26.0") (d (list (d (n "bytecheck") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "canonical") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "canonical_derive") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.11") (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-hades") (r "^0.19") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.12") (k 0)) (d (n "dusk-plonk") (r "^0.12") (f (quote ("alloc"))) (k 0)) (d (n "microkelvin") (r "^0.15.0-rc") (o #t) (d #t) (k 0)) (d (n "nstack") (r "^0.14.0-rc") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (k 2)) (d (n "rkyv") (r "^0.7") (o #t) (d #t) (k 0)))) (h "03232fw1vzs4h0kk072n8iwk4c8wigzs4kqcm4pldsg3y0izprx0") (f (quote (("std" "dusk-hades/plonk" "dusk-bls12_381/default" "dusk-jubjub/std") ("rkyv-impl" "dusk-bls12_381/rkyv-impl" "rkyv" "bytecheck") ("persistence" "microkelvin/persistence") ("default" "std" "canon") ("canon" "dusk-bls12_381/canon" "dusk-jubjub/canon" "canonical" "canonical_derive" "microkelvin" "nstack" "alloc") ("alloc" "dusk-hades/plonk"))))))

(define-public crate-dusk-poseidon-0.27.0 (c (n "dusk-poseidon") (v "0.27.0") (d (list (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "dusk-bls12_381") (r "^0.11") (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-hades") (r "^0.19") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.12") (k 0)) (d (n "dusk-plonk") (r "^0.12") (f (quote ("alloc"))) (k 0)) (d (n "microkelvin") (r "^0.17.0-rc") (o #t) (d #t) (k 0)) (d (n "nstack") (r "^0.16.0-rc") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (k 2)) (d (n "ranno") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7") (o #t) (k 0)))) (h "1izr6f1ii3n34alf06vnm7r98jhikaq0byn1r9aasnaxdwvw7hgj") (f (quote (("rkyv-impl" "dusk-bls12_381/rkyv-impl" "rkyv" "bytecheck") ("default" "dusk-jubjub/std" "dusk-bls12_381/default" "alloc") ("alloc" "microkelvin" "nstack" "ranno" "dusk-hades/plonk"))))))

(define-public crate-dusk-poseidon-0.28.0 (c (n "dusk-poseidon") (v "0.28.0") (d (list (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "dusk-bls12_381") (r "^0.11") (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-hades") (r "^0.20") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.12") (k 0)) (d (n "dusk-plonk") (r "^0.13") (f (quote ("alloc"))) (k 0)) (d (n "microkelvin") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "nstack") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "std_rng"))) (k 2)) (d (n "ranno") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7") (o #t) (k 0)) (d (n "rkyv") (r "^0.7") (f (quote ("size_32"))) (k 2)))) (h "1q0jwx0yjqlsjhqz7ig4jqycfjzsdddxlrcj9s6cif3zhngp0x53") (f (quote (("rkyv-impl" "dusk-bls12_381/rkyv-impl" "rkyv" "bytecheck") ("default" "dusk-jubjub/std" "dusk-bls12_381/default" "alloc") ("alloc" "microkelvin" "nstack" "ranno" "dusk-hades/plonk"))))))

(define-public crate-dusk-poseidon-0.28.1 (c (n "dusk-poseidon") (v "0.28.1") (d (list (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.11") (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-hades") (r "^0.20") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.12") (k 0)) (d (n "dusk-plonk") (r "^0.13") (f (quote ("alloc"))) (k 0)) (d (n "microkelvin") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "nstack") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "std_rng"))) (k 2)) (d (n "ranno") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7") (o #t) (k 0)) (d (n "rkyv") (r "^0.7") (f (quote ("size_32"))) (k 2)))) (h "0xnhhzgi0jqc1gv7byl8ldxq83xh9mp9iskg17byrc56knrrvcy2") (f (quote (("rkyv-impl" "dusk-bls12_381/rkyv-impl" "rkyv" "bytecheck") ("default" "dusk-plonk/std" "dusk-jubjub/std" "dusk-bls12_381/default" "alloc") ("alloc" "microkelvin" "nstack" "ranno" "dusk-hades/plonk"))))))

(define-public crate-dusk-poseidon-0.28.2 (c (n "dusk-poseidon") (v "0.28.2") (d (list (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.11") (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-hades") (r "^0.20") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.12") (k 0)) (d (n "dusk-plonk") (r "^0.13") (f (quote ("alloc"))) (k 0)) (d (n "microkelvin") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "nstack") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "std_rng"))) (k 2)) (d (n "ranno") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7") (o #t) (k 0)) (d (n "rkyv") (r "^0.7") (f (quote ("size_32"))) (k 2)))) (h "0p8lw1gfypab6rydjyk9f55arss2ym40dfbg2nrr37ljklx9cdb1") (f (quote (("rkyv-impl" "dusk-bls12_381/rkyv-impl" "rkyv" "bytecheck") ("default" "dusk-plonk/std" "dusk-jubjub/std" "dusk-bls12_381/default" "alloc") ("alloc" "microkelvin" "nstack" "ranno" "dusk-hades/plonk"))))))

(define-public crate-dusk-poseidon-0.29.0 (c (n "dusk-poseidon") (v "0.29.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.11") (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-hades") (r "^0.20") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.12") (k 0)) (d (n "dusk-plonk") (r "^0.13") (f (quote ("alloc"))) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "std_rng"))) (k 2)))) (h "05v7k0qj6amnbh2nhwqz6a3jbcvh7p81i8ygb9ybs82iinyy60gj") (f (quote (("default" "dusk-plonk/std" "dusk-jubjub/std" "dusk-bls12_381/default" "alloc") ("alloc" "dusk-hades/plonk"))))))

(define-public crate-dusk-poseidon-0.29.1-rc.0 (c (n "dusk-poseidon") (v "0.29.1-rc.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.11") (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-hades") (r "^0.20") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.12") (k 0)) (d (n "dusk-plonk") (r "^0.13") (f (quote ("alloc"))) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "std_rng"))) (k 2)))) (h "1cxlkk5vgpx8n63r3kjp08lnv2x3k9gw4a1i54xxz2y99ay3zzmy") (f (quote (("merkle") ("default" "dusk-plonk/std" "dusk-jubjub/std" "dusk-bls12_381/default" "alloc") ("alloc" "dusk-hades/plonk"))))))

(define-public crate-dusk-poseidon-0.30.0 (c (n "dusk-poseidon") (v "0.30.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.11") (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-hades") (r "^0.21") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.12") (k 0)) (d (n "dusk-plonk") (r "^0.14") (f (quote ("alloc"))) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "std_rng"))) (k 2)))) (h "1fd6jz91hnbppid4qs8v8ygskwhw1f0djqhzl5hpzvc0154ihlz4") (f (quote (("merkle") ("default" "dusk-plonk/std" "dusk-jubjub/std" "dusk-bls12_381/default" "alloc") ("alloc" "dusk-hades/plonk"))))))

(define-public crate-dusk-poseidon-0.30.1 (c (n "dusk-poseidon") (v "0.30.1") (d (list (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.11") (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-hades") (r "^0.21") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.12") (k 0)) (d (n "dusk-plonk") (r "^0.14") (f (quote ("alloc"))) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "std_rng"))) (k 2)) (d (n "rkyv") (r "^0.7") (o #t) (k 0)))) (h "0hk69zpq3nb39m7665fzn49gk7j8pr019c5adgpx3p1xpwclkpnx") (f (quote (("size_64" "rkyv/size_64") ("size_32" "rkyv/size_32") ("size_16" "rkyv/size_16") ("rkyv-impl" "rkyv/validation" "rkyv/alloc" "rkyv" "bytecheck" "dusk-bls12_381/rkyv-impl") ("merkle") ("default" "dusk-plonk/std" "dusk-jubjub/std" "dusk-bls12_381/default" "alloc") ("alloc" "dusk-hades/plonk"))))))

(define-public crate-dusk-poseidon-0.31.0 (c (n "dusk-poseidon") (v "0.31.0") (d (list (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.12") (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-hades") (r "^0.22") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.13") (k 0)) (d (n "dusk-plonk") (r "^0.16") (f (quote ("alloc"))) (k 0)) (d (n "ff") (r "^0.13") (k 2)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "std_rng"))) (k 2)) (d (n "rkyv") (r "^0.7") (o #t) (k 0)))) (h "0zplknpsk4d0f74igwskcx979j1dsanrxvyy77p73hnyncn3p6kl") (f (quote (("size_64" "rkyv/size_64") ("size_32" "rkyv/size_32") ("size_16" "rkyv/size_16") ("rkyv-impl" "rkyv/validation" "rkyv/alloc" "rkyv" "bytecheck" "dusk-bls12_381/rkyv-impl") ("merkle") ("default" "dusk-plonk/std" "dusk-jubjub/default" "dusk-bls12_381/default" "alloc") ("alloc" "dusk-hades/plonk"))))))

(define-public crate-dusk-poseidon-0.32.0 (c (n "dusk-poseidon") (v "0.32.0") (d (list (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.13") (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-hades") (r "^0.23") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.14") (k 0)) (d (n "dusk-plonk") (r "^0.18") (f (quote ("alloc"))) (k 0)) (d (n "ff") (r "^0.13") (k 2)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "std_rng"))) (k 2)) (d (n "rkyv") (r "^0.7") (o #t) (k 0)))) (h "0dk8jwyp6m16q3j9rhd1xnhb9rpm3njcd2pp3ivdin9xnd1nwbvh") (f (quote (("size_64" "rkyv/size_64") ("size_32" "rkyv/size_32") ("size_16" "rkyv/size_16") ("rkyv-impl" "rkyv/validation" "rkyv/alloc" "rkyv" "bytecheck" "dusk-bls12_381/rkyv-impl") ("merkle") ("default" "dusk-plonk/std" "dusk-jubjub/default" "dusk-bls12_381/default" "alloc") ("alloc" "dusk-hades/plonk"))))))

(define-public crate-dusk-poseidon-0.33.0 (c (n "dusk-poseidon") (v "0.33.0") (d (list (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.13") (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-hades") (r "^0.24") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.14") (k 0)) (d (n "dusk-plonk") (r "^0.19") (f (quote ("alloc"))) (k 0)) (d (n "ff") (r "^0.13") (k 2)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "std_rng"))) (k 2)) (d (n "rkyv") (r "^0.7") (o #t) (k 0)))) (h "15ggj7kf19i5cimwrc045hyaysh75nvpd0l3i2sjm711pkbph6s7") (f (quote (("size_64" "rkyv/size_64") ("size_32" "rkyv/size_32") ("size_16" "rkyv/size_16") ("rkyv-impl" "rkyv/validation" "rkyv/alloc" "rkyv" "bytecheck" "dusk-bls12_381/rkyv-impl") ("merkle") ("default" "dusk-plonk/std" "dusk-jubjub/default" "dusk-bls12_381/default" "alloc") ("alloc" "dusk-hades/plonk"))))))

(define-public crate-dusk-poseidon-0.34.0 (c (n "dusk-poseidon") (v "0.34.0") (d (list (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.13") (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.14") (k 0)) (d (n "dusk-plonk") (r "^0.19") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "ff") (r "^0.13") (k 2)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "std_rng"))) (k 2)) (d (n "rkyv") (r "^0.7") (o #t) (k 0)))) (h "1gc6w369m7q8gj28659jcz59jivyn5hgl8n2s2kgzjaj998m49bp") (f (quote (("zk" "dusk-plonk") ("size_64" "rkyv/size_64") ("size_32" "rkyv/size_32") ("size_16" "rkyv/size_16") ("rkyv-impl" "rkyv/validation" "rkyv/alloc" "rkyv" "bytecheck" "dusk-bls12_381/rkyv-impl") ("merkle") ("cipher"))))))

(define-public crate-dusk-poseidon-0.35.0 (c (n "dusk-poseidon") (v "0.35.0") (d (list (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.13") (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.14") (k 0)) (d (n "dusk-plonk") (r "^0.19") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "ff") (r "^0.13") (k 2)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "std_rng"))) (k 2)) (d (n "rkyv") (r "^0.7") (o #t) (k 0)))) (h "19mhs69q796m1vb3i08j9njw23b8x2x9nm1ac89qf7z3354h0pbk") (f (quote (("zk" "dusk-plonk") ("size_64" "rkyv/size_64") ("size_32" "rkyv/size_32") ("size_16" "rkyv/size_16") ("rkyv-impl" "rkyv/validation" "rkyv/alloc" "rkyv" "bytecheck" "dusk-bls12_381/rkyv-impl") ("merkle") ("cipher"))))))

(define-public crate-dusk-poseidon-0.36.0 (c (n "dusk-poseidon") (v "0.36.0") (d (list (d (n "bytecheck") (r "^0.6") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.13") (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.14") (k 0)) (d (n "dusk-plonk") (r "^0.19") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "dusk-safe") (r "^0.1") (d #t) (k 0)) (d (n "ff") (r "^0.13") (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "std_rng"))) (k 2)) (d (n "rkyv") (r "^0.7") (o #t) (k 0)))) (h "13bkjqzz6hyvkddyl3ygnbwlbs7cjc9mz8j0fxzv5dqkm88a0m7l") (f (quote (("zk" "dusk-plonk") ("size_64" "rkyv/size_64") ("size_32" "rkyv/size_32") ("size_16" "rkyv/size_16") ("rkyv-impl" "rkyv/validation" "rkyv/alloc" "rkyv" "bytecheck" "dusk-bls12_381/rkyv-impl") ("cipher"))))))

(define-public crate-dusk-poseidon-0.37.0-rc.0 (c (n "dusk-poseidon") (v "0.37.0-rc.0") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.13") (f (quote ("zeroize"))) (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 2)) (d (n "dusk-jubjub") (r "^0.14") (k 0)) (d (n "dusk-plonk") (r "^0.19.2-rc.0") (f (quote ("alloc" "zeroize"))) (o #t) (k 0)) (d (n "dusk-safe") (r "^0.2.0-rc.0") (d #t) (k 0)) (d (n "ff") (r "^0.13") (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "std_rng"))) (k 2)))) (h "1g2pq9pysc44kh09ma3gr5lpb11mcnkxq9d3j9jd09d0j6p807j5") (f (quote (("zk" "dusk-plonk") ("encryption" "dusk-safe/encryption"))))))

(define-public crate-dusk-poseidon-0.37.0 (c (n "dusk-poseidon") (v "0.37.0") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.13") (f (quote ("zeroize"))) (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 2)) (d (n "dusk-jubjub") (r "^0.14") (k 0)) (d (n "dusk-plonk") (r "^0.19") (f (quote ("alloc" "zeroize"))) (o #t) (k 0)) (d (n "dusk-safe") (r "^0.2") (d #t) (k 0)) (d (n "ff") (r "^0.13") (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "std_rng"))) (k 2)))) (h "1hwxhic65mcl1gzkqkildwja1l9608mjw5csk45xhhifzi1wdip1") (f (quote (("zk" "dusk-plonk") ("encryption" "dusk-safe/encryption"))))))

(define-public crate-dusk-poseidon-0.38.0 (c (n "dusk-poseidon") (v "0.38.0") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.13") (f (quote ("zeroize"))) (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 2)) (d (n "dusk-jubjub") (r "^0.14") (k 0)) (d (n "dusk-plonk") (r "^0.19") (f (quote ("alloc" "zeroize"))) (o #t) (k 0)) (d (n "dusk-safe") (r "^0.2") (d #t) (k 0)) (d (n "ff") (r "^0.13") (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "std_rng"))) (k 2)))) (h "1mpn7x71h8ps3lcnvwy11xm7b96i5ajs9r6fqdch68cqs7w7ypi5") (f (quote (("zk" "dusk-plonk") ("encryption" "dusk-safe/encryption"))))))

(define-public crate-dusk-poseidon-0.39.0 (c (n "dusk-poseidon") (v "0.39.0") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.13") (f (quote ("zeroize"))) (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 2)) (d (n "dusk-jubjub") (r "^0.14") (k 0)) (d (n "dusk-plonk") (r "^0.19") (f (quote ("alloc" "zeroize"))) (o #t) (k 0)) (d (n "dusk-safe") (r "^0.2") (d #t) (k 0)) (d (n "ff") (r "^0.13") (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "std_rng"))) (k 2)))) (h "13jhnmj0v7dqm70p15jndw0qadag8qbv8y6vd48zyrmjsd6dwy05") (f (quote (("zk" "dusk-plonk") ("encryption" "dusk-safe/encryption"))))))

