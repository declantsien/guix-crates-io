(define-module (crates-io br ix brix_commands) #:use-module (crates-io))

(define-public crate-brix_commands-0.1.0 (c (n "brix_commands") (v "0.1.0") (d (list (d (n "brix_cli") (r "^0.3.0") (d #t) (k 0)) (d (n "brix_common") (r "^0.1.0") (d #t) (k 0)) (d (n "brix_errors") (r "^0.1.0") (d #t) (k 0)) (d (n "brix_processor") (r "^0.1.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dialoguer") (r "^0") (d #t) (k 0)) (d (n "execute") (r "^0.2.9") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.7.0") (d #t) (k 0)) (d (n "log") (r "^0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0") (d #t) (k 2)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "spectral") (r "^0") (d #t) (k 2)) (d (n "validator") (r "^0") (f (quote ("derive"))) (d #t) (k 0)))) (h "0y8zim1022gz4x95m3b8950hgg5hy11q5p0453qcpy5q6wcx6b0z")))

(define-public crate-brix_commands-0.1.1 (c (n "brix_commands") (v "0.1.1") (d (list (d (n "brix_cli") (r "^0.3.3") (d #t) (k 0)) (d (n "brix_common") (r "^0.1.1") (d #t) (k 0)) (d (n "brix_errors") (r "^0.1.1") (d #t) (k 0)) (d (n "brix_processor") (r "^0.1.1") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dialoguer") (r "^0") (d #t) (k 0)) (d (n "execute") (r "^0.2.9") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.7.0") (d #t) (k 0)) (d (n "log") (r "^0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0") (d #t) (k 2)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "spectral") (r "^0") (d #t) (k 2)) (d (n "validator") (r "^0.14.0") (f (quote ("derive"))) (d #t) (k 0)))) (h "0lq4qvv63s05kmn0zjfxbclcd13dpwhfqppab9cin5gxjj8cd010")))

(define-public crate-brix_commands-0.1.2 (c (n "brix_commands") (v "0.1.2") (d (list (d (n "brix_cli") (r "^0.4") (d #t) (k 0)) (d (n "brix_common") (r "^0.1.2") (d #t) (k 0)) (d (n "brix_errors") (r "^0.2") (d #t) (k 0)) (d (n "brix_processor") (r "^0.1.2") (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "dialoguer") (r "^0") (d #t) (k 0)) (d (n "execute") (r "^0.2.9") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.7") (d #t) (k 0)) (d (n "fs_extra") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "spectral") (r "^0") (d #t) (k 2)) (d (n "validator") (r "^0.14") (f (quote ("derive"))) (d #t) (k 0)))) (h "1yhw2pjapdy9avgm0s285mwj1r7l7qk03ivvi5a7ljsxa2jxj2pn")))

(define-public crate-brix_commands-0.1.3 (c (n "brix_commands") (v "0.1.3") (d (list (d (n "brix_cli") (r "^0.4") (d #t) (k 0)) (d (n "brix_common") (r "^0.1.3") (d #t) (k 0)) (d (n "brix_errors") (r "^0.2") (d #t) (k 0)) (d (n "brix_processor") (r "^0.1.3") (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "dialoguer") (r "^0") (d #t) (k 0)) (d (n "execute") (r "^0.2.9") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.7") (d #t) (k 0)) (d (n "fs_extra") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "spectral") (r "^0") (d #t) (k 2)) (d (n "validator") (r "^0.14") (f (quote ("derive"))) (d #t) (k 0)))) (h "0vbzbby2yp3gbpia77v22xm2lw6ircanyflr1ld7pc72q32700n1")))

