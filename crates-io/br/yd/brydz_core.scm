(define-module (crates-io br yd brydz_core) #:use-module (crates-io))

(define-public crate-brydz_core-0.1.0 (c (n "brydz_core") (v "0.1.0") (d (list (d (n "amfiteatr_core") (r "^0.1.0") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "amfiteatr_rl") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "approx") (r "^0.5.1") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "karty") (r "^0.1.1") (f (quote ("register" "parse" "speedy" "serde" "random" "parse"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (d #t) (k 0)) (d (n "num-rational") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "postcard") (r "^1.0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ron") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.5.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)) (d (n "smallvec") (r "^1.11.2") (o #t) (d #t) (k 0)) (d (n "speedy") (r "^0.8.6") (o #t) (d #t) (k 0)) (d (n "statrs") (r "^0.16.0") (d #t) (k 0)) (d (n "tch") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("net" "rt" "rt-multi-thread" "io-util" "sync"))) (o #t) (d #t) (k 0)))) (h "0a4sx2z0j4x25k2asf1zg6a9mk4a63xf7wdxc9vpfnldibiyy19g") (f (quote (("parse")))) (y #t) (s 2) (e (quote (("torch" "dep:amfiteatr_rl" "dep:tch" "amfiteatr") ("speedy" "dep:speedy") ("serde_ron" "dep:serde" "serde" "dep:ron") ("serde_derive" "dep:serde" "serde" "dep:ron") ("serde_dedicate" "dep:serde" "serde" "dep:ron") ("serde" "dep:serde" "parse") ("amfiteatr" "dep:amfiteatr_core" "dep:smallvec" "dep:log" "dep:num-rational"))))))

(define-public crate-brydz_core-0.1.1 (c (n "brydz_core") (v "0.1.1") (d (list (d (n "amfiteatr_core") (r "^0.1.0") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "amfiteatr_rl") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "approx") (r "^0.5.1") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "karty") (r "^0.1.1") (f (quote ("register" "parse" "speedy" "serde" "random" "parse"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (d #t) (k 0)) (d (n "num-rational") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "postcard") (r "^1.0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ron") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.5.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)) (d (n "smallvec") (r "^1.11.2") (o #t) (d #t) (k 0)) (d (n "speedy") (r "^0.8.6") (o #t) (d #t) (k 0)) (d (n "statrs") (r "^0.16.0") (d #t) (k 0)) (d (n "tch") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("net" "rt" "rt-multi-thread" "io-util" "sync"))) (o #t) (d #t) (k 0)))) (h "1mfp3mf2ya534z7nc0rk07pqa4dbk855gq949ibx7frbwjlpp5is") (f (quote (("parse")))) (s 2) (e (quote (("torch" "dep:amfiteatr_rl" "dep:tch" "amfiteatr") ("speedy" "dep:speedy") ("serde_ron" "dep:serde" "serde" "dep:ron") ("serde_derive" "dep:serde" "serde" "dep:ron") ("serde_dedicate" "dep:serde" "serde" "dep:ron") ("serde" "dep:serde" "parse") ("amfiteatr" "dep:amfiteatr_core" "dep:smallvec" "dep:log" "dep:num-rational"))))))

(define-public crate-brydz_core-0.2.0 (c (n "brydz_core") (v "0.2.0") (d (list (d (n "amfiteatr_core") (r "^0.2.0") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "amfiteatr_rl") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "approx") (r "^0.5.1") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "karty") (r "^0.1.1") (f (quote ("register" "parse" "speedy" "serde" "random" "parse"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (d #t) (k 0)) (d (n "num-rational") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "postcard") (r "^1.0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ron") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.5.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)) (d (n "smallvec") (r "^1.11.2") (o #t) (d #t) (k 0)) (d (n "speedy") (r "^0.8.6") (o #t) (d #t) (k 0)) (d (n "statrs") (r "^0.16.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("net" "rt" "rt-multi-thread" "io-util" "sync"))) (o #t) (d #t) (k 0)))) (h "0p1mdqxy156cn4iwbqnvgc2ikj3al95psfzrk4hfj86rm6nlqxfp") (f (quote (("parse")))) (s 2) (e (quote (("torch" "dep:amfiteatr_rl" "amfiteatr") ("speedy" "dep:speedy") ("serde_ron" "dep:serde" "serde" "dep:ron") ("serde_derive" "dep:serde" "serde" "dep:ron") ("serde_dedicate" "dep:serde" "serde" "dep:ron") ("serde" "dep:serde" "parse") ("amfiteatr" "dep:amfiteatr_core" "dep:smallvec" "dep:log" "dep:num-rational"))))))

(define-public crate-brydz_core-0.3.0 (c (n "brydz_core") (v "0.3.0") (d (list (d (n "amfiteatr_core") (r "^0.3.0") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "amfiteatr_rl") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "approx") (r "^0.5.1") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "karty") (r "^0.1.1") (f (quote ("register" "parse" "speedy" "serde" "random" "parse"))) (d #t) (k 0)) (d (n "log") (r "^0.4.21") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (d #t) (k 0)) (d (n "num-rational") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "postcard") (r "^1.0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ron") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.5.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "smallvec") (r "^1.13.1") (o #t) (d #t) (k 0)) (d (n "speedy") (r "^0.8.7") (o #t) (d #t) (k 0)) (d (n "statrs") (r "^0.16.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.58") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("net" "rt" "rt-multi-thread" "io-util" "sync"))) (o #t) (d #t) (k 0)))) (h "0wq6zg2gbpyiv68qcm47lhfn32zv6s52w1cif28mb1al4vn3hdk3") (f (quote (("parse")))) (s 2) (e (quote (("torch" "dep:amfiteatr_rl" "amfiteatr") ("speedy" "dep:speedy") ("serde_ron" "dep:serde" "serde" "dep:ron") ("serde_derive" "dep:serde" "serde" "dep:ron") ("serde_dedicate" "dep:serde" "serde" "dep:ron") ("serde" "dep:serde" "parse") ("amfiteatr" "dep:amfiteatr_core" "dep:smallvec" "dep:log" "dep:num-rational"))))))

(define-public crate-brydz_core-0.4.0 (c (n "brydz_core") (v "0.4.0") (d (list (d (n "amfiteatr_core") (r "^0.4.0") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "amfiteatr_rl") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "approx") (r "^0.5.1") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "enum-map") (r "^2.7.3") (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "karty") (r "^0.2.0") (f (quote ("register" "parse" "speedy" "serde" "random" "parse"))) (d #t) (k 0)) (d (n "log") (r "^0.4.21") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (d #t) (k 0)) (d (n "num-rational") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "postcard") (r "^1.0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ron") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.5.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.115") (d #t) (k 0)) (d (n "smallvec") (r "^1.13.1") (o #t) (d #t) (k 0)) (d (n "speedy") (r "^0.8.7") (o #t) (d #t) (k 0)) (d (n "statrs") (r "^0.16.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.58") (d #t) (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("net" "rt" "rt-multi-thread" "io-util" "sync"))) (o #t) (d #t) (k 0)))) (h "169hr79kxisf6d9dlzz06dr89630df9nbx2ldbf5d8mpp2f068vq") (f (quote (("parse")))) (s 2) (e (quote (("torch" "dep:amfiteatr_rl" "amfiteatr") ("speedy" "dep:speedy") ("serde_ron" "dep:serde" "serde" "dep:ron") ("serde_derive" "dep:serde" "serde" "dep:ron") ("serde_dedicate" "dep:serde" "serde" "dep:ron") ("serde" "dep:serde" "parse") ("amfiteatr" "dep:amfiteatr_core" "dep:smallvec" "dep:log" "dep:num-rational"))))))

(define-public crate-brydz_core-0.5.0 (c (n "brydz_core") (v "0.5.0") (d (list (d (n "amfiteatr_core") (r "^0.5.0") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "amfiteatr_rl") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "approx") (r "^0.5.1") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "enum-map") (r "^2.7.3") (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "karty") (r "^0.2.1") (f (quote ("register" "parse" "speedy" "serde" "random" "parse"))) (d #t) (k 0)) (d (n "log") (r "^0.4.21") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (d #t) (k 0)) (d (n "num-rational") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "postcard") (r "^1.0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ron") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.5.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.115") (d #t) (k 0)) (d (n "smallvec") (r "^1.13.1") (o #t) (d #t) (k 0)) (d (n "speedy") (r "^0.8.7") (o #t) (d #t) (k 0)) (d (n "statrs") (r "^0.16.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.58") (d #t) (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("net" "rt" "rt-multi-thread" "io-util" "sync"))) (o #t) (d #t) (k 0)))) (h "0g1mn377xhjwg97jm79cc7n2px27vi6a742w2fy2mnhwalqrcizm") (f (quote (("parse")))) (s 2) (e (quote (("torch" "dep:amfiteatr_rl" "amfiteatr") ("speedy" "dep:speedy") ("serde_ron" "dep:serde" "serde" "dep:ron") ("serde_derive" "dep:serde" "serde" "dep:ron") ("serde_dedicate" "dep:serde" "serde" "dep:ron") ("serde" "dep:serde" "parse") ("amfiteatr" "dep:amfiteatr_core" "dep:smallvec" "dep:log" "dep:num-rational"))))))

