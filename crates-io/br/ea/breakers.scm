(define-module (crates-io br ea breakers) #:use-module (crates-io))

(define-public crate-breakers-0.1.0 (c (n "breakers") (v "0.1.0") (d (list (d (n "cc") (r "^1.0.83") (d #t) (k 1)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cpal") (r "^0.15.2") (f (quote ("jack"))) (d #t) (k 0)) (d (n "dasp_sample") (r "^0.11.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "hound") (r "^3.5.1") (d #t) (k 0)) (d (n "hound") (r "^3.5.1") (d #t) (k 1)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20") (d #t) (k 0)) (d (n "tree-sitter-breaker") (r "^0.2") (d #t) (k 0)))) (h "00mzpf7x9qls78g88jmkyw23y3vxvd7b30r44ah6paql51xp5qzq")))

(define-public crate-breakers-0.1.1 (c (n "breakers") (v "0.1.1") (d (list (d (n "cc") (r "^1.0.83") (d #t) (k 1)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cpal") (r "^0.15.2") (f (quote ("jack"))) (d #t) (k 0)) (d (n "dasp_sample") (r "^0.11.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "hound") (r "^3.5.1") (d #t) (k 0)) (d (n "hound") (r "^3.5.1") (d #t) (k 1)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20") (d #t) (k 0)) (d (n "tree-sitter-breaker") (r "^0.2") (d #t) (k 0)))) (h "1ygvi1qcdls8wss8fpqlkpmixxnd183zrv8z417w8qwyggy58m8p")))

(define-public crate-breakers-0.1.2 (c (n "breakers") (v "0.1.2") (d (list (d (n "cc") (r "^1.0.83") (d #t) (k 1)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cpal") (r "^0.15.2") (f (quote ("jack"))) (d #t) (k 0)) (d (n "dasp_sample") (r "^0.11.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "hound") (r "^3.5.1") (d #t) (k 0)) (d (n "hound") (r "^3.5.1") (d #t) (k 1)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20") (d #t) (k 0)) (d (n "tree-sitter-breaker") (r "^0.2") (d #t) (k 0)))) (h "01bg7skgiimy6m5amdcnlsm64dan5x5fbiyv7igl7rk9hcfirhkm")))

(define-public crate-breakers-0.1.3 (c (n "breakers") (v "0.1.3") (d (list (d (n "cc") (r "^1.0.83") (d #t) (k 1)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cpal") (r "^0.15.2") (f (quote ("jack"))) (d #t) (k 0)) (d (n "dasp_sample") (r "^0.11.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "hound") (r "^3.5.1") (d #t) (k 0)) (d (n "hound") (r "^3.5.1") (d #t) (k 1)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20") (d #t) (k 0)) (d (n "tree-sitter-breaker") (r "^0.2") (d #t) (k 0)))) (h "01zdyn1xf05gh5fakzv656nkfqsz758xwg1ykzvfdpd7zz7my7nn")))

(define-public crate-breakers-0.1.4 (c (n "breakers") (v "0.1.4") (d (list (d (n "cc") (r "^1.0.83") (d #t) (k 1)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cpal") (r "^0.15.2") (f (quote ("jack"))) (d #t) (k 0)) (d (n "dasp_sample") (r "^0.11.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "hound") (r "^3.5.1") (d #t) (k 0)) (d (n "hound") (r "^3.5.1") (d #t) (k 1)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "notify") (r "^6.1.1") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20") (d #t) (k 0)) (d (n "tree-sitter-breaker") (r "^0.2") (d #t) (k 0)))) (h "1m576skjc7ilfqwg9mq1qpb5phqvaka4jl93vjlip9hdyw3g4dhn")))

