(define-module (crates-io br ea breadthread) #:use-module (crates-io))

(define-public crate-breadthread-0.1.0 (c (n "breadthread") (v "0.1.0") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "flume") (r "^0.10") (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "orphan-crippler") (r "^0.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (o #t) (d #t) (k 0)))) (h "0pn2war64a96lrvrvzz7nckhnila69zf7bd0s6l8smk3zvmi22fn") (f (quote (("pl" "parking_lot" "once_cell/parking_lot" "orphan-crippler/parking_lot"))))))

(define-public crate-breadthread-0.1.1 (c (n "breadthread") (v "0.1.1") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "flume") (r "^0.10") (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "orphan-crippler") (r "^0.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (o #t) (d #t) (k 0)))) (h "1ksgwih4275sbcwgi99a0adh49cr2hws35drs8xax86l7c4h02mk") (f (quote (("pl" "parking_lot" "once_cell/parking_lot" "orphan-crippler/parking_lot"))))))

(define-public crate-breadthread-0.1.3 (c (n "breadthread") (v "0.1.3") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "flume") (r "^0.10") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "orphan-crippler") (r "^0.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "thread-safe") (r "^0.1.1") (d #t) (k 0)))) (h "0zf0fzki2qx8j07vzc9lg72b63wxd2zh0slif9m4qbgixhpp031w") (f (quote (("pl" "parking_lot" "once_cell/parking_lot" "orphan-crippler/parking_lot"))))))

(define-public crate-breadthread-0.1.4 (c (n "breadthread") (v "0.1.4") (d (list (d (n "ahash") (r "^0.7.6") (f (quote ("compile-time-rng"))) (k 0)) (d (n "atomic-waker") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.9.1") (d #t) (k 0)) (d (n "flume") (r "^0.10.13") (o #t) (k 0)) (d (n "hashbrown") (r "^0.12.1") (k 0)) (d (n "once_cell") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "parking") (r "^2.0.0") (d #t) (k 0)) (d (n "spin") (r "^0.9.3") (f (quote ("lazy" "mutex" "once"))) (k 0)) (d (n "tracing") (r "^0.1.35") (k 0)) (d (n "loom") (r "^0.5") (d #t) (t "cfg(loom)") (k 0)))) (h "1nqkpa4zdgkn857w0y13srww0bx23nz54n6gyn5f8015257j6nab") (f (quote (("std" "ahash/std" "flume" "tracing/std" "once_cell") ("fallback") ("default" "std"))))))

