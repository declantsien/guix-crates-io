(define-module (crates-io it sy itsybitsy_m4) #:use-module (crates-io))

(define-public crate-itsybitsy_m4-0.1.0 (c (n "itsybitsy_m4") (v "0.1.0") (d (list (d (n "apa102-spi") (r "~0.3") (d #t) (k 0)) (d (n "atsamd-hal") (r "~0.7") (k 0)) (d (n "bitbang-hal") (r "~0.3") (d #t) (k 0)) (d (n "cortex-m") (r "~0.6") (d #t) (k 0)) (d (n "cortex-m-rt") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "cortex-m-rtfm") (r "~0.4") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "~0.3") (d #t) (k 2)) (d (n "embedded-hal") (r "~0.2") (d #t) (k 0)) (d (n "nb") (r "~0.1") (d #t) (k 0)) (d (n "panic-halt") (r "~0.2") (d #t) (k 2)) (d (n "panic-semihosting") (r "~0.5") (d #t) (k 2)) (d (n "panic_rtt") (r "~0.2") (d #t) (k 2)) (d (n "smart-leds") (r "~0.2") (d #t) (k 0)) (d (n "smart-leds-trait") (r "~0.2") (d #t) (k 0)))) (h "1hm59bkf1131587fkv88lp52h5j8fdhgpkjcfj4wk2pn3q3wvg81") (f (quote (("unproven" "atsamd-hal/unproven") ("rt" "cortex-m-rt" "atsamd-hal/samd51g19a-rt") ("default" "rt" "atsamd-hal/samd51g19a" "atsamd-hal/samd51" "atsamd-hal/unproven"))))))

(define-public crate-itsybitsy_m4-0.1.1 (c (n "itsybitsy_m4") (v "0.1.1") (d (list (d (n "apa102-spi") (r "~0.3") (d #t) (k 0)) (d (n "atsamd-hal") (r "~0.7") (k 0)) (d (n "bitbang-hal") (r "~0.3") (d #t) (k 0)) (d (n "cortex-m") (r "~0.6") (d #t) (k 0)) (d (n "cortex-m-rt") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "cortex-m-rtfm") (r "~0.4") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "~0.3") (d #t) (k 2)) (d (n "embedded-hal") (r "~0.2") (d #t) (k 0)) (d (n "nb") (r "~0.1") (d #t) (k 0)) (d (n "panic-halt") (r "~0.2") (d #t) (k 2)) (d (n "panic-semihosting") (r "~0.5") (d #t) (k 2)) (d (n "panic_rtt") (r "~0.2") (d #t) (k 2)) (d (n "smart-leds") (r "~0.2") (d #t) (k 0)) (d (n "smart-leds-trait") (r "~0.2") (d #t) (k 0)) (d (n "usb-device") (r "~0.2") (o #t) (d #t) (k 0)) (d (n "usbd-serial") (r "~0.1") (o #t) (d #t) (k 0)))) (h "0qj5zic3lpfbi4crvfb2zb1mpb89layzbgk7fz43a9xq0pza7b96") (f (quote (("use_uart_debug" "atsamd-hal/use_uart_debug") ("usb" "atsamd-hal/usb" "usb-device" "usbd-serial") ("unproven" "atsamd-hal/unproven") ("rt" "cortex-m-rt" "atsamd-hal/samd51g19a-rt") ("default" "rt" "atsamd-hal/samd51g19a" "atsamd-hal/samd51" "atsamd-hal/unproven"))))))

(define-public crate-itsybitsy_m4-0.1.2 (c (n "itsybitsy_m4") (v "0.1.2") (d (list (d (n "apa102-spi") (r "~0.3") (d #t) (k 0)) (d (n "atsamd-hal") (r "~0.7") (k 0)) (d (n "bitbang-hal") (r "~0.3") (d #t) (k 0)) (d (n "cortex-m") (r "~0.6") (d #t) (k 0)) (d (n "cortex-m-rt") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "cortex-m-rtfm") (r "~0.4") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "~0.3") (d #t) (k 2)) (d (n "embedded-hal") (r "~0.2") (d #t) (k 0)) (d (n "nb") (r "~0.1") (d #t) (k 0)) (d (n "panic-halt") (r "~0.2") (d #t) (k 2)) (d (n "panic-semihosting") (r "~0.5") (d #t) (k 2)) (d (n "panic_rtt") (r "~0.2") (d #t) (k 2)) (d (n "smart-leds") (r "~0.2") (d #t) (k 0)) (d (n "smart-leds-trait") (r "~0.2") (d #t) (k 0)) (d (n "usb-device") (r "~0.2") (o #t) (d #t) (k 0)) (d (n "usbd-serial") (r "~0.1") (o #t) (d #t) (k 0)))) (h "0dwf4f3brgizarmvp4djk1kdwqlvkxr16w78cxiz0j0maiz15dff") (f (quote (("use_uart_debug" "atsamd-hal/use_uart_debug") ("usb" "atsamd-hal/usb" "usb-device" "usbd-serial") ("unproven" "atsamd-hal/unproven") ("rt" "cortex-m-rt" "atsamd-hal/samd51g19a-rt") ("default" "rt" "atsamd-hal/samd51g19a" "atsamd-hal/samd51" "atsamd-hal/unproven"))))))

(define-public crate-itsybitsy_m4-0.2.0 (c (n "itsybitsy_m4") (v "0.2.0") (d (list (d (n "apa102-spi") (r "~0.3") (d #t) (k 0)) (d (n "atsamd-hal") (r "~0.8") (k 0)) (d (n "bitbang-hal") (r "~0.3") (d #t) (k 0)) (d (n "cortex-m") (r "~0.6") (d #t) (k 0)) (d (n "cortex-m-rt") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "cortex-m-rtfm") (r "~0.4") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "~0.3") (d #t) (k 2)) (d (n "embedded-hal") (r "~0.2") (d #t) (k 0)) (d (n "nb") (r "~0.1") (d #t) (k 0)) (d (n "panic-halt") (r "~0.2") (d #t) (k 2)) (d (n "panic-semihosting") (r "~0.5") (d #t) (k 2)) (d (n "panic_rtt") (r "~0.2") (d #t) (k 2)) (d (n "smart-leds") (r "~0.2") (d #t) (k 0)) (d (n "smart-leds-trait") (r "~0.2") (d #t) (k 0)) (d (n "usb-device") (r "~0.2") (o #t) (d #t) (k 0)) (d (n "usbd-serial") (r "~0.1") (o #t) (d #t) (k 0)))) (h "0xmh90vl85mifw5pxyagyd4pq042ijrx51c01w5hascmrkcn48jl") (f (quote (("use_uart_debug" "atsamd-hal/use_uart_debug") ("usb" "atsamd-hal/usb" "usb-device" "usbd-serial") ("unproven" "atsamd-hal/unproven") ("rt" "cortex-m-rt" "atsamd-hal/samd51g19a-rt") ("default" "rt" "atsamd-hal/samd51g19a" "atsamd-hal/samd51" "atsamd-hal/unproven"))))))

(define-public crate-itsybitsy_m4-0.3.0 (c (n "itsybitsy_m4") (v "0.3.0") (d (list (d (n "apa102-spi") (r "~0.3") (d #t) (k 0)) (d (n "atsamd-hal") (r "~0.9") (k 0)) (d (n "bitbang-hal") (r "~0.3") (d #t) (k 0)) (d (n "cortex-m") (r "~0.6") (d #t) (k 0)) (d (n "cortex-m-rt") (r "~0.6.12") (o #t) (d #t) (k 0)) (d (n "cortex-m-rtic") (r "~0.5.1") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "~0.3") (d #t) (k 2)) (d (n "embedded-hal") (r "~0.2.3") (d #t) (k 0)) (d (n "nb") (r "~0.1") (d #t) (k 0)) (d (n "panic-halt") (r "~0.2") (d #t) (k 2)) (d (n "panic-semihosting") (r "~0.5") (d #t) (k 2)) (d (n "panic_rtt") (r "~0.2") (d #t) (k 2)) (d (n "smart-leds") (r "~0.3") (d #t) (k 0)) (d (n "usb-device") (r "~0.2") (o #t) (d #t) (k 0)) (d (n "usbd-serial") (r "~0.1") (o #t) (d #t) (k 0)))) (h "15zhihbxikl1n10lcy6vwf5cdgqx2yhw45x9vbz08kg1awd3nqyi") (f (quote (("use_uart_debug" "atsamd-hal/use_uart_debug") ("usb" "atsamd-hal/usb" "usb-device" "usbd-serial") ("unproven" "atsamd-hal/unproven") ("rt" "cortex-m-rt" "atsamd-hal/samd51g19a-rt") ("default" "rt" "atsamd-hal/samd51g19a" "atsamd-hal/samd51" "atsamd-hal/unproven"))))))

(define-public crate-itsybitsy_m4-0.3.1 (c (n "itsybitsy_m4") (v "0.3.1") (d (list (d (n "apa102-spi") (r "^0.3") (d #t) (k 0)) (d (n "atsamd-hal") (r "^0.10") (k 0)) (d (n "bitbang-hal") (r "^0.3") (d #t) (k 0)) (d (n "cortex-m") (r "^0.6") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.12") (o #t) (d #t) (k 0)) (d (n "cortex-m-rtic") (r "^0.5.1") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (d #t) (k 0)) (d (n "nb") (r "^0.1") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2") (d #t) (k 2)) (d (n "panic-semihosting") (r "^0.5") (d #t) (k 2)) (d (n "panic_rtt") (r "^0.2") (d #t) (k 2)) (d (n "smart-leds") (r "^0.3") (d #t) (k 0)) (d (n "usb-device") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "usbd-serial") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0iny46jqzyp4nflfkj6ivvzdm7flbcxy30sdcirf1mki19n1lcbx") (f (quote (("use_uart_debug" "atsamd-hal/use_uart_debug") ("usb" "atsamd-hal/usb" "usb-device" "usbd-serial") ("unproven" "atsamd-hal/unproven") ("rt" "cortex-m-rt" "atsamd-hal/samd51g-rt") ("default" "rt" "atsamd-hal/samd51g" "atsamd-hal/samd51" "atsamd-hal/unproven"))))))

(define-public crate-itsybitsy_m4-0.4.0 (c (n "itsybitsy_m4") (v "0.4.0") (d (list (d (n "apa102-spi") (r "^0.3") (d #t) (k 0)) (d (n "atsamd-hal") (r "^0.11") (k 0)) (d (n "bitbang-hal") (r "^0.3") (d #t) (k 0)) (d (n "cortex-m") (r "^0.6") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.12") (o #t) (d #t) (k 0)) (d (n "cortex-m-rtic") (r "^0.5.1") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (d #t) (k 0)) (d (n "nb") (r "^0.1") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2") (d #t) (k 2)) (d (n "panic-semihosting") (r "^0.5") (d #t) (k 2)) (d (n "panic_rtt") (r "^0.2") (d #t) (k 2)) (d (n "smart-leds") (r "^0.3") (d #t) (k 0)) (d (n "usb-device") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "usbd-serial") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0hzhj09bjfkardzaxv7hhfhdp3vhrgrw4a1jhjl5acd2qshphrkk") (f (quote (("use_rtt" "atsamd-hal/use_rtt") ("usb" "atsamd-hal/usb" "usb-device" "usbd-serial") ("unproven" "atsamd-hal/unproven") ("rt" "cortex-m-rt" "atsamd-hal/samd51g-rt") ("default" "rt" "atsamd-hal/samd51g" "atsamd-hal/samd51" "atsamd-hal/unproven"))))))

(define-public crate-itsybitsy_m4-0.5.0 (c (n "itsybitsy_m4") (v "0.5.0") (d (list (d (n "apa102-spi") (r "^0.3") (d #t) (k 0)) (d (n "atsamd-hal") (r "^0.12") (k 0)) (d (n "bitbang-hal") (r "^0.3") (d #t) (k 0)) (d (n "cortex-m") (r "^0.6") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.12") (o #t) (d #t) (k 0)) (d (n "cortex-m-rtic") (r "^0.5.1") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (d #t) (k 0)) (d (n "nb") (r "^0.1") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2") (d #t) (k 2)) (d (n "panic-semihosting") (r "^0.5") (d #t) (k 2)) (d (n "panic_rtt") (r "^0.2") (d #t) (k 2)) (d (n "smart-leds") (r "^0.3") (d #t) (k 0)) (d (n "usb-device") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "usbd-serial") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0xn5s9h5vbz2xd2nr4sy8mw07pzy5bcn13w3azqy24rmr6z5fszd") (f (quote (("use_rtt" "atsamd-hal/use_rtt") ("usb" "atsamd-hal/usb" "usb-device" "usbd-serial") ("unproven" "atsamd-hal/unproven") ("rt" "cortex-m-rt" "atsamd-hal/samd51g-rt") ("default" "rt" "atsamd-hal/samd51g" "atsamd-hal/samd51" "atsamd-hal/unproven"))))))

(define-public crate-itsybitsy_m4-0.6.0 (c (n "itsybitsy_m4") (v "0.6.0") (d (list (d (n "apa102-spi") (r "^0.3") (d #t) (k 0)) (d (n "atsamd-hal") (r "^0.13") (k 0)) (d (n "bitbang-hal") (r "^0.3") (d #t) (k 0)) (d (n "cortex-m") (r "^0.6") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.12") (o #t) (d #t) (k 0)) (d (n "cortex-m-rtic") (r "^0.5.1") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (d #t) (k 0)) (d (n "nb") (r "^0.1") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2") (d #t) (k 2)) (d (n "panic-semihosting") (r "^0.5") (d #t) (k 2)) (d (n "panic_rtt") (r "^0.2") (d #t) (k 2)) (d (n "smart-leds") (r "^0.3") (d #t) (k 0)) (d (n "usb-device") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "usbd-serial") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0yf2s6cgndm78rbgcg51y1p4akwfrpj5miz2ba0fbm1hmdngf2bn") (f (quote (("use_rtt" "atsamd-hal/use_rtt") ("usb" "atsamd-hal/usb" "usb-device" "usbd-serial") ("unproven" "atsamd-hal/unproven") ("rt" "cortex-m-rt" "atsamd-hal/samd51g-rt") ("default" "rt" "atsamd-hal/samd51g" "atsamd-hal/samd51" "atsamd-hal/unproven"))))))

(define-public crate-itsybitsy_m4-0.7.0 (c (n "itsybitsy_m4") (v "0.7.0") (d (list (d (n "apa102-spi") (r "^0.3") (d #t) (k 0)) (d (n "atsamd-hal") (r "^0.14") (k 0)) (d (n "bitbang-hal") (r "^0.3") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7") (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "cortex-m-rtic") (r "^0.5.1") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3") (d #t) (k 2)) (d (n "panic-halt") (r "^0.2") (d #t) (k 2)) (d (n "panic-semihosting") (r "^0.5") (d #t) (k 2)) (d (n "smart-leds") (r "^0.3") (d #t) (k 0)) (d (n "usb-device") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "usbd-serial") (r "^0.1") (d #t) (k 2)))) (h "1rgr66b4xbhjc99fi6qdm18mmqsnq1kg55dyrkz5cxpcwcg85zlg") (f (quote (("use_rtt" "atsamd-hal/use_rtt") ("usb" "atsamd-hal/usb" "usb-device") ("unproven" "atsamd-hal/unproven") ("rt" "cortex-m-rt" "atsamd-hal/samd51g-rt") ("default" "rt" "atsamd-hal/samd51g" "atsamd-hal/samd51" "atsamd-hal/unproven"))))))

(define-public crate-itsybitsy_m4-0.8.0 (c (n "itsybitsy_m4") (v "0.8.0") (d (list (d (n "apa102-spi") (r "^0.3") (d #t) (k 0)) (d (n "atsamd-hal") (r "^0.15") (k 0)) (d (n "bitbang-hal") (r "^0.3") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7") (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "panic-halt") (r "^0.2") (d #t) (k 2)) (d (n "panic-semihosting") (r "^0.6") (d #t) (k 2)) (d (n "smart-leds") (r "^0.3") (d #t) (k 0)) (d (n "usb-device") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "usbd-serial") (r "^0.1") (d #t) (k 2)))) (h "1h6m5ni32nghms4d48aiadl4xf7062sp8i3ivkng7jhzj951bsxj") (f (quote (("use_rtt" "atsamd-hal/use_rtt") ("usb" "atsamd-hal/usb" "usb-device") ("unproven" "atsamd-hal/unproven") ("rt" "cortex-m-rt" "atsamd-hal/samd51g-rt") ("default" "rt" "atsamd-hal/samd51g" "atsamd-hal/unproven"))))))

