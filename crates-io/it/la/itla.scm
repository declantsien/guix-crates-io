(define-module (crates-io it la itla) #:use-module (crates-io))

(define-public crate-itla-0.1.0 (c (n "itla") (v "0.1.0") (d (list (d (n "defmt") (r "^0.2") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.8") (d #t) (k 2)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "nb") (r "^0.1") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 2)))) (h "1lnz1kfqr160xjh6zpz1waisahni9pc6b5z115ip698v6vp0k9my") (f (quote (("ppcl200") ("defmt-warn") ("defmt-trace") ("defmt-info") ("defmt-error") ("defmt-default") ("defmt-debug"))))))

(define-public crate-itla-0.1.1 (c (n "itla") (v "0.1.1") (d (list (d (n "defmt") (r "^0.2") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.8") (d #t) (k 2)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "nb") (r "^0.1") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 2)))) (h "0xll9mm7507y5qng4m0r98z23gsbfzmlb0agvf8rd7vhkkyhpfg8") (f (quote (("ppcl200") ("defmt-warn") ("defmt-trace") ("defmt-info") ("defmt-error") ("defmt-default") ("defmt-debug"))))))

(define-public crate-itla-0.1.2 (c (n "itla") (v "0.1.2") (d (list (d (n "defmt") (r "^0.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.8") (d #t) (k 2)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "nb") (r "^1.0") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 2)))) (h "0c1xf30jxzyrdnabpfdwl2d209wpg9nk1271ksxg5xs74v9fqzxn") (f (quote (("ppcl200") ("defmt-warn") ("defmt-trace") ("defmt-info") ("defmt-error") ("defmt-default") ("defmt-debug"))))))

