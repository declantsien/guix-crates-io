(define-module (crates-io la zy lazy-regex) #:use-module (crates-io))

(define-public crate-lazy-regex-0.1.0 (c (n "lazy-regex") (v "0.1.0") (d (list (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)))) (h "1ns44f652g088ir6n2b4vbb0888083bh3pkj2kdg0q7lb9c2p5nx")))

(define-public crate-lazy-regex-0.1.1 (c (n "lazy-regex") (v "0.1.1") (d (list (d (n "lazy_static") (r "^1") (d #t) (k 0)))) (h "0l27zyavmlpzrxb42pyqq49f2855lw9hmh4vwzsmgbznknijf2nc")))

(define-public crate-lazy-regex-0.1.2 (c (n "lazy-regex") (v "0.1.2") (d (list (d (n "lazy_static") (r "^1") (d #t) (k 0)))) (h "1zr4s2cv9l2d6bf7j1kablfsbl27sr78l3dys6fzv611qrv15n83")))

(define-public crate-lazy-regex-0.1.3 (c (n "lazy-regex") (v "0.1.3") (d (list (d (n "lazy_static") (r "^1") (d #t) (k 0)))) (h "0f12g0i6l5ipcrcwms9283j2j9njbyqc1z176ncd5p61db19p020")))

(define-public crate-lazy-regex-0.1.4 (c (n "lazy-regex") (v "0.1.4") (d (list (d (n "lazy_static") (r "^1") (d #t) (k 0)))) (h "03s75cfjrkwqmlqdvnvz7y6qhk8jbmb4p6l9la8z2w27rx12p8w3")))

(define-public crate-lazy-regex-1.0.0 (c (n "lazy-regex") (v "1.0.0") (d (list (d (n "lazy_static") (r "^1") (d #t) (k 0)))) (h "10zjzil9y7gclc7x9ixiipnp42nyxzirhq5jxblswzz83vc5hhvx")))

(define-public crate-lazy-regex-1.1.0 (c (n "lazy-regex") (v "1.1.0") (d (list (d (n "once_cell") (r "^1.7") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)))) (h "002fnbiib0f29f1wl796b54ml4jk3bh6rka8cks4mrzfx9r2cywj")))

(define-public crate-lazy-regex-2.0.0 (c (n "lazy-regex") (v "2.0.0") (d (list (d (n "once_cell") (r "^1.7") (d #t) (k 0)) (d (n "proc_macros") (r "^2.0.0") (d #t) (k 0) (p "lazy-regex-proc_macros")) (d (n "regex") (r "^1.5") (d #t) (k 0)))) (h "1i4xakca60n3z4fwgz4vkwnv38ji4ng2dglgryvwjnxd6q0narlx")))

(define-public crate-lazy-regex-2.0.1 (c (n "lazy-regex") (v "2.0.1") (d (list (d (n "once_cell") (r "^1.7") (d #t) (k 0)) (d (n "proc_macros") (r "^2.0.1") (d #t) (k 0) (p "lazy-regex-proc_macros")) (d (n "regex") (r "^1.5") (d #t) (k 0)))) (h "18smnic6sj97dm6l6cvhkjdb18qmdc0mi2wcj9c0yf95by389vjm")))

(define-public crate-lazy-regex-2.0.2 (c (n "lazy-regex") (v "2.0.2") (d (list (d (n "lazy-regex-proc_macros") (r "^2.0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.7") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)))) (h "1lb17gm8iqda5dqkbpgq7yn6ik3r7aky0nkd32f0lax8pjl3kkaw")))

(define-public crate-lazy-regex-2.1.0 (c (n "lazy-regex") (v "2.1.0") (d (list (d (n "lazy-regex-proc_macros") (r "^2.1.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.7") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)))) (h "07n4zz4fwlf8821mrncngax5s7z1pxwp0z4ly3wfsyywv3jg603v")))

(define-public crate-lazy-regex-2.2.0 (c (n "lazy-regex") (v "2.2.0") (d (list (d (n "lazy-regex-proc_macros") (r "^2.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.7") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)))) (h "1csn15x57k2xwgif6g8v8b9i2zw3pmn39k7wbzd947zmyiw89m09")))

(define-public crate-lazy-regex-2.2.1 (c (n "lazy-regex") (v "2.2.1") (d (list (d (n "lazy-regex-proc_macros") (r "^2.2.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.7") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)))) (h "0m2anc6knp9dndkyqqf7bd7dly7p3is5vgf0ln4fgxkj2bwril8p")))

(define-public crate-lazy-regex-2.2.2 (c (n "lazy-regex") (v "2.2.2") (d (list (d (n "lazy-regex-proc_macros") (r "^2.2.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.7") (d #t) (k 0)) (d (n "regex") (r "^1.5") (k 0)))) (h "0g9bksfbb9m53yjkmql00yxmablk200lcn7wjmzf4bdz7rvid6li") (f (quote (("unicode-segment" "regex/unicode-segment") ("unicode-script" "regex/unicode-script") ("unicode-perl" "regex/unicode-perl") ("unicode-gencat" "regex/unicode-gencat") ("unicode-case" "regex/unicode-case") ("unicode-bool" "regex/unicode-bool") ("unicode-age" "regex/unicode-age") ("unicode" "regex/unicode") ("std" "regex/std") ("perf-literal" "regex/perf-literal") ("perf-inline" "regex/perf-inline") ("perf-dfa" "regex/perf-dfa") ("perf-cache" "regex/perf-cache") ("perf" "regex/perf") ("default" "regex/default"))))))

(define-public crate-lazy-regex-2.3.0 (c (n "lazy-regex") (v "2.3.0") (d (list (d (n "lazy-regex-proc_macros") (r "^2.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.7") (d #t) (k 0)) (d (n "regex") (r "^1.5") (k 0)))) (h "0zfm5zrwbrld57irnvbsv2d6l42c9c1mmcjybi03jzgdnqp2zcdn") (f (quote (("unicode-segment" "regex/unicode-segment") ("unicode-script" "regex/unicode-script") ("unicode-perl" "regex/unicode-perl") ("unicode-gencat" "regex/unicode-gencat") ("unicode-case" "regex/unicode-case") ("unicode-bool" "regex/unicode-bool") ("unicode-age" "regex/unicode-age") ("unicode" "regex/unicode") ("std" "regex/std") ("perf-literal" "regex/perf-literal") ("perf-inline" "regex/perf-inline") ("perf-dfa" "regex/perf-dfa") ("perf-cache" "regex/perf-cache") ("perf" "regex/perf") ("default" "regex/default")))) (r "1.56")))

(define-public crate-lazy-regex-2.3.1 (c (n "lazy-regex") (v "2.3.1") (d (list (d (n "lazy-regex-proc_macros") (r "^2.3.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.7") (d #t) (k 0)) (d (n "regex") (r "^1.5") (k 0)))) (h "1k0p3svj4lmnlys0qi797mn59kh0phwi0iaajxxp44xlk2zmd5mf") (f (quote (("unicode-segment" "regex/unicode-segment") ("unicode-script" "regex/unicode-script") ("unicode-perl" "regex/unicode-perl") ("unicode-gencat" "regex/unicode-gencat") ("unicode-case" "regex/unicode-case") ("unicode-bool" "regex/unicode-bool") ("unicode-age" "regex/unicode-age") ("unicode" "regex/unicode") ("std" "regex/std") ("perf-literal" "regex/perf-literal") ("perf-inline" "regex/perf-inline") ("perf-dfa" "regex/perf-dfa") ("perf-cache" "regex/perf-cache") ("perf" "regex/perf") ("default" "regex/default")))) (r "1.56")))

(define-public crate-lazy-regex-2.3.2 (c (n "lazy-regex") (v "2.3.2") (d (list (d (n "lazy-regex-proc_macros") (r "^2.3.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "regex") (r "^1.7") (f (quote ("std"))) (k 0)))) (h "108r4namij1k5jc7jf4nyvlqk48pjgx2padrsdyq2p23rawfaji7") (f (quote (("unicode-segment" "regex/unicode-segment") ("unicode-script" "regex/unicode-script") ("unicode-perl" "regex/unicode-perl") ("unicode-gencat" "regex/unicode-gencat") ("unicode-case" "regex/unicode-case") ("unicode-bool" "regex/unicode-bool") ("unicode-age" "regex/unicode-age") ("unicode" "regex/unicode") ("std" "regex/std") ("perf-literal" "regex/perf-literal") ("perf-inline" "regex/perf-inline") ("perf-dfa" "regex/perf-dfa") ("perf-cache" "regex/perf-cache") ("perf" "regex/perf") ("default" "regex/default")))) (y #t) (r "1.65")))

(define-public crate-lazy-regex-2.4.0 (c (n "lazy-regex") (v "2.4.0") (d (list (d (n "lazy-regex-proc_macros") (r "^2.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "regex") (r "^1.7") (f (quote ("std"))) (k 0)))) (h "0a6fz205ih7wznbr0fm64k8i8k3zrdwjs2vfd1as0ds0q88s41pv") (f (quote (("unicode-segment" "regex/unicode-segment") ("unicode-script" "regex/unicode-script") ("unicode-perl" "regex/unicode-perl") ("unicode-gencat" "regex/unicode-gencat") ("unicode-case" "regex/unicode-case") ("unicode-bool" "regex/unicode-bool") ("unicode-age" "regex/unicode-age") ("unicode" "regex/unicode") ("std" "regex/std") ("perf-literal" "regex/perf-literal") ("perf-inline" "regex/perf-inline") ("perf-dfa" "regex/perf-dfa") ("perf-cache" "regex/perf-cache") ("perf" "regex/perf") ("default" "regex/default")))) (r "1.65")))

(define-public crate-lazy-regex-2.4.1 (c (n "lazy-regex") (v "2.4.1") (d (list (d (n "lazy-regex-proc_macros") (r "^2.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "regex") (r "^1.7") (f (quote ("std"))) (k 0)))) (h "14v7ayd3vpr8jp924z9ynh0f31gjy2ajf9ax8amqgzdyi4pxl1d5") (f (quote (("unicode-segment" "regex/unicode-segment") ("unicode-script" "regex/unicode-script") ("unicode-perl" "regex/unicode-perl") ("unicode-gencat" "regex/unicode-gencat") ("unicode-case" "regex/unicode-case") ("unicode-bool" "regex/unicode-bool") ("unicode-age" "regex/unicode-age") ("unicode" "regex/unicode") ("std" "regex/std") ("perf-literal" "regex/perf-literal") ("perf-inline" "regex/perf-inline") ("perf-dfa" "regex/perf-dfa") ("perf-cache" "regex/perf-cache") ("perf" "regex/perf") ("default" "regex/default")))) (r "1.56")))

(define-public crate-lazy-regex-2.5.0 (c (n "lazy-regex") (v "2.5.0") (d (list (d (n "lazy-regex-proc_macros") (r "^2.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "regex") (r "^1.7") (f (quote ("std"))) (k 0)))) (h "1m1mhaf7d488jx3gcy4yvmywi4zphpjqrs59gm5q39lfqqiw8qzz") (f (quote (("unicode-segment" "regex/unicode-segment") ("unicode-script" "regex/unicode-script") ("unicode-perl" "regex/unicode-perl") ("unicode-gencat" "regex/unicode-gencat") ("unicode-case" "regex/unicode-case") ("unicode-bool" "regex/unicode-bool") ("unicode-age" "regex/unicode-age") ("unicode" "regex/unicode") ("std" "regex/std") ("perf-literal" "regex/perf-literal") ("perf-inline" "regex/perf-inline") ("perf-dfa" "regex/perf-dfa") ("perf-cache" "regex/perf-cache") ("perf" "regex/perf") ("default" "regex/default")))) (r "1.56")))

(define-public crate-lazy-regex-3.0.0 (c (n "lazy-regex") (v "3.0.0") (d (list (d (n "lazy-regex-proc_macros") (r "^3.0.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "regex") (r "^1.9") (f (quote ("std"))) (o #t) (k 0)) (d (n "regex-lite") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1xb84pyyn6yr72bcgzac5l5xk3y3jsyqfzalns0iks77p75gw351") (f (quote (("unicode-segment" "regex/unicode-segment") ("unicode-script" "regex/unicode-script") ("unicode-perl" "regex/unicode-perl") ("unicode-gencat" "regex/unicode-gencat") ("unicode-case" "regex/unicode-case") ("unicode-bool" "regex/unicode-bool") ("unicode-age" "regex/unicode-age") ("unicode" "regex/unicode") ("std" "regex/std") ("perf-literal" "regex/perf-literal") ("perf-inline" "regex/perf-inline") ("perf-dfa" "regex/perf-dfa") ("perf-cache" "regex/perf-cache") ("perf" "regex/perf") ("lite" "regex-lite") ("default" "regex/default")))) (r "1.56")))

(define-public crate-lazy-regex-3.0.1 (c (n "lazy-regex") (v "3.0.1") (d (list (d (n "lazy-regex-proc_macros") (r "^3.0.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "regex") (r "^1.9") (f (quote ("std"))) (o #t) (k 0)) (d (n "regex-lite") (r "^0.1") (o #t) (d #t) (k 0)))) (h "009wj6651mf4x48zmnkr5g29aab54hj2m76nqgv9ya2ymlcisiap") (f (quote (("unicode-segment" "regex/unicode-segment") ("unicode-script" "regex/unicode-script") ("unicode-perl" "regex/unicode-perl") ("unicode-gencat" "regex/unicode-gencat") ("unicode-case" "regex/unicode-case") ("unicode-bool" "regex/unicode-bool") ("unicode-age" "regex/unicode-age") ("unicode" "regex/unicode") ("std" "regex/std") ("perf-literal" "regex/perf-literal") ("perf-inline" "regex/perf-inline") ("perf-dfa" "regex/perf-dfa") ("perf-cache" "regex/perf-cache") ("perf" "regex/perf") ("lite" "regex-lite") ("default" "regex/default")))) (r "1.56")))

(define-public crate-lazy-regex-3.0.2 (c (n "lazy-regex") (v "3.0.2") (d (list (d (n "lazy-regex-proc_macros") (r "^3.0.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "regex") (r "^1.9") (f (quote ("std"))) (o #t) (k 0)) (d (n "regex-lite") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1yh5igsvsydn5jibalmssi2v417ajzr2as1bd87hmxidgd0vs8z7") (f (quote (("unicode-segment" "regex/unicode-segment") ("unicode-script" "regex/unicode-script") ("unicode-perl" "regex/unicode-perl") ("unicode-gencat" "regex/unicode-gencat") ("unicode-case" "regex/unicode-case") ("unicode-bool" "regex/unicode-bool") ("unicode-age" "regex/unicode-age") ("unicode" "regex/unicode") ("std" "regex/std") ("perf-literal" "regex/perf-literal") ("perf-inline" "regex/perf-inline") ("perf-dfa" "regex/perf-dfa") ("perf-cache" "regex/perf-cache") ("perf" "regex/perf") ("lite" "regex-lite") ("default" "regex/default")))) (r "1.56")))

(define-public crate-lazy-regex-3.1.0 (c (n "lazy-regex") (v "3.1.0") (d (list (d (n "lazy-regex-proc_macros") (r "^3.1.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "regex") (r "^1.9") (o #t) (k 0)) (d (n "regex-lite") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0k3sjdcr13j119kgz1h7f1k2mnl787ig9ag436ymipxgjm2vw4jx") (f (quote (("unicode-segment" "regex/unicode-segment") ("unicode-script" "regex/unicode-script") ("unicode-perl" "regex/unicode-perl") ("unicode-gencat" "regex/unicode-gencat") ("unicode-case" "regex/unicode-case") ("unicode-bool" "regex/unicode-bool") ("unicode-age" "regex/unicode-age") ("unicode" "regex/unicode") ("std" "regex/std") ("perf-literal" "regex/perf-literal") ("perf-inline" "regex/perf-inline") ("perf-dfa" "regex/perf-dfa") ("perf-cache" "regex/perf-cache") ("perf" "regex/perf") ("lite" "regex-lite") ("default" "regex/default")))) (r "1.56")))

