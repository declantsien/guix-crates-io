(define-module (crates-io la pi lapin) #:use-module (crates-io))

(define-public crate-lapin-0.0.0 (c (n "lapin") (v "0.0.0") (h "0kpdzpp105a8zqibiyawnwx08gwvk6p683s9qfrbd3nlgpw3xlq4")))

(define-public crate-lapin-0.23.0 (c (n "lapin") (v "0.23.0") (d (list (d (n "amq-protocol") (r "^2.0.2") (k 0)) (d (n "amq-protocol-codegen") (r "^2.0.2") (d #t) (k 1)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures-preview") (r "= 0.3.0-alpha.16") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.8") (d #t) (k 0)) (d (n "runtime") (r "^0.3.0-alpha.5") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)))) (h "1hjqzsqfdnpfabrz5q70c0gghl4i2lpik2s11b0h104vlb8shggf") (f (quote (("tokio" "amq-protocol/tokio") ("rustls" "amq-protocol/rustls") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("futures" "futures-preview") ("default" "native-tls"))))))

(define-public crate-lapin-0.24.0 (c (n "lapin") (v "0.24.0") (d (list (d (n "amq-protocol") (r "^2.1.0") (k 0)) (d (n "amq-protocol-codegen") (r "^2.1.0") (d #t) (k 1)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "failure") (r "^0.1") (f (quote ("std"))) (k 0)) (d (n "futures") (r "= 0.3.0-alpha.17") (o #t) (d #t) (k 0) (p "futures-preview")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.8") (d #t) (k 0)) (d (n "runtime") (r "^0.3.0-alpha.6") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)))) (h "0aynphbnpwkmxr0739pw6rkf4adkhgsj4lydrb4wak428w4vqhxg") (f (quote (("tokio" "amq-protocol/tokio") ("rustls" "amq-protocol/rustls") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-0.24.1 (c (n "lapin") (v "0.24.1") (d (list (d (n "amq-protocol") (r "^2.1.0") (k 0)) (d (n "amq-protocol-codegen") (r "^2.1.0") (d #t) (k 1)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "failure") (r "^0.1") (f (quote ("std"))) (k 0)) (d (n "futures") (r "= 0.3.0-alpha.17") (o #t) (d #t) (k 0) (p "futures-preview")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.8") (d #t) (k 0)) (d (n "runtime") (r "^0.3.0-alpha.6") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)))) (h "0gb7y360fsb0kzrgkqb1rgxj7zxgyg94zandjcy81fmj2ky63wcg") (f (quote (("tokio" "amq-protocol/tokio") ("rustls" "amq-protocol/rustls") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-0.25.0 (c (n "lapin") (v "0.25.0") (d (list (d (n "amq-protocol") (r "^2.1.0") (k 0)) (d (n "amq-protocol-codegen") (r "^2.1.0") (d #t) (k 1)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "failure") (r "^0.1") (f (quote ("std"))) (k 0)) (d (n "futures") (r "= 0.3.0-alpha.17") (o #t) (d #t) (k 0) (p "futures-preview")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.8") (d #t) (k 0)) (d (n "runtime") (r "^0.3.0-alpha.6") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)))) (h "0qvg2w47qnn2n2agmpp0wh1nvzzkqzxlc6wrgdirbd151q1s0978") (f (quote (("tokio" "amq-protocol/tokio") ("rustls" "amq-protocol/rustls") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-0.26.0 (c (n "lapin") (v "0.26.0") (d (list (d (n "amq-protocol") (r "^2.2") (k 0)) (d (n "amq-protocol-codegen") (r "^2.2") (d #t) (k 1)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "failure") (r "^0.1") (f (quote ("std"))) (k 0)) (d (n "futures") (r "= 0.3.0-alpha.17") (o #t) (d #t) (k 0) (p "futures-preview")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "runtime") (r "^0.3.0-alpha.6") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)))) (h "068s4622zhfxsmjmymz1br79m2c9lr4sg2pinlghalyp611bs7bz") (f (quote (("tokio" "amq-protocol/tokio") ("rustls" "amq-protocol/rustls") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-0.26.1 (c (n "lapin") (v "0.26.1") (d (list (d (n "amq-protocol") (r "^2.2") (k 0)) (d (n "amq-protocol-codegen") (r "^2.2") (d #t) (k 1)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "failure") (r "^0.1") (f (quote ("std"))) (k 0)) (d (n "futures") (r "= 0.3.0-alpha.17") (o #t) (d #t) (k 0) (p "futures-preview")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "runtime") (r "^0.3.0-alpha.6") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)))) (h "07q2bjcszmjch493k5q6fv0sic2aadcihr3hd1gbql7cxqwlsclj") (f (quote (("tokio" "amq-protocol/tokio") ("rustls" "amq-protocol/rustls") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-0.26.2 (c (n "lapin") (v "0.26.2") (d (list (d (n "amq-protocol") (r "^2.2") (k 0)) (d (n "amq-protocol-codegen") (r "^2.2") (d #t) (k 1)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "failure") (r "^0.1") (f (quote ("std"))) (k 0)) (d (n "futures") (r "= 0.3.0-alpha.17") (o #t) (d #t) (k 0) (p "futures-preview")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "runtime") (r "^0.3.0-alpha.6") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)))) (h "1xjn3mxjf58n86gh19kps4j62nnxa48cxq614vmxnpk6bnlmc59h") (f (quote (("tokio" "amq-protocol/tokio") ("rustls" "amq-protocol/rustls") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-0.26.3 (c (n "lapin") (v "0.26.3") (d (list (d (n "amq-protocol") (r "^2.2") (k 0)) (d (n "amq-protocol-codegen") (r "^2.2") (d #t) (k 1)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "failure") (r "^0.1") (f (quote ("std"))) (k 0)) (d (n "futures") (r "= 0.3.0-alpha.17") (o #t) (d #t) (k 0) (p "futures-preview")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "runtime") (r "^0.3.0-alpha.6") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)))) (h "142q8wnpj4kyfwpws8c6hznpvz570r7w17s8zqy7h9z7xxndf30b") (f (quote (("tokio" "amq-protocol/tokio") ("rustls" "amq-protocol/rustls") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-0.27.0-beta.1 (c (n "lapin") (v "0.27.0-beta.1") (d (list (d (n "amq-protocol") (r "= 3.0.0-beta.1") (k 0)) (d (n "amq-protocol-codegen") (r "= 3.0.0-beta.1") (d #t) (k 1)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "failure") (r "^0.1") (f (quote ("std"))) (k 0)) (d (n "futures") (r "= 0.3.0-alpha.17") (o #t) (d #t) (k 0) (p "futures-preview")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "runtime") (r "= 0.3.0-alpha.6") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)))) (h "1s7i6gyhpx9f54af3h80c43pc95h9np725yb1xr598llkcrn295k") (f (quote (("tokio" "amq-protocol/tokio") ("rustls" "amq-protocol/rustls") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-0.26.4 (c (n "lapin") (v "0.26.4") (d (list (d (n "amq-protocol") (r "^2.2") (k 0)) (d (n "amq-protocol-codegen") (r "^2.2") (d #t) (k 1)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "failure") (r "^0.1") (f (quote ("std"))) (k 0)) (d (n "futures") (r "= 0.3.0-alpha.17") (o #t) (d #t) (k 0) (p "futures-preview")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "runtime") (r "^0.3.0-alpha.6") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)))) (h "0sc8pw6zk3jdqa4h0xkcsmbvjf06wgsd8kjz3nbry7qg6zz4fxm1") (f (quote (("tokio" "amq-protocol/tokio") ("rustls" "amq-protocol/rustls") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-0.27.0-beta.2 (c (n "lapin") (v "0.27.0-beta.2") (d (list (d (n "amq-protocol") (r "= 3.0.0-beta.1") (k 0)) (d (n "amq-protocol-codegen") (r "= 3.0.0-beta.1") (d #t) (k 1)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "failure") (r "^0.1") (f (quote ("std"))) (k 0)) (d (n "futures") (r "= 0.3.0-alpha.17") (o #t) (d #t) (k 0) (p "futures-preview")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "runtime") (r "= 0.3.0-alpha.6") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)))) (h "1iwdh73cfd6z878f6vl0gz2arnvjdhl3qi4igz3inb7n6h04kjcm") (f (quote (("tokio" "amq-protocol/tokio") ("rustls" "amq-protocol/rustls") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-0.26.5 (c (n "lapin") (v "0.26.5") (d (list (d (n "amq-protocol") (r "^2.2") (k 0)) (d (n "amq-protocol-codegen") (r "^2.2") (d #t) (k 1)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "failure") (r "^0.1") (f (quote ("std"))) (k 0)) (d (n "futures") (r "= 0.3.0-alpha.17") (o #t) (d #t) (k 0) (p "futures-preview")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "runtime") (r "^0.3.0-alpha.6") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)))) (h "0i52zbsg1z09ddk70p6i3dvvvnmrqih5pikl3b26vljri3ma1m0c") (f (quote (("tokio" "amq-protocol/tokio") ("rustls" "amq-protocol/rustls") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-0.26.6 (c (n "lapin") (v "0.26.6") (d (list (d (n "amq-protocol") (r "^2.2") (k 0)) (d (n "amq-protocol-codegen") (r "^2.2") (d #t) (k 1)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "failure") (r "^0.1") (f (quote ("std"))) (k 0)) (d (n "futures") (r "= 0.3.0-alpha.17") (o #t) (d #t) (k 0) (p "futures-preview")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "runtime") (r "^0.3.0-alpha.6") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)))) (h "1qqrran391fx6c6b0j7iv7na43aircs0lgmw748hm824zl7ffsf1") (f (quote (("tokio" "amq-protocol/tokio") ("rustls" "amq-protocol/rustls") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-0.27.0-beta.3 (c (n "lapin") (v "0.27.0-beta.3") (d (list (d (n "amq-protocol") (r "= 3.0.0-beta.1") (k 0)) (d (n "amq-protocol-codegen") (r "= 3.0.0-beta.1") (d #t) (k 1)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "failure") (r "^0.1") (f (quote ("std"))) (k 0)) (d (n "futures") (r "= 0.3.0-alpha.17") (o #t) (d #t) (k 0) (p "futures-preview")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "runtime") (r "= 0.3.0-alpha.6") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)))) (h "1f8njib50jrfmga90v1dpjlx74ccv3ia97f4k992jl4v6p6fl5b7") (f (quote (("tokio" "amq-protocol/tokio") ("rustls" "amq-protocol/rustls") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-0.26.7 (c (n "lapin") (v "0.26.7") (d (list (d (n "amq-protocol") (r "^2.2") (k 0)) (d (n "amq-protocol-codegen") (r "^2.2") (d #t) (k 1)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "failure") (r "^0.1") (f (quote ("std"))) (k 0)) (d (n "futures") (r "= 0.3.0-alpha.17") (o #t) (d #t) (k 0) (p "futures-preview")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "runtime") (r "^0.3.0-alpha.6") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)))) (h "06f7byaxc1xd3ims6dj26syz0snmxcyldz7w2vv78vr4vbsxqbgx") (f (quote (("tokio" "amq-protocol/tokio") ("rustls" "amq-protocol/rustls") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-0.27.0-beta.4 (c (n "lapin") (v "0.27.0-beta.4") (d (list (d (n "amq-protocol") (r "= 3.0.0-beta.1") (k 0)) (d (n "amq-protocol-codegen") (r "= 3.0.0-beta.1") (d #t) (k 1)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "futures") (r "= 0.3.0-alpha.18") (o #t) (d #t) (k 0) (p "futures-preview")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "runtime") (r "= 0.3.0-alpha.7") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.6") (d #t) (k 2)))) (h "1bg2vnzmf520mf7f2gi223dv43ipzs2l7j42xq24n1alxcx0w4l2") (f (quote (("tokio" "amq-protocol/tokio") ("rustls" "amq-protocol/rustls") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-0.26.8 (c (n "lapin") (v "0.26.8") (d (list (d (n "amq-protocol") (r "^2.2") (k 0)) (d (n "amq-protocol-codegen") (r "^2.2") (d #t) (k 1)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "failure") (r "^0.1") (f (quote ("std"))) (k 0)) (d (n "futures") (r "= 0.3.0-alpha.17") (o #t) (d #t) (k 0) (p "futures-preview")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "runtime") (r "^0.3.0-alpha.6") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)))) (h "0djyqh4c5vg6mvjm3d0hq1byjncfhaw45sg49qgj0r5dignkj2iv") (f (quote (("tokio" "amq-protocol/tokio") ("rustls" "amq-protocol/rustls") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-0.26.9 (c (n "lapin") (v "0.26.9") (d (list (d (n "amq-protocol") (r "^2.2") (k 0)) (d (n "amq-protocol-codegen") (r "^2.2") (d #t) (k 1)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "failure") (r "^0.1") (f (quote ("std"))) (k 0)) (d (n "futures") (r "= 0.3.0-alpha.17") (o #t) (d #t) (k 0) (p "futures-preview")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "runtime") (r "^0.3.0-alpha.6") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)))) (h "13cn5cwhi4v0rdfm768c988v3l1cmjx72wqnrl4061ns1mlydw43") (f (quote (("tokio" "amq-protocol/tokio") ("rustls" "amq-protocol/rustls") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-0.27.0-beta.5 (c (n "lapin") (v "0.27.0-beta.5") (d (list (d (n "amq-protocol") (r "= 3.0.0-beta.2") (k 0)) (d (n "amq-protocol-codegen") (r "= 3.0.0-beta.2") (d #t) (k 1)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "futures") (r "= 0.3.0-alpha.18") (o #t) (d #t) (k 0) (p "futures-preview")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "runtime") (r "= 0.3.0-alpha.7") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.7") (d #t) (k 2)))) (h "06s554ypbl4rx59f2rpd800bp3p2j459g6pmj98c6pdi9kj7qhsi") (f (quote (("tokio" "amq-protocol/tokio") ("rustls" "amq-protocol/rustls") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-0.27.0-beta.6 (c (n "lapin") (v "0.27.0-beta.6") (d (list (d (n "amq-protocol") (r "= 3.0.0-beta.2") (k 0)) (d (n "amq-protocol-codegen") (r "= 3.0.0-beta.2") (d #t) (k 1)) (d (n "async-std") (r "^0.99") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "futures") (r "= 0.3.0-alpha.18") (o #t) (d #t) (k 0) (p "futures-preview")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.7") (d #t) (k 2)))) (h "18llrvn2z6ii43ga8aac1dvvawrb317qf50k5gpx9q7bgxbbzij4") (f (quote (("tokio" "amq-protocol/tokio") ("rustls" "amq-protocol/rustls") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-0.26.10 (c (n "lapin") (v "0.26.10") (d (list (d (n "amq-protocol") (r "^2.2") (k 0)) (d (n "amq-protocol-codegen") (r "^2.2") (d #t) (k 1)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "failure") (r "^0.1") (f (quote ("std"))) (k 0)) (d (n "futures") (r "= 0.3.0-alpha.17") (o #t) (d #t) (k 0) (p "futures-preview")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "runtime") (r "^0.3.0-alpha.6") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)))) (h "1mjjr0n9ji61pxmhfxllbjxrpbxrmb94klbj7przagk3w562l21a") (f (quote (("tokio" "amq-protocol/tokio") ("rustls" "amq-protocol/rustls") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-0.26.11 (c (n "lapin") (v "0.26.11") (d (list (d (n "amq-protocol") (r "^2.3") (k 0)) (d (n "amq-protocol-codegen") (r "^2.3") (d #t) (k 1)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "failure") (r "^0.1") (f (quote ("std"))) (k 0)) (d (n "futures") (r "= 0.3.0-alpha.17") (o #t) (d #t) (k 0) (p "futures-preview")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "runtime") (r "^0.3.0-alpha.6") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)))) (h "1gniiia8gfzg2z7zwnabj3vxwmpc3x04h8c1qmcfxbchs1gy0jj7") (f (quote (("tokio" "amq-protocol/tokio") ("rustls" "amq-protocol/rustls") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-0.27.0-beta.7 (c (n "lapin") (v "0.27.0-beta.7") (d (list (d (n "amq-protocol") (r "= 3.0.0-beta.2") (k 0)) (d (n "amq-protocol-codegen") (r "= 3.0.0-beta.2") (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "futures") (r "= 0.3.0-alpha.18") (o #t) (d #t) (k 0) (p "futures-core-preview")) (d (n "futures-executor") (r "^0.3.0-alpha.18") (d #t) (k 2) (p "futures-executor-preview")) (d (n "futures-util") (r "^0.3.0-alpha.18") (d #t) (k 2) (p "futures-util-preview")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.7") (d #t) (k 2)))) (h "1z1a9l1mwh3nb3gp2x2wfkrpfwyq8i2v6rp2y2l3yvzksm16r6ar") (f (quote (("tokio" "amq-protocol/tokio") ("rustls" "amq-protocol/rustls") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-0.27.0 (c (n "lapin") (v "0.27.0") (d (list (d (n "amq-protocol") (r "^3.0") (k 0)) (d (n "amq-protocol-codegen") (r "^3.0") (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures") (r "= 0.3.0-alpha.18") (o #t) (d #t) (k 0) (p "futures-core-preview")) (d (n "futures-executor") (r "^0.3.0-alpha.18") (d #t) (k 2) (p "futures-executor-preview")) (d (n "futures-util") (r "^0.3.0-alpha.18") (d #t) (k 2) (p "futures-util-preview")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.7") (d #t) (k 2)))) (h "080apza3rwhpr4zmns4fq2b3wbanx6s5pnpi1riwvkddl5wd64q5") (f (quote (("tokio" "amq-protocol/tokio") ("rustls" "amq-protocol/rustls") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-0.27.1 (c (n "lapin") (v "0.27.1") (d (list (d (n "amq-protocol") (r "^3.0") (k 0)) (d (n "amq-protocol-codegen") (r "^3.0") (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures") (r "= 0.3.0-alpha.18") (o #t) (d #t) (k 0) (p "futures-core-preview")) (d (n "futures-executor") (r "^0.3.0-alpha.18") (d #t) (k 2) (p "futures-executor-preview")) (d (n "futures-util") (r "^0.3.0-alpha.18") (d #t) (k 2) (p "futures-util-preview")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.7") (d #t) (k 2)))) (h "0imqr2hc6wgqk6bb14bsplx1cv298s6q99vbn9kvvrdwxiz3w7lx") (f (quote (("tokio" "amq-protocol/tokio") ("rustls" "amq-protocol/rustls") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-0.28.0 (c (n "lapin") (v "0.28.0") (d (list (d (n "amq-protocol") (r "^3.0") (k 0)) (d (n "amq-protocol-codegen") (r "^3.0") (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures") (r "= 0.3.0-alpha.19") (o #t) (d #t) (k 0) (p "futures-core-preview")) (d (n "futures-executor") (r "^0.3.0-alpha.19") (d #t) (k 2) (p "futures-executor-preview")) (d (n "futures-util") (r "^0.3.0-alpha.19") (d #t) (k 2) (p "futures-util-preview")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.7") (d #t) (k 2)))) (h "0gcp5wkc1rsvfnfrgcjdrh3rxws818hgc4gfv95758jl3xidnb2z") (f (quote (("tokio" "amq-protocol/tokio") ("rustls" "amq-protocol/rustls") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-0.28.1 (c (n "lapin") (v "0.28.1") (d (list (d (n "amq-protocol") (r "^3.0") (k 0)) (d (n "amq-protocol-codegen") (r "^3.0") (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures") (r "= 0.3.0-alpha.19") (o #t) (d #t) (k 0) (p "futures-core-preview")) (d (n "futures-executor") (r "^0.3.0-alpha.19") (d #t) (k 2) (p "futures-executor-preview")) (d (n "futures-util") (r "^0.3.0-alpha.19") (d #t) (k 2) (p "futures-util-preview")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.7") (d #t) (k 2)))) (h "10wb5c3nhh515fm1fbzh5r3q4xcsbim6nvjjgm6y01bpff5qm599") (f (quote (("tokio" "amq-protocol/tokio") ("rustls" "amq-protocol/rustls") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-0.27.2 (c (n "lapin") (v "0.27.2") (d (list (d (n "amq-protocol") (r "^3.1") (k 0)) (d (n "amq-protocol-codegen") (r "^3.1") (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.8") (d #t) (k 2)))) (h "1700xhvdkks65wrq47ayx1fp4xvx26rdac2ly6izl7drbk1l9zda") (f (quote (("rustls" "amq-protocol/rustls") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("futures" "futures-core") ("default" "native-tls"))))))

(define-public crate-lapin-0.28.2 (c (n "lapin") (v "0.28.2") (d (list (d (n "amq-protocol") (r "^3.1") (k 0)) (d (n "amq-protocol-codegen") (r "^3.1") (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.8") (d #t) (k 2)))) (h "1v8x6m9268wmj00hpvbssfcqw1jqpldj4aq5zfqbgzscw8xcnrgr") (f (quote (("rustls" "amq-protocol/rustls") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("futures" "futures-core") ("default" "native-tls"))))))

(define-public crate-lapin-0.28.3 (c (n "lapin") (v "0.28.3") (d (list (d (n "amq-protocol") (r "^3.1") (k 0)) (d (n "amq-protocol-codegen") (r "^3.1") (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.8") (d #t) (k 2)))) (h "00gnjqbh4xcca4598q7vay9zhcvbsaxky05acyfmljwdzk8m942w") (f (quote (("rustls" "amq-protocol/rustls") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("futures" "futures-core") ("default" "native-tls"))))))

(define-public crate-lapin-0.28.4 (c (n "lapin") (v "0.28.4") (d (list (d (n "amq-protocol") (r "^3.1") (k 0)) (d (n "amq-protocol-codegen") (r "^3.1") (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.8") (d #t) (k 2)))) (h "1lqp5c46k8ynmsm7xzv5pksgi4rpfy0pix84l29dwmc8k71wicv1") (f (quote (("rustls" "amq-protocol/rustls") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("futures" "futures-core") ("default" "native-tls"))))))

(define-public crate-lapin-0.29.0 (c (n "lapin") (v "0.29.0") (d (list (d (n "amq-protocol") (r "^4.0") (k 0)) (d (n "amq-protocol-codegen") (r "^4.0") (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.9") (d #t) (k 2)))) (h "1d955zbzpg27gk4bd6s8bhmcvr7aw1nzkk11rmbvd2b9488q86qv") (f (quote (("rustls" "amq-protocol/rustls") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("futures" "futures-core") ("default" "native-tls"))))))

(define-public crate-lapin-0.29.1 (c (n "lapin") (v "0.29.1") (d (list (d (n "amq-protocol") (r "^4.0") (k 0)) (d (n "amq-protocol-codegen") (r "^4.0") (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.9") (d #t) (k 2)))) (h "05ppr62fas1j2263qkgmw6x4w72nh61682hhvqx056xkzbqglf3f") (f (quote (("rustls" "amq-protocol/rustls") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("futures" "futures-core") ("default" "native-tls"))))))

(define-public crate-lapin-0.29.2 (c (n "lapin") (v "0.29.2") (d (list (d (n "amq-protocol") (r "^4.0") (k 0)) (d (n "amq-protocol-codegen") (r "^4.0") (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.9") (d #t) (k 2)))) (h "0lyrmx6ziq167djmzy3z9yw4fvv3ianxihzc0ymmvsvh36pcywfi") (f (quote (("rustls" "amq-protocol/rustls") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("futures" "futures-core") ("default" "native-tls"))))))

(define-public crate-lapin-0.30.0 (c (n "lapin") (v "0.30.0") (d (list (d (n "amq-protocol") (r "^4.0") (k 0)) (d (n "amq-protocol-codegen") (r "^4.0") (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.9") (d #t) (k 2)))) (h "1hqcz40pyfrm1rabwl828jvnajjj641xwfmp5xg9rq4j1563fbfh") (f (quote (("rustls" "amq-protocol/rustls") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("futures" "futures-core") ("default" "native-tls"))))))

(define-public crate-lapin-0.30.1 (c (n "lapin") (v "0.30.1") (d (list (d (n "amq-protocol") (r "^4.1") (k 0)) (d (n "amq-protocol-codegen") (r "^4.1") (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.9") (d #t) (k 2)))) (h "09y19wwv4p6gxv2mgmvqwnanbj1l2kjadqm1fmvaa9ny98a5lb55") (f (quote (("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "amq-protocol/rustls") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("futures" "futures-core") ("default" "native-tls"))))))

(define-public crate-lapin-0.31.0 (c (n "lapin") (v "0.31.0") (d (list (d (n "amq-protocol") (r "^4.2") (k 0)) (d (n "amq-protocol-codegen") (r "^4.2") (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.9") (d #t) (k 2)))) (h "1r8raljn8q6i7a179g0y4z3vaan2a8bscl8zp8v68hvn78pqnzq8") (f (quote (("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "amq-protocol/rustls") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("futures" "futures-core") ("default" "native-tls"))))))

(define-public crate-lapin-0.32.0 (c (n "lapin") (v "0.32.0") (d (list (d (n "amq-protocol") (r "^4.2") (k 0)) (d (n "amq-protocol-codegen") (r "^4.2") (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.9") (d #t) (k 2)))) (h "176zhi4vcsqjcy789a1c1cr8dz312lrjpm40kvyx475991aq02s1") (f (quote (("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "amq-protocol/rustls") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("futures" "futures-core") ("default" "native-tls"))))))

(define-public crate-lapin-0.33.0-beta.1 (c (n "lapin") (v "0.33.0-beta.1") (d (list (d (n "amq-protocol") (r "= 5.0.0-beta.3") (k 0)) (d (n "amq-protocol-codegen") (r "= 5.0.0-beta.3") (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.10") (d #t) (k 2)))) (h "0q23r8ffj80gxpbiz61sa828gvrb7zk624rci6i8q2z7rycwqy5w") (f (quote (("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("futures" "futures-core") ("default" "native-tls"))))))

(define-public crate-lapin-0.32.1 (c (n "lapin") (v "0.32.1") (d (list (d (n "amq-protocol") (r "^4.2") (k 0)) (d (n "amq-protocol-codegen") (r "^4.2") (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.9") (d #t) (k 2)))) (h "1myi93j50lpm6bg07x0q2xzn2p9icfc7p3lr3mpn1p99krph25cx") (f (quote (("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "amq-protocol/rustls") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("futures" "futures-core") ("default" "native-tls"))))))

(define-public crate-lapin-0.33.0-beta.2 (c (n "lapin") (v "0.33.0-beta.2") (d (list (d (n "amq-protocol") (r "= 5.0.0-beta.4") (k 0)) (d (n "amq-protocol-codegen") (r "= 5.0.0-beta.4") (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.10") (d #t) (k 2)))) (h "1dv15gn0s54bxnw12ihcgz52jmd4iqa65xdwam4wb0qlszs9dg8r") (f (quote (("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("futures" "futures-core") ("default" "native-tls"))))))

(define-public crate-lapin-0.32.2 (c (n "lapin") (v "0.32.2") (d (list (d (n "amq-protocol") (r "^4.2") (k 0)) (d (n "amq-protocol-codegen") (r "^4.2") (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.9") (d #t) (k 2)))) (h "11ywd7shxicmyxq6b163yg79z4b08dk4y1vfsz1zwl88qhhfnygc") (f (quote (("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "amq-protocol/rustls") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("futures" "futures-core") ("default" "native-tls"))))))

(define-public crate-lapin-0.33.0-beta.3 (c (n "lapin") (v "0.33.0-beta.3") (d (list (d (n "amq-protocol") (r "= 5.0.0-beta.4") (k 0)) (d (n "amq-protocol-codegen") (r "= 5.0.0-beta.4") (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.10") (d #t) (k 2)))) (h "0ix6zrsg81awv8ha9ch1dmi9n4rmcj5jjlp2k11pr7s5fdhhjkad") (f (quote (("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("futures" "futures-core") ("default" "native-tls"))))))

(define-public crate-lapin-0.32.3 (c (n "lapin") (v "0.32.3") (d (list (d (n "amq-protocol") (r "^4.2") (k 0)) (d (n "amq-protocol-codegen") (r "^4.2") (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.9") (d #t) (k 2)))) (h "1qnvaindxr7nj6wljxfdbk09npr5gkzjgd6nkx15kcygw8njys19") (f (quote (("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "amq-protocol/rustls") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("futures" "futures-core") ("default" "native-tls"))))))

(define-public crate-lapin-0.32.4 (c (n "lapin") (v "0.32.4") (d (list (d (n "amq-protocol") (r "^4.2") (k 0)) (d (n "amq-protocol-codegen") (r "^4.2") (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.9") (d #t) (k 2)))) (h "1bxz6lfyi8qgqa2dzc97lgnszjfbr22sj829qi0sc0g28mm7ypdw") (f (quote (("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "amq-protocol/rustls") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("futures" "futures-core") ("default" "native-tls"))))))

(define-public crate-lapin-0.32.5 (c (n "lapin") (v "0.32.5") (d (list (d (n "amq-protocol") (r "^4.2") (k 0)) (d (n "amq-protocol-codegen") (r "^4.2") (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.9") (d #t) (k 2)))) (h "02p6qyrrib5jllnxv91yj2vg2mkixa11h7b787xn6dpgzilnbn10") (f (quote (("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "amq-protocol/rustls") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("futures" "futures-core") ("default" "native-tls"))))))

(define-public crate-lapin-0.33.0 (c (n "lapin") (v "0.33.0") (d (list (d (n "amq-protocol") (r "^5.0") (k 0)) (d (n "amq-protocol-codegen") (r "^5.0") (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.10") (d #t) (k 2)))) (h "1d1dfwxg2jr06rpa100pa3238vffyzvm3sw08lmvhn4pvqpls5q3") (f (quote (("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("futures" "futures-core") ("default" "native-tls"))))))

(define-public crate-lapin-0.33.1 (c (n "lapin") (v "0.33.1") (d (list (d (n "amq-protocol") (r "^5.0") (k 0)) (d (n "amq-protocol-codegen") (r "^5.0") (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.10") (d #t) (k 2)))) (h "1pkn9n2x9cikh4ir3xmmq2gksnp9yrj7ys2yvxv9k1kdf0vb6bz5") (f (quote (("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("futures" "futures-core") ("default" "native-tls"))))))

(define-public crate-lapin-0.33.2 (c (n "lapin") (v "0.33.2") (d (list (d (n "amq-protocol") (r "^5.1") (k 0)) (d (n "amq-protocol-codegen") (r "^5.1") (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.10") (d #t) (k 2)))) (h "1a8r9n7022l7v2wgbbadli9rn6i4wd51z59yfvgphh73bypgs5xk") (f (quote (("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("futures" "futures-core") ("default" "native-tls"))))))

(define-public crate-lapin-0.34.0 (c (n "lapin") (v "0.34.0") (d (list (d (n "amq-protocol") (r "^5.1") (k 0)) (d (n "amq-protocol-codegen") (r "^5.1") (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.10") (d #t) (k 2)))) (h "0cmsjl6plbc8934zkp4qzs4lw09a0x860ik48s2488ps46yrqkym") (f (quote (("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-0.34.1 (c (n "lapin") (v "0.34.1") (d (list (d (n "amq-protocol") (r "^5.1") (k 0)) (d (n "amq-protocol-codegen") (r "^5.1") (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^1.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.10") (d #t) (k 2)))) (h "1vh4jdcgfn3f35syhhzx6sx9z4rf3w807sbjfvvxl3dg410hfcl9") (f (quote (("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-0.35.0 (c (n "lapin") (v "0.35.0") (d (list (d (n "amq-protocol") (r "^5.1") (k 0)) (d (n "amq-protocol-codegen") (r "^5.1") (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^2.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.10") (d #t) (k 2)))) (h "0hvri46mn0b3k2i9ymv8zdhaj7lcrvgdixfs6j8hp4f1qmyxiamq") (f (quote (("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-0.35.1 (c (n "lapin") (v "0.35.1") (d (list (d (n "amq-protocol") (r "^5.1") (k 0)) (d (n "amq-protocol-codegen") (r "^5.1") (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^2.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.10") (d #t) (k 2)))) (h "01pdmh49cps0hw0v7dma5nfbf6vip71cvg69n3r0kchnb2k7awqb") (f (quote (("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-0.35.2 (c (n "lapin") (v "0.35.2") (d (list (d (n "amq-protocol") (r "^5.1") (k 0)) (d (n "amq-protocol-codegen") (r "^5.1") (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^2.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.10") (d #t) (k 2)))) (h "0cv5fzgpmk4vvr2v94mss9fkcj2aghb6k9rr99vcwmhqrp1g3l71") (f (quote (("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-0.36.0 (c (n "lapin") (v "0.36.0") (d (list (d (n "amq-protocol") (r "^5.1") (k 0)) (d (n "amq-protocol-codegen") (r "^5.1") (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^2.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.10") (d #t) (k 2)))) (h "0hw0yp5fqhhd7gmykq489hk26x311z48ryymv6zlbz9wfpxr73xm") (f (quote (("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-0.36.1 (c (n "lapin") (v "0.36.1") (d (list (d (n "amq-protocol") (r "^5.1") (k 0)) (d (n "amq-protocol-codegen") (r "^5.1") (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^2.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.10") (d #t) (k 2)))) (h "14h46158ig45hymawbyscvph0piiwc9rra6fhskdvibfra04jyrz") (f (quote (("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-0.36.2 (c (n "lapin") (v "0.36.2") (d (list (d (n "amq-protocol") (r "^5.1") (k 0)) (d (n "amq-protocol-codegen") (r "^5.1") (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^2.3") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.10") (d #t) (k 2)))) (h "176v0lw63fnqc53mmsnnm819yvnvssyjp2akkqp28dmhr51p77i6") (f (quote (("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-0.37.0 (c (n "lapin") (v "0.37.0") (d (list (d (n "amq-protocol") (r "^5.1") (k 0)) (d (n "amq-protocol-codegen") (r "^5.1") (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^3.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.10") (d #t) (k 2)))) (h "0bgq37xc3figbvm3qb59w6i7ha7r65phaa0bpw9bvnxazqnww9wv") (f (quote (("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-0.37.1 (c (n "lapin") (v "0.37.1") (d (list (d (n "amq-protocol") (r "^5.1") (k 0)) (d (n "amq-protocol-codegen") (r "^5.1") (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^3.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.10") (d #t) (k 2)))) (h "1l1cd3i9q456ivfg062zg81fxw0hx9z07j8hak3sn6jykkwlmnyw") (f (quote (("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-0.38.0 (c (n "lapin") (v "0.38.0") (d (list (d (n "amq-protocol") (r "^5.1") (k 0)) (d (n "amq-protocol-codegen") (r "^5.1") (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^3.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.10") (d #t) (k 2)))) (h "0lnr4kdvnwvbv3v87hdr6srr3ksa07b1ihhm427iifiadfpnjgrz") (f (quote (("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-0.38.1 (c (n "lapin") (v "0.38.1") (d (list (d (n "amq-protocol") (r "^5.1") (k 0)) (d (n "amq-protocol-codegen") (r "^5.1") (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^3.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.10") (d #t) (k 2)))) (h "0aa5pqn54akiajlhql157dn431ypx9j0913g3w48ga4ns5wanppb") (f (quote (("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-0.38.2 (c (n "lapin") (v "0.38.2") (d (list (d (n "amq-protocol") (r "^5.1") (k 0)) (d (n "amq-protocol-codegen") (r "^5.1") (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^3.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.10") (d #t) (k 2)))) (h "1rirn38rdza9z1yls37szqjnxxdr4q4bp2g1mhp7bas3a1vrzgf3") (f (quote (("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-0.38.3 (c (n "lapin") (v "0.38.3") (d (list (d (n "amq-protocol") (r "^5.1") (k 0)) (d (n "amq-protocol-codegen") (r "^5.1") (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^3.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.10") (d #t) (k 2)))) (h "1jvx1j5fpv1vg8xrnzrcp1h49a6qdfxqxragvrqi2p7j38l9svgn") (f (quote (("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-0.38.4 (c (n "lapin") (v "0.38.4") (d (list (d (n "amq-protocol") (r "^5.1") (k 0)) (d (n "amq-protocol-codegen") (r "^5.1") (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^3.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.10") (d #t) (k 2)))) (h "0kc8njc6dj4xsh6avsmkrarrp18w4qw4wcw6ky663340w7gqghh7") (f (quote (("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-0.38.5 (c (n "lapin") (v "0.38.5") (d (list (d (n "amq-protocol") (r "^5.1") (k 0)) (d (n "amq-protocol-codegen") (r "^5.1") (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^3.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.10") (d #t) (k 2)))) (h "0g84insq88r6rdlg1bkkbdcf4fqw385jgj934yar9hpbsngk3fx5") (f (quote (("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-0.39.0 (c (n "lapin") (v "0.39.0") (d (list (d (n "amq-protocol") (r "^5.1") (k 0)) (d (n "amq-protocol-codegen") (r "^5.1") (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.10") (d #t) (k 2)))) (h "0mns58pmfc6fax4a8vl471s14bk3qrh4yypc9vy8gcl33s9y0a5i") (f (quote (("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-1.0.0-alpha1 (c (n "lapin") (v "1.0.0-alpha1") (d (list (d (n "amq-protocol") (r "= 6.0.0-alpha1") (k 0)) (d (n "amq-protocol-codegen") (r "= 6.0.0-alpha1") (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.10") (d #t) (k 2)))) (h "1d1dhl4c8pbkiwjbxdz12dzncn90wzfq9lc9ld8hijvrrpkb0iqb") (f (quote (("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-0.39.1 (c (n "lapin") (v "0.39.1") (d (list (d (n "amq-protocol") (r "^5.1") (k 0)) (d (n "amq-protocol-codegen") (r "^5.1") (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.10") (d #t) (k 2)))) (h "1a2rrlvc4d0zjc7qdgmx9qsxk0p0x3srf2zs44kkd7vl9kl4dn38") (f (quote (("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-1.0.0-alpha2 (c (n "lapin") (v "1.0.0-alpha2") (d (list (d (n "amq-protocol") (r "= 6.0.0-alpha1") (k 0)) (d (n "amq-protocol-codegen") (r "= 6.0.0-alpha1") (d #t) (k 1)) (d (n "async-task") (r "^2.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.10") (d #t) (k 2)))) (h "0cv9vx22jj7ipam8kllqy1cqx5q3d3dh5iad7h16pdha11wdx8xw") (f (quote (("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-0.39.2 (c (n "lapin") (v "0.39.2") (d (list (d (n "amq-protocol") (r "^5.1") (k 0)) (d (n "amq-protocol-codegen") (r "^5.1") (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.10") (d #t) (k 2)))) (h "0d58fqylh1cm0wqxl39lq520vvvkg0b8w945d5g8ar3k40ff61q2") (f (quote (("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-0.39.3 (c (n "lapin") (v "0.39.3") (d (list (d (n "amq-protocol") (r "^5.1") (k 0)) (d (n "amq-protocol-codegen") (r "^5.1") (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.10") (d #t) (k 2)))) (h "0p35k7lgigjnb0rm2ahbpsyb2awclh17ivjwfp26vzfxmhfdahpn") (f (quote (("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-0.39.4 (c (n "lapin") (v "0.39.4") (d (list (d (n "amq-protocol") (r "^5.1") (k 0)) (d (n "amq-protocol-codegen") (r "^5.1") (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.10") (d #t) (k 2)))) (h "1p28r5nrjlk3adp3p8p3ipd24b151ssa53cbqyn13xsffysgjvlm") (f (quote (("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-1.0.0-alpha3 (c (n "lapin") (v "1.0.0-alpha3") (d (list (d (n "amq-protocol") (r "= 6.0.0-alpha2") (k 0)) (d (n "amq-protocol-codegen") (r "= 6.0.0-alpha2") (d #t) (k 1)) (d (n "async-task") (r "^3.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.10") (d #t) (k 2)))) (h "1n3mgs2c0y01lk1f3cg9qvm6rz36wfjprv86swvjdpl5qlf9wywn") (f (quote (("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-0.39.5 (c (n "lapin") (v "0.39.5") (d (list (d (n "amq-protocol") (r "^5.1") (k 0)) (d (n "amq-protocol-codegen") (r "^5.1") (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.10") (d #t) (k 2)))) (h "0dplhm98b9cqy32v20wpgszdm95kzrxm93q3zqk84khp59xar0yn") (f (quote (("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-1.0.0-alpha4 (c (n "lapin") (v "1.0.0-alpha4") (d (list (d (n "amq-protocol") (r "= 6.0.0-alpha2") (k 0)) (d (n "amq-protocol-codegen") (r "= 6.0.0-alpha2") (d #t) (k 1)) (d (n "async-task") (r "^3.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.10") (d #t) (k 2)))) (h "18ragp402ms3ak8p9906gkji0hm3i4yamjzl2qcivb4sylnckm8x") (f (quote (("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-0.39.6 (c (n "lapin") (v "0.39.6") (d (list (d (n "amq-protocol") (r "^5.1") (k 0)) (d (n "amq-protocol-codegen") (r "^5.1") (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.10") (d #t) (k 2)))) (h "1581jg9irzxahbz2cc8ad2ghrhv5nadf7syk888h3jr706yhhcv4") (f (quote (("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-0.39.7 (c (n "lapin") (v "0.39.7") (d (list (d (n "amq-protocol") (r "^5.1") (k 0)) (d (n "amq-protocol-codegen") (r "^5.1") (d #t) (k 1)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.10") (d #t) (k 2)))) (h "1vbrpb5azvp1f68a0ww1xjk1icb1jb1awaxdd3l91szqzwc3bwbw") (f (quote (("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-1.0.0-alpha5 (c (n "lapin") (v "1.0.0-alpha5") (d (list (d (n "amq-protocol") (r "= 6.0.0-alpha2") (k 0)) (d (n "amq-protocol-codegen") (r "= 6.0.0-alpha2") (d #t) (k 1)) (d (n "async-task") (r "^3.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.10") (d #t) (k 2)))) (h "1i0v96i3565m1w0lvmzc1rbk5963n8l1mz3q688rvlxd21sidmzy") (f (quote (("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-1.0.0-alpha6 (c (n "lapin") (v "1.0.0-alpha6") (d (list (d (n "amq-protocol") (r "= 6.0.0-beta2") (k 0)) (d (n "amq-protocol-codegen") (r "= 6.0.0-beta2") (d #t) (k 1)) (d (n "async-task") (r "^3.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "tcp-stream") (r "^0.11") (d #t) (k 2)))) (h "170229f5xp6yj3rbjy14zfxr40k8b456fg4kxvl124i9rgqpfilj") (f (quote (("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-1.0.0-beta1 (c (n "lapin") (v "1.0.0-beta1") (d (list (d (n "amq-protocol") (r "= 6.0.0-beta6") (k 0)) (d (n "amq-protocol-codegen") (r "= 6.0.0-beta6") (d #t) (k 1)) (d (n "async-task") (r "^3.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("thread-pool"))) (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)))) (h "0vl5y4nmx3jf5609r8cl5wskkb1qm3q08ja6sq2dr1cc3h5s0ipk") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-1.0.0-beta2 (c (n "lapin") (v "1.0.0-beta2") (d (list (d (n "amq-protocol") (r "= 6.0.0-rc1") (k 0)) (d (n "amq-protocol-codegen") (r "= 6.0.0-rc1") (d #t) (k 1)) (d (n "async-task") (r "^3.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("thread-pool"))) (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)))) (h "1xc8n1j6b0babalg0irfc3wbqh18r1mbdwyrwqwaac561kp8b8m9") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-1.0.0-beta3 (c (n "lapin") (v "1.0.0-beta3") (d (list (d (n "amq-protocol") (r "= 6.0.0-rc2") (k 0)) (d (n "amq-protocol-codegen") (r "= 6.0.0-rc2") (d #t) (k 1)) (d (n "async-task") (r "^3.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("thread-pool"))) (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)))) (h "0x89y6pfr5y1vxayb18x1fkgw1mpb2ig0020pjmp5h2za579r165") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-1.0.0-beta4 (c (n "lapin") (v "1.0.0-beta4") (d (list (d (n "amq-protocol") (r "= 6.0.0-rc3") (k 0)) (d (n "amq-protocol-codegen") (r "= 6.0.0-rc3") (d #t) (k 1)) (d (n "async-task") (r "^3.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("thread-pool"))) (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)))) (h "1hw2wh4fpzrdynhb6xyc7yiyhc2msqz0z1mqhvwq6mli0bxyvkns") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-1.0.0-rc1 (c (n "lapin") (v "1.0.0-rc1") (d (list (d (n "amq-protocol") (r "= 6.0.0-rc4") (k 0)) (d (n "amq-protocol-codegen") (r "= 6.0.0-rc4") (d #t) (k 1)) (d (n "async-task") (r "^3.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("thread-pool"))) (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)))) (h "0l9i4y9il8kvzr9z71104365bl8jx9b9l0vzpqxk96p5nhcsf7q3") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-1.0.0-rc2 (c (n "lapin") (v "1.0.0-rc2") (d (list (d (n "amq-protocol") (r "= 6.0.0-rc4") (k 0)) (d (n "amq-protocol-codegen") (r "= 6.0.0-rc4") (d #t) (k 1)) (d (n "async-task") (r "^3.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("thread-pool"))) (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)))) (h "0y9hj34dndc7hc39a5l8bpbbj13lnw2jxcpnahjk84clxz7jgb2w") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-1.0.0-rc3 (c (n "lapin") (v "1.0.0-rc3") (d (list (d (n "amq-protocol") (r "= 6.0.0-rc4") (k 0)) (d (n "amq-protocol-codegen") (r "= 6.0.0-rc4") (d #t) (k 1)) (d (n "async-task") (r "^3.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("thread-pool"))) (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)))) (h "1k8n983bxcn5i15c23b86hpzw2rmwafyfll2hmx870amirrm8ps8") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-1.0.0-rc4 (c (n "lapin") (v "1.0.0-rc4") (d (list (d (n "amq-protocol") (r "= 6.0.0-rc6") (k 0)) (d (n "amq-protocol-codegen") (r "= 6.0.0-rc6") (d #t) (k 1)) (d (n "async-task") (r "^3.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("thread-pool"))) (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)))) (h "1gbh392f6nb07q3fvayfdmnlhabwsam4z3h05pf2jaqr3s7z51ss") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-1.0.0-rc5 (c (n "lapin") (v "1.0.0-rc5") (d (list (d (n "amq-protocol") (r "= 6.0.0-rc7") (k 0)) (d (n "amq-protocol-codegen") (r "= 6.0.0-rc7") (d #t) (k 1)) (d (n "async-task") (r "^3.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("thread-pool"))) (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)))) (h "02wyi8lpgr2lhm365gn12rg5vmyra8yc5xzagcjhxlcirdq5iwah") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls")))) (y #t)))

(define-public crate-lapin-1.0.0-rc6 (c (n "lapin") (v "1.0.0-rc6") (d (list (d (n "amq-protocol") (r "= 6.0.0-rc7") (k 0)) (d (n "amq-protocol-codegen") (r "= 6.0.0-rc7") (d #t) (k 1)) (d (n "async-task") (r "^3.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("thread-pool"))) (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)))) (h "1qq5225w13ybivv2rdwzfa02ghdh19ckmjays9zxxjd5n2h1kk3g") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-1.0.0 (c (n "lapin") (v "1.0.0") (d (list (d (n "amq-protocol") (r "=6.0.0-rc9") (k 0)) (d (n "amq-protocol-codegen") (r "=6.0.0-rc9") (d #t) (k 1)) (d (n "async-task") (r "^3.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("thread-pool"))) (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)))) (h "0j1nk3ybq8svccws5hzkfql30livrk1a88xh3fhrv1132zhyii57") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-1.0.1 (c (n "lapin") (v "1.0.1") (d (list (d (n "amq-protocol") (r "=6.0.0-rc9") (k 0)) (d (n "amq-protocol-codegen") (r "=6.0.0-rc9") (d #t) (k 1)) (d (n "async-task") (r "^3.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("thread-pool"))) (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)))) (h "1rp8kdw4cr3m1vhi17x2avl9bi1yxm30zh689wzzplf80l47pxlp") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-1.0.2 (c (n "lapin") (v "1.0.2") (d (list (d (n "amq-protocol") (r "=6.0.0-rc10") (k 0)) (d (n "amq-protocol-codegen") (r "=6.0.0-rc10") (d #t) (k 1)) (d (n "async-task") (r "^3.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("thread-pool"))) (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)))) (h "0lccn37p4avj5gm19f99k6f11w94xq25fbvg1p9qgzx4s6c25xz4") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls"))))))

(define-public crate-lapin-1.1.0 (c (n "lapin") (v "1.1.0") (d (list (d (n "amq-protocol") (r "=6.0.0-rc11") (k 0)) (d (n "amq-protocol-codegen") (r "=6.0.0-rc11") (o #t) (d #t) (k 1)) (d (n "async-task") (r "^3.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("thread-pool"))) (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)))) (h "1gpvbni35w3s0rdgqvb8qdjrqfk7xxdj950f13xvmwdr0xfyrnmv") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen"))))))

(define-public crate-lapin-1.1.1 (c (n "lapin") (v "1.1.1") (d (list (d (n "amq-protocol") (r "=6.0.0-rc11") (k 0)) (d (n "amq-protocol-codegen") (r "=6.0.0-rc11") (o #t) (d #t) (k 1)) (d (n "async-task") (r "^3.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("thread-pool"))) (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)))) (h "0dx6ima97zja0mvaahv43p7ma0izywjg0mj08pl0gssxs2x3gpci") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen"))))))

(define-public crate-lapin-1.1.2 (c (n "lapin") (v "1.1.2") (d (list (d (n "amq-protocol") (r "=6.0.0-rc11") (k 0)) (d (n "amq-protocol-codegen") (r "=6.0.0-rc11") (o #t) (d #t) (k 1)) (d (n "async-task") (r "^3.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("thread-pool"))) (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)))) (h "0a5bg4vma667z1adk3mcw1wgv28qwm1651ni5lv8zgxl2l1sikp8") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen"))))))

(define-public crate-lapin-1.1.3 (c (n "lapin") (v "1.1.3") (d (list (d (n "amq-protocol") (r "=6.0.0-rc11") (k 0)) (d (n "amq-protocol-codegen") (r "=6.0.0-rc11") (o #t) (d #t) (k 1)) (d (n "async-task") (r "^3.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("thread-pool"))) (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)))) (h "0zm0ys8g2lvdrh87ywxn2xrgiwsg08grai61pz1pmy194l0qy9fg") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen"))))))

(define-public crate-lapin-1.2.0 (c (n "lapin") (v "1.2.0") (d (list (d (n "amq-protocol") (r "=6.0.0-rc12") (k 0)) (d (n "amq-protocol-codegen") (r "=6.0.0-rc12") (o #t) (d #t) (k 1)) (d (n "async-task") (r "^3.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("thread-pool"))) (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)))) (h "0yf1j4kcf1fnpp258cs870k3snz7yrnycmzwmgfw1sldq0m83xm2") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen"))))))

(define-public crate-lapin-1.2.1 (c (n "lapin") (v "1.2.1") (d (list (d (n "amq-protocol") (r "=6.0.0-rc12") (k 0)) (d (n "amq-protocol-codegen") (r "=6.0.0-rc12") (o #t) (d #t) (k 1)) (d (n "async-task") (r "^3.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("thread-pool"))) (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)))) (h "0h8g59x2gwxcxaw194wgjz5qazci6nggqf6hqym3csshn70vlqsq") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen"))))))

(define-public crate-lapin-1.2.2 (c (n "lapin") (v "1.2.2") (d (list (d (n "amq-protocol") (r "=6.0.0-rc12") (k 0)) (d (n "amq-protocol-codegen") (r "=6.0.0-rc12") (o #t) (d #t) (k 1)) (d (n "async-task") (r "^3.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("thread-pool"))) (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)))) (h "1vpf8y2wsadqicn1wpivb7szy19jj31pv4kn68ng87n8fiwdh3gl") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen"))))))

(define-public crate-lapin-1.2.3 (c (n "lapin") (v "1.2.3") (d (list (d (n "amq-protocol") (r "=6.0.0-rc12") (k 0)) (d (n "amq-protocol-codegen") (r "=6.0.0-rc12") (o #t) (d #t) (k 1)) (d (n "async-task") (r "^3.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("thread-pool"))) (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)))) (h "0b98f3qndrdygh8978xr1d8n6lb3rxpyvw0rm6nfjkw3aq5bd32a") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen"))))))

(define-public crate-lapin-1.2.4 (c (n "lapin") (v "1.2.4") (d (list (d (n "amq-protocol") (r "=6.0.0-rc12") (k 0)) (d (n "amq-protocol-codegen") (r "=6.0.0-rc12") (o #t) (d #t) (k 1)) (d (n "async-task") (r "^3.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("thread-pool"))) (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.3.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)))) (h "0g1yxva2p27fja9mvbwh900y3lar1i20s9vgmi047aq92z9y9lw1") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen"))))))

(define-public crate-lapin-1.2.5 (c (n "lapin") (v "1.2.5") (d (list (d (n "amq-protocol") (r "=6.0.0-rc12") (k 0)) (d (n "amq-protocol-codegen") (r "=6.0.0-rc12") (o #t) (d #t) (k 1)) (d (n "async-task") (r "^3.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("thread-pool"))) (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)))) (h "0id6469q6mg550rdwqgbyn990xj31fyshadr12dvsvj3vqqazsz4") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen"))))))

(define-public crate-lapin-1.2.6 (c (n "lapin") (v "1.2.6") (d (list (d (n "amq-protocol") (r "=6.0.0-rc12") (k 0)) (d (n "amq-protocol-codegen") (r "=6.0.0-rc12") (o #t) (d #t) (k 1)) (d (n "async-task") (r "^3.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("thread-pool"))) (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)))) (h "0acxvwcj8ncw0861fpd54gqcak5j37k6hhin33qfflqhgmcb46nz") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen"))))))

(define-public crate-lapin-1.2.7 (c (n "lapin") (v "1.2.7") (d (list (d (n "amq-protocol") (r "=6.0.0-rc12") (k 0)) (d (n "amq-protocol-codegen") (r "=6.0.0-rc12") (o #t) (d #t) (k 1)) (d (n "async-task") (r "^3.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("thread-pool"))) (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)))) (h "0fji9k8hbarz4dhmn1vc1z67zrzqf8w2y5bap63sn8vpi5jxpvrw") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen"))))))

(define-public crate-lapin-1.2.8 (c (n "lapin") (v "1.2.8") (d (list (d (n "amq-protocol") (r "=6.0.0-rc12") (k 0)) (d (n "amq-protocol-codegen") (r "=6.0.0-rc12") (o #t) (d #t) (k 1)) (d (n "async-task") (r "^4.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("thread-pool"))) (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)))) (h "1c48v2bhcsvf15mpgvlc2x8h47kc8y6y7xrii4arkzshn7rwqiq0") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen"))))))

(define-public crate-lapin-1.3.0 (c (n "lapin") (v "1.3.0") (d (list (d (n "amq-protocol") (r "=6.0.0-rc12") (k 0)) (d (n "amq-protocol-codegen") (r "=6.0.0-rc12") (o #t) (d #t) (k 1)) (d (n "async-task") (r "^4.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("thread-pool"))) (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)))) (h "182lwi2j5207mkcx9pl049djlxkaqh3yj79jbyznyqwl8ypkkskm") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen"))))))

(define-public crate-lapin-1.3.1 (c (n "lapin") (v "1.3.1") (d (list (d (n "amq-protocol") (r "=6.0.0-rc12") (k 0)) (d (n "amq-protocol-codegen") (r "=6.0.0-rc12") (o #t) (d #t) (k 1)) (d (n "async-task") (r "^4.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("thread-pool"))) (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)))) (h "16rx5ws3py3jdmfs5jd4kjyicnhrc4va8kv4j0yyqs0x1c8a7hsn") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen"))))))

(define-public crate-lapin-1.4.0 (c (n "lapin") (v "1.4.0") (d (list (d (n "amq-protocol") (r "=6.0.0-rc12") (k 0)) (d (n "amq-protocol-codegen") (r "=6.0.0-rc12") (o #t) (d #t) (k 1)) (d (n "async-task") (r "^4.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("thread-pool"))) (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)))) (h "1h5cnaa7fvwxc6zlcgzpalrz3wv6w62m8fxpqdnggxbidg9x6i70") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen"))))))

(define-public crate-lapin-1.4.1 (c (n "lapin") (v "1.4.1") (d (list (d (n "amq-protocol") (r "=6.0.0-rc12") (k 0)) (d (n "amq-protocol-codegen") (r "=6.0.0-rc12") (o #t) (d #t) (k 1)) (d (n "async-task") (r "^4.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("thread-pool"))) (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)))) (h "1a7iijd17qj4d984l3snqzk2a4v2zd4r0k74b50mfg1rv77yam1f") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen"))))))

(define-public crate-lapin-1.4.2 (c (n "lapin") (v "1.4.2") (d (list (d (n "amq-protocol") (r "=6.0.0-rc12") (k 0)) (d (n "amq-protocol-codegen") (r "=6.0.0-rc12") (o #t) (d #t) (k 1)) (d (n "async-task") (r "^4.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (f (quote ("thread-pool"))) (d #t) (k 2)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)))) (h "1hr15b1dzh57xcj1yw8sr2jh98ph5f0ikd3amlpjbfslapj0b3cd") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen"))))))

(define-public crate-lapin-1.4.3 (c (n "lapin") (v "1.4.3") (d (list (d (n "amq-protocol") (r "=6.0.0-rc12") (k 0)) (d (n "amq-protocol-codegen") (r "=6.0.0-rc12") (o #t) (d #t) (k 1)) (d (n "async-global-executor") (r "^1.4") (d #t) (k 2)) (d (n "async-task") (r "^4.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)))) (h "0jcr6izv1p5dbzzqcy26dq73jrhvv7lr3bpjv1rvd4znvjffy085") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen"))))))

(define-public crate-lapin-1.5.0 (c (n "lapin") (v "1.5.0") (d (list (d (n "amq-protocol") (r "^6.0.1") (k 0)) (d (n "amq-protocol-codegen") (r "^6.0.1") (o #t) (d #t) (k 1)) (d (n "async-global-executor") (r "^1.4") (d #t) (k 2)) (d (n "async-task") (r "^4.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)))) (h "1mlpacc7cmnx173ywxwffsi5shxyc4hw2yqxwnx845964gfy36jl") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen"))))))

(define-public crate-lapin-1.6.0 (c (n "lapin") (v "1.6.0") (d (list (d (n "amq-protocol") (r "^6.0.2") (k 0)) (d (n "amq-protocol-codegen") (r "^6.0.2") (o #t) (d #t) (k 1)) (d (n "async-global-executor") (r "^1.4") (d #t) (k 2)) (d (n "async-task") (r "^4.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7.6") (f (quote ("net" "os-poll"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1a9igqbyi7hwn9f1ch5q151mvi0lzwnsdk3g825q4gw57vsja3r4") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen"))))))

(define-public crate-lapin-1.6.1 (c (n "lapin") (v "1.6.1") (d (list (d (n "amq-protocol") (r ">=6.0.2, <7.0.0") (k 0)) (d (n "amq-protocol-codegen") (r ">=6.0.2, <7.0.0") (o #t) (d #t) (k 1)) (d (n "async-global-executor") (r ">=1.4.0, <2.0.0") (d #t) (k 2)) (d (n "async-task") (r ">=4.0.0, <5.0.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r ">=0.5.0, <0.6.0") (d #t) (k 0)) (d (n "env_logger") (r ">=0.8.0, <0.9.0") (d #t) (k 2)) (d (n "futures-core") (r ">=0.3.0, <0.4.0") (d #t) (k 0)) (d (n "futures-test") (r ">=0.3.0, <0.4.0") (d #t) (k 2)) (d (n "futures-util") (r ">=0.3.0, <0.4.0") (d #t) (k 2)) (d (n "log") (r ">=0.4.0, <0.5.0") (d #t) (k 0)) (d (n "mio") (r ">=0.7.6, <0.8.0") (f (quote ("net" "os-poll"))) (d #t) (k 0)) (d (n "parking_lot") (r ">=0.11.0, <0.12.0") (d #t) (k 0)) (d (n "pinky-swear") (r ">=4.4.0, <5.0.0") (d #t) (k 0)) (d (n "serde") (r ">=1.0.0, <2.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r ">=1.0.0, <2.0.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r ">=1.0.0, <2.0.0") (d #t) (k 2)))) (h "1cp7lyyqdq5ym06h7snrbcpcvf9bnpkz1w6200fga6a4aaqp6hd0") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen"))))))

(define-public crate-lapin-1.6.2 (c (n "lapin") (v "1.6.2") (d (list (d (n "amq-protocol") (r "^6.0.2") (k 0)) (d (n "amq-protocol-codegen") (r "^6.0.2") (o #t) (d #t) (k 1)) (d (n "async-global-executor") (r "^1.4") (d #t) (k 2)) (d (n "async-task") (r "^4.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7.6") (f (quote ("net" "os-poll"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "03ppamd0hppz3s4sc54vv51n6inpx9vv1gllqa3q7qq7hy1n2hig") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen"))))))

(define-public crate-lapin-1.6.3 (c (n "lapin") (v "1.6.3") (d (list (d (n "amq-protocol") (r "^6.0.2") (k 0)) (d (n "amq-protocol-codegen") (r "^6.0.2") (o #t) (d #t) (k 1)) (d (n "async-global-executor") (r "^1.4") (d #t) (k 2)) (d (n "async-task") (r "^4.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7.6") (f (quote ("net" "os-poll"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0a2q10n6z22336qk57by64f4b2l45cn9bhvh11pj3ggpb3cdvwmb") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen"))))))

(define-public crate-lapin-1.6.4 (c (n "lapin") (v "1.6.4") (d (list (d (n "amq-protocol") (r "^6.0.2") (k 0)) (d (n "amq-protocol-codegen") (r "^6.0.2") (o #t) (d #t) (k 1)) (d (n "async-global-executor") (r "^1.4") (d #t) (k 2)) (d (n "async-task") (r "^4.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7.6") (f (quote ("net" "os-poll"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0m8s2b9mfawxii25jzmh8227pqmrjz9d52v2i43vj838zzp82638") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen"))))))

(define-public crate-lapin-1.6.5 (c (n "lapin") (v "1.6.5") (d (list (d (n "amq-protocol") (r "^6.0.2") (k 0)) (d (n "amq-protocol-codegen") (r "^6.0.2") (o #t) (d #t) (k 1)) (d (n "async-global-executor") (r "^1.4") (d #t) (k 2)) (d (n "async-task") (r "^4.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7.6") (f (quote ("net" "os-poll"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0ndrkfh5yiwaa10fy63a7fbac4762hd63vg0drhjzxc50fafh3wl") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen"))))))

(define-public crate-lapin-1.6.6 (c (n "lapin") (v "1.6.6") (d (list (d (n "amq-protocol") (r "^6.0.2") (k 0)) (d (n "amq-protocol-codegen") (r "^6.0.2") (o #t) (d #t) (k 1)) (d (n "async-global-executor") (r "^1.4") (d #t) (k 2)) (d (n "async-task") (r "^4.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7.6") (f (quote ("net" "os-poll"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0395w1gih1bsz0hy2np7yp0app8qalm9vbx1y6kpgfxm7rfx1cx3") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen"))))))

(define-public crate-lapin-2.0.0-alpha.1 (c (n "lapin") (v "2.0.0-alpha.1") (d (list (d (n "amq-protocol") (r "^7.0.0-alpha.5") (k 0)) (d (n "amq-protocol-codegen") (r "=7.0.0-alpha.5") (o #t) (d #t) (k 1)) (d (n "async-global-executor") (r "^2.0") (d #t) (k 2)) (d (n "async-global-executor-trait") (r "^1.0") (f (quote ("async-io"))) (d #t) (k 0)) (d (n "async-reactor-trait") (r "^0.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.42") (d #t) (k 0)) (d (n "executor-trait") (r "^1.0") (d #t) (k 0)) (d (n "flume") (r "^0.10") (f (quote ("async"))) (k 0)) (d (n "futures-lite") (r "^1.7") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "pinky-swear") (r "^5.1") (d #t) (k 0)) (d (n "reactor-trait") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("fmt"))) (d #t) (k 2)) (d (n "waker-fn") (r "^1.1") (d #t) (k 0)) (d (n "waker-fn") (r "^1.1") (d #t) (k 2)))) (h "0hx0d2lm9ax5nn2savzvawd2pjc1sr8299q58cfncaipcmm8g633") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "rustls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen"))))))

(define-public crate-lapin-2.0.0-alpha.2 (c (n "lapin") (v "2.0.0-alpha.2") (d (list (d (n "amq-protocol") (r "^7.0.0-alpha.6") (k 0)) (d (n "amq-protocol-codegen") (r "=7.0.0-alpha.6") (o #t) (d #t) (k 1)) (d (n "async-global-executor") (r "^2.0") (d #t) (k 2)) (d (n "async-global-executor-trait") (r "^2.0") (f (quote ("async-io"))) (d #t) (k 0)) (d (n "async-reactor-trait") (r "^0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.42") (d #t) (k 0)) (d (n "executor-trait") (r "^2.0") (d #t) (k 0)) (d (n "flume") (r "^0.10") (f (quote ("async"))) (k 0)) (d (n "futures-lite") (r "^1.7") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "pinky-swear") (r "^5.1") (d #t) (k 0)) (d (n "reactor-trait") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("fmt"))) (d #t) (k 2)) (d (n "waker-fn") (r "^1.1") (d #t) (k 0)) (d (n "waker-fn") (r "^1.1") (d #t) (k 2)))) (h "160nxcmakbmgzgc2llhzy18l70qpridbvfs47pcffzwaajrz99jd") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "rustls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen"))))))

(define-public crate-lapin-1.6.7 (c (n "lapin") (v "1.6.7") (d (list (d (n "amq-protocol") (r "^6.0.2") (k 0)) (d (n "amq-protocol-codegen") (r "^6.0.2") (o #t) (d #t) (k 1)) (d (n "async-global-executor") (r "^2.0") (d #t) (k 2)) (d (n "async-task") (r "^4.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7.6") (f (quote ("net" "os-poll"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1sbjs5ykcznx94l76mfglf4x7wq2ia3hk8w4lnipv0547pz7nl3z") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen"))))))

(define-public crate-lapin-1.6.8 (c (n "lapin") (v "1.6.8") (d (list (d (n "amq-protocol") (r "^6.0.2") (k 0)) (d (n "amq-protocol-codegen") (r "^6.0.2") (o #t) (d #t) (k 1)) (d (n "async-global-executor") (r "^2.0") (d #t) (k 2)) (d (n "async-task") (r "^4.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7.6") (f (quote ("net" "os-poll"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "038b5nwqamnxsnnpd8y9888hshbwy0yizvc95haqsahhl7hdsy3h") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen"))))))

(define-public crate-lapin-2.0.0-alpha.3 (c (n "lapin") (v "2.0.0-alpha.3") (d (list (d (n "amq-protocol") (r "=7.0.0-alpha.7") (k 0)) (d (n "amq-protocol-codegen") (r "=7.0.0-alpha.7") (o #t) (d #t) (k 1)) (d (n "async-global-executor") (r "^2.0") (d #t) (k 2)) (d (n "async-global-executor-trait") (r "^2.0") (f (quote ("async-io"))) (d #t) (k 0)) (d (n "async-reactor-trait") (r "^0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.42") (d #t) (k 0)) (d (n "executor-trait") (r "^2.0") (d #t) (k 0)) (d (n "flume") (r "^0.10") (f (quote ("async"))) (k 0)) (d (n "futures-lite") (r "^1.7") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "pinky-swear") (r "^5.1") (d #t) (k 0)) (d (n "reactor-trait") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("fmt"))) (d #t) (k 2)) (d (n "waker-fn") (r "^1.1") (d #t) (k 0)) (d (n "waker-fn") (r "^1.1") (d #t) (k 2)))) (h "1q6l6d5wm6hg9i713kid9yn858ig8fw68nqv6nxrr62haygrx2li") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "rustls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen"))))))

(define-public crate-lapin-1.6.9 (c (n "lapin") (v "1.6.9") (d (list (d (n "amq-protocol") (r "^6.0.2") (k 0)) (d (n "amq-protocol-codegen") (r "^6.0.2") (o #t) (d #t) (k 1)) (d (n "async-global-executor") (r "^2.0") (d #t) (k 2)) (d (n "async-task") (r "^4.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7.6") (f (quote ("net" "os-poll"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "172g18m7qh6zfgsaz6n9wsivn15j5yzc9n7aph3q49qlaassypbb") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen"))))))

(define-public crate-lapin-1.7.0 (c (n "lapin") (v "1.7.0") (d (list (d (n "amq-protocol") (r "^6.0.2") (k 0)) (d (n "amq-protocol-codegen") (r "^6.0.2") (o #t) (d #t) (k 1)) (d (n "async-global-executor") (r "^2.0") (d #t) (k 2)) (d (n "async-task") (r "^4.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7.6") (f (quote ("net" "os-poll"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1xv0x8ykddnkfrahnkbjnw52vycmkaibim2my9avi2agmcvkqqzn") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen"))))))

(define-public crate-lapin-1.7.1 (c (n "lapin") (v "1.7.1") (d (list (d (n "amq-protocol") (r "^6.0.2") (k 0)) (d (n "amq-protocol-codegen") (r "^6.0.2") (o #t) (d #t) (k 1)) (d (n "async-global-executor") (r "^2.0") (d #t) (k 2)) (d (n "async-task") (r "^4.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7.6") (f (quote ("net" "os-poll"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1k5zgs0djm5bq7bjkbg96fa5fncwlcd850lvgnlrcm78j2kj37av") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen"))))))

(define-public crate-lapin-2.0.0-alpha.4 (c (n "lapin") (v "2.0.0-alpha.4") (d (list (d (n "amq-protocol") (r "=7.0.0-alpha.7") (k 0)) (d (n "amq-protocol-codegen") (r "=7.0.0-alpha.7") (o #t) (d #t) (k 1)) (d (n "async-global-executor") (r "^2.0") (d #t) (k 2)) (d (n "async-global-executor-trait") (r "^2.0") (f (quote ("async-io"))) (d #t) (k 0)) (d (n "async-reactor-trait") (r "^0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.42") (d #t) (k 0)) (d (n "executor-trait") (r "^2.0") (d #t) (k 0)) (d (n "flume") (r "^0.10") (f (quote ("async"))) (k 0)) (d (n "futures-lite") (r "^1.7") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "pinky-swear") (r "^5.1") (d #t) (k 0)) (d (n "reactor-trait") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("fmt"))) (d #t) (k 2)) (d (n "waker-fn") (r "^1.1") (d #t) (k 0)) (d (n "waker-fn") (r "^1.1") (d #t) (k 2)))) (h "16vfzah8d7qs2hmys6567i032mkhzk08b774kdn70958iqd24r2k") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "rustls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen"))))))

(define-public crate-lapin-1.8.0 (c (n "lapin") (v "1.8.0") (d (list (d (n "amq-protocol") (r "^6.1.0") (k 0)) (d (n "amq-protocol-codegen") (r "^6.1.0") (o #t) (d #t) (k 1)) (d (n "async-global-executor") (r "^2.0") (d #t) (k 2)) (d (n "async-task") (r "^4.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7.6") (f (quote ("net" "os-poll"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0x0bjmzq6xpply08mfjzlhpvcxr4rq3k7h3kdjrr0hhsx1f0h5cl") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen"))))))

(define-public crate-lapin-2.0.0-beta.1 (c (n "lapin") (v "2.0.0-beta.1") (d (list (d (n "amq-protocol") (r "=7.0.0-beta.1") (k 0)) (d (n "amq-protocol-codegen") (r "=7.0.0-beta.1") (o #t) (d #t) (k 1)) (d (n "async-global-executor") (r "^2.0") (d #t) (k 2)) (d (n "async-global-executor-trait") (r "^2.0") (f (quote ("async-io"))) (d #t) (k 0)) (d (n "async-reactor-trait") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.42") (d #t) (k 0)) (d (n "executor-trait") (r "^2.0") (d #t) (k 0)) (d (n "flume") (r "^0.10") (f (quote ("async"))) (k 0)) (d (n "futures-lite") (r "^1.7") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "pinky-swear") (r "^5.1") (d #t) (k 0)) (d (n "reactor-trait") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt"))) (d #t) (k 2)) (d (n "waker-fn") (r "^1.1") (d #t) (k 0)) (d (n "waker-fn") (r "^1.1") (d #t) (k 2)))) (h "0xfa3chz3js6wn23z8gfacia4nbr81l5kcsvjj97z4wqma2cpjys") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "rustls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen"))))))

(define-public crate-lapin-1.8.1 (c (n "lapin") (v "1.8.1") (d (list (d (n "amq-protocol") (r "^6.1.0") (k 0)) (d (n "amq-protocol-codegen") (r "^6.1.0") (o #t) (d #t) (k 1)) (d (n "async-global-executor") (r "^2.0") (d #t) (k 2)) (d (n "async-task") (r "^4.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7.6") (f (quote ("net" "os-poll"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0yc2y18szn886nsklxjyibpc2nzd560sz9yppqg19a6jl5xa5745") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen"))))))

(define-public crate-lapin-1.9.0 (c (n "lapin") (v "1.9.0") (d (list (d (n "amq-protocol") (r "^6.1.0") (k 0)) (d (n "amq-protocol-codegen") (r "^6.1.0") (o #t) (d #t) (k 1)) (d (n "async-global-executor") (r "^2.0") (d #t) (k 2)) (d (n "async-task") (r "^4.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7.6") (f (quote ("net" "os-poll"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1da9yd3xn0vvmirpkxsrvlm9i9ydh3a90s50rwv1b2r4b8a8q2pg") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen"))))))

(define-public crate-lapin-2.0.0-beta.2 (c (n "lapin") (v "2.0.0-beta.2") (d (list (d (n "amq-protocol") (r "=7.0.0-beta.1") (k 0)) (d (n "amq-protocol-codegen") (r "=7.0.0-beta.1") (o #t) (d #t) (k 1)) (d (n "async-global-executor") (r "^2.0") (d #t) (k 2)) (d (n "async-global-executor-trait") (r "^2.0") (f (quote ("async-io"))) (d #t) (k 0)) (d (n "async-reactor-trait") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.42") (d #t) (k 0)) (d (n "executor-trait") (r "^2.0") (d #t) (k 0)) (d (n "flume") (r "^0.10") (f (quote ("async"))) (k 0)) (d (n "futures-lite") (r "^1.7") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "pinky-swear") (r "^5.1") (d #t) (k 0)) (d (n "reactor-trait") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt"))) (d #t) (k 2)) (d (n "waker-fn") (r "^1.1") (d #t) (k 0)) (d (n "waker-fn") (r "^1.1") (d #t) (k 2)))) (h "1zy0jkxycvr36lzzdwahxp011vk1kd8w827rvr3hsxs1dypfq778") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "rustls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen"))))))

(define-public crate-lapin-2.0.0-beta.3 (c (n "lapin") (v "2.0.0-beta.3") (d (list (d (n "amq-protocol") (r "=7.0.0") (k 0)) (d (n "amq-protocol-codegen") (r "=7.0.0") (o #t) (d #t) (k 1)) (d (n "async-global-executor") (r "^2.0") (d #t) (k 2)) (d (n "async-global-executor-trait") (r "^2.0") (f (quote ("async-io"))) (d #t) (k 0)) (d (n "async-reactor-trait") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.42") (d #t) (k 0)) (d (n "executor-trait") (r "^2.0") (d #t) (k 0)) (d (n "flume") (r "^0.10") (f (quote ("async"))) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-io") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1.7") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "pinky-swear") (r "^6.0") (d #t) (k 0)) (d (n "reactor-trait") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt"))) (d #t) (k 2)) (d (n "waker-fn") (r "^1.1") (d #t) (k 0)) (d (n "waker-fn") (r "^1.1") (d #t) (k 2)))) (h "02rdj44m530pmkwrfqj0jg9fi758n88xxq4ny0czxqglgx5z0any") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "rustls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen")))) (r "1.56.0")))

(define-public crate-lapin-1.10.0 (c (n "lapin") (v "1.10.0") (d (list (d (n "amq-protocol") (r "^6.1.0") (k 0)) (d (n "amq-protocol-codegen") (r "^6.1.0") (o #t) (d #t) (k 1)) (d (n "async-global-executor") (r "^2.0") (d #t) (k 2)) (d (n "async-task") (r "^4.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-test") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7.6") (f (quote ("net" "os-poll"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pinky-swear") (r "^4.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0vkirv04a45izm9r7ppbdnpq3bcry34lf3mp7bkw5048gg6fmh1n") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen"))))))

(define-public crate-lapin-2.0.0 (c (n "lapin") (v "2.0.0") (d (list (d (n "amq-protocol") (r "=7.0.0") (k 0)) (d (n "amq-protocol-codegen") (r "=7.0.0") (o #t) (d #t) (k 1)) (d (n "async-global-executor") (r "^2.0") (d #t) (k 2)) (d (n "async-global-executor-trait") (r "^2.1") (f (quote ("async-io"))) (d #t) (k 0)) (d (n "async-reactor-trait") (r "^1.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.42") (d #t) (k 0)) (d (n "executor-trait") (r "^2.1") (d #t) (k 0)) (d (n "flume") (r "^0.10") (f (quote ("async"))) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-io") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1.7") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pinky-swear") (r "^6.1") (d #t) (k 0)) (d (n "reactor-trait") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt"))) (d #t) (k 2)) (d (n "waker-fn") (r "^1.1") (d #t) (k 0)) (d (n "waker-fn") (r "^1.1") (d #t) (k 2)))) (h "1zbl8jr7yiciwanmgw5rkx6qnmflamivn71jg6mh54w5c4qxvafz") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "rustls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen")))) (r "1.56.0")))

(define-public crate-lapin-2.0.1 (c (n "lapin") (v "2.0.1") (d (list (d (n "amq-protocol") (r "=7.0.0") (k 0)) (d (n "amq-protocol-codegen") (r "=7.0.0") (o #t) (d #t) (k 1)) (d (n "async-global-executor") (r "^2.0") (d #t) (k 2)) (d (n "async-global-executor-trait") (r "^2.1") (f (quote ("async-io"))) (d #t) (k 0)) (d (n "async-reactor-trait") (r "^1.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.42") (d #t) (k 0)) (d (n "executor-trait") (r "^2.1") (d #t) (k 0)) (d (n "flume") (r "^0.10") (f (quote ("async"))) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-io") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1.7") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pinky-swear") (r "^6.1") (d #t) (k 0)) (d (n "reactor-trait") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt"))) (d #t) (k 2)) (d (n "waker-fn") (r "^1.1") (d #t) (k 0)) (d (n "waker-fn") (r "^1.1") (d #t) (k 2)))) (h "195i9dkl0i3xx0fmz0iax8dw0qxlfij9a1x8xb8f4pkg38in3s2h") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "rustls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen")))) (r "1.56.0")))

(define-public crate-lapin-2.0.2 (c (n "lapin") (v "2.0.2") (d (list (d (n "amq-protocol") (r "=7.0.0") (k 0)) (d (n "amq-protocol-codegen") (r "=7.0.0") (o #t) (d #t) (k 1)) (d (n "async-global-executor") (r "^2.0") (d #t) (k 2)) (d (n "async-global-executor-trait") (r "^2.1") (f (quote ("async-io"))) (d #t) (k 0)) (d (n "async-reactor-trait") (r "^1.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.42") (d #t) (k 0)) (d (n "executor-trait") (r "^2.1") (d #t) (k 0)) (d (n "flume") (r "^0.10") (f (quote ("async"))) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-io") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1.7") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pinky-swear") (r "^6.1") (d #t) (k 0)) (d (n "reactor-trait") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt"))) (d #t) (k 2)) (d (n "waker-fn") (r "^1.1") (d #t) (k 0)) (d (n "waker-fn") (r "^1.1") (d #t) (k 2)))) (h "0vw6k0myadgc08pci82zdmbwqyy67xdhjv8v6dbqg940jf9k45k1") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "rustls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen")))) (r "1.56.0")))

(define-public crate-lapin-2.0.3 (c (n "lapin") (v "2.0.3") (d (list (d (n "amq-protocol") (r "^7.0") (k 0)) (d (n "amq-protocol-codegen") (r "^7.0") (o #t) (d #t) (k 1)) (d (n "async-global-executor") (r "^2.0") (d #t) (k 2)) (d (n "async-global-executor-trait") (r "^2.1") (f (quote ("async-io"))) (d #t) (k 0)) (d (n "async-reactor-trait") (r "^1.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.42") (d #t) (k 0)) (d (n "executor-trait") (r "^2.1") (d #t) (k 0)) (d (n "flume") (r "^0.10") (f (quote ("async"))) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-io") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1.7") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pinky-swear") (r "^6.1") (d #t) (k 0)) (d (n "reactor-trait") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt"))) (d #t) (k 2)) (d (n "waker-fn") (r "^1.1") (d #t) (k 0)) (d (n "waker-fn") (r "^1.1") (d #t) (k 2)))) (h "19kf5iwndl95nd46va11gyxxbh05r89b8wmgi0d9wrqcq9zda3mz") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "rustls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen")))) (r "1.56.0")))

(define-public crate-lapin-2.1.0 (c (n "lapin") (v "2.1.0") (d (list (d (n "amq-protocol") (r "^7.0") (k 0)) (d (n "amq-protocol-codegen") (r "^7.0") (o #t) (d #t) (k 1)) (d (n "async-global-executor") (r "^2.0") (d #t) (k 2)) (d (n "async-global-executor-trait") (r "^2.1") (f (quote ("async-io"))) (d #t) (k 0)) (d (n "async-reactor-trait") (r "^1.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.42") (d #t) (k 0)) (d (n "executor-trait") (r "^2.1") (d #t) (k 0)) (d (n "flume") (r "^0.10") (f (quote ("async"))) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-io") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1.7") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pinky-swear") (r "^6.1") (d #t) (k 0)) (d (n "reactor-trait") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-executor-trait") (r "^2.1.0") (d #t) (k 2)) (d (n "tokio-reactor-trait") (r "^1.1.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt"))) (d #t) (k 2)) (d (n "waker-fn") (r "^1.1") (d #t) (k 0)) (d (n "waker-fn") (r "^1.1") (d #t) (k 2)))) (h "1ki2h73m9dzrpdbwizzbjbw4qrlmhajjzahhqfmh1vffc3qndrmg") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "rustls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen")))) (r "1.56.0")))

(define-public crate-lapin-2.1.1 (c (n "lapin") (v "2.1.1") (d (list (d (n "amq-protocol") (r "^7.0") (k 0)) (d (n "amq-protocol-codegen") (r "^7.0") (o #t) (d #t) (k 1)) (d (n "async-global-executor") (r "^2.0") (d #t) (k 2)) (d (n "async-global-executor-trait") (r "^2.1") (f (quote ("async-io"))) (d #t) (k 0)) (d (n "async-reactor-trait") (r "^1.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.42") (d #t) (k 0)) (d (n "executor-trait") (r "^2.1") (d #t) (k 0)) (d (n "flume") (r "^0.10") (f (quote ("async"))) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-io") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1.7") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pinky-swear") (r "^6.1") (d #t) (k 0)) (d (n "reactor-trait") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-executor-trait") (r "^2.1.0") (d #t) (k 2)) (d (n "tokio-reactor-trait") (r "^1.1.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt"))) (d #t) (k 2)) (d (n "waker-fn") (r "^1.1") (d #t) (k 0)) (d (n "waker-fn") (r "^1.1") (d #t) (k 2)))) (h "03zzjk4zy2bh2jx05lk3lf04ml9g3s2n96i3jvi7aixl65cfl0xx") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "rustls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen")))) (r "1.56.0")))

(define-public crate-lapin-2.1.2 (c (n "lapin") (v "2.1.2") (d (list (d (n "amq-protocol") (r "^7.0") (k 0)) (d (n "amq-protocol-codegen") (r "^7.0") (o #t) (d #t) (k 1)) (d (n "async-global-executor") (r "^2.0") (d #t) (k 2)) (d (n "async-global-executor-trait") (r "^2.1") (f (quote ("async-io"))) (d #t) (k 0)) (d (n "async-reactor-trait") (r "^1.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.42") (d #t) (k 0)) (d (n "executor-trait") (r "^2.1") (d #t) (k 0)) (d (n "flume") (r "^0.10") (f (quote ("async"))) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-io") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1.7") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pinky-swear") (r "^6.1") (d #t) (k 0)) (d (n "reactor-trait") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-executor-trait") (r "^2.1.0") (d #t) (k 2)) (d (n "tokio-reactor-trait") (r "^1.1.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt"))) (d #t) (k 2)) (d (n "waker-fn") (r "^1.1") (d #t) (k 0)) (d (n "waker-fn") (r "^1.1") (d #t) (k 2)))) (h "1x1c2791f1dilvk1vccd47rdjlhrj9igz1l9imy82krc81w2zqi1") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "rustls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen")))) (r "1.63.0")))

(define-public crate-lapin-2.1.3 (c (n "lapin") (v "2.1.3") (d (list (d (n "amq-protocol") (r "^7.0") (k 0)) (d (n "amq-protocol-codegen") (r "^7.0") (o #t) (d #t) (k 1)) (d (n "async-global-executor") (r "^2.0") (d #t) (k 2)) (d (n "async-global-executor-trait") (r "^2.1") (f (quote ("async-io"))) (d #t) (k 0)) (d (n "async-reactor-trait") (r "^1.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.42") (d #t) (k 0)) (d (n "executor-trait") (r "^2.1") (d #t) (k 0)) (d (n "flume") (r "^0.10") (f (quote ("async"))) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-io") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1.7") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pinky-swear") (r "^6.1") (d #t) (k 0)) (d (n "reactor-trait") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-executor-trait") (r "^2.1.0") (d #t) (k 2)) (d (n "tokio-reactor-trait") (r "^1.1.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt"))) (d #t) (k 2)) (d (n "waker-fn") (r "^1.1") (d #t) (k 0)) (d (n "waker-fn") (r "^1.1") (d #t) (k 2)))) (h "1pk6khwhyfn3glcmikrc4c2r38gws2f9qr4vyaldaxi67n1kky1j") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "rustls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen")))) (r "1.63.0")))

(define-public crate-lapin-2.2.0 (c (n "lapin") (v "2.2.0") (d (list (d (n "amq-protocol") (r "^7.0") (k 0)) (d (n "amq-protocol-codegen") (r "^7.0") (o #t) (d #t) (k 1)) (d (n "async-global-executor") (r "^2.0") (d #t) (k 2)) (d (n "async-global-executor-trait") (r "^2.1") (f (quote ("async-io"))) (d #t) (k 0)) (d (n "async-reactor-trait") (r "^1.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.42") (d #t) (k 0)) (d (n "executor-trait") (r "^2.1") (d #t) (k 0)) (d (n "flume") (r "^0.10") (f (quote ("async"))) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-io") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1.7") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pinky-swear") (r "^6.1") (d #t) (k 0)) (d (n "reactor-trait") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-executor-trait") (r "^2.1.0") (d #t) (k 2)) (d (n "tokio-reactor-trait") (r "^1.1.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt"))) (d #t) (k 2)) (d (n "waker-fn") (r "^1.1") (d #t) (k 0)) (d (n "waker-fn") (r "^1.1") (d #t) (k 2)))) (h "00jspjy6aaxbp133s59l8pdck4bbsag12ycx373rpzf04vlwmz68") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "rustls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen")))) (r "1.63.0")))

(define-public crate-lapin-2.2.1 (c (n "lapin") (v "2.2.1") (d (list (d (n "amq-protocol") (r "^7.0") (k 0)) (d (n "amq-protocol-codegen") (r "^7.0") (o #t) (d #t) (k 1)) (d (n "async-global-executor") (r "^2.0") (d #t) (k 2)) (d (n "async-global-executor-trait") (r "^2.1") (f (quote ("async-io"))) (d #t) (k 0)) (d (n "async-reactor-trait") (r "^1.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.42") (d #t) (k 0)) (d (n "executor-trait") (r "^2.1") (d #t) (k 0)) (d (n "flume") (r "^0.10") (f (quote ("async"))) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-io") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1.7") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pinky-swear") (r "^6.1") (d #t) (k 0)) (d (n "reactor-trait") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-executor-trait") (r "^2.1.0") (d #t) (k 2)) (d (n "tokio-reactor-trait") (r "^1.1.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt"))) (d #t) (k 2)) (d (n "waker-fn") (r "^1.1") (d #t) (k 0)) (d (n "waker-fn") (r "^1.1") (d #t) (k 2)))) (h "0ailf0g74w6c7hyyr46xc78b8i8kjrmz80b2807p3vcyl3m3phdc") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "rustls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen")))) (r "1.63.0")))

(define-public crate-lapin-2.3.0 (c (n "lapin") (v "2.3.0") (d (list (d (n "amq-protocol") (r "^7.0") (k 0)) (d (n "amq-protocol-codegen") (r "^7.0") (o #t) (d #t) (k 1)) (d (n "async-global-executor") (r "^2.0") (d #t) (k 2)) (d (n "async-global-executor-trait") (r "^2.1") (f (quote ("async-io"))) (d #t) (k 0)) (d (n "async-reactor-trait") (r "^1.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.42") (d #t) (k 0)) (d (n "executor-trait") (r "^2.1") (d #t) (k 0)) (d (n "flume") (r "^0.10") (f (quote ("async"))) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-io") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1.7") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pinky-swear") (r "^6.1") (d #t) (k 0)) (d (n "reactor-trait") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-executor-trait") (r "^2.1.0") (d #t) (k 2)) (d (n "tokio-reactor-trait") (r "^1.1.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt"))) (d #t) (k 2)) (d (n "waker-fn") (r "^1.1") (d #t) (k 0)) (d (n "waker-fn") (r "^1.1") (d #t) (k 2)))) (h "077bzaj8cgpq4yablmz6lay9dqvc36kgn6jpaz54n05477ra6ibs") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "rustls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen")))) (r "1.63.0")))

(define-public crate-lapin-2.3.1 (c (n "lapin") (v "2.3.1") (d (list (d (n "amq-protocol") (r "^7.0") (k 0)) (d (n "amq-protocol-codegen") (r "^7.0") (o #t) (d #t) (k 1)) (d (n "async-global-executor") (r "^2.0") (d #t) (k 2)) (d (n "async-global-executor-trait") (r "^2.1") (f (quote ("async-io"))) (d #t) (k 0)) (d (n "async-reactor-trait") (r "^1.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.42") (d #t) (k 0)) (d (n "executor-trait") (r "^2.1") (d #t) (k 0)) (d (n "flume") (r "^0.10") (f (quote ("async"))) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-io") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1.7") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pinky-swear") (r "^6.1") (d #t) (k 0)) (d (n "reactor-trait") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-executor-trait") (r "^2.1.0") (d #t) (k 2)) (d (n "tokio-reactor-trait") (r "^1.1.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt"))) (d #t) (k 2)) (d (n "waker-fn") (r "^1.1") (d #t) (k 0)) (d (n "waker-fn") (r "^1.1") (d #t) (k 2)))) (h "1p5rmmrbb8z5987h209j8q16d3wvwqiw02aq8m3grhzvzjhnfc2z") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "rustls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen")))) (r "1.63.0")))

(define-public crate-lapin-2.3.2 (c (n "lapin") (v "2.3.2") (d (list (d (n "amq-protocol") (r "^7.0") (k 0)) (d (n "amq-protocol-codegen") (r "^7.0") (o #t) (d #t) (k 1)) (d (n "async-global-executor") (r "^2.0") (d #t) (k 2)) (d (n "async-global-executor-trait") (r "^2.1") (f (quote ("async-io"))) (d #t) (k 0)) (d (n "async-reactor-trait") (r "^1.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.42") (d #t) (k 0)) (d (n "executor-trait") (r "^2.1") (d #t) (k 0)) (d (n "flume") (r "^0.10") (f (quote ("async"))) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-io") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1.7") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pinky-swear") (r "^6.1") (d #t) (k 0)) (d (n "reactor-trait") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-executor-trait") (r "^2.1.0") (d #t) (k 2)) (d (n "tokio-reactor-trait") (r "^1.1.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt"))) (d #t) (k 2)) (d (n "waker-fn") (r "^1.1") (d #t) (k 0)) (d (n "waker-fn") (r "^1.1") (d #t) (k 2)))) (h "1f2kmp5ydcp98wilmq78ywncmdw5qawzzn618dakc2wym6wr2vv5") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "rustls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen")))) (r "1.63.0")))

(define-public crate-lapin-2.3.3 (c (n "lapin") (v "2.3.3") (d (list (d (n "amq-protocol") (r "^7.0") (k 0)) (d (n "amq-protocol-codegen") (r "^7.0") (o #t) (d #t) (k 1)) (d (n "async-global-executor") (r "^2.0") (d #t) (k 2)) (d (n "async-global-executor-trait") (r "^2.1") (f (quote ("async-io"))) (d #t) (k 0)) (d (n "async-reactor-trait") (r "^1.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.42") (d #t) (k 0)) (d (n "executor-trait") (r "^2.1") (d #t) (k 0)) (d (n "flume") (r "^0.11") (f (quote ("async"))) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-io") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^2.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pinky-swear") (r "^6.1") (d #t) (k 0)) (d (n "reactor-trait") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-executor-trait") (r "^2.1.0") (d #t) (k 2)) (d (n "tokio-reactor-trait") (r "^1.1.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt"))) (d #t) (k 2)) (d (n "waker-fn") (r "^1.1") (d #t) (k 0)) (d (n "waker-fn") (r "^1.1") (d #t) (k 2)))) (h "0qxmf5zlpz9j1qmsdz3293cwm8sd3fm3jqyhp0z9p8wpcqrm815y") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "rustls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen")))) (r "1.63.0")))

(define-public crate-lapin-2.3.4 (c (n "lapin") (v "2.3.4") (d (list (d (n "amq-protocol") (r "^7.0") (k 0)) (d (n "amq-protocol-codegen") (r "^7.0") (o #t) (d #t) (k 1)) (d (n "async-global-executor") (r "^2.0") (d #t) (k 2)) (d (n "async-global-executor-trait") (r "^2.1") (f (quote ("async-io"))) (d #t) (k 0)) (d (n "async-reactor-trait") (r "^1.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.42") (d #t) (k 0)) (d (n "executor-trait") (r "^2.1") (d #t) (k 0)) (d (n "flume") (r "^0.11") (f (quote ("async"))) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-io") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^2.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "pinky-swear") (r "^6.1") (d #t) (k 0)) (d (n "reactor-trait") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-executor-trait") (r "^2.1.0") (d #t) (k 2)) (d (n "tokio-reactor-trait") (r "^1.1.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt"))) (d #t) (k 2)) (d (n "waker-fn") (r "^1.1") (d #t) (k 0)) (d (n "waker-fn") (r "^1.1") (d #t) (k 2)))) (h "1swc3g8zs7ikwdkpan2risghk6hfq2vadbqqfp724ncad8qjrq7s") (f (quote (("vendored-openssl" "amq-protocol/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "amq-protocol/openssl") ("native-tls" "amq-protocol/native-tls") ("default" "rustls") ("codegen-internal" "amq-protocol-codegen" "serde_json") ("codegen" "codegen-internal" "amq-protocol/codegen")))) (r "1.74.0")))

