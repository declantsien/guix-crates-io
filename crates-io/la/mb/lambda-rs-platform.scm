(define-module (crates-io la mb lambda-rs-platform) #:use-module (crates-io))

(define-public crate-lambda-rs-platform-2023.1.27 (c (n "lambda-rs-platform") (v "2023.1.27") (d (list (d (n "cfg-if") (r "=1.0.0") (d #t) (k 0)) (d (n "gfx-backend-dx11") (r "=0.9.0") (o #t) (d #t) (k 0)) (d (n "gfx-backend-dx12") (r "=0.9.0") (o #t) (d #t) (k 0)) (d (n "gfx-backend-empty") (r "=0.9.0") (d #t) (k 0)) (d (n "gfx-backend-gl") (r "=0.9.0") (o #t) (d #t) (k 0)) (d (n "gfx-backend-metal") (r "=0.9.0") (o #t) (d #t) (k 0)) (d (n "gfx-backend-vulkan") (r "=0.9.0") (o #t) (d #t) (k 0)) (d (n "gfx-hal") (r "=0.9.0") (d #t) (k 0)) (d (n "obj-rs") (r "=0.7.0") (d #t) (k 0)) (d (n "rand") (r "=0.8.5") (d #t) (k 0)) (d (n "shaderc") (r "=0.7") (d #t) (k 0)) (d (n "winit") (r "=0.27.5") (d #t) (k 0)) (d (n "mockall") (r "=0.11.3") (d #t) (k 2)) (d (n "default_backend") (r "=0.9.0") (o #t) (d #t) (t "cfg(all(target_os = \"macos\"))") (k 0) (p "gfx-backend-metal")) (d (n "default_backend") (r "=0.9.0") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0) (p "gfx-backend-gl")))) (h "0vf03s1i2k0dra630v190cvf62iz092fayx5g62i6w39hy14vz35") (f (quote (("winit-windowing") ("default" "shaderc/build-from-source")))) (s 2) (e (quote (("gfx-with-vulkan" "dep:gfx-backend-vulkan") ("gfx-with-opengl" "dep:gfx-backend-gl") ("gfx-with-metal" "dep:gfx-backend-metal") ("gfx-with-dx12" "dep:gfx-backend-dx12") ("gfx-with-dx11" "dep:gfx-backend-dx11") ("detect-platform" "dep:default_backend"))))))

(define-public crate-lambda-rs-platform-2023.1.27-1 (c (n "lambda-rs-platform") (v "2023.1.27-1") (d (list (d (n "cfg-if") (r "=1.0.0") (d #t) (k 0)) (d (n "gfx-backend-dx11") (r "=0.9.0") (o #t) (d #t) (k 0)) (d (n "gfx-backend-dx12") (r "=0.9.0") (o #t) (d #t) (k 0)) (d (n "gfx-backend-empty") (r "=0.9.0") (d #t) (k 0)) (d (n "gfx-backend-gl") (r "=0.9.0") (o #t) (d #t) (k 0)) (d (n "gfx-backend-metal") (r "=0.9.0") (o #t) (d #t) (k 0)) (d (n "gfx-backend-vulkan") (r "=0.9.0") (o #t) (d #t) (k 0)) (d (n "gfx-hal") (r "=0.9.0") (d #t) (k 0)) (d (n "obj-rs") (r "=0.7.0") (d #t) (k 0)) (d (n "rand") (r "=0.8.5") (d #t) (k 0)) (d (n "shaderc") (r "=0.7") (d #t) (k 0)) (d (n "winit") (r "=0.27.5") (d #t) (k 0)) (d (n "mockall") (r "=0.11.3") (d #t) (k 2)) (d (n "gfx-backend-metal") (r "=0.9.0") (d #t) (t "cfg(all(target_os = \"macos\"))") (k 0) (p "gfx-backend-metal")) (d (n "gfx-backend-gl") (r "=0.9.0") (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0) (p "gfx-backend-gl")) (d (n "gfx-backend-dx12") (r "=0.9.0") (d #t) (t "cfg(all(windows))") (k 0) (p "gfx-backend-dx12")))) (h "05nvpdwk2fvk9j85awq710av01d0h3s4156dxqs3a6qk2qr002ng") (f (quote (("winit-windowing") ("detect-platform") ("default" "shaderc/build-from-source")))) (s 2) (e (quote (("gfx-with-vulkan" "dep:gfx-backend-vulkan") ("gfx-with-opengl" "dep:gfx-backend-gl") ("gfx-with-metal" "dep:gfx-backend-metal") ("gfx-with-dx12" "dep:gfx-backend-dx12") ("gfx-with-dx11" "dep:gfx-backend-dx11"))))))

(define-public crate-lambda-rs-platform-2023.1.28 (c (n "lambda-rs-platform") (v "2023.1.28") (d (list (d (n "cfg-if") (r "=1.0.0") (d #t) (k 0)) (d (n "gfx-backend-dx11") (r "=0.9.0") (o #t) (d #t) (k 0)) (d (n "gfx-backend-dx12") (r "=0.9.0") (o #t) (d #t) (k 0)) (d (n "gfx-backend-empty") (r "=0.9.0") (d #t) (k 0)) (d (n "gfx-backend-gl") (r "=0.9.0") (o #t) (d #t) (k 0)) (d (n "gfx-backend-metal") (r "=0.9.0") (o #t) (d #t) (k 0)) (d (n "gfx-backend-vulkan") (r "=0.9.0") (o #t) (d #t) (k 0)) (d (n "gfx-hal") (r "=0.9.0") (d #t) (k 0)) (d (n "obj-rs") (r "=0.7.0") (d #t) (k 0)) (d (n "rand") (r "=0.8.5") (d #t) (k 0)) (d (n "shaderc") (r "=0.7") (d #t) (k 0)) (d (n "winit") (r "=0.27.5") (d #t) (k 0)) (d (n "mockall") (r "=0.11.3") (d #t) (k 2)) (d (n "gfx-backend-metal") (r "=0.9.0") (d #t) (t "cfg(all(target_os = \"macos\"))") (k 0) (p "gfx-backend-metal")) (d (n "gfx-backend-gl") (r "=0.9.0") (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0) (p "gfx-backend-gl")) (d (n "gfx-backend-dx12") (r "=0.9.0") (d #t) (t "cfg(all(windows))") (k 0) (p "gfx-backend-dx12")))) (h "1q50s0bjb9rdmzpf8ayrkcd6j18afn8nx586b2r3xpsgnzls70ya") (f (quote (("winit-windowing") ("detect-platform") ("default" "shaderc/build-from-source")))) (s 2) (e (quote (("gfx-with-vulkan" "dep:gfx-backend-vulkan") ("gfx-with-opengl" "dep:gfx-backend-gl") ("gfx-with-metal" "dep:gfx-backend-metal") ("gfx-with-dx12" "dep:gfx-backend-dx12") ("gfx-with-dx11" "dep:gfx-backend-dx11"))))))

(define-public crate-lambda-rs-platform-2023.1.29 (c (n "lambda-rs-platform") (v "2023.1.29") (d (list (d (n "cfg-if") (r "=1.0.0") (d #t) (k 0)) (d (n "gfx-backend-dx11") (r "=0.9.0") (o #t) (d #t) (k 0)) (d (n "gfx-backend-dx12") (r "=0.9.0") (o #t) (d #t) (k 0)) (d (n "gfx-backend-empty") (r "=0.9.0") (d #t) (k 0)) (d (n "gfx-backend-gl") (r "=0.9.0") (o #t) (d #t) (k 0)) (d (n "gfx-backend-metal") (r "=0.9.0") (o #t) (d #t) (k 0)) (d (n "gfx-backend-vulkan") (r "=0.9.0") (o #t) (d #t) (k 0)) (d (n "gfx-hal") (r "=0.9.0") (d #t) (k 0)) (d (n "obj-rs") (r "=0.7.0") (d #t) (k 0)) (d (n "rand") (r "=0.8.5") (d #t) (k 0)) (d (n "shaderc") (r "=0.7") (d #t) (k 0)) (d (n "winit") (r "=0.27.5") (d #t) (k 0)) (d (n "mockall") (r "=0.11.3") (d #t) (k 2)) (d (n "gfx-backend-metal") (r "=0.9.0") (d #t) (t "cfg(all(target_os = \"macos\"))") (k 0) (p "gfx-backend-metal")) (d (n "gfx-backend-gl") (r "=0.9.0") (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0) (p "gfx-backend-gl")) (d (n "gfx-backend-dx12") (r "=0.9.0") (d #t) (t "cfg(all(windows))") (k 0) (p "gfx-backend-dx12")))) (h "1zxnv570x299immfj3zhsbwj7i3h158qx7w2139phar8fi41pg14") (f (quote (("winit-windowing") ("detect-platform") ("default" "shaderc/build-from-source")))) (s 2) (e (quote (("gfx-with-vulkan" "dep:gfx-backend-vulkan") ("gfx-with-opengl" "dep:gfx-backend-gl") ("gfx-with-metal" "dep:gfx-backend-metal") ("gfx-with-dx12" "dep:gfx-backend-dx12") ("gfx-with-dx11" "dep:gfx-backend-dx11"))))))

(define-public crate-lambda-rs-platform-2023.1.30 (c (n "lambda-rs-platform") (v "2023.1.30") (d (list (d (n "cfg-if") (r "=1.0.0") (d #t) (k 0)) (d (n "gfx-backend-dx11") (r "=0.9.0") (o #t) (d #t) (k 0)) (d (n "gfx-backend-dx12") (r "=0.9.0") (o #t) (d #t) (k 0)) (d (n "gfx-backend-empty") (r "=0.9.0") (d #t) (k 0)) (d (n "gfx-backend-gl") (r "=0.9.0") (o #t) (d #t) (k 0)) (d (n "gfx-backend-metal") (r "=0.9.0") (o #t) (d #t) (k 0)) (d (n "gfx-backend-vulkan") (r "=0.9.0") (o #t) (d #t) (k 0)) (d (n "gfx-hal") (r "=0.9.0") (d #t) (k 0)) (d (n "lambda-rs-logging") (r "^2023.1.30") (d #t) (k 0)) (d (n "obj-rs") (r "=0.7.0") (d #t) (k 0)) (d (n "rand") (r "=0.8.5") (d #t) (k 0)) (d (n "shaderc") (r "=0.7") (d #t) (k 0)) (d (n "winit") (r "=0.27.5") (d #t) (k 0)) (d (n "mockall") (r "=0.11.3") (d #t) (k 2)) (d (n "gfx-backend-metal") (r "=0.9.0") (d #t) (t "cfg(all(target_os = \"macos\"))") (k 0) (p "gfx-backend-metal")) (d (n "gfx-backend-gl") (r "=0.9.0") (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0) (p "gfx-backend-gl")) (d (n "gfx-backend-dx12") (r "=0.9.0") (d #t) (t "cfg(all(windows))") (k 0) (p "gfx-backend-dx12")))) (h "1dvg83xdhxq57lb50jih3k2bhk3y764nbi43rsvkzilqx81c9jp5") (f (quote (("winit-windowing") ("detect-platform") ("default" "shaderc/build-from-source")))) (s 2) (e (quote (("gfx-with-vulkan" "dep:gfx-backend-vulkan") ("gfx-with-opengl" "dep:gfx-backend-gl") ("gfx-with-metal" "dep:gfx-backend-metal") ("gfx-with-dx12" "dep:gfx-backend-dx12") ("gfx-with-dx11" "dep:gfx-backend-dx11"))))))

