(define-module (crates-io la mb lambdaworks-crypto) #:use-module (crates-io))

(define-public crate-lambdaworks-crypto-0.1.0 (c (n "lambdaworks-crypto") (v "0.1.0") (d (list (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "iai-callgrind") (r "^0.3.1") (d #t) (k 2)) (d (n "lambdaworks-math") (r "^0.1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)))) (h "0xcy38i24rkxszinyj4nzzfcz185xlmahfjj08xhj1pjphm5z6mw") (f (quote (("test_fiat_shamir"))))))

(define-public crate-lambdaworks-crypto-0.1.1 (c (n "lambdaworks-crypto") (v "0.1.1") (d (list (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "iai-callgrind") (r "^0.3.1") (d #t) (k 2)) (d (n "lambdaworks-math") (r "^0.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)))) (h "1wzi669ac7092ki3lmm35mxmn4hdm4y08kd994zh8k3a7ks6rwpz") (f (quote (("test_fiat_shamir"))))))

(define-public crate-lambdaworks-crypto-0.1.2 (c (n "lambdaworks-crypto") (v "0.1.2") (d (list (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "iai-callgrind") (r "^0.3.1") (d #t) (k 2)) (d (n "lambdaworks-math") (r "^0.1.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)))) (h "159y8gdvh85d0j5369lcnsvmn1lrhaqc202193vkqm3hrrcnkp4i") (f (quote (("test_fiat_shamir"))))))

(define-public crate-lambdaworks-crypto-0.1.3 (c (n "lambdaworks-crypto") (v "0.1.3") (d (list (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "iai-callgrind") (r "^0.3.1") (d #t) (k 2)) (d (n "lambdaworks-math") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)))) (h "1nlc68h90f5zin0zlgs9465b0ghzm2shwwyzihq37128l6hm4aj9") (f (quote (("test_fiat_shamir"))))))

(define-public crate-lambdaworks-crypto-0.1.4 (c (n "lambdaworks-crypto") (v "0.1.4") (d (list (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "iai-callgrind") (r "^0.3.1") (d #t) (k 2)) (d (n "lambdaworks-math") (r "^0.1.4") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)))) (h "161yq5rl2jc7nxm201spfvbi1syjxbxvknd8il1l2qj45kjs0z6l") (f (quote (("test_fiat_shamir")))) (y #t)))

(define-public crate-lambdaworks-crypto-0.2.0 (c (n "lambdaworks-crypto") (v "0.2.0") (d (list (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "iai-callgrind") (r "^0.3.1") (d #t) (k 2)) (d (n "lambdaworks-math") (r "^0.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)))) (h "0g85n1hbpbfrvh696c58pbys5i192hbya87kgfyhsqw6z29k7ab2") (f (quote (("test_fiat_shamir"))))))

(define-public crate-lambdaworks-crypto-0.3.0 (c (n "lambdaworks-crypto") (v "0.3.0") (d (list (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "iai-callgrind") (r "^0.3.1") (d #t) (k 2)) (d (n "lambdaworks-math") (r "^0.3.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)))) (h "1s5q6wdb1pajafaxzhg861hi0532bx3wl51a3x5krwngrm3v7q3r") (f (quote (("test_fiat_shamir"))))))

(define-public crate-lambdaworks-crypto-0.4.0 (c (n "lambdaworks-crypto") (v "0.4.0") (d (list (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "iai-callgrind") (r "^0.3.1") (d #t) (k 2)) (d (n "lambdaworks-math") (r "^0.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)))) (h "11yhj1a3sdipr1bh9fsv670yj29adb7bbc12zd6gpllnfam6af0m") (f (quote (("test_fiat_shamir")))) (s 2) (e (quote (("parallel" "dep:rayon"))))))

(define-public crate-lambdaworks-crypto-0.5.0 (c (n "lambdaworks-crypto") (v "0.5.0") (d (list (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "iai-callgrind") (r "^0.3.1") (d #t) (k 2)) (d (n "lambdaworks-math") (r "^0.5.0") (f (quote ("alloc"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "sha3") (r "^0.10") (k 0)))) (h "0rfw7r486w72a32rvb0fyjbv12a5s5hv6fidf2phzp1gbcnj4k1d") (f (quote (("test_fiat_shamir") ("default" "std")))) (s 2) (e (quote (("std" "lambdaworks-math/std" "sha2/std" "sha3/std" "serde?/std") ("serde" "dep:serde") ("parallel" "dep:rayon"))))))

(define-public crate-lambdaworks-crypto-0.6.0 (c (n "lambdaworks-crypto") (v "0.6.0") (d (list (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "iai-callgrind") (r "^0.3.1") (d #t) (k 2)) (d (n "lambdaworks-math") (r "^0.6.0") (f (quote ("alloc"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "rayon") (r "^1.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "sha3") (r "^0.10") (k 0)))) (h "0iwc2f9hsas0xdvsyx10gfpd59cq8c9syvp0labsml0j3x9fx3s5") (f (quote (("test_fiat_shamir") ("default" "std")))) (s 2) (e (quote (("std" "lambdaworks-math/std" "sha2/std" "sha3/std" "serde?/std") ("serde" "dep:serde") ("parallel" "dep:rayon"))))))

(define-public crate-lambdaworks-crypto-0.7.0 (c (n "lambdaworks-crypto") (v "0.7.0") (d (list (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "iai-callgrind") (r "^0.3.1") (d #t) (k 2)) (d (n "lambdaworks-math") (r "^0.7.0") (f (quote ("alloc"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "rayon") (r "^1.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "sha3") (r "^0.10") (k 0)))) (h "1hqpy9pfzacnglmgy2zi2xqw1mrmg1yklb4dgdy4yl214brd9dbz") (f (quote (("test_fiat_shamir") ("default" "std")))) (s 2) (e (quote (("std" "lambdaworks-math/std" "sha2/std" "sha3/std" "serde?/std") ("serde" "dep:serde") ("parallel" "dep:rayon"))))))

