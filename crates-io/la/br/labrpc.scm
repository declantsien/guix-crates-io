(define-module (crates-io la br labrpc) #:use-module (crates-io))

(define-public crate-labrpc-0.1.12 (c (n "labrpc") (v "0.1.12") (d (list (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.15") (f (quote ("thread-pool"))) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "tokio") (r "^1.7") (f (quote ("macros" "rt-multi-thread" "sync" "time" "parking_lot"))) (d #t) (k 0)))) (h "0a6hswnz7g5vixdx2v3aj3glnn546mrd1pd7ygxfqggpnsczl5br") (f (quote (("tracing") ("default"))))))

(define-public crate-labrpc-0.2.0 (c (n "labrpc") (v "0.2.0") (d (list (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.15") (k 0)) (d (n "futures") (r "^0.3.15") (f (quote ("thread-pool"))) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "tokio") (r "^1.7") (f (quote ("macros" "rt-multi-thread" "sync" "time" "parking_lot"))) (d #t) (k 0)))) (h "1cif5yfx4rfsldvzyyfz3bd7v26458ah768003mml7kbsw8yx549") (f (quote (("tracing") ("default")))) (y #t)))

(define-public crate-labrpc-0.2.1 (c (n "labrpc") (v "0.2.1") (d (list (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.15") (f (quote ("std"))) (k 0)) (d (n "futures") (r "^0.3.15") (f (quote ("std" "thread-pool"))) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "tokio") (r "^1.7") (f (quote ("macros" "rt-multi-thread" "sync" "time" "parking_lot"))) (d #t) (k 0)))) (h "19qkigpdzi3n7w53vi2am26gpm14h7x1l96wzrc47g11akb1g8zc") (f (quote (("tracing") ("default"))))))

(define-public crate-labrpc-0.2.2 (c (n "labrpc") (v "0.2.2") (d (list (d (n "bytes") (r "^1.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (f (quote ("std"))) (k 0)) (d (n "futures") (r "^0.3.21") (f (quote ("std" "thread-pool"))) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "tokio") (r "^1.7") (f (quote ("macros" "rt-multi-thread" "sync" "time" "parking_lot"))) (d #t) (k 0)))) (h "1sb4c3pvhfiyxdmsdxjx02yh9vzs5c78asqyz74b2hpys7qcdx9v") (f (quote (("tracing") ("default"))))))

(define-public crate-labrpc-0.2.3 (c (n "labrpc") (v "0.2.3") (d (list (d (n "bytes") (r "^1.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (f (quote ("std"))) (k 0)) (d (n "futures") (r "^0.3.21") (f (quote ("std" "thread-pool"))) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "tokio") (r "^1.7") (f (quote ("macros" "rt-multi-thread" "sync" "time" "parking_lot"))) (d #t) (k 0)))) (h "0q0b483kmyg2yw4hfk7rb2kldgyyw8li0ny56frqp00ka8pv1d6p") (f (quote (("tracing") ("default"))))))

