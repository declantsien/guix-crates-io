(define-module (crates-io la in lain) #:use-module (crates-io))

(define-public crate-lain-0.1.0 (c (n "lain") (v "0.1.0") (d (list (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "field-offset") (r "^0.1.1") (d #t) (k 0)) (d (n "lain_derive") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mashup") (r "^0.1") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "1lf9ggs9n181rlh2pabkzh6g6msdzdkflj6354a79ygp77j27nf8") (f (quote (("serde_support" "serde") ("default_features"))))))

(define-public crate-lain-0.1.1 (c (n "lain") (v "0.1.1") (d (list (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "field-offset") (r "^0.1.1") (d #t) (k 0)) (d (n "lain_derive") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mashup") (r "^0.1") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "0jip5rjyh3g6nbhbgfahhcpk13dbpfrvif5qb2a9apiza564r94i") (f (quote (("serde_support" "serde") ("default_features"))))))

(define-public crate-lain-0.1.2 (c (n "lain") (v "0.1.2") (d (list (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "field-offset") (r "^0.1.1") (d #t) (k 0)) (d (n "lain_derive") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mashup") (r "^0.1") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "1hv1yn625s2np026n75vlm1nwxdj17ymdvln1ac0qndb1lpwhhjb") (f (quote (("serde_support" "serde") ("default_features"))))))

(define-public crate-lain-0.2.0 (c (n "lain") (v "0.2.0") (d (list (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "field-offset") (r "^0.1.1") (d #t) (k 0)) (d (n "lain_derive") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mashup") (r "^0.1") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "0sqzr0hi9yja3kjj2bdx1kk6yjwj3gkk5g0pkxrj9y2cgggapvdc") (f (quote (("serde_support" "serde") ("default_features"))))))

(define-public crate-lain-0.2.1 (c (n "lain") (v "0.2.1") (d (list (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "field-offset") (r "^0.1.1") (d #t) (k 0)) (d (n "lain_derive") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mashup") (r "^0.1") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "1widzy3pxxaq3580si439py6s82mkx0zl9ilwi2y3w13bkc56kbm") (f (quote (("serde_support" "serde") ("default_features"))))))

(define-public crate-lain-0.2.2 (c (n "lain") (v "0.2.2") (d (list (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "field-offset") (r "^0.1.1") (d #t) (k 0)) (d (n "lain_derive") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mashup") (r "^0.1") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "0hysh59q4jxag32x1icaylznwf2na3dkk6fbspsbqxfz6sw27cml") (f (quote (("serde_support" "serde") ("default_features"))))))

(define-public crate-lain-0.2.3 (c (n "lain") (v "0.2.3") (d (list (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "field-offset") (r "^0.1.1") (d #t) (k 0)) (d (n "lain_derive") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mashup") (r "^0.1") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "0azlgp0nxq7rzqskss02vgari7j3dx3pyx81v0jhin3np99311fc") (f (quote (("serde_support" "serde") ("default_features"))))))

(define-public crate-lain-0.2.4 (c (n "lain") (v "0.2.4") (d (list (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "field-offset") (r "^0.3") (d #t) (k 0)) (d (n "lain_derive") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mashup") (r "^0.1") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "0c0b9wqf8s47byw90cym3hx76plm3rqkn6hs76ckh53fh12k8zir") (f (quote (("serde_support" "serde") ("default_features"))))))

(define-public crate-lain-0.2.5 (c (n "lain") (v "0.2.5") (d (list (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "field-offset") (r "^0.3") (d #t) (k 0)) (d (n "lain_derive") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mashup") (r "^0.1") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "0mpfcb0pqkw169a86adb1wz74nglrgr20b68rpnah6khr9jnsl9b") (f (quote (("serde_support" "serde") ("default_features"))))))

(define-public crate-lain-0.3.0 (c (n "lain") (v "0.3.0") (d (list (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "field-offset") (r "^0.3") (d #t) (k 0)) (d (n "lain_derive") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mashup") (r "^0.1") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "1v8acjzbwf7ch8afz17b8d3978wcgdfvx8k60awjbxsfkrr2r6n0") (f (quote (("serde_support" "serde") ("default_features"))))))

(define-public crate-lain-0.4.0 (c (n "lain") (v "0.4.0") (d (list (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "field-offset") (r "^0.3") (d #t) (k 0)) (d (n "lain_derive") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mashup") (r "^0.1") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "0s05a4azm1yy98ynfqc0qhyvr15dnypa7zvg53s7l37pbrq2dis8") (f (quote (("serde_support" "serde") ("default_features"))))))

(define-public crate-lain-0.4.1 (c (n "lain") (v "0.4.1") (d (list (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "field-offset") (r "^0.3") (d #t) (k 0)) (d (n "lain_derive") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mashup") (r "^0.1") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "0c5drakk84xwf4i83k1b2dl16z3kx73zhs9lgxgiz3p7m1cdpq4h") (f (quote (("serde_support" "serde") ("default_features"))))))

(define-public crate-lain-0.5.0 (c (n "lain") (v "0.5.0") (d (list (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "field-offset") (r "^0.3") (d #t) (k 0)) (d (n "lain_derive") (r "^0.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mashup") (r "^0.1") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "088jpzix27dch9pjg1sif6n01lzi38gdyv899m9cwfwa3i941pqq") (f (quote (("serde_support" "serde") ("default_features"))))))

(define-public crate-lain-0.5.1 (c (n "lain") (v "0.5.1") (d (list (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "field-offset") (r "^0.3") (d #t) (k 0)) (d (n "lain_derive") (r "^0.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mashup") (r "^0.1") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "070cnbg699n8szaf29vf3a5sg1jv138vny2k44yjn87najlrmhwi") (f (quote (("serde_support" "serde") ("default_features"))))))

(define-public crate-lain-0.5.2 (c (n "lain") (v "0.5.2") (d (list (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "field-offset") (r "^0.3") (d #t) (k 0)) (d (n "lain_derive") (r "^0.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mashup") (r "^0.1") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "1bx09m56hx13b1cnlsj9jrrp4cm4cy5mfgxl71drdc8nmn4zzc8w") (f (quote (("serde_support" "serde") ("default_features"))))))

(define-public crate-lain-0.5.3 (c (n "lain") (v "0.5.3") (d (list (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "field-offset") (r "^0.3") (d #t) (k 0)) (d (n "lain_derive") (r "^0.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mashup") (r "^0.1") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "11kmgxkfzfi805m6mmmqzpb5rydvrvlc4ghjbczmpq4671cgs1md") (f (quote (("serde_support" "serde") ("default_features"))))))

(define-public crate-lain-0.5.4 (c (n "lain") (v "0.5.4") (d (list (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "field-offset") (r "^0.3") (d #t) (k 0)) (d (n "lain_derive") (r "^0.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.7") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "10lbbjrh96p3ddd3vs59ag1y6qpynaldr4pdhvzl92rc2a71lhy8") (f (quote (("serde_support" "serde") ("default_features"))))))

(define-public crate-lain-0.5.5 (c (n "lain") (v "0.5.5") (d (list (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "field-offset") (r "^0.3") (d #t) (k 0)) (d (n "lain_derive") (r "^0.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.7") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "1ycic31h3q3rjyb9ciwvg8wj8766rcbz4qm8n1pz61rgpn5bpymg") (f (quote (("serde_support" "serde") ("default_features"))))))

