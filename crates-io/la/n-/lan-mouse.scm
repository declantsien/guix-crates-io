(define-module (crates-io la n- lan-mouse) #:use-module (crates-io))

(define-public crate-lan-mouse-0.7.2 (c (n "lan-mouse") (v "0.7.2") (d (list (d (n "adw") (r "^0.6.0") (f (quote ("v1_1"))) (o #t) (d #t) (k 0) (p "libadwaita")) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "ashpd") (r "^0.8") (f (quote ("tokio"))) (o #t) (t "cfg(all(unix, not(target_os=\"macos\")))") (k 0)) (d (n "async-channel") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "clap") (r "^4.4.11") (f (quote ("derive"))) (d #t) (k 0)) (d (n "core-graphics") (r "^0.23") (f (quote ("highsierra"))) (d #t) (t "cfg(target_os=\"macos\")") (k 0)) (d (n "env_logger") (r "^0.11.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "futures-core") (r "^0.3.28") (d #t) (k 0)) (d (n "glib-build-tools") (r "^0.19.0") (d #t) (k 1)) (d (n "gtk") (r "^0.8.1") (f (quote ("v4_2"))) (o #t) (d #t) (k 0) (p "gtk4")) (d (n "keycode") (r "^0.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.148") (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap") (r "^0.7") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "reis") (r "^0.2") (f (quote ("tokio"))) (o #t) (d #t) (t "cfg(all(unix, not(target_os=\"macos\")))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("io-util" "macros" "net" "rt" "sync" "signal"))) (d #t) (k 0)) (d (n "toml") (r "^0.8") (d #t) (k 0)) (d (n "trust-dns-resolver") (r "^0.23") (d #t) (k 0)) (d (n "wayland-client") (r "^0.31.1") (o #t) (d #t) (t "cfg(all(unix, not(target_os=\"macos\")))") (k 0)) (d (n "wayland-protocols") (r "^0.31.0") (f (quote ("client" "staging" "unstable"))) (o #t) (d #t) (t "cfg(all(unix, not(target_os=\"macos\")))") (k 0)) (d (n "wayland-protocols-misc") (r "^0.2.0") (f (quote ("client"))) (o #t) (d #t) (t "cfg(all(unix, not(target_os=\"macos\")))") (k 0)) (d (n "wayland-protocols-wlr") (r "^0.2.0") (f (quote ("client"))) (o #t) (d #t) (t "cfg(all(unix, not(target_os=\"macos\")))") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("winuser"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11") (r "^2.21.0") (f (quote ("xlib" "xtest"))) (o #t) (d #t) (t "cfg(all(unix, not(target_os=\"macos\")))") (k 0)))) (h "0nc8b3ywv3zfmska8817kqq1ly4wviq93qa1yyfgs5qvlrkxav9i") (f (quote (("default" "wayland" "x11" "xdg_desktop_portal" "libei" "gtk")))) (s 2) (e (quote (("xdg_desktop_portal" "dep:ashpd") ("x11" "dep:x11") ("wayland" "dep:wayland-client" "dep:wayland-protocols" "dep:wayland-protocols-wlr" "dep:wayland-protocols-misc") ("libei" "dep:reis" "dep:ashpd") ("gtk" "dep:gtk" "dep:adw" "dep:async-channel"))))))

(define-public crate-lan-mouse-0.7.3 (c (n "lan-mouse") (v "0.7.3") (d (list (d (n "adw") (r "^0.6.0") (f (quote ("v1_1"))) (o #t) (d #t) (k 0) (p "libadwaita")) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "ashpd") (r "^0.8") (f (quote ("tokio"))) (o #t) (t "cfg(all(unix, not(target_os=\"macos\")))") (k 0)) (d (n "async-channel") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "clap") (r "^4.4.11") (f (quote ("derive"))) (d #t) (k 0)) (d (n "core-graphics") (r "^0.23") (f (quote ("highsierra"))) (d #t) (t "cfg(target_os=\"macos\")") (k 0)) (d (n "env_logger") (r "^0.11.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "futures-core") (r "^0.3.28") (d #t) (k 0)) (d (n "glib-build-tools") (r "^0.19.0") (d #t) (k 1)) (d (n "gtk") (r "^0.8.1") (f (quote ("v4_2"))) (o #t) (d #t) (k 0) (p "gtk4")) (d (n "keycode") (r "^0.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.148") (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap") (r "^0.7") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "reis") (r "^0.2") (f (quote ("tokio"))) (o #t) (d #t) (t "cfg(all(unix, not(target_os=\"macos\")))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("io-util" "macros" "net" "rt" "sync" "signal"))) (d #t) (k 0)) (d (n "toml") (r "^0.8") (d #t) (k 0)) (d (n "trust-dns-resolver") (r "^0.23") (d #t) (k 0)) (d (n "wayland-client") (r "^0.31.1") (o #t) (d #t) (t "cfg(all(unix, not(target_os=\"macos\")))") (k 0)) (d (n "wayland-protocols") (r "^0.31.0") (f (quote ("client" "staging" "unstable"))) (o #t) (d #t) (t "cfg(all(unix, not(target_os=\"macos\")))") (k 0)) (d (n "wayland-protocols-misc") (r "^0.2.0") (f (quote ("client"))) (o #t) (d #t) (t "cfg(all(unix, not(target_os=\"macos\")))") (k 0)) (d (n "wayland-protocols-wlr") (r "^0.2.0") (f (quote ("client"))) (o #t) (d #t) (t "cfg(all(unix, not(target_os=\"macos\")))") (k 0)) (d (n "windows") (r "^0.54.0") (f (quote ("Win32_UI_Input_KeyboardAndMouse"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11") (r "^2.21.0") (f (quote ("xlib" "xtest"))) (o #t) (d #t) (t "cfg(all(unix, not(target_os=\"macos\")))") (k 0)))) (h "0k8jv8r9ilbkfnymk95r3qwb04x0f8izv6y2y8w31wgzwgskpdx6") (f (quote (("default" "wayland" "x11" "xdg_desktop_portal" "libei" "gtk")))) (s 2) (e (quote (("xdg_desktop_portal" "dep:ashpd") ("x11" "dep:x11") ("wayland" "dep:wayland-client" "dep:wayland-protocols" "dep:wayland-protocols-wlr" "dep:wayland-protocols-misc") ("libei" "dep:reis" "dep:ashpd") ("gtk" "dep:gtk" "dep:adw" "dep:async-channel"))))))

(define-public crate-lan-mouse-0.8.0 (c (n "lan-mouse") (v "0.8.0") (d (list (d (n "adw") (r "^0.6.0") (f (quote ("v1_1"))) (o #t) (d #t) (k 0) (p "libadwaita")) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "ashpd") (r "^0.8") (f (quote ("tokio"))) (o #t) (t "cfg(all(unix, not(target_os=\"macos\")))") (k 0)) (d (n "async-channel") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "clap") (r "^4.4.11") (f (quote ("derive"))) (d #t) (k 0)) (d (n "core-graphics") (r "^0.23") (f (quote ("highsierra"))) (d #t) (t "cfg(target_os=\"macos\")") (k 0)) (d (n "env_logger") (r "^0.11.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "futures-core") (r "^0.3.28") (d #t) (k 0)) (d (n "glib-build-tools") (r "^0.19.0") (o #t) (d #t) (k 1)) (d (n "gtk") (r "^0.8.1") (f (quote ("v4_2"))) (o #t) (d #t) (k 0) (p "gtk4")) (d (n "hickory-resolver") (r "^0.24.1") (d #t) (k 0)) (d (n "hostname") (r "^0.4.0") (d #t) (k 0)) (d (n "keycode") (r "^0.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.148") (d #t) (t "cfg(unix)") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap") (r "^0.7") (d #t) (k 0)) (d (n "num_enum") (r "^0.7.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "reis") (r "^0.2") (f (quote ("tokio"))) (o #t) (d #t) (t "cfg(all(unix, not(target_os=\"macos\")))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "slab") (r "^0.4.9") (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("io-util" "io-std" "macros" "net" "process" "rt" "sync" "signal"))) (d #t) (k 0)) (d (n "toml") (r "^0.8") (d #t) (k 0)) (d (n "wayland-client") (r "^0.31.1") (o #t) (d #t) (t "cfg(all(unix, not(target_os=\"macos\")))") (k 0)) (d (n "wayland-protocols") (r "^0.31.0") (f (quote ("client" "staging" "unstable"))) (o #t) (d #t) (t "cfg(all(unix, not(target_os=\"macos\")))") (k 0)) (d (n "wayland-protocols-misc") (r "^0.2.0") (f (quote ("client"))) (o #t) (d #t) (t "cfg(all(unix, not(target_os=\"macos\")))") (k 0)) (d (n "wayland-protocols-wlr") (r "^0.2.0") (f (quote ("client"))) (o #t) (d #t) (t "cfg(all(unix, not(target_os=\"macos\")))") (k 0)) (d (n "windows") (r "^0.54.0") (f (quote ("Win32_System_LibraryLoader" "Win32_System_Threading" "Win32_Foundation" "Win32_Graphics" "Win32_Graphics_Gdi" "Win32_UI_Input_KeyboardAndMouse" "Win32_UI_WindowsAndMessaging"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11") (r "^2.21.0") (f (quote ("xlib" "xtest"))) (o #t) (d #t) (t "cfg(all(unix, not(target_os=\"macos\")))") (k 0)))) (h "1zl0mh315n90whik5l1qnpzkzfzf67kaqzjlw9d2x4r2s026znpc") (f (quote (("default" "wayland" "x11" "xdg_desktop_portal" "libei" "gtk")))) (s 2) (e (quote (("xdg_desktop_portal" "dep:ashpd") ("x11" "dep:x11") ("wayland" "dep:wayland-client" "dep:wayland-protocols" "dep:wayland-protocols-wlr" "dep:wayland-protocols-misc") ("libei" "dep:reis" "dep:ashpd") ("gtk" "dep:gtk" "dep:adw" "dep:async-channel" "dep:glib-build-tools"))))))

