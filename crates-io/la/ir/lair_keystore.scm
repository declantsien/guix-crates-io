(define-module (crates-io la ir lair_keystore) #:use-module (crates-io))

(define-public crate-lair_keystore-0.0.1-alpha.1 (c (n "lair_keystore") (v "0.0.1-alpha.1") (d (list (d (n "blake2b_simd") (r "^0.5.10") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.2.0") (d #t) (k 0)) (d (n "lair_keystore_api") (r "^0.0.1-alpha.1") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "rayon") (r "^1.3") (d #t) (k 0)) (d (n "rcgen") (r "^0.8.5") (d #t) (k 0)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "sysinfo") (r "^0.15") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 1)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 2)))) (h "1nxqnbrrbv7x7fr4lbkxlkd6v37hg31jjqp8y1wca3bp79zg5j5i")))

(define-public crate-lair_keystore-0.0.1-alpha.2 (c (n "lair_keystore") (v "0.0.1-alpha.2") (d (list (d (n "blake2b_simd") (r "^0.5.10") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.2.0") (d #t) (k 0)) (d (n "lair_keystore_api") (r "^0.0.1-alpha.2") (d #t) (k 0)) (d (n "nanoid") (r "^0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 2)) (d (n "rayon") (r "^1.3") (d #t) (k 0)) (d (n "rcgen") (r "^0.8.5") (d #t) (k 0)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "sysinfo") (r "^0.15") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 1)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 0)))) (h "15vajfmnb8q3jvy07wdwf992fpg9k079v2yqs4gxqsm7dl3472a4")))

(define-public crate-lair_keystore-0.0.1-alpha.3 (c (n "lair_keystore") (v "0.0.1-alpha.3") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.2.0") (d #t) (k 0)) (d (n "lair_keystore_api") (r "^0.0.1-alpha.3") (d #t) (k 0)) (d (n "lair_keystore_api") (r "^0.0.1-alpha.3") (d #t) (k 1)) (d (n "once_cell") (r "^1.4") (d #t) (k 2)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "sysinfo") (r "^0.15") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 0)))) (h "00jsd3l32rapxi96ysganmz1lp2ak6migxniyabnx7jd8a9zzv21")))

(define-public crate-lair_keystore-0.0.1-alpha.4 (c (n "lair_keystore") (v "0.0.1-alpha.4") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.2.0") (d #t) (k 0)) (d (n "lair_keystore_api") (r "^0.0.1-alpha.4") (d #t) (k 0)) (d (n "lair_keystore_api") (r "^0.0.1-alpha.4") (d #t) (k 1)) (d (n "once_cell") (r "^1.4") (d #t) (k 2)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "sysinfo") (r "^0.15") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 0)))) (h "1b62vl16rwdhsxhmfjzjgdzanpxl42yj5gyxvgm3j7zvxcr0r7j5")))

(define-public crate-lair_keystore-0.0.1-alpha.5 (c (n "lair_keystore") (v "0.0.1-alpha.5") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.2.0") (d #t) (k 0)) (d (n "lair_keystore_api") (r "^0.0.1-alpha.5") (d #t) (k 0)) (d (n "lair_keystore_api") (r "^0.0.1-alpha.5") (d #t) (k 1)) (d (n "once_cell") (r "^1.4") (d #t) (k 2)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "sysinfo") (r "^0.15") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 0)))) (h "0p071jcn2mqvbvdxjizvmkfpf5spjrv3c1y172z2gszljgnp2x72")))

(define-public crate-lair_keystore-0.0.1-alpha.6 (c (n "lair_keystore") (v "0.0.1-alpha.6") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.2.0") (d #t) (k 0)) (d (n "lair_keystore_api") (r "^0.0.1-alpha.6") (d #t) (k 0)) (d (n "lair_keystore_api") (r "^0.0.1-alpha.6") (d #t) (k 1)) (d (n "once_cell") (r "^1.4") (d #t) (k 2)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "sysinfo") (r "^0.15") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^0.3") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 0)))) (h "086g4gvyl6i4yazhqq1331jj0bfnnip33843jvgwfnj3xfs6sd58")))

(define-public crate-lair_keystore-0.0.1-alpha.7 (c (n "lair_keystore") (v "0.0.1-alpha.7") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.2.0") (d #t) (k 0)) (d (n "lair_keystore_api") (r "=0.0.1-alpha.7") (d #t) (k 0)) (d (n "lair_keystore_api") (r "=0.0.1-alpha.7") (d #t) (k 1)) (d (n "once_cell") (r "^1.4") (d #t) (k 2)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "sysinfo") (r "^0.15") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 0)))) (h "1a8cj2z02f0zgx2aapgivj6403paxblg5dqz256nhl2vbmagl3xa")))

(define-public crate-lair_keystore-0.0.1-alpha.8 (c (n "lair_keystore") (v "0.0.1-alpha.8") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.1") (d #t) (k 0)) (d (n "lair_keystore_api") (r "=0.0.1-alpha.8") (d #t) (k 0)) (d (n "lair_keystore_api") (r "=0.0.1-alpha.8") (d #t) (k 1)) (d (n "once_cell") (r "^1.4") (d #t) (k 2)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "sysinfo") (r "^0.15") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 0)))) (h "1sr9m43vclcgklrdml2887wk1yvr3qnybnvga4wfwq213i8f8a1p")))

(define-public crate-lair_keystore-0.0.1-alpha.9 (c (n "lair_keystore") (v "0.0.1-alpha.9") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.1") (d #t) (k 0)) (d (n "lair_keystore_api") (r "=0.0.1-alpha.9") (d #t) (k 0)) (d (n "lair_keystore_api") (r "=0.0.1-alpha.9") (d #t) (k 1)) (d (n "once_cell") (r "^1.4") (d #t) (k 2)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "sysinfo") (r "^0.15") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 0)))) (h "091n6qgjf37sl9gs7ks44ra98lhnmn6sfjq84k66xsspm70p0f40")))

(define-public crate-lair_keystore-0.0.1-alpha.10 (c (n "lair_keystore") (v "0.0.1-alpha.10") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.1") (d #t) (k 0)) (d (n "lair_keystore_api") (r "=0.0.1-alpha.10") (d #t) (k 0)) (d (n "lair_keystore_api") (r "=0.0.1-alpha.10") (d #t) (k 1)) (d (n "once_cell") (r "^1.4") (d #t) (k 2)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "sysinfo") (r "^0.15") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 0)))) (h "0slmqx4lsd1wyk6y1pgqcrsy8wz947gw35m50r8c0a8knqlx58iw")))

(define-public crate-lair_keystore-0.0.1-alpha.11 (c (n "lair_keystore") (v "0.0.1-alpha.11") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.1") (d #t) (k 0)) (d (n "lair_keystore_api") (r "=0.0.1-alpha.11") (d #t) (k 0)) (d (n "lair_keystore_api") (r "=0.0.1-alpha.11") (d #t) (k 1)) (d (n "once_cell") (r "^1.4") (d #t) (k 2)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "sysinfo") (r "^0.15") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 0)))) (h "1yfzayrhwn8wdfmg567pd6hkiy72jvrh3vmahkz8ykfjilqsimv5")))

(define-public crate-lair_keystore-0.0.1-alpha.12 (c (n "lair_keystore") (v "0.0.1-alpha.12") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.1") (d #t) (k 0)) (d (n "lair_keystore_api") (r "=0.0.1-alpha.12") (d #t) (k 0)) (d (n "lair_keystore_api") (r "=0.0.1-alpha.12") (d #t) (k 1)) (d (n "once_cell") (r "^1.4") (d #t) (k 2)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "sysinfo") (r "^0.15") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 0)))) (h "1ggss203fk3ja7261ix24fx41banc4hdv7h6kwri4191npj8bqxm")))

(define-public crate-lair_keystore-0.0.1-alpha.13 (c (n "lair_keystore") (v "0.0.1-alpha.13") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.1") (d #t) (k 0)) (d (n "lair_keystore_api") (r "=0.0.1-alpha.13") (d #t) (k 0)) (d (n "lair_keystore_api") (r "=0.0.1-alpha.13") (d #t) (k 1)) (d (n "once_cell") (r "^1.4") (d #t) (k 2)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "sysinfo") (r "^0.15") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.8.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 0)))) (h "12k3v8pl90biwq29hwiv4f6q06ssksi84iirxpdy02gvwmqr09bq")))

(define-public crate-lair_keystore-0.0.2 (c (n "lair_keystore") (v "0.0.2") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.1") (d #t) (k 0)) (d (n "lair_keystore_api") (r "^0.0.2") (d #t) (k 0)) (d (n "lair_keystore_api") (r "^0.0.2") (d #t) (k 1)) (d (n "once_cell") (r "^1.4") (d #t) (k 2)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "sysinfo") (r "^0.15") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.8.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 0)))) (h "0pzhym58hagi5mqjy8v7fap2yfqacfw6512z31239rlj7c81v0fq")))

(define-public crate-lair_keystore-0.0.3 (c (n "lair_keystore") (v "0.0.3") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.1") (d #t) (k 0)) (d (n "lair_keystore_api") (r "=0.0.3") (d #t) (k 0)) (d (n "lair_keystore_api") (r "=0.0.3") (d #t) (k 1)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.25") (f (quote ("sqlcipher"))) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "rusqlite") (r "^0.25") (f (quote ("bundled"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "sodoken") (r "=0.0.1-alpha.10") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "sysinfo") (r "^0.15") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.8.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 0)))) (h "1yz0m229wgawbyr7zg8dbgpwapakp3abr4h72zircl3xc036ykd7")))

(define-public crate-lair_keystore-0.0.4 (c (n "lair_keystore") (v "0.0.4") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.1") (d #t) (k 0)) (d (n "lair_keystore_api") (r "=0.0.4") (d #t) (k 0)) (d (n "lair_keystore_api") (r "=0.0.4") (d #t) (k 1)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.25") (f (quote ("sqlcipher"))) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "rusqlite") (r "^0.25") (f (quote ("bundled"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "sodoken") (r "=0.0.1-alpha.10") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "sysinfo") (r "^0.15") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.8.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 0)))) (h "1hk3313q0z178j01ir7g40g0xds97f9a6bnc6bk7l498zl4xhx9g")))

(define-public crate-lair_keystore-0.0.5 (c (n "lair_keystore") (v "0.0.5") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.1") (d #t) (k 0)) (d (n "lair_keystore_api") (r "=0.0.5") (d #t) (k 0)) (d (n "lair_keystore_api") (r "=0.0.5") (d #t) (k 1)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.25") (f (quote ("sqlcipher"))) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "rusqlite") (r "^0.25") (f (quote ("bundled"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "sodoken") (r "=0.0.1-alpha.13") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "sysinfo") (r "^0.15") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.8.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 0)))) (h "1a2wn2wxil30ydmg54xwpjvsy0vd0m18rdsx63g7ilp8hrq897l2")))

(define-public crate-lair_keystore-0.0.6 (c (n "lair_keystore") (v "0.0.6") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.1") (d #t) (k 0)) (d (n "lair_keystore_api") (r "=0.0.6") (d #t) (k 0)) (d (n "lair_keystore_api") (r "=0.0.6") (d #t) (k 1)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.25") (f (quote ("sqlcipher"))) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "rusqlite") (r "^0.25") (f (quote ("bundled"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "sodoken") (r "=0.0.1-alpha.21") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "sysinfo") (r "^0.15") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.8.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 0)))) (h "19grx2r1wryv65jw992xjrjwc2hvzl63jqqx1wljpwg4zs637527")))

(define-public crate-lair_keystore-0.0.7 (c (n "lair_keystore") (v "0.0.7") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.1") (d #t) (k 0)) (d (n "lair_keystore_api") (r "=0.0.7") (d #t) (k 0)) (d (n "lair_keystore_api") (r "=0.0.7") (d #t) (k 1)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (f (quote ("bundled-sqlcipher-vendored-openssl"))) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "rusqlite") (r "^0.26") (f (quote ("bundled"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "sodoken") (r "=0.0.1-alpha.21") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "sysinfo") (r "^0.15") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.8.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 0)))) (h "1j723dimnzlvz3sa2wgpdqzy0dhrxgfgkz6hgz2gqbbnp2z61fm0")))

(define-public crate-lair_keystore-0.1.0-alpha.1 (c (n "lair_keystore") (v "0.1.0-alpha.1") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "dunce") (r "^1.0.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "hc_seed_bundle") (r "=0.1.0-alpha.1") (d #t) (k 0)) (d (n "lair_keystore_api") (r "=0.1.0-alpha.1") (d #t) (k 0)) (d (n "lair_keystore_api") (r "=0.1.0-alpha.1") (d #t) (k 1)) (d (n "one_err") (r "^0.0.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 1)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (f (quote ("bundled-sqlcipher-vendored-openssl"))) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "rusqlite") (r "^0.26") (f (quote ("bundled"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "sodoken") (r "=0.0.1-alpha.21") (d #t) (k 0)) (d (n "sqlformat") (r "^0.1.6") (d #t) (k 1)) (d (n "structopt") (r "^0.3.23") (d #t) (k 0)) (d (n "sysinfo") (r "^0.20.3") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "tokio") (r "^1.12.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.28") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.24") (d #t) (k 0)))) (h "1cl9kgmp2b5jd46h4zmgfsc82x88pzvjpwkjz3lb2wicbqr9gdzs")))

(define-public crate-lair_keystore-0.1.0-alpha.2 (c (n "lair_keystore") (v "0.1.0-alpha.2") (d (list (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "lair_keystore_api") (r "=0.1.0-alpha.2") (d #t) (k 0)) (d (n "lair_keystore_api") (r "=0.1.0-alpha.2") (d #t) (k 1)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 1)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (f (quote ("bundled-sqlcipher-vendored-openssl"))) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "rusqlite") (r "^0.26") (f (quote ("bundled"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "sqlformat") (r "^0.1.6") (d #t) (k 1)) (d (n "structopt") (r "^0.3.23") (d #t) (k 0)) (d (n "sysinfo") (r "^0.20.3") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.24") (d #t) (k 0)))) (h "0fzbqiw1lxbqczbs9qwj4a1xa6ybk80d2dkn5v3d4is1g4804lcb")))

(define-public crate-lair_keystore-0.1.0-alpha.3 (c (n "lair_keystore") (v "0.1.0-alpha.3") (d (list (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "lair_keystore_api") (r "=0.1.0-alpha.3") (d #t) (k 0)) (d (n "lair_keystore_api") (r "=0.1.0-alpha.3") (d #t) (k 1)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 1)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (f (quote ("bundled-sqlcipher-vendored-openssl"))) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "rusqlite") (r "^0.26") (f (quote ("bundled"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "sqlformat") (r "^0.1.6") (d #t) (k 1)) (d (n "structopt") (r "^0.3.23") (d #t) (k 0)) (d (n "sysinfo") (r "^0.20.3") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.24") (d #t) (k 0)))) (h "0436wn2ff0nwnhfz6pf381n45lhi1mdp1pwa6h01a94ilzybsxih")))

(define-public crate-lair_keystore-0.1.0-alpha.4 (c (n "lair_keystore") (v "0.1.0-alpha.4") (d (list (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "lair_keystore_api") (r "=0.1.0-alpha.4") (d #t) (k 0)) (d (n "lair_keystore_api") (r "=0.1.0-alpha.4") (d #t) (k 1)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 1)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (f (quote ("bundled-sqlcipher-vendored-openssl"))) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "rusqlite") (r "^0.26") (f (quote ("bundled"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "sqlformat") (r "^0.1.6") (d #t) (k 1)) (d (n "structopt") (r "^0.3.23") (d #t) (k 0)) (d (n "sysinfo") (r "^0.20.3") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.24") (d #t) (k 0)))) (h "08rhplvapzv7cd2g333dg1d5q1948p33mfmzm6ki70mbls7l1bs9")))

(define-public crate-lair_keystore-0.0.8 (c (n "lair_keystore") (v "0.0.8") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.1") (d #t) (k 0)) (d (n "lair_keystore_api") (r "=0.0.8") (d #t) (k 0)) (d (n "lair_keystore_api") (r "=0.0.8") (d #t) (k 1)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (f (quote ("bundled-sqlcipher-vendored-openssl"))) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "rusqlite") (r "^0.26") (f (quote ("bundled"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "sodoken") (r "=0.0.1-alpha.21") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "sysinfo") (r "^0.15") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.8.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 0)))) (h "0ljr108cispyc3xq30bgvy13d9x6lsy5y7ncb7glz6f0z0l86d7p")))

(define-public crate-lair_keystore-0.1.0 (c (n "lair_keystore") (v "0.1.0") (d (list (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "lair_keystore_api") (r "=0.1.0") (d #t) (k 0)) (d (n "lair_keystore_api") (r "=0.1.0") (d #t) (k 1)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 1)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (f (quote ("bundled-sqlcipher-vendored-openssl"))) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "rusqlite") (r "^0.26") (f (quote ("bundled"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "sqlformat") (r "^0.1.6") (d #t) (k 1)) (d (n "structopt") (r "^0.3.23") (d #t) (k 0)) (d (n "sysinfo") (r "^0.20.3") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.24") (d #t) (k 0)))) (h "15ajm6z05ipakvw8hpcvrm6k0gnyziz5qyr6hifvldp2p3n5gi4g")))

(define-public crate-lair_keystore-0.0.9 (c (n "lair_keystore") (v "0.0.9") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.1") (d #t) (k 0)) (d (n "lair_keystore_api") (r "=0.0.9") (d #t) (k 0)) (d (n "lair_keystore_api") (r "=0.0.9") (d #t) (k 1)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (f (quote ("bundled-sqlcipher-vendored-openssl"))) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "rusqlite") (r "^0.26") (f (quote ("bundled"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "sodoken") (r "=0.0.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "sysinfo") (r "^0.15") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.8.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 0)))) (h "11y6jf6zj3bdpi1l31w4ix8bfsiyjj8wqkd4lbs4m2bshhn4nm3y")))

(define-public crate-lair_keystore-0.1.1 (c (n "lair_keystore") (v "0.1.1") (d (list (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "lair_keystore_api") (r "^0.1.1") (d #t) (k 0)) (d (n "lair_keystore_api") (r "^0.1.1") (d #t) (k 1)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 1)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (f (quote ("bundled-sqlcipher-vendored-openssl"))) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "rusqlite") (r "^0.26") (f (quote ("bundled"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "sqlformat") (r "^0.1.6") (d #t) (k 1)) (d (n "structopt") (r "^0.3.23") (d #t) (k 0)) (d (n "sysinfo") (r "^0.20.3") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.24") (d #t) (k 0)))) (h "0qf4lzajk8y6x8dd3wdk1fx9rksanb7zm9dhmdw54fwwf9bd4z5s")))

(define-public crate-lair_keystore-0.0.10 (c (n "lair_keystore") (v "0.0.10") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.1") (d #t) (k 0)) (d (n "lair_keystore_api") (r "=0.0.10") (d #t) (k 0)) (d (n "lair_keystore_api") (r "=0.0.10") (d #t) (k 1)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (f (quote ("bundled-sqlcipher-vendored-openssl"))) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "rusqlite") (r "^0.26") (f (quote ("bundled"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "sodoken") (r "=0.0.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "sysinfo") (r "^0.15") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.8.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 0)))) (h "08kril81j16wk8fsbwvlxns5a9lma4mbjidh1x37w6v6yyhmlgkw")))

(define-public crate-lair_keystore-0.1.2 (c (n "lair_keystore") (v "0.1.2") (d (list (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "lair_keystore_api") (r "^0.1.2") (d #t) (k 0)) (d (n "lair_keystore_api") (r "^0.1.1") (d #t) (k 1)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 1)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (f (quote ("bundled-sqlcipher-vendored-openssl"))) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "rusqlite") (r "^0.26") (f (quote ("bundled"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "sqlformat") (r "^0.1.6") (d #t) (k 1)) (d (n "structopt") (r "^0.3.23") (d #t) (k 0)) (d (n "sysinfo") (r "^0.20.3") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.24") (d #t) (k 0)))) (h "1xq8y4xr2xrplm5bh2pb8wdaqydk2fhwcqama6jclff3vpw17yzq")))

(define-public crate-lair_keystore-0.1.3 (c (n "lair_keystore") (v "0.1.3") (d (list (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "lair_keystore_api") (r "=0.1.3") (d #t) (k 0)) (d (n "lair_keystore_api") (r "^0.1.1") (d #t) (k 1)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 1)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (f (quote ("bundled-sqlcipher-vendored-openssl"))) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "rusqlite") (r "^0.26") (f (quote ("bundled"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "sqlformat") (r "^0.1.6") (d #t) (k 1)) (d (n "structopt") (r "^0.3.23") (d #t) (k 0)) (d (n "sysinfo") (r "^0.20.3") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.24") (d #t) (k 0)))) (h "063097fgp0bin1gpy3q8zj2ig3jmyzryhbczvrq1392g6ck62dxr")))

(define-public crate-lair_keystore-0.2.0 (c (n "lair_keystore") (v "0.2.0") (d (list (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "lair_keystore_api") (r "=0.2.0") (d #t) (k 0)) (d (n "lair_keystore_api") (r "^0.2.0") (d #t) (k 1)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 1)) (d (n "rpassword") (r "^5.0.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (f (quote ("bundled-sqlcipher-vendored-openssl"))) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "rusqlite") (r "^0.26") (f (quote ("bundled"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "sqlformat") (r "^0.1.6") (d #t) (k 1)) (d (n "structopt") (r "^0.3.23") (d #t) (k 0)) (d (n "sysinfo") (r "^0.20.3") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2.24") (d #t) (k 0)))) (h "0254fkg9s2pjjglhk0pafrnjvzjkicvlraklzwj8jy1v4sbqmni8")))

(define-public crate-lair_keystore-0.0.11 (c (n "lair_keystore") (v "0.0.11") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "ghost_actor") (r "^0.3.0-alpha.1") (d #t) (k 0)) (d (n "lair_keystore_api") (r "=0.0.11") (d #t) (k 0)) (d (n "lair_keystore_api") (r "=0.0.11") (d #t) (k 1)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (f (quote ("bundled-sqlcipher-vendored-openssl"))) (d #t) (t "cfg(not(windows))") (k 0)) (d (n "rusqlite") (r "^0.26") (f (quote ("bundled"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "sodoken") (r "=0.0.4") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "sysinfo") (r "^0.15") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.8.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 0)))) (h "1rwy28r895wc04nf6cs2yfsa5m4j25dhi2z995a1c9awrcy3a2j6")))

(define-public crate-lair_keystore-0.2.1 (c (n "lair_keystore") (v "0.2.1") (d (list (d (n "criterion") (r "^0.3.6") (d #t) (k 2)) (d (n "lair_keystore_api") (r "=0.2.1") (d #t) (k 0)) (d (n "lair_keystore_api") (r "^0.2.1") (d #t) (k 1)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 1)) (d (n "rpassword") (r "^7.0.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28") (f (quote ("modern_sqlite"))) (d #t) (k 0)) (d (n "sqlformat") (r "^0.2.0") (d #t) (k 1)) (d (n "structopt") (r "^0.3.26") (d #t) (k 0)) (d (n "sysinfo") (r "^0.26.1") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3.15") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "0pw8ifrlxhsschcw2783y4ll0hmxlj60s7hcv4xdgz8r936m7mmy") (f (quote (("rusqlite-sqlcipher" "rusqlite/sqlcipher") ("rusqlite-bundled-sqlcipher-vendored-openssl" "rusqlite/bundled-sqlcipher-vendored-openssl") ("rusqlite-bundled-sqlcipher" "rusqlite/bundled-sqlcipher") ("rusqlite-bundled" "rusqlite/bundled") ("default" "rusqlite-bundled-sqlcipher-vendored-openssl"))))))

(define-public crate-lair_keystore-0.2.2 (c (n "lair_keystore") (v "0.2.2") (d (list (d (n "criterion") (r "^0.3.6") (d #t) (k 2)) (d (n "lair_keystore_api") (r "=0.2.2") (d #t) (k 0)) (d (n "lair_keystore_api") (r "^0.2.2") (d #t) (k 1)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 1)) (d (n "rpassword") (r "^7.0.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28") (f (quote ("modern_sqlite"))) (d #t) (k 0)) (d (n "sqlformat") (r "^0.2.0") (d #t) (k 1)) (d (n "structopt") (r "^0.3.26") (d #t) (k 0)) (d (n "sysinfo") (r "^0.26.1") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3.15") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "0w5j77hf52w6gilv8w1k3minpyb4sihnz60hr3j0i9dk3jviv0fy") (f (quote (("rusqlite-sqlcipher" "rusqlite/sqlcipher") ("rusqlite-bundled-sqlcipher-vendored-openssl" "rusqlite/bundled-sqlcipher-vendored-openssl") ("rusqlite-bundled-sqlcipher" "rusqlite/bundled-sqlcipher") ("rusqlite-bundled" "rusqlite/bundled") ("default" "rusqlite-bundled-sqlcipher-vendored-openssl"))))))

(define-public crate-lair_keystore-0.2.3 (c (n "lair_keystore") (v "0.2.3") (d (list (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "lair_keystore_api") (r "=0.2.3") (d #t) (k 0)) (d (n "lair_keystore_api") (r "^0.2.3") (d #t) (k 1)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 1)) (d (n "rpassword") (r "^7.2.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28") (f (quote ("modern_sqlite"))) (d #t) (k 0)) (d (n "sqlformat") (r "^0.2.0") (d #t) (k 1)) (d (n "structopt") (r "^0.3.26") (d #t) (k 0)) (d (n "sysinfo") (r "^0.27.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3.15") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "0yz9v0yjdxapaac18pbc9j0za11rhk9v8pfqia458gi557qfi9da") (f (quote (("rusqlite-sqlcipher" "rusqlite/sqlcipher") ("rusqlite-bundled-sqlcipher-vendored-openssl" "rusqlite/bundled-sqlcipher-vendored-openssl") ("rusqlite-bundled-sqlcipher" "rusqlite/bundled-sqlcipher") ("rusqlite-bundled" "rusqlite/bundled") ("default" "rusqlite-bundled-sqlcipher-vendored-openssl"))))))

(define-public crate-lair_keystore-0.2.4 (c (n "lair_keystore") (v "0.2.4") (d (list (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "lair_keystore_api") (r "=0.2.4") (d #t) (k 0)) (d (n "lair_keystore_api") (r "^0.2.4") (d #t) (k 1)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 1)) (d (n "rpassword") (r "^7.2.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (f (quote ("modern_sqlite"))) (d #t) (k 0)) (d (n "sqlformat") (r "^0.2.1") (d #t) (k 1)) (d (n "structopt") (r "^0.3.26") (d #t) (k 0)) (d (n "sysinfo") (r "^0.28.4") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "1a74fy3wa2w0dxz87jv60l7hxlib3yky9f7lyrvr4xq4z8lc6lyl") (f (quote (("rusqlite-sqlcipher" "rusqlite/sqlcipher") ("rusqlite-bundled-sqlcipher-vendored-openssl" "rusqlite/bundled-sqlcipher-vendored-openssl") ("rusqlite-bundled-sqlcipher" "rusqlite/bundled-sqlcipher") ("rusqlite-bundled" "rusqlite/bundled") ("default" "rusqlite-bundled-sqlcipher-vendored-openssl"))))))

(define-public crate-lair_keystore-0.3.0 (c (n "lair_keystore") (v "0.3.0") (d (list (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "lair_keystore_api") (r "=0.3.0") (d #t) (k 0)) (d (n "lair_keystore_api") (r "^0.3.0") (d #t) (k 1)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 1)) (d (n "rpassword") (r "^7.2.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (f (quote ("modern_sqlite"))) (d #t) (k 0)) (d (n "sqlformat") (r "^0.2.1") (d #t) (k 1)) (d (n "structopt") (r "^0.3.26") (d #t) (k 0)) (d (n "sysinfo") (r "^0.28.4") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "0ijpan8skbkjsbmnksplxymrlm041pmsg5q3ngqfwxcdpjy7sg44") (f (quote (("rusqlite-sqlcipher" "rusqlite/sqlcipher") ("rusqlite-bundled-sqlcipher-vendored-openssl" "rusqlite/bundled-sqlcipher-vendored-openssl") ("rusqlite-bundled-sqlcipher" "rusqlite/bundled-sqlcipher") ("rusqlite-bundled" "rusqlite/bundled") ("default" "rusqlite-bundled-sqlcipher-vendored-openssl"))))))

(define-public crate-lair_keystore-0.4.0 (c (n "lair_keystore") (v "0.4.0") (d (list (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "lair_keystore_api") (r "=0.4.0") (d #t) (k 0)) (d (n "lair_keystore_api") (r "^0.4.0") (d #t) (k 1)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 1)) (d (n "rpassword") (r "^7.2.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (f (quote ("modern_sqlite"))) (d #t) (k 0)) (d (n "sqlformat") (r "^0.2.1") (d #t) (k 1)) (d (n "structopt") (r "^0.3.26") (d #t) (k 0)) (d (n "sysinfo") (r "^0.28.4") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "1irf2k47wxrczy23gs66g97xcc147qwvv7zkz4g94rjwwp9djw8f") (f (quote (("rusqlite-sqlcipher" "rusqlite/sqlcipher") ("rusqlite-bundled-sqlcipher-vendored-openssl" "rusqlite/bundled-sqlcipher-vendored-openssl") ("rusqlite-bundled-sqlcipher" "rusqlite/bundled-sqlcipher") ("rusqlite-bundled" "rusqlite/bundled") ("default" "rusqlite-bundled-sqlcipher-vendored-openssl"))))))

(define-public crate-lair_keystore-0.4.1 (c (n "lair_keystore") (v "0.4.1") (d (list (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "lair_keystore_api") (r "=0.4.1") (d #t) (k 0)) (d (n "lair_keystore_api") (r "^0.4.1") (d #t) (k 1)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 1)) (d (n "rpassword") (r "^7.2.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (f (quote ("modern_sqlite"))) (d #t) (k 0)) (d (n "sqlformat") (r "^0.2.1") (d #t) (k 1)) (d (n "structopt") (r "^0.3.26") (d #t) (k 0)) (d (n "sysinfo") (r "^0.28.4") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "1paa3gplff9ldz35g6lq2c9jwh188fgmjhk4aypcl10gkxicgfpw") (f (quote (("rusqlite-sqlcipher" "rusqlite/sqlcipher") ("rusqlite-bundled-sqlcipher-vendored-openssl" "rusqlite/bundled-sqlcipher-vendored-openssl") ("rusqlite-bundled-sqlcipher" "rusqlite/bundled-sqlcipher") ("rusqlite-bundled" "rusqlite/bundled") ("default" "rusqlite-bundled-sqlcipher-vendored-openssl"))))))

(define-public crate-lair_keystore-0.4.2 (c (n "lair_keystore") (v "0.4.2") (d (list (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "lair_keystore_api") (r "=0.4.2") (d #t) (k 0)) (d (n "lair_keystore_api") (r "^0.4.2") (d #t) (k 1)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 1)) (d (n "rpassword") (r "^7.2.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (f (quote ("modern_sqlite"))) (d #t) (k 0)) (d (n "sqlformat") (r "^0.2.1") (d #t) (k 1)) (d (n "structopt") (r "^0.3.26") (d #t) (k 0)) (d (n "sysinfo") (r "^0.28.4") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "19myswfy0f41gjgczh4bijwx3pdlb2bkhpy1hwxq7fw67zmp7sf7") (f (quote (("rusqlite-sqlcipher" "rusqlite/sqlcipher") ("rusqlite-bundled-sqlcipher-vendored-openssl" "rusqlite/bundled-sqlcipher-vendored-openssl") ("rusqlite-bundled-sqlcipher" "rusqlite/bundled-sqlcipher") ("rusqlite-bundled" "rusqlite/bundled") ("default" "rusqlite-bundled-sqlcipher-vendored-openssl"))))))

(define-public crate-lair_keystore-0.4.3 (c (n "lair_keystore") (v "0.4.3") (d (list (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "lair_keystore_api") (r "=0.4.3") (d #t) (k 0)) (d (n "lair_keystore_api") (r "=0.4.3") (d #t) (k 1)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 1)) (d (n "rpassword") (r "^7.2.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (f (quote ("modern_sqlite"))) (d #t) (k 0)) (d (n "sqlformat") (r "^0.2.1") (d #t) (k 1)) (d (n "structopt") (r "^0.3.26") (d #t) (k 0)) (d (n "sysinfo") (r "^0.28.4") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "1wwbkxk03dyz0vfd4v1jd2ylacrbczk7s3lc3w2ff3qn0mnwv5vk") (f (quote (("rusqlite-sqlcipher" "rusqlite/sqlcipher") ("rusqlite-bundled-sqlcipher-vendored-openssl" "rusqlite/bundled-sqlcipher-vendored-openssl") ("rusqlite-bundled-sqlcipher" "rusqlite/bundled-sqlcipher") ("rusqlite-bundled" "rusqlite/bundled") ("default" "rusqlite-bundled-sqlcipher-vendored-openssl"))))))

(define-public crate-lair_keystore-0.4.4 (c (n "lair_keystore") (v "0.4.4") (d (list (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "lair_keystore_api") (r "=0.4.4") (d #t) (k 0)) (d (n "lair_keystore_api") (r "=0.4.4") (d #t) (k 1)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 1)) (d (n "rpassword") (r "^7.2.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29") (f (quote ("modern_sqlite"))) (d #t) (k 0)) (d (n "sqlformat") (r "^0.2.1") (d #t) (k 1)) (d (n "structopt") (r "^0.3.26") (d #t) (k 0)) (d (n "sysinfo") (r "^0.28.4") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "1ampdddlp8idbj2anchn6iq36f1dgyn7w7fyr44mk3iigxn9qs2n") (f (quote (("rusqlite-sqlcipher" "rusqlite/sqlcipher") ("rusqlite-bundled-sqlcipher-vendored-openssl" "rusqlite/bundled-sqlcipher-vendored-openssl") ("rusqlite-bundled-sqlcipher" "rusqlite/bundled-sqlcipher") ("rusqlite-bundled" "rusqlite/bundled") ("default" "rusqlite-bundled-sqlcipher-vendored-openssl"))))))

