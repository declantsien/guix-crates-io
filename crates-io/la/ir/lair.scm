(define-module (crates-io la ir lair) #:use-module (crates-io))

(define-public crate-lair-0.1.0 (c (n "lair") (v "0.1.0") (d (list (d (n "approx") (r "^0.3") (d #t) (k 2)) (d (n "ndarray") (r "^0.13") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0zdpmzjpbv1pa4266rps9ds5axzsir4w24hvbg2a54zh7xkbvvjd")))

(define-public crate-lair-0.1.1 (c (n "lair") (v "0.1.1") (d (list (d (n "approx") (r "^0.3") (d #t) (k 2)) (d (n "cauchy") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ndarray") (r "^0.13") (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (f (quote ("approx"))) (d #t) (k 2)) (d (n "ndarray-rand") (r "^0.11") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand_isaac") (r "^0.2") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1pzwx7vpr6yvn9zvqyyaclw27j6v1cf7rw62rnl9pqfqqpbprq62")))

(define-public crate-lair-0.2.0 (c (n "lair") (v "0.2.0") (d (list (d (n "approx") (r "^0.3") (d #t) (k 2)) (d (n "cauchy") (r "^0.3") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ndarray") (r "^0.13") (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (f (quote ("approx"))) (d #t) (k 2)) (d (n "ndarray-rand") (r "^0.11") (d #t) (k 2)) (d (n "num-complex") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand_isaac") (r "^0.2") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0npy4hfjzamw3j9xjdkss4nbawwrpx373g67i1ggqq6583s540dj")))

(define-public crate-lair-0.3.0 (c (n "lair") (v "0.3.0") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ndarray") (r "^0.14") (d #t) (k 0)) (d (n "ndarray") (r "^0.14") (f (quote ("approx"))) (d #t) (k 2)) (d (n "ndarray-rand") (r "^0.13") (d #t) (k 2)) (d (n "num-complex") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand_isaac") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "10ncjrchpbc9pl0gn48s1d890f7kfica8nvs9da7z52bmrwg9h6v")))

(define-public crate-lair-0.4.0 (c (n "lair") (v "0.4.0") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("approx"))) (d #t) (k 2)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand_isaac") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0gnffsqag8rm9n3l5axmbgq92s9vbgqv8nk7ljlj285miibsqhaq")))

(define-public crate-lair-0.5.0 (c (n "lair") (v "0.5.0") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("approx"))) (d #t) (k 2)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand_isaac") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0d9pdz3zc56hlg50b8h9drcwyvpxck4nlj5w9s7r5xfnmx3wfmxp") (f (quote (("serialization" "serde" "num-complex/serde") ("default"))))))

(define-public crate-lair-0.6.0 (c (n "lair") (v "0.6.0") (d (list (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.4") (f (quote ("approx-0_5"))) (d #t) (k 2)) (d (n "ndarray-rand") (r "^0.14") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "rand_isaac") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1q151abhml8c206ngizc0ijqv6xqayizp3vn58syrcns5r8b1zlm") (f (quote (("serialization" "serde" "num-complex/serde") ("default"))))))

