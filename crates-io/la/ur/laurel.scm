(define-module (crates-io la ur laurel) #:use-module (crates-io))

(define-public crate-laurel-0.1.0 (c (n "laurel") (v "0.1.0") (d (list (d (n "caps") (r ">=0.5") (d #t) (k 0)) (d (n "getopts") (r ">=0.2") (d #t) (k 0)) (d (n "indexmap") (r ">=1") (d #t) (k 0)) (d (n "lazy_static") (r ">=1.4") (d #t) (k 0)) (d (n "libc") (r ">=0.2") (d #t) (k 0)) (d (n "nix") (r ">=0.22") (d #t) (k 0)) (d (n "peg") (r ">=0.7") (d #t) (k 0)) (d (n "posix-acl") (r ">=1") (d #t) (k 0)) (d (n "serde") (r ">=1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r ">=1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "toml") (r ">=0.5") (d #t) (k 0)))) (h "16w7shakkypsv0y6h4xk34m95qvhfchbr9h6vsrzh54k5f7q94xl")))

(define-public crate-laurel-0.1.1 (c (n "laurel") (v "0.1.1") (d (list (d (n "caps") (r ">=0.5") (d #t) (k 0)) (d (n "getopts") (r ">=0.2") (d #t) (k 0)) (d (n "indexmap") (r ">=1") (d #t) (k 0)) (d (n "lazy_static") (r ">=1.4") (d #t) (k 0)) (d (n "libc") (r ">=0.2") (d #t) (k 0)) (d (n "nix") (r ">=0.22") (d #t) (k 0)) (d (n "peg") (r ">=0.7") (d #t) (k 0)) (d (n "posix-acl") (r ">=1") (d #t) (k 0)) (d (n "serde") (r ">=1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r ">=1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "toml") (r ">=0.5") (d #t) (k 0)))) (h "1ib1wcnajnlmr8gprd3k4dhcrlr7chcx0mdrzl8r0grcis2m4ry8") (f (quote (("static"))))))

(define-public crate-laurel-0.1.2 (c (n "laurel") (v "0.1.2") (d (list (d (n "caps") (r ">=0.5") (d #t) (k 0)) (d (n "getopts") (r ">=0.2") (d #t) (k 0)) (d (n "indexmap") (r ">=1") (d #t) (k 0)) (d (n "lazy_static") (r ">=1.4") (d #t) (k 0)) (d (n "libc") (r ">=0.2") (d #t) (k 0)) (d (n "nix") (r ">=0.22") (d #t) (k 0)) (d (n "peg") (r ">=0.7") (d #t) (k 0)) (d (n "posix-acl") (r ">=1") (d #t) (k 0)) (d (n "serde") (r ">=1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r ">=1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "toml") (r ">=0.5") (d #t) (k 0)))) (h "138zsyr7qd2phq2gbmmjlf61mdjfnl1csjc4aybp447cwvmnfdsa") (f (quote (("static"))))))

(define-public crate-laurel-0.1.3 (c (n "laurel") (v "0.1.3") (d (list (d (n "caps") (r ">=0.5") (d #t) (k 0)) (d (n "getopts") (r ">=0.2") (d #t) (k 0)) (d (n "indexmap") (r ">=1") (d #t) (k 0)) (d (n "lazy_static") (r ">=1.4") (d #t) (k 0)) (d (n "libc") (r ">=0.2") (d #t) (k 0)) (d (n "nix") (r ">=0.22") (d #t) (k 0)) (d (n "peg") (r ">=0.7") (d #t) (k 0)) (d (n "posix-acl") (r ">=1") (d #t) (k 0)) (d (n "serde") (r ">=1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r ">=1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "toml") (r ">=0.5") (d #t) (k 0)))) (h "0h1fclbimygrhzqgvid1c9v666p9ksf1cbk9dxxnj2p6hrkdjjjp") (f (quote (("static"))))))

(define-public crate-laurel-0.1.4 (c (n "laurel") (v "0.1.4") (d (list (d (n "caps") (r ">=0.5") (d #t) (k 0)) (d (n "getopts") (r ">=0.2") (d #t) (k 0)) (d (n "indexmap") (r ">=1") (d #t) (k 0)) (d (n "lazy_static") (r ">=1.4") (d #t) (k 0)) (d (n "libc") (r ">=0.2") (d #t) (k 0)) (d (n "nix") (r ">=0.22") (d #t) (k 0)) (d (n "peg") (r ">=0.7") (d #t) (k 0)) (d (n "posix-acl") (r ">=1") (d #t) (k 0)) (d (n "serde") (r ">=1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r ">=1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "toml") (r ">=0.5") (d #t) (k 0)))) (h "1825mg73vkws2dc4j9wikxb301kn8vr36rdwlz472bxqjvmbv5h2") (f (quote (("static"))))))

(define-public crate-laurel-0.1.5 (c (n "laurel") (v "0.1.5") (d (list (d (n "caps") (r ">=0.5") (d #t) (k 0)) (d (n "getopts") (r ">=0.2") (d #t) (k 0)) (d (n "indexmap") (r ">=1") (d #t) (k 0)) (d (n "lazy_static") (r ">=1.4") (d #t) (k 0)) (d (n "libc") (r ">=0.2") (d #t) (k 0)) (d (n "nix") (r ">=0.22") (d #t) (k 0)) (d (n "peg") (r ">=0.7") (d #t) (k 0)) (d (n "posix-acl") (r ">=1") (d #t) (k 0)) (d (n "serde") (r ">=1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r ">=1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "toml") (r ">=0.5") (d #t) (k 0)))) (h "0g3w73ngq9w9kg912rngmifs3b4z1ajjdi7m21lddv1w804adnhi") (f (quote (("static"))))))

(define-public crate-laurel-0.2.0 (c (n "laurel") (v "0.2.0") (d (list (d (n "bencher") (r ">=0") (d #t) (k 2)) (d (n "bindgen") (r ">=0.56") (d #t) (k 1)) (d (n "caps") (r ">=0.5") (d #t) (k 0)) (d (n "getopts") (r ">=0.2") (d #t) (k 0)) (d (n "gperftools") (r ">=0") (d #t) (k 2)) (d (n "indexmap") (r ">=1") (d #t) (k 0)) (d (n "lazy_static") (r ">=1.4") (d #t) (k 0)) (d (n "libc") (r ">=0.2") (d #t) (k 0)) (d (n "nix") (r ">=0.22") (d #t) (k 0)) (d (n "nom") (r ">=0") (d #t) (k 0)) (d (n "posix-acl") (r ">=1") (d #t) (k 0)) (d (n "serde") (r ">=1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r ">=1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "toml") (r ">=0.5") (d #t) (k 0)))) (h "0fbz3yr7zzfzxikmyqj51m6qzi79mh1bk5m231ykaw7bx2iy0q6l")))

(define-public crate-laurel-0.2.2 (c (n "laurel") (v "0.2.2") (d (list (d (n "bencher") (r ">=0") (d #t) (k 2)) (d (n "bindgen") (r ">=0.56") (d #t) (k 1)) (d (n "caps") (r ">=0.5") (d #t) (k 0)) (d (n "getopts") (r ">=0.2") (d #t) (k 0)) (d (n "gperftools") (r ">=0") (d #t) (k 2)) (d (n "indexmap") (r ">=1") (d #t) (k 0)) (d (n "lazy_static") (r ">=1.4") (d #t) (k 0)) (d (n "libc") (r ">=0.2") (d #t) (k 0)) (d (n "nix") (r ">=0.22") (d #t) (k 0)) (d (n "nom") (r ">=0") (d #t) (k 0)) (d (n "posix-acl") (r ">=1") (d #t) (k 0)) (d (n "serde") (r ">=1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r ">=1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "toml") (r ">=0.5") (d #t) (k 0)))) (h "0ybb81g4aay4g1igni816ycsjjx8pkm4xpvcidwb4i3s7dm6np94")))

(define-public crate-laurel-0.3.0 (c (n "laurel") (v "0.3.0") (d (list (d (n "bencher") (r ">=0") (d #t) (k 2)) (d (n "bindgen") (r ">=0.56") (d #t) (k 1)) (d (n "caps") (r ">=0.5") (d #t) (k 0)) (d (n "getopts") (r ">=0.2") (d #t) (k 0)) (d (n "gperftools") (r ">=0") (d #t) (k 2)) (d (n "indexmap") (r ">=1") (d #t) (k 0)) (d (n "lazy_static") (r ">=1.4") (d #t) (k 0)) (d (n "libc") (r ">=0.2") (d #t) (k 0)) (d (n "nix") (r ">=0.22") (d #t) (k 0)) (d (n "nom") (r ">=0") (d #t) (k 0)) (d (n "posix-acl") (r ">=1") (d #t) (k 0)) (d (n "serde") (r ">=1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r ">=1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "toml") (r ">=0.5") (d #t) (k 0)))) (h "03j6vzz85zbm6v9lzwk77l2cahjk6vs54v4526xy430qnnymamka")))

(define-public crate-laurel-0.3.1 (c (n "laurel") (v "0.3.1") (d (list (d (n "bencher") (r ">=0") (d #t) (k 2)) (d (n "bindgen") (r ">=0.56") (d #t) (k 1)) (d (n "caps") (r ">=0.5") (d #t) (k 0)) (d (n "getopts") (r ">=0.2") (d #t) (k 0)) (d (n "gperftools") (r ">=0") (d #t) (k 2)) (d (n "indexmap") (r ">=1") (d #t) (k 0)) (d (n "lazy_static") (r ">=1.4") (d #t) (k 0)) (d (n "libc") (r ">=0.2") (d #t) (k 0)) (d (n "nix") (r ">=0.22") (d #t) (k 0)) (d (n "nom") (r ">=0") (d #t) (k 0)) (d (n "posix-acl") (r ">=1") (d #t) (k 0)) (d (n "serde") (r ">=1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r ">=1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "toml") (r ">=0.5") (d #t) (k 0)))) (h "0mmx7fdym8f041sxwzsdzffibkvf11jhfsgiis526mb7adz81lqw")))

(define-public crate-laurel-0.4.0 (c (n "laurel") (v "0.4.0") (d (list (d (n "bencher") (r ">=0") (d #t) (k 2)) (d (n "bindgen") (r ">=0.56") (d #t) (k 1)) (d (n "caps") (r ">=0.5") (d #t) (k 0)) (d (n "getopts") (r ">=0.2") (d #t) (k 0)) (d (n "gperftools") (r ">=0") (d #t) (k 2)) (d (n "indexmap") (r ">=1") (d #t) (k 0)) (d (n "lazy_static") (r ">=1.4") (d #t) (k 0)) (d (n "libc") (r ">=0.2") (d #t) (k 0)) (d (n "nix") (r ">=0.22") (d #t) (k 0)) (d (n "nom") (r ">=0") (d #t) (k 0)) (d (n "posix-acl") (r ">=1") (d #t) (k 0)) (d (n "regex") (r ">=1.5.0") (d #t) (k 0)) (d (n "serde") (r ">=1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r ">=1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "toml") (r ">=0.5") (d #t) (k 0)))) (h "0hvzjj5mgqrhky3vy87ll17x2prxjgs5z1i18kzj8yb1rya3qw77") (r "1.48")))

(define-public crate-laurel-0.4.1 (c (n "laurel") (v "0.4.1") (d (list (d (n "bencher") (r ">=0") (d #t) (k 2)) (d (n "bindgen") (r ">=0.56") (d #t) (k 1)) (d (n "caps") (r ">=0.5") (d #t) (k 0)) (d (n "getopts") (r ">=0.2") (d #t) (k 0)) (d (n "gperftools") (r ">=0") (d #t) (k 2)) (d (n "indexmap") (r ">=1") (d #t) (k 0)) (d (n "lazy_static") (r ">=1.4") (d #t) (k 0)) (d (n "libc") (r ">=0.2") (d #t) (k 0)) (d (n "nix") (r ">=0.22") (d #t) (k 0)) (d (n "nom") (r ">=0") (d #t) (k 0)) (d (n "posix-acl") (r ">=1") (d #t) (k 0)) (d (n "regex") (r ">=1.5.0") (d #t) (k 0)) (d (n "serde") (r ">=1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r ">=1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "toml") (r ">=0.5") (d #t) (k 0)))) (h "0xkzfpz6w5z9igal8l48dcxadip607qvqxmc98nndziahcf6dqwz") (r "1.48")))

(define-public crate-laurel-0.5.0 (c (n "laurel") (v "0.5.0") (d (list (d (n "bencher") (r ">=0") (d #t) (k 2)) (d (n "bindgen") (r ">=0.56") (d #t) (k 1)) (d (n "caps") (r ">=0.5") (d #t) (k 0)) (d (n "getopts") (r ">=0.2") (d #t) (k 0)) (d (n "gperftools") (r ">=0") (d #t) (k 2)) (d (n "indexmap") (r ">=1") (d #t) (k 0)) (d (n "lazy_static") (r ">=1.4") (d #t) (k 0)) (d (n "libc") (r ">=0.2") (d #t) (k 0)) (d (n "nix") (r ">=0.22") (d #t) (k 0)) (d (n "nom") (r ">=0") (d #t) (k 0)) (d (n "posix-acl") (r ">=1") (d #t) (k 0)) (d (n "regex") (r ">=1.5.0") (d #t) (k 0)) (d (n "serde") (r ">=1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r ">=1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tinyvec") (r ">=1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "toml") (r ">=0.5") (d #t) (k 0)))) (h "1s2xvizjcldlw183gbzrm5yqxxhsv92nqry4acnr68407nkra8vi") (r "1.56")))

(define-public crate-laurel-0.5.1-pre1 (c (n "laurel") (v "0.5.1-pre1") (d (list (d (n "bencher") (r ">=0") (d #t) (k 2)) (d (n "bindgen") (r ">=0.56") (d #t) (k 1)) (d (n "caps") (r ">=0.5") (d #t) (k 0)) (d (n "exacl") (r ">=0.6") (d #t) (k 0)) (d (n "getopts") (r ">=0.2") (d #t) (k 0)) (d (n "gperftools") (r ">=0") (d #t) (k 2)) (d (n "indexmap") (r ">=1") (d #t) (k 0)) (d (n "lazy_static") (r ">=1.4") (d #t) (k 0)) (d (n "libc") (r ">=0.2") (d #t) (k 0)) (d (n "nix") (r ">=0.22") (d #t) (k 0)) (d (n "nom") (r ">=0") (d #t) (k 0)) (d (n "regex") (r ">=1.5.0") (d #t) (k 0)) (d (n "serde") (r ">=1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r ">=1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tinyvec") (r ">=1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "toml") (r ">=0.5") (d #t) (k 0)))) (h "1lln9d7ydndyqn03fhxp0cnjks7yrrz2h7nbxdvfw3n1knaf6zk9") (r "1.56")))

(define-public crate-laurel-0.5.1-pre2 (c (n "laurel") (v "0.5.1-pre2") (d (list (d (n "bencher") (r ">=0") (d #t) (k 2)) (d (n "bindgen") (r ">=0.56") (d #t) (k 1)) (d (n "caps") (r ">=0.5") (d #t) (k 0)) (d (n "exacl") (r ">=0.6") (d #t) (k 0)) (d (n "getopts") (r ">=0.2") (d #t) (k 0)) (d (n "gperftools") (r ">=0") (d #t) (k 2)) (d (n "indexmap") (r ">=1") (d #t) (k 0)) (d (n "lazy_static") (r ">=1.4") (d #t) (k 0)) (d (n "libc") (r ">=0.2") (d #t) (k 0)) (d (n "nix") (r ">=0.22") (d #t) (k 0)) (d (n "nom") (r ">=0") (d #t) (k 0)) (d (n "regex") (r ">=1.5.0") (d #t) (k 0)) (d (n "serde") (r ">=1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r ">=1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tinyvec") (r ">=1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "toml") (r ">=0.5") (d #t) (k 0)))) (h "1l6npx9livksikddfa4wr2rfh5w30wkjr7c4dys9y9fc7x16l05h") (r "1.56")))

(define-public crate-laurel-0.5.1 (c (n "laurel") (v "0.5.1") (d (list (d (n "bencher") (r ">=0") (d #t) (k 2)) (d (n "bindgen") (r ">=0.56") (d #t) (k 1)) (d (n "caps") (r ">=0.5") (d #t) (k 0)) (d (n "exacl") (r ">=0.6") (d #t) (k 0)) (d (n "getopts") (r ">=0.2") (d #t) (k 0)) (d (n "gperftools") (r ">=0") (d #t) (k 2)) (d (n "indexmap") (r ">=1") (d #t) (k 0)) (d (n "lazy_static") (r ">=1.4") (d #t) (k 0)) (d (n "libc") (r ">=0.2") (d #t) (k 0)) (d (n "nix") (r ">=0.22") (d #t) (k 0)) (d (n "nom") (r ">=0") (d #t) (k 0)) (d (n "regex") (r ">=1.5.0") (d #t) (k 0)) (d (n "serde") (r ">=1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r ">=1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tinyvec") (r ">=1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "toml") (r ">=0.5") (d #t) (k 0)))) (h "19snzbn3y7z50kl73ybirpl0kjdh9nvwzn09ncr8sn3d1vpbxrx2") (r "1.56")))

(define-public crate-laurel-0.5.2-pre1 (c (n "laurel") (v "0.5.2-pre1") (d (list (d (n "bencher") (r "^0") (d #t) (k 2)) (d (n "bindgen") (r "^0.60") (d #t) (k 1)) (d (n "caps") (r "^0.5") (d #t) (k 0)) (d (n "exacl") (r ">=0.6") (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 0)) (d (n "gperftools") (r "^0") (d #t) (k 2)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nix") (r "^0.22") (d #t) (k 0)) (d (n "nom") (r "^7") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "simple_logger") (r "^1") (d #t) (k 0)) (d (n "syslog") (r "^6") (d #t) (k 0)) (d (n "tinyvec") (r "^1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "0kqhf01fpvczgbm09vzyh3rafar7i57ngzx73r333wm9ri7a619z") (r "1.56")))

(define-public crate-laurel-0.5.2 (c (n "laurel") (v "0.5.2") (d (list (d (n "bencher") (r "^0") (d #t) (k 2)) (d (n "bindgen") (r "^0.60") (d #t) (k 1)) (d (n "caps") (r "^0.5") (d #t) (k 0)) (d (n "exacl") (r ">=0.6") (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 0)) (d (n "gperftools") (r "^0") (d #t) (k 2)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nix") (r "^0.22") (d #t) (k 0)) (d (n "nom") (r "^7") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "simple_logger") (r "^1") (d #t) (k 0)) (d (n "syslog") (r "^6") (d #t) (k 0)) (d (n "tinyvec") (r "^1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "1bkcd7fnnlpwixk3w2ndl4sj1dpbc82v6j8ycm9lyglxliyc8pdl") (r "1.56")))

(define-public crate-laurel-0.5.3 (c (n "laurel") (v "0.5.3") (d (list (d (n "bencher") (r "^0") (d #t) (k 2)) (d (n "bindgen") (r "^0.60") (d #t) (k 1)) (d (n "caps") (r "^0.5") (d #t) (k 0)) (d (n "exacl") (r ">=0.6") (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 0)) (d (n "gperftools") (r "^0") (d #t) (k 2)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nix") (r "^0.22") (d #t) (k 0)) (d (n "nom") (r "^7") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "simple_logger") (r "^1") (d #t) (k 0)) (d (n "syslog") (r "^6") (d #t) (k 0)) (d (n "tinyvec") (r "^1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "0i2ym77bgp2mqh7y447zl6ylbavry65brq0pv19zd4dmvh3ywh5n") (r "1.56")))

(define-public crate-laurel-0.5.4 (c (n "laurel") (v "0.5.4") (d (list (d (n "bencher") (r "^0") (d #t) (k 2)) (d (n "bindgen") (r ">=0.60") (d #t) (k 1)) (d (n "caps") (r "^0.5") (d #t) (k 0)) (d (n "exacl") (r ">=0.6") (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 0)) (d (n "gperftools") (r "^0") (d #t) (k 2)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nix") (r "^0.26") (d #t) (k 0)) (d (n "nom") (r "^7") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "simple_logger") (r ">=1") (d #t) (k 0)) (d (n "syslog") (r "^6") (d #t) (k 0)) (d (n "tinyvec") (r "^1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "0y0bhkiina56dp38lkd75q6gnvij3vn2kf1nbfcq3vagp58jahs9") (f (quote (("procfs") ("default" "procfs")))) (r "1.56")))

(define-public crate-laurel-0.5.5 (c (n "laurel") (v "0.5.5") (d (list (d (n "bencher") (r "^0") (d #t) (k 2)) (d (n "bindgen") (r ">=0.60") (d #t) (k 1)) (d (n "caps") (r "^0.5") (d #t) (k 0)) (d (n "exacl") (r ">=0.6") (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 0)) (d (n "gperftools") (r "^0") (d #t) (k 2)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nix") (r "^0.26") (d #t) (k 0)) (d (n "nom") (r "^7") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "simple_logger") (r ">=1") (d #t) (k 0)) (d (n "syslog") (r "^6") (d #t) (k 0)) (d (n "tinyvec") (r "^1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "0gzy9zyqw7ha11v5x85sfxcld4x6yhd5nkslg1zbdz1w1704q5jh") (f (quote (("procfs") ("default" "procfs")))) (r "1.56")))

(define-public crate-laurel-0.5.6 (c (n "laurel") (v "0.5.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bencher") (r "^0") (d #t) (k 2)) (d (n "bindgen") (r ">=0.60") (d #t) (k 1)) (d (n "caps") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "exacl") (r ">=0.6") (d #t) (k 0)) (d (n "faster-hex") (r "^0.9") (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 0)) (d (n "gperftools") (r "^0") (d #t) (k 2)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nix") (r "^0.26") (d #t) (k 0)) (d (n "nom") (r "^7") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "simple_logger") (r ">=1") (d #t) (k 0)) (d (n "syslog") (r "^6") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tinyvec") (r "^1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "1avjlrqygyfkq5l0x74bnjbmqjp42w458v2xkpf2dcm4ll54iqf8") (f (quote (("procfs") ("default" "procfs")))) (r "1.56")))

(define-public crate-laurel-0.6.0 (c (n "laurel") (v "0.6.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bindgen") (r ">=0.60") (d #t) (k 1)) (d (n "caps") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "divan") (r "^0.1.13") (d #t) (k 2)) (d (n "exacl") (r ">=0.6") (d #t) (k 0)) (d (n "faster-hex") (r "^0.9") (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 0)) (d (n "gperftools") (r "^0") (d #t) (k 2)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nix") (r "^0.26") (d #t) (k 0)) (d (n "nom") (r "^7") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "simple_logger") (r ">=1") (d #t) (k 0)) (d (n "syslog") (r "^6") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tinyvec") (r "^1") (f (quote ("alloc" "serde"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "159gq4nzvyldcmp5nqlr0gvzcpsyq8acsgjnnzk1sqf4g9b1yk5x") (f (quote (("procfs") ("default" "procfs")))) (r "1.56")))

(define-public crate-laurel-0.6.1 (c (n "laurel") (v "0.6.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bindgen") (r ">=0.60") (d #t) (k 1)) (d (n "caps") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "divan") (r "^0.1.13") (d #t) (k 2)) (d (n "exacl") (r ">=0.6") (d #t) (k 0)) (d (n "faster-hex") (r "^0.9") (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 0)) (d (n "gperftools") (r "^0") (d #t) (k 2)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nix") (r "^0.26") (d #t) (k 0)) (d (n "nom") (r "^7") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "simple_logger") (r ">=1") (d #t) (k 0)) (d (n "syslog") (r "^6") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tinyvec") (r "^1") (f (quote ("alloc" "serde"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "196vij8i9f94dh06wcb43gsdigm2f9s8s6lfjray3jd3dfpgw73p") (f (quote (("procfs") ("default" "procfs")))) (r "1.56")))

(define-public crate-laurel-0.6.2 (c (n "laurel") (v "0.6.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bindgen") (r ">=0.60") (d #t) (k 1)) (d (n "caps") (r "^0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "divan") (r "^0.1.13") (d #t) (k 2)) (d (n "exacl") (r ">=0.6") (d #t) (k 0)) (d (n "faster-hex") (r "^0.9") (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 0)) (d (n "gperftools") (r "^0") (d #t) (k 2)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nix") (r "^0.26") (d #t) (k 0)) (d (n "nom") (r "^7") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "simple_logger") (r ">=1") (d #t) (k 0)) (d (n "syslog") (r "^6") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tinyvec") (r "^1") (f (quote ("alloc" "serde"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "198f888brr3grhnncwnyzsh07wi519k2ybk0aqk9m8mjjq55n81j") (f (quote (("procfs") ("default" "procfs")))) (r "1.70")))

