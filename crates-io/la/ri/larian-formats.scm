(define-module (crates-io la ri larian-formats) #:use-module (crates-io))

(define-public crate-larian-formats-0.1.0 (c (n "larian-formats") (v "0.1.0") (d (list (d (n "lz4_flex") (r "^0.11.2") (d #t) (k 0)) (d (n "quick-xml") (r "^0.31.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rc-zip-sync") (r "^4.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "static_assertions_next") (r "^1.1.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)))) (h "1xss4hqfl6dph2n7mns8a4msn96n1a01zdvfsrvn9vr50786mbld") (f (quote (("lspk") ("lsf") ("default" "bg3") ("bg3" "lsf" "lspk"))))))

(define-public crate-larian-formats-0.1.1 (c (n "larian-formats") (v "0.1.1") (d (list (d (n "lz4_flex") (r "^0.11.2") (d #t) (k 0)) (d (n "quick-xml") (r "^0.31.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rc-zip-sync") (r "^4.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "static_assertions_next") (r "^1.1.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)))) (h "1rxk17l2v9smr59657cwdys9vapzpxza8f3q2kq2w3m0v6ddxb5z") (f (quote (("lspk") ("lsf") ("default" "bg3") ("bg3" "lsf" "lspk"))))))

(define-public crate-larian-formats-0.1.2 (c (n "larian-formats") (v "0.1.2") (d (list (d (n "lz4_flex") (r "^0.11.3") (d #t) (k 0)) (d (n "quick-xml") (r "^0.31.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rc-zip-sync") (r "^4.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.201") (f (quote ("derive"))) (d #t) (k 0)) (d (n "static_assertions_next") (r "^1.1.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.60") (d #t) (k 0)))) (h "1vl5rfwpvqr78lqq6wjqyj971mdhkv1wblk1466bbjx5g3z5kz8f") (f (quote (("lspk") ("lsf") ("default" "bg3") ("bg3" "lsf" "lspk"))))))

(define-public crate-larian-formats-0.1.3 (c (n "larian-formats") (v "0.1.3") (d (list (d (n "lz4_flex") (r "^0.11.3") (d #t) (k 0)) (d (n "quick-xml") (r "^0.31.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rc-zip-sync") (r "^4.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.201") (f (quote ("derive"))) (d #t) (k 0)) (d (n "static_assertions_next") (r "^1.1.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.60") (d #t) (k 0)))) (h "15iqgn0m7nk17g9ibbg4q9c7sa883qq2lcpj08scxghrbc7dwni3") (f (quote (("lspk") ("lsf") ("default" "bg3") ("bg3" "lsf" "lspk"))))))

(define-public crate-larian-formats-0.1.4 (c (n "larian-formats") (v "0.1.4") (d (list (d (n "lz4_flex") (r "^0.11.3") (d #t) (k 0)) (d (n "quick-xml") (r "^0.31.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rc-zip-sync") (r "^4.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.201") (f (quote ("derive"))) (d #t) (k 0)) (d (n "static_assertions_next") (r "^1.1.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.60") (d #t) (k 0)))) (h "1ngx805hzk9gv3i3x5m92jhzvrqalfxs346pm9if79xzbw8aqkg4") (f (quote (("lspk") ("lsf") ("default" "bg3") ("bg3" "lsf" "lspk"))))))

(define-public crate-larian-formats-0.1.5 (c (n "larian-formats") (v "0.1.5") (d (list (d (n "lz4_flex") (r "^0.11.3") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "quick-xml") (r "^0.31.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rc-zip-sync") (r "^4.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.201") (f (quote ("derive"))) (d #t) (k 0)) (d (n "static_assertions_next") (r "^1.1.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.60") (d #t) (k 0)))) (h "0pbb1p3bxflhn055i6mz5mdphqi3l2w7w0mkdrqw9svqa4rrdicl")))

(define-public crate-larian-formats-0.1.6 (c (n "larian-formats") (v "0.1.6") (d (list (d (n "lz4_flex") (r "^0.11.3") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "quick-xml") (r "^0.31.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rc-zip-sync") (r "^4.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.201") (f (quote ("derive"))) (d #t) (k 0)) (d (n "static_assertions_next") (r "^1.1.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.60") (d #t) (k 0)))) (h "07szmb3myl6mfl7ivqa8l9lq5hqq401cx932xr23cm4i2aclnqpd")))

(define-public crate-larian-formats-0.1.7 (c (n "larian-formats") (v "0.1.7") (d (list (d (n "lz4_flex") (r "^0.11.3") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "quick-xml") (r "^0.31.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rc-zip-sync") (r "^4.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.201") (f (quote ("derive"))) (d #t) (k 0)) (d (n "static_assertions_next") (r "^1.1.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.60") (d #t) (k 0)))) (h "0hlgmrf3fqrlal5qc1qz959lp3kzwcl3rrrlg10vmgzrjnrd6c4m")))

