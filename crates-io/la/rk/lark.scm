(define-module (crates-io la rk lark) #:use-module (crates-io))

(define-public crate-lark-0.1.0 (c (n "lark") (v "0.1.0") (d (list (d (n "env_logger") (r "^0.6") (d #t) (k 2)) (d (n "languageserver-types") (r "^0.53.0") (d #t) (k 2)) (d (n "lark-cli") (r "^0.1.0") (d #t) (k 0)) (d (n "lark-debug-derive") (r "^0.1.0") (d #t) (k 2)) (d (n "lark-debug-with") (r "^0.1.0") (d #t) (k 2)) (d (n "lark-entity") (r "^0.1.0") (d #t) (k 2)) (d (n "lark-hir") (r "^0.1.0") (d #t) (k 2)) (d (n "lark-intern") (r "^0.1.0") (d #t) (k 2)) (d (n "lark-language-server") (r "^0.1.0") (d #t) (k 2)) (d (n "lark-parser") (r "^0.1.0") (d #t) (k 2)) (d (n "lark-query-system") (r "^0.1.0") (d #t) (k 2)) (d (n "lark-span") (r "^0.1.0") (d #t) (k 2)) (d (n "lark-string") (r "^0.1.0") (d #t) (k 2)) (d (n "lark-test") (r "^0.1.0") (d #t) (k 2)) (d (n "lark-test-generate") (r "^0.1.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "unindent") (r "^0.1.3") (d #t) (k 2)) (d (n "url") (r "^1.7") (d #t) (k 2)))) (h "0ammwc6d2h6rxdmmp3xrv0ypdxv0ik5fijvi0nzda70bppaqls9m")))

