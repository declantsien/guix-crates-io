(define-module (crates-io la lr lalrpop) #:use-module (crates-io))

(define-public crate-lalrpop-0.1.0 (c (n "lalrpop") (v "0.1.0") (d (list (d (n "diff") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.3") (d #t) (k 0)) (d (n "lalrpop-snap") (r "^0.1.0") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.1.0") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "term") (r "^0.2") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.0.2") (d #t) (k 0)))) (h "0kfl3k9nyv0wip6zvidvy5x3c1902yjkfck9306r2gzc2hbvn134")))

(define-public crate-lalrpop-0.2.0 (c (n "lalrpop") (v "0.2.0") (d (list (d (n "diff") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.3") (d #t) (k 0)) (d (n "lalrpop-intern") (r "^0.2.0") (d #t) (k 0)) (d (n "lalrpop-snap") (r "^0.2.0") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "term") (r "^0.2") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.0.2") (d #t) (k 0)))) (h "05lqzagslfw3zg9v5nvva5q0d8r4ffpcimv4h485csnwrfc7zl18")))

(define-public crate-lalrpop-0.3.0 (c (n "lalrpop") (v "0.3.0") (d (list (d (n "diff") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.3") (d #t) (k 0)) (d (n "lalrpop-intern") (r "^0.3.0") (d #t) (k 0)) (d (n "lalrpop-snap") (r "^0.3.0") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.3.0") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "term") (r "^0.2") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.0.2") (d #t) (k 0)))) (h "0dqxbg7swsxf8iy41skx6s4iq086cwb0sn1y4f9h1hqa7zig2l4r")))

(define-public crate-lalrpop-0.4.0 (c (n "lalrpop") (v "0.4.0") (d (list (d (n "diff") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.3") (d #t) (k 0)) (d (n "lalrpop-intern") (r "^0.4.0") (d #t) (k 0)) (d (n "lalrpop-snap") (r "^0.4.0") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "term") (r "^0.2") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.0.2") (d #t) (k 0)))) (h "1pg98v3hnl3hdavg6yp0r05wa31qggvhjgdv6zm58vpd5a263yp0")))

(define-public crate-lalrpop-0.4.1 (c (n "lalrpop") (v "0.4.1") (d (list (d (n "diff") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.3") (d #t) (k 0)) (d (n "lalrpop-intern") (r "^0.4.1") (d #t) (k 0)) (d (n "lalrpop-snap") (r "^0.4.1") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.4.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "term") (r "^0.2") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.0.2") (d #t) (k 0)))) (h "1nbvyx5n2mxa49ij364xss4zhnkcdfrxli5xg3prbc48dv5d9cf7")))

(define-public crate-lalrpop-0.5.0 (c (n "lalrpop") (v "0.5.0") (d (list (d (n "diff") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.3") (d #t) (k 0)) (d (n "lalrpop-intern") (r "^0.5.0") (d #t) (k 0)) (d (n "lalrpop-snap") (r "^0.5.0") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "term") (r "^0.2") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.0.2") (d #t) (k 0)))) (h "1yz422747prc5s9ch3vl5vl0iqnp5y3w2sn95mwqgx71sw5gm2rz")))

(define-public crate-lalrpop-0.6.0 (c (n "lalrpop") (v "0.6.0") (d (list (d (n "diff") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.3") (d #t) (k 0)) (d (n "lalrpop-intern") (r "^0.6.0") (d #t) (k 0)) (d (n "lalrpop-snap") (r "^0.6.0") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.6.0") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "term") (r "^0.2") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.0.2") (d #t) (k 0)))) (h "1bvcn4ihi7iw8h3wkm5n55rsdbc7xc5f0ydl9yprdkknjd9isv2j")))

(define-public crate-lalrpop-0.6.1 (c (n "lalrpop") (v "0.6.1") (d (list (d (n "diff") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.3") (d #t) (k 0)) (d (n "lalrpop-intern") (r "^0.6.1") (d #t) (k 0)) (d (n "lalrpop-snap") (r "^0.6.1") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.6.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "term") (r "^0.2") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.0.2") (d #t) (k 0)))) (h "0q36xb1zkv5x9m1vca4ddn76qgz86n8bjbsw60c1wdg3s8915zih")))

(define-public crate-lalrpop-0.7.0 (c (n "lalrpop") (v "0.7.0") (d (list (d (n "diff") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.3") (d #t) (k 0)) (d (n "lalrpop-intern") (r "^0.7.0") (d #t) (k 0)) (d (n "lalrpop-snap") (r "^0.7.0") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.7.0") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "term") (r "^0.2") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.0.2") (d #t) (k 0)))) (h "0gd83vbajzbvd902yvkj5zqpc63iy9y4sfsxafksdfb8cffhl2d8")))

(define-public crate-lalrpop-0.8.0 (c (n "lalrpop") (v "0.8.0") (d (list (d (n "diff") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.3") (d #t) (k 0)) (d (n "lalrpop-intern") (r "^0.8.0") (d #t) (k 0)) (d (n "lalrpop-snap") (r "^0.8.0") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.8.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.1.11") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 2)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "term") (r "^0.2") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.0.2") (d #t) (k 0)))) (h "172lbyyxnvw4b3dwgwb96zh0w8yx744mnxaxyy7v5vi7vs8i28cb")))

(define-public crate-lalrpop-0.9.0 (c (n "lalrpop") (v "0.9.0") (d (list (d (n "diff") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.3") (d #t) (k 0)) (d (n "lalrpop-intern") (r "^0.9.0") (d #t) (k 0)) (d (n "lalrpop-snap") (r "^0.9.0") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.9.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.1.11") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 2)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.0.2") (d #t) (k 0)))) (h "0j9jya2p55d89d67nywml4y6jf9x0iq1lcqwg3siw4lzc2fwp2fg")))

(define-public crate-lalrpop-0.10.0 (c (n "lalrpop") (v "0.10.0") (d (list (d (n "atty") (r "^0.1.2") (d #t) (k 0)) (d (n "bit-set") (r "^0.3.0") (d #t) (k 0)) (d (n "bitflags") (r "^0.4.0") (d #t) (k 0)) (d (n "diff") (r "^0.1") (d #t) (k 0)) (d (n "docopt") (r "^0.6") (d #t) (k 0)) (d (n "itertools") (r "^0.3") (d #t) (k 0)) (d (n "lalrpop-intern") (r "^0.10.0") (d #t) (k 0)) (d (n "lalrpop-snap") (r "^0.10.0") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.10.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.1.11") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 2)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "term") (r "^0.4.4") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.0.2") (d #t) (k 0)))) (h "0didlwxmyx5642ffpgfhh3j5hdkzbvmna2saqg8d1j3kyw5l2d1f")))

(define-public crate-lalrpop-0.11.0 (c (n "lalrpop") (v "0.11.0") (d (list (d (n "atty") (r "^0.1.2") (d #t) (k 0)) (d (n "bit-set") (r "^0.3.0") (d #t) (k 0)) (d (n "bitflags") (r "^0.4.0") (d #t) (k 0)) (d (n "diff") (r "^0.1") (d #t) (k 0)) (d (n "docopt") (r "^0.6") (d #t) (k 0)) (d (n "itertools") (r "^0.3") (d #t) (k 0)) (d (n "lalrpop-intern") (r "^0.11.0") (d #t) (k 0)) (d (n "lalrpop-snap") (r "^0.11.0") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.11.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.1.11") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 2)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "term") (r "^0.4.4") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.0.2") (d #t) (k 0)))) (h "10ic0hr6phbrwsgd97vckwbqzms80c3ldw3vg8w00w4swkh5n05q")))

(define-public crate-lalrpop-0.12.0 (c (n "lalrpop") (v "0.12.0") (d (list (d (n "atty") (r "^0.1.2") (d #t) (k 0)) (d (n "bit-set") (r "^0.3.0") (d #t) (k 0)) (d (n "bitflags") (r "^0.4.0") (d #t) (k 0)) (d (n "diff") (r "^0.1") (d #t) (k 0)) (d (n "docopt") (r "^0.6") (d #t) (k 0)) (d (n "itertools") (r "^0.3") (d #t) (k 0)) (d (n "lalrpop-intern") (r "^0.12.0") (d #t) (k 0)) (d (n "lalrpop-snap") (r "^0.12.0") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.12.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.1.11") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 2)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "term") (r "^0.4.4") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.0.2") (d #t) (k 0)))) (h "14aim3w7isxq2gz9p0fy59nsaja8x8ydg7x1ypg6ihlcr9siayzz")))

(define-public crate-lalrpop-0.12.1 (c (n "lalrpop") (v "0.12.1") (d (list (d (n "atty") (r "^0.1.2") (d #t) (k 0)) (d (n "bit-set") (r "^0.3.0") (d #t) (k 0)) (d (n "bitflags") (r "^0.4.0") (d #t) (k 0)) (d (n "diff") (r "^0.1") (d #t) (k 0)) (d (n "docopt") (r "^0.6") (d #t) (k 0)) (d (n "itertools") (r "^0.3") (d #t) (k 0)) (d (n "lalrpop-intern") (r "^0.12.1") (d #t) (k 0)) (d (n "lalrpop-snap") (r "^0.12.1") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.12.1") (d #t) (k 0)) (d (n "petgraph") (r "^0.1.11") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 2)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "term") (r "^0.4.4") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.0.2") (d #t) (k 0)))) (h "04lyd48w0j02pqknv99kgdp370isbpf78i900gmz6f44ai00y0k9")))

(define-public crate-lalrpop-0.12.2 (c (n "lalrpop") (v "0.12.2") (d (list (d (n "atty") (r "^0.1.2") (d #t) (k 0)) (d (n "bit-set") (r "^0.3.0") (d #t) (k 0)) (d (n "bitflags") (r "^0.4.0") (d #t) (k 0)) (d (n "diff") (r "^0.1") (d #t) (k 0)) (d (n "docopt") (r "^0.6") (d #t) (k 0)) (d (n "itertools") (r "^0.3") (d #t) (k 0)) (d (n "lalrpop-intern") (r "^0.12.2") (d #t) (k 0)) (d (n "lalrpop-snap") (r "^0.12.2") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.12.2") (d #t) (k 0)) (d (n "petgraph") (r "^0.1.11") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 2)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "term") (r "^0.4.4") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.0.2") (d #t) (k 0)))) (h "0lsb9dzbrrxsc3in5wdcvpzxbpv9g48jl11h2yqsw9wdds8kvn06") (y #t)))

(define-public crate-lalrpop-0.12.3 (c (n "lalrpop") (v "0.12.3") (d (list (d (n "atty") (r "^0.1.2") (d #t) (k 0)) (d (n "bit-set") (r "^0.3.0") (d #t) (k 0)) (d (n "bitflags") (r "^0.4.0") (d #t) (k 0)) (d (n "diff") (r "^0.1") (d #t) (k 0)) (d (n "docopt") (r "^0.6") (d #t) (k 0)) (d (n "itertools") (r "^0.3") (d #t) (k 0)) (d (n "lalrpop-intern") (r "^0.12.3") (d #t) (k 0)) (d (n "lalrpop-snap") (r "^0.12.3") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.12.3") (d #t) (k 0)) (d (n "petgraph") (r "^0.1.11") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 2)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "term") (r "^0.4.4") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.0.2") (d #t) (k 0)))) (h "1fvgbmdypcpvj2scsgsdh1x1y45ap48pzib74j476wh6pxg8gxyz") (y #t)))

(define-public crate-lalrpop-0.12.4 (c (n "lalrpop") (v "0.12.4") (d (list (d (n "atty") (r "^0.1.2") (d #t) (k 0)) (d (n "bit-set") (r "^0.3.0") (d #t) (k 0)) (d (n "bitflags") (r "^0.4.0") (d #t) (k 0)) (d (n "diff") (r "^0.1") (d #t) (k 0)) (d (n "docopt") (r "^0.6") (d #t) (k 0)) (d (n "itertools") (r "^0.3") (d #t) (k 0)) (d (n "lalrpop-intern") (r "^0.12.4") (d #t) (k 0)) (d (n "lalrpop-snap") (r "^0.12.4") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.12.4") (d #t) (k 0)) (d (n "petgraph") (r "^0.1.11") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 2)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "term") (r "^0.4.4") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.0.2") (d #t) (k 0)))) (h "0yw5dx6x9ghhn84ywrm7p393dhr7wwlivdvw71rwlmi0dnr75bwm")))

(define-public crate-lalrpop-0.12.5 (c (n "lalrpop") (v "0.12.5") (d (list (d (n "atty") (r "^0.1.2") (d #t) (k 0)) (d (n "bit-set") (r "^0.3.0") (d #t) (k 0)) (d (n "bitflags") (r "^0.4.0") (d #t) (k 0)) (d (n "diff") (r "^0.1") (d #t) (k 0)) (d (n "docopt") (r "^0.6") (d #t) (k 0)) (d (n "itertools") (r "^0.3") (d #t) (k 0)) (d (n "lalrpop-intern") (r "^0.12.5") (d #t) (k 0)) (d (n "lalrpop-snap") (r "^0.12.5") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.12.5") (d #t) (k 0)) (d (n "petgraph") (r "^0.1.11") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 2)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "term") (r "^0.4.4") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.0.2") (d #t) (k 0)))) (h "1p0zcbawn0zkvckhldzv6f0lfc7za844vk7bhqy7bwaqdggmq2x5")))

(define-public crate-lalrpop-0.13.0 (c (n "lalrpop") (v "0.13.0") (d (list (d (n "ascii-canvas") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.1.2") (d #t) (k 0)) (d (n "bit-set") (r "^0.4.0") (d #t) (k 0)) (d (n "diff") (r "^0.1.9") (d #t) (k 0)) (d (n "docopt") (r "^0.7") (d #t) (k 0)) (d (n "ena") (r "^0.5") (d #t) (k 0)) (d (n "itertools") (r "^0.5.9") (d #t) (k 0)) (d (n "lalrpop-intern") (r "^0.13.0") (d #t) (k 0)) (d (n "lalrpop-snap") (r "^0.13.0") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.13.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.3.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 2)) (d (n "regex") (r "^0.2.1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.4.0") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "term") (r "^0.4.5") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.0.4") (d #t) (k 0)))) (h "0x0g38v3b149ahyxfirhw6fb8sad3jmmz8hkszjgr13scdwayc79")))

(define-public crate-lalrpop-0.13.1 (c (n "lalrpop") (v "0.13.1") (d (list (d (n "ascii-canvas") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.1.2") (d #t) (k 0)) (d (n "bit-set") (r "^0.4.0") (d #t) (k 0)) (d (n "diff") (r "^0.1.9") (d #t) (k 0)) (d (n "docopt") (r "^0.7") (d #t) (k 0)) (d (n "ena") (r "^0.5") (d #t) (k 0)) (d (n "itertools") (r "^0.5.9") (d #t) (k 0)) (d (n "lalrpop-intern") (r "^0.13.1") (d #t) (k 0)) (d (n "lalrpop-snap") (r "^0.13.1") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.13.1") (d #t) (k 0)) (d (n "petgraph") (r "^0.4.4") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 2)) (d (n "regex") (r "^0.2.1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.4.0") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "term") (r "^0.4.5") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.0.4") (d #t) (k 0)))) (h "180isfgskka8hdq5582r8ypny3rx1bnfpxk2gz5yxvfmj1f5mglf")))

(define-public crate-lalrpop-0.14.0 (c (n "lalrpop") (v "0.14.0") (d (list (d (n "ascii-canvas") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.1.2") (d #t) (k 0)) (d (n "bit-set") (r "^0.4.0") (d #t) (k 0)) (d (n "diff") (r "^0.1.9") (d #t) (k 0)) (d (n "docopt") (r "^0.7") (d #t) (k 0)) (d (n "ena") (r "^0.5") (d #t) (k 0)) (d (n "itertools") (r "^0.5.9") (d #t) (k 0)) (d (n "lalrpop-intern") (r "^0.14.0") (d #t) (k 0)) (d (n "lalrpop-snap") (r "^0.14.0") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.14.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.4.4") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 2)) (d (n "regex") (r "^0.2.1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.4.0") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "term") (r "^0.4.5") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.0.4") (d #t) (k 0)))) (h "000dyjgr8jy6b77ssvc6fxpp7dcj1iy2wzyx4r7ng65ps627xznn")))

(define-public crate-lalrpop-0.15.0 (c (n "lalrpop") (v "0.15.0") (d (list (d (n "ascii-canvas") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.1.2") (d #t) (k 0)) (d (n "bit-set") (r "^0.4.0") (d #t) (k 0)) (d (n "diff") (r "^0.1.9") (d #t) (k 0)) (d (n "docopt") (r "^0.7") (d #t) (k 0)) (d (n "ena") (r "^0.5") (d #t) (k 0)) (d (n "itertools") (r "^0.5.9") (d #t) (k 0)) (d (n "lalrpop-snap") (r "^0.15.0") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.15.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.4.4") (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 2)) (d (n "regex") (r "^0.2.1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.4.0") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "string_cache") (r "^0.7.1") (d #t) (k 0)) (d (n "term") (r "^0.4.5") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.1") (d #t) (k 0)))) (h "1ff7m07lkkf76dz3aa48sky2ji1dh3kqk1mxbhkaa8dc70l9vkrp")))

(define-public crate-lalrpop-0.15.1 (c (n "lalrpop") (v "0.15.1") (d (list (d (n "ascii-canvas") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.1.2") (d #t) (k 0)) (d (n "bit-set") (r "^0.4.0") (d #t) (k 0)) (d (n "diff") (r "^0.1.9") (d #t) (k 0)) (d (n "docopt") (r "^0.8") (d #t) (k 0)) (d (n "ena") (r "^0.5") (d #t) (k 0)) (d (n "itertools") (r "^0.7") (d #t) (k 0)) (d (n "lalrpop-snap") (r "^0.15.1") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.15.1") (d #t) (k 0)) (d (n "petgraph") (r "^0.4.4") (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 2)) (d (n "regex") (r "^0.2.1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "string_cache") (r "^0.7.1") (d #t) (k 0)) (d (n "term") (r "^0.4.5") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.1") (d #t) (k 0)))) (h "1al01x3vq98nnrqqn8xl697mflxhn8964mcs95x8kfygqd1mj0w8")))

(define-public crate-lalrpop-0.15.2 (c (n "lalrpop") (v "0.15.2") (d (list (d (n "ascii-canvas") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.1.2") (d #t) (k 0)) (d (n "bit-set") (r "^0.4.0") (d #t) (k 0)) (d (n "diff") (r "^0.1.9") (d #t) (k 0)) (d (n "digest") (r "^0.7") (f (quote ("std"))) (d #t) (k 0)) (d (n "docopt") (r "^0.8") (d #t) (k 0)) (d (n "ena") (r "^0.5") (d #t) (k 0)) (d (n "itertools") (r "^0.7") (d #t) (k 0)) (d (n "lalrpop-snap") (r "^0.15.2") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.15.2") (d #t) (k 0)) (d (n "petgraph") (r "^0.4.4") (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 2)) (d (n "regex") (r "^0.2.1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.7.0") (d #t) (k 0)) (d (n "string_cache") (r "^0.7.1") (d #t) (k 0)) (d (n "term") (r "^0.4.5") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.1") (d #t) (k 0)))) (h "1kynb9i50fnzf2n815msam4ycqa8bb6vvx2ckp4szdqrv1xiyids")))

(define-public crate-lalrpop-0.16.0 (c (n "lalrpop") (v "0.16.0") (d (list (d (n "ascii-canvas") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "diff") (r "^0.1.9") (d #t) (k 0)) (d (n "digest") (r "^0.7") (f (quote ("std"))) (d #t) (k 0)) (d (n "docopt") (r "^0.8") (d #t) (k 0)) (d (n "ena") (r "^0.9") (d #t) (k 0)) (d (n "itertools") (r "^0.7") (d #t) (k 0)) (d (n "lalrpop-snap") (r "^0.16.0") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.16.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.4.13") (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.7.0") (d #t) (k 0)) (d (n "string_cache") (r "^0.7.1") (d #t) (k 0)) (d (n "term") (r "^0.4.5") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.1") (d #t) (k 0)))) (h "06xd45nxphsnmk1s5jw1lazymya4sljcdp6m9w3q09k4snpi8w4z")))

(define-public crate-lalrpop-0.16.1 (c (n "lalrpop") (v "0.16.1") (d (list (d (n "ascii-canvas") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "diff") (r "^0.1.9") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "ena") (r "^0.10") (d #t) (k 0)) (d (n "itertools") (r "^0.7") (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.16.1") (d #t) (k 0)) (d (n "petgraph") (r "^0.4.13") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "string_cache") (r "^0.7.1") (d #t) (k 0)) (d (n "term") (r "^0.4.5") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.1") (d #t) (k 0)))) (h "0wl7riv29y9yrqjz1j7wcpy8q0x9izk8xrz4q99kipk0y24668ic") (f (quote (("test"))))))

(define-public crate-lalrpop-0.16.2 (c (n "lalrpop") (v "0.16.2") (d (list (d (n "ascii-canvas") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "diff") (r "^0.1.9") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "ena") (r "^0.10") (d #t) (k 0)) (d (n "itertools") (r "^0.7") (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.16.2") (d #t) (k 0)) (d (n "petgraph") (r "^0.4.13") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "string_cache") (r "^0.7.1") (d #t) (k 0)) (d (n "term") (r "^0.4.5") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.1") (d #t) (k 0)))) (h "0pnma0qf9ydi1m3gbhj5x32p78wf8p93nl7xr72z1pwpw54q1202") (f (quote (("test"))))))

(define-public crate-lalrpop-0.16.3 (c (n "lalrpop") (v "0.16.3") (d (list (d (n "ascii-canvas") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "diff") (r "^0.1.9") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "ena") (r "^0.11") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.16.3") (d #t) (k 0)) (d (n "petgraph") (r "^0.4.13") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "string_cache") (r "^0.7.1") (d #t) (k 0)) (d (n "term") (r "^0.4.5") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.1") (d #t) (k 0)))) (h "0wi5q090fyn1x83i95rw0kxx13nq7hgyzd35csjbq8hbwjz80bjf") (f (quote (("test"))))))

(define-public crate-lalrpop-0.17.0 (c (n "lalrpop") (v "0.17.0") (d (list (d (n "ascii-canvas") (r "^2.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "diff") (r "^0.1.9") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "ena") (r "^0.13") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.17.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.4.13") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "string_cache") (r "^0.7.1") (d #t) (k 0)) (d (n "term") (r "^0.5") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.1") (d #t) (k 0)))) (h "06ghb9yf5krb35i8nxy6vdy6mrvxsrhry5p5c7likn07xca2szsv") (f (quote (("test"))))))

(define-public crate-lalrpop-0.17.1 (c (n "lalrpop") (v "0.17.1") (d (list (d (n "ascii-canvas") (r "^2.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "diff") (r "^0.1.9") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "ena") (r "^0.13") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.17.1") (d #t) (k 0)) (d (n "petgraph") (r "^0.4.13") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "string_cache") (r "^0.7.1") (d #t) (k 0)) (d (n "term") (r "^0.5") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.1") (d #t) (k 0)))) (h "1vws8rbvdv81girpbv509p8j7imn6skrkimwl5x4axivkbbi3ld3") (f (quote (("test"))))))

(define-public crate-lalrpop-0.17.2 (c (n "lalrpop") (v "0.17.2") (d (list (d (n "ascii-canvas") (r "^2.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "diff") (r "^0.1.9") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "ena") (r "^0.13") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.17.2") (d #t) (k 0)) (d (n "petgraph") (r "^0.4.13") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "string_cache") (r "^0.7.1") (d #t) (k 0)) (d (n "term") (r "^0.5") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.1") (d #t) (k 0)))) (h "1nv7ma8cgw3r1fcma7gy06fwwlpl4fkz91mxv5kjhiaxwyc3dp34") (f (quote (("test"))))))

(define-public crate-lalrpop-0.18.0 (c (n "lalrpop") (v "0.18.0") (d (list (d (n "ascii-canvas") (r "^2.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "diff") (r "^0.1.9") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "ena") (r "^0.13") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.18.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.4.13") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "string_cache") (r "^0.7.1") (d #t) (k 0)) (d (n "term") (r "^0.5") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)))) (h "1bwxpfxc5w8qss06s3ngrrb0nz8b7na4bwh09spr5h5vi9595d6k") (f (quote (("test") ("lexer" "lalrpop-util/lexer"))))))

(define-public crate-lalrpop-0.18.1 (c (n "lalrpop") (v "0.18.1") (d (list (d (n "ascii-canvas") (r "^2.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "diff") (r "^0.1.9") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "ena") (r "^0.13") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.18.1") (d #t) (k 0)) (d (n "petgraph") (r "^0.4.13") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "string_cache") (r "^0.7.1") (d #t) (k 0)) (d (n "term") (r "^0.5") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)))) (h "1bvlgirslyhpd8cyr8d9q9mhq5jp71m22d1z156p7sd6hfc02pny") (f (quote (("test") ("lexer" "lalrpop-util/lexer"))))))

(define-public crate-lalrpop-0.19.0 (c (n "lalrpop") (v "0.19.0") (d (list (d (n "ascii-canvas") (r "^2.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "diff") (r "^0.1.12") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "ena") (r "^0.14") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.19.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.5") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 0)) (d (n "string_cache") (r "^0.8") (d #t) (k 0)) (d (n "term") (r "^0.5") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)))) (h "1lk8ppyvazhhvy31jiawgs7i4gs3pc4i5qjb828kfcc3s9rmdxfn") (f (quote (("test") ("lexer" "lalrpop-util/lexer"))))))

(define-public crate-lalrpop-0.19.1 (c (n "lalrpop") (v "0.19.1") (d (list (d (n "ascii-canvas") (r "^2.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "diff") (r "^0.1.12") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "ena") (r "^0.14") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.19.1") (d #t) (k 0)) (d (n "petgraph") (r "^0.5") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 0)) (d (n "string_cache") (r "^0.8") (d #t) (k 0)) (d (n "term") (r "^0.5") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)))) (h "1j52sybjhn82ydgsmnw7nkywjyb7pvg50mvyb48m7vdq3wcmdyv0") (f (quote (("test") ("lexer" "lalrpop-util/lexer"))))))

(define-public crate-lalrpop-0.19.2 (c (n "lalrpop") (v "0.19.2") (d (list (d (n "ascii-canvas") (r "^2.0") (k 0)) (d (n "atty") (r "^0.2") (k 0)) (d (n "bit-set") (r "^0.5") (k 0)) (d (n "diff") (r "^0.1.12") (k 0)) (d (n "ena") (r "^0.14") (k 0)) (d (n "itertools") (r "^0.9") (f (quote ("use_std"))) (k 0)) (d (n "lalrpop-util") (r "^0.19.2") (d #t) (k 0)) (d (n "petgraph") (r "^0.5") (k 0)) (d (n "pico-args") (r "^0.3.4") (o #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "regex") (r "^1") (f (quote ("std"))) (k 0)) (d (n "regex-syntax") (r "^0.6") (k 0)) (d (n "string_cache") (r "^0.8") (k 0)) (d (n "term") (r "^0.5") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("sha3"))) (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (k 0)))) (h "0sblkks2kl962j4xrafsximylghc244q9nkarqqhk25h20c8mk7g") (f (quote (("test") ("lexer" "lalrpop-util/lexer") ("default" "lexer" "pico-args"))))))

(define-public crate-lalrpop-0.19.3 (c (n "lalrpop") (v "0.19.3") (d (list (d (n "ascii-canvas") (r "^2.0") (k 0)) (d (n "atty") (r "^0.2") (k 0)) (d (n "bit-set") (r "^0.5") (k 0)) (d (n "diff") (r "^0.1.12") (k 0)) (d (n "ena") (r "^0.14") (k 0)) (d (n "itertools") (r "^0.9") (f (quote ("use_std"))) (k 0)) (d (n "lalrpop-util") (r "^0.19.3") (d #t) (k 0)) (d (n "petgraph") (r "^0.5") (k 0)) (d (n "pico-args") (r "^0.3.4") (o #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "regex") (r "^1") (f (quote ("std"))) (k 0)) (d (n "regex-syntax") (r "^0.6") (k 0)) (d (n "string_cache") (r "^0.8") (k 0)) (d (n "term") (r "^0.5") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("sha3"))) (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (k 0)))) (h "11s5ccazg95yn4p3gflhpibgkypai202ki6z6lhmrjd9ir6y0r2w") (f (quote (("test") ("lexer" "lalrpop-util/lexer") ("default" "lexer" "pico-args"))))))

(define-public crate-lalrpop-0.19.4 (c (n "lalrpop") (v "0.19.4") (d (list (d (n "ascii-canvas") (r "^2.0") (k 0)) (d (n "atty") (r "^0.2") (k 0)) (d (n "bit-set") (r "^0.5") (k 0)) (d (n "diff") (r "^0.1.12") (k 0)) (d (n "ena") (r "^0.14") (k 0)) (d (n "itertools") (r "^0.9") (f (quote ("use_std"))) (k 0)) (d (n "lalrpop-util") (r "^0.19.4") (d #t) (k 0)) (d (n "petgraph") (r "^0.5") (k 0)) (d (n "pico-args") (r "^0.3.4") (o #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "regex") (r "^1") (f (quote ("std"))) (k 0)) (d (n "regex-syntax") (r "^0.6") (k 0)) (d (n "string_cache") (r "^0.8") (k 0)) (d (n "term") (r "^0.5") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("sha3"))) (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (k 0)))) (h "08piqsvmwwljrybzwxndmpcba99ksy0dvx6gkkd9jckv4rdxfwaa") (f (quote (("test") ("lexer" "lalrpop-util/lexer") ("default" "lexer" "pico-args"))))))

(define-public crate-lalrpop-0.19.5 (c (n "lalrpop") (v "0.19.5") (d (list (d (n "ascii-canvas") (r "^2.0") (k 0)) (d (n "atty") (r "^0.2") (k 0)) (d (n "bit-set") (r "^0.5.2") (k 0)) (d (n "diff") (r "^0.1.12") (k 0)) (d (n "ena") (r "^0.14") (k 0)) (d (n "itertools") (r "^0.10") (f (quote ("use_std"))) (k 0)) (d (n "lalrpop-util") (r "^0.19.5") (d #t) (k 0)) (d (n "petgraph") (r "^0.5") (k 0)) (d (n "pico-args") (r "^0.4") (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1") (f (quote ("std"))) (k 0)) (d (n "regex-syntax") (r "^0.6") (k 0)) (d (n "string_cache") (r "^0.8") (k 0)) (d (n "term") (r "^0.5") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("sha3"))) (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (k 0)))) (h "0pqry7ffn6hpk2gi1jf4ffhnahjdhiqdvpqpn4j3a75rf662m5j6") (f (quote (("test") ("lexer" "lalrpop-util/lexer") ("default" "lexer" "pico-args"))))))

(define-public crate-lalrpop-0.19.6 (c (n "lalrpop") (v "0.19.6") (d (list (d (n "ascii-canvas") (r "^3.0") (k 0)) (d (n "atty") (r "^0.2") (k 0)) (d (n "bit-set") (r "^0.5.2") (k 0)) (d (n "diff") (r "^0.1.12") (k 0)) (d (n "ena") (r "^0.14") (k 0)) (d (n "itertools") (r "^0.10") (f (quote ("use_std"))) (k 0)) (d (n "lalrpop-util") (r "^0.19.6") (d #t) (k 0)) (d (n "petgraph") (r "^0.5") (k 0)) (d (n "pico-args") (r "^0.4") (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1") (f (quote ("std"))) (k 0)) (d (n "regex-syntax") (r "^0.6") (k 0)) (d (n "string_cache") (r "^0.8") (k 0)) (d (n "term") (r "^0.7") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("sha3"))) (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (k 0)))) (h "1249rwimx8mjza4rbxsnf6k87d36h82w0frw53qmpbr9qpqp8ldi") (f (quote (("test") ("lexer" "lalrpop-util/lexer") ("default" "lexer" "pico-args"))))))

(define-public crate-lalrpop-0.19.7 (c (n "lalrpop") (v "0.19.7") (d (list (d (n "ascii-canvas") (r "^3.0") (k 0)) (d (n "atty") (r "^0.2") (k 0)) (d (n "bit-set") (r "^0.5.2") (k 0)) (d (n "diff") (r "^0.1.12") (k 0)) (d (n "ena") (r "^0.14") (k 0)) (d (n "itertools") (r "^0.10") (f (quote ("use_std"))) (k 0)) (d (n "lalrpop-util") (r "^0.19.7") (d #t) (k 0)) (d (n "petgraph") (r "^0.5") (k 0)) (d (n "pico-args") (r "^0.4") (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1") (f (quote ("std"))) (k 0)) (d (n "regex-syntax") (r "^0.6") (k 0)) (d (n "string_cache") (r "^0.8") (k 0)) (d (n "term") (r "^0.7") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("sha3"))) (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (k 0)))) (h "1r6wqj5yrqlrqz0lynk59xfm41px78f76msmikd6jsysjnh7aaw5") (f (quote (("test") ("lexer" "lalrpop-util/lexer") ("default" "lexer" "pico-args"))))))

(define-public crate-lalrpop-0.19.8 (c (n "lalrpop") (v "0.19.8") (d (list (d (n "ascii-canvas") (r "^3.0") (k 0)) (d (n "atty") (r "^0.2") (k 0)) (d (n "bit-set") (r "^0.5.2") (k 0)) (d (n "diff") (r "^0.1.12") (k 0)) (d (n "ena") (r "^0.14") (k 0)) (d (n "itertools") (r "^0.10") (f (quote ("use_std"))) (k 0)) (d (n "lalrpop-util") (r "^0.19.8") (d #t) (k 0)) (d (n "petgraph") (r "^0.6") (k 0)) (d (n "pico-args") (r "^0.4") (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1") (f (quote ("std"))) (k 0)) (d (n "regex-syntax") (r "^0.6") (k 0)) (d (n "string_cache") (r "^0.8") (k 0)) (d (n "term") (r "^0.7") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("sha3"))) (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (k 0)))) (h "08yqsp93vijrhskarrlxb16bbbyyakzhlm34z9vg460f3cs5a15k") (f (quote (("test") ("lexer" "lalrpop-util/lexer") ("default" "lexer" "pico-args"))))))

(define-public crate-lalrpop-0.19.9 (c (n "lalrpop") (v "0.19.9") (d (list (d (n "ascii-canvas") (r "^3.0") (k 0)) (d (n "bit-set") (r "^0.5.2") (k 0)) (d (n "diff") (r "^0.1.12") (k 0)) (d (n "ena") (r "^0.14") (k 0)) (d (n "is-terminal") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (f (quote ("use_std"))) (k 0)) (d (n "lalrpop-util") (r "^0.19.9") (d #t) (k 0)) (d (n "petgraph") (r "^0.6") (k 0)) (d (n "pico-args") (r "^0.4") (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1") (f (quote ("std"))) (k 0)) (d (n "regex-syntax") (r "^0.6") (k 0)) (d (n "string_cache") (r "^0.8") (k 0)) (d (n "term") (r "^0.7") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("sha3"))) (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (k 0)))) (h "11qahsfrrfgz4av8yypzqfcszwyw0bm34ryahwy5rsy203n16hzk") (f (quote (("test") ("lexer" "lalrpop-util/lexer") ("default" "lexer" "pico-args"))))))

(define-public crate-lalrpop-0.19.10 (c (n "lalrpop") (v "0.19.10") (d (list (d (n "ascii-canvas") (r "^3.0") (k 0)) (d (n "bit-set") (r "^0.5.2") (k 0)) (d (n "diff") (r "^0.1.12") (k 0)) (d (n "ena") (r "^0.14") (k 0)) (d (n "is-terminal") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (f (quote ("use_std"))) (k 0)) (d (n "lalrpop-util") (r "^0.19.10") (d #t) (k 0)) (d (n "petgraph") (r "^0.6") (k 0)) (d (n "pico-args") (r "^0.5") (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1") (f (quote ("std"))) (k 0)) (d (n "regex-syntax") (r "^0.6") (f (quote ("unicode"))) (k 0)) (d (n "string_cache") (r "^0.8") (k 0)) (d (n "term") (r "^0.7") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("sha3"))) (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (k 0)))) (h "1g2czn8fkkzgizgp6dwv4244iw9m84hdr962xqv6vg7mw7nagb86") (f (quote (("test") ("lexer" "lalrpop-util/lexer") ("default" "lexer" "pico-args")))) (y #t)))

(define-public crate-lalrpop-0.19.11 (c (n "lalrpop") (v "0.19.11") (d (list (d (n "ascii-canvas") (r "^3.0") (k 0)) (d (n "bit-set") (r "^0.5.2") (k 0)) (d (n "diff") (r "^0.1.12") (k 0)) (d (n "ena") (r "^0.14") (k 0)) (d (n "is-terminal") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (f (quote ("use_std"))) (k 0)) (d (n "lalrpop-util") (r "^0.19.11") (d #t) (k 0)) (d (n "petgraph") (r "^0.6") (k 0)) (d (n "pico-args") (r "^0.4") (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1") (f (quote ("std"))) (k 0)) (d (n "regex") (r "^1") (f (quote ("std" "unicode-case" "unicode-perl"))) (k 2)) (d (n "regex-syntax") (r "^0.6") (k 0)) (d (n "regex-syntax") (r "^0.6") (f (quote ("unicode-case" "unicode-perl"))) (k 2)) (d (n "string_cache") (r "^0.8") (k 0)) (d (n "term") (r "^0.7") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("sha3"))) (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (k 0)))) (h "1l4i99ks73a58qqz0xr7s9kzp0226zgnz1wzsf2h0vbs6rdnbzbi") (f (quote (("test") ("lexer" "lalrpop-util/lexer") ("default" "lexer"))))))

(define-public crate-lalrpop-0.19.12 (c (n "lalrpop") (v "0.19.12") (d (list (d (n "ascii-canvas") (r "^3.0") (k 0)) (d (n "bit-set") (r "^0.5.2") (k 0)) (d (n "diff") (r "^0.1.12") (k 0)) (d (n "ena") (r "^0.14") (k 0)) (d (n "is-terminal") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (f (quote ("use_std"))) (k 0)) (d (n "lalrpop-util") (r "^0.19.12") (d #t) (k 0)) (d (n "petgraph") (r "^0.6") (k 0)) (d (n "pico-args") (r "^0.4") (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1") (f (quote ("std"))) (k 0)) (d (n "regex") (r "^1") (f (quote ("std" "unicode-case" "unicode-perl"))) (k 2)) (d (n "regex-syntax") (r "^0.6") (f (quote ("unicode"))) (k 0)) (d (n "regex-syntax") (r "^0.6") (f (quote ("unicode-case" "unicode-perl"))) (k 2)) (d (n "string_cache") (r "^0.8") (k 0)) (d (n "term") (r "^0.7") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("sha3"))) (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (k 0)))) (h "0yw3m7br8zsby1vb7d0v952hdllg6splc85ba4l9yn1746avy70a") (f (quote (("test") ("lexer" "lalrpop-util/lexer") ("default" "lexer"))))))

(define-public crate-lalrpop-0.20.0 (c (n "lalrpop") (v "0.20.0") (d (list (d (n "ascii-canvas") (r "^3.0") (k 0)) (d (n "bit-set") (r "^0.5.2") (k 0)) (d (n "diff") (r "^0.1.12") (k 0)) (d (n "ena") (r "^0.14") (k 0)) (d (n "is-terminal") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (f (quote ("use_std"))) (k 0)) (d (n "lalrpop-util") (r "^0.20.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6") (k 0)) (d (n "pico-args") (r "^0.5") (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.3") (f (quote ("std"))) (k 0)) (d (n "regex-syntax") (r "^0.7") (k 0)) (d (n "string_cache") (r "^0.8") (k 0)) (d (n "term") (r "^0.7") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("sha3"))) (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (k 0)))) (h "1f4qi64nlsxqzhk8c7j20lwzdyb967gfc9fpdmnbc4a69za82h6s") (f (quote (("unicode" "regex/unicode" "regex-syntax/unicode") ("lexer" "lalrpop-util/lexer") ("default" "lexer" "unicode" "pico-args")))) (r "1.64")))

(define-public crate-lalrpop-0.20.1 (c (n "lalrpop") (v "0.20.1") (d (list (d (n "ascii-canvas") (r "^3.0") (k 0)) (d (n "bit-set") (r "^0.5.2") (k 0)) (d (n "diff") (r "^0.1.12") (k 2)) (d (n "ena") (r "^0.14") (k 0)) (d (n "itertools") (r "^0.11") (f (quote ("use_std"))) (k 0)) (d (n "lalrpop-util") (r "^0.20.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6") (k 0)) (d (n "pico-args") (r "^0.5") (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.3") (f (quote ("std"))) (k 0)) (d (n "regex-syntax") (r "^0.7.4") (k 0)) (d (n "string_cache") (r "^0.8") (k 0)) (d (n "term") (r "^0.7") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("sha3"))) (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (k 0)))) (h "0vl4hz67b0sg1srap7gyg8cqbddyv8m0jhbq1kckinhs0lp61gl3") (f (quote (("unicode" "regex/unicode" "regex-syntax/unicode") ("lexer" "lalrpop-util/lexer") ("default" "lexer" "unicode" "pico-args")))) (y #t) (r "1.70")))

(define-public crate-lalrpop-0.20.2 (c (n "lalrpop") (v "0.20.2") (d (list (d (n "ascii-canvas") (r "^3.0") (k 0)) (d (n "bit-set") (r "^0.5.2") (k 0)) (d (n "diff") (r "^0.1.12") (k 2)) (d (n "ena") (r "^0.14") (k 0)) (d (n "itertools") (r "^0.11") (f (quote ("use_std"))) (k 0)) (d (n "lalrpop-util") (r "^0.20.0") (k 0)) (d (n "petgraph") (r "^0.6") (k 0)) (d (n "pico-args") (r "^0.5") (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.3") (f (quote ("std"))) (k 0)) (d (n "regex-syntax") (r "^0.8") (k 0)) (d (n "string_cache") (r "^0.8") (k 0)) (d (n "term") (r "^0.7") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("sha3"))) (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 0)))) (h "1jn1qg7gs9kka6sy2sbxx8wp6z8lm892ksr414b9yaansrx0gjsm") (f (quote (("unicode" "regex/unicode" "regex-syntax/unicode" "lalrpop-util/unicode") ("lexer" "lalrpop-util/lexer") ("default" "lexer" "unicode" "pico-args")))) (r "1.70")))

