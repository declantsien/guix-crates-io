(define-module (crates-io la un launchdarkly-server-sdk-evaluation) #:use-module (crates-io))

(define-public crate-launchdarkly-server-sdk-evaluation-1.0.0-beta.1 (c (n "launchdarkly-server-sdk-evaluation") (v "1.0.0-beta.1") (d (list (d (n "chrono") (r "^0.4.15") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "maplit") (r "^1.0.1") (d #t) (k 2)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "semver") (r "^0.10.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.115") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "sha1") (r "^0.6.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "spectral") (r "^0.6.0") (d #t) (k 2)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)))) (h "0sz6hxwq29lc5d2wwrl2gxh5j8k2qxs2l8bgs6djdd2wi6im2cwx")))

(define-public crate-launchdarkly-server-sdk-evaluation-1.0.0-beta.2 (c (n "launchdarkly-server-sdk-evaluation") (v "1.0.0-beta.2") (d (list (d (n "chrono") (r "^0.4.15") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "maplit") (r "^1.0.1") (d #t) (k 2)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "semver") (r "^0.10.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.115") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "sha1") (r "^0.6.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "spectral") (r "^0.6.0") (d #t) (k 2)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)))) (h "0mqj0mgl08s5d73vv5aaxslin9183c85dws434ycnbgv65yk2m1m")))

(define-public crate-launchdarkly-server-sdk-evaluation-1.0.0-beta.3 (c (n "launchdarkly-server-sdk-evaluation") (v "1.0.0-beta.3") (d (list (d (n "chrono") (r "^0.4.15") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "maplit") (r "^1.0.1") (d #t) (k 2)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "semver") (r "^0.10.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.115") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "sha1") (r "^0.6.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "spectral") (r "^0.6.0") (d #t) (k 2)) (d (n "test-case") (r "^1.2.1") (d #t) (k 2)))) (h "1f5wvnhfy34plpngzm26405xx3p1gj3b1m7swn6px8k38zz8bzwm")))

(define-public crate-launchdarkly-server-sdk-evaluation-1.0.0-beta.4 (c (n "launchdarkly-server-sdk-evaluation") (v "1.0.0-beta.4") (d (list (d (n "base16ct") (r "^0.1.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "maplit") (r "^1.0.1") (d #t) (k 2)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "semver") (r "^0.10.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.115") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "sha1") (r "^0.10.1") (f (quote ("std"))) (d #t) (k 0)) (d (n "spectral") (r "^0.6.0") (d #t) (k 2)) (d (n "test-case") (r "^2.0.0") (d #t) (k 2)))) (h "18hwvscz440gi3xb5ihc16g2648d8rc6m5a0jks7h7yggbv5i011")))

(define-public crate-launchdarkly-server-sdk-evaluation-1.0.0-beta.5 (c (n "launchdarkly-server-sdk-evaluation") (v "1.0.0-beta.5") (d (list (d (n "base16ct") (r "^0.1.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "maplit") (r "^1.0.1") (d #t) (k 2)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "semver") (r "^0.10.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.115") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "sha1") (r "^0.10.1") (f (quote ("std"))) (d #t) (k 0)) (d (n "spectral") (r "^0.6.0") (d #t) (k 2)) (d (n "test-case") (r "^2.0.0") (d #t) (k 2)))) (h "1l6fmqcswga676c4c379wy42w7ay1g2ngslm0jfivxi9g595adf9")))

(define-public crate-launchdarkly-server-sdk-evaluation-1.0.0 (c (n "launchdarkly-server-sdk-evaluation") (v "1.0.0") (d (list (d (n "assert-json-diff") (r "^2.0.1") (d #t) (k 2)) (d (n "base16ct") (r "^0.1.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("std"))) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "maplit") (r "^1.0.1") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "semver") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.115") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "serde_with") (r "^2.1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10.1") (f (quote ("std"))) (d #t) (k 0)) (d (n "spectral") (r "^0.6.0") (d #t) (k 2)) (d (n "test-case") (r "^2.0.0") (d #t) (k 2)) (d (n "urlencoding") (r "^2.1.0") (d #t) (k 0)))) (h "0wr1cm0nrvzf6yfm55p4k06gv5navk12473dab55zib9rqqxs9sw") (f (quote (("secondary_key_bucketing")))) (r "1.60.0")))

(define-public crate-launchdarkly-server-sdk-evaluation-1.1.0 (c (n "launchdarkly-server-sdk-evaluation") (v "1.1.0") (d (list (d (n "assert-json-diff") (r "^2.0.1") (d #t) (k 2)) (d (n "base16ct") (r "^0.1.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("std"))) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "maplit") (r "^1.0.1") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "semver") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.115") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "serde_with") (r "^2.1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10.1") (f (quote ("std"))) (d #t) (k 0)) (d (n "spectral") (r "^0.6.0") (d #t) (k 2)) (d (n "test-case") (r "^2.0.0") (d #t) (k 2)))) (h "1c3cb4qv2lqx6j1pzddc8v9q84q1n9iwafy6lwanycig0z2hg5md") (f (quote (("secondary_key_bucketing")))) (r "1.64.0")))

(define-public crate-launchdarkly-server-sdk-evaluation-1.1.1 (c (n "launchdarkly-server-sdk-evaluation") (v "1.1.1") (d (list (d (n "assert-json-diff") (r "^2.0.1") (d #t) (k 2)) (d (n "base16ct") (r "^0.1.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("std"))) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "maplit") (r "^1.0.1") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "semver") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.115") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "serde_with") (r "^2.1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10.1") (f (quote ("std"))) (d #t) (k 0)) (d (n "spectral") (r "^0.6.0") (d #t) (k 2)) (d (n "test-case") (r "^2.0.0") (d #t) (k 2)))) (h "1g38y58r93j130d3kj71gvkiwzcai28zcl5kaw400m28sgjfq93n") (f (quote (("secondary_key_bucketing")))) (r "1.64.0")))

(define-public crate-launchdarkly-server-sdk-evaluation-1.2.0 (c (n "launchdarkly-server-sdk-evaluation") (v "1.2.0") (d (list (d (n "assert-json-diff") (r "^2.0.1") (d #t) (k 2)) (d (n "base16ct") (r "^0.1.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("std"))) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "maplit") (r "^1.0.1") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "semver") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.115") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "serde_with") (r "^2.1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10.1") (f (quote ("std"))) (d #t) (k 0)) (d (n "spectral") (r "^0.6.0") (d #t) (k 2)) (d (n "test-case") (r "^2.0.0") (d #t) (k 2)))) (h "1zdpbfq6gcapx8ii8wnbk7n9b4405nirgw9laz1dwynnfwjgiwlv") (f (quote (("secondary_key_bucketing")))) (r "1.64.0")))

