(define-module (crates-io la mi laminar) #:use-module (crates-io))

(define-public crate-laminar-0.0.0 (c (n "laminar") (v "0.0.0") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "04zfhn64yqq4b8445jmb2i962bmv6ydgsk1l7ja9hbf1pmr46j59")))

(define-public crate-laminar-0.1.0 (c (n "laminar") (v "0.1.0") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.2.6") (d #t) (k 0)) (d (n "clap") (r "^2.32") (f (quote ("yaml"))) (o #t) (d #t) (k 0)) (d (n "crc") (r "^1.8") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.5.13") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "0pq1809g62dc31ix3zdw11y48ngifgydqrvb7wwgj9d48vvdcm1w") (f (quote (("tester" "env_logger" "clap"))))))

(define-public crate-laminar-0.2.0 (c (n "laminar") (v "0.2.0") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "clap") (r "^2.32") (f (quote ("yaml"))) (o #t) (d #t) (k 0)) (d (n "crc") (r "^1.8") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)))) (h "0zpnga7sddfihq4nbbwl0r4almapp4zw51s7f4sbqp2b4rm2k4nw") (f (quote (("tester" "env_logger" "clap"))))))

(define-public crate-laminar-0.2.1 (c (n "laminar") (v "0.2.1") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "clap") (r "^2.32") (f (quote ("yaml"))) (o #t) (d #t) (k 0)) (d (n "crc") (r "^1.8") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)))) (h "0s9ag9d1ynpqnk5mlirgjxcab5zincn6g466hi80p7nbs8ccjgzr") (f (quote (("tester" "env_logger" "clap")))) (y #t)))

(define-public crate-laminar-0.2.2 (c (n "laminar") (v "0.2.2") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "clap") (r "^2.32") (f (quote ("yaml"))) (o #t) (d #t) (k 0)) (d (n "crc") (r "^1.8") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)))) (h "08lv6fn59m4j2gwi3fi3aildi3kagm4paj66hfzq8hmnkcvmig2g") (f (quote (("tester" "env_logger" "clap"))))))

(define-public crate-laminar-0.2.3 (c (n "laminar") (v "0.2.3") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "clap") (r "^2.32") (f (quote ("yaml"))) (o #t) (d #t) (k 0)) (d (n "crc") (r "^1.8") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)))) (h "1wgy3idbijwf2cx7xjhzwznqdczhs144d1bl02r9896zi4y1ls7h") (f (quote (("tester" "env_logger" "clap"))))))

(define-public crate-laminar-0.3.0 (c (n "laminar") (v "0.3.0") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "clap") (r "^2.32") (f (quote ("yaml"))) (o #t) (d #t) (k 0)) (d (n "crc") (r "^1.8") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "rand_pcg") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)))) (h "1k51nnxx4jbka7m3asn55fyar36iiq3fz61nx959315bz019prly") (f (quote (("tester" "env_logger" "clap"))))))

(define-public crate-laminar-0.3.1 (c (n "laminar") (v "0.3.1") (d (list (d (n "bincode") (r "^1.1.4") (d #t) (k 2)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (o #t) (d #t) (k 0)) (d (n "crc") (r "^1.8") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_pcg") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)))) (h "12r6vlhcgzkfvdsjjld51rnb75bywgsxgxy6d3wz7m399zr3vpnv") (f (quote (("tester" "env_logger" "clap"))))))

(define-public crate-laminar-0.3.2 (c (n "laminar") (v "0.3.2") (d (list (d (n "bincode") (r "^1.1.4") (d #t) (k 2)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (o #t) (d #t) (k 0)) (d (n "crc") (r "^1.8") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_pcg") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)))) (h "0la5wg2al0w46mysyly0i8c2kxd28cw625xck0j9b00s0xgzg5ny") (f (quote (("tester" "env_logger" "clap"))))))

(define-public crate-laminar-0.4.0 (c (n "laminar") (v "0.4.0") (d (list (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (o #t) (d #t) (k 0)) (d (n "crc") (r "^1.8") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_pcg") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)))) (h "0n9qy0qv4rg2z6jw1mdya8l114zy1n90yc0q6q96mp3bnafi2r80") (f (quote (("tester" "env_logger" "clap"))))))

(define-public crate-laminar-0.5.0 (c (n "laminar") (v "0.5.0") (d (list (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (o #t) (d #t) (k 0)) (d (n "crc") (r "^1.8") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_pcg") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)))) (h "0jpz0imjs1vw03y22yw8j89ydlc5jr1j7rhbwszyvv2qwmbr1mki") (f (quote (("tester" "env_logger" "clap"))))))

