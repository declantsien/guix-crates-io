(define-module (crates-io la me lamellar-impl) #:use-module (crates-io))

(define-public crate-lamellar-impl-0.2.1 (c (n "lamellar-impl") (v "0.2.1") (d (list (d (n "proc-macro-hack") (r "^0.5") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full" "extra-traits" "visit-mut"))) (d #t) (k 0)))) (h "1gc2psph3j2mmqzchxrl58jv8mk9j4bq3519jxfwi0bm7pinb8bx")))

(define-public crate-lamellar-impl-0.2.2 (c (n "lamellar-impl") (v "0.2.2") (d (list (d (n "proc-macro-hack") (r "^0.5") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full" "extra-traits" "visit-mut"))) (d #t) (k 0)))) (h "1haximvv4rr04fqj79yx13lgjwzky2s185z2mijyqmvxqmxmc2bd")))

(define-public crate-lamellar-impl-0.3.0 (c (n "lamellar-impl") (v "0.3.0") (d (list (d (n "async-trait") (r "^0.1.40") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "proc-macro-error") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro-hack") (r "^0.5") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full" "extra-traits" "visit-mut"))) (d #t) (k 0)))) (h "01gr06nr6dbbwfrxxlz3s1grka8zg3c673vw7301hnqspbs0djd2")))

(define-public crate-lamellar-impl-0.3.1 (c (n "lamellar-impl") (v "0.3.1") (d (list (d (n "async-trait") (r "^0.1.40") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "proc-macro-error") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro-hack") (r "^0.5") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full" "extra-traits" "visit-mut"))) (d #t) (k 0)))) (h "19x566s79fazygxhw8yslcrw7q2fgpar4xrsv5x38jzmcbal8pdq")))

(define-public crate-lamellar-impl-0.4.0 (c (n "lamellar-impl") (v "0.4.0") (d (list (d (n "async-trait") (r "^0.1.40") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "proc-macro-error") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full" "extra-traits" "visit-mut"))) (d #t) (k 0)))) (h "0jfxlbbfzvffm6crxdhwlqwn7ysw36npnbpdjdkwgli3hi60gasl")))

(define-public crate-lamellar-impl-0.4.1 (c (n "lamellar-impl") (v "0.4.1") (d (list (d (n "async-trait") (r "^0.1.40") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "proc-macro-error") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full" "extra-traits" "visit-mut"))) (d #t) (k 0)))) (h "1rs3rva3c668vf8643ika3520b2cq7n152178fya86nngzxp4s3v")))

(define-public crate-lamellar-impl-0.5.0-rc.1 (c (n "lamellar-impl") (v "0.5.0-rc.1") (d (list (d (n "async-trait") (r "^0.1.58") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "proc-macro-error") (r "^1.0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.47") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "quote") (r "^1.0.21") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "syn") (r "^1.0.103") (f (quote ("full" "extra-traits" "visit-mut"))) (d #t) (k 0)))) (h "0ikrz1xr3amhpnf1zfnifcwf3kcwv4d83afr547hnbmjgsk5ba09")))

(define-public crate-lamellar-impl-0.5.0 (c (n "lamellar-impl") (v "0.5.0") (d (list (d (n "async-trait") (r "^0.1.58") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "proc-macro-error") (r "^1.0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.47") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "quote") (r "^1.0.21") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "syn") (r "^1.0.103") (f (quote ("full" "extra-traits" "visit-mut"))) (d #t) (k 0)))) (h "04a7lvy0rzav54m90r5rzibmijdzc1204v12nvrmg1dsjc9i79lq")))

(define-public crate-lamellar-impl-0.6.0 (c (n "lamellar-impl") (v "0.6.0") (d (list (d (n "async-trait") (r "^0.1.58") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "proc-macro-error") (r "^1.0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.47") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "quote") (r "^1.0.21") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "syn") (r "^2.0.17") (f (quote ("full" "extra-traits" "fold" "visit-mut"))) (d #t) (k 0)))) (h "0z3k75xgl3mi1cmhji653rfkxca4f6djqmfs6a6y9fprh1yga8hx")))

(define-public crate-lamellar-impl-0.6.1 (c (n "lamellar-impl") (v "0.6.1") (d (list (d (n "async-trait") (r "^0.1.58") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "proc-macro-error") (r "^1.0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.47") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "quote") (r "^1.0.21") (d #t) (k 0)) (d (n "syn") (r "^2.0.17") (f (quote ("full" "extra-traits" "fold" "visit-mut"))) (d #t) (k 0)))) (h "0l6jiila2ykzb5xw30zbcixccy5h3rx1i5gbr2b235f8wd97yckr")))

