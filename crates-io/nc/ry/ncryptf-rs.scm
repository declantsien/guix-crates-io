(define-module (crates-io nc ry ncryptf-rs) #:use-module (crates-io))

(define-public crate-ncryptf-rs-0.1.0 (c (n "ncryptf-rs") (v "0.1.0") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dryoc") (r "^0.3.14") (d #t) (k 0)) (d (n "libsodium-sys-stable") (r "^1.19.22") (d #t) (k 0)) (d (n "sha256") (r "^1.0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1jgnxicym578rv2xzay807kcqnr1pl0s9h5whvkxx4icjsx9sl4r") (f (quote (("rocket") ("default")))) (y #t)))

(define-public crate-ncryptf-rs-0.2.0 (c (n "ncryptf-rs") (v "0.2.0") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.2.4") (d #t) (k 0)) (d (n "dryoc") (r "^0.3.14") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hkdf") (r "^0.12") (d #t) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "libsodium-sys-stable") (r "^1.19.22") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls" "brotli" "gzip" "stream" "blocking"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "sha256") (r "^1.0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "08npq6b2v1z5psj9vm8xyd63v5m54b3cjv602v9y95b5mkajn0jj") (f (quote (("rocket") ("default")))) (y #t)))

(define-public crate-ncryptf-rs-0.2.1 (c (n "ncryptf-rs") (v "0.2.1") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hkdf") (r "^0.12") (d #t) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "libsodium-sys-stable") (r "^1.19.22") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha256") (r "^1.0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1n3h1cnd0kjxvri6qi5ydw0jz83qzvnwa2fxaqgxsq2724i08vvd") (f (quote (("rocket") ("default")))) (y #t) (s 2) (e (quote (("reqwest" "dep:reqwest"))))))

(define-public crate-ncryptf-rs-0.2.3 (c (n "ncryptf-rs") (v "0.2.3") (d (list (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hkdf") (r "^0.12") (d #t) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "libsodium-sys-stable") (r "^1.19.22") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "redis") (r "^0.21.6") (f (quote ("aio" "async-std"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (d #t) (k 2)) (d (n "rocket") (r "^0.5.0-rc.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "rocket") (r "^0.5.0-rc.2") (d #t) (k 2)) (d (n "rocket_db_pools") (r "^0.1.0-rc.2") (f (quote ("deadpool_redis"))) (o #t) (d #t) (k 0)) (d (n "rocket_db_pools") (r "^0.1.0-rc.2") (f (quote ("deadpool_redis"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha256") (r "^1.0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "06pi0ydjp7z3v9q3i8iyq9gylrdrcd9fkh1fgva0kl32qs7il2mp") (f (quote (("default")))) (y #t) (s 2) (e (quote (("rocket" "dep:rocket" "dep:rocket_db_pools" "dep:redis" "dep:async-trait") ("reqwest" "dep:reqwest"))))))

(define-public crate-ncryptf-rs-0.2.4 (c (n "ncryptf-rs") (v "0.2.4") (d (list (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hkdf") (r "^0.12") (d #t) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "libsodium-sys-stable") (r "^1.19.22") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "redis") (r "^0.21.6") (f (quote ("aio" "async-std"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (d #t) (k 2)) (d (n "rocket") (r "^0.5.0-rc.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "rocket") (r "^0.5.0-rc.2") (d #t) (k 2)) (d (n "rocket_db_pools") (r "^0.1.0-rc.2") (f (quote ("deadpool_redis"))) (o #t) (d #t) (k 0)) (d (n "rocket_db_pools") (r "^0.1.0-rc.2") (f (quote ("deadpool_redis"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha256") (r "^1.0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "16iz3kfvz55jflhpqbdp79brn3xh2hfjg940i9647mz60rccn3rs") (f (quote (("default")))) (y #t) (s 2) (e (quote (("rocket" "dep:rocket" "dep:rocket_db_pools" "dep:redis" "dep:async-trait") ("reqwest" "dep:reqwest"))))))

(define-public crate-ncryptf-rs-0.2.5 (c (n "ncryptf-rs") (v "0.2.5") (d (list (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hkdf") (r "^0.12") (d #t) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "libsodium-sys-stable") (r "^1.19.22") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "redis") (r "^0.21.6") (f (quote ("aio" "async-std"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (d #t) (k 2)) (d (n "rocket") (r "^0.5.0-rc.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "rocket") (r "^0.5.0-rc.2") (d #t) (k 2)) (d (n "rocket_db_pools") (r "^0.1.0-rc.2") (f (quote ("deadpool_redis"))) (o #t) (d #t) (k 0)) (d (n "rocket_db_pools") (r "^0.1.0-rc.2") (f (quote ("deadpool_redis"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha256") (r "^1.0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "10dqdpdvjvyijanxggd8ash3qy009498yin70lb25vw81ks6qh3a") (f (quote (("default")))) (s 2) (e (quote (("rocket" "dep:rocket" "dep:rocket_db_pools" "dep:redis" "dep:async-trait") ("reqwest" "dep:reqwest"))))))

(define-public crate-ncryptf-rs-0.2.6 (c (n "ncryptf-rs") (v "0.2.6") (d (list (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hkdf") (r "^0.12") (d #t) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "libsodium-sys-stable") (r "^1.19.22") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "redis") (r "^0.21.6") (f (quote ("aio" "async-std"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (d #t) (k 2)) (d (n "rocket") (r "^0.5.0-rc.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "rocket") (r "^0.5.0-rc.2") (d #t) (k 2)) (d (n "rocket_db_pools") (r "^0.1.0-rc.2") (f (quote ("deadpool_redis"))) (o #t) (d #t) (k 0)) (d (n "rocket_db_pools") (r "^0.1.0-rc.2") (f (quote ("deadpool_redis"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha256") (r "^1.0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "07hbbbx9s48dbl0q94g5qlbakz84s5r220mck5bgr3gzxm0riafq") (f (quote (("default")))) (s 2) (e (quote (("rocket" "dep:rocket" "dep:rocket_db_pools" "dep:redis" "dep:async-trait"))))))

(define-public crate-ncryptf-rs-0.2.7 (c (n "ncryptf-rs") (v "0.2.7") (d (list (d (n "async-std") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hkdf") (r "^0.12") (d #t) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "libsodium-sys-stable") (r "^1.19.22") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "redis") (r "^0.21") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (d #t) (k 2)) (d (n "rocket") (r "^0.5.0-rc.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "rocket") (r "^0.5.0-rc.2") (d #t) (k 2)) (d (n "rocket_db_pools") (r "^0.1.0-rc.2") (f (quote ("deadpool_redis"))) (o #t) (d #t) (k 0)) (d (n "rocket_db_pools") (r "^0.1.0-rc.2") (f (quote ("deadpool_redis"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha256") (r "^1.0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1h76jw884qhryhizj5za0syhfjyxs4wp7zrj39igxbcz3dqa42jg") (f (quote (("default")))) (s 2) (e (quote (("rocket" "dep:rocket" "dep:rocket_db_pools" "dep:async-trait" "dep:async-std"))))))

(define-public crate-ncryptf-rs-0.2.8 (c (n "ncryptf-rs") (v "0.2.8") (d (list (d (n "async-std") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hkdf") (r "^0.12") (d #t) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "libsodium-sys-stable") (r "^1.19.22") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "redis") (r "^0.21") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (d #t) (k 2)) (d (n "rocket") (r "^0.5.0-rc.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "rocket") (r "^0.5.0-rc.2") (d #t) (k 2)) (d (n "rocket_db_pools") (r "^0.1.0-rc.2") (f (quote ("deadpool_redis"))) (o #t) (d #t) (k 0)) (d (n "rocket_db_pools") (r "^0.1.0-rc.2") (f (quote ("deadpool_redis"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha256") (r "^1.0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1qaas5jbwdsn37wbcrngphag7fz5y0qp78mwi1qr0zqj8780ry82") (f (quote (("default")))) (s 2) (e (quote (("rocket" "dep:rocket" "dep:rocket_db_pools" "dep:async-trait" "dep:async-std"))))))

(define-public crate-ncryptf-rs-0.2.9 (c (n "ncryptf-rs") (v "0.2.9") (d (list (d (n "async-std") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hkdf") (r "^0.12") (d #t) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "libsodium-sys-stable") (r "^1.19.22") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "redis") (r "^0.21") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (d #t) (k 2)) (d (n "rocket") (r "^0.5.0-rc.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "rocket") (r "^0.5.0-rc.2") (d #t) (k 2)) (d (n "rocket_db_pools") (r "^0.1.0-rc.2") (f (quote ("deadpool_redis"))) (o #t) (d #t) (k 0)) (d (n "rocket_db_pools") (r "^0.1.0-rc.2") (f (quote ("deadpool_redis"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha256") (r "^1.0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0awzzb3w6cjdd7j74nwi03nzv40snww7gqlj2a9llwzdlsn9pcs7") (f (quote (("default")))) (s 2) (e (quote (("rocket" "dep:rocket" "dep:rocket_db_pools" "dep:async-trait" "dep:async-std"))))))

(define-public crate-ncryptf-rs-0.3.0 (c (n "ncryptf-rs") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "async-recursion") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "=0.4.30") (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hkdf") (r "^0.12.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "libsodium-sys-stable") (r "^1.20") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "redis") (r "^0.21") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls" "brotli" "gzip" "stream"))) (o #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (k 2)) (d (n "rocket") (r "^0.5") (f (quote ("tls" "secrets" "json"))) (o #t) (d #t) (k 0)) (d (n "rocket_db_pools") (r "^0.1") (f (quote ("deadpool_redis"))) (o #t) (d #t) (k 0)) (d (n "rocket_dyn_templates") (r "^0.1") (f (quote ("handlebars"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha256") (r "^1.0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "0bs2rhk58s12khzwhzyizxkcc2bnzp3g1r8y6grc0c36vsvkvi46") (f (quote (("default")))) (s 2) (e (quote (("rocket" "dep:rocket" "dep:rocket_db_pools" "dep:async-trait" "dep:rocket_dyn_templates" "anyhow") ("client" "dep:reqwest" "dep:async-recursion"))))))

(define-public crate-ncryptf-rs-0.3.1 (c (n "ncryptf-rs") (v "0.3.1") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "async-recursion") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "=0.4.30") (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hkdf") (r "^0.12.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "libsodium-sys-stable") (r "^1.20") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "redis") (r "^0.21") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls" "brotli" "gzip" "stream"))) (o #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (k 2)) (d (n "rocket") (r "^0.5") (f (quote ("tls" "secrets" "json"))) (o #t) (d #t) (k 0)) (d (n "rocket_db_pools") (r "^0.1") (f (quote ("deadpool_redis"))) (o #t) (d #t) (k 0)) (d (n "rocket_dyn_templates") (r "^0.1") (f (quote ("handlebars"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha256") (r "^1.0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "19d5xaj6k8hdmqyyky8ybz4qbr7f4yrg7qk8ikvgd8mjgkvzwiwy") (f (quote (("default")))) (y #t) (s 2) (e (quote (("rocket" "dep:rocket" "dep:rocket_db_pools" "dep:async-trait" "dep:rocket_dyn_templates" "anyhow") ("client" "dep:reqwest" "dep:async-recursion"))))))

(define-public crate-ncryptf-rs-0.3.2 (c (n "ncryptf-rs") (v "0.3.2") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "async-recursion") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "=0.4.30") (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hkdf") (r "^0.12.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "libsodium-sys-stable") (r "^1.20") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "redis") (r "^0.21") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls" "brotli" "gzip" "stream"))) (o #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (k 2)) (d (n "rocket") (r "^0.5") (f (quote ("tls" "secrets" "json"))) (o #t) (d #t) (k 0)) (d (n "rocket_db_pools") (r "^0.1") (f (quote ("deadpool_redis"))) (o #t) (d #t) (k 0)) (d (n "rocket_dyn_templates") (r "^0.1") (f (quote ("handlebars"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha256") (r "^1.0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "0dqm8hhdz2w9skvim1dmrd716zzm9bqn1j8gm1m6a35gwycgi7m1") (f (quote (("default")))) (s 2) (e (quote (("rocket" "dep:rocket" "dep:rocket_db_pools" "dep:async-trait" "dep:rocket_dyn_templates" "anyhow") ("client" "dep:reqwest" "dep:async-recursion"))))))

