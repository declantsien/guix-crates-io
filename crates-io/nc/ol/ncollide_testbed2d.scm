(define-module (crates-io nc ol ncollide_testbed2d) #:use-module (crates-io))

(define-public crate-ncollide_testbed2d-0.1.0 (c (n "ncollide_testbed2d") (v "0.1.0") (d (list (d (n "mpeg_encoder") (r "0.2.*") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "0.8.*") (d #t) (k 0)) (d (n "ncollide") (r "^0.9.0") (d #t) (k 0)) (d (n "num") (r "0.1.*") (d #t) (k 0)) (d (n "rand") (r "0.3.*") (d #t) (k 0)) (d (n "sfml") (r "0.11.*") (d #t) (k 0)) (d (n "time") (r "0.1.*") (d #t) (k 0)))) (h "11j7agldqxzzj89lmr9y2z0ndqv71nsjw4js83dm2zr6b87b2qbw") (f (quote (("recording" "mpeg_encoder") ("default"))))))

(define-public crate-ncollide_testbed2d-0.2.0 (c (n "ncollide_testbed2d") (v "0.2.0") (d (list (d (n "mpeg_encoder") (r "0.2.*") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "0.9.*") (d #t) (k 0)) (d (n "ncollide") (r "0.10.*") (d #t) (k 0)) (d (n "num") (r "0.1.*") (d #t) (k 0)) (d (n "rand") (r "0.3.*") (d #t) (k 0)) (d (n "sfml") (r "0.11.*") (d #t) (k 0)) (d (n "time") (r "0.1.*") (d #t) (k 0)))) (h "0n2c1rii2kqbp44hp2ndh0nnmm7xcqi3n2jsrhr9jk3x0lk392vk") (f (quote (("recording" "mpeg_encoder") ("default"))))))

(define-public crate-ncollide_testbed2d-0.3.0 (c (n "ncollide_testbed2d") (v "0.3.0") (d (list (d (n "alga") (r "^0.5") (d #t) (k 0)) (d (n "mpeg_encoder") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.11") (d #t) (k 0)) (d (n "ncollide") (r "^0.11") (d #t) (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "sfml") (r "^0.11") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "04h7p7cahhi76kgi937jca9m9g931mjyi6kzk5a9c4pf7fmviin1") (f (quote (("recording" "mpeg_encoder") ("default"))))))

(define-public crate-ncollide_testbed2d-0.4.0 (c (n "ncollide_testbed2d") (v "0.4.0") (d (list (d (n "alga") (r "^0.5") (d #t) (k 0)) (d (n "mpeg_encoder") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.12") (d #t) (k 0)) (d (n "ncollide") (r "^0.12") (d #t) (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "sfml") (r "^0.11") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "0m3jpj811pnnrvhvpkvag1kajrj1r63fkhk759268bmqai3f9q1j") (f (quote (("recording" "mpeg_encoder") ("default"))))))

(define-public crate-ncollide_testbed2d-0.5.0 (c (n "ncollide_testbed2d") (v "0.5.0") (d (list (d (n "alga") (r "^0.5") (d #t) (k 0)) (d (n "mpeg_encoder") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.13") (d #t) (k 0)) (d (n "ncollide") (r "^0.13") (d #t) (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "sfml") (r "^0.11") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "0bcxkcqxri943smn2rlr6all4cjgpm25dn7k3pq2l89ys6aia07s") (f (quote (("recording" "mpeg_encoder") ("default"))))))

