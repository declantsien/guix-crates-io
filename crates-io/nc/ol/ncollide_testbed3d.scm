(define-module (crates-io nc ol ncollide_testbed3d) #:use-module (crates-io))

(define-public crate-ncollide_testbed3d-0.1.0 (c (n "ncollide_testbed3d") (v "0.1.0") (d (list (d (n "glfw") (r "0.2.*") (d #t) (k 0)) (d (n "kiss3d") (r "0.4.*") (d #t) (k 0)) (d (n "mpeg_encoder") (r "0.2.*") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "0.8.*") (d #t) (k 0)) (d (n "ncollide") (r "^0.9.0") (d #t) (k 0)) (d (n "rand") (r "0.3.*") (d #t) (k 0)) (d (n "time") (r "0.1.*") (d #t) (k 0)))) (h "1yxd2ffd09zpjglzj8vy8k62ingvpp49nsibra88zl8m4x9b10g3") (f (quote (("recording" "mpeg_encoder") ("default"))))))

(define-public crate-ncollide_testbed3d-0.2.0 (c (n "ncollide_testbed3d") (v "0.2.0") (d (list (d (n "glfw") (r "0.2.*") (d #t) (k 0)) (d (n "kiss3d") (r "0.4.*") (d #t) (k 0)) (d (n "mpeg_encoder") (r "0.2.*") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "0.9.*") (d #t) (k 0)) (d (n "ncollide") (r "0.10.*") (d #t) (k 0)) (d (n "rand") (r "0.3.*") (d #t) (k 0)) (d (n "time") (r "0.1.*") (d #t) (k 0)))) (h "0a559mmlahpwag6kbvfkmsvgy6dhmx0mkza377rl0vlc6n360rjm") (f (quote (("recording" "mpeg_encoder") ("default"))))))

(define-public crate-ncollide_testbed3d-0.2.1 (c (n "ncollide_testbed3d") (v "0.2.1") (d (list (d (n "glfw") (r "0.8.*") (d #t) (k 0)) (d (n "kiss3d") (r "0.6.*") (d #t) (k 0)) (d (n "mpeg_encoder") (r "0.2.*") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "0.9.*") (d #t) (k 0)) (d (n "ncollide") (r "0.10.*") (d #t) (k 0)) (d (n "rand") (r "0.3.*") (d #t) (k 0)) (d (n "time") (r "0.1.*") (d #t) (k 0)))) (h "115lb9pnplavrrg54rbkwfqj7cfshp5s8nh4iw72khkn6qdl1s0a") (f (quote (("recording" "mpeg_encoder") ("default"))))))

(define-public crate-ncollide_testbed3d-0.3.0 (c (n "ncollide_testbed3d") (v "0.3.0") (d (list (d (n "glfw") (r "^0.8") (d #t) (k 0)) (d (n "kiss3d") (r "^0.8") (d #t) (k 0)) (d (n "mpeg_encoder") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.11") (d #t) (k 0)) (d (n "ncollide") (r "^0.11") (d #t) (k 0)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "0lf2ai0p5www8vn1gin9gsn7zqxdgpxzvspvvg38gl6djdpwzgyc") (f (quote (("recording" "mpeg_encoder") ("default"))))))

(define-public crate-ncollide_testbed3d-0.4.0 (c (n "ncollide_testbed3d") (v "0.4.0") (d (list (d (n "glfw") (r "^0.8") (d #t) (k 0)) (d (n "kiss3d") (r "^0.9") (d #t) (k 0)) (d (n "mpeg_encoder") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.12") (d #t) (k 0)) (d (n "ncollide") (r "^0.12") (d #t) (k 0)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "1rsbc0j3r9s7a30q8kwqgk3xwl9hii339njgzy000vskrv7r89v8") (f (quote (("recording" "mpeg_encoder") ("default"))))))

(define-public crate-ncollide_testbed3d-0.5.0 (c (n "ncollide_testbed3d") (v "0.5.0") (d (list (d (n "glfw") (r "^0.8") (d #t) (k 0)) (d (n "kiss3d") (r "^0.10") (d #t) (k 0)) (d (n "mpeg_encoder") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.13") (d #t) (k 0)) (d (n "ncollide") (r "^0.13") (d #t) (k 0)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "07yj8363h7bhhv7q9m18hgqcj0xycqksmp8zxjmm09akzg0kff4y") (f (quote (("recording" "mpeg_encoder") ("default"))))))

