(define-module (crates-io nc ol ncollide2d) #:use-module (crates-io))

(define-public crate-ncollide2d-0.1.0 (c (n "ncollide2d") (v "0.1.0") (h "0lzw21hpli45z2vxmwkrv3va49krayzx9pf3xgi88h3w4mmpydis")))

(define-public crate-ncollide2d-0.15.0 (c (n "ncollide2d") (v "0.15.0") (d (list (d (n "alga") (r "^0.5") (d #t) (k 0)) (d (n "approx") (r "^0.1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.14.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)))) (h "1n5vg446i0fgsicnnimxqgwracc93c3gbx5l0zjb6n3ld4jv9ccq") (f (quote (("dim2") ("default" "dim2"))))))

(define-public crate-ncollide2d-0.15.1 (c (n "ncollide2d") (v "0.15.1") (d (list (d (n "alga") (r "^0.5") (d #t) (k 0)) (d (n "approx") (r "^0.1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.14.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)))) (h "031afkbv88rqdq3l6xillpv9f4c08iphka0phpm93gx9d1sy1s59") (f (quote (("dim2") ("default" "dim2"))))))

(define-public crate-ncollide2d-0.15.2 (c (n "ncollide2d") (v "0.15.2") (d (list (d (n "alga") (r "^0.5") (d #t) (k 0)) (d (n "approx") (r "^0.1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.14.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)))) (h "04bha0bn0wgpxbqnyg06pkq0ijgqxajvsk389mlk4100cvnpw4sw") (f (quote (("dim2") ("default" "dim2"))))))

(define-public crate-ncollide2d-0.15.3 (c (n "ncollide2d") (v "0.15.3") (d (list (d (n "alga") (r "^0.5") (d #t) (k 0)) (d (n "approx") (r "^0.1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.14.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)))) (h "0c499ykp0kbzyx8pcr2svvjpdzq3zlly8p7yaa34kcxyz53sxd3r") (f (quote (("dim2") ("default" "dim2"))))))

(define-public crate-ncollide2d-0.15.4 (c (n "ncollide2d") (v "0.15.4") (d (list (d (n "alga") (r "^0.5") (d #t) (k 0)) (d (n "approx") (r "^0.1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.14.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)))) (h "036cpb1hj63aj3z5vkdr6nnac5c8ld9wcmsv1y04adca5mi5wgdh") (f (quote (("dim2") ("default" "dim2"))))))

(define-public crate-ncollide2d-0.16.0 (c (n "ncollide2d") (v "0.16.0") (d (list (d (n "alga") (r "^0.6") (d #t) (k 0)) (d (n "approx") (r "^0.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.15") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)))) (h "1avv77kmbqp1zj19yf83ardviyr803335cm39fh834m41da3jpg4") (f (quote (("dim2") ("default" "dim2"))))))

(define-public crate-ncollide2d-0.16.1 (c (n "ncollide2d") (v "0.16.1") (d (list (d (n "alga") (r "^0.6") (d #t) (k 0)) (d (n "approx") (r "^0.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.15") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)))) (h "1y2si3pcjrmlcy2ddjj1c7rpmpj2h7m8yxw0plf6vsnvqkpb6h5k") (f (quote (("dim2") ("default" "dim2"))))))

(define-public crate-ncollide2d-0.16.2 (c (n "ncollide2d") (v "0.16.2") (d (list (d (n "alga") (r "^0.6") (d #t) (k 0)) (d (n "approx") (r "^0.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.15") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)))) (h "0pp4h9bzkywzppj5qkmjwimksp5zhg0sjx4z77pxpfd2l30ngq39") (f (quote (("dim2") ("default" "dim2"))))))

(define-public crate-ncollide2d-0.17.0 (c (n "ncollide2d") (v "0.17.0") (d (list (d (n "alga") (r "^0.7") (d #t) (k 0)) (d (n "approx") (r "^0.3") (d #t) (k 0)) (d (n "nalgebra") (r "^0.16") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)))) (h "1330jd36jmm3khjsisabamw7dhl1s1jx4p01wyq5sw08axipv9zv") (f (quote (("dim2") ("default" "dim2"))))))

(define-public crate-ncollide2d-0.17.1 (c (n "ncollide2d") (v "0.17.1") (d (list (d (n "alga") (r "^0.7") (d #t) (k 0)) (d (n "approx") (r "^0.3") (d #t) (k 0)) (d (n "nalgebra") (r "^0.16") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)))) (h "17ppq2fnl8l5s2l9kl8vzyy95rjhsr50sba6q8gbcc1n7qv84n22") (f (quote (("dim2") ("default" "dim2"))))))

(define-public crate-ncollide2d-0.17.2 (c (n "ncollide2d") (v "0.17.2") (d (list (d (n "alga") (r "^0.7") (d #t) (k 0)) (d (n "approx") (r "^0.3") (d #t) (k 0)) (d (n "nalgebra") (r "^0.16") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)))) (h "1ms3cyi331qb1bz9ipxb1agigk8sgc8gind9j3v1khlfhdwz4y05") (f (quote (("dim2") ("default" "dim2"))))))

(define-public crate-ncollide2d-0.17.3 (c (n "ncollide2d") (v "0.17.3") (d (list (d (n "alga") (r "^0.7") (d #t) (k 0)) (d (n "approx") (r "^0.3") (d #t) (k 0)) (d (n "nalgebra") (r "^0.16") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)))) (h "0p9jd7ai192c4h3ibbdvfqb53l6734ns6c41dfgyvd15zg3ilw2w") (f (quote (("dim2") ("default" "dim2"))))))

(define-public crate-ncollide2d-0.18.0 (c (n "ncollide2d") (v "0.18.0") (d (list (d (n "alga") (r "^0.8") (d #t) (k 0)) (d (n "approx") (r "^0.3") (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.17") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "petgraph") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.6") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)))) (h "0zkscwr5a0p47al6yxs5jqqn26xb6wddrqw2bvaj8nz2xpmkxp7m") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("dim2") ("default" "dim2"))))))

(define-public crate-ncollide2d-0.18.1 (c (n "ncollide2d") (v "0.18.1") (d (list (d (n "alga") (r "^0.8") (d #t) (k 0)) (d (n "approx") (r "^0.3") (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.17") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "petgraph") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.6") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)))) (h "0yldj60796zzzyyi8pnhswy3hvi5hzlzgbh88c2mfsd0zx5ksjcf") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("dim2") ("default" "dim2"))))))

(define-public crate-ncollide2d-0.18.2 (c (n "ncollide2d") (v "0.18.2") (d (list (d (n "alga") (r "^0.8") (d #t) (k 0)) (d (n "approx") (r "^0.3") (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.17") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "petgraph") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.6") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)))) (h "0v4s3zk8b2f8gl7sigb37wb11l1j99zyibn3i4bnpxpsacrzpcgs") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("dim2") ("default" "dim2"))))))

(define-public crate-ncollide2d-0.18.3 (c (n "ncollide2d") (v "0.18.3") (d (list (d (n "alga") (r "^0.8") (d #t) (k 0)) (d (n "approx") (r "^0.3") (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.17") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "petgraph") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.6") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)))) (h "1dsr4ynksg1rnvg15j0ac6fanwi093hxphy3a2yjmw1li869ysin") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("dim2") ("default" "dim2"))))))

(define-public crate-ncollide2d-0.18.4 (c (n "ncollide2d") (v "0.18.4") (d (list (d (n "alga") (r "^0.8") (d #t) (k 0)) (d (n "approx") (r "^0.3") (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.17") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "petgraph") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.6") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)))) (h "12zyzi9vs7xilyhljsns09faazfwiyj2ff21lgbb0g65qgx11wnx") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("dim2") ("default" "dim2"))))))

(define-public crate-ncollide2d-0.19.0 (c (n "ncollide2d") (v "0.19.0") (d (list (d (n "alga") (r "^0.9") (d #t) (k 0)) (d (n "approx") (r "^0.3") (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.18") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "petgraph") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.6") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)))) (h "0hwnybzw7ql81ydhxazx2hd1rvnw0nfrfba5rf0a6a0a0wdimjhb") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("dim2") ("default" "dim2"))))))

(define-public crate-ncollide2d-0.19.1 (c (n "ncollide2d") (v "0.19.1") (d (list (d (n "alga") (r "^0.9") (d #t) (k 0)) (d (n "approx") (r "^0.3") (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.18") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "petgraph") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.6") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)))) (h "03hindwmdrfalqa8v3y36y6wr10mmivy7z974r8h69bmqrj017am") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("dim2") ("default" "dim2"))))))

(define-public crate-ncollide2d-0.19.2 (c (n "ncollide2d") (v "0.19.2") (d (list (d (n "alga") (r "^0.9") (d #t) (k 0)) (d (n "approx") (r "^0.3") (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.18") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "petgraph") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.6") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)))) (h "040rz899wzjl6cqjfgw521ga0qpinvf5mbqqpm2zmdr86zq92xzx") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("dim2") ("default" "dim2"))))))

(define-public crate-ncollide2d-0.20.0 (c (n "ncollide2d") (v "0.20.0") (d (list (d (n "alga") (r "^0.9") (d #t) (k 0)) (d (n "approx") (r "^0.3") (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.18") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "petgraph") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.6") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "slotmap") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)))) (h "09jpgdyfrsmvw8v88gzyr04bcif2vwg8adfhbfjvshz3556bnc5p") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("dim2") ("default" "dim2"))))))

(define-public crate-ncollide2d-0.20.1 (c (n "ncollide2d") (v "0.20.1") (d (list (d (n "alga") (r "^0.9") (d #t) (k 0)) (d (n "approx") (r "^0.3") (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.18") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "petgraph") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.6") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "slotmap") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)))) (h "0h7xalw9xhac87az77k6p9lsnkax2n8qwc7bf0z1cdvqjahfcrcq") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("dim2") ("default" "dim2"))))))

(define-public crate-ncollide2d-0.21.0 (c (n "ncollide2d") (v "0.21.0") (d (list (d (n "alga") (r "^0.9") (d #t) (k 0)) (d (n "approx") (r "^0.3") (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.19") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "petgraph") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.7") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "slotmap") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)))) (h "0zbnxkzjkj2zwrah41dd2bz9mvv8abvrky3g04xikk1fw7w3y87n") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("dim2") ("default" "dim2"))))))

(define-public crate-ncollide2d-0.22.0 (c (n "ncollide2d") (v "0.22.0") (d (list (d (n "alga") (r "^0.9") (d #t) (k 0)) (d (n "approx") (r "^0.3") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.20") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "petgraph") (r "^0.5") (d #t) (k 0)) (d (n "rand") (r "^0.7") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "slotmap") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "0sw21m86kfn4g5xlz73yqwdg5dgbskaa1i17ncvq1h8mdlsm6p15") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("dim2") ("default" "dim2"))))))

(define-public crate-ncollide2d-0.23.0 (c (n "ncollide2d") (v "0.23.0") (d (list (d (n "approx") (r "^0.3") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.21") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "petgraph") (r "^0.5") (d #t) (k 0)) (d (n "rand") (r "^0.7") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.1") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "slotmap") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "13z796nq934gypji8v1rbk5w7mw6bn261ign481xgywywnkn92xx") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("dim2") ("default" "dim2"))))))

(define-public crate-ncollide2d-0.23.1 (c (n "ncollide2d") (v "0.23.1") (d (list (d (n "approx") (r "^0.3") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.21") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "petgraph") (r "^0.5") (d #t) (k 0)) (d (n "rand") (r "^0.7") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.1") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "slotmap") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "0bz0nsjdfksk4mnkdpyjmn8s244z9zvgcqgan820ad5mrvn4miz2") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("improved_fixed_point_support") ("dim2") ("default" "dim2"))))))

(define-public crate-ncollide2d-0.23.2 (c (n "ncollide2d") (v "0.23.2") (d (list (d (n "approx") (r "^0.3") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.21") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "petgraph") (r "^0.5") (d #t) (k 0)) (d (n "rand") (r "^0.7") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.1") (d #t) (k 0)) (d (n "simba") (r "^0.1") (f (quote ("partial_fixed_point_support"))) (d #t) (k 2)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "slotmap") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "1p6hjdkdpl0zchsxl3bksyrqwqgshdksi2d20lz312x80bi5pb7q") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("improved_fixed_point_support") ("dim2") ("default" "dim2"))))))

(define-public crate-ncollide2d-0.24.0 (c (n "ncollide2d") (v "0.24.0") (d (list (d (n "approx") (r "^0.3") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.22") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "petgraph") (r "^0.5") (d #t) (k 0)) (d (n "rand") (r "^0.7") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.2") (d #t) (k 0)) (d (n "simba") (r "^0.2") (f (quote ("partial_fixed_point_support"))) (d #t) (k 2)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "slotmap") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "1y2wzb122sq7b8lmhs1vqrm0i0mpj2sawphncr70dfdjcgg5fdj8") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("improved_fixed_point_support") ("dim2") ("default" "dim2"))))))

(define-public crate-ncollide2d-0.25.0 (c (n "ncollide2d") (v "0.25.0") (d (list (d (n "approx") (r "^0.3") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.22") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "petgraph") (r "^0.5") (d #t) (k 0)) (d (n "rand") (r "^0.7") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.2") (d #t) (k 0)) (d (n "simba") (r "^0.2") (f (quote ("partial_fixed_point_support"))) (d #t) (k 2)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "slotmap") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "1gkv5x4mypkbm7m3f2pjbgcqciydv6rhhzg16w40gk8q6b6f7rjv") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("improved_fixed_point_support") ("dim2") ("default" "dim2"))))))

(define-public crate-ncollide2d-0.26.0 (c (n "ncollide2d") (v "0.26.0") (d (list (d (n "approx") (r "^0.4") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.23") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "petgraph") (r "^0.5") (d #t) (k 0)) (d (n "rand") (r "^0.7") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.3") (d #t) (k 0)) (d (n "simba") (r "^0.3") (f (quote ("partial_fixed_point_support"))) (d #t) (k 2)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "slotmap") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "0vrrdw8s8qh20k7mm3i5c9rybw861ibq026d51gj7sl8zfkri3d9") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("improved_fixed_point_support") ("dim2") ("default" "dim2"))))))

(define-public crate-ncollide2d-0.26.1 (c (n "ncollide2d") (v "0.26.1") (d (list (d (n "approx") (r "^0.4") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.23") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "petgraph") (r "^0.5") (d #t) (k 0)) (d (n "rand") (r "^0.7") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.3") (d #t) (k 0)) (d (n "simba") (r "^0.3") (f (quote ("partial_fixed_point_support"))) (d #t) (k 2)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "slotmap") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "1cdf0df2rmbqi54777kpwl6nn1f7j16mrrlpmw1cydja855g3xrz") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("improved_fixed_point_support") ("dim2") ("default" "dim2"))))))

(define-public crate-ncollide2d-0.27.0 (c (n "ncollide2d") (v "0.27.0") (d (list (d (n "approx") (r "^0.4") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.24") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "petgraph") (r "^0.5") (d #t) (k 0)) (d (n "rand") (r "^0.7") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.3") (d #t) (k 0)) (d (n "simba") (r "^0.3") (f (quote ("partial_fixed_point_support"))) (d #t) (k 2)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "slotmap") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "0gikmpr8cly9k5r3bpfbn89sj9sz6mmws92kw6rmfyi9a1931x84") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("improved_fixed_point_support") ("dim2") ("default" "dim2"))))))

(define-public crate-ncollide2d-0.28.0 (c (n "ncollide2d") (v "0.28.0") (d (list (d (n "approx") (r "^0.4") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.25") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "petgraph") (r "^0.5") (d #t) (k 0)) (d (n "rand") (r "^0.8") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.4") (d #t) (k 0)) (d (n "simba") (r "^0.4") (f (quote ("partial_fixed_point_support"))) (d #t) (k 2)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "slotmap") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "0zp4lcg9mjqpyf33x1jdw2ql2njpr7zfmww8lbqcyd9mkq8xvkih") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("improved_fixed_point_support") ("dim2") ("default" "dim2"))))))

(define-public crate-ncollide2d-0.29.0 (c (n "ncollide2d") (v "0.29.0") (d (list (d (n "approx") (r "^0.4") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.26") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "petgraph") (r "^0.5") (d #t) (k 0)) (d (n "rand") (r "^0.8") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.4") (d #t) (k 0)) (d (n "simba") (r "^0.4") (f (quote ("partial_fixed_point_support"))) (d #t) (k 2)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "slotmap") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "161rapw5cxrra1mjiibx2zwb00gwaqqn7cha8qd4f88m8nm7f0cb") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("improved_fixed_point_support") ("dim2") ("default" "dim2"))))))

(define-public crate-ncollide2d-0.30.0 (c (n "ncollide2d") (v "0.30.0") (d (list (d (n "approx") (r "^0.5") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.27") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "petgraph") (r "^0.5") (d #t) (k 0)) (d (n "rand") (r "^0.8") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.5") (d #t) (k 0)) (d (n "simba") (r "^0.5") (f (quote ("partial_fixed_point_support"))) (d #t) (k 2)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "slotmap") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "1292yw4jb548l9f8z9sll5ilxlmgs57db7l3z7bx3cc2m9lsa34l") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("improved_fixed_point_support") ("dim2") ("default" "dim2"))))))

(define-public crate-ncollide2d-0.31.0 (c (n "ncollide2d") (v "0.31.0") (d (list (d (n "approx") (r "^0.5") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.28") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "petgraph") (r "^0.5") (d #t) (k 0)) (d (n "rand") (r "^0.8") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.5") (d #t) (k 0)) (d (n "simba") (r "^0.5") (f (quote ("partial_fixed_point_support"))) (d #t) (k 2)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "slotmap") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "0gqvhrdwd0gbklq5q7mh16a0w0420r0n3nhzfac67q0dhlqmdxhr") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("improved_fixed_point_support") ("dim2") ("default" "dim2"))))))

(define-public crate-ncollide2d-0.32.0 (c (n "ncollide2d") (v "0.32.0") (d (list (d (n "approx") (r "^0.5") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.29") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "petgraph") (r "^0.5") (d #t) (k 0)) (d (n "rand") (r "^0.8") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.6") (d #t) (k 0)) (d (n "simba") (r "^0.5") (f (quote ("partial_fixed_point_support"))) (d #t) (k 2)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "slotmap") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "1prpccdyyzxsy828z5d4v9l9332c1z0dav3wdzxpnzfmmj0jj9qz") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("improved_fixed_point_support") ("dim2") ("default" "dim2"))))))

(define-public crate-ncollide2d-0.33.0 (c (n "ncollide2d") (v "0.33.0") (d (list (d (n "approx") (r "^0.5") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.30") (d #t) (k 0)) (d (n "nalgebra") (r "^0.30") (f (quote ("rand"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "petgraph") (r "^0.6") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.7") (d #t) (k 0)) (d (n "simba") (r "^0.7") (f (quote ("partial_fixed_point_support"))) (d #t) (k 2)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "slotmap") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "0dym6chdby7xx9qmqx5gc973wl3qx7haipa33nank2x1wymq5d77") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("improved_fixed_point_support") ("dim2") ("default" "dim2"))))))

