(define-module (crates-io nc ol ncollide3d) #:use-module (crates-io))

(define-public crate-ncollide3d-0.1.0 (c (n "ncollide3d") (v "0.1.0") (h "16axw6nb7arg0khvhxszig6cda4fvxq36mhr47a86lnhahja93i4")))

(define-public crate-ncollide3d-0.15.0 (c (n "ncollide3d") (v "0.15.0") (d (list (d (n "alga") (r "^0.5") (d #t) (k 0)) (d (n "approx") (r "^0.1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.14.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)))) (h "0af005pk3y4rqbpcz94rnf94qdmn2xz8gjb465l6s6g8ckpzwzxb") (f (quote (("dim3") ("default" "dim3"))))))

(define-public crate-ncollide3d-0.15.1 (c (n "ncollide3d") (v "0.15.1") (d (list (d (n "alga") (r "^0.5") (d #t) (k 0)) (d (n "approx") (r "^0.1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.14.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)))) (h "0rg08n34pyvgdrpqh05r3wjy3k56g5d6g9l1rjhalahlyfb2gyym") (f (quote (("dim3") ("default" "dim3"))))))

(define-public crate-ncollide3d-0.15.2 (c (n "ncollide3d") (v "0.15.2") (d (list (d (n "alga") (r "^0.5") (d #t) (k 0)) (d (n "approx") (r "^0.1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.14.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)))) (h "056kgvryz2ivn6im4w5mb4y7nhqg10sp78g17id3hry3vv5p0pnc") (f (quote (("dim3") ("default" "dim3"))))))

(define-public crate-ncollide3d-0.15.3 (c (n "ncollide3d") (v "0.15.3") (d (list (d (n "alga") (r "^0.5") (d #t) (k 0)) (d (n "approx") (r "^0.1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.14.2") (d #t) (k 0)) (d (n "ncollide2d") (r "^0.15") (d #t) (k 2)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)))) (h "1wv4lb13lhwkgd6sljxm5fq8yvrbvgihfb3sgfgybjkzc2f0mppr") (f (quote (("dim3") ("default" "dim3"))))))

(define-public crate-ncollide3d-0.15.4 (c (n "ncollide3d") (v "0.15.4") (d (list (d (n "alga") (r "^0.5") (d #t) (k 0)) (d (n "approx") (r "^0.1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.14.2") (d #t) (k 0)) (d (n "ncollide2d") (r "^0.15") (d #t) (k 2)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)))) (h "0vzn371xsvqf1jysilv7qpp6kzag80z14q5li505n1ln1b24vcag") (f (quote (("dim3") ("default" "dim3"))))))

(define-public crate-ncollide3d-0.16.0 (c (n "ncollide3d") (v "0.16.0") (d (list (d (n "alga") (r "^0.6") (d #t) (k 0)) (d (n "approx") (r "^0.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.15") (d #t) (k 0)) (d (n "ncollide2d") (r "^0.16") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)))) (h "0ns6bmh3x6jhksljmacfz28ccchdwmg4966rh1nxmv17yd8qn53i") (f (quote (("dim3") ("default" "dim3"))))))

(define-public crate-ncollide3d-0.16.1 (c (n "ncollide3d") (v "0.16.1") (d (list (d (n "alga") (r "^0.6") (d #t) (k 0)) (d (n "approx") (r "^0.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.15") (d #t) (k 0)) (d (n "ncollide2d") (r "^0.16") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)))) (h "1hblp1683riddnc4wwqxfph5sfyw7xhiqrl7icxgb7hmwg1gr4w2") (f (quote (("dim3") ("default" "dim3"))))))

(define-public crate-ncollide3d-0.16.2 (c (n "ncollide3d") (v "0.16.2") (d (list (d (n "alga") (r "^0.6") (d #t) (k 0)) (d (n "approx") (r "^0.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.15") (d #t) (k 0)) (d (n "ncollide2d") (r "^0.16") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)))) (h "1gv52zsh8c3zg6srs95chr2mgxvykij083z163jl3sn1qssddxy1") (f (quote (("dim3") ("default" "dim3"))))))

(define-public crate-ncollide3d-0.17.0 (c (n "ncollide3d") (v "0.17.0") (d (list (d (n "alga") (r "^0.7") (d #t) (k 0)) (d (n "approx") (r "^0.3") (k 0)) (d (n "nalgebra") (r "^0.16") (d #t) (k 0)) (d (n "ncollide2d") (r "^0.17") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "rand") (r "^0.5") (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)))) (h "0l0ayp8agws73dlfbnk337821pagb8glyacry5kv75kc28hai0yw") (f (quote (("dim3") ("default" "dim3"))))))

(define-public crate-ncollide3d-0.17.1 (c (n "ncollide3d") (v "0.17.1") (d (list (d (n "alga") (r "^0.7") (d #t) (k 0)) (d (n "approx") (r "^0.3") (k 0)) (d (n "nalgebra") (r "^0.16") (d #t) (k 0)) (d (n "ncollide2d") (r "^0.17") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "rand") (r "^0.5") (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)))) (h "1bjbf0gxpjaih74r9sd6h2gdicjyxv0gfalc4gd6azy79ihrhlka") (f (quote (("dim3") ("default" "dim3"))))))

(define-public crate-ncollide3d-0.17.2 (c (n "ncollide3d") (v "0.17.2") (d (list (d (n "alga") (r "^0.7") (d #t) (k 0)) (d (n "approx") (r "^0.3") (k 0)) (d (n "nalgebra") (r "^0.16") (d #t) (k 0)) (d (n "ncollide2d") (r "^0.17") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "rand") (r "^0.5") (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)))) (h "1n7c188iknfhkz383n71rw9gpihw1wmspncg6whf4qwv5prl5i7d") (f (quote (("dim3") ("default" "dim3"))))))

(define-public crate-ncollide3d-0.17.3 (c (n "ncollide3d") (v "0.17.3") (d (list (d (n "alga") (r "^0.7") (d #t) (k 0)) (d (n "approx") (r "^0.3") (k 0)) (d (n "nalgebra") (r "^0.16") (d #t) (k 0)) (d (n "ncollide2d") (r "^0.17") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "rand") (r "^0.5") (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)))) (h "0ibxxadcjkr7s2z4xaqpr27v80xz2irr3pnx8zh945gss0zyj9zq") (f (quote (("dim3") ("default" "dim3"))))))

(define-public crate-ncollide3d-0.18.0 (c (n "ncollide3d") (v "0.18.0") (d (list (d (n "alga") (r "^0.8") (d #t) (k 0)) (d (n "approx") (r "^0.3") (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.17") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "petgraph") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.6") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)))) (h "0bzy33ijpfvpikbdq2rdaxillgiv17g5c3ky01naw9rdv592i0sh") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("dim3") ("default" "dim3"))))))

(define-public crate-ncollide3d-0.18.1 (c (n "ncollide3d") (v "0.18.1") (d (list (d (n "alga") (r "^0.8") (d #t) (k 0)) (d (n "approx") (r "^0.3") (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.17") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "petgraph") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.6") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)))) (h "01vi3rnfh9pi6aqfbf9702lz8iqn6fxjzwhjpim33m3wb199s2da") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("dim3") ("default" "dim3"))))))

(define-public crate-ncollide3d-0.18.2 (c (n "ncollide3d") (v "0.18.2") (d (list (d (n "alga") (r "^0.8") (d #t) (k 0)) (d (n "approx") (r "^0.3") (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.17") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "petgraph") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.6") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)))) (h "1mrjbwb6n4hqwkd12am7r1b7c61cw3l6w2dhb8k9yjgb5xdnr48q") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("dim3") ("default" "dim3"))))))

(define-public crate-ncollide3d-0.18.3 (c (n "ncollide3d") (v "0.18.3") (d (list (d (n "alga") (r "^0.8") (d #t) (k 0)) (d (n "approx") (r "^0.3") (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.17") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "petgraph") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.6") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)))) (h "15127xxxxr0h85pcdk7yln50as55vzvlac6kijsvas64anxgfdmv") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("dim3") ("default" "dim3"))))))

(define-public crate-ncollide3d-0.18.4 (c (n "ncollide3d") (v "0.18.4") (d (list (d (n "alga") (r "^0.8") (d #t) (k 0)) (d (n "approx") (r "^0.3") (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.17") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "petgraph") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.6") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)))) (h "0850y4qyaabzlvxvn8w8hk1ll3i88h41kb6765yb2m9nj61p105n") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("dim3") ("default" "dim3"))))))

(define-public crate-ncollide3d-0.19.0 (c (n "ncollide3d") (v "0.19.0") (d (list (d (n "alga") (r "^0.9") (d #t) (k 0)) (d (n "approx") (r "^0.3") (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.18") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "petgraph") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.6") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)))) (h "0hc62cjq7n62spi84hx3a5l9gw3xlqdm9xwgp7p4v23nmlsnjash") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("dim3") ("default" "dim3"))))))

(define-public crate-ncollide3d-0.19.1 (c (n "ncollide3d") (v "0.19.1") (d (list (d (n "alga") (r "^0.9") (d #t) (k 0)) (d (n "approx") (r "^0.3") (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.18") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "petgraph") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.6") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)))) (h "02k4dxq0697jfgxasllk9v0qi7br0qqjxrbp3dg1f965faj5684z") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("dim3") ("default" "dim3"))))))

(define-public crate-ncollide3d-0.19.2 (c (n "ncollide3d") (v "0.19.2") (d (list (d (n "alga") (r "^0.9") (d #t) (k 0)) (d (n "approx") (r "^0.3") (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.18") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "petgraph") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.6") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)))) (h "1xff7isx2if0fazz8j70fvjn2b75qlgypfg3krqyhlwi9ayi26w2") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("dim3") ("default" "dim3"))))))

(define-public crate-ncollide3d-0.20.0 (c (n "ncollide3d") (v "0.20.0") (d (list (d (n "alga") (r "^0.9") (d #t) (k 0)) (d (n "approx") (r "^0.3") (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.18") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "petgraph") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.6") (k 2)) (d (n "rand_isaac") (r "^0.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "slotmap") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)))) (h "0lxi01g1j763ksx6a94ljlkd7h6gdqal1cdbhq438aza8l4b43fw") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("dim3") ("default" "dim3"))))))

(define-public crate-ncollide3d-0.20.1 (c (n "ncollide3d") (v "0.20.1") (d (list (d (n "alga") (r "^0.9") (d #t) (k 0)) (d (n "approx") (r "^0.3") (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.18") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "petgraph") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.6") (k 2)) (d (n "rand_isaac") (r "^0.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "slotmap") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)))) (h "0qfx2islggp4ibz71ykpz38l9m8abclzvmdpza4jx2d2f2n7rr9y") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("dim3") ("default" "dim3"))))))

(define-public crate-ncollide3d-0.21.0 (c (n "ncollide3d") (v "0.21.0") (d (list (d (n "alga") (r "^0.9") (d #t) (k 0)) (d (n "approx") (r "^0.3") (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.19") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "petgraph") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.7") (k 2)) (d (n "rand_isaac") (r "^0.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "slotmap") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)))) (h "19lg57w0yvgx0y8hy9sd88qrsfj82nwsjdclkvryd421s22jxc7m") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("dim3") ("default" "dim3"))))))

(define-public crate-ncollide3d-0.22.0 (c (n "ncollide3d") (v "0.22.0") (d (list (d (n "alga") (r "^0.9") (d #t) (k 0)) (d (n "approx") (r "^0.3") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.20") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "petgraph") (r "^0.5") (d #t) (k 0)) (d (n "rand") (r "^0.7") (k 2)) (d (n "rand_isaac") (r "^0.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "slotmap") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "0m4ps7hnan4pf1fsc540s5xax8z92miz90k7v4pjbp3lhjjhlsyg") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("dim3") ("default" "dim3"))))))

(define-public crate-ncollide3d-0.23.0 (c (n "ncollide3d") (v "0.23.0") (d (list (d (n "approx") (r "^0.3") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.21") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "petgraph") (r "^0.5") (d #t) (k 0)) (d (n "rand") (r "^0.7") (k 2)) (d (n "rand_isaac") (r "^0.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.1") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "slotmap") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "10wsj5j5lkvhqilfrnza4am7cfpzi0hbl7rxkyyyl2ifw1lqppib") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("dim3") ("default" "dim3"))))))

(define-public crate-ncollide3d-0.23.1 (c (n "ncollide3d") (v "0.23.1") (d (list (d (n "approx") (r "^0.3") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.21") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "petgraph") (r "^0.5") (d #t) (k 0)) (d (n "rand") (r "^0.7") (k 2)) (d (n "rand_isaac") (r "^0.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.1") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "slotmap") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "0mhkan2ir9jsl40ag1byingjb6l6f9kbqc2w7awc3jdf5nqp0035") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("improved_fixed_point_support") ("dim3") ("default" "dim3"))))))

(define-public crate-ncollide3d-0.23.2 (c (n "ncollide3d") (v "0.23.2") (d (list (d (n "approx") (r "^0.3") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.21") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "petgraph") (r "^0.5") (d #t) (k 0)) (d (n "rand") (r "^0.7") (k 2)) (d (n "rand_isaac") (r "^0.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.1") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "slotmap") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "0ijg1hgc2gbmlgaf5kmg43vy8fap36mchrd850h9sgkck08c21dw") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("improved_fixed_point_support") ("dim3") ("default" "dim3"))))))

(define-public crate-ncollide3d-0.24.0 (c (n "ncollide3d") (v "0.24.0") (d (list (d (n "approx") (r "^0.3") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.22") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "petgraph") (r "^0.5") (d #t) (k 0)) (d (n "rand") (r "^0.7") (k 2)) (d (n "rand_isaac") (r "^0.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.2") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "slotmap") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "09wb4y86zgi9p4xx9w30yiy6cznhlw9n38vq2ygajnq0lc6c4jjx") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("improved_fixed_point_support") ("dim3") ("default" "dim3"))))))

(define-public crate-ncollide3d-0.25.0 (c (n "ncollide3d") (v "0.25.0") (d (list (d (n "approx") (r "^0.3") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.22") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "petgraph") (r "^0.5") (d #t) (k 0)) (d (n "rand") (r "^0.7") (k 2)) (d (n "rand_isaac") (r "^0.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.2") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "slotmap") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "1vag4biy5iwwq5075nxxj4fm5bz5vzsxmxmi2x46zlymj2rz543n") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("improved_fixed_point_support") ("dim3") ("default" "dim3"))))))

(define-public crate-ncollide3d-0.26.0 (c (n "ncollide3d") (v "0.26.0") (d (list (d (n "approx") (r "^0.4") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.23") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "petgraph") (r "^0.5") (d #t) (k 0)) (d (n "rand") (r "^0.7") (k 2)) (d (n "rand_isaac") (r "^0.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.3") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "slotmap") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "0inwl868nhw4k6brmm63sn6c31gzsnf9c0ndg96cwmclwbksrrai") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("improved_fixed_point_support") ("dim3") ("default" "dim3"))))))

(define-public crate-ncollide3d-0.26.1 (c (n "ncollide3d") (v "0.26.1") (d (list (d (n "approx") (r "^0.4") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.23") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "petgraph") (r "^0.5") (d #t) (k 0)) (d (n "rand") (r "^0.7") (k 2)) (d (n "rand_isaac") (r "^0.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.3") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "slotmap") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "1v4qj9ay3xzvz4bgggpjmvgrqvpwh8zlxij6b7zw4fhxr8l61a3z") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("improved_fixed_point_support") ("dim3") ("default" "dim3"))))))

(define-public crate-ncollide3d-0.27.0 (c (n "ncollide3d") (v "0.27.0") (d (list (d (n "approx") (r "^0.4") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.24") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "petgraph") (r "^0.5") (d #t) (k 0)) (d (n "rand") (r "^0.7") (k 2)) (d (n "rand_isaac") (r "^0.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.3") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "slotmap") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "0dyl6256m6ch7bjwpc7q1iqgll3w604icws148l7jyxi9d58xhyf") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("improved_fixed_point_support") ("dim3") ("default" "dim3"))))))

(define-public crate-ncollide3d-0.28.0 (c (n "ncollide3d") (v "0.28.0") (d (list (d (n "approx") (r "^0.4") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.25") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "petgraph") (r "^0.5") (d #t) (k 0)) (d (n "rand") (r "^0.8") (k 2)) (d (n "rand_isaac") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.4") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "slotmap") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "0bqlwngiijajmldwhgacjrfl9h7lg65y93w72g588fjg5w32rck2") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("improved_fixed_point_support") ("dim3") ("default" "dim3"))))))

(define-public crate-ncollide3d-0.29.0 (c (n "ncollide3d") (v "0.29.0") (d (list (d (n "approx") (r "^0.4") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.26") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "petgraph") (r "^0.5") (d #t) (k 0)) (d (n "rand") (r "^0.8") (k 2)) (d (n "rand_isaac") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.4") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "slotmap") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "0dmappmc7r8bckf4p44scw97r717mn4j5s940aq5frb9x2qbiqap") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("improved_fixed_point_support") ("dim3") ("default" "dim3"))))))

(define-public crate-ncollide3d-0.30.0 (c (n "ncollide3d") (v "0.30.0") (d (list (d (n "approx") (r "^0.5") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.27") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "petgraph") (r "^0.5") (d #t) (k 0)) (d (n "rand") (r "^0.8") (k 2)) (d (n "rand_isaac") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.5") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "slotmap") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "07slmr8wkq08awrmi55rm5f83r4jr4dyniw9aw48znxnar4qpadf") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("improved_fixed_point_support") ("dim3") ("default" "dim3"))))))

(define-public crate-ncollide3d-0.31.0 (c (n "ncollide3d") (v "0.31.0") (d (list (d (n "approx") (r "^0.5") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.28") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "petgraph") (r "^0.5") (d #t) (k 0)) (d (n "rand") (r "^0.8") (k 2)) (d (n "rand_isaac") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.5") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "slotmap") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "0jb6qhiqvqr4nxmqag6j2y35fcn88jz7zih2fbni1716x7qah42i") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("improved_fixed_point_support") ("dim3") ("default" "dim3"))))))

(define-public crate-ncollide3d-0.32.0 (c (n "ncollide3d") (v "0.32.0") (d (list (d (n "approx") (r "^0.5") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.29") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "petgraph") (r "^0.5") (d #t) (k 0)) (d (n "rand") (r "^0.8") (k 2)) (d (n "rand_isaac") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.6") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "slotmap") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "19j19k55smrx37hfbdwfsawf3ar0qkzz7g8h3cjxh5vqz654p7lp") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("improved_fixed_point_support") ("dim3") ("default" "dim3"))))))

(define-public crate-ncollide3d-0.33.0 (c (n "ncollide3d") (v "0.33.0") (d (list (d (n "approx") (r "^0.5") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.30") (d #t) (k 0)) (d (n "nalgebra") (r "^0.30") (f (quote ("rand"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "petgraph") (r "^0.6") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_isaac") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.7") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "slotmap") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "1dc5x776cvy2z5gyljpxrdmb50rjp2jzd59h88n60j7wx9hqm7jr") (f (quote (("serde-serialize" "serde" "nalgebra/serde-serialize") ("improved_fixed_point_support") ("dim3") ("default" "dim3"))))))

