(define-module (crates-io ob jt objtalk) #:use-module (crates-io))

(define-public crate-objtalk-0.1.0 (c (n "objtalk") (v "0.1.0") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (f (quote ("std" "derive"))) (k 0)) (d (n "colored") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "deflate") (r "^0.9") (d #t) (k 1)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (o #t) (k 0)) (d (n "hyper-tungstenite") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.25") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.5") (f (quote ("rt" "rt-multi-thread" "macros" "net"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.6") (f (quote ("codec"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (k 0)))) (h "115136asxq54x8qhdrlvsbvclw6kajqh7zyqqyfm2ah32bw0h6bs") (f (quote (("sqlite-backend" "rusqlite/bundled" "rusqlite/chrono") ("server" "colored" "toml" "regex" "hyper/http1" "hyper/server" "hyper/runtime" "hyper/stream" "hyper-tungstenite" "lazy_static") ("default" "server" "client" "sqlite-backend") ("client" "hyper/http1" "hyper/client"))))))

(define-public crate-objtalk-0.1.1 (c (n "objtalk") (v "0.1.1") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (f (quote ("std" "derive"))) (k 0)) (d (n "colored") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "deflate") (r "^0.9") (d #t) (k 1)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (o #t) (k 0)) (d (n "hyper-tungstenite") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.25") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.5") (f (quote ("rt" "rt-multi-thread" "macros" "net"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.6") (f (quote ("codec"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (k 0)))) (h "163shz8jr8mz143fwg9gqkxd6igh8762vv4gmyr914dg96kpak76") (f (quote (("sqlite-backend" "rusqlite/bundled" "rusqlite/chrono") ("server" "colored" "toml" "regex" "hyper/http1" "hyper/server" "hyper/runtime" "hyper/stream" "hyper-tungstenite" "lazy_static") ("default" "server" "client" "sqlite-backend") ("client" "hyper/http1" "hyper/client"))))))

(define-public crate-objtalk-0.1.2 (c (n "objtalk") (v "0.1.2") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (f (quote ("std" "derive"))) (k 0)) (d (n "colored") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "deflate") (r "^0.9") (d #t) (k 1)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (o #t) (k 0)) (d (n "hyper-tungstenite") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.25") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.5") (f (quote ("rt" "rt-multi-thread" "macros" "net"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.6") (f (quote ("codec"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (k 0)))) (h "166n78jfndc1kl6dhnx8dn7fn01g9abz6jwyrrzsh2qwflbrldki") (f (quote (("sqlite-backend" "rusqlite/bundled" "rusqlite/chrono") ("server" "colored" "toml" "regex" "hyper/http1" "hyper/server" "hyper/runtime" "hyper/stream" "hyper-tungstenite" "lazy_static") ("default" "server" "client" "sqlite-backend") ("client" "hyper/http1" "hyper/client"))))))

(define-public crate-objtalk-0.1.3 (c (n "objtalk") (v "0.1.3") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (f (quote ("std" "derive"))) (k 0)) (d (n "colored") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "deflate") (r "^0.9") (d #t) (k 1)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (o #t) (k 0)) (d (n "hyper-tungstenite") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.25") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.5") (f (quote ("rt" "rt-multi-thread" "macros" "net"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.6") (f (quote ("codec"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (k 0)))) (h "1pva4q9gis8qbcfycx5vcgbq75rw1rkjhkx9qmj8dc57kff4r1js") (f (quote (("sqlite-backend" "rusqlite/bundled" "rusqlite/chrono") ("server" "colored" "toml" "regex" "hyper/http1" "hyper/server" "hyper/runtime" "hyper/stream" "hyper-tungstenite" "lazy_static") ("default" "server" "client" "sqlite-backend") ("client" "hyper/http1" "hyper/client"))))))

(define-public crate-objtalk-0.1.4 (c (n "objtalk") (v "0.1.4") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (f (quote ("std" "derive"))) (k 0)) (d (n "colored") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "deflate") (r "^0.9") (d #t) (k 1)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (o #t) (k 0)) (d (n "hyper-tungstenite") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.25") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.5") (f (quote ("rt" "rt-multi-thread" "macros" "net"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.6") (f (quote ("codec"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (k 0)))) (h "0vhhgwjslkj1s01nc9fqjc1bzwac0ngkr6cr4r9lhirjngbib0s2") (f (quote (("sqlite-backend" "rusqlite/bundled" "rusqlite/chrono") ("server" "colored" "toml" "regex" "hyper/http1" "hyper/server" "hyper/runtime" "hyper/stream" "hyper-tungstenite" "lazy_static") ("default" "server" "client" "sqlite-backend") ("client" "hyper/http1" "hyper/client"))))))

(define-public crate-objtalk-0.1.5 (c (n "objtalk") (v "0.1.5") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (f (quote ("std" "derive"))) (k 0)) (d (n "colored") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "deflate") (r "^0.9") (d #t) (k 1)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (o #t) (k 0)) (d (n "hyper-tungstenite") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.25") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.5") (f (quote ("rt" "rt-multi-thread" "macros" "net"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.6") (f (quote ("codec"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (k 0)))) (h "1l8aadrfwrma6j1bma2gj17qhwwd2dxkcg19h0cvan3v3rd9vzrf") (f (quote (("sqlite-backend" "rusqlite/bundled" "rusqlite/chrono") ("server" "colored" "toml" "regex" "hyper/http1" "hyper/server" "hyper/runtime" "hyper/stream" "hyper-tungstenite" "lazy_static") ("default" "server" "client" "sqlite-backend") ("client" "hyper/http1" "hyper/client"))))))

(define-public crate-objtalk-0.2.0 (c (n "objtalk") (v "0.2.0") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (f (quote ("std" "derive"))) (k 0)) (d (n "colored") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "deflate") (r "^0.9") (d #t) (k 1)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (o #t) (k 0)) (d (n "hyper-tungstenite") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.25") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.5") (f (quote ("rt" "rt-multi-thread" "macros" "net"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.6") (f (quote ("codec"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (k 0)))) (h "137qhzqm8d5z4wdkp69mb7r9xdbpvwjfad4ka0zkp0rlh9rs7fhl") (f (quote (("sqlite-backend" "rusqlite/bundled" "rusqlite/chrono") ("server" "colored" "toml" "regex" "hyper/http1" "hyper/server" "hyper/runtime" "hyper/stream" "hyper-tungstenite" "lazy_static") ("default" "server" "client" "sqlite-backend") ("client" "hyper/http1" "hyper/client"))))))

(define-public crate-objtalk-0.2.1 (c (n "objtalk") (v "0.2.1") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "=3.0.0-beta.2") (f (quote ("std" "derive"))) (k 0)) (d (n "clap_derive") (r "=3.0.0-beta.2") (d #t) (k 0)) (d (n "colored") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "deflate") (r "^0.9") (d #t) (k 1)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (o #t) (k 0)) (d (n "hyper-tungstenite") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.25") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.5") (f (quote ("rt" "rt-multi-thread" "macros" "net"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.6") (f (quote ("codec"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (k 0)))) (h "16dpcg67qbas5hiz7qlxqvw72ag0g3bp74g7z2dj7lyky8z3pb94") (f (quote (("sqlite-backend" "rusqlite/bundled" "rusqlite/chrono") ("server" "colored" "toml" "regex" "hyper/http1" "hyper/server" "hyper/runtime" "hyper/stream" "hyper-tungstenite" "lazy_static") ("default" "server" "client" "sqlite-backend") ("client" "hyper/http1" "hyper/client"))))))

(define-public crate-objtalk-0.3.0 (c (n "objtalk") (v "0.3.0") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "=3.0.0-beta.2") (f (quote ("std" "derive"))) (k 0)) (d (n "clap_derive") (r "=3.0.0-beta.2") (d #t) (k 0)) (d (n "colored") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "deflate") (r "^0.9") (d #t) (k 1)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (o #t) (k 0)) (d (n "hyper-tungstenite") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.25") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.5") (f (quote ("rt" "rt-multi-thread" "macros" "net"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.6") (f (quote ("codec"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (k 0)))) (h "02kgjdm1y33nni7byx18dvd8v7khr36bp9sb08afysg3h4jd30aa") (f (quote (("sqlite-backend" "rusqlite/bundled" "rusqlite/chrono") ("server" "colored" "toml" "regex" "hyper/http1" "hyper/server" "hyper/runtime" "hyper/stream" "hyper-tungstenite" "lazy_static") ("default" "server" "client" "sqlite-backend") ("client" "hyper/http1" "hyper/client"))))))

