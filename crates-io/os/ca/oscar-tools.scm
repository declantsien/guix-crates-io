(define-module (crates-io os ca oscar-tools) #:use-module (crates-io))

(define-public crate-oscar-tools-0.3.0 (c (n "oscar-tools") (v "0.3.0") (d (list (d (n "clap") (r "^3.0.14") (f (quote ("derive"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.22") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "oscar-io") (r "^0.1.3") (d #t) (k 0)) (d (n "oscar-io") (r "^0.1.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "runiq-lib") (r "^1.2.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.78") (d #t) (k 0)) (d (n "sha2") (r "^0.10.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.3") (d #t) (k 0)) (d (n "zstd") (r "^0.11.2") (o #t) (d #t) (k 0)))) (h "1l6capm8kixlac9idkyvpx1lgmj7kw0bsdx6amvzdpxqb8j896ax") (s 2) (e (quote (("zstd" "dep:zstd"))))))

(define-public crate-oscar-tools-0.4.0 (c (n "oscar-tools") (v "0.4.0") (d (list (d (n "clap") (r "^3.0.14") (f (quote ("derive"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.22") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "oscar-io") (r "^0.1.3") (d #t) (k 0)) (d (n "oscar-io") (r "^0.1.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "runiq-lib") (r "^1.2.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.78") (d #t) (k 0)) (d (n "sha2") (r "^0.10.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.3") (d #t) (k 0)) (d (n "zstd") (r "^0.11.2") (o #t) (d #t) (k 0)))) (h "0fb1mzzxv5hrckl30dvqcwvhc3sa0ybd56arkrki93qyrp2ifhm2") (s 2) (e (quote (("zstd" "dep:zstd"))))))

