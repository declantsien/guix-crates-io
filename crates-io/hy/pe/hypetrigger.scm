(define-module (crates-io hy pe hypetrigger) #:use-module (crates-io))

(define-public crate-hypetrigger-0.1.0 (c (n "hypetrigger") (v "0.1.0") (d (list (d (n "console_error_panic_hook") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "image") (r "^0.23.14") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "photon-rs") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("blocking"))) (o #t) (d #t) (k 0)) (d (n "tensorflow") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tesseract") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.83") (d #t) (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("CanvasRenderingContext2d" "ImageData" "HtmlCanvasElement"))) (d #t) (k 0)) (d (n "wee_alloc") (r "^0.4.2") (o #t) (d #t) (k 0)))) (h "1gmqcsvz7zahd10li1bsmdhx508isxvhmp6y6815a3r2fq67dg3v") (f (quote (("default" "photon" "tesseract" "tensorflow" "console_error_panic_hook")))) (s 2) (e (quote (("tesseract" "photon" "dep:reqwest" "dep:tesseract") ("tensorflow" "photon" "dep:tensorflow") ("photon" "dep:photon-rs"))))))

(define-public crate-hypetrigger-0.2.0 (c (n "hypetrigger") (v "0.2.0") (d (list (d (n "console_error_panic_hook") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "image") (r "^0.23.14") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "photon-rs") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("blocking"))) (o #t) (d #t) (k 0)) (d (n "tensorflow") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tesseract") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.83") (d #t) (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("CanvasRenderingContext2d" "ImageData" "HtmlCanvasElement"))) (d #t) (k 0)) (d (n "wee_alloc") (r "^0.4.2") (o #t) (d #t) (k 0)))) (h "0a4bcs93kh7c6n9mcx6hvcsynvqw5paq746zdk58l6sj4hgg1xrq") (f (quote (("wasm" "photon") ("default" "console_error_panic_hook")))) (s 2) (e (quote (("tesseract" "photon" "dep:reqwest" "dep:tesseract") ("tensorflow" "photon" "dep:tensorflow") ("photon" "dep:photon-rs"))))))

(define-public crate-hypetrigger-0.3.0 (c (n "hypetrigger") (v "0.3.0") (d (list (d (n "console_error_panic_hook") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "ffmpeg-sidecar") (r "^0.3.0") (d #t) (k 0)) (d (n "image") (r "^0.23.14") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "photon-rs") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("blocking"))) (o #t) (d #t) (k 0)) (d (n "tensorflow") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tesseract") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.83") (d #t) (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("CanvasRenderingContext2d" "ImageData" "HtmlCanvasElement"))) (d #t) (k 0)) (d (n "wee_alloc") (r "^0.4.2") (o #t) (d #t) (k 0)))) (h "0c094nn7fa15ksvih7lx9yrby6s8fb55z65v3vg2xwmb6zkyp5gl") (f (quote (("wasm" "photon") ("default" "console_error_panic_hook")))) (s 2) (e (quote (("tesseract" "photon" "dep:reqwest" "dep:tesseract") ("tensorflow" "photon" "dep:tensorflow") ("photon" "dep:photon-rs"))))))

(define-public crate-hypetrigger-0.3.1 (c (n "hypetrigger") (v "0.3.1") (d (list (d (n "console_error_panic_hook") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "ffmpeg-sidecar") (r "^0.3.0") (d #t) (k 0)) (d (n "image") (r "^0.23.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "photon-rs") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("blocking"))) (o #t) (d #t) (k 0)) (d (n "tensorflow") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tesseract") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.78") (d #t) (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("CanvasRenderingContext2d" "ImageData" "HtmlCanvasElement"))) (d #t) (k 0)) (d (n "wee_alloc") (r "^0.4.2") (o #t) (d #t) (k 0)))) (h "05f1yrq25qmfhzx65vv3l17napldrrlj26ivzwwzhh4aq6l25w5y") (f (quote (("wasm" "photon") ("default" "console_error_panic_hook")))) (s 2) (e (quote (("tesseract" "photon" "dep:reqwest" "dep:tesseract") ("tensorflow" "photon" "dep:tensorflow") ("photon" "dep:photon-rs"))))))

(define-public crate-hypetrigger-0.4.0 (c (n "hypetrigger") (v "0.4.0") (d (list (d (n "console_error_panic_hook") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "ffmpeg-sidecar") (r "^0.4") (d #t) (k 0)) (d (n "image") (r "^0.23.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "photon-rs") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("blocking"))) (o #t) (d #t) (k 0)) (d (n "tensorflow") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tesseract") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.78") (d #t) (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("CanvasRenderingContext2d" "ImageData" "HtmlCanvasElement"))) (d #t) (k 0)) (d (n "wee_alloc") (r "^0.4.2") (o #t) (d #t) (k 0)))) (h "1l0icxcskbqyjvgzn65mapyf200h5vfv1zr06rb002a2w3ns577b") (f (quote (("wasm" "photon") ("default" "console_error_panic_hook")))) (s 2) (e (quote (("tesseract" "photon" "dep:reqwest" "dep:tesseract") ("tensorflow" "photon" "dep:tensorflow") ("photon" "dep:photon-rs"))))))

(define-public crate-hypetrigger-0.4.1 (c (n "hypetrigger") (v "0.4.1") (d (list (d (n "console_error_panic_hook") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "ffmpeg-sidecar") (r "^0.4") (d #t) (k 0)) (d (n "image") (r "^0.23.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "photon-rs") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("blocking"))) (o #t) (d #t) (k 0)) (d (n "tensorflow") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tesseract") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.78") (d #t) (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("CanvasRenderingContext2d" "ImageData" "HtmlCanvasElement"))) (d #t) (k 0)) (d (n "wee_alloc") (r "^0.4.2") (o #t) (d #t) (k 0)))) (h "0ccjk1aw0jnag0626irvmpa6zhiw33w8fk1qxng6anx7jqlsqh4l") (f (quote (("wasm" "photon") ("default" "console_error_panic_hook")))) (s 2) (e (quote (("tesseract" "photon" "dep:reqwest" "dep:tesseract") ("tensorflow" "photon" "dep:tensorflow") ("photon" "dep:photon-rs"))))))

