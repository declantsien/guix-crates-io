(define-module (crates-io hy pe hyperlog_simd) #:use-module (crates-io))

(define-public crate-hyperlog_simd-0.1.0 (c (n "hyperlog_simd") (v "0.1.0") (d (list (d (n "base64") (r "^0.21.4") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "lz4") (r "^1.24.0") (o #t) (d #t) (k 0)) (d (n "nanorand") (r "^0.7.0") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.9") (f (quote ("libcore_neon" "into_bits"))) (d #t) (t "cfg(target_arch = \"aarch64\")") (k 0)) (d (n "packed_simd") (r "^0.3.9") (f (quote ("into_bits"))) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "seahash") (r "^4.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (o #t) (d #t) (k 0)))) (h "08pzllrbpswpizzfr79a0gwxxn97mc6606hmgfapiwipb7pqf951") (f (quote (("serde_support" "base64" "lz4" "serde/derive" "serde_json") ("default" "serde_support"))))))

(define-public crate-hyperlog_simd-0.1.1 (c (n "hyperlog_simd") (v "0.1.1") (d (list (d (n "base64") (r "^0.21.4") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "lz4") (r "^1.24.0") (o #t) (d #t) (k 0)) (d (n "nanorand") (r "^0.7.0") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.9") (f (quote ("libcore_neon" "into_bits"))) (d #t) (t "cfg(target_arch = \"aarch64\")") (k 0)) (d (n "packed_simd") (r "^0.3.9") (f (quote ("into_bits"))) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "seahash") (r "^4.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (o #t) (d #t) (k 0)))) (h "1gwyifv5nsph76b7vsc498xj5c3d4pbw6d7p9zfr9vn8bd7j8xir") (f (quote (("serde_support" "base64" "lz4" "serde/derive" "serde_json") ("default" "serde_support"))))))

(define-public crate-hyperlog_simd-0.1.2 (c (n "hyperlog_simd") (v "0.1.2") (d (list (d (n "base64") (r "^0.21.4") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "lz4") (r "^1.24.0") (o #t) (d #t) (k 0)) (d (n "nanorand") (r "^0.7.0") (d #t) (k 2)) (d (n "packed_simd") (r "^0.3.9") (f (quote ("libcore_neon" "into_bits"))) (d #t) (t "cfg(target_arch = \"aarch64\")") (k 0)) (d (n "packed_simd") (r "^0.3.9") (f (quote ("into_bits"))) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "seahash") (r "^4.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)))) (h "1bivb9d0sij714kl73ix37f5hwqg3yfq5y1mx0wy7r3r5qxps1ms") (f (quote (("serde_support" "base64" "lz4" "serde/derive") ("default" "serde_support"))))))

(define-public crate-hyperlog_simd-0.2.0 (c (n "hyperlog_simd") (v "0.2.0") (d (list (d (n "base64") (r "^0.21.4") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "lz4") (r "^1.24.0") (o #t) (d #t) (k 0)) (d (n "nanorand") (r "^0.7.0") (d #t) (k 2)) (d (n "packed_simd") (r "^0.3.9") (f (quote ("libcore_neon" "into_bits"))) (d #t) (t "cfg(target_arch = \"aarch64\")") (k 0)) (d (n "packed_simd") (r "^0.3.9") (f (quote ("into_bits"))) (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "seahash") (r "^4.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)))) (h "0vn60h99k35156g6rrq7kp9hafz9d6aa2ckw99d2srbx11wlifby") (f (quote (("serde_support" "base64" "lz4" "serde/derive") ("default" "serde_support"))))))

