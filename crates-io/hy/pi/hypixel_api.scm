(define-module (crates-io hy pi hypixel_api) #:use-module (crates-io))

(define-public crate-hypixel_api-0.1.0 (c (n "hypixel_api") (v "0.1.0") (d (list (d (n "chrono") (r "^0.4.19") (f (quote ("serde"))) (d #t) (k 0)) (d (n "convert_case") (r "^0.5.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.9") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.31") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1649iv16jgn515h30w99ilvn7mpradba599yq4hcdpi1ckgqig0f") (f (quote (("util") ("reply" "util") ("default" "reply"))))))

(define-public crate-hypixel_api-0.1.1 (c (n "hypixel_api") (v "0.1.1") (d (list (d (n "chrono") (r "^0.4.19") (f (quote ("serde"))) (d #t) (k 0)) (d (n "convert_case") (r "^0.5.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.9") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.31") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "07qjc08il3ghvkjccj4kvf0ac7zvhwzpdkxbka03cn7qcy59frx0") (f (quote (("util") ("reply" "util") ("default" "reply"))))))

(define-public crate-hypixel_api-0.1.2 (c (n "hypixel_api") (v "0.1.2") (d (list (d (n "chrono") (r "^0.4.19") (f (quote ("serde"))) (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.9") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.31") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1h9h0b7wzp85wa7bbyqm4gs6fzkhs58m1xjkdix14m87v39k0nr9") (f (quote (("util") ("reply" "util") ("default" "reply"))))))

