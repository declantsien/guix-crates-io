(define-module (crates-io hy pr hyprland) #:use-module (crates-io))

(define-public crate-hyprland-0.1.0 (c (n "hyprland") (v "0.1.0") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("full"))) (d #t) (k 0)))) (h "190wkga8q1ri4g5vh4hbmq6w5r3imfhxmggd2zhigh5xhzg6ld92")))

(define-public crate-hyprland-0.1.1 (c (n "hyprland") (v "0.1.1") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("full"))) (d #t) (k 0)))) (h "0mf1qwiylk03gyq14g5dlcizavkgb3c7pqjpvmr6mcgic2h2j84d")))

(define-public crate-hyprland-0.2.0 (c (n "hyprland") (v "0.2.0") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "rusty-hook") (r "^0.11.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("full"))) (d #t) (k 0)))) (h "0yysgzmrkz9va0cdxzspifd5a158yabn0q03w9i2yrm81bwjkrdj")))

(define-public crate-hyprland-0.2.1 (c (n "hyprland") (v "0.2.1") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "rusty-hook") (r "^0.11.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("full"))) (d #t) (k 0)))) (h "0jlwpwxh10gdqxmdr5rk163jlcbqlgss1l6p0n6n0ksv9ik3mq1w")))

(define-public crate-hyprland-0.2.2 (c (n "hyprland") (v "0.2.2") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "rusty-hook") (r "^0.11.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("full"))) (d #t) (k 0)))) (h "18ji406wwgihv83hss4q1jm57r5jazz5467dh2g7842lf1kmxvpy")))

(define-public crate-hyprland-0.2.3 (c (n "hyprland") (v "0.2.3") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "rusty-hook") (r "^0.11.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("full"))) (d #t) (k 0)))) (h "0m7c6v4gj5ghc1zhl4a97v4in259nda8l21yraghvs8g5ibcyd4l")))

(define-public crate-hyprland-0.2.4 (c (n "hyprland") (v "0.2.4") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "rusty-hook") (r "^0.11.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("full"))) (d #t) (k 0)))) (h "0bnbs297na9a7lfh76mg5armdzbk1rjx05ms2pll2dh4n25dsqgz")))

(define-public crate-hyprland-0.3.0-alpha.0 (c (n "hyprland") (v "0.3.0-alpha.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "0ddr59bxam1fpw254wdha85bq2bggmg93yyvfiyxs1d425mncjm0") (f (quote (("listener" "data" "dispatch") ("keyword") ("dispatch") ("default" "listener" "dispatch" "data" "keyword" "config") ("data") ("config" "dispatch" "keyword"))))))

(define-public crate-hyprland-0.3.0 (c (n "hyprland") (v "0.3.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "1h5gicrpccfrwc8qi7a83b1s1kn5ihz27aa6qdk84s2as7dd8xhg") (f (quote (("listener" "data" "dispatch") ("keyword") ("dispatch") ("default" "listener" "dispatch" "data" "keyword" "config") ("data") ("config" "dispatch" "keyword"))))))

(define-public crate-hyprland-0.3.1 (c (n "hyprland") (v "0.3.1") (d (list (d (n "async-net") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hyprland-macros") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (o #t) (d #t) (k 0)))) (h "1lr0a748mj3c51xsnpnjqwypy944lhwj9brdca9d0v3pdbil3lqr") (f (quote (("listener" "data" "dispatch") ("keyword") ("dispatch") ("default" "listener" "dispatch" "data" "keyword" "config" "ctl" "tokio") ("data") ("ctl") ("config" "dispatch" "keyword")))) (y #t) (s 2) (e (quote (("tokio" "dep:tokio") ("async-std" "dep:async-std" "dep:futures-lite") ("async-net" "dep:async-net" "dep:futures-lite"))))))

(define-public crate-hyprland-0.3.2 (c (n "hyprland") (v "0.3.2") (d (list (d (n "async-net") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hyprland-macros") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (o #t) (d #t) (k 0)))) (h "0wcm29b758wx5y23zrmf00hqvbqnvg6fnpfjpwida600kwds4ri1") (f (quote (("silent") ("listener" "data" "dispatch") ("keyword") ("dispatch") ("default" "listener" "dispatch" "data" "keyword" "config" "ctl" "tokio") ("data") ("ctl") ("config" "dispatch" "keyword")))) (s 2) (e (quote (("tokio" "dep:tokio") ("async-std" "dep:async-std" "dep:futures-lite") ("async-net" "dep:async-net" "dep:futures-lite"))))))

(define-public crate-hyprland-0.3.3 (c (n "hyprland") (v "0.3.3") (d (list (d (n "async-net") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hyprland-macros") (r "^0.3.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (o #t) (d #t) (k 0)))) (h "1b0jwgai99swl0clpcsn4zl9vwjphkpdar5zc1cly30zdvb3qpci") (f (quote (("silent") ("listener" "data" "dispatch") ("keyword") ("dispatch") ("default" "listener" "dispatch" "data" "keyword" "config" "ctl" "tokio") ("data") ("ctl") ("config" "dispatch" "keyword")))) (s 2) (e (quote (("tokio" "dep:tokio") ("async-std" "dep:async-std" "dep:futures-lite") ("async-net" "dep:async-net" "dep:futures-lite"))))))

(define-public crate-hyprland-0.3.4 (c (n "hyprland") (v "0.3.4") (d (list (d (n "async-net") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hyprland-macros") (r "^0.3.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (o #t) (d #t) (k 0)))) (h "0g7a1sdg0q5y5ys2mkiwy64vk395r0f9y9y2wc83j39fym2b11qh") (f (quote (("silent") ("listener" "data" "dispatch") ("keyword") ("dispatch") ("default" "listener" "dispatch" "data" "keyword" "config" "ctl" "tokio") ("data") ("ctl") ("config" "dispatch" "keyword")))) (s 2) (e (quote (("tokio" "dep:tokio") ("async-std" "dep:async-std" "dep:futures-lite") ("async-net" "dep:async-net" "dep:futures-lite"))))))

(define-public crate-hyprland-0.3.6 (c (n "hyprland") (v "0.3.6") (d (list (d (n "async-net") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hyprland-macros") (r "^0.3.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (o #t) (d #t) (k 0)))) (h "0ncwi2w6mkbqwr0pkb6k8l0qqbjxy21mcgqjdpsizbcrd7adc6jy") (f (quote (("silent") ("listener" "data" "dispatch") ("keyword") ("dispatch") ("default" "listener" "dispatch" "data" "keyword" "config" "ctl" "tokio") ("data") ("ctl") ("config" "dispatch" "keyword")))) (s 2) (e (quote (("tokio" "dep:tokio") ("async-std" "dep:async-std" "dep:futures-lite") ("async-net" "dep:async-net" "dep:futures-lite"))))))

(define-public crate-hyprland-0.3.7 (c (n "hyprland") (v "0.3.7") (d (list (d (n "async-net") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hyprland-macros") (r "^0.3.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (o #t) (d #t) (k 0)))) (h "0q7340dc0krablrqydz9i34lbxbvbqc2ymgicpb1n50mlx81k3ds") (f (quote (("silent") ("listener" "data" "dispatch") ("keyword") ("dispatch") ("default" "listener" "dispatch" "data" "keyword" "config" "ctl" "tokio") ("data") ("ctl") ("config" "dispatch" "keyword")))) (s 2) (e (quote (("tokio" "dep:tokio") ("async-std" "dep:async-std" "dep:futures-lite") ("async-net" "dep:async-net" "dep:futures-lite"))))))

(define-public crate-hyprland-0.3.8 (c (n "hyprland") (v "0.3.8") (d (list (d (n "async-net") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hyprland-macros") (r "^0.3.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (o #t) (d #t) (k 0)))) (h "0a6ay1cnpmj3v16hs6k65yxdg53wv438i2va5rpgjz9bk8aijhm8") (f (quote (("silent") ("listener" "data" "dispatch") ("keyword") ("dispatch") ("default" "listener" "dispatch" "data" "keyword" "config" "ctl" "tokio") ("data") ("ctl") ("config" "dispatch" "keyword")))) (s 2) (e (quote (("tokio" "dep:tokio") ("async-std" "dep:async-std" "dep:futures-lite") ("async-net" "dep:async-net" "dep:futures-lite"))))))

(define-public crate-hyprland-0.3.9 (c (n "hyprland") (v "0.3.9") (d (list (d (n "async-net") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hyprland-macros") (r "^0.3.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (o #t) (d #t) (k 0)))) (h "1f64lgvhaxa97hvyf9pfs5awxk5kly1hivkdp4ivfbbsws8sq7jv") (f (quote (("silent") ("listener" "data" "dispatch") ("keyword") ("dispatch") ("default" "listener" "dispatch" "data" "keyword" "config" "ctl" "tokio") ("data") ("ctl") ("config" "dispatch" "keyword")))) (s 2) (e (quote (("tokio" "dep:tokio") ("async-std" "dep:async-std" "dep:futures-lite") ("async-net" "dep:async-net" "dep:futures-lite"))))))

(define-public crate-hyprland-0.3.10 (c (n "hyprland") (v "0.3.10") (d (list (d (n "async-net") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hyprland-macros") (r "^0.3.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (o #t) (d #t) (k 0)))) (h "0dyrsdzyrynbslf2206qwavkajcdlanxi0zfpdmnr90fizyc2fi4") (f (quote (("silent") ("listener" "data" "dispatch") ("keyword") ("dispatch") ("default" "listener" "dispatch" "data" "keyword" "config" "ctl" "tokio") ("data") ("ctl") ("config" "dispatch" "keyword")))) (y #t) (s 2) (e (quote (("tokio" "dep:tokio") ("async-std" "dep:async-std" "dep:futures-lite") ("async-net" "dep:async-net" "dep:futures-lite"))))))

(define-public crate-hyprland-0.3.11 (c (n "hyprland") (v "0.3.11") (d (list (d (n "async-net") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hyprland-macros") (r "^0.3.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (o #t) (d #t) (k 0)))) (h "1j55skprnxbvvj6isbphbgj7vphvv6l5njdpi72f0faddz1bhhhx") (f (quote (("silent") ("listener" "data" "dispatch") ("keyword") ("dispatch") ("default" "listener" "dispatch" "data" "keyword" "config" "ctl" "tokio") ("data") ("ctl") ("config" "dispatch" "keyword")))) (s 2) (e (quote (("tokio" "dep:tokio") ("async-std" "dep:async-std" "dep:futures-lite") ("async-net" "dep:async-net" "dep:futures-lite"))))))

(define-public crate-hyprland-0.3.12 (c (n "hyprland") (v "0.3.12") (d (list (d (n "async-net") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hyprland-macros") (r "^0.3.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (o #t) (d #t) (k 0)))) (h "01pvz7bpdwj6ja410mm2flrk43x6cq1xbp11mpf1ngwzi7klmafz") (f (quote (("silent") ("listener" "data" "dispatch") ("keyword") ("dispatch") ("default" "listener" "dispatch" "data" "keyword" "config" "ctl" "tokio") ("data") ("ctl") ("config" "dispatch" "keyword")))) (s 2) (e (quote (("tokio" "dep:tokio") ("async-std" "dep:async-std" "dep:futures-lite") ("async-net" "dep:async-net" "dep:futures-lite"))))))

(define-public crate-hyprland-0.3.13 (c (n "hyprland") (v "0.3.13") (d (list (d (n "async-net") (r "^2") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hyprland-macros") (r "^0.3.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.26") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (o #t) (d #t) (k 0)))) (h "1s6xi0k93nxi4xgw09k14xxvdygwqc5nr4fk9n4m3m35q0f8yypq") (f (quote (("silent") ("listener" "data" "dispatch") ("keyword") ("dispatch") ("default" "listener" "dispatch" "data" "keyword" "config" "ctl" "tokio") ("data") ("ctl") ("config" "dispatch" "keyword")))) (s 2) (e (quote (("tokio" "dep:tokio") ("async-std" "dep:async-std" "dep:futures-lite") ("async-net" "dep:async-net" "dep:futures-lite"))))))

(define-public crate-hyprland-0.4.0-alpha.1 (c (n "hyprland") (v "0.4.0-alpha.1") (d (list (d (n "ahash") (r "^0.8") (f (quote ("std" "no-rng" "serde"))) (o #t) (k 0)) (d (n "async-net") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("display" "constructor"))) (k 0)) (d (n "futures-lite") (r "^2.3") (o #t) (k 0)) (d (n "hyprland-macros") (r "^0.4.0-alpha.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "regex") (r "^1.10") (f (quote ("std" "perf" "unicode"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-std" "io-util" "net"))) (o #t) (d #t) (k 0)))) (h "0j0ayhbdlw79rcrqz3zv1rlgdf3jlvkqww7c53ddd6s5j01wdzal") (f (quote (("unsafe-impl") ("silent") ("listener" "data" "dispatch") ("keyword") ("dispatch") ("default" "listener" "dispatch" "data" "keyword" "config" "ctl" "tokio" "ahash") ("data") ("ctl") ("config" "dispatch" "keyword")))) (s 2) (e (quote (("tokio" "dep:tokio") ("parking_lot" "dep:parking_lot" "once_cell/parking_lot" "tokio?/parking_lot") ("async-std" "dep:async-std" "dep:futures-lite") ("async-lite" "dep:async-net" "dep:futures-lite") ("ahash" "dep:ahash")))) (r "1.75.0")))

(define-public crate-hyprland-0.4.0-alpha.2 (c (n "hyprland") (v "0.4.0-alpha.2") (d (list (d (n "ahash") (r "^0.8") (f (quote ("std" "no-rng" "serde"))) (o #t) (k 0)) (d (n "async-net") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("display" "constructor"))) (k 0)) (d (n "futures-lite") (r "^2.3") (o #t) (k 0)) (d (n "hyprland-macros") (r "^0.4.0-alpha.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.19") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "regex") (r "^1.10") (f (quote ("std" "perf" "unicode"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-std" "io-util" "net"))) (o #t) (d #t) (k 0)))) (h "0xl21prdpin45iq57rp6cf4cmgy0p0fv4jvs9daz529kzc3cs9yn") (f (quote (("unsafe-impl") ("silent") ("listener" "data" "dispatch") ("keyword") ("dispatch") ("default" "listener" "dispatch" "data" "keyword" "config" "ctl" "tokio" "ahash") ("data") ("ctl") ("config" "dispatch" "keyword")))) (s 2) (e (quote (("tokio" "dep:tokio") ("parking_lot" "dep:parking_lot" "once_cell/parking_lot" "tokio?/parking_lot") ("async-std" "dep:async-std" "dep:futures-lite") ("async-lite" "dep:async-net" "dep:futures-lite") ("ahash" "dep:ahash")))) (r "1.75.0")))

