(define-module (crates-io hy dr hydra) #:use-module (crates-io))

(define-public crate-hydra-0.1.0 (c (n "hydra") (v "0.1.0") (h "1wh0a4j2bg6kij3qic5zyn5mz5pdhrbvkrnbjqndylyzyixwksja") (y #t)))

(define-public crate-hydra-0.1.1 (c (n "hydra") (v "0.1.1") (d (list (d (n "bincode") (r "^2.0.0-rc.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "flume") (r "^0.11") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("std" "sink"))) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "hydra-macros") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "pingora-timeout") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "net" "sync" "time" "macros" "signal"))) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (o #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (o #t) (d #t) (k 0)))) (h "1fgr4jlyvq7dybchb3506x2z4swngvd44asq8r26lwdsy5m52bjj") (f (quote (("default" "json" "macros" "tracing")))) (y #t) (s 2) (e (quote (("tracing" "dep:tracing" "dep:tracing-subscriber") ("macros" "dep:hydra-macros") ("json" "dep:serde_json"))))))

(define-public crate-hydra-0.1.2 (c (n "hydra") (v "0.1.2") (d (list (d (n "bincode") (r "^2.0.0-rc.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "flume") (r "^0.11") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("std" "sink"))) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "hydra-macros") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "pingora-timeout") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "net" "sync" "time" "macros" "signal"))) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (o #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (o #t) (d #t) (k 0)))) (h "0g9gy6m709k2hy2w1zvrg415i1hp8xy4zqi5aalcwccpswy4fj5s") (f (quote (("default" "json" "macros" "tracing")))) (s 2) (e (quote (("tracing" "dep:tracing" "dep:tracing-subscriber") ("macros" "dep:hydra-macros") ("json" "dep:serde_json"))))))

(define-public crate-hydra-0.1.3 (c (n "hydra") (v "0.1.3") (d (list (d (n "bincode") (r "^2.0.0-rc.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "flume") (r "^0.11") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("std" "sink"))) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "hydra-macros") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "pingora-timeout") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "net" "sync" "time" "macros" "signal"))) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (o #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (o #t) (d #t) (k 0)))) (h "1rh5y65qh1hj7swd6vnrq7hcsfzmjvjk8ymgh0h4lx0cbn4s8rvd") (f (quote (("default" "json" "macros" "tracing")))) (s 2) (e (quote (("tracing" "dep:tracing" "dep:tracing-subscriber") ("macros" "dep:hydra-macros") ("json" "dep:serde_json"))))))

(define-public crate-hydra-0.1.4 (c (n "hydra") (v "0.1.4") (d (list (d (n "bincode") (r "^2.0.0-rc.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "flume") (r "^0.11") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("std" "sink"))) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "hydra-macros") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "pingora-timeout") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "net" "sync" "time" "macros" "signal"))) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (o #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (o #t) (d #t) (k 0)))) (h "0j2bc9cbk1pdn0gfdwnzdgyqcgiix02a9kj4prw6f09bsv3lhnmy") (f (quote (("default" "json" "macros" "tracing")))) (s 2) (e (quote (("tracing" "dep:tracing" "dep:tracing-subscriber") ("macros" "dep:hydra-macros") ("json" "dep:serde_json"))))))

(define-public crate-hydra-0.1.5 (c (n "hydra") (v "0.1.5") (d (list (d (n "bincode") (r "^2.0.0-rc.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "flume") (r "^0.11") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("std" "sink"))) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "hydra-macros") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "pingora-timeout") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "net" "sync" "time" "macros" "signal"))) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (o #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (o #t) (d #t) (k 0)))) (h "0fanvmdrh0gb84xzljvgnk5ybnizdwm1wdh7dyfbfqmlakk6nidg") (f (quote (("default" "json" "macros" "tracing")))) (s 2) (e (quote (("tracing" "dep:tracing" "dep:tracing-subscriber") ("macros" "dep:hydra-macros") ("json" "dep:serde_json"))))))

(define-public crate-hydra-0.1.6 (c (n "hydra") (v "0.1.6") (d (list (d (n "bincode") (r "^2.0.0-rc.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "flume") (r "^0.11") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("std" "sink"))) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "hydra-dashmap") (r "^0.1.6") (d #t) (k 0)) (d (n "hydra-macros") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "pingora-timeout") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "net" "sync" "time" "macros" "signal"))) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (o #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (o #t) (d #t) (k 0)))) (h "0sr7gfh1nkfdikp4myjafxaz7fc10gl7nps797vls8hjv1mj57b8") (f (quote (("default" "json" "macros" "tracing")))) (s 2) (e (quote (("tracing" "dep:tracing" "dep:tracing-subscriber") ("macros" "dep:hydra-macros") ("json" "dep:serde_json"))))))

(define-public crate-hydra-0.1.7 (c (n "hydra") (v "0.1.7") (d (list (d (n "bincode") (r "^2.0.0-rc.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "flume") (r "^0.11") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("std" "sink"))) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "hydra-dashmap") (r "^0.1.7") (d #t) (k 0)) (d (n "hydra-macros") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "pingora-timeout") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "net" "sync" "time" "macros" "signal"))) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (o #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (o #t) (d #t) (k 0)))) (h "14zcznqh89f1vy8nx69031w95nl8kmwaxh2nv5bsz1kfvgfz1qp2") (f (quote (("default" "json" "macros" "tracing")))) (s 2) (e (quote (("tracing" "dep:tracing" "dep:tracing-subscriber") ("macros" "dep:hydra-macros") ("json" "dep:serde_json"))))))

(define-public crate-hydra-0.1.8 (c (n "hydra") (v "0.1.8") (d (list (d (n "bincode") (r "^2.0.0-rc.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "flume") (r "^0.11") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("std" "sink"))) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "hydra-dashmap") (r "^0.1.8") (d #t) (k 0)) (d (n "hydra-macros") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "pingora-timeout") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "net" "sync" "time" "macros" "signal"))) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (o #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (o #t) (d #t) (k 0)))) (h "06bq0nqbyciil8vgmfkgk746y2p7qpdg1f1w02jzqxi973pa4js1") (f (quote (("default" "json" "macros" "tracing")))) (s 2) (e (quote (("tracing" "dep:tracing" "dep:tracing-subscriber") ("macros" "dep:hydra-macros") ("json" "dep:serde_json"))))))

(define-public crate-hydra-0.1.9 (c (n "hydra") (v "0.1.9") (d (list (d (n "bincode") (r "^2.0.0-rc.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "flume") (r "^0.11") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("std" "sink"))) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "hydra-dashmap") (r "^0.1.9") (d #t) (k 0)) (d (n "hydra-macros") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "pingora-timeout") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "net" "sync" "time" "macros" "signal"))) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (o #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (o #t) (d #t) (k 0)))) (h "1hgmrh2sbz2ykcc66sz5vqm8983n9s8sr5y08vkdj64ijgdi0yr0") (f (quote (("default" "json" "macros" "tracing")))) (s 2) (e (quote (("tracing" "dep:tracing" "dep:tracing-subscriber") ("macros" "dep:hydra-macros") ("json" "dep:serde_json"))))))

(define-public crate-hydra-0.1.10 (c (n "hydra") (v "0.1.10") (d (list (d (n "bincode") (r "^2.0.0-rc.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "flume") (r "^0.11") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("std" "sink"))) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "hydra-dashmap") (r "^0.1.10") (d #t) (k 0)) (d (n "hydra-macros") (r "^0.1.10") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "pingora-timeout") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "net" "sync" "time" "macros" "signal"))) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (o #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (o #t) (d #t) (k 0)))) (h "14wv5pvcsgsahanvfjzpj149gqwnz8gzqs5x8rwhp6pk3fm0053p") (f (quote (("default" "json" "macros" "tracing")))) (s 2) (e (quote (("tracing" "dep:tracing" "dep:tracing-subscriber") ("macros" "dep:hydra-macros") ("json" "dep:serde_json"))))))

(define-public crate-hydra-0.1.11 (c (n "hydra") (v "0.1.11") (d (list (d (n "bincode") (r "^2.0.0-rc.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "flume") (r "^0.11") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("std" "sink"))) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "hydra-dashmap") (r "^0.1.11") (d #t) (k 0)) (d (n "hydra-macros") (r "^0.1.11") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "pingora-timeout") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "net" "sync" "time" "macros" "signal"))) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (o #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (o #t) (d #t) (k 0)))) (h "0hv31fdga3ljb4padilsmj8cv4bsyxm7cpzr6kwlhnzhmbfj50aw") (f (quote (("default" "json" "macros" "tracing")))) (s 2) (e (quote (("tracing" "dep:tracing" "dep:tracing-subscriber") ("macros" "dep:hydra-macros") ("json" "dep:serde_json"))))))

(define-public crate-hydra-0.1.12 (c (n "hydra") (v "0.1.12") (d (list (d (n "bincode") (r "^2.0.0-rc.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "flume") (r "^0.11") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("std" "sink"))) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "hydra-dashmap") (r "^0.1.12") (d #t) (k 0)) (d (n "hydra-macros") (r "^0.1.12") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "pingora-timeout") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "net" "sync" "time" "macros" "signal"))) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (o #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (o #t) (d #t) (k 0)))) (h "18sl6bl769fcyblckn6bv40j1b5bqj390jkm49c60va7wzpz181a") (f (quote (("default" "json" "macros" "tracing")))) (s 2) (e (quote (("tracing" "dep:tracing" "dep:tracing-subscriber") ("macros" "dep:hydra-macros") ("json" "dep:serde_json"))))))

(define-public crate-hydra-0.1.13 (c (n "hydra") (v "0.1.13") (d (list (d (n "bincode") (r "^2.0.0-rc.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "flume") (r "^0.11") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("std" "sink"))) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "hydra-dashmap") (r "^0.1.13") (d #t) (k 0)) (d (n "hydra-macros") (r "^0.1.13") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "pingora-timeout") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "net" "sync" "time" "macros" "signal"))) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (o #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (o #t) (d #t) (k 0)))) (h "015qbriqqvanz6xfrazh32v2dlpsainddza4vxbdr7ravd0gizm2") (f (quote (("default" "json" "macros" "tracing")))) (s 2) (e (quote (("tracing" "dep:tracing" "dep:tracing-subscriber") ("macros" "dep:hydra-macros") ("json" "dep:serde_json"))))))

(define-public crate-hydra-0.1.14 (c (n "hydra") (v "0.1.14") (d (list (d (n "bincode") (r "^2.0.0-rc.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "flume") (r "^0.11") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("std" "sink"))) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "hydra-dashmap") (r "^0.1.14") (d #t) (k 0)) (d (n "hydra-macros") (r "^0.1.14") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "pingora-timeout") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "net" "sync" "time" "macros" "signal"))) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (o #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (o #t) (d #t) (k 0)))) (h "1xwqgsxa2sxqhznl0kl08823h9h6h2p7p2dadby1c0l2blpdd4gd") (f (quote (("default" "json" "macros" "tracing")))) (y #t) (s 2) (e (quote (("tracing" "dep:tracing" "dep:tracing-subscriber") ("macros" "dep:hydra-macros") ("json" "dep:serde_json"))))))

(define-public crate-hydra-0.1.15 (c (n "hydra") (v "0.1.15") (d (list (d (n "bincode") (r "^2.0.0-rc.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "flume") (r "^0.11") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("std" "sink"))) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "hydra-dashmap") (r "^0.1.15") (d #t) (k 0)) (d (n "hydra-macros") (r "^0.1.15") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "pingora-timeout") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "net" "sync" "time" "macros" "signal"))) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (o #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (o #t) (d #t) (k 0)))) (h "0niq9j7nq2cpdjnzpbyrk9s9sv39l7fxgq29ngm43daaddx4q530") (f (quote (("default" "json" "macros" "tracing")))) (s 2) (e (quote (("tracing" "dep:tracing" "dep:tracing-subscriber") ("macros" "dep:hydra-macros") ("json" "dep:serde_json"))))))

(define-public crate-hydra-0.1.16 (c (n "hydra") (v "0.1.16") (d (list (d (n "bincode") (r "^2.0.0-rc.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "flume") (r "^0.11") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("std" "sink"))) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "hydra-dashmap") (r "^0.1.16") (d #t) (k 0)) (d (n "hydra-macros") (r "^0.1.16") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "pingora-timeout") (r "^0.2") (d #t) (k 0)) (d (n "rmp-serde") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "std"))) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "net" "sync" "time" "macros" "signal"))) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (o #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (o #t) (d #t) (k 0)))) (h "0ml3da9mmjsar75ga6wss15zkdhccg6ip9i7x40qiawmrgab47zi") (f (quote (("default" "macros" "tracing")))) (s 2) (e (quote (("tracing" "dep:tracing" "dep:tracing-subscriber") ("macros" "dep:hydra-macros"))))))

(define-public crate-hydra-0.1.17 (c (n "hydra") (v "0.1.17") (d (list (d (n "bincode") (r "^2.0.0-rc.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "flume") (r "^0.11") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("std" "sink"))) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "hydra-dashmap") (r "^0.1.17") (d #t) (k 0)) (d (n "hydra-macros") (r "^0.1.17") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "pingora-timeout") (r "^0.2") (d #t) (k 0)) (d (n "rmp-serde") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "std"))) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "net" "sync" "time" "macros" "signal"))) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (o #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (o #t) (d #t) (k 0)))) (h "1yyqxklywksw9gyvi9pvwjlfnlmxl6m1rpqhdx98vw5zlg9yvkzg") (f (quote (("default" "macros" "tracing")))) (s 2) (e (quote (("tracing" "dep:tracing" "dep:tracing-subscriber") ("macros" "dep:hydra-macros"))))))

(define-public crate-hydra-0.1.18 (c (n "hydra") (v "0.1.18") (d (list (d (n "bincode") (r "^2.0.0-rc.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "flume") (r "^0.11") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("std" "sink"))) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "hydra-dashmap") (r "^0.1.18") (d #t) (k 0)) (d (n "hydra-macros") (r "^0.1.18") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "pingora-timeout") (r "^0.2") (d #t) (k 0)) (d (n "rmp-serde") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "std"))) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "net" "sync" "time" "macros" "signal"))) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (o #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (o #t) (d #t) (k 0)))) (h "1bkcbd4fwfjijsxc2x1sgwmpn01bxmqp451fnhffcasggm533k5b") (f (quote (("default" "macros" "tracing")))) (s 2) (e (quote (("tracing" "dep:tracing" "dep:tracing-subscriber") ("macros" "dep:hydra-macros"))))))

(define-public crate-hydra-0.1.19 (c (n "hydra") (v "0.1.19") (d (list (d (n "bincode") (r "^2.0.0-rc.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "flume") (r "^0.11") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("std" "sink"))) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "hydra-dashmap") (r "^0.1.19") (d #t) (k 0)) (d (n "hydra-macros") (r "^0.1.19") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "pingora-timeout") (r "^0.2") (d #t) (k 0)) (d (n "rmp-serde") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "std"))) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "net" "sync" "time" "macros" "signal"))) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (o #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (o #t) (d #t) (k 0)))) (h "1nzbm9n6p5ja0idbdssv9zydnl7h8dzqg8clfjycz2li9f2zwj1q") (f (quote (("default" "macros" "tracing")))) (s 2) (e (quote (("tracing" "dep:tracing" "dep:tracing-subscriber") ("macros" "dep:hydra-macros"))))))

(define-public crate-hydra-0.1.20 (c (n "hydra") (v "0.1.20") (d (list (d (n "bincode") (r "^2.0.0-rc.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "flume") (r "^0.11") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("std" "sink"))) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "hydra-dashmap") (r "^0.1.20") (d #t) (k 0)) (d (n "hydra-macros") (r "^0.1.20") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "pingora-timeout") (r "^0.2") (d #t) (k 0)) (d (n "rmp-serde") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "std"))) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "net" "sync" "time" "macros" "signal"))) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (o #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (o #t) (d #t) (k 0)))) (h "17bgmwac94c76icc8vg248abnabyrx9xnhym01phr8rxq0dykbzi") (f (quote (("default" "macros" "tracing")))) (s 2) (e (quote (("tracing" "dep:tracing" "dep:tracing-subscriber") ("macros" "dep:hydra-macros"))))))

(define-public crate-hydra-0.1.21 (c (n "hydra") (v "0.1.21") (d (list (d (n "bincode") (r "^2.0.0-rc.3") (d #t) (k 0)) (d (n "bitflags") (r "^2.4") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "flume") (r "^0.11") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("std" "sink"))) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "hydra-dashmap") (r "^0.1.21") (d #t) (k 0)) (d (n "hydra-macros") (r "^0.1.21") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "pingora-timeout") (r "^0.2") (d #t) (k 0)) (d (n "rmp-serde") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "std"))) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "net" "sync" "time" "macros" "signal"))) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (o #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (o #t) (d #t) (k 0)))) (h "18ymh0673m3jh23y08m7g28ny9g49xnsvnwbyyp8cnbaly8ax626") (f (quote (("default" "macros" "tracing")))) (s 2) (e (quote (("tracing" "dep:tracing" "dep:tracing-subscriber") ("macros" "dep:hydra-macros"))))))

