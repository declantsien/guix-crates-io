(define-module (crates-io hy dr hydra-dx-math) #:use-module (crates-io))

(define-public crate-hydra-dx-math-1.0.0 (c (n "hydra-dx-math") (v "1.0.0") (d (list (d (n "primitive-types") (r "^0.8.0") (k 0)))) (h "0cagc1rnpvyxlad2gjszxgyrcdicvr6glyy37n57p0r53s2rc7zg") (f (quote (("std") ("default" "std"))))))

(define-public crate-hydra-dx-math-2.0.0 (c (n "hydra-dx-math") (v "2.0.0") (d (list (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (k 0)) (d (n "primitive-types") (r "^0.8.0") (k 0)))) (h "1q40pkyba2dp2k6cvyf1afn9g684z5j90x24dwnc1fcsyls6hyax") (f (quote (("std") ("default" "std"))))))

(define-public crate-hydra-dx-math-3.0.0 (c (n "hydra-dx-math") (v "3.0.0") (d (list (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (k 0)) (d (n "primitive-types") (r "^0.8.0") (k 0)))) (h "06wanha6zp6mlfjhxhid6dxnfwdxdixpidk4pmi3026alwjhdnl9") (f (quote (("std") ("default" "std"))))))

(define-public crate-hydra-dx-math-3.1.0 (c (n "hydra-dx-math") (v "3.1.0") (d (list (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (k 0)) (d (n "primitive-types") (r "^0.8.0") (k 0)))) (h "07arsqhcw43q626k7sa3njmh72b1ig02p56fvygn3j7y7j9zx8xn") (f (quote (("std") ("default" "std"))))))

(define-public crate-hydra-dx-math-3.2.0 (c (n "hydra-dx-math") (v "3.2.0") (d (list (d (n "approx") (r "^0.3.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "fixed") (r "^1.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (k 0)) (d (n "primitive-types") (r "^0.8.0") (k 0)) (d (n "rand") (r "^0.7") (k 2)) (d (n "rand_xoshiro") (r "^0.4") (d #t) (k 2)))) (h "19vplnd3ycfa101xcd48fsz4ki4i1yp873ynd54xcjq4x3gq9lw0") (f (quote (("std") ("p12" "lazy_static/spin_no_std") ("default" "std"))))))

(define-public crate-hydra-dx-math-3.3.0 (c (n "hydra-dx-math") (v "3.3.0") (d (list (d (n "approx") (r "^0.3.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "fixed") (r "^1.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (k 0)) (d (n "primitive-types") (r "^0.8.0") (k 0)) (d (n "rand") (r "^0.7") (k 2)) (d (n "rand_xoshiro") (r "^0.4") (d #t) (k 2)))) (h "06jmvkk3ckipd2nxpnsm45jmza48q7xzp0y0f9pfzigyzy58hgjx") (f (quote (("std") ("p12" "lazy_static/spin_no_std") ("default"))))))

(define-public crate-hydra-dx-math-3.4.0 (c (n "hydra-dx-math") (v "3.4.0") (d (list (d (n "approx") (r "^0.3.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "fixed") (r "^1.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (k 0)) (d (n "primitive-types") (r "^0.8.0") (k 0)) (d (n "rand") (r "^0.7") (k 2)) (d (n "rand_xoshiro") (r "^0.4") (d #t) (k 2)))) (h "0ixa1vj50pwycvs0kg9r91inczqkha48mr774vna34l3mdy2yawr") (f (quote (("std") ("p12" "lazy_static/spin_no_std") ("default"))))))

(define-public crate-hydra-dx-math-4.0.0 (c (n "hydra-dx-math") (v "4.0.0") (d (list (d (n "approx") (r "^0.3.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "fixed") (r "^1.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (k 0)) (d (n "primitive-types") (r "^0.8.0") (k 0)) (d (n "rand") (r "^0.7") (k 2)) (d (n "rand_xoshiro") (r "^0.4") (d #t) (k 2)))) (h "0maqarxxlg18gjldawcfrbccv73hs1fkd5jkfb3llcvwa1jnb3nq") (f (quote (("std") ("p12" "lazy_static/spin_no_std") ("default"))))))

(define-public crate-hydra-dx-math-4.1.0 (c (n "hydra-dx-math") (v "4.1.0") (d (list (d (n "approx") (r "^0.3.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "fixed") (r "^1.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (k 0)) (d (n "primitive-types") (r "^0.8.0") (k 0)) (d (n "rand") (r "^0.7") (k 2)) (d (n "rand_xoshiro") (r "^0.4") (d #t) (k 2)))) (h "179mav0g8d1fi936rmgr1szc704jh87dfqplhy34ai57mj14lgxq") (f (quote (("std") ("p12" "lazy_static/spin_no_std") ("default"))))))

(define-public crate-hydra-dx-math-4.1.1 (c (n "hydra-dx-math") (v "4.1.1") (d (list (d (n "approx") (r "^0.3.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "fixed") (r "^1.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (k 0)) (d (n "primitive-types") (r "^0.8.0") (k 0)) (d (n "rand") (r "^0.7") (k 2)) (d (n "rand_xoshiro") (r "^0.4") (d #t) (k 2)))) (h "0zc4bk3gb48apb4id82ymjnzbrvs1gj1gd5d8qkk4nfp9cryw2a0") (f (quote (("std") ("p12" "lazy_static/spin_no_std") ("default"))))))

(define-public crate-hydra-dx-math-4.4.1 (c (n "hydra-dx-math") (v "4.4.1") (d (list (d (n "approx") (r "^0.3.0") (d #t) (k 2)) (d (n "codec") (r "^2.3.1") (f (quote ("derive" "max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "fixed") (r "^1.9.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (k 0)) (d (n "primitive-types") (r "^0.8.0") (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (k 2)) (d (n "rand_xoshiro") (r "^0.4") (d #t) (k 2)) (d (n "sp-arithmetic") (r "^4.0.0") (k 0)))) (h "16nfgsqq1rrlr7lnni5m4yl4qgdz6bqam4lycvlqh1ifg7s2jd1w") (f (quote (("std") ("default"))))))

(define-public crate-hydra-dx-math-4.4.2 (c (n "hydra-dx-math") (v "4.4.2") (d (list (d (n "approx") (r "^0.3.0") (d #t) (k 2)) (d (n "codec") (r "^2.3.1") (f (quote ("derive" "max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "fixed") (r "^1.9.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (k 0)) (d (n "primitive-types") (r "^0.8.0") (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (k 2)) (d (n "rand_xoshiro") (r "^0.4") (d #t) (k 2)) (d (n "sp-arithmetic") (r "^4.0.0") (k 0)))) (h "1xvh49bhxac2rfsd8h1n90wg0hbivhi6nqabsi536rdv7gqjkald") (f (quote (("std") ("default"))))))

(define-public crate-hydra-dx-math-4.4.3 (c (n "hydra-dx-math") (v "4.4.3") (d (list (d (n "approx") (r "^0.3.0") (d #t) (k 2)) (d (n "codec") (r "^2.3.1") (f (quote ("derive" "max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "fixed") (r "^1.9.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (k 0)) (d (n "primitive-types") (r "^0.8.0") (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (k 2)) (d (n "rand_xoshiro") (r "^0.4") (d #t) (k 2)) (d (n "sp-arithmetic") (r "^4.0.0") (k 0)))) (h "0479p3h0pcn0277481c1qdbin5l52iyws17qqkngdbg9jdrv4ifi") (f (quote (("std") ("default"))))))

