(define-module (crates-io hy pa hypar) #:use-module (crates-io))

(define-public crate-hypar-1.0.0 (c (n "hypar") (v "1.0.0") (d (list (d (n "asynchronous-codec") (r "^0.6") (d #t) (k 0)) (d (n "bimap") (r "^0.6") (d #t) (k 0)) (d (n "bytes") (r "^1.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "libp2p") (r "^0.50") (f (quote ("serde" "yamux" "noise" "secp256k1" "dns" "tcp" "tokio"))) (k 0)) (d (n "metrics") (r "^0.21") (d #t) (k 0)) (d (n "multihash") (r "^0.17") (f (quote ("serde-codec"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rmp-serde") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.22") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (f (quote ("asynchronous_codec"))) (d #t) (k 0)))) (h "03wiwqzsb78sff53xg3rbnfmm6a97yyvra3xcnh5bkwqv65gfdjs") (y #t) (r "1.65")))

(define-public crate-hypar-1.0.1 (c (n "hypar") (v "1.0.1") (d (list (d (n "asynchronous-codec") (r "^0.6") (d #t) (k 0)) (d (n "bimap") (r "^0.6") (d #t) (k 0)) (d (n "bytes") (r "^1.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "libp2p") (r "^0.50") (f (quote ("serde" "yamux" "noise" "secp256k1" "dns" "tcp" "tokio"))) (k 0)) (d (n "metrics") (r "^0.21") (d #t) (k 0)) (d (n "multihash") (r "^0.17") (f (quote ("serde-codec"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rmp-serde") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.22") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (f (quote ("asynchronous_codec"))) (d #t) (k 0)))) (h "0jfkfp62rbnrzda9f84vjsn7n4rjn3bvnm3q6p3g5kia1dxwhfy6") (y #t) (r "1.65")))

(define-public crate-hypar-1.0.2 (c (n "hypar") (v "1.0.2") (d (list (d (n "asynchronous-codec") (r "^0.6") (d #t) (k 0)) (d (n "bimap") (r "^0.6") (d #t) (k 0)) (d (n "bytes") (r "^1.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "libp2p") (r "^0.50") (f (quote ("serde" "yamux" "noise" "secp256k1" "dns" "tcp" "tokio"))) (k 0)) (d (n "metrics") (r "^0.21") (d #t) (k 0)) (d (n "multihash") (r "^0.17") (f (quote ("serde-codec"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rmp-serde") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.22") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (f (quote ("asynchronous_codec"))) (d #t) (k 0)))) (h "11sqs5pqx6bhgmw8jv2xxlhhq5zr5b2mr9vr0cij7s5hq27q35sk") (y #t) (r "1.65")))

(define-public crate-hypar-1.0.3 (c (n "hypar") (v "1.0.3") (d (list (d (n "asynchronous-codec") (r "^0.6") (d #t) (k 0)) (d (n "bimap") (r "^0.6") (d #t) (k 0)) (d (n "bytes") (r "^1.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "libp2p") (r "^0.50") (f (quote ("serde" "yamux" "noise" "secp256k1" "dns" "tcp" "tokio"))) (k 0)) (d (n "metrics") (r "^0.21") (d #t) (k 0)) (d (n "multihash") (r "^0.17") (f (quote ("serde-codec"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rmp-serde") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.22") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (f (quote ("asynchronous_codec"))) (d #t) (k 0)))) (h "02lr8sbkmvh9kajfk8d18cj9h8bsx6790d7q46c72ac0189c0j27") (r "1.65")))

