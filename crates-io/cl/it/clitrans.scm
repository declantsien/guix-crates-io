(define-module (crates-io cl it clitrans) #:use-module (crates-io))

(define-public crate-clitrans-0.2.0 (c (n "clitrans") (v "0.2.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "gzip"))) (d #t) (k 0)) (d (n "rodio") (r "^0.13") (d #t) (k 0)) (d (n "scraper") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (f (quote ("wrap_help" "color"))) (k 0)) (d (n "structopt") (r "^0.3") (f (quote ("wrap_help" "color"))) (k 1)) (d (n "tokio") (r "^1.1") (f (quote ("full"))) (d #t) (k 0)))) (h "073gy7wa42jn9vqhbkb783ixvnmwr9dmr8gk73wn2l1jyvzalgzw")))

(define-public crate-clitrans-0.3.0 (c (n "clitrans") (v "0.3.0") (d (list (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "isahc") (r "^1.1") (f (quote ("text-decoding"))) (t "cfg(not(target_env = \"musl\"))") (k 0)) (d (n "isahc") (r "^1.1") (f (quote ("text-decoding" "static-ssl"))) (t "cfg(target_env = \"musl\")") (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "rodio") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "scraper") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (f (quote ("wrap_help" "color"))) (k 0)) (d (n "structopt") (r "^0.3") (f (quote ("wrap_help"))) (k 1)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "0blv7gvv4zqg8rr9zlxb3w6gijka8nxq25hpry3xp9zy7d0827aa") (f (quote (("audio" "rodio"))))))

(define-public crate-clitrans-0.3.1 (c (n "clitrans") (v "0.3.1") (d (list (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 1)) (d (n "isahc") (r "^1.1") (f (quote ("text-decoding"))) (t "cfg(not(target_env = \"musl\"))") (k 0)) (d (n "isahc") (r "^1.1") (f (quote ("text-decoding" "static-ssl"))) (t "cfg(target_env = \"musl\")") (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "rodio") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "scraper") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 1)) (d (n "structopt") (r "^0.3") (f (quote ("wrap_help" "color"))) (k 0)) (d (n "structopt") (r "^0.3") (f (quote ("wrap_help"))) (k 1)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "06l8340ql4vg5yrpjyvqrrp99b3s9qmgj5i0y1zv8izkffwa3sba") (f (quote (("audio" "rodio"))))))

(define-public crate-clitrans-0.3.2 (c (n "clitrans") (v "0.3.2") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 1)) (d (n "isahc") (r "^1.1") (f (quote ("text-decoding"))) (t "cfg(not(target_env = \"musl\"))") (k 0)) (d (n "isahc") (r "^1.1") (f (quote ("text-decoding" "static-ssl"))) (t "cfg(target_env = \"musl\")") (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "rodio") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "scraper") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 1)) (d (n "structopt") (r "^0.3") (f (quote ("wrap_help" "color"))) (k 0)) (d (n "structopt") (r "^0.3") (f (quote ("wrap_help"))) (k 1)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "0jd18h4jwnh1r8g4nfq0wy9di1685fcw74prs2bjvanwkm38skhx") (f (quote (("full" "audio") ("default" "full") ("audio" "rodio"))))))

(define-public crate-clitrans-0.3.3 (c (n "clitrans") (v "0.3.3") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "isahc") (r "^1.1") (f (quote ("text-decoding"))) (t "cfg(not(target_env = \"musl\"))") (k 0)) (d (n "isahc") (r "^1.1") (f (quote ("text-decoding" "static-ssl"))) (t "cfg(target_env = \"musl\")") (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1.0.9") (d #t) (k 1)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "rodio") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "scraper") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 1)) (d (n "structopt") (r "^0.3") (f (quote ("wrap_help" "color"))) (k 0)) (d (n "structopt") (r "^0.3") (f (quote ("wrap_help"))) (k 1)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "xshell") (r "^0.1.9") (d #t) (k 1)))) (h "0xrjdg7lmwblyppnc875ymsjnvlvim9lwyw1cm6gz0b310h083kc") (f (quote (("full" "audio") ("default" "full") ("audio" "rodio"))))))

(define-public crate-clitrans-0.3.4 (c (n "clitrans") (v "0.3.4") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "isahc") (r "^1.1") (f (quote ("text-decoding"))) (t "cfg(not(target_env = \"musl\"))") (k 0)) (d (n "isahc") (r "^1.1") (f (quote ("text-decoding" "static-ssl"))) (t "cfg(target_env = \"musl\")") (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1.0.9") (d #t) (k 1)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "rodio") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "scraper") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 1)) (d (n "structopt") (r "^0.3") (f (quote ("wrap_help" "color"))) (k 0)) (d (n "structopt") (r "^0.3") (f (quote ("wrap_help"))) (k 1)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "xshell") (r "^0.1.9") (d #t) (k 1)))) (h "09aj37izd936w3zn2j6960s2sgb0h5lhaq2s3nid8wi2fd4gdydf") (f (quote (("full" "audio") ("default" "full") ("audio" "rodio"))))))

(define-public crate-clitrans-0.3.5 (c (n "clitrans") (v "0.3.5") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "isahc") (r "^1.1") (f (quote ("text-decoding"))) (t "cfg(not(target_env = \"musl\"))") (k 0)) (d (n "isahc") (r "^1.1") (f (quote ("text-decoding" "static-ssl"))) (t "cfg(target_env = \"musl\")") (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1.0.9") (d #t) (k 1)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "rodio") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "rustyline") (r "^8.0.0") (d #t) (k 0)) (d (n "scraper") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (d #t) (k 1)) (d (n "structopt") (r "^0.3") (f (quote ("wrap_help" "color"))) (k 0)) (d (n "structopt") (r "^0.3") (f (quote ("wrap_help"))) (k 1)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "xshell") (r "^0.1.9") (d #t) (k 1)))) (h "03y1p49952zr7qkqs9hiymfykn5l6azkxzqabqb348nkgmf7sjgs") (f (quote (("full" "audio") ("default" "full") ("audio" "rodio"))))))

