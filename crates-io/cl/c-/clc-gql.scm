(define-module (crates-io cl c- clc-gql) #:use-module (crates-io))

(define-public crate-clc-gql-0.1.0 (c (n "clc-gql") (v "0.1.0") (d (list (d (n "async-graphql") (r "^3.0.37") (d #t) (k 0)) (d (n "async-graphql-axum") (r "^3.0.37") (d #t) (k 0)) (d (n "axum") (r "^0.4") (f (quote ("headers" "http1" "http2" "tower-log"))) (d #t) (k 0)) (d (n "clap") (r "^3.1.6") (f (quote ("derive" "env" "wrap_help"))) (d #t) (k 0)) (d (n "clc-engine") (r "^0.1.4") (d #t) (k 0)) (d (n "redis") (r "^0.21.5") (f (quote ("tokio-comp"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.10") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("signal" "rt" "rt-multi-thread" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("signal" "rt" "rt-multi-thread" "macros" "test-util" "sync"))) (d #t) (k 2)) (d (n "tower") (r "^0.4.12") (d #t) (k 0)) (d (n "tower-http") (r "^0.2.5") (f (quote ("trace"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.1") (f (quote ("env-filter" "local-time"))) (d #t) (k 0)))) (h "0w130sf8671a1izfrq99pcldjf8ikf75r1dn6cmbnim8hpwn4rj9") (f (quote (("default") ("cache" "redis"))))))

