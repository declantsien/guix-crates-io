(define-module (crates-io cl ia clia-turn) #:use-module (crates-io))

(define-public crate-clia-turn-0.5.4 (c (n "clia-turn") (v "0.5.4") (d (list (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 2)) (d (n "clap") (r "^3.2.6") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "stun") (r "^0.4.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.0") (d #t) (k 2)) (d (n "util") (r "^0.5.4") (f (quote ("conn" "vnet"))) (k 0) (p "webrtc-util")))) (h "13jjj66qdwyzwi42yd9scndwx0gdn6jzgrcljn3k8f2s0cipj5s9")))

(define-public crate-clia-turn-0.5.5 (c (n "clia-turn") (v "0.5.5") (d (list (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 2)) (d (n "clap") (r "^3.2.6") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "stun") (r "^0.4.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.0") (d #t) (k 2)) (d (n "util") (r "^0.5.4") (f (quote ("conn" "vnet"))) (k 0) (p "webrtc-util")))) (h "0g5x36nh14a36wgmyyl9d5yzhy2axdzzzpgz0q64624c434apdhf")))

(define-public crate-clia-turn-0.5.6 (c (n "clia-turn") (v "0.5.6") (d (list (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 2)) (d (n "clap") (r "^3.2.6") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "stun") (r "^0.4.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.0") (d #t) (k 2)) (d (n "util") (r "^0.5.4") (f (quote ("conn" "vnet"))) (k 0) (p "webrtc-util")))) (h "0jv22h0n18qw93qbdnrvvbrl1z5xjck7llv5k24qba0rfzyf9p74")))

(define-public crate-clia-turn-0.6.0 (c (n "clia-turn") (v "0.6.0") (d (list (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 2)) (d (n "clap") (r "^3.2.6") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "md-5") (r "^0.10.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "stun") (r "^0.4.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.0") (d #t) (k 2)) (d (n "util") (r "^0.6.0") (f (quote ("conn" "vnet"))) (k 0) (p "webrtc-util")))) (h "13jj3svpjlkl5x2h1prhwbzp8ar361q0fh9mbq9f7bxzn8h75scy") (f (quote (("metrics")))) (r "1.57.0")))

(define-public crate-clia-turn-0.6.1 (c (n "clia-turn") (v "0.6.1") (d (list (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 2)) (d (n "clap") (r "^3.2.6") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "md-5") (r "^0.10.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "stun") (r "^0.4.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.0") (d #t) (k 2)) (d (n "util") (r "^0.6.0") (f (quote ("conn" "vnet"))) (k 0) (p "webrtc-util")))) (h "1ip3prlfs7dv07yik4ybdp440fbbqmcnlsphjlvn0bpn14ycvzb6") (f (quote (("metrics")))) (r "1.57.0")))

(define-public crate-clia-turn-0.6.2 (c (n "clia-turn") (v "0.6.2") (d (list (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 2)) (d (n "clap") (r "^3.2.6") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "md-5") (r "^0.10.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "stun") (r "^0.4.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.0") (d #t) (k 2)) (d (n "util") (r "^0.7.0") (f (quote ("conn" "vnet"))) (k 0) (p "webrtc-util")))) (h "0ycg4dc9j6w4pz5l1cm5hb607gav0jq03vv2im0ymxzpl2hd9l4w") (f (quote (("metrics")))) (r "1.60.0")))

(define-public crate-clia-turn-0.7.1 (c (n "clia-turn") (v "0.7.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "chrono") (r "^0.4.28") (d #t) (k 2)) (d (n "clap") (r "^3") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "ring") (r "^0.17") (d #t) (k 0)) (d (n "stun") (r "^0.5.1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (d #t) (k 0)) (d (n "util") (r "^0.8.1") (f (quote ("conn" "vnet"))) (k 0) (p "webrtc-util")))) (h "0jmpw9vwf3bsmk00mh5v10hnsl3yihxgxzbjdrhnjr8l1xjd8szh") (f (quote (("metrics"))))))

