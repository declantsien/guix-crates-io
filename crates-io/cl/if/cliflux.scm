(define-module (crates-io cl if cliflux) #:use-module (crates-io))

(define-public crate-cliflux-1.0.0 (c (n "cliflux") (v "1.0.0") (d (list (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "html2text") (r "^0.4.5") (f (quote ("ansi_colours"))) (d #t) (k 0)) (d (n "open") (r "^3.2.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "stringreader") (r "^0.1.1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.7.2") (d #t) (k 0)) (d (n "tui-realm-stdlib") (r "^1.2.0") (d #t) (k 0)) (d (n "tuirealm") (r "^1.8.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.10.1") (d #t) (k 0)) (d (n "xdg") (r "^2.4.1") (d #t) (k 0)))) (h "0zfmczjg4x3g1s7pvxsqzzdm9cb958fvlk15dqghjrm41j854qz7")))

(define-public crate-cliflux-1.0.1 (c (n "cliflux") (v "1.0.1") (d (list (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "html2text") (r "^0.4.5") (f (quote ("ansi_colours"))) (d #t) (k 0)) (d (n "open") (r "^3.2.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "stringreader") (r "^0.1.1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.7.2") (d #t) (k 0)) (d (n "tui-realm-stdlib") (r "^1.2.0") (d #t) (k 0)) (d (n "tuirealm") (r "^1.8.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.10.1") (d #t) (k 0)) (d (n "xdg") (r "^2.4.1") (d #t) (k 0)))) (h "0yxz81ff4i4fqgvc9b7pjap971g8a2kpgf5sdip7599m14mk24aq")))

(define-public crate-cliflux-1.1.0 (c (n "cliflux") (v "1.1.0") (d (list (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "html2text") (r "^0.4.5") (f (quote ("ansi_colours"))) (d #t) (k 0)) (d (n "open") (r "^3.2.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "stringreader") (r "^0.1.1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.7.2") (d #t) (k 0)) (d (n "tui-realm-stdlib") (r "^1.2.0") (d #t) (k 0)) (d (n "tuirealm") (r "^1.8.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.10.1") (d #t) (k 0)))) (h "1dzrb8ipqk82am5ms93zajhcz3vni089p27kfs1bzvffpk7il7qd")))

(define-public crate-cliflux-1.2.0 (c (n "cliflux") (v "1.2.0") (d (list (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "html2text") (r "^0.5.0") (f (quote ("ansi_colours"))) (d #t) (k 0)) (d (n "open") (r "^3.2.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "stringreader") (r "^0.1.1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.7.2") (d #t) (k 0)) (d (n "tui-realm-stdlib") (r "^1.2.0") (d #t) (k 0)) (d (n "tuirealm") (r "^1.8.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.10.1") (d #t) (k 0)))) (h "1fnkmwai5l08vm4xlqd5ihgmyf5c3ig448yfxs0s74kxzd48alb4")))

(define-public crate-cliflux-1.3.0 (c (n "cliflux") (v "1.3.0") (d (list (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "html2text") (r "^0.5.0") (f (quote ("ansi_colours"))) (d #t) (k 0)) (d (n "open") (r "^3.2.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "stringreader") (r "^0.1.1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.7.2") (d #t) (k 0)) (d (n "tui-realm-stdlib") (r "^1.2.0") (d #t) (k 0)) (d (n "tuirealm") (r "^1.8.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.10.1") (d #t) (k 0)))) (h "0fwhrid28r4khbfnm1ca84rhxnf8bvd7n5kp9056fv051mh1pi63")))

(define-public crate-cliflux-1.3.1 (c (n "cliflux") (v "1.3.1") (d (list (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "html2text") (r "^0.5.0") (f (quote ("ansi_colours"))) (d #t) (k 0)) (d (n "open") (r "^3.2.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "stringreader") (r "^0.1.1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.7.2") (d #t) (k 0)) (d (n "tui-realm-stdlib") (r "^1.2.0") (d #t) (k 0)) (d (n "tuirealm") (r "^1.8.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.10.1") (d #t) (k 0)))) (h "0g11r3wq3bg02h16hc4ikfv6k4idlvciys6waazks97vvn80mpm2")))

(define-public crate-cliflux-1.3.2 (c (n "cliflux") (v "1.3.2") (d (list (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "html2text") (r "^0.5.0") (f (quote ("ansi_colours"))) (d #t) (k 0)) (d (n "open") (r "^3.2.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "stringreader") (r "^0.1.1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.7.2") (d #t) (k 0)) (d (n "tui-realm-stdlib") (r "^1.2.0") (d #t) (k 0)) (d (n "tuirealm") (r "^1.8.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.10.1") (d #t) (k 0)))) (h "1p5g0gh4jkfpipddm1z7vhkjix62v8r8swmdj48wi2j4bk60p94y")))

(define-public crate-cliflux-1.3.3 (c (n "cliflux") (v "1.3.3") (d (list (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "html2text") (r "^0.5.0") (f (quote ("ansi_colours"))) (d #t) (k 0)) (d (n "open") (r "^3.2.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "stringreader") (r "^0.1.1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.7.2") (d #t) (k 0)) (d (n "tui-realm-stdlib") (r "^1.2.0") (d #t) (k 0)) (d (n "tuirealm") (r "^1.8.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.10.1") (d #t) (k 0)))) (h "0n5vylw8gd64jy8agvpcpf5vw31rjz9i0d022xdkkhvdc25rxjkv")))

(define-public crate-cliflux-1.4.0 (c (n "cliflux") (v "1.4.0") (d (list (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "html2text") (r "^0.5.0") (f (quote ("ansi_colours"))) (d #t) (k 0)) (d (n "open") (r "^3.2.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "stringreader") (r "^0.1.1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.7.2") (d #t) (k 0)) (d (n "tui-realm-stdlib") (r "^1.2.0") (d #t) (k 0)) (d (n "tuirealm") (r "^1.8.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.10.1") (d #t) (k 0)))) (h "0ah2j7ilhrdz2rlvrk6xf7gazdiy8cgyyas7crrqrigwkrsjx5sz")))

(define-public crate-cliflux-1.4.1 (c (n "cliflux") (v "1.4.1") (d (list (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "html2text") (r "^0.5.0") (f (quote ("ansi_colours"))) (d #t) (k 0)) (d (n "open") (r "^3.2.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "stringreader") (r "^0.1.1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.7.2") (d #t) (k 0)) (d (n "tui-realm-stdlib") (r "^1.2.0") (d #t) (k 0)) (d (n "tuirealm") (r "^1.8.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.10.1") (d #t) (k 0)))) (h "1984r06fml5cigigp2zq2z5hkmvlg7ysjq8waaxr88xisz8lc5y9")))

(define-public crate-cliflux-1.4.2 (c (n "cliflux") (v "1.4.2") (d (list (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "html2text") (r "^0.5.0") (f (quote ("ansi_colours"))) (d #t) (k 0)) (d (n "open") (r "^3.2.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "stringreader") (r "^0.1.1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.7.2") (d #t) (k 0)) (d (n "tui-realm-stdlib") (r "^1.3.2") (d #t) (k 0)) (d (n "tuirealm") (r "^1.9.2") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.10.1") (d #t) (k 0)))) (h "1z8bc0xw6wn56zanvln6r93p7bqjp1n0sif7awrm6crhk359m6fh")))

(define-public crate-cliflux-1.4.3 (c (n "cliflux") (v "1.4.3") (d (list (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "html2text") (r "^0.5.0") (f (quote ("ansi_colours"))) (d #t) (k 0)) (d (n "open") (r "^3.2.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "stringreader") (r "^0.1.1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.7.2") (d #t) (k 0)) (d (n "tui-realm-stdlib") (r "^1.3.2") (d #t) (k 0)) (d (n "tuirealm") (r "^1.9.2") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.10.1") (d #t) (k 0)))) (h "11srincf9n7w3jzf242yk3qkffvz9z0z1439klmk53y241x6x26r")))

