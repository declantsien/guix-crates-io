(define-module (crates-io cl wr clwrap) #:use-module (crates-io))

(define-public crate-clwrap-0.1.0 (c (n "clwrap") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.66") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.0.29") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "expectrl") (r "^0.6.0") (f (quote ("async"))) (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.0") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "typed-builder") (r "^0.11.0") (d #t) (k 0)))) (h "0xl75wavrcaiqn0s0msw4j8xdgs9v4qlfsswrvs6jr6qnida3zg4") (f (quote (("cmdline" "clap" "tracing-subscriber" "anyhow")))) (r "1.60")))

(define-public crate-clwrap-0.2.0 (c (n "clwrap") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.66") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.0.29") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "expectrl") (r "^0.6.0") (f (quote ("async"))) (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.0") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "typed-builder") (r "^0.11.0") (d #t) (k 0)))) (h "1vj6m75wy67p2mw406issb1rmn7gyyngnipr87bia1dqanqfm9rl") (f (quote (("cmdline" "clap" "tracing-subscriber" "anyhow")))) (r "1.60")))

(define-public crate-clwrap-0.2.1 (c (n "clwrap") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0.66") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.0.29") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "expectrl") (r "^0.6.0") (f (quote ("async"))) (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.0") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "typed-builder") (r "^0.11.0") (d #t) (k 0)))) (h "0ybd0qd3vfq8bb3xpdjpvdg0ikq8qjbxzyw5lggi187h2jksyanz") (f (quote (("cmdline" "clap" "tracing-subscriber" "anyhow")))) (r "1.60")))

(define-public crate-clwrap-0.3.0 (c (n "clwrap") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.66") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.0.29") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "expectrl") (r "^0.6.0") (f (quote ("async"))) (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.0") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "typed-builder") (r "^0.11.0") (d #t) (k 0)))) (h "13p42zygc3wk2vx61n1kgf6wn9fpxfssq675ny1d2k9z29hjqy10") (f (quote (("cmdline" "clap" "tracing-subscriber" "anyhow")))) (r "1.60")))

