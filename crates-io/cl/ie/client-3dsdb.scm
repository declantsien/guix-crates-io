(define-module (crates-io cl ie client-3dsdb) #:use-module (crates-io))

(define-public crate-client-3dsdb-0.1.0 (c (n "client-3dsdb") (v "0.1.0") (d (list (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "ureq") (r "^2.7.1") (d #t) (k 0)))) (h "15bq5pajzpkzd4ar9mwrh36m5bfhi3q2r86wsfk93gqjwnygn6hp") (s 2) (e (quote (("xml" "dep:serde-xml-rs"))))))

(define-public crate-client-3dsdb-0.2.0 (c (n "client-3dsdb") (v "0.2.0") (d (list (d (n "rstest") (r "^0.18.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.100") (o #t) (d #t) (k 0)) (d (n "ureq") (r "^2.7.1") (d #t) (k 0)))) (h "1flrp6gpwsk34azvffgwi0f772nzfbwsgmlxlmpliv4n5rydg9vb") (s 2) (e (quote (("xml" "dep:serde-xml-rs") ("json" "dep:serde_json"))))))

(define-public crate-client-3dsdb-0.2.1 (c (n "client-3dsdb") (v "0.2.1") (d (list (d (n "rstest") (r "^0.18.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.100") (o #t) (d #t) (k 0)) (d (n "ureq") (r "^2.7.1") (d #t) (k 0)))) (h "04l4m2z7ffwijyfy1dk8gmdf7spwsbrjvbgwizkgjfz3hg1ykrws") (s 2) (e (quote (("xml" "dep:serde-xml-rs") ("json" "dep:serde_json"))))))

(define-public crate-client-3dsdb-0.3.0 (c (n "client-3dsdb") (v "0.3.0") (d (list (d (n "async-std") (r "^1.12.0") (f (quote ("attributes" "tokio1"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.18") (f (quote ("default" "blocking" "json"))) (d #t) (k 0)) (d (n "rstest") (r "^0.18.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.100") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.1") (o #t) (d #t) (k 0)))) (h "09xd5pmjp3sy5fmmq9i3vsyhr72wi4sdgl30a6pfcdjigv3q56n7") (s 2) (e (quote (("xml" "dep:serde-xml-rs") ("json" "dep:serde_json" "dep:strum" "dep:strum_macros" "dep:futures"))))))

(define-public crate-client-3dsdb-0.4.0 (c (n "client-3dsdb") (v "0.4.0") (d (list (d (n "async-std") (r "^1.12.0") (f (quote ("attributes" "tokio1"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("default" "blocking" "json"))) (d #t) (k 0)) (d (n "rstest") (r "^0.18.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.100") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.1") (o #t) (d #t) (k 0)))) (h "1zvmmppqfgzsirzz0ydh0zn870ysfxa4chwhrfmr2c5grj7x0rgd") (s 2) (e (quote (("xml" "dep:serde-xml-rs") ("json" "dep:serde_json" "dep:strum" "dep:strum_macros" "dep:futures"))))))

(define-public crate-client-3dsdb-1.0.0 (c (n "client-3dsdb") (v "1.0.0") (d (list (d (n "async-std") (r "^1.12.0") (f (quote ("attributes" "tokio1"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("default" "blocking" "json"))) (d #t) (k 0)) (d (n "rstest") (r "^0.18.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.100") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.1") (o #t) (d #t) (k 0)))) (h "0fcrhlk953njb179mi9x29sym1janv0gnifd292l8frild9kgvrk") (s 2) (e (quote (("xml" "dep:serde-xml-rs") ("json" "dep:serde_json" "dep:strum" "dep:strum_macros" "dep:futures" "dep:itertools"))))))

