(define-module (crates-io cl ou cloud-dns) #:use-module (crates-io))

(define-public crate-cloud-dns-0.10.0 (c (n "cloud-dns") (v "0.10.0") (d (list (d (n "async-trait") (r "^0.1.50") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "http") (r "^0.2.5") (d #t) (k 0)) (d (n "http-body") (r "^0.4.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.22.1") (d #t) (k 2)) (d (n "pin-project-lite") (r "^0.2.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1.4") (d #t) (k 0)) (d (n "tame-oauth") (r "^0.6.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.12.0") (f (quote ("macros" "rt-multi-thread" "time"))) (k 2)) (d (n "tower") (r "^0.4.10") (f (quote ("buffer" "util"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.1.1") (f (quote ("map-response-body"))) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "12w9ra45gyhka4b84ii229g1mqmr1sa340056wh7j130qhbvspic")))

