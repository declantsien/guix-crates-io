(define-module (crates-io cl ou cloudwatch_logging) #:use-module (crates-io))

(define-public crate-cloudwatch_logging-0.1.0 (c (n "cloudwatch_logging") (v "0.1.0") (d (list (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.48.0") (d #t) (k 0)) (d (n "rusoto_logs") (r "^0.48.0") (d #t) (k 0)) (d (n "tokio") (r "^1.6.1") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.6.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)))) (h "1hbi6a35fi73id7h4zpnw1zr4ppb0iwagdgkpvdw2609si23skkx") (f (quote (("log-panics" "tokio") ("log-batching" "tokio") ("default" "log-batching" "log-panics") ("DEBUG"))))))

(define-public crate-cloudwatch_logging-0.1.1 (c (n "cloudwatch_logging") (v "0.1.1") (d (list (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.48.0") (d #t) (k 0)) (d (n "rusoto_logs") (r "^0.48.0") (d #t) (k 0)) (d (n "tokio") (r "^1.6.1") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.6.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)))) (h "0sxry0ixv0n1v0xpzfyc3shsx2k6233v9imf8pm5nyz4vd92hgbk") (f (quote (("log-panics" "tokio") ("log-batching" "tokio") ("default" "log-batching" "log-panics") ("DEBUG")))) (y #t)))

(define-public crate-cloudwatch_logging-0.1.11 (c (n "cloudwatch_logging") (v "0.1.11") (d (list (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.48.0") (d #t) (k 0)) (d (n "rusoto_logs") (r "^0.48.0") (d #t) (k 0)) (d (n "tokio") (r "^1.6.1") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.6.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)))) (h "1s8wyn8jm1a41d91hqmwr5gbrc44v87vmf04vh79pnhmzaxjvchz") (f (quote (("log-panics" "tokio") ("log-batching" "tokio") ("default" "log-batching" "log-panics") ("DEBUG"))))))

(define-public crate-cloudwatch_logging-0.1.12 (c (n "cloudwatch_logging") (v "0.1.12") (d (list (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.48.0") (d #t) (k 0)) (d (n "rusoto_logs") (r "^0.48.0") (d #t) (k 0)) (d (n "tokio") (r "^1.6.1") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.6.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)))) (h "19lbr5nwyj4vp7c09p4hiwz5bk2kii5npw8hbhipzfagp9acfjm8") (f (quote (("log-panics" "tokio") ("log-batching" "tokio") ("default" "log-batching" "log-panics") ("DEBUG"))))))

(define-public crate-cloudwatch_logging-0.1.13 (c (n "cloudwatch_logging") (v "0.1.13") (d (list (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.48.0") (d #t) (k 0)) (d (n "rusoto_logs") (r "^0.48.0") (d #t) (k 0)) (d (n "tokio") (r "^1.6.1") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.6.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)))) (h "16lf2riiargzi603ngxl1f9013wa36ydn0zbf9h4gbzpkihwh727") (f (quote (("log-panics" "tokio") ("log-batching" "tokio") ("default" "log-batching" "log-panics") ("DEBUG"))))))

(define-public crate-cloudwatch_logging-0.1.14 (c (n "cloudwatch_logging") (v "0.1.14") (d (list (d (n "chrono") (r "^0.4.24") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.48.0") (d #t) (k 0)) (d (n "rusoto_logs") (r "^0.48.0") (d #t) (k 0)) (d (n "time") (r "^0.3.20") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.6.1") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.6.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)))) (h "1yj92lfgyy07pabcpl5mzzk7dcci0w35f9fzq28lxywc7sw9g15k") (f (quote (("log-panics" "tokio") ("log-batching" "tokio") ("default" "log-batching" "log-panics" "chrono") ("DEBUG"))))))

(define-public crate-cloudwatch_logging-0.1.15 (c (n "cloudwatch_logging") (v "0.1.15") (d (list (d (n "chrono") (r "^0.4.24") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.48.0") (d #t) (k 0)) (d (n "rusoto_logs") (r "^0.48.0") (d #t) (k 0)) (d (n "time") (r "^0.3.20") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.6.1") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.6.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)))) (h "0nc1b5m70wh4yz53b34m8gf8b1hm8q2np9xgzk53p18c0xw8z4v4") (f (quote (("log-panics" "tokio") ("log-batching" "tokio") ("default" "log-batching" "log-panics" "chrono") ("DEBUG"))))))

(define-public crate-cloudwatch_logging-0.2.0 (c (n "cloudwatch_logging") (v "0.2.0") (d (list (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "loom") (r "^0.7.0") (f (quote ("futures"))) (d #t) (k 2)) (d (n "rusoto_core") (r "^0.48.0") (d #t) (k 0)) (d (n "rusoto_logs") (r "^0.48.0") (d #t) (k 0)) (d (n "tokio") (r "^1.6.1") (f (quote ("rt-multi-thread" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.6.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)))) (h "1xrglbbqwri3jnsp0fjjiqcwq0z1a55wgrrdi6s2wcjw4h4yq5q0") (f (quote (("singleton" "lazy_static" "loom") ("loom") ("default" "singleton" "DEBUG") ("DEBUG"))))))

(define-public crate-cloudwatch_logging-0.2.1 (c (n "cloudwatch_logging") (v "0.2.1") (d (list (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "loom") (r "^0.7.0") (f (quote ("futures"))) (d #t) (k 2)) (d (n "rusoto_core") (r "^0.48.0") (d #t) (k 0)) (d (n "rusoto_logs") (r "^0.48.0") (d #t) (k 0)) (d (n "tokio") (r "^1.6.1") (f (quote ("rt-multi-thread" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.6.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)))) (h "11pybbrbjl3n2w6g3q7sifxkczfv494y7l3a6lsmy5fy386s8g7d") (f (quote (("singleton" "lazy_static" "loom") ("loom") ("default") ("DEBUG"))))))

(define-public crate-cloudwatch_logging-0.2.2 (c (n "cloudwatch_logging") (v "0.2.2") (d (list (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "loom") (r "^0.7.0") (f (quote ("futures"))) (d #t) (k 2)) (d (n "rusoto_core") (r "^0.48.0") (d #t) (k 0)) (d (n "rusoto_logs") (r "^0.48.0") (d #t) (k 0)) (d (n "tokio") (r "^1.6.1") (f (quote ("rt-multi-thread" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.6.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)))) (h "0a30r4gpdnx95d2x2ra5ypyvaczkzhz8d55inwm88h19yp3hp3i9") (f (quote (("singleton" "lazy_static" "loom") ("loom") ("default") ("DEBUG"))))))

(define-public crate-cloudwatch_logging-0.2.3 (c (n "cloudwatch_logging") (v "0.2.3") (d (list (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "loom") (r "^0.7.0") (f (quote ("futures"))) (d #t) (k 2)) (d (n "rusoto_core") (r "^0.48.0") (d #t) (k 0)) (d (n "rusoto_logs") (r "^0.48.0") (d #t) (k 0)) (d (n "tokio") (r "^1.6.1") (f (quote ("rt-multi-thread" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.6.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)))) (h "0l5qzcas58prndh65c48g8ab3hpghiczhs9lh3zk39il7k83fq0v") (f (quote (("singleton" "lazy_static" "loom") ("loom") ("default") ("DEBUG"))))))

(define-public crate-cloudwatch_logging-0.2.4 (c (n "cloudwatch_logging") (v "0.2.4") (d (list (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "loom") (r "^0.7.0") (f (quote ("futures"))) (d #t) (k 2)) (d (n "rusoto_core") (r "^0.48.0") (d #t) (k 0)) (d (n "rusoto_logs") (r "^0.48.0") (d #t) (k 0)) (d (n "tokio") (r "^1.6.1") (f (quote ("rt-multi-thread" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.6.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)))) (h "18sypl6wyzsk1ff927k2xr5gawh24s6kgyj53j9zg7nrsdp5k2b8") (f (quote (("singleton") ("loom") ("im_ok_paying_for_testing") ("doc_tests") ("default") ("DEBUG"))))))

(define-public crate-cloudwatch_logging-0.2.5 (c (n "cloudwatch_logging") (v "0.2.5") (d (list (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "loom") (r "^0.7.0") (f (quote ("futures"))) (d #t) (k 2)) (d (n "rusoto_core") (r "^0.48.0") (d #t) (k 0)) (d (n "rusoto_logs") (r "^0.48.0") (d #t) (k 0)) (d (n "tokio") (r "^1.6.1") (f (quote ("rt-multi-thread" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.6.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)))) (h "1mmhvf601wabhxkmdpr4hjyh17nw5xb5802p867jjdy579w5wj77") (f (quote (("singleton") ("loom") ("im_ok_paying_for_testing") ("doc_tests") ("default") ("DEBUG"))))))

(define-public crate-cloudwatch_logging-0.2.51 (c (n "cloudwatch_logging") (v "0.2.51") (d (list (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "loom") (r "^0.7.0") (f (quote ("futures"))) (d #t) (k 2)) (d (n "rusoto_core") (r "^0.48.0") (d #t) (k 0)) (d (n "rusoto_logs") (r "^0.48.0") (d #t) (k 0)) (d (n "tokio") (r "^1.6.1") (f (quote ("rt-multi-thread" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.6.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)))) (h "0bl00z9jcmyw6ify8fhfww5fjn5hcmqkxb2ski54vgg4cznpj4q6") (f (quote (("singleton") ("loom") ("im_ok_paying_for_testing") ("doc_tests") ("default") ("DEBUG"))))))

(define-public crate-cloudwatch_logging-1.0.0 (c (n "cloudwatch_logging") (v "1.0.0") (d (list (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "loom") (r "^0.7.0") (f (quote ("futures"))) (d #t) (k 2)) (d (n "rusoto_core") (r "^0.48.0") (d #t) (k 0)) (d (n "rusoto_logs") (r "^0.48.0") (d #t) (k 0)) (d (n "tokio") (r "^1.6.1") (f (quote ("rt-multi-thread" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.6.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)))) (h "1kydkxs90kk0xh0s2sna7hzkn0gfd3kmkhdjrzgvd3zk0xvip2c9") (f (quote (("singleton") ("loom" "singleton") ("im_ok_paying_for_testing") ("doc_tests") ("default") ("DEBUG"))))))

