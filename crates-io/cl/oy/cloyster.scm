(define-module (crates-io cl oy cloyster) #:use-module (crates-io))

(define-public crate-cloyster-0.1.0-alpha.0 (c (n "cloyster") (v "0.1.0-alpha.0") (d (list (d (n "binary-heap-plus") (r "^0.4.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "^1.0.0") (d #t) (k 0)) (d (n "crc32fast") (r "^1.2.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 0)) (d (n "crossbeam-epoch") (r "^0.9.5") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8.5") (d #t) (k 0)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "im") (r "^15.0.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "libc") (r "^0.2.108") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "loom") (r "^0.5") (f (quote ("futures" "checkpoint"))) (d #t) (t "cfg(loom)") (k 2)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0qsagg5lxf9dliqzk61j2v0p3f3vjnyxgwzn536l8yq7kz99gh4b")))

