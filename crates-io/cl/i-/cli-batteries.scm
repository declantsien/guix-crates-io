(define-module (crates-io cl i- cli-batteries) #:use-module (crates-io))

(define-public crate-cli-batteries-0.1.0 (c (n "cli-batteries") (v "0.1.0") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (f (quote ("issue-url"))) (d #t) (k 0)) (d (n "console-subscriber") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14.17") (f (quote ("server" "tcp" "http1" "http2"))) (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1") (o #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (f (quote ("process"))) (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("signal" "fs" "macros" "rt" "sync" "time" "rt-multi-thread" "tracing"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2") (d #t) (k 2)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)) (d (n "users") (r "^0.11") (d #t) (k 0)))) (h "14zv7sv56majpcj9jk8h0icyhb7nn8cncl812zn0941jim12gsr6") (s 2) (e (quote (("rayon" "dep:rayon" "dep:num_cpus") ("rand" "dep:rand" "dep:rand_chacha") ("prometheus" "dep:prometheus" "dep:hyper" "dep:url"))))))

(define-public crate-cli-batteries-0.1.1 (c (n "cli-batteries") (v "0.1.1") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (f (quote ("issue-url"))) (d #t) (k 0)) (d (n "console-subscriber") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14.17") (f (quote ("server" "tcp" "http1" "http2"))) (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1") (o #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (f (quote ("process"))) (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("signal" "fs" "macros" "rt" "sync" "time" "rt-multi-thread" "tracing"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2") (d #t) (k 2)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)) (d (n "users") (r "^0.11") (d #t) (k 0)))) (h "0naib292pdmad7aj1pjzyf0dvgfzy1yinwpx7hbvkk8dxfak2zkc") (s 2) (e (quote (("rayon" "dep:rayon" "dep:num_cpus") ("rand" "dep:rand" "dep:rand_chacha") ("prometheus" "dep:prometheus" "dep:hyper" "dep:url"))))))

(define-public crate-cli-batteries-0.1.2 (c (n "cli-batteries") (v "0.1.2") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (f (quote ("issue-url"))) (d #t) (k 0)) (d (n "console-subscriber") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14.17") (f (quote ("server" "tcp" "http1" "http2"))) (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (f (quote ("process"))) (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("rt-multi-thread" "sync" "macros" "signal" "tracing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("fs" "io-util"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2") (d #t) (k 2)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)) (d (n "users") (r "^0.11") (d #t) (k 0)))) (h "0bwc4pj0nmslr2ixbc34vwa3fiaa59z5yz6sin93hk3qi7czk8jl") (f (quote (("mock_shutdown") ("metered_allocator" "prometheus")))) (s 2) (e (quote (("rayon" "dep:rayon" "dep:num_cpus") ("rand" "dep:rand" "dep:rand_chacha") ("prometheus" "dep:prometheus" "dep:hyper" "dep:url") ("mimalloc" "dep:mimalloc"))))))

(define-public crate-cli-batteries-0.1.3 (c (n "cli-batteries") (v "0.1.3") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (f (quote ("issue-url"))) (d #t) (k 0)) (d (n "console-subscriber") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14.17") (f (quote ("server" "tcp" "http1" "http2"))) (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (f (quote ("process"))) (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("rt-multi-thread" "sync" "macros" "signal" "tracing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("fs" "io-util"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2") (d #t) (k 2)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)) (d (n "users") (r "^0.11") (d #t) (k 0)))) (h "0bibj00528r9j62k90zpg9xhmm60cxjlfbm6bmb1dkaq2f7bygc9") (f (quote (("mock_shutdown") ("metered_allocator" "prometheus")))) (s 2) (e (quote (("rayon" "dep:rayon" "dep:num_cpus") ("rand" "dep:rand" "dep:rand_chacha") ("prometheus" "dep:prometheus" "dep:hyper" "dep:url") ("mimalloc" "dep:mimalloc"))))))

(define-public crate-cli-batteries-0.1.4 (c (n "cli-batteries") (v "0.1.4") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (f (quote ("issue-url"))) (d #t) (k 0)) (d (n "console-subscriber") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14.17") (f (quote ("server" "tcp" "http1" "http2"))) (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (f (quote ("process"))) (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("rt-multi-thread" "sync" "macros" "signal" "tracing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("fs" "io-util"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-error") (r "^0.2") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2") (d #t) (k 2)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)) (d (n "users") (r "^0.11") (d #t) (k 0)))) (h "1pb3kfyg626j57myw57cywqj4nysldigrwkcwlxi0xhhkl2454wq") (f (quote (("mock_shutdown") ("metered_allocator" "prometheus")))) (s 2) (e (quote (("rayon" "dep:rayon" "dep:num_cpus") ("rand" "dep:rand" "dep:rand_chacha") ("prometheus" "dep:prometheus" "dep:hyper" "dep:url") ("mimalloc" "dep:mimalloc"))))))

(define-public crate-cli-batteries-0.1.5 (c (n "cli-batteries") (v "0.1.5") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (f (quote ("issue-url"))) (d #t) (k 0)) (d (n "console-subscriber") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14.17") (f (quote ("server" "tcp" "http1" "http2"))) (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (f (quote ("process"))) (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("rt-multi-thread" "sync" "macros" "signal" "tracing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("fs" "io-util"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-error") (r "^0.2") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2") (d #t) (k 2)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)) (d (n "users") (r "^0.11") (d #t) (k 0)))) (h "01a2yqq528ilfwvgaijqxz68gmh93v1845r6an4nk7fjxnilv15w") (f (quote (("mock_shutdown") ("metered_allocator" "prometheus")))) (s 2) (e (quote (("rayon" "dep:rayon" "dep:num_cpus") ("rand" "dep:rand" "dep:rand_chacha") ("prometheus" "dep:prometheus" "dep:hyper" "dep:url") ("mimalloc" "dep:mimalloc"))))))

(define-public crate-cli-batteries-0.1.6 (c (n "cli-batteries") (v "0.1.6") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (f (quote ("issue-url"))) (d #t) (k 0)) (d (n "console-subscriber") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14.17") (f (quote ("server" "tcp" "http1" "http2"))) (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.5") (f (quote ("reqwest-client"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (f (quote ("process"))) (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("rt-multi-thread" "sync" "macros" "signal" "tracing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("fs" "io-util"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-error") (r "^0.2") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2") (d #t) (k 2)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)) (d (n "users") (r "^0.11") (d #t) (k 0)))) (h "0047m4x2019jpskhv03nrh8ikiqpp6jfp04b0hi7xd27illp6liq") (f (quote (("mock-shutdown") ("metered-allocator" "prometheus")))) (s 2) (e (quote (("tokio-console" "dep:console-subscriber") ("rayon" "dep:rayon" "dep:num_cpus") ("rand" "dep:rand" "dep:rand_chacha") ("prometheus" "dep:prometheus" "dep:hyper" "dep:url") ("otlp" "opentelemetry" "dep:opentelemetry-otlp") ("opentelemetry" "dep:url" "dep:tracing-opentelemetry" "dep:opentelemetry") ("mimalloc" "dep:mimalloc") ("datadog" "opentelemetry" "dep:opentelemetry-datadog"))))))

(define-public crate-cli-batteries-0.1.7 (c (n "cli-batteries") (v "0.1.7") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (f (quote ("issue-url"))) (d #t) (k 0)) (d (n "console-subscriber") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14.17") (f (quote ("server" "tcp" "http1" "http2"))) (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.5") (f (quote ("reqwest-client"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.6.0") (f (quote ("reqwest"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (f (quote ("process"))) (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("rt-multi-thread" "sync" "macros" "signal" "tracing" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("fs" "io-util"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-error") (r "^0.2") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2") (d #t) (k 2)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)) (d (n "users") (r "^0.11") (d #t) (k 0)))) (h "09vmwx2mw8hm56snzqxnb93ckbv29fh7ikl0wi4rr7g5pk0153p8") (f (quote (("mock-shutdown") ("metered-allocator" "prometheus")))) (s 2) (e (quote (("tokio-console" "dep:console-subscriber") ("rayon" "dep:rayon" "dep:num_cpus") ("rand" "dep:rand" "dep:rand_chacha") ("prometheus" "dep:prometheus" "dep:hyper" "dep:url") ("otlp" "opentelemetry" "dep:opentelemetry-otlp") ("opentelemetry" "dep:url" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-http" "dep:reqwest") ("mimalloc" "dep:mimalloc") ("datadog" "opentelemetry" "dep:opentelemetry-datadog"))))))

(define-public crate-cli-batteries-0.2.0 (c (n "cli-batteries") (v "0.2.0") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^3.2") (f (quote ("derive" "env" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (f (quote ("issue-url"))) (d #t) (k 0)) (d (n "console-subscriber") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14.17") (f (quote ("server" "tcp" "http1" "http2"))) (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (f (quote ("process"))) (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("rt-multi-thread" "sync" "macros" "signal" "tracing" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("fs" "io-util"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-error") (r "^0.2") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2") (d #t) (k 2)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)) (d (n "users") (r "^0.11") (d #t) (k 0)))) (h "0npvri3df5953g6jpwvgpz6ps0rq14kg5gf6qh17j9syb3b552ff") (f (quote (("mock-shutdown") ("metered-allocator" "prometheus")))) (s 2) (e (quote (("tokio-console" "dep:console-subscriber") ("rayon" "dep:rayon" "dep:num_cpus") ("rand" "dep:rand" "dep:rand_chacha") ("prometheus" "dep:prometheus" "dep:hyper" "dep:url") ("otlp" "dep:url" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:heck") ("mimalloc" "dep:mimalloc"))))))

(define-public crate-cli-batteries-0.2.1 (c (n "cli-batteries") (v "0.2.1") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^3.2") (f (quote ("derive" "env" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (f (quote ("issue-url"))) (d #t) (k 0)) (d (n "console-subscriber") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14.17") (f (quote ("server" "tcp" "http1" "http2"))) (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (f (quote ("process"))) (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("rt-multi-thread" "sync" "macros" "signal" "tracing" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("fs" "io-util"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-error") (r "^0.2") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2") (d #t) (k 2)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)) (d (n "users") (r "^0.11") (d #t) (k 0)))) (h "116k3k88jkdznznd493wp7y1da5snyvkrglfapm0vwxp56pizl47") (f (quote (("mock-shutdown") ("metered-allocator" "prometheus")))) (s 2) (e (quote (("tokio-console" "dep:console-subscriber") ("rayon" "dep:rayon" "dep:num_cpus") ("rand" "dep:rand" "dep:rand_chacha") ("prometheus" "dep:prometheus" "dep:hyper" "dep:url") ("otlp" "dep:url" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:heck") ("mimalloc" "dep:mimalloc"))))))

(define-public crate-cli-batteries-0.3.0 (c (n "cli-batteries") (v "0.3.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^3.2") (f (quote ("derive" "env" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (f (quote ("issue-url"))) (d #t) (k 0)) (d (n "console-subscriber") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14.17") (f (quote ("server" "tcp" "http1" "http2"))) (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (f (quote ("process"))) (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("rt-multi-thread" "sync" "macros" "tracing" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("fs" "io-util"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-error") (r "^0.2") (d #t) (k 0)) (d (n "tracing-flame") (r "^0.2.0") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1.3") (f (quote ("interest-cache"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "json" "tracing-log" "smallvec" "parking_lot"))) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2") (d #t) (k 2)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)) (d (n "users") (r "^0.11") (d #t) (k 0)))) (h "0z9dnhgs2gdnpfyjl3f3mgmllxp44apsan6grlb4davp3yga7fcq") (f (quote (("signals" "tokio/signal") ("mock-shutdown") ("metered-allocator" "prometheus") ("default")))) (s 2) (e (quote (("tokio-console" "dep:console-subscriber") ("rayon" "dep:rayon" "dep:num_cpus") ("rand" "dep:rand" "dep:rand_chacha") ("prometheus" "dep:prometheus" "dep:hyper" "dep:url") ("otlp" "dep:url" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:heck") ("mimalloc" "dep:mimalloc"))))))

(define-public crate-cli-batteries-0.3.1 (c (n "cli-batteries") (v "0.3.1") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^3.2") (f (quote ("derive" "env" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (f (quote ("issue-url"))) (d #t) (k 0)) (d (n "console-subscriber") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14.17") (f (quote ("server" "tcp" "http1" "http2"))) (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (f (quote ("process"))) (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("rt-multi-thread" "sync" "macros" "tracing" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("fs" "io-util"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-error") (r "^0.2") (d #t) (k 0)) (d (n "tracing-flame") (r "^0.2.0") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1.3") (f (quote ("interest-cache"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "json" "tracing-log" "smallvec" "parking_lot"))) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2") (d #t) (k 2)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)) (d (n "users") (r "^0.11") (d #t) (k 0)))) (h "0a6z8bbgk2x0rzzbkxh7v3k91ljygspnja8cc48vcsgn2r7hlbg2") (f (quote (("signals" "tokio/signal") ("mock-shutdown") ("metered-allocator" "prometheus") ("default")))) (s 2) (e (quote (("tokio-console" "dep:console-subscriber") ("rayon" "dep:rayon" "dep:num_cpus") ("rand" "dep:rand" "dep:rand_chacha") ("prometheus" "dep:prometheus" "dep:hyper" "dep:url") ("otlp" "dep:url" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:heck") ("mimalloc" "dep:mimalloc"))))))

(define-public crate-cli-batteries-0.3.2 (c (n "cli-batteries") (v "0.3.2") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^3.2") (f (quote ("derive" "env" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (f (quote ("issue-url"))) (d #t) (k 0)) (d (n "console-subscriber") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14.17") (f (quote ("server" "tcp" "http1" "http2"))) (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (f (quote ("process"))) (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("rt-multi-thread" "sync" "macros" "tracing" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("fs" "io-util"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-error") (r "^0.2") (d #t) (k 0)) (d (n "tracing-flame") (r "^0.2.0") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1.3") (f (quote ("interest-cache"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "json" "tracing-log" "smallvec" "parking_lot"))) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2") (d #t) (k 2)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)) (d (n "users") (r "^0.11") (d #t) (k 0)))) (h "0kgbv51cbg5a3awa5mrf31rl32dnvv4js6m4xwwp3ka56bzd4n0c") (f (quote (("signals" "tokio/signal") ("mock-shutdown") ("metered-allocator" "prometheus") ("default")))) (s 2) (e (quote (("tokio-console" "dep:console-subscriber") ("rayon" "dep:rayon" "dep:num_cpus") ("rand" "dep:rand" "dep:rand_chacha") ("prometheus" "dep:prometheus" "dep:hyper" "dep:url") ("otlp" "dep:url" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:heck") ("mimalloc" "dep:mimalloc"))))))

(define-public crate-cli-batteries-0.3.3 (c (n "cli-batteries") (v "0.3.3") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^3.2") (f (quote ("derive" "env" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (f (quote ("issue-url"))) (d #t) (k 0)) (d (n "console-subscriber") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14.17") (f (quote ("server" "tcp" "http1" "http2"))) (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (f (quote ("process"))) (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("rt-multi-thread" "sync" "macros" "tracing" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("fs" "io-util"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-error") (r "^0.2") (d #t) (k 0)) (d (n "tracing-flame") (r "^0.2.0") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1.3") (f (quote ("interest-cache"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "tracing-serde") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.15") (f (quote ("env-filter" "json" "tracing-log" "smallvec" "parking_lot"))) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2") (d #t) (k 2)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)) (d (n "users") (r "^0.11") (d #t) (k 0)))) (h "04zfzwnqb03l9cy2vyx26knnx3ykcxm4xgxwhg31rb7qymgg4bci") (f (quote (("signals" "tokio/signal") ("mock-shutdown") ("metered-allocator" "prometheus") ("default")))) (s 2) (e (quote (("tokio-console" "dep:console-subscriber") ("rayon" "dep:rayon" "dep:num_cpus") ("rand" "dep:rand" "dep:rand_chacha") ("prometheus" "dep:prometheus" "dep:hyper" "dep:url") ("otlp" "dep:url" "dep:http" "dep:serde" "dep:serde_json" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-http" "dep:opentelemetry-semantic-conventions" "dep:heck") ("mimalloc" "dep:mimalloc"))))))

(define-public crate-cli-batteries-0.4.0 (c (n "cli-batteries") (v "0.4.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive" "env" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (f (quote ("issue-url"))) (d #t) (k 0)) (d (n "console-subscriber") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio"))) (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14.17") (f (quote ("server" "tcp" "http1" "http2"))) (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (f (quote ("process"))) (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("rt-multi-thread" "sync" "macros" "tracing" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("fs" "io-util"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-error") (r "^0.2") (d #t) (k 0)) (d (n "tracing-flame") (r "^0.2.0") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1.3") (f (quote ("interest-cache"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "tracing-serde") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.15") (f (quote ("env-filter" "json" "tracing-log" "smallvec" "parking_lot"))) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2") (d #t) (k 2)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)) (d (n "users") (r "^0.11") (d #t) (k 0)))) (h "08y0rbc234539062k7ax0394i2wglfnrn84rnx9v6r1x91hayw17") (f (quote (("signals" "tokio/signal") ("mock-shutdown") ("metered-allocator" "prometheus") ("default")))) (s 2) (e (quote (("tokio-console" "dep:console-subscriber") ("rayon" "dep:rayon" "dep:num_cpus") ("rand" "dep:rand" "dep:rand_chacha") ("prometheus" "dep:prometheus" "dep:hyper" "dep:url") ("otlp" "dep:url" "dep:http" "dep:serde" "dep:serde_json" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-http" "dep:opentelemetry-semantic-conventions" "dep:heck") ("mimalloc" "dep:mimalloc"))))))

(define-public crate-cli-batteries-0.4.1 (c (n "cli-batteries") (v "0.4.1") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive" "env" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (f (quote ("issue-url"))) (d #t) (k 0)) (d (n "console-subscriber") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio"))) (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14.17") (f (quote ("server" "tcp" "http1" "http2"))) (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.18") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (f (quote ("process"))) (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("rt-multi-thread" "sync" "macros" "tracing" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("fs" "io-util"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-error") (r "^0.2") (d #t) (k 0)) (d (n "tracing-flame") (r "^0.2.0") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1.3") (f (quote ("interest-cache"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "tracing-serde") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.15") (f (quote ("env-filter" "json" "tracing-log" "smallvec" "parking_lot"))) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2") (d #t) (k 2)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)) (d (n "users") (r "^0.11") (d #t) (k 0)))) (h "0y2vx8kbwp8vfzkcksvbmd2j1www1dkn56frlq8x773nxzabymz7") (f (quote (("signals" "tokio/signal") ("mock-shutdown") ("metered-allocator" "prometheus") ("default")))) (s 2) (e (quote (("tokio-console" "dep:console-subscriber") ("rayon" "dep:rayon" "dep:num_cpus") ("rand" "dep:rand" "dep:rand_chacha") ("prometheus" "dep:prometheus" "dep:hyper" "dep:url") ("otlp" "dep:url" "dep:http" "dep:serde" "dep:serde_json" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-http" "dep:opentelemetry-semantic-conventions" "dep:heck") ("mimalloc" "dep:mimalloc"))))))

(define-public crate-cli-batteries-0.5.0 (c (n "cli-batteries") (v "0.5.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive" "env" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (f (quote ("issue-url"))) (d #t) (k 0)) (d (n "console-subscriber") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio"))) (o #t) (d #t) (k 0)) (d (n "eyre") (r "^0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "heck") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14.17") (f (quote ("server" "tcp" "http1" "http2"))) (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.18") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (f (quote ("process"))) (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("rt-multi-thread" "sync" "macros" "tracing" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("fs" "io-util"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-error") (r "^0.2") (d #t) (k 0)) (d (n "tracing-flame") (r "^0.2.0") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1.3") (f (quote ("interest-cache"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "tracing-serde") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.15") (f (quote ("env-filter" "json" "tracing-log" "smallvec" "parking_lot"))) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2") (d #t) (k 2)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)) (d (n "users") (r "^0.11") (d #t) (k 0)))) (h "0av4cxdr4qvlng0lrcqxibnsl7cpzdh1fxkcj6fqaqs5vx24ljg3") (f (quote (("signals" "tokio/signal") ("mock-shutdown") ("metered-allocator" "prometheus") ("default")))) (s 2) (e (quote (("tokio-console" "dep:console-subscriber") ("rayon" "dep:rayon" "dep:num_cpus") ("rand" "dep:rand" "dep:rand_chacha") ("prometheus" "dep:prometheus" "dep:hyper" "dep:url") ("otlp" "dep:url" "dep:http" "dep:serde" "dep:serde_json" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-http" "dep:opentelemetry-semantic-conventions" "dep:heck") ("mimalloc" "dep:mimalloc"))))))

