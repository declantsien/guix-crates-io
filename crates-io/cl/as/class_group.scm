(define-module (crates-io cl as class_group) #:use-module (crates-io))

(define-public crate-class_group-0.4.16 (c (n "class_group") (v "0.4.16") (d (list (d (n "bindgen") (r "^0.50") (d #t) (k 1)) (d (n "curv-kzen") (r "^0.2.7") (f (quote ("ec_secp256k1"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "151y16hj5nxgdvbawmyjlvv77n4davnlyq7nn70cfj1g9x051mxw") (l "libpari")))

(define-public crate-class_group-0.4.17 (c (n "class_group") (v "0.4.17") (d (list (d (n "bindgen") (r "^0.50") (d #t) (k 1)) (d (n "curv-kzen") (r "^0.2.7") (f (quote ("ec_secp256k1"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0nr9x1y2xxfm98hwyrdgdvbd99wn98ndcw55hnbx4wxaxk9a8xpz") (l "libpari")))

(define-public crate-class_group-0.6.0 (c (n "class_group") (v "0.6.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "bindgen") (r "^0.50") (d #t) (k 1)) (d (n "criterion") (r ">=0.2") (d #t) (k 2)) (d (n "curv-kzen") (r "^0.9") (k 0)) (d (n "fs_extra") (r "^1") (d #t) (k 1)) (d (n "hmac") (r "^0.11") (d #t) (k 0)) (d (n "libc") (r "^0.2.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "rug") (r "^1.2.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 2)))) (h "1gnw9vl1sci6nrr9p0a7f82l4a8hl4bcvwyr89xa5hi0anbjq98n") (f (quote (("default" "curv-kzen/rust-gmp-kzen")))) (l "libpari")))

(define-public crate-class_group-0.6.1 (c (n "class_group") (v "0.6.1") (d (list (d (n "curv-kzen") (r "^0.10") (k 0)) (d (n "hmac") (r "^0.11") (d #t) (k 0)) (d (n "libc") (r "^0.2.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "criterion") (r ">=0.2") (d #t) (k 2)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "rug") (r "^1.2.1") (d #t) (k 2)) (d (n "sha2") (r "^0.9.1") (d #t) (k 2)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "bindgen") (r "^0.50") (d #t) (k 1)) (d (n "fs_extra") (r "^1") (d #t) (k 1)))) (h "0nlwxzg55b7aisflq05asxln15wa4k7ij6wbgp95m0nfv84chf09") (f (quote (("default" "curv-kzen/rust-gmp-kzen")))) (l "libpari")))

