(define-module (crates-io cl oc clock-check) #:use-module (crates-io))

(define-public crate-clock-check-0.1.0 (c (n "clock-check") (v "0.1.0") (d (list (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "00bzsnhbjkvikn0vz2crscils2p18zbp5pwkdxy5l4bhlngq9xnn")))

(define-public crate-clock-check-0.1.1 (c (n "clock-check") (v "0.1.1") (d (list (d (n "clap") (r "^4.0") (f (quote ("cargo" "derive"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0xw690k1aw14mbhly7yi1zz4jb4kkqmrghf5lfdjn1dv0xdrdw5b")))

(define-public crate-clock-check-0.1.2 (c (n "clock-check") (v "0.1.2") (d (list (d (n "clap") (r "^4.0") (f (quote ("cargo" "derive"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "1w2xd2d7gfqzx84m8g7q4f0g80a4m7fh2fq3gqz3dlgbj1xrh68h")))

(define-public crate-clock-check-0.2.0 (c (n "clock-check") (v "0.2.0") (d (list (d (n "clap") (r "^4.0") (f (quote ("cargo" "derive"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "1mznn6f1c8mrrx7vbrgfx7iq0194q0k49n062wd8pvqbny51z5r6")))

(define-public crate-clock-check-0.3.0-beta.0 (c (n "clock-check") (v "0.3.0-beta.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("cargo" "derive"))) (d #t) (k 0)) (d (n "nippy") (r "^2") (f (quote ("tokio-runtime"))) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "time_server_utils") (r "^0.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)))) (h "1vcdlw8s8m11zgj3p9l11c285jbpp88yq6wkk074s7pkz06ryx5p")))

(define-public crate-clock-check-0.3.0-beta.1 (c (n "clock-check") (v "0.3.0-beta.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("cargo" "derive"))) (d #t) (k 0)) (d (n "nippy") (r "^2") (f (quote ("tokio-runtime"))) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "time_server_utils") (r "^0.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)))) (h "141yhs59ln050vrnqzg1i3lipmh2rkx6glmmdrmh4j9862symcmr")))

(define-public crate-clock-check-0.3.0 (c (n "clock-check") (v "0.3.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("cargo" "derive"))) (d #t) (k 0)) (d (n "nippy") (r "^2") (f (quote ("tokio-runtime"))) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "time_server_utils") (r "^0.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)))) (h "123hc287r80q0hyfym4gfz7lhrk95ksywzdla3krpxamb10i91gp")))

(define-public crate-clock-check-0.4.0 (c (n "clock-check") (v "0.4.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("cargo" "derive"))) (d #t) (k 0)) (d (n "clap-markdown") (r "^0.1.3") (d #t) (k 0)) (d (n "nippy") (r "^2") (f (quote ("tokio-runtime"))) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "time_server_utils") (r "^0.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)))) (h "0j8iwvn6ywv5mpy9y4mggzjiyb0l2xva1zz7z0qwfrl2q678y7m8")))

