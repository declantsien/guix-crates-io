(define-module (crates-io cl vm clvm_tools_rs) #:use-module (crates-io))

(define-public crate-clvm_tools_rs-0.1.14 (c (n "clvm_tools_rs") (v "0.1.14") (d (list (d (n "bls12_381") (r "^0.5.0") (d #t) (k 0)) (d (n "bytestream") (r "^0.4.1") (d #t) (k 0)) (d (n "clvmr") (r "^0.1.21") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "do-notation") (r "^0.1.3") (d #t) (k 0)) (d (n "encoding8") (r "^0.3.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "pyo3") (r "^0.14.2") (f (quote ("abi3-py37" "extension-module"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "pyo3-build-config") (r "^0.15.1") (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.8.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.80") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.25") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "yamlette") (r "^0.0.8") (d #t) (k 0)))) (h "1wvyfhszb7hzpwh70skq04i12dgj5w0hkjrk4p8008lapw11kgs3") (f (quote (("extension-module" "pyo3") ("default" "extension-module"))))))

(define-public crate-clvm_tools_rs-0.1.17 (c (n "clvm_tools_rs") (v "0.1.17") (d (list (d (n "bls12_381") (r "^0.5.0") (d #t) (k 0)) (d (n "bytestream") (r "^0.4.1") (d #t) (k 0)) (d (n "clvmr") (r "^0.1.21") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "do-notation") (r "^0.1.3") (d #t) (k 0)) (d (n "encoding8") (r "^0.3.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "pyo3") (r "^0.14.2") (f (quote ("abi3-py37" "extension-module"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "pyo3-build-config") (r "^0.15.1") (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.8.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.80") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.25") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "yamlette") (r "^0.0.8") (d #t) (k 0)))) (h "10a05cgfsl6w27mw49skxqm5ipaq4qwqa2phvpazb2yix4176mrd") (f (quote (("extension-module" "pyo3") ("default" "extension-module"))))))

(define-public crate-clvm_tools_rs-0.1.18 (c (n "clvm_tools_rs") (v "0.1.18") (d (list (d (n "binascii") (r "^0.1.4") (d #t) (k 0)) (d (n "bls12_381") (r "^0.5.0") (d #t) (k 0)) (d (n "bytestream") (r "^0.4.1") (d #t) (k 0)) (d (n "clvmr") (r "^0.1.21") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "do-notation") (r "^0.1.3") (d #t) (k 0)) (d (n "encoding8") (r "^0.3.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "pyo3") (r "^0.14.2") (f (quote ("abi3-py37" "extension-module"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "pyo3-build-config") (r "^0.15.1") (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.8.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.80") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.25") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "yamlette") (r "^0.0.8") (d #t) (k 0)))) (h "038lajfz5sx1vbnbs6nryyad1dw1vzsgr8w9r5ph5jfw5gg0hawp") (f (quote (("extension-module" "pyo3") ("default" "extension-module"))))))

(define-public crate-clvm_tools_rs-0.1.19 (c (n "clvm_tools_rs") (v "0.1.19") (d (list (d (n "binascii") (r "^0.1.4") (d #t) (k 0)) (d (n "bls12_381") (r "^0.5.0") (d #t) (k 0)) (d (n "bytestream") (r "^0.4.1") (d #t) (k 0)) (d (n "clvmr") (r "^0.1.21") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "do-notation") (r "^0.1.3") (d #t) (k 0)) (d (n "encoding8") (r "^0.3.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "pyo3") (r "^0.14.2") (f (quote ("abi3-py37" "extension-module"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "pyo3-build-config") (r "^0.15.1") (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.8.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.80") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.25") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "yamlette") (r "^0.0.8") (d #t) (k 0)))) (h "0qzkxp6x9likb7kc125djmm33xqqd5s8vma04l53477xy55gmhfs") (f (quote (("extension-module" "pyo3") ("default" "extension-module"))))))

(define-public crate-clvm_tools_rs-0.1.20 (c (n "clvm_tools_rs") (v "0.1.20") (d (list (d (n "binascii") (r "^0.1.4") (d #t) (k 0)) (d (n "bls12_381") (r "^0.5.0") (d #t) (k 0)) (d (n "bytestream") (r "^0.4.1") (d #t) (k 0)) (d (n "clvmr") (r "^0.1.21") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "do-notation") (r "^0.1.3") (d #t) (k 0)) (d (n "encoding8") (r "^0.3.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "pyo3") (r "^0.14.2") (f (quote ("abi3-py37" "extension-module"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "pyo3-build-config") (r "^0.15.1") (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.8.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.80") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.25") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "yamlette") (r "^0.0.8") (d #t) (k 0)))) (h "0bfbnn54n9imh2ndmn91khi63jrc6qygwgkiyqh4y8cjrd95m0bb") (f (quote (("extension-module" "pyo3") ("default" "extension-module"))))))

(define-public crate-clvm_tools_rs-0.1.21 (c (n "clvm_tools_rs") (v "0.1.21") (d (list (d (n "binascii") (r "^0.1.4") (d #t) (k 0)) (d (n "bls12_381") (r "^0.5.0") (d #t) (k 0)) (d (n "bytestream") (r "^0.4.1") (d #t) (k 0)) (d (n "clvmr") (r "^0.1.21") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "do-notation") (r "^0.1.3") (d #t) (k 0)) (d (n "encoding8") (r "^0.3.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "pyo3") (r "^0.14.2") (f (quote ("abi3-py37" "extension-module"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "pyo3-build-config") (r "^0.15.1") (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.8.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.80") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.25") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "yamlette") (r "^0.0.8") (d #t) (k 0)))) (h "0hxz8xgzqp3b2nbzhx93vkzxdvvkhig28c1dz3nhk0z5nxmc40kg") (f (quote (("extension-module" "pyo3") ("default" "extension-module"))))))

(define-public crate-clvm_tools_rs-0.1.22 (c (n "clvm_tools_rs") (v "0.1.22") (d (list (d (n "binascii") (r "^0.1.4") (d #t) (k 0)) (d (n "bls12_381") (r "^0.5.0") (d #t) (k 0)) (d (n "bytestream") (r "^0.4.1") (d #t) (k 0)) (d (n "clvmr") (r "^0.1.21") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "do-notation") (r "^0.1.3") (d #t) (k 0)) (d (n "encoding8") (r "^0.3.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "pyo3") (r "^0.14.2") (f (quote ("abi3-py37" "extension-module"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "pyo3-build-config") (r "^0.15.1") (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.8.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.80") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.25") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "yamlette") (r "^0.0.8") (d #t) (k 0)))) (h "03h1vshp5laa2l58b7wgbpw1g2w44cl5411n58fq862sgn4d29gd") (f (quote (("extension-module" "pyo3") ("default" "extension-module"))))))

(define-public crate-clvm_tools_rs-0.1.23 (c (n "clvm_tools_rs") (v "0.1.23") (d (list (d (n "binascii") (r "^0.1.4") (d #t) (k 0)) (d (n "bls12_381") (r "^0.5.0") (d #t) (k 0)) (d (n "bytestream") (r "^0.4.1") (d #t) (k 0)) (d (n "clvmr") (r "^0.1.21") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "do-notation") (r "^0.1.3") (d #t) (k 0)) (d (n "encoding8") (r "^0.3.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "pyo3") (r "^0.14.2") (f (quote ("abi3-py37" "extension-module"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "pyo3-build-config") (r "^0.15.1") (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.8.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.80") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.25") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "yamlette") (r "^0.0.8") (d #t) (k 0)))) (h "02wpxa6c036x0kis7xzfam0k057zlamyyqs7hn08zrfdvhc5qcla") (f (quote (("extension-module" "pyo3") ("default" "extension-module"))))))

(define-public crate-clvm_tools_rs-0.1.24 (c (n "clvm_tools_rs") (v "0.1.24") (d (list (d (n "binascii") (r "^0.1.4") (d #t) (k 0)) (d (n "bls12_381") (r "^0.5.0") (d #t) (k 0)) (d (n "bytestream") (r "^0.4.1") (d #t) (k 0)) (d (n "clvmr") (r "^0.1.21") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "do-notation") (r "^0.1.3") (d #t) (k 0)) (d (n "encoding8") (r "^0.3.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.6") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "pyo3") (r "^0.14.2") (f (quote ("abi3-py37" "extension-module"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "pyo3-build-config") (r "^0.15.1") (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.8.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.80") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.25") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "yaml-rust") (r "^0.4") (d #t) (k 0)))) (h "1n3qk2abpif00z0lfzrph88r9ldc570rfdd4nybc7fnlpy1hx4xy") (f (quote (("extension-module" "pyo3") ("default" "extension-module"))))))

(define-public crate-clvm_tools_rs-0.1.25 (c (n "clvm_tools_rs") (v "0.1.25") (d (list (d (n "binascii") (r "^0.1.4") (d #t) (k 0)) (d (n "bls12_381") (r "^0.5.0") (d #t) (k 0)) (d (n "bytestream") (r "^0.4.1") (d #t) (k 0)) (d (n "clvmr") (r "^0.1.21") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "do-notation") (r "^0.1.3") (d #t) (k 0)) (d (n "encoding8") (r "^0.3.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.6") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "pyo3") (r "^0.14.2") (f (quote ("abi3-py37" "extension-module"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "pyo3-build-config") (r "^0.15.1") (d #t) (k 1)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.8.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.80") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.25") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "yaml-rust") (r "^0.4") (d #t) (k 0)))) (h "19qmxq1n6x103mr3khp0cihp86af218spb1xyfzmra8aw8c7qi0j") (f (quote (("extension-module" "pyo3") ("default" "extension-module"))))))

(define-public crate-clvm_tools_rs-0.1.28 (c (n "clvm_tools_rs") (v "0.1.28") (d (list (d (n "binascii") (r "^0.1.4") (d #t) (k 0)) (d (n "bls12_381") (r "^0.7.0") (d #t) (k 0)) (d (n "bytestream") (r "^0.4.1") (d #t) (k 0)) (d (n "clvmr") (r "^0.1.21") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "do-notation") (r "^0.1.3") (d #t) (k 0)) (d (n "encoding8") (r "^0.3.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.6") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "pyo3") (r "^0.14.2") (f (quote ("abi3-py37" "extension-module"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "pyo3-build-config") (r "^0.15.1") (d #t) (k 1)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.8.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.80") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.25") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "yaml-rust") (r "^0.4") (d #t) (k 0)))) (h "1268xq4iv1scgb5l6cm9p69znmwgr7czyvi6qrc9lmsn5q36wvag") (f (quote (("extension-module" "pyo3") ("default" "extension-module"))))))

(define-public crate-clvm_tools_rs-0.1.29 (c (n "clvm_tools_rs") (v "0.1.29") (d (list (d (n "binascii") (r "^0.1.4") (d #t) (k 0)) (d (n "bls12_381") (r "^0.7.0") (d #t) (k 0)) (d (n "bytestream") (r "^0.4.1") (d #t) (k 0)) (d (n "clvmr") (r "^0.1.21") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "do-notation") (r "^0.1.3") (d #t) (k 0)) (d (n "encoding8") (r "^0.3.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.6") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "pyo3") (r "^0.14.2") (f (quote ("abi3-py37" "extension-module"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "pyo3-build-config") (r "^0.15.1") (d #t) (k 1)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.8.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.80") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.25") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "yaml-rust") (r "^0.4") (d #t) (k 0)))) (h "19j0xjyqkzw4hk3lli3azadyx7d80aag8q04mps8hxqw8lbmj0yn") (f (quote (("extension-module" "pyo3") ("default" "extension-module"))))))

(define-public crate-clvm_tools_rs-0.1.30 (c (n "clvm_tools_rs") (v "0.1.30") (d (list (d (n "binascii") (r "^0.1.4") (d #t) (k 0)) (d (n "bls12_381") (r "^0.7.0") (d #t) (k 0)) (d (n "bytestream") (r "^0.4.1") (d #t) (k 0)) (d (n "clvmr") (r "^0.1.24") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "do-notation") (r "^0.1.3") (d #t) (k 0)) (d (n "encoding8") (r "^0.3.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.6") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "pyo3") (r "^0.14.2") (f (quote ("abi3-py37" "extension-module"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "pyo3-build-config") (r "^0.15.1") (d #t) (k 1)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.8.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.80") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.25") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "yaml-rust") (r "^0.4") (d #t) (k 0)))) (h "1i715x8crg18p58sbqb2fn5052bys24axlp6f1ararh8sksbc0dy") (f (quote (("extension-module" "pyo3") ("default" "extension-module"))))))

(define-public crate-clvm_tools_rs-0.1.31 (c (n "clvm_tools_rs") (v "0.1.31") (d (list (d (n "binascii") (r "^0.1.4") (d #t) (k 0)) (d (n "bls12_381") (r "^0.7.0") (d #t) (k 0)) (d (n "bytestream") (r "^0.4.1") (d #t) (k 0)) (d (n "clvmr") (r "^0.1.24") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "do-notation") (r "^0.1.3") (d #t) (k 0)) (d (n "encoding8") (r "^0.3.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.6") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "pyo3") (r "^0.14.2") (f (quote ("abi3-py37" "extension-module"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "pyo3-build-config") (r "^0.15.1") (d #t) (k 1)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.8.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.80") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.25") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "yaml-rust") (r "^0.4") (d #t) (k 0)))) (h "0q2ka573adnv0vvwh8fzmc0gpbbi2a5d8n3c4v4jp6s1vqdfnbzg") (f (quote (("extension-module" "pyo3") ("default" "extension-module"))))))

(define-public crate-clvm_tools_rs-0.1.33 (c (n "clvm_tools_rs") (v "0.1.33") (d (list (d (n "binascii") (r "^0.1.4") (d #t) (k 0)) (d (n "bls12_381") (r "^0.7.0") (d #t) (k 0)) (d (n "bytestream") (r "^0.4.1") (d #t) (k 0)) (d (n "clvmr") (r "^0.1.24") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "do-notation") (r "^0.1.3") (d #t) (k 0)) (d (n "encoding8") (r "^0.3.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.6") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "pyo3") (r "^0.14.2") (f (quote ("abi3-py37" "extension-module"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "pyo3-build-config") (r "^0.15.1") (d #t) (k 1)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.8.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.80") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.25") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "yaml-rust") (r "^0.4") (d #t) (k 0)))) (h "0h3vr96j2fd51fa6nsa0q71r6dqsqjxqajvgj1blplivwpb3p7px") (f (quote (("extension-module" "pyo3") ("default" "extension-module"))))))

(define-public crate-clvm_tools_rs-0.1.34 (c (n "clvm_tools_rs") (v "0.1.34") (d (list (d (n "binascii") (r "^0.1.4") (d #t) (k 0)) (d (n "bls12_381") (r "^0.7.0") (d #t) (k 0)) (d (n "bytestream") (r "^0.4.1") (d #t) (k 0)) (d (n "clvmr") (r "^0.1.24") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "do-notation") (r "^0.1.3") (d #t) (k 0)) (d (n "encoding8") (r "^0.3.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.6") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "pyo3") (r "^0.14.2") (f (quote ("abi3-py37" "extension-module"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "pyo3-build-config") (r "^0.15.1") (d #t) (k 1)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.8.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.80") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.25") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "yaml-rust") (r "^0.4") (d #t) (k 0)))) (h "18x1xaw1qb308qgnp4w1l682ryaxwjysywfcylvjwkc640q32g5m") (f (quote (("extension-module" "pyo3") ("default" "extension-module"))))))

(define-public crate-clvm_tools_rs-0.1.35 (c (n "clvm_tools_rs") (v "0.1.35") (d (list (d (n "binascii") (r "^0.1.4") (d #t) (k 0)) (d (n "bls12_381") (r "=0.8.0") (f (quote ("experimental"))) (d #t) (k 0)) (d (n "bytestream") (r "^0.4.1") (d #t) (k 0)) (d (n "clvmr") (r "^0.2.6") (f (quote ("pre-eval"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "do-notation") (r "^0.1.3") (d #t) (k 0)) (d (n "encoding8") (r "^0.3.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.6") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "pyo3") (r "^0.14.2") (f (quote ("abi3-py38" "extension-module"))) (o #t) (d #t) (k 0)) (d (n "pyo3-build-config") (r "^0.15.1") (d #t) (k 1)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.8.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.80") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.25") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "yaml-rust") (r "^0.4") (d #t) (k 0)))) (h "0d9ijahvd5yzgj62indm6896bfvhf0d6sxa0hs75y3ih3xqfxvgr") (f (quote (("default")))) (s 2) (e (quote (("extension-module" "dep:pyo3"))))))

(define-public crate-clvm_tools_rs-0.1.36 (c (n "clvm_tools_rs") (v "0.1.36") (d (list (d (n "binascii") (r "^0.1.4") (d #t) (k 0)) (d (n "bls12_381") (r "=0.8.0") (f (quote ("experimental"))) (d #t) (k 0)) (d (n "bytestream") (r "^0.4.1") (d #t) (k 0)) (d (n "clvmr") (r "^0.3.0") (f (quote ("pre-eval"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "do-notation") (r "^0.1.3") (d #t) (k 0)) (d (n "encoding8") (r "^0.3.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.6") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "pyo3") (r "^0.14.2") (f (quote ("abi3-py38" "extension-module"))) (o #t) (d #t) (k 0)) (d (n "pyo3-build-config") (r "^0.15.1") (d #t) (k 1)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.8.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.80") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.25") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "yaml-rust") (r "^0.4") (d #t) (k 0)))) (h "1q25hqsng0cf8pksv514hwzjnfdgaxx7n3bgmrc9wl48z27lphbs") (f (quote (("default")))) (s 2) (e (quote (("extension-module" "dep:pyo3"))))))

(define-public crate-clvm_tools_rs-0.1.37 (c (n "clvm_tools_rs") (v "0.1.37") (d (list (d (n "binascii") (r "^0.1.4") (d #t) (k 0)) (d (n "bls12_381") (r "=0.8.0") (f (quote ("experimental"))) (d #t) (k 0)) (d (n "bytestream") (r "^0.4.1") (d #t) (k 0)) (d (n "clvmr") (r "^0.3.0") (f (quote ("pre-eval"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "do-notation") (r "^0.1.3") (d #t) (k 0)) (d (n "encoding8") (r "^0.3.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.6") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "pyo3") (r "^0.14.2") (f (quote ("abi3-py38" "extension-module"))) (o #t) (d #t) (k 0)) (d (n "pyo3-build-config") (r "^0.15.1") (d #t) (k 1)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.8.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.80") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.25") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "yaml-rust") (r "^0.4") (d #t) (k 0)))) (h "1hwnpdqdwdry753zblgcxnyhlgc4zng60f0rpi7rp1rfi7q1085m") (f (quote (("default")))) (s 2) (e (quote (("extension-module" "dep:pyo3"))))))

(define-public crate-clvm_tools_rs-0.1.38 (c (n "clvm_tools_rs") (v "0.1.38") (d (list (d (n "binascii") (r "^0.1.4") (d #t) (k 0)) (d (n "bls12_381") (r "=0.8.0") (f (quote ("experimental"))) (d #t) (k 0)) (d (n "bytestream") (r "^0.4.1") (d #t) (k 0)) (d (n "clvmr") (r "^0.3.0") (f (quote ("pre-eval"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "do-notation") (r "^0.1.3") (d #t) (k 0)) (d (n "encoding8") (r "^0.3.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.6") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "pyo3") (r "^0.14.2") (f (quote ("abi3-py38" "extension-module"))) (o #t) (d #t) (k 0)) (d (n "pyo3-build-config") (r "^0.15.1") (d #t) (k 1)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.8.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.80") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.25") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "yaml-rust") (r "^0.4") (d #t) (k 0)))) (h "18v1iwil99f14xb72y9mv81r67w936i091lrcf964byra4jrf1mz") (f (quote (("default")))) (s 2) (e (quote (("extension-module" "dep:pyo3"))))))

(define-public crate-clvm_tools_rs-0.1.39 (c (n "clvm_tools_rs") (v "0.1.39") (d (list (d (n "binascii") (r "^0.1.4") (d #t) (k 0)) (d (n "bls12_381") (r "=0.8.0") (f (quote ("experimental"))) (d #t) (k 0)) (d (n "bytestream") (r "^0.4.1") (d #t) (k 0)) (d (n "clvmr") (r "^0.3.0") (f (quote ("pre-eval"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "do-notation") (r "^0.1.3") (d #t) (k 0)) (d (n "encoding8") (r "^0.3.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (t "cfg(not(target_family=\"wasm\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_family=\"wasm\")") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_family=\"wasm\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.6") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "pyo3") (r "^0.14.2") (f (quote ("abi3-py38" "extension-module"))) (o #t) (d #t) (k 0)) (d (n "pyo3-build-config") (r "^0.15.1") (d #t) (k 1)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.8.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.80") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_family=\"wasm\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.25") (d #t) (t "cfg(target_family=\"wasm\")") (k 0)) (d (n "yaml-rust") (r "^0.4") (d #t) (k 0)))) (h "0lwsjss5cbfk5ch0nrr9bd032lflj4vh04m7dw3l28xr80s1sf1g") (f (quote (("default")))) (s 2) (e (quote (("extension-module" "dep:pyo3"))))))

(define-public crate-clvm_tools_rs-0.1.40 (c (n "clvm_tools_rs") (v "0.1.40") (d (list (d (n "binascii") (r "^0.1.4") (d #t) (k 0)) (d (n "bls12_381") (r "=0.8.0") (f (quote ("experimental"))) (d #t) (k 0)) (d (n "bytestream") (r "^0.4.1") (d #t) (k 0)) (d (n "clvmr") (r "^0.3.0") (f (quote ("pre-eval"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "do-notation") (r "^0.1.3") (d #t) (k 0)) (d (n "encoding8") (r "^0.3.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (t "cfg(not(target_family=\"wasm\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_family=\"wasm\")") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_family=\"wasm\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lfsr") (r "^0.3.0") (d #t) (k 2)) (d (n "linked-hash-map") (r "^0.5.6") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "pyo3") (r "^0.14.2") (f (quote ("abi3-py38" "extension-module"))) (o #t) (d #t) (k 0)) (d (n "pyo3-build-config") (r "^0.15.1") (d #t) (k 1)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "regex") (r "^1.8.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.8.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.80") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_family=\"wasm\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.25") (d #t) (t "cfg(target_family=\"wasm\")") (k 0)) (d (n "yaml-rust") (r "^0.4") (d #t) (k 0)))) (h "196js8d2jh0gn6j3nfmzx0ym0kdc4jbcmhm1vn4rcyg747y965gp") (f (quote (("default")))) (s 2) (e (quote (("extension-module" "dep:pyo3"))))))

(define-public crate-clvm_tools_rs-0.1.41 (c (n "clvm_tools_rs") (v "0.1.41") (d (list (d (n "binascii") (r "^0.1.4") (d #t) (k 0)) (d (n "bls12_381") (r "=0.8.0") (f (quote ("experimental"))) (d #t) (k 0)) (d (n "bytestream") (r "^0.4.1") (d #t) (k 0)) (d (n "clvmr") (r "^0.3.2") (f (quote ("pre-eval"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "do-notation") (r "^0.1.3") (d #t) (k 0)) (d (n "encoding8") (r "^0.3.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (t "cfg(not(target_family=\"wasm\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_family=\"wasm\")") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_family=\"wasm\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lfsr") (r "^0.3.0") (d #t) (k 2)) (d (n "linked-hash-map") (r "^0.5.6") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "pyo3") (r "^0.20.2") (f (quote ("abi3-py38" "extension-module"))) (o #t) (d #t) (k 0)) (d (n "pyo3-build-config") (r "^0.15.1") (d #t) (k 1)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "regex") (r "^1.8.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.8.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.80") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_family=\"wasm\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.25") (d #t) (t "cfg(target_family=\"wasm\")") (k 0)) (d (n "yaml-rust") (r "^0.4") (d #t) (k 0)))) (h "03cz08x5pq14hbd61kjfdhx3abgsrvaqai8aj2qkfw67vk22ly8p") (f (quote (("default")))) (s 2) (e (quote (("extension-module" "dep:pyo3"))))))

(define-public crate-clvm_tools_rs-0.1.42 (c (n "clvm_tools_rs") (v "0.1.42") (d (list (d (n "binascii") (r "^0.1.4") (d #t) (k 0)) (d (n "bls12_381") (r "=0.8.0") (f (quote ("experimental"))) (d #t) (k 0)) (d (n "bytestream") (r "^0.4.1") (d #t) (k 0)) (d (n "clvmr") (r "^0.3.2") (f (quote ("pre-eval"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "do-notation") (r "^0.1.3") (d #t) (k 0)) (d (n "encoding8") (r "^0.3.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (t "cfg(not(target_family=\"wasm\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_family=\"wasm\")") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_family=\"wasm\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lfsr") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "lfsr") (r "^0.3.0") (d #t) (k 2)) (d (n "linked-hash-map") (r "^0.5.6") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "pyo3") (r "^0.20.2") (f (quote ("abi3-py38" "extension-module"))) (o #t) (d #t) (k 0)) (d (n "pyo3-build-config") (r "^0.15.1") (d #t) (k 1)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "regex") (r "^1.8.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.8.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.80") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_family=\"wasm\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.25") (d #t) (t "cfg(target_family=\"wasm\")") (k 0)) (d (n "yaml-rust") (r "^0.4") (d #t) (k 0)))) (h "134wwlr1x9krb0j1nzqjp9xz8invgb4myv17kd0c25ra6sa8mlvh") (f (quote (("default")))) (s 2) (e (quote (("fuzz" "dep:rand" "dep:rand_chacha" "dep:lfsr") ("extension-module" "dep:pyo3"))))))

(define-public crate-clvm_tools_rs-0.1.43 (c (n "clvm_tools_rs") (v "0.1.43") (d (list (d (n "binascii") (r "^0.1.4") (d #t) (k 0)) (d (n "bls12_381") (r "=0.8.0") (f (quote ("experimental"))) (d #t) (k 0)) (d (n "bytestream") (r "^0.4.1") (d #t) (k 0)) (d (n "clvmr") (r "^0.3.2") (f (quote ("pre-eval"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "do-notation") (r "^0.1.3") (d #t) (k 0)) (d (n "encoding8") (r "^0.3.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (t "cfg(not(target_family=\"wasm\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_family=\"wasm\")") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_family=\"wasm\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lfsr") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "lfsr") (r "^0.3.0") (d #t) (k 2)) (d (n "linked-hash-map") (r "^0.5.6") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "pyo3") (r "^0.20.2") (f (quote ("abi3-py38" "extension-module"))) (o #t) (d #t) (k 0)) (d (n "pyo3-build-config") (r "^0.15.1") (d #t) (k 1)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "regex") (r "^1.8.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.8.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.80") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_family=\"wasm\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.25") (d #t) (t "cfg(target_family=\"wasm\")") (k 0)) (d (n "yaml-rust") (r "^0.4") (d #t) (k 0)))) (h "05k7pirq9kdlnp8j4yql9b28gqn85n174qgq5kn1rk88lg4l70qc") (f (quote (("default")))) (s 2) (e (quote (("fuzz" "dep:rand" "dep:rand_chacha" "dep:lfsr") ("extension-module" "dep:pyo3"))))))

