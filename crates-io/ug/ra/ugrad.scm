(define-module (crates-io ug ra ugrad) #:use-module (crates-io))

(define-public crate-ugrad-0.1.0 (c (n "ugrad") (v "0.1.0") (d (list (d (n "bytemuck") (r "^1.13.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "daggy") (r "^0.8.0") (d #t) (k 0)) (d (n "defer") (r "^0.1.0") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "dot") (r "^0.1.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.3") (f (quote ("graphmap"))) (d #t) (k 0)) (d (n "pollster") (r "^0.3.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "wgpu") (r "^0.15") (f (quote ("trace"))) (d #t) (k 0)) (d (n "mnist") (r "^0.5.0") (f (quote ("download" "flate2"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 2)))) (h "0l4661vz1h1wlcdclcskwm630j0zlcx9h0pqi76lmzpaa6i5n9cz")))

