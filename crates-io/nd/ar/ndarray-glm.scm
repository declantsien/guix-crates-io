(define-module (crates-io nd ar ndarray-glm) #:use-module (crates-io))

(define-public crate-ndarray-glm-0.0.1 (c (n "ndarray-glm") (v "0.0.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "approx") (r "^0.3") (d #t) (k 2)) (d (n "blas-src") (r "^0.4") (f (quote ("openblas"))) (k 2)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (f (quote ("blas" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.12") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.12") (f (quote ("openblas-src"))) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0i1zbaka1v5k1b0lgxivl83p4vaaz833d5yrl750la5qkk1s89ma") (f (quote (("openblas-src" "ndarray-linalg/openblas-src") ("openblas" "ndarray-linalg/openblas") ("netlib" "ndarray-linalg/netlib") ("intel-mkl" "ndarray-linalg/intel-mkl"))))))

(define-public crate-ndarray-glm-0.0.2 (c (n "ndarray-glm") (v "0.0.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "approx") (r "^0.3") (d #t) (k 2)) (d (n "blas-src") (r "^0.4") (f (quote ("openblas"))) (k 2)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (f (quote ("blas" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.12") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.12") (f (quote ("openblas-src"))) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1v4gydcgsx9aii9qzafss6yj5ag6nd5jilz8gvhi83shsk1f3bjy") (f (quote (("openblas-src" "ndarray-linalg/openblas-src") ("openblas" "ndarray-linalg/openblas") ("netlib" "ndarray-linalg/netlib") ("intel-mkl" "ndarray-linalg/intel-mkl"))))))

(define-public crate-ndarray-glm-0.0.3 (c (n "ndarray-glm") (v "0.0.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "approx") (r "^0.3") (d #t) (k 2)) (d (n "blas-src") (r "^0.4") (f (quote ("openblas"))) (k 2)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (f (quote ("blas" "approx"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.12") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.12") (f (quote ("openblas-static"))) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "057i4d132jkl9nb4i4cw8m7ax4rlrw56fd2w5vvvsf3nywqw963a") (f (quote (("openblas-static" "ndarray-linalg/openblas-static") ("openblas-src" "ndarray-linalg/openblas-src") ("openblas" "ndarray-linalg/openblas") ("nightly" "binomial") ("netlib" "ndarray-linalg/netlib") ("intel-mkl" "ndarray-linalg/intel-mkl") ("binomial"))))))

(define-public crate-ndarray-glm-0.0.4 (c (n "ndarray-glm") (v "0.0.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "approx") (r "^0.3") (d #t) (k 2)) (d (n "blas-src") (r "^0.4") (f (quote ("openblas"))) (k 2)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (f (quote ("blas"))) (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (f (quote ("blas" "approx"))) (d #t) (k 2)) (d (n "ndarray-linalg") (r "^0.12") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.12") (f (quote ("openblas-static"))) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0nrq8im4dc8mm8ywibvakyya074icwp5bsvjypzlj2gdw73jivjy") (f (quote (("openblas-static" "ndarray-linalg/openblas-static") ("openblas-src" "ndarray-linalg/openblas-src") ("openblas" "ndarray-linalg/openblas") ("nightly" "binomial") ("netlib" "ndarray-linalg/netlib") ("intel-mkl" "ndarray-linalg/intel-mkl") ("binomial"))))))

(define-public crate-ndarray-glm-0.0.5 (c (n "ndarray-glm") (v "0.0.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "approx") (r "^0.3") (d #t) (k 2)) (d (n "blas-src") (r "^0.4") (f (quote ("openblas"))) (k 2)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (f (quote ("blas"))) (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (f (quote ("blas" "approx"))) (d #t) (k 2)) (d (n "ndarray-linalg") (r "^0.12") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.12") (f (quote ("openblas-static"))) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1gk3rqssyl8i7bpr11m2jfab6hbchpikm2z4nar4ybqn6yq1qqbs") (f (quote (("openblas-static" "ndarray-linalg/openblas-static") ("openblas-src" "ndarray-linalg/openblas-src") ("openblas" "ndarray-linalg/openblas") ("nightly" "binomial") ("netlib" "ndarray-linalg/netlib") ("intel-mkl" "ndarray-linalg/intel-mkl") ("binomial"))))))

(define-public crate-ndarray-glm-0.0.6 (c (n "ndarray-glm") (v "0.0.6") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "approx") (r "^0.3") (d #t) (k 2)) (d (n "blas-src") (r "^0.4") (f (quote ("openblas"))) (k 2)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (f (quote ("blas"))) (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (f (quote ("blas" "approx"))) (d #t) (k 2)) (d (n "ndarray-linalg") (r "^0.12") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.12") (f (quote ("openblas-static"))) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "11dj8z15n4ag62s1xk6j80zh6k52avs7vzi81vpbzaldyrwx24cy") (f (quote (("openblas-static" "ndarray-linalg/openblas-static") ("openblas-src" "ndarray-linalg/openblas-src") ("openblas" "ndarray-linalg/openblas") ("nightly" "binomial") ("netlib" "ndarray-linalg/netlib") ("intel-mkl" "ndarray-linalg/intel-mkl") ("binomial"))))))

(define-public crate-ndarray-glm-0.0.7 (c (n "ndarray-glm") (v "0.0.7") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "approx") (r "^0.3") (d #t) (k 2)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (f (quote ("blas"))) (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (f (quote ("blas" "approx"))) (d #t) (k 2)) (d (n "ndarray-linalg") (r "^0.12") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.12") (f (quote ("openblas-static"))) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0cmm1352zbnn8q1y3n8zkbj0wzzp297gcypvly1cmcwr4n8k485q") (f (quote (("openblas-static" "ndarray-linalg/openblas-static") ("openblas-src" "ndarray-linalg/openblas-src") ("openblas" "ndarray-linalg/openblas") ("nightly" "binomial") ("netlib" "ndarray-linalg/netlib") ("intel-mkl" "ndarray-linalg/intel-mkl") ("binomial"))))))

(define-public crate-ndarray-glm-0.0.8 (c (n "ndarray-glm") (v "0.0.8") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "ndarray") (r "^0.14") (f (quote ("blas"))) (d #t) (k 0)) (d (n "ndarray") (r "^0.14") (f (quote ("blas" "approx"))) (d #t) (k 2)) (d (n "ndarray-linalg") (r "^0.13") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.13") (f (quote ("openblas-system"))) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1jbs9018l39l03gdcl5ks1yqnzmzks1g9l7sd5snk9z0vygrnrnl") (f (quote (("openblas-system" "ndarray-linalg/openblas-system") ("openblas-static" "ndarray-linalg/openblas-static") ("nightly" "binomial") ("netlib-system" "ndarray-linalg/netlib-system") ("netlib-static" "ndarray-linalg/netlib-static") ("intel-mkl-system" "ndarray-linalg/intel-mkl-system") ("intel-mkl-static" "ndarray-linalg/intel-mkl-static") ("binomial"))))))

(define-public crate-ndarray-glm-0.0.9 (c (n "ndarray-glm") (v "0.0.9") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("blas"))) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("blas" "approx"))) (d #t) (k 2)) (d (n "ndarray-linalg") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14") (f (quote ("openblas-system"))) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "10lr38i6da642za64vb2314yjfvjjaya3g71idsabca00jji2gsw") (f (quote (("openblas-system" "ndarray-linalg/openblas-system") ("openblas-static" "ndarray-linalg/openblas-static") ("netlib-system" "ndarray-linalg/netlib-system") ("netlib-static" "ndarray-linalg/netlib-static") ("intel-mkl-system" "ndarray-linalg/intel-mkl-system") ("intel-mkl-static" "ndarray-linalg/intel-mkl-static"))))))

(define-public crate-ndarray-glm-0.0.10 (c (n "ndarray-glm") (v "0.0.10") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("blas"))) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("blas" "approx"))) (d #t) (k 2)) (d (n "ndarray-linalg") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14") (f (quote ("openblas-system"))) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0i0fvm7fa11vsv51swvq3v0mk9nhs5ihqj483bp4v0j5cvz64hjz") (f (quote (("openblas-system" "ndarray-linalg/openblas-system") ("openblas-static" "ndarray-linalg/openblas-static") ("netlib-system" "ndarray-linalg/netlib-system") ("netlib-static" "ndarray-linalg/netlib-static") ("intel-mkl-system" "ndarray-linalg/intel-mkl-system") ("intel-mkl-static" "ndarray-linalg/intel-mkl-static"))))))

(define-public crate-ndarray-glm-0.0.11 (c (n "ndarray-glm") (v "0.0.11") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("blas"))) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("blas" "approx"))) (d #t) (k 2)) (d (n "ndarray-linalg") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14") (f (quote ("openblas-system"))) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0za5v6ffy0dq9jq8mxy3p6qnfm1smksc82pbc7sfsikjd568x58y") (f (quote (("openblas-system" "ndarray-linalg/openblas-system") ("openblas-static" "ndarray-linalg/openblas-static") ("netlib-system" "ndarray-linalg/netlib-system") ("netlib-static" "ndarray-linalg/netlib-static") ("intel-mkl-system" "ndarray-linalg/intel-mkl-system") ("intel-mkl-static" "ndarray-linalg/intel-mkl-static"))))))

(define-public crate-ndarray-glm-0.0.12 (c (n "ndarray-glm") (v "0.0.12") (d (list (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("blas"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.16") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "ndarray") (r "^0.15") (f (quote ("blas" "approx"))) (d #t) (k 2)) (d (n "ndarray-linalg") (r "^0.16") (f (quote ("openblas-system"))) (k 2)))) (h "17j8b3jayf7zfdpwy0zbn6c53zys7m7v1bdsycb06gjhphlq4ql5") (f (quote (("openblas-system" "ndarray-linalg/openblas-system") ("openblas-static" "ndarray-linalg/openblas-static") ("netlib-system" "ndarray-linalg/netlib-system") ("netlib-static" "ndarray-linalg/netlib-static") ("intel-mkl-system" "ndarray-linalg/intel-mkl-system") ("intel-mkl-static" "ndarray-linalg/intel-mkl-static"))))))

