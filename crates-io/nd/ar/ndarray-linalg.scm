(define-module (crates-io nd ar ndarray-linalg) #:use-module (crates-io))

(define-public crate-ndarray-linalg-0.1.0 (c (n "ndarray-linalg") (v "0.1.0") (d (list (d (n "lapack") (r "^0.11.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.6.8") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.2.0") (d #t) (k 2)) (d (n "num-traits") (r "^0.1.36") (d #t) (k 0)) (d (n "rand") (r "^0.3.14") (d #t) (k 2)))) (h "015mvm9v9wpd3762wr7a9fsivzhbkn1kgbbr069aahg1lz1415z1")))

(define-public crate-ndarray-linalg-0.1.1 (c (n "ndarray-linalg") (v "0.1.1") (d (list (d (n "lapack") (r "^0.11") (d #t) (k 0)) (d (n "ndarray") (r "^0.6") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.2") (d #t) (k 2)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 2)))) (h "008qd2f8n67w4y5gcpzbwx5z6075979bpdbbnsj7whzn9lwfn24i")))

(define-public crate-ndarray-linalg-0.1.2 (c (n "ndarray-linalg") (v "0.1.2") (d (list (d (n "lapack") (r "^0.11.1") (d #t) (k 0)) (d (n "ndarray") (r "^0.6.9") (f (quote ("blas"))) (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.2.0") (d #t) (k 2)) (d (n "num-traits") (r "^0.1.36") (d #t) (k 0)) (d (n "rand") (r "^0.3.14") (d #t) (k 2)))) (h "1b5xdshbwdb3n5snzm9dgn10zkiv4rd8bxlggpnd4c04c396whw7")))

(define-public crate-ndarray-linalg-0.1.3 (c (n "ndarray-linalg") (v "0.1.3") (d (list (d (n "lapack") (r "^0.11.1") (d #t) (k 0)) (d (n "ndarray") (r "^0.6.9") (f (quote ("blas"))) (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.2.0") (d #t) (k 2)) (d (n "num-traits") (r "^0.1.36") (d #t) (k 0)) (d (n "rand") (r "^0.3.14") (d #t) (k 2)))) (h "0qa81jc6yif0qnsg5pgidy5amlcfmhm1dc5911x7msw23bnxiild")))

(define-public crate-ndarray-linalg-0.1.4 (c (n "ndarray-linalg") (v "0.1.4") (d (list (d (n "lapack") (r "^0.11.1") (d #t) (k 0)) (d (n "ndarray") (r "^0.7") (f (quote ("blas"))) (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.1.36") (d #t) (k 0)) (d (n "rand") (r "^0.3.14") (d #t) (k 2)))) (h "0rb4rq38y74v7cfhq1csppxgm882m2fgm3gdrnd1qli7ny0r64w4")))

(define-public crate-ndarray-linalg-0.1.5 (c (n "ndarray-linalg") (v "0.1.5") (d (list (d (n "float-cmp") (r "^0.2.3") (d #t) (k 2)) (d (n "lapack") (r "^0.11.1") (d #t) (k 0)) (d (n "ndarray") (r "^0.7") (f (quote ("blas"))) (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.1.36") (d #t) (k 0)) (d (n "rand") (r "^0.3.14") (d #t) (k 2)))) (h "09f3s9zxgn1gqjwxzqs7j3rfzhaj7cqf3rwfipi1z73pz1plnjbj")))

(define-public crate-ndarray-linalg-0.1.6 (c (n "ndarray-linalg") (v "0.1.6") (d (list (d (n "lapack") (r "^0.11.1") (d #t) (k 0)) (d (n "ndarray") (r "^0.7.3") (f (quote ("blas"))) (d #t) (k 0)) (d (n "ndarray-numtest") (r "^0.1.4") (d #t) (k 2)) (d (n "ndarray-rand") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.1.36") (d #t) (k 0)))) (h "1kyymbad0lkp50gh4yfbiy148chrhym9x3l3yxwdhcfrn3x3hfbh")))

(define-public crate-ndarray-linalg-0.2.0 (c (n "ndarray-linalg") (v "0.2.0") (d (list (d (n "blas") (r "^0.15") (d #t) (k 0)) (d (n "lapack") (r "^0.11") (d #t) (k 0)) (d (n "ndarray") (r "^0.7.3") (f (quote ("blas"))) (d #t) (k 0)) (d (n "ndarray-numtest") (r "^0.1.4") (d #t) (k 2)) (d (n "ndarray-rand") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.1.36") (d #t) (k 0)))) (h "1s00gi9xznm5hqzgg2y8gzadaybknnjwpbfvrdkq6xzmbfmririx")))

(define-public crate-ndarray-linalg-0.2.1 (c (n "ndarray-linalg") (v "0.2.1") (d (list (d (n "blas") (r "^0.15") (d #t) (k 0)) (d (n "lapack") (r "^0.11") (d #t) (k 0)) (d (n "ndarray") (r "^0.7.3") (f (quote ("blas"))) (d #t) (k 0)) (d (n "ndarray-numtest") (r "^0.1.4") (d #t) (k 2)) (d (n "ndarray-rand") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.1.36") (d #t) (k 0)))) (h "1y7s1v0fj1b8shrfqpxhm5kr70ifjxhfpa1lm1xvqxp5075miz8j")))

(define-public crate-ndarray-linalg-0.3.0 (c (n "ndarray-linalg") (v "0.3.0") (d (list (d (n "blas") (r "^0.15") (d #t) (k 0)) (d (n "lapack") (r "^0.11") (d #t) (k 0)) (d (n "ndarray") (r "^0.8") (f (quote ("blas"))) (d #t) (k 0)) (d (n "ndarray-numtest") (r "^0.2") (d #t) (k 2)) (d (n "ndarray-rand") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.1.36") (d #t) (k 0)))) (h "04wlzixipnximii25zvqx79pk6fiwdlvb3sfxlhdz545k06pkn9y")))

(define-public crate-ndarray-linalg-0.4.0 (c (n "ndarray-linalg") (v "0.4.0") (d (list (d (n "blas") (r "^0.15") (k 0)) (d (n "lapack") (r "^0.11") (k 0)) (d (n "ndarray") (r "^0.9") (f (quote ("blas"))) (k 0)) (d (n "ndarray-numtest") (r "^0.2") (d #t) (k 2)) (d (n "ndarray-rand") (r "^0.5") (d #t) (k 2)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)))) (h "1kj1q2zdpv8y4c60z7dirshlii233isn00d8lgp70iqcy3nd4n46") (f (quote (("openblas" "blas/openblas" "lapack/openblas") ("netlib" "blas/netlib" "lapack/netlib") ("default" "openblas"))))))

(define-public crate-ndarray-linalg-0.4.1 (c (n "ndarray-linalg") (v "0.4.1") (d (list (d (n "blas") (r "^0.15") (k 0)) (d (n "lapack") (r "^0.11") (k 0)) (d (n "ndarray") (r "^0.9") (f (quote ("blas"))) (k 0)) (d (n "ndarray-rand") (r "^0.5") (d #t) (k 2)) (d (n "num-complex") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)) (d (n "rand-extra") (r "^0.1") (d #t) (k 2)))) (h "199wg3ic536a0zcjlv62yv5lbrwc09n0ckrjyfgy4ck5s8rm91xg") (f (quote (("openblas" "blas/openblas" "lapack/openblas") ("netlib" "blas/netlib" "lapack/netlib") ("default" "openblas"))))))

(define-public crate-ndarray-linalg-0.5.0 (c (n "ndarray-linalg") (v "0.5.0") (d (list (d (n "blas") (r "^0.15") (k 0)) (d (n "derive-new") (r "^0.4") (d #t) (k 0)) (d (n "enum-error-derive") (r "^0.1") (d #t) (k 0)) (d (n "lapack") (r "^0.11") (k 0)) (d (n "ndarray") (r "^0.9") (f (quote ("blas"))) (k 0)) (d (n "num-complex") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)))) (h "1vd9m9lmm10r7ji29s7ghcbwl5xmfbdm2vp2pj95g9mlcl5g04m2") (f (quote (("openblas" "blas/openblas" "lapack/openblas") ("netlib" "blas/netlib" "lapack/netlib") ("default" "openblas"))))))

(define-public crate-ndarray-linalg-0.5.1 (c (n "ndarray-linalg") (v "0.5.1") (d (list (d (n "blas") (r "^0.15") (k 0)) (d (n "derive-new") (r "^0.4") (d #t) (k 0)) (d (n "enum-error-derive") (r "^0.1") (d #t) (k 0)) (d (n "lapack") (r "^0.11") (k 0)) (d (n "ndarray") (r "^0.9") (f (quote ("blas"))) (k 0)) (d (n "num-complex") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)))) (h "1i3w59lwq3wr11vybplbzlapz5ppvsjb1qd19bkhjz2p2va23mi5") (f (quote (("openblas" "blas/openblas" "lapack/openblas") ("netlib" "blas/netlib" "lapack/netlib") ("default" "openblas"))))))

(define-public crate-ndarray-linalg-0.5.2 (c (n "ndarray-linalg") (v "0.5.2") (d (list (d (n "blas") (r "^0.15") (k 0)) (d (n "derive-new") (r "^0.4") (d #t) (k 0)) (d (n "enum-error-derive") (r "^0.1") (d #t) (k 0)) (d (n "lapack") (r "^0.11") (k 0)) (d (n "ndarray") (r "^0.9") (f (quote ("blas"))) (k 0)) (d (n "num-complex") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)))) (h "1bjh8fwvfh2mp9lvybk5lj359z2wn3253s54bk5bsdbvzisgzii1") (f (quote (("openblas" "blas/openblas" "lapack/openblas") ("netlib" "blas/netlib" "lapack/netlib") ("default" "openblas"))))))

(define-public crate-ndarray-linalg-0.5.3 (c (n "ndarray-linalg") (v "0.5.3") (d (list (d (n "blas") (r "^0.15") (k 0)) (d (n "derive-new") (r "^0.4") (d #t) (k 0)) (d (n "enum-error-derive") (r "^0.1") (d #t) (k 0)) (d (n "lapack") (r "^0.11") (k 0)) (d (n "ndarray") (r "^0.9") (f (quote ("blas"))) (k 0)) (d (n "num-complex") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)))) (h "00ddw9p431bvcdi6kkv7g7qj871xijdxmm28mmzr2y4myxd1szak") (f (quote (("openblas" "blas/openblas" "lapack/openblas") ("netlib" "blas/netlib" "lapack/netlib") ("default" "openblas"))))))

(define-public crate-ndarray-linalg-0.5.4 (c (n "ndarray-linalg") (v "0.5.4") (d (list (d (n "blas") (r "^0.15") (k 0)) (d (n "derive-new") (r "^0.4") (d #t) (k 0)) (d (n "enum-error-derive") (r "^0.1") (d #t) (k 0)) (d (n "lapack") (r "^0.11") (k 0)) (d (n "ndarray") (r "^0.9") (f (quote ("blas"))) (k 0)) (d (n "num-complex") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)))) (h "07jirq5jxl0skfbclsin6kq794v7mrnxhysx11111j3lcgrdbyqi") (f (quote (("openblas" "blas/openblas" "lapack/openblas") ("netlib" "blas/netlib" "lapack/netlib") ("default" "openblas"))))))

(define-public crate-ndarray-linalg-0.6.0 (c (n "ndarray-linalg") (v "0.6.0") (d (list (d (n "derive-new") (r "^0.4") (d #t) (k 0)) (d (n "enum-error-derive") (r "^0.1") (d #t) (k 0)) (d (n "lapack") (r "^0.13") (k 0)) (d (n "ndarray") (r "^0.10") (f (quote ("blas"))) (k 0)) (d (n "netlib-src") (r "^0.7.0") (o #t) (k 0)) (d (n "num-complex") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)) (d (n "openblas-src") (r "^0.5.3") (o #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)))) (h "0d9391a756n37973rx1s68wy9z60023h3wif6san9zagnnq9dhfk") (f (quote (("openblas-system" "lapack/openblas" "openblas-src/system") ("openblas-static" "lapack/openblas" "openblas-src/static") ("openblas-shared" "lapack/openblas") ("netlib-system" "lapack/netlib" "netlib-src/system") ("netlib-static" "lapack/netlib" "netlib-src/static") ("netlib-shared" "lapack/netlib") ("default" "openblas-static"))))))

(define-public crate-ndarray-linalg-0.6.1 (c (n "ndarray-linalg") (v "0.6.1") (d (list (d (n "derive-new") (r "^0.4") (d #t) (k 0)) (d (n "enum-error-derive") (r "^0.1") (d #t) (k 0)) (d (n "lapack") (r "^0.13") (k 0)) (d (n "ndarray") (r "^0.10") (f (quote ("blas"))) (k 0)) (d (n "netlib-src") (r "^0.7.0") (o #t) (k 0)) (d (n "num-complex") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)) (d (n "openblas-src") (r "^0.5.3") (o #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)))) (h "1vlrdrdpzpvczfvrspw688nhsxhrsnp9sf3f3cqn6hc7jhrjjhx8") (f (quote (("openblas-system" "lapack/openblas" "openblas-src/system") ("openblas-static" "lapack/openblas" "openblas-src/static") ("openblas-shared" "lapack/openblas") ("netlib-system" "lapack/netlib" "netlib-src/system") ("netlib-static" "lapack/netlib" "netlib-src/static") ("netlib-shared" "lapack/netlib") ("default" "openblas-static"))))))

(define-public crate-ndarray-linalg-0.6.2 (c (n "ndarray-linalg") (v "0.6.2") (d (list (d (n "derive-new") (r "^0.4") (d #t) (k 0)) (d (n "enum-error-derive") (r "^0.1") (d #t) (k 0)) (d (n "lapack") (r "^0.13") (k 0)) (d (n "ndarray") (r "^0.10") (f (quote ("blas"))) (k 0)) (d (n "netlib-src") (r "^0.7.0") (o #t) (k 0)) (d (n "num-complex") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)) (d (n "openblas-src") (r "^0.5.3") (o #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)))) (h "1lf20hh2xw2n9ah0p572b4h79zkg0sg9s30mjni0771ii4xf550d") (f (quote (("openblas-system" "lapack/openblas" "openblas-src/system") ("openblas-static" "lapack/openblas" "openblas-src/static") ("openblas-shared" "lapack/openblas") ("netlib-system" "lapack/netlib" "netlib-src/system") ("netlib-static" "lapack/netlib" "netlib-src/static") ("netlib-shared" "lapack/netlib") ("default" "openblas-static"))))))

(define-public crate-ndarray-linalg-0.7.0 (c (n "ndarray-linalg") (v "0.7.0") (d (list (d (n "derive-new") (r "^0.4") (d #t) (k 0)) (d (n "lapack") (r "^0.13") (k 0)) (d (n "ndarray") (r "^0.10") (f (quote ("blas"))) (k 0)) (d (n "netlib-src") (r "^0.7.0") (o #t) (k 0)) (d (n "num-complex") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)) (d (n "openblas-src") (r "^0.5.3") (o #t) (k 0)) (d (n "procedurals") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)))) (h "0v16a7579h5xh7wwirms13qwal96q1c0narxqnq3kv8a4yf8h75n") (f (quote (("openblas-system" "lapack/openblas" "openblas-src/system") ("openblas-static" "lapack/openblas" "openblas-src/static") ("openblas-shared" "lapack/openblas") ("netlib-system" "lapack/netlib" "netlib-src/system") ("netlib-static" "lapack/netlib" "netlib-src/static") ("netlib-shared" "lapack/netlib") ("default" "openblas-static"))))))

(define-public crate-ndarray-linalg-0.7.1 (c (n "ndarray-linalg") (v "0.7.1") (d (list (d (n "derive-new") (r "^0.4") (d #t) (k 0)) (d (n "lapack") (r "^0.13") (k 0)) (d (n "ndarray") (r "^0.10") (f (quote ("blas"))) (k 0)) (d (n "netlib-src") (r "^0.7.0") (o #t) (k 0)) (d (n "num-complex") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)) (d (n "openblas-src") (r "^0.5.3") (o #t) (k 0)) (d (n "procedurals") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)))) (h "1ql8ah9n8qsi6rmws3qyzpx682hkycm7f7bvj7p6y6w17xd2ccnz") (f (quote (("openblas-system" "lapack/openblas" "openblas-src/system") ("openblas-static" "lapack/openblas" "openblas-src/static") ("openblas-shared" "lapack/openblas") ("netlib-system" "lapack/netlib" "netlib-src/system") ("netlib-static" "lapack/netlib" "netlib-src/static") ("netlib-shared" "lapack/netlib") ("default" "openblas-static"))))))

(define-public crate-ndarray-linalg-0.8.0 (c (n "ndarray-linalg") (v "0.8.0") (d (list (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "intel-mkl-src") (r "^0.2.5") (o #t) (k 0)) (d (n "lapacke") (r "^0.1.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.10") (k 0)) (d (n "netlib-src") (r "^0.7.0") (f (quote ("static" "cblas" "lapacke" "tmg"))) (o #t) (k 0)) (d (n "num-complex") (r "^0.1") (k 0)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)) (d (n "openblas-src") (r "^0.5.3") (f (quote ("static" "cblas" "lapacke"))) (o #t) (k 0)) (d (n "procedurals") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)))) (h "128kl12n3j851aqvwkdk7aiiq1l5hrf1x46w315vx0f063vhqmcz") (f (quote (("openblas" "openblas-src") ("netlib" "netlib-src") ("intel-mkl" "intel-mkl-src") ("default"))))))

(define-public crate-ndarray-linalg-0.9.0 (c (n "ndarray-linalg") (v "0.9.0") (d (list (d (n "blas-src") (r "^0.1") (o #t) (k 0)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "lapack-src") (r "^0.1") (o #t) (k 0)) (d (n "lapacke") (r "^0.1.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.11") (f (quote ("blas"))) (k 0)) (d (n "netlib-src") (r "^0.7.0") (f (quote ("static" "cblas" "lapacke" "tmg"))) (o #t) (k 0)) (d (n "num-complex") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)) (d (n "openblas-src") (r "^0.5.3") (f (quote ("static" "cblas" "lapacke"))) (o #t) (k 0)) (d (n "procedurals") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 0)))) (h "1h6kpjkr7v6kj4200ydlp7d1yp4d6p5q4dzczw2yazbv5avh6pr0") (f (quote (("openblas" "lapack-src/openblas" "blas-src/openblas" "openblas-src") ("netlib" "lapack-src/netlib" "blas-src/netlib" "netlib-src") ("intel-mkl" "lapack-src/intel-mkl" "blas-src/intel-mkl") ("default") ("accelerate" "lapack-src/accelerate" "blas-src/accelerate"))))))

(define-public crate-ndarray-linalg-0.10.0 (c (n "ndarray-linalg") (v "0.10.0") (d (list (d (n "blas-src") (r "^0.2") (o #t) (k 0)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "lapack-src") (r "^0.2") (o #t) (k 0)) (d (n "lapacke") (r "^0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (f (quote ("blas"))) (k 0)) (d (n "netlib-src") (r "^0.7.0") (f (quote ("static" "cblas" "lapacke" "tmg"))) (o #t) (k 0)) (d (n "num-complex") (r "^0.2") (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "openblas-src") (r "^0.6.0") (f (quote ("static" "cblas" "lapacke"))) (o #t) (k 0)) (d (n "procedurals") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 0)))) (h "1f4allm71i22nv49sxfdbjsixqhb6nmssd87ymd2y26lgzdj4s1k") (f (quote (("serde-1" "ndarray/serde-1" "num-complex/serde") ("openblas" "lapack-src/openblas" "blas-src/openblas" "openblas-src") ("netlib" "lapack-src/netlib" "blas-src/netlib" "netlib-src") ("intel-mkl" "lapack-src/intel-mkl" "blas-src/intel-mkl") ("default") ("accelerate" "lapack-src/accelerate" "blas-src/accelerate"))))))

(define-public crate-ndarray-linalg-0.11.0 (c (n "ndarray-linalg") (v "0.11.0") (d (list (d (n "blas-src") (r "^0.3") (o #t) (k 0)) (d (n "cauchy") (r "^0.2.1") (d #t) (k 0)) (d (n "lapack-src") (r "^0.3") (o #t) (k 0)) (d (n "lapacke") (r "^0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (f (quote ("blas"))) (k 0)) (d (n "num-complex") (r "^0.2.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 0)))) (h "1xq1334g5nknjay1l96sl116znn7dn33r76kw1954fbgizvvmfcd") (f (quote (("serde-1" "ndarray/serde-1" "num-complex/serde") ("openblas" "lapack-src/openblas" "blas-src/openblas") ("netlib" "lapack-src/netlib" "blas-src/netlib") ("intel-mkl" "lapack-src/intel-mkl" "blas-src/intel-mkl") ("default"))))))

(define-public crate-ndarray-linalg-0.11.1 (c (n "ndarray-linalg") (v "0.11.1") (d (list (d (n "blas-src") (r "^0.3") (k 0)) (d (n "cauchy") (r "^0.2.1") (d #t) (k 0)) (d (n "lapack-src") (r "^0.3") (k 0)) (d (n "lapacke") (r "^0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (f (quote ("blas"))) (k 0)) (d (n "num-complex") (r "^0.2.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 0)))) (h "1hyqrx8l6976zmv7spb0ma7infl4ziqaqdg825zd51jsjikqimqb") (f (quote (("serde-1" "ndarray/serde-1" "num-complex/serde") ("openblas" "lapack-src/openblas" "blas-src/openblas") ("netlib" "lapack-src/netlib" "blas-src/netlib") ("intel-mkl" "lapack-src/intel-mkl" "blas-src/intel-mkl") ("default"))))))

(define-public crate-ndarray-linalg-0.12.0 (c (n "ndarray-linalg") (v "0.12.0") (d (list (d (n "blas-src") (r "^0.4") (k 0)) (d (n "cauchy") (r "^0.2.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lapack-src") (r "^0.4") (k 0)) (d (n "lapacke") (r "^0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (f (quote ("blas"))) (k 0)) (d (n "num-complex") (r "^0.2.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "openblas-src") (r "^0.7") (f (quote ("static"))) (o #t) (k 0)) (d (n "paste") (r "^0.1") (d #t) (k 2)) (d (n "rand") (r "^0.5") (d #t) (k 0)))) (h "0ykachplyf20dqdcbvh4f14dydwijsp31hch74p3ica1xwvccaak") (f (quote (("static" "openblas-static") ("serde-1" "ndarray/serde-1" "num-complex/serde") ("openblas-static" "openblas" "openblas-src") ("openblas" "lapack-src/openblas" "blas-src/openblas") ("netlib" "lapack-src/netlib" "blas-src/netlib") ("intel-mkl" "lapack-src/intel-mkl" "blas-src/intel-mkl") ("default"))))))

(define-public crate-ndarray-linalg-0.12.1 (c (n "ndarray-linalg") (v "0.12.1") (d (list (d (n "approx") (r "^0.3.2") (f (quote ("num-complex"))) (d #t) (k 2)) (d (n "blas-src") (r "^0.6.1") (k 0)) (d (n "cauchy") (r "^0.2.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3.1") (d #t) (k 2)) (d (n "lapack-src") (r "^0.6.0") (k 0)) (d (n "lapacke") (r "^0.2.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.13.0") (f (quote ("blas" "approx"))) (k 0)) (d (n "num-complex") (r "^0.2.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.11") (d #t) (k 0)) (d (n "openblas-src") (r "^0.9.0") (f (quote ("static"))) (o #t) (k 0)) (d (n "paste") (r "^0.1.9") (d #t) (k 2)) (d (n "rand") (r "^0.5") (d #t) (k 0)))) (h "077017m7maw4ij0k9rkw1xyqqqqbz0phaazyv79x744n2lgfb4k8") (f (quote (("static" "openblas-static") ("serde-1" "ndarray/serde-1" "num-complex/serde") ("openblas-static" "openblas" "openblas-src") ("openblas" "lapack-src/openblas" "blas-src/openblas") ("netlib" "lapack-src/netlib" "blas-src/netlib") ("intel-mkl" "lapack-src/intel-mkl" "blas-src/intel-mkl") ("default"))))))

(define-public crate-ndarray-linalg-0.13.0 (c (n "ndarray-linalg") (v "0.13.0") (d (list (d (n "approx") (r "^0.4") (f (quote ("num-complex"))) (d #t) (k 2)) (d (n "cauchy") (r "^0.3.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lax") (r "^0.1.0") (k 0)) (d (n "ndarray") (r "^0.14") (f (quote ("blas" "approx"))) (k 0)) (d (n "num-complex") (r "^0.3.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.11") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)))) (h "1d2hvnfvbwm6vm1kzzrhgcn07xlq2xmkbbia25k1cb1y6rhp7i6d") (f (quote (("openblas-system" "lax/openblas-system") ("openblas-static" "lax/openblas-static") ("openblas" "lax/openblas") ("netlib-system" "lax/netlib-system") ("netlib-static" "lax/netlib-static") ("netlib" "lax/netlib") ("intel-mkl-system" "lax/intel-mkl-system") ("intel-mkl-static" "lax/intel-mkl-static") ("intel-mkl" "lax/intel-mkl") ("default"))))))

(define-public crate-ndarray-linalg-0.13.1-alpha.1 (c (n "ndarray-linalg") (v "0.13.1-alpha.1") (d (list (d (n "approx") (r "^0.4") (f (quote ("num-complex"))) (d #t) (k 2)) (d (n "cauchy") (r "^0.3.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lax") (r "^0.1.0") (k 0)) (d (n "ndarray") (r "^0.14") (f (quote ("blas" "approx"))) (k 0)) (d (n "num-complex") (r "^0.3.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.11") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)))) (h "17qbaqpcdp0fijvsrwizn7a788bra4cxhs3wfg2iz9xyf879i45j") (f (quote (("openblas-system" "lax/openblas-system") ("openblas-static" "lax/openblas-static") ("openblas" "lax/openblas") ("netlib-system" "lax/netlib-system") ("netlib-static" "lax/netlib-static") ("netlib" "lax/netlib") ("intel-mkl-system" "lax/intel-mkl-system") ("intel-mkl-static" "lax/intel-mkl-static") ("intel-mkl" "lax/intel-mkl") ("default"))))))

(define-public crate-ndarray-linalg-0.13.1 (c (n "ndarray-linalg") (v "0.13.1") (d (list (d (n "approx") (r "^0.4") (f (quote ("num-complex"))) (d #t) (k 2)) (d (n "cauchy") (r "^0.3.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lax") (r "^0.1.0") (k 0)) (d (n "ndarray") (r "^0.14") (f (quote ("blas" "approx"))) (k 0)) (d (n "num-complex") (r "^0.3.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.11") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)))) (h "0yisag65amrhmr3ayb72jfrfkld4c8p1fb84nr2ca5y07bl8zf6z") (f (quote (("openblas-system" "lax/openblas-system") ("openblas-static" "lax/openblas-static") ("openblas" "lax/openblas") ("netlib-system" "lax/netlib-system") ("netlib-static" "lax/netlib-static") ("netlib" "lax/netlib") ("intel-mkl-system" "lax/intel-mkl-system") ("intel-mkl-static" "lax/intel-mkl-static") ("intel-mkl" "lax/intel-mkl") ("default"))))))

(define-public crate-ndarray-linalg-0.14.0 (c (n "ndarray-linalg") (v "0.14.0") (d (list (d (n "approx") (r "^0.4.0") (f (quote ("num-complex"))) (d #t) (k 2)) (d (n "cauchy") (r "^0.4.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "lax") (r "^0.2.0") (k 0)) (d (n "ndarray") (r "^0.15.2") (f (quote ("blas" "approx" "std"))) (k 0)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)))) (h "13nfxw1ij6zv0wbgsi6ns67v97jczdvnkzyg95nv66q0qbsqxcki") (f (quote (("openblas-system" "lax/openblas-system") ("openblas-static" "lax/openblas-static") ("openblas" "lax/openblas") ("netlib-system" "lax/netlib-system") ("netlib-static" "lax/netlib-static") ("netlib" "lax/netlib") ("intel-mkl-system" "lax/intel-mkl-system") ("intel-mkl-static" "lax/intel-mkl-static") ("intel-mkl" "lax/intel-mkl") ("default"))))))

(define-public crate-ndarray-linalg-0.14.1-alpha.1 (c (n "ndarray-linalg") (v "0.14.1-alpha.1") (d (list (d (n "approx") (r "^0.4.0") (f (quote ("num-complex"))) (d #t) (k 2)) (d (n "cauchy") (r "^0.4.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "lax") (r "^0.2.0") (k 0)) (d (n "ndarray") (r "^0.15.2") (f (quote ("blas" "approx" "std"))) (k 0)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)))) (h "065v3wr5yrq73ddgn9gdq0f3h6ig4p2y0wz6m5j2yqn1bfhd4j1v") (f (quote (("openblas-system" "lax/openblas-system") ("openblas-static" "lax/openblas-static") ("openblas" "lax/openblas") ("netlib-system" "lax/netlib-system") ("netlib-static" "lax/netlib-static") ("netlib" "lax/netlib") ("intel-mkl-system" "lax/intel-mkl-system") ("intel-mkl-static" "lax/intel-mkl-static") ("intel-mkl" "lax/intel-mkl") ("default"))))))

(define-public crate-ndarray-linalg-0.14.1 (c (n "ndarray-linalg") (v "0.14.1") (d (list (d (n "approx") (r "^0.4.0") (f (quote ("num-complex"))) (d #t) (k 2)) (d (n "cauchy") (r "^0.4.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "lax") (r "^0.2.0") (k 0)) (d (n "ndarray") (r "^0.15.2") (f (quote ("blas" "approx" "std"))) (k 0)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)))) (h "0x4dszis5wi2xnk10nj18vd9d9jnx985723bb4f41g4phv0vclv9") (f (quote (("openblas-system" "lax/openblas-system") ("openblas-static" "lax/openblas-static") ("openblas" "lax/openblas") ("netlib-system" "lax/netlib-system") ("netlib-static" "lax/netlib-static") ("netlib" "lax/netlib") ("intel-mkl-system" "lax/intel-mkl-system") ("intel-mkl-static" "lax/intel-mkl-static") ("intel-mkl" "lax/intel-mkl") ("default"))))))

(define-public crate-ndarray-linalg-0.15.0-rc.0 (c (n "ndarray-linalg") (v "0.15.0-rc.0") (d (list (d (n "approx") (r "^0.4.0") (f (quote ("num-complex"))) (d #t) (k 2)) (d (n "cauchy") (r "^0.4.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "lax") (r "^0.15.0-rc.0") (k 0)) (d (n "ndarray") (r "^0.15.2") (f (quote ("blas" "approx" "std"))) (k 0)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)))) (h "07j9j7n2qy1f41vzr202ilsi90ip5aa1cv0m39fsalyhvhhi5dkn") (f (quote (("openblas-system" "lax/openblas-system") ("openblas-static" "lax/openblas-static") ("openblas" "lax/openblas") ("netlib-system" "lax/netlib-system") ("netlib-static" "lax/netlib-static") ("netlib" "lax/netlib") ("intel-mkl-system" "lax/intel-mkl-system") ("intel-mkl-static" "lax/intel-mkl-static") ("intel-mkl" "lax/intel-mkl") ("default"))))))

(define-public crate-ndarray-linalg-0.15.0-rc.1 (c (n "ndarray-linalg") (v "0.15.0-rc.1") (d (list (d (n "approx") (r "^0.4.0") (f (quote ("num-complex"))) (d #t) (k 2)) (d (n "cauchy") (r "^0.4.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "lax") (r "^0.15.0-rc.0") (k 0)) (d (n "ndarray") (r "^0.15.2") (f (quote ("blas" "approx" "std"))) (k 0)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)))) (h "0warsjpbp64jlyxyzws2nxmbkvais9gjhv7lnz201xmj7x6x1vna") (f (quote (("openblas-system" "lax/openblas-system") ("openblas-static" "lax/openblas-static") ("openblas" "lax/openblas") ("netlib-system" "lax/netlib-system") ("netlib-static" "lax/netlib-static") ("netlib" "lax/netlib") ("intel-mkl-system" "lax/intel-mkl-system") ("intel-mkl-static" "lax/intel-mkl-static") ("intel-mkl" "lax/intel-mkl") ("default"))))))

(define-public crate-ndarray-linalg-0.15.0 (c (n "ndarray-linalg") (v "0.15.0") (d (list (d (n "approx") (r "^0.4.0") (f (quote ("num-complex"))) (d #t) (k 2)) (d (n "cauchy") (r "^0.4.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "lax") (r "^0.15.0-rc.0") (k 0)) (d (n "ndarray") (r "^0.15.2") (f (quote ("blas" "approx" "std"))) (k 0)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)))) (h "07wgf71dngnfmagl4rd0n06my5n5p1f0yk90arh8q8lg88vgz1wg") (f (quote (("openblas-system" "lax/openblas-system") ("openblas-static" "lax/openblas-static") ("openblas" "lax/openblas") ("netlib-system" "lax/netlib-system") ("netlib-static" "lax/netlib-static") ("netlib" "lax/netlib") ("intel-mkl-system" "lax/intel-mkl-system") ("intel-mkl-static" "lax/intel-mkl-static") ("intel-mkl" "lax/intel-mkl") ("default"))))))

(define-public crate-ndarray-linalg-0.16.0-rc.0 (c (n "ndarray-linalg") (v "0.16.0-rc.0") (d (list (d (n "approx") (r "^0.4.0") (f (quote ("num-complex"))) (d #t) (k 2)) (d (n "cauchy") (r "^0.4.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "katexit") (r "^0.1.2") (d #t) (k 0)) (d (n "lax") (r "^0.16.0-rc.0") (k 0)) (d (n "ndarray") (r "^0.15.2") (f (quote ("blas" "approx" "std"))) (k 0)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "rand_pcg") (r "^0.3.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)))) (h "11igyp5d75walvcdj8r6lmjrba6l2w7pmzi3ajrbqs0qk7vqx12m") (f (quote (("openblas-system" "lax/openblas-system") ("openblas-static" "lax/openblas-static") ("openblas" "lax/openblas") ("netlib-system" "lax/netlib-system") ("netlib-static" "lax/netlib-static") ("netlib" "lax/netlib") ("intel-mkl-system" "lax/intel-mkl-system") ("intel-mkl-static" "lax/intel-mkl-static") ("intel-mkl" "lax/intel-mkl") ("default"))))))

(define-public crate-ndarray-linalg-0.16.0 (c (n "ndarray-linalg") (v "0.16.0") (d (list (d (n "approx") (r "^0.4.0") (f (quote ("num-complex"))) (d #t) (k 2)) (d (n "cauchy") (r "^0.4.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "katexit") (r "^0.1.2") (d #t) (k 0)) (d (n "lax") (r "^0.16.0-rc.0") (k 0)) (d (n "ndarray") (r "^0.15.2") (f (quote ("blas" "approx" "std"))) (k 0)) (d (n "num-complex") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "rand_pcg") (r "^0.3.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)))) (h "0hncsakcxsi3zjnphinnrrxaib2404z2pssxbjl686wl1kd8s3hb") (f (quote (("openblas-system" "lax/openblas-system") ("openblas-static" "lax/openblas-static") ("openblas" "lax/openblas") ("netlib-system" "lax/netlib-system") ("netlib-static" "lax/netlib-static") ("netlib" "lax/netlib") ("intel-mkl-system" "lax/intel-mkl-system") ("intel-mkl-static" "lax/intel-mkl-static") ("intel-mkl" "lax/intel-mkl") ("default"))))))

