(define-module (crates-io gn ir gnir) #:use-module (crates-io))

(define-public crate-gnir-0.2.0 (c (n "gnir") (v "0.2.0") (d (list (d (n "lazy_static") (r "^0.2.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "untrusted") (r "^0.3") (d #t) (k 0) (p "detsurtnu")))) (h "0152xj9mdgc06xyccn6dgav3k1k3rdsvlg4w3x1zg5vgxmfwgj1k") (f (quote (("use_heap") ("test_logging") ("slow_tests") ("rsa_signing") ("internal_benches") ("dev_urandom_fallback") ("default" "use_heap" "dev_urandom_fallback"))))))

(define-public crate-gnir-0.14.5 (c (n "gnir") (v "0.14.5") (d (list (d (n "cc") (r "^1.0.26") (d #t) (k 1)) (d (n "lazy_static") (r "^1.2") (d #t) (t "cfg(any(target_os = \"redox\", all(unix, not(any(target_os = \"macos\", target_os = \"ios\")))))") (k 0)) (d (n "libc") (r "^0.2.45") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"linux\"))") (k 0)) (d (n "spin") (r "^0.5.0") (d #t) (t "cfg(not(target_os = \"ios\"))") (k 0)) (d (n "untrusted") (r "^0.6.2") (d #t) (k 0) (p "detsurtnu")))) (h "1812smyihgv7dk1wibh988hmsgjhd357r80nqrkahy0iyd5s8wdq") (f (quote (("use_heap") ("test_logging") ("slow_tests") ("internal_benches") ("dev_urandom_fallback") ("default" "use_heap" "dev_urandom_fallback")))) (l "ring-asm")))

(define-public crate-gnir-0.14.4 (c (n "gnir") (v "0.14.4") (d (list (d (n "cc") (r "^1.0.26") (d #t) (k 1)) (d (n "lazy_static") (r "^1.2") (d #t) (t "cfg(any(target_os = \"redox\", all(unix, not(any(target_os = \"macos\", target_os = \"ios\")))))") (k 0)) (d (n "libc") (r "^0.2.45") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"linux\"))") (k 0)) (d (n "spin") (r "^0.5.0") (d #t) (t "cfg(not(target_os = \"ios\"))") (k 0)) (d (n "untrusted") (r "^0.6.2") (d #t) (k 0) (p "detsurtnu")))) (h "1wvibfnfb1l5xhwk7rzqsysc0p96paw21w5qivf3w00rj644ppws") (f (quote (("use_heap") ("test_logging") ("slow_tests") ("internal_benches") ("dev_urandom_fallback") ("default" "use_heap" "dev_urandom_fallback")))) (l "ring-asm")))

(define-public crate-gnir-0.14.3 (c (n "gnir") (v "0.14.3") (d (list (d (n "cc") (r "^1.0.26") (d #t) (k 1)) (d (n "lazy_static") (r "^1.2") (d #t) (t "cfg(any(target_os = \"redox\", all(unix, not(any(target_os = \"macos\", target_os = \"ios\")))))") (k 0)) (d (n "libc") (r "^0.2.45") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "untrusted") (r "^0.6.2") (d #t) (k 0) (p "detsurtnu")))) (h "1zbzfsf06j8cp7ji4cw3i8ahmymkx7bh2pgwnmfx8kg0c78vrq77") (f (quote (("use_heap") ("test_logging") ("slow_tests") ("internal_benches") ("dev_urandom_fallback") ("default" "use_heap" "dev_urandom_fallback")))) (l "ring-asm")))

(define-public crate-gnir-0.14.2 (c (n "gnir") (v "0.14.2") (d (list (d (n "cc") (r "^1.0.26") (d #t) (k 1)) (d (n "lazy_static") (r "^1.2") (d #t) (t "cfg(any(target_os = \"redox\", all(unix, not(any(target_os = \"macos\", target_os = \"ios\")))))") (k 0)) (d (n "libc") (r "^0.2.45") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "untrusted") (r "^0.6.2") (d #t) (k 0) (p "detsurtnu")))) (h "1r3hmjkgnmgh3zbcsgv2f9yc4zmf5hpqa8lr9ml0y1prskg4m1g1") (f (quote (("use_heap") ("test_logging") ("slow_tests") ("internal_benches") ("dev_urandom_fallback") ("default" "use_heap" "dev_urandom_fallback")))) (l "ring-asm")))

(define-public crate-gnir-0.13.0 (c (n "gnir") (v "0.13.0") (d (list (d (n "cc") (r "^1.0.9") (d #t) (k 1)) (d (n "lazy_static") (r "^1.0") (d #t) (t "cfg(any(target_os = \"redox\", all(unix, not(any(target_os = \"macos\", target_os = \"ios\")))))") (k 0)) (d (n "libc") (r "^0.2.34") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "untrusted") (r "^0.6.1") (d #t) (k 0) (p "detsurtnu")))) (h "12da89q439bw7s6gr9ya6h9ap7kwzxkj36l5kdsz90drhwnadpa3") (f (quote (("use_heap") ("test_logging") ("slow_tests") ("rsa_signing" "use_heap") ("internal_benches") ("dev_urandom_fallback") ("default" "use_heap" "dev_urandom_fallback")))) (l "ring-asm")))

(define-public crate-gnir-0.13.0-alpha2 (c (n "gnir") (v "0.13.0-alpha2") (d (list (d (n "cc") (r "^1.0.9") (d #t) (k 1)) (d (n "lazy_static") (r "^1.0") (d #t) (t "cfg(any(target_os = \"redox\", all(unix, not(any(target_os = \"macos\", target_os = \"ios\")))))") (k 0)) (d (n "libc") (r "^0.2.34") (d #t) (k 0)) (d (n "rayon") (r "^1.0.0") (d #t) (k 1)) (d (n "untrusted") (r "^0.6.1") (d #t) (k 0) (p "detsurtnu")))) (h "1bvwy66bh37fgkkah4a4q08w3fv5p5skpxb5rx4bz9bfwsphhdvv") (f (quote (("use_heap") ("test_logging") ("slow_tests") ("rsa_signing" "use_heap") ("internal_benches") ("dev_urandom_fallback") ("default" "use_heap" "dev_urandom_fallback")))) (l "ring-asm")))

(define-public crate-gnir-0.13.0-alpha3 (c (n "gnir") (v "0.13.0-alpha3") (d (list (d (n "cc") (r "^1.0.9") (d #t) (k 1)) (d (n "lazy_static") (r "^1.0") (d #t) (t "cfg(any(target_os = \"redox\", all(unix, not(any(target_os = \"macos\", target_os = \"ios\")))))") (k 0)) (d (n "libc") (r "^0.2.34") (d #t) (k 0)) (d (n "untrusted") (r "^0.6.1") (d #t) (k 0) (p "detsurtnu")))) (h "1jrhvln789fnb8lfz7fiff58jndfh9wwldl4hdays5ryypb8apbk") (f (quote (("use_heap") ("test_logging") ("slow_tests") ("rsa_signing" "use_heap") ("internal_benches") ("dev_urandom_fallback") ("default" "use_heap" "dev_urandom_fallback")))) (l "ring-asm")))

(define-public crate-gnir-0.13.0-alpha4 (c (n "gnir") (v "0.13.0-alpha4") (d (list (d (n "cc") (r "^1.0.9") (d #t) (k 1)) (d (n "lazy_static") (r "^1.0") (d #t) (t "cfg(any(target_os = \"redox\", all(unix, not(any(target_os = \"macos\", target_os = \"ios\")))))") (k 0)) (d (n "libc") (r "^0.2.34") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "untrusted") (r "^0.6.1") (d #t) (k 0) (p "detsurtnu")))) (h "0264yy2n5x4arb8092fhkgvrbffps1p65l4p70dbm38k33f2hk88") (f (quote (("use_heap") ("test_logging") ("slow_tests") ("rsa_signing" "use_heap") ("internal_benches") ("dev_urandom_fallback") ("default" "use_heap" "dev_urandom_fallback")))) (l "ring-asm")))

(define-public crate-gnir-0.13.0-alpha5 (c (n "gnir") (v "0.13.0-alpha5") (d (list (d (n "cc") (r "^1.0.9") (d #t) (k 1)) (d (n "lazy_static") (r "^1.0") (d #t) (t "cfg(any(target_os = \"redox\", all(unix, not(any(target_os = \"macos\", target_os = \"ios\")))))") (k 0)) (d (n "libc") (r "^0.2.34") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "untrusted") (r "^0.6.1") (d #t) (k 0) (p "detsurtnu")))) (h "0nd7hlbhn6cppyk2qpw83bx9hv8hli3ws32xwd7k6r1qwfvk0sab") (f (quote (("use_heap") ("test_logging") ("slow_tests") ("rsa_signing" "use_heap") ("internal_benches") ("dev_urandom_fallback") ("default" "use_heap" "dev_urandom_fallback")))) (l "ring-asm")))

(define-public crate-gnir-0.13.1 (c (n "gnir") (v "0.13.1") (d (list (d (n "cc") (r "^1.0.9") (d #t) (k 1)) (d (n "lazy_static") (r "^1.0") (d #t) (t "cfg(any(target_os = \"redox\", all(unix, not(any(target_os = \"macos\", target_os = \"ios\")))))") (k 0)) (d (n "libc") (r "^0.2.34") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "untrusted") (r "^0.6.2") (d #t) (k 0) (p "detsurtnu")))) (h "14dmvgafnl63cdyq1frqsggq9zpykla7xkz7435bhbs9azhr2fqn") (f (quote (("use_heap") ("test_logging") ("slow_tests") ("rsa_signing" "use_heap") ("internal_benches") ("dev_urandom_fallback") ("default" "use_heap" "dev_urandom_fallback")))) (l "ring-asm")))

(define-public crate-gnir-0.13.2 (c (n "gnir") (v "0.13.2") (d (list (d (n "cc") (r "^1.0.9") (d #t) (k 1)) (d (n "lazy_static") (r "^1.0") (d #t) (t "cfg(any(target_os = \"redox\", all(unix, not(any(target_os = \"macos\", target_os = \"ios\")))))") (k 0)) (d (n "libc") (r "^0.2.34") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "untrusted") (r "^0.6.2") (d #t) (k 0) (p "detsurtnu")))) (h "04nhw698a0c6y6sa34q67py7rdy04jgczlqysmnmmd945slz7wam") (f (quote (("use_heap") ("test_logging") ("slow_tests") ("rsa_signing" "use_heap") ("internal_benches") ("dev_urandom_fallback") ("default" "use_heap" "dev_urandom_fallback")))) (l "ring-asm")))

(define-public crate-gnir-0.13.3 (c (n "gnir") (v "0.13.3") (d (list (d (n "cc") (r "^1.0.9") (d #t) (k 1)) (d (n "lazy_static") (r "^1.2") (d #t) (t "cfg(any(target_os = \"redox\", all(unix, not(any(target_os = \"macos\", target_os = \"ios\")))))") (k 0)) (d (n "libc") (r "^0.2.34") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "untrusted") (r "^0.6.2") (d #t) (k 0) (p "detsurtnu")))) (h "18kcdz3w8vvfaxhgmmj9r0czi5aprhvzipk1fk677jwdfvrvna4c") (f (quote (("use_heap") ("test_logging") ("slow_tests") ("rsa_signing" "use_heap") ("internal_benches") ("dev_urandom_fallback") ("default" "use_heap" "dev_urandom_fallback")))) (l "ring-asm")))

(define-public crate-gnir-0.13.4 (c (n "gnir") (v "0.13.4") (d (list (d (n "cc") (r "^1.0.9") (d #t) (k 1)) (d (n "lazy_static") (r "^1.2") (d #t) (t "cfg(any(target_os = \"redox\", all(unix, not(any(target_os = \"macos\", target_os = \"ios\")))))") (k 0)) (d (n "libc") (r "^0.2.34") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "untrusted") (r "^0.6.2") (d #t) (k 0) (p "detsurtnu")))) (h "0ai3bf0qg9818h4a2zqw9p4lzrbp6kvh9wy1nnzm05m29ms6inaz") (f (quote (("use_heap") ("test_logging") ("slow_tests") ("rsa_signing" "use_heap") ("internal_benches") ("dev_urandom_fallback") ("default" "use_heap" "dev_urandom_fallback")))) (l "ring-asm")))

(define-public crate-gnir-0.13.5 (c (n "gnir") (v "0.13.5") (d (list (d (n "cc") (r "^1.0.9") (d #t) (k 1)) (d (n "lazy_static") (r "^1.2") (d #t) (t "cfg(any(target_os = \"redox\", all(unix, not(any(target_os = \"macos\", target_os = \"ios\")))))") (k 0)) (d (n "libc") (r "^0.2.34") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "untrusted") (r "^0.6.2") (d #t) (k 0) (p "detsurtnu")))) (h "16jmh3hj2mhp2pf185i7z49jv963jw3q5yis3b5gqxinwh1kzafn") (f (quote (("use_heap") ("test_logging") ("slow_tests") ("rsa_signing" "use_heap") ("internal_benches") ("dev_urandom_fallback") ("default" "use_heap" "dev_urandom_fallback")))) (l "ring-asm")))

(define-public crate-gnir-0.14.0 (c (n "gnir") (v "0.14.0") (d (list (d (n "cc") (r "^1.0.26") (d #t) (k 1)) (d (n "lazy_static") (r "^1.2") (d #t) (t "cfg(any(target_os = \"redox\", all(unix, not(any(target_os = \"macos\", target_os = \"ios\")))))") (k 0)) (d (n "libc") (r "^0.2.45") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "untrusted") (r "^0.6.2") (d #t) (k 0) (p "detsurtnu")))) (h "0b938m9pw01fkhbj1ycg8z8yy2lb4blqv54ajkxsll20ah5if4fa") (f (quote (("use_heap") ("test_logging") ("slow_tests") ("internal_benches") ("dev_urandom_fallback") ("default" "use_heap" "dev_urandom_fallback")))) (l "ring-asm")))

(define-public crate-gnir-0.14.0-alpha3 (c (n "gnir") (v "0.14.0-alpha3") (d (list (d (n "cc") (r "^1.0.26") (d #t) (k 1)) (d (n "lazy_static") (r "^1.2") (d #t) (t "cfg(any(target_os = \"redox\", all(unix, not(any(target_os = \"macos\", target_os = \"ios\")))))") (k 0)) (d (n "libc") (r "^0.2.45") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "untrusted") (r "^0.6.2") (d #t) (k 0) (p "detsurtnu")))) (h "1w94wp4vyk208d9s4dpw30jsnpsyzhrvxjq92v68c8y4gjz2f98g") (f (quote (("use_heap") ("test_logging") ("slow_tests") ("internal_benches") ("dev_urandom_fallback") ("default" "use_heap" "dev_urandom_fallback")))) (l "ring-asm")))

(define-public crate-gnir-0.14.1 (c (n "gnir") (v "0.14.1") (d (list (d (n "cc") (r "^1.0.26") (d #t) (k 1)) (d (n "lazy_static") (r "^1.2") (d #t) (t "cfg(any(target_os = \"redox\", all(unix, not(any(target_os = \"macos\", target_os = \"ios\")))))") (k 0)) (d (n "libc") (r "^0.2.45") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "untrusted") (r "^0.6.2") (d #t) (k 0) (p "detsurtnu")))) (h "07pxv4nd5yhwq6sjnmxsyim0w10avy2z67cq9x93m72cb6i5xc0h") (f (quote (("use_heap") ("test_logging") ("slow_tests") ("internal_benches") ("dev_urandom_fallback") ("default" "use_heap" "dev_urandom_fallback")))) (l "ring-asm")))

(define-public crate-gnir-0.10.0 (c (n "gnir") (v "0.10.0") (d (list (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "lazy_static") (r "^0.2.6") (d #t) (t "cfg(any(target_os = \"redox\", all(unix, not(any(target_os = \"macos\", target_os = \"ios\")))))") (k 0)) (d (n "libc") (r "^0.2.20") (d #t) (k 0)) (d (n "rayon") (r "^0.7") (d #t) (k 1)) (d (n "untrusted") (r "^0.5") (d #t) (k 0) (p "detsurtnu")))) (h "0clycq6x0wkli7wmivbz5g4cg3y1p9m24gg93fjbaf5alvrff269") (f (quote (("use_heap") ("test_logging") ("slow_tests") ("rsa_signing" "use_heap") ("internal_benches") ("dev_urandom_fallback") ("default" "use_heap" "dev_urandom_fallback")))) (l "ring-asm")))

(define-public crate-gnir-0.11.0 (c (n "gnir") (v "0.11.0") (d (list (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "lazy_static") (r "^0.2.6") (d #t) (t "cfg(any(target_os = \"redox\", all(unix, not(any(target_os = \"macos\", target_os = \"ios\")))))") (k 0)) (d (n "libc") (r "^0.2.20") (d #t) (k 0)) (d (n "rayon") (r "^0.7") (d #t) (k 1)) (d (n "untrusted") (r "^0.5") (d #t) (k 0) (p "detsurtnu")))) (h "1lc1h0c71qyb4swz811vvgb7y64n62af5c5g4bh4393wnnaji9r5") (f (quote (("use_heap") ("test_logging") ("slow_tests") ("rsa_signing" "use_heap") ("internal_benches") ("dev_urandom_fallback") ("default" "use_heap" "dev_urandom_fallback")))) (l "ring-asm")))

(define-public crate-gnir-0.12.0 (c (n "gnir") (v "0.12.0") (d (list (d (n "gcc") (r "^0.3.53") (d #t) (k 1)) (d (n "lazy_static") (r "^0.2.8") (d #t) (t "cfg(any(target_os = \"redox\", all(unix, not(any(target_os = \"macos\", target_os = \"ios\")))))") (k 0)) (d (n "libc") (r "^0.2.30") (d #t) (k 0)) (d (n "rayon") (r "^0.8.2") (d #t) (k 1)) (d (n "untrusted") (r "^0.5.1") (d #t) (k 0) (p "detsurtnu")))) (h "0hfczkawzvpi34lznyykmsjsxf6kwz6jfn948wcm6bfbx4pf75fd") (f (quote (("use_heap") ("test_logging") ("slow_tests") ("rsa_signing" "use_heap") ("internal_benches") ("dev_urandom_fallback") ("default" "use_heap" "dev_urandom_fallback")))) (l "ring-asm")))

(define-public crate-gnir-0.13.0-alpha (c (n "gnir") (v "0.13.0-alpha") (d (list (d (n "cc") (r "^1.0.3") (d #t) (k 1)) (d (n "lazy_static") (r "^1.0") (d #t) (t "cfg(any(target_os = \"redox\", all(unix, not(any(target_os = \"macos\", target_os = \"ios\")))))") (k 0)) (d (n "libc") (r "^0.2.34") (d #t) (k 0)) (d (n "rayon") (r "^0.9.0") (d #t) (k 1)) (d (n "untrusted") (r "^0.6.1") (d #t) (k 0) (p "detsurtnu")))) (h "1jf2aa1aimyiarrax25b3zp9ds24gkrdm456qs3823niygzkps4y") (f (quote (("use_heap") ("test_logging") ("slow_tests") ("rsa_signing" "use_heap") ("internal_benches") ("dev_urandom_fallback") ("default" "use_heap" "dev_urandom_fallback")))) (l "ring-asm")))

(define-public crate-gnir-0.12.1 (c (n "gnir") (v "0.12.1") (d (list (d (n "gcc") (r "^0.3.53") (d #t) (k 1)) (d (n "lazy_static") (r "^0.2.8") (d #t) (t "cfg(any(target_os = \"redox\", all(unix, not(any(target_os = \"macos\", target_os = \"ios\")))))") (k 0)) (d (n "libc") (r "^0.2.30") (d #t) (k 0)) (d (n "rayon") (r "^0.8.2") (d #t) (k 1)) (d (n "untrusted") (r "^0.5.1") (d #t) (k 0) (p "detsurtnu")))) (h "1vpgxkc4l0g7lxkcrmpc34izwpnhjw0dxzvxmp9whwkp8nxyxzbx") (f (quote (("use_heap") ("test_logging") ("slow_tests") ("rsa_signing" "use_heap") ("internal_benches") ("dev_urandom_fallback") ("default" "use_heap" "dev_urandom_fallback")))) (l "ring-asm")))

(define-public crate-gnir-0.14.0-alpha1 (c (n "gnir") (v "0.14.0-alpha1") (d (list (d (n "cc") (r "^1.0.26") (d #t) (k 1)) (d (n "lazy_static") (r "^1.2") (d #t) (t "cfg(any(target_os = \"redox\", all(unix, not(any(target_os = \"macos\", target_os = \"ios\")))))") (k 0)) (d (n "libc") (r "^0.2.45") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "untrusted") (r "^0.6.2") (d #t) (k 0) (p "detsurtnu")))) (h "02zdm8hb05li9x34ncxrdykcii0iqlz6vdd9zcf4svai33b4plcw") (f (quote (("use_heap") ("test_logging") ("slow_tests") ("internal_benches") ("dev_urandom_fallback") ("default" "use_heap" "dev_urandom_fallback")))) (l "ring-asm")))

(define-public crate-gnir-0.14.0-alpha2 (c (n "gnir") (v "0.14.0-alpha2") (d (list (d (n "cc") (r "^1.0.26") (d #t) (k 1)) (d (n "lazy_static") (r "^1.2") (d #t) (t "cfg(any(target_os = \"redox\", all(unix, not(any(target_os = \"macos\", target_os = \"ios\")))))") (k 0)) (d (n "libc") (r "^0.2.45") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "untrusted") (r "^0.6.2") (d #t) (k 0) (p "detsurtnu")))) (h "1k78yb73z9g0kwc4hgk4hd6rdm41d0lnfg76nnkfnk3kdcypb23g") (f (quote (("use_heap") ("test_logging") ("slow_tests") ("internal_benches") ("dev_urandom_fallback") ("default" "use_heap" "dev_urandom_fallback")))) (l "ring-asm")))

(define-public crate-gnir-0.14.0-alpha4 (c (n "gnir") (v "0.14.0-alpha4") (d (list (d (n "cc") (r "^1.0.26") (d #t) (k 1)) (d (n "lazy_static") (r "^1.2") (d #t) (t "cfg(any(target_os = \"redox\", all(unix, not(any(target_os = \"macos\", target_os = \"ios\")))))") (k 0)) (d (n "libc") (r "^0.2.45") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "untrusted") (r "^0.6.2") (d #t) (k 0) (p "detsurtnu")))) (h "1ix2hfaph0ibkr6b7hp9i8slci8hh942vv9k5q1ab6wpp3mw26xi") (f (quote (("use_heap") ("test_logging") ("slow_tests") ("internal_benches") ("dev_urandom_fallback") ("default" "use_heap" "dev_urandom_fallback")))) (l "ring-asm")))

(define-public crate-gnir-0.7.2 (c (n "gnir") (v "0.7.2") (d (list (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "lazy_static") (r "^0.2.1") (d #t) (t "cfg(any(target_os = \"redox\", all(unix, not(any(target_os = \"macos\", target_os = \"ios\")))))") (k 0)) (d (n "libc") (r "^0.2.20") (d #t) (k 0)) (d (n "rayon") (r "^0.6") (d #t) (k 1)) (d (n "untrusted") (r "^0.3.2") (d #t) (k 0) (p "detsurtnu")))) (h "1fy78w7lxg7ndv0cp9mirkjs5fm4665n84n3m7sxslz11n9b4qqm") (f (quote (("use_heap") ("test_logging") ("slow_tests") ("rsa_signing") ("internal_benches") ("dev_urandom_fallback") ("default" "use_heap" "dev_urandom_fallback"))))))

(define-public crate-gnir-0.7.2-alpha1 (c (n "gnir") (v "0.7.2-alpha1") (d (list (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "lazy_static") (r "^0.2.1") (d #t) (t "cfg(any(target_os = \"redox\", all(unix, not(any(target_os = \"macos\", target_os = \"ios\")))))") (k 0)) (d (n "libc") (r "^0.2.20") (d #t) (k 0)) (d (n "rayon") (r "^0.6") (d #t) (k 1)) (d (n "untrusted") (r "^0.3.2") (d #t) (k 0) (p "detsurtnu")))) (h "0w8azhn3xhindfd54704asfggnjb1hbm3aj5l3hz8dy81fpzvyk0") (f (quote (("use_heap") ("test_logging") ("slow_tests") ("rsa_signing") ("internal_benches") ("dev_urandom_fallback") ("default" "use_heap" "dev_urandom_fallback"))))))

(define-public crate-gnir-0.7.2-alpha2 (c (n "gnir") (v "0.7.2-alpha2") (d (list (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "lazy_static") (r "^0.2.1") (d #t) (t "cfg(any(target_os = \"redox\", all(unix, not(any(target_os = \"macos\", target_os = \"ios\")))))") (k 0)) (d (n "libc") (r "^0.2.20") (d #t) (k 0)) (d (n "rayon") (r "^0.6") (d #t) (k 1)) (d (n "untrusted") (r "^0.3.2") (d #t) (k 0) (p "detsurtnu")))) (h "0fnj6csrig69km81mgghgr87xx2sxc2d57yczrk5pvwr0hy2lg05") (f (quote (("use_heap") ("test_logging") ("slow_tests") ("rsa_signing") ("internal_benches") ("dev_urandom_fallback") ("default" "use_heap" "dev_urandom_fallback"))))))

(define-public crate-gnir-0.7.3 (c (n "gnir") (v "0.7.3") (d (list (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "lazy_static") (r "^0.2.1") (d #t) (t "cfg(any(target_os = \"redox\", all(unix, not(any(target_os = \"macos\", target_os = \"ios\")))))") (k 0)) (d (n "libc") (r "^0.2.20") (d #t) (k 0)) (d (n "rayon") (r "^0.6") (d #t) (k 1)) (d (n "untrusted") (r "^0.3.2") (d #t) (k 0) (p "detsurtnu")))) (h "1yii939qa4xyycgj0w0lvyhbs7mqhrpcxyrzhlby5nmammn52nn2") (f (quote (("use_heap") ("test_logging") ("slow_tests") ("rsa_signing") ("internal_benches") ("dev_urandom_fallback") ("default" "use_heap" "dev_urandom_fallback"))))))

(define-public crate-gnir-0.7.4 (c (n "gnir") (v "0.7.4") (d (list (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "lazy_static") (r "^0.2.6") (d #t) (t "cfg(any(target_os = \"redox\", all(unix, not(any(target_os = \"macos\", target_os = \"ios\")))))") (k 0)) (d (n "libc") (r "^0.2.20") (d #t) (k 0)) (d (n "rayon") (r "^0.7") (d #t) (k 1)) (d (n "untrusted") (r "^0.3.2") (d #t) (k 0) (p "detsurtnu")))) (h "1f24gxrx52s5kyh28b0j5drmb3df8dj11vvshw94byphkddzwg5n") (f (quote (("use_heap") ("test_logging") ("slow_tests") ("rsa_signing" "bn_tests") ("internal_benches") ("dev_urandom_fallback") ("default" "use_heap" "dev_urandom_fallback") ("bn_tests"))))))

(define-public crate-gnir-0.7.5 (c (n "gnir") (v "0.7.5") (d (list (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "lazy_static") (r "^0.2.6") (d #t) (t "cfg(any(target_os = \"redox\", all(unix, not(any(target_os = \"macos\", target_os = \"ios\")))))") (k 0)) (d (n "libc") (r "^0.2.20") (d #t) (k 0)) (d (n "rayon") (r "^0.7") (d #t) (k 1)) (d (n "untrusted") (r "^0.3.2") (d #t) (k 0) (p "detsurtnu")))) (h "1vjivlzs171wm0k5rsmdyral66bn8pbgnbs4vmnpsf1pap4c1sdl") (f (quote (("use_heap") ("test_logging") ("slow_tests") ("rsa_signing" "bn_tests") ("internal_benches") ("dev_urandom_fallback") ("default" "use_heap" "dev_urandom_fallback") ("bn_tests"))))))

(define-public crate-gnir-0.7.5-alpha1 (c (n "gnir") (v "0.7.5-alpha1") (d (list (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "lazy_static") (r "^0.2.6") (d #t) (t "cfg(any(target_os = \"redox\", all(unix, not(any(target_os = \"macos\", target_os = \"ios\")))))") (k 0)) (d (n "libc") (r "^0.2.20") (d #t) (k 0)) (d (n "rayon") (r "^0.7") (d #t) (k 1)) (d (n "untrusted") (r "^0.3.2") (d #t) (k 0) (p "detsurtnu")))) (h "1a6k4crq0jx3x7gzvmpp0w61mmimys4myf88h3byw1p1iy48vljr") (f (quote (("use_heap") ("test_logging") ("slow_tests") ("rsa_signing" "bn_tests") ("internal_benches") ("dev_urandom_fallback") ("default" "use_heap" "dev_urandom_fallback") ("bn_tests"))))))

(define-public crate-gnir-0.7.5-alpha2 (c (n "gnir") (v "0.7.5-alpha2") (d (list (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "lazy_static") (r "^0.2.6") (d #t) (t "cfg(any(target_os = \"redox\", all(unix, not(any(target_os = \"macos\", target_os = \"ios\")))))") (k 0)) (d (n "libc") (r "^0.2.20") (d #t) (k 0)) (d (n "rayon") (r "^0.7") (d #t) (k 1)) (d (n "untrusted") (r "^0.3.2") (d #t) (k 0) (p "detsurtnu")))) (h "0apc50l377j859yy02y72cbwnrgammkzghg9cjhr5gdxzvya56kc") (f (quote (("use_heap") ("test_logging") ("slow_tests") ("rsa_signing" "bn_tests") ("internal_benches") ("dev_urandom_fallback") ("default" "use_heap" "dev_urandom_fallback") ("bn_tests"))))))

(define-public crate-gnir-0.7.5-alpha3 (c (n "gnir") (v "0.7.5-alpha3") (d (list (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "lazy_static") (r "^0.2.6") (d #t) (t "cfg(any(target_os = \"redox\", all(unix, not(any(target_os = \"macos\", target_os = \"ios\")))))") (k 0)) (d (n "libc") (r "^0.2.20") (d #t) (k 0)) (d (n "rayon") (r "^0.7") (d #t) (k 1)) (d (n "untrusted") (r "^0.3.2") (d #t) (k 0) (p "detsurtnu")))) (h "0ybxplwrzy9nk5qkaa85v834q9dl5y0i54cx3kfkbbij96jlq0xg") (f (quote (("use_heap") ("test_logging") ("slow_tests") ("rsa_signing" "bn_tests") ("internal_benches") ("dev_urandom_fallback") ("default" "use_heap" "dev_urandom_fallback") ("bn_tests"))))))

(define-public crate-gnir-0.7.6 (c (n "gnir") (v "0.7.6") (d (list (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "lazy_static") (r "^0.2.6") (d #t) (t "cfg(any(target_os = \"redox\", all(unix, not(any(target_os = \"macos\", target_os = \"ios\")))))") (k 0)) (d (n "libc") (r "^0.2.20") (d #t) (k 0)) (d (n "rayon") (r "^0.7") (d #t) (k 1)) (d (n "untrusted") (r "^0.3.2") (d #t) (k 0) (p "detsurtnu")))) (h "0m3lqvams2qd173phk6rskpjfk1x66hyivnz0bz00nvsr6fp2nbr") (f (quote (("use_heap") ("test_logging") ("slow_tests") ("rsa_signing" "bn_tests") ("internal_benches") ("dev_urandom_fallback") ("default" "use_heap" "dev_urandom_fallback") ("bn_tests"))))))

(define-public crate-gnir-0.8.0 (c (n "gnir") (v "0.8.0") (d (list (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "lazy_static") (r "^0.2.6") (d #t) (t "cfg(any(target_os = \"redox\", all(unix, not(any(target_os = \"macos\", target_os = \"ios\")))))") (k 0)) (d (n "libc") (r "^0.2.20") (d #t) (k 0)) (d (n "rayon") (r "^0.7") (d #t) (k 1)) (d (n "untrusted") (r "^0.5") (d #t) (k 0) (p "detsurtnu")))) (h "1bnf3spdjjkn0lhnvd4fxd2dm5k67nm5x2lwafqsp4l7q8zpjdmz") (f (quote (("use_heap") ("test_logging") ("slow_tests") ("rsa_signing" "use_heap") ("internal_benches") ("dev_urandom_fallback") ("default" "use_heap" "dev_urandom_fallback"))))))

(define-public crate-gnir-0.8.0-alpha1 (c (n "gnir") (v "0.8.0-alpha1") (d (list (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "lazy_static") (r "^0.2.6") (d #t) (t "cfg(any(target_os = \"redox\", all(unix, not(any(target_os = \"macos\", target_os = \"ios\")))))") (k 0)) (d (n "libc") (r "^0.2.20") (d #t) (k 0)) (d (n "rayon") (r "^0.7") (d #t) (k 1)) (d (n "untrusted") (r "^0.5") (d #t) (k 0) (p "detsurtnu")))) (h "1dxdp9125qw9hjzwz0j35pb9n9l6nq0wz1kp59nbxb88nsb2bx91") (f (quote (("use_heap") ("test_logging") ("slow_tests") ("rsa_signing" "use_heap") ("internal_benches") ("dev_urandom_fallback") ("default" "use_heap" "dev_urandom_fallback"))))))

(define-public crate-gnir-0.8.1 (c (n "gnir") (v "0.8.1") (d (list (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "lazy_static") (r "^0.2.6") (d #t) (t "cfg(any(target_os = \"redox\", all(unix, not(any(target_os = \"macos\", target_os = \"ios\")))))") (k 0)) (d (n "libc") (r "^0.2.20") (d #t) (k 0)) (d (n "rayon") (r "^0.7") (d #t) (k 1)) (d (n "untrusted") (r "^0.5") (d #t) (k 0) (p "detsurtnu")))) (h "1lx7sywkqf7lyk16lnqdjvqgv1h37fa67wrp6myrsk5nvs7akvic") (f (quote (("use_heap") ("test_logging") ("slow_tests") ("rsa_signing" "use_heap") ("internal_benches") ("dev_urandom_fallback") ("default" "use_heap" "dev_urandom_fallback"))))))

(define-public crate-gnir-0.9.0 (c (n "gnir") (v "0.9.0") (d (list (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "lazy_static") (r "^0.2.6") (d #t) (t "cfg(any(target_os = \"redox\", all(unix, not(any(target_os = \"macos\", target_os = \"ios\")))))") (k 0)) (d (n "libc") (r "^0.2.20") (d #t) (k 0)) (d (n "rayon") (r "^0.7") (d #t) (k 1)) (d (n "untrusted") (r "^0.5") (d #t) (k 0) (p "detsurtnu")))) (h "0j6zz6diwyicjf9c1nrq5cnxjzxjpn5jv3vdhcz3mpg5rafl81lp") (f (quote (("use_heap") ("test_logging") ("slow_tests") ("rsa_signing" "use_heap") ("internal_benches") ("dev_urandom_fallback") ("default" "use_heap" "dev_urandom_fallback"))))))

(define-public crate-gnir-0.9.1 (c (n "gnir") (v "0.9.1") (d (list (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "lazy_static") (r "^0.2.6") (d #t) (t "cfg(any(target_os = \"redox\", all(unix, not(any(target_os = \"macos\", target_os = \"ios\")))))") (k 0)) (d (n "libc") (r "^0.2.20") (d #t) (k 0)) (d (n "rayon") (r "^0.7") (d #t) (k 1)) (d (n "untrusted") (r "^0.5") (d #t) (k 0) (p "detsurtnu")))) (h "0c54ppqwap9gf1klffznsw9j40xmh8wp6jivrkmm5r0ws84zw883") (f (quote (("use_heap") ("test_logging") ("slow_tests") ("rsa_signing" "use_heap") ("internal_benches") ("dev_urandom_fallback") ("default" "use_heap" "dev_urandom_fallback"))))))

(define-public crate-gnir-0.9.2 (c (n "gnir") (v "0.9.2") (d (list (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "lazy_static") (r "^0.2.6") (d #t) (t "cfg(any(target_os = \"redox\", all(unix, not(any(target_os = \"macos\", target_os = \"ios\")))))") (k 0)) (d (n "libc") (r "^0.2.20") (d #t) (k 0)) (d (n "rayon") (r "^0.7") (d #t) (k 1)) (d (n "untrusted") (r "^0.5") (d #t) (k 0) (p "detsurtnu")))) (h "0xzmkp5lwzly42kc1v718bgvp3v3c8pyvlypym9ynfjkqhrgly10") (f (quote (("use_heap") ("test_logging") ("slow_tests") ("rsa_signing" "use_heap") ("internal_benches") ("dev_urandom_fallback") ("default" "use_heap" "dev_urandom_fallback"))))))

(define-public crate-gnir-0.9.3 (c (n "gnir") (v "0.9.3") (d (list (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "lazy_static") (r "^0.2.6") (d #t) (t "cfg(any(target_os = \"redox\", all(unix, not(any(target_os = \"macos\", target_os = \"ios\")))))") (k 0)) (d (n "libc") (r "^0.2.20") (d #t) (k 0)) (d (n "rayon") (r "^0.7") (d #t) (k 1)) (d (n "untrusted") (r "^0.5") (d #t) (k 0) (p "detsurtnu")))) (h "0gi7q5d472kw4iaak79c9nn8cfy6lpz5bg2iaprnq65r0v5n9kzr") (f (quote (("use_heap") ("test_logging") ("slow_tests") ("rsa_signing" "use_heap") ("internal_benches") ("dev_urandom_fallback") ("default" "use_heap" "dev_urandom_fallback")))) (l "ring-asm")))

(define-public crate-gnir-0.9.4 (c (n "gnir") (v "0.9.4") (d (list (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "lazy_static") (r "^0.2.6") (d #t) (t "cfg(any(target_os = \"redox\", all(unix, not(any(target_os = \"macos\", target_os = \"ios\")))))") (k 0)) (d (n "libc") (r "^0.2.20") (d #t) (k 0)) (d (n "rayon") (r "^0.7") (d #t) (k 1)) (d (n "untrusted") (r "^0.5") (d #t) (k 0) (p "detsurtnu")))) (h "062wrnvk207vj7zlb7rqaql3rxrazv05hqdgwq4bg1dd5qd9ak0d") (f (quote (("use_heap") ("test_logging") ("slow_tests") ("rsa_signing" "use_heap") ("internal_benches") ("dev_urandom_fallback") ("default" "use_heap" "dev_urandom_fallback")))) (l "ring-asm")))

(define-public crate-gnir-0.9.5 (c (n "gnir") (v "0.9.5") (d (list (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "lazy_static") (r "^0.2.6") (d #t) (t "cfg(any(target_os = \"redox\", all(unix, not(any(target_os = \"macos\", target_os = \"ios\")))))") (k 0)) (d (n "libc") (r "^0.2.20") (d #t) (k 0)) (d (n "rayon") (r "^0.7") (d #t) (k 1)) (d (n "untrusted") (r "^0.5") (d #t) (k 0) (p "detsurtnu")))) (h "0lh5dj4nxq1jsj4m2q8smh1bqkw4j5y6brgdy9x9lg5a5agsvrp9") (f (quote (("use_heap") ("test_logging") ("slow_tests") ("rsa_signing" "use_heap") ("internal_benches") ("dev_urandom_fallback") ("default" "use_heap" "dev_urandom_fallback")))) (l "ring-asm")))

(define-public crate-gnir-0.9.6 (c (n "gnir") (v "0.9.6") (d (list (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "lazy_static") (r "^0.2.6") (d #t) (t "cfg(any(target_os = \"redox\", all(unix, not(any(target_os = \"macos\", target_os = \"ios\")))))") (k 0)) (d (n "libc") (r "^0.2.20") (d #t) (k 0)) (d (n "rayon") (r "^0.7") (d #t) (k 1)) (d (n "untrusted") (r "^0.5") (d #t) (k 0) (p "detsurtnu")))) (h "10zzznz0gpx6xvw7jwf6sm185rqcdkwpxckrr92fda4ffs6vfv8i") (f (quote (("use_heap") ("test_logging") ("slow_tests") ("rsa_signing" "use_heap") ("internal_benches") ("dev_urandom_fallback") ("default" "use_heap" "dev_urandom_fallback")))) (l "ring-asm")))

(define-public crate-gnir-0.9.7 (c (n "gnir") (v "0.9.7") (d (list (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "lazy_static") (r "^0.2.6") (d #t) (t "cfg(any(target_os = \"redox\", all(unix, not(any(target_os = \"macos\", target_os = \"ios\")))))") (k 0)) (d (n "libc") (r "^0.2.20") (d #t) (k 0)) (d (n "rayon") (r "^0.7") (d #t) (k 1)) (d (n "untrusted") (r "^0.5") (d #t) (k 0) (p "detsurtnu")))) (h "1d7a6z38l9w4jpr0nm8j1126clwanp4nyh99ms86r6f050dp4i3z") (f (quote (("use_heap") ("test_logging") ("slow_tests") ("rsa_signing" "use_heap") ("internal_benches") ("dev_urandom_fallback") ("default" "use_heap" "dev_urandom_fallback")))) (l "ring-asm")))

(define-public crate-gnir-0.14.6 (c (n "gnir") (v "0.14.6") (d (list (d (n "cc") (r "^1.0.26") (d #t) (k 1)) (d (n "lazy_static") (r "^1.2") (d #t) (t "cfg(any(target_os = \"redox\", all(unix, not(any(target_os = \"macos\", target_os = \"ios\")))))") (k 0)) (d (n "libc") (r "^0.2.48") (k 0)) (d (n "spin") (r "^0.5.0") (d #t) (t "cfg(not(target_os = \"ios\"))") (k 0)) (d (n "untrusted") (r "^0.6.2") (d #t) (k 0) (p "detsurtnu")) (d (n "winapi") (r "^0.3.6") (f (quote ("ntsecapi" "wtypesbase"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1i1c1z5nbi54cj77xc9ix4j1i365ym3yr2gg3fwriyvx0ciy2wbm") (f (quote (("use_heap") ("test_logging") ("slow_tests") ("internal_benches") ("dev_urandom_fallback") ("default" "use_heap" "dev_urandom_fallback")))) (l "ring-asm")))

(define-public crate-gnir-0.15.0 (c (n "gnir") (v "0.15.0") (d (list (d (n "cc") (r "^1.0.37") (k 1)) (d (n "lazy_static") (r "^1.3") (o #t) (t "cfg(any(target_os = \"android\", target_os = \"linux\"))") (k 0)) (d (n "libc") (r "^0.2.48") (k 0)) (d (n "spin") (r "^0.5.0") (t "cfg(all(any(target_arch = \"aarch64\", target_arch = \"arm\", target_arch = \"x86\", target_arch = \"x86_64\"), not(target_os = \"ios\")))") (k 0)) (d (n "untrusted") (r "^0.7.0-alpha1") (d #t) (k 0) (p "detsurtnu")) (d (n "wasm-bindgen-test") (r "^0.2.48") (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.25") (f (quote ("Crypto" "Window"))) (t "cfg(all(target_arch = \"wasm32\", target_vendor = \"unknown\", target_os = \"unknown\", target_env = \"\"))") (k 0)) (d (n "winapi") (r "^0.3.7") (f (quote ("ntsecapi" "wtypesbase"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0rd062h60wicnhmvs4jldhkgam76q5z53ql0d3yha52a7k3jfczh") (f (quote (("test_logging" "std") ("std" "alloc") ("slow_tests") ("internal_benches") ("dev_urandom_fallback" "std" "lazy_static") ("default" "alloc" "dev_urandom_fallback" "std") ("alloc")))) (l "ring-asm")))

(define-public crate-gnir-0.15.0-alpha3 (c (n "gnir") (v "0.15.0-alpha3") (d (list (d (n "cc") (r "^1.0.37") (k 1)) (d (n "lazy_static") (r "^1.3") (o #t) (t "cfg(any(target_os = \"android\", target_os = \"linux\"))") (k 0)) (d (n "libc") (r "^0.2.48") (k 0)) (d (n "spin") (r "^0.5.0") (t "cfg(all(any(target_arch = \"aarch64\", target_arch = \"arm\", target_arch = \"x86\", target_arch = \"x86_64\"), not(target_os = \"ios\")))") (k 0)) (d (n "untrusted") (r "^0.7.0-alpha1") (d #t) (k 0) (p "detsurtnu")) (d (n "wasm-bindgen-test") (r "^0.2.46") (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("Crypto" "Window"))) (t "cfg(all(target_arch = \"wasm32\", target_vendor = \"unknown\", target_os = \"unknown\", target_env = \"\"))") (k 0)) (d (n "winapi") (r "^0.3.7") (f (quote ("ntsecapi" "wtypesbase"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0p08vsnhb2ym8bwf4hxssg7cz6q2g1d93vba2cm09h0wa14mj8r0") (f (quote (("use_heap") ("test_logging") ("slow_tests") ("internal_benches") ("dev_urandom_fallback" "use_heap" "lazy_static") ("default" "use_heap" "dev_urandom_fallback")))) (l "ring-asm")))

(define-public crate-gnir-0.15.0-alpha4 (c (n "gnir") (v "0.15.0-alpha4") (d (list (d (n "cc") (r "^1.0.37") (k 1)) (d (n "lazy_static") (r "^1.3") (o #t) (t "cfg(any(target_os = \"android\", target_os = \"linux\"))") (k 0)) (d (n "libc") (r "^0.2.48") (k 0)) (d (n "spin") (r "^0.5.0") (t "cfg(all(any(target_arch = \"aarch64\", target_arch = \"arm\", target_arch = \"x86\", target_arch = \"x86_64\"), not(target_os = \"ios\")))") (k 0)) (d (n "untrusted") (r "^0.7.0-alpha1") (d #t) (k 0) (p "detsurtnu")) (d (n "wasm-bindgen-test") (r "^0.2.48") (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.25") (f (quote ("Crypto" "Window"))) (t "cfg(all(target_arch = \"wasm32\", target_vendor = \"unknown\", target_os = \"unknown\", target_env = \"\"))") (k 0)) (d (n "winapi") (r "^0.3.7") (f (quote ("ntsecapi" "wtypesbase"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0a02dx8vxxc5rvnwsglw2i22g40qa1w4c0i8djaq9yq8zq0g0vra") (f (quote (("test_logging" "std") ("std" "alloc") ("slow_tests") ("internal_benches") ("dev_urandom_fallback" "std" "lazy_static") ("default" "alloc" "dev_urandom_fallback" "std") ("alloc")))) (l "ring-asm")))

(define-public crate-gnir-0.15.0-alpha5 (c (n "gnir") (v "0.15.0-alpha5") (d (list (d (n "cc") (r "^1.0.37") (k 1)) (d (n "lazy_static") (r "^1.3") (o #t) (t "cfg(any(target_os = \"android\", target_os = \"linux\"))") (k 0)) (d (n "libc") (r "^0.2.48") (k 0)) (d (n "spin") (r "^0.5.0") (t "cfg(all(any(target_arch = \"aarch64\", target_arch = \"arm\", target_arch = \"x86\", target_arch = \"x86_64\"), not(target_os = \"ios\")))") (k 0)) (d (n "untrusted") (r "^0.7.0-alpha1") (d #t) (k 0) (p "detsurtnu")) (d (n "wasm-bindgen-test") (r "^0.2.48") (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.25") (f (quote ("Crypto" "Window"))) (t "cfg(all(target_arch = \"wasm32\", target_vendor = \"unknown\", target_os = \"unknown\", target_env = \"\"))") (k 0)) (d (n "winapi") (r "^0.3.7") (f (quote ("ntsecapi" "wtypesbase"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1fpk4plmzf91cncx61ykx7wfp5y57v9lsjna7rcygx0bjphiwar2") (f (quote (("test_logging" "std") ("std" "alloc") ("slow_tests") ("internal_benches") ("dev_urandom_fallback" "std" "lazy_static") ("default" "alloc" "dev_urandom_fallback" "std") ("alloc")))) (l "ring-asm")))

(define-public crate-gnir-0.15.0-alpha6 (c (n "gnir") (v "0.15.0-alpha6") (d (list (d (n "cc") (r "^1.0.37") (k 1)) (d (n "lazy_static") (r "^1.3") (o #t) (t "cfg(any(target_os = \"android\", target_os = \"linux\"))") (k 0)) (d (n "libc") (r "^0.2.48") (k 0)) (d (n "spin") (r "^0.5.0") (t "cfg(all(any(target_arch = \"aarch64\", target_arch = \"arm\", target_arch = \"x86\", target_arch = \"x86_64\"), not(target_os = \"ios\")))") (k 0)) (d (n "untrusted") (r "^0.7.0-alpha1") (d #t) (k 0) (p "detsurtnu")) (d (n "wasm-bindgen-test") (r "^0.2.48") (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.25") (f (quote ("Crypto" "Window"))) (t "cfg(all(target_arch = \"wasm32\", target_vendor = \"unknown\", target_os = \"unknown\", target_env = \"\"))") (k 0)) (d (n "winapi") (r "^0.3.7") (f (quote ("ntsecapi" "wtypesbase"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0ab6ylys5z693cg1g11c0br1iz55n1nbcznhrbqgr718b784rn8x") (f (quote (("test_logging" "std") ("std" "alloc") ("slow_tests") ("internal_benches") ("dev_urandom_fallback" "std" "lazy_static") ("default" "alloc" "dev_urandom_fallback" "std") ("alloc")))) (l "ring-asm")))

(define-public crate-gnir-0.16.0 (c (n "gnir") (v "0.16.0") (d (list (d (n "cc") (r "^1.0.37") (k 1)) (d (n "lazy_static") (r "^1.3") (o #t) (t "cfg(any(target_os = \"android\", target_os = \"freebsd\", target_os = \"linux\", target_os = \"netbsd\", target_os = \"openbsd\", target_os = \"solaris\"))") (k 0)) (d (n "libc") (r "^0.2.48") (t "cfg(any(target_os = \"android\", target_os = \"linux\"))") (k 0)) (d (n "libc") (r "^0.2.48") (t "cfg(any(unix, windows))") (k 2)) (d (n "spin") (r "^0.5.0") (t "cfg(all(any(target_arch = \"aarch64\", target_arch = \"arm\", target_arch = \"x86\", target_arch = \"x86_64\"), not(target_os = \"ios\")))") (k 0)) (d (n "untrusted") (r "^0.7.0") (d #t) (k 0) (p "detsurtnu")) (d (n "wasm-bindgen-test") (r "^0.2.48") (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.25") (f (quote ("Crypto" "Window"))) (t "cfg(all(target_arch = \"wasm32\", target_vendor = \"unknown\", target_os = \"unknown\", target_env = \"\"))") (k 0)) (d (n "winapi") (r "^0.3.7") (f (quote ("ntsecapi" "wtypesbase"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1dh5vjvzqjp608bmvms8ayiz4v7gby5rxw7nw9av3xvf9gz7aim1") (f (quote (("test_logging") ("std" "alloc") ("slow_tests") ("internal_benches") ("dev_urandom_fallback" "lazy_static") ("default" "alloc" "dev_urandom_fallback") ("alloc")))) (l "ring-asm")))

(define-public crate-gnir-0.16.1 (c (n "gnir") (v "0.16.1") (d (list (d (n "cc") (r "^1.0.37") (k 1)) (d (n "lazy_static") (r "^1.3") (o #t) (t "cfg(any(target_os = \"android\", target_os = \"freebsd\", target_os = \"linux\", target_os = \"netbsd\", target_os = \"openbsd\", target_os = \"solaris\"))") (k 0)) (d (n "libc") (r "^0.2.48") (t "cfg(any(target_os = \"android\", target_os = \"linux\"))") (k 0)) (d (n "libc") (r "^0.2.48") (t "cfg(any(unix, windows))") (k 2)) (d (n "spin") (r "^0.5.0") (t "cfg(all(any(target_arch = \"aarch64\", target_arch = \"arm\", target_arch = \"x86\", target_arch = \"x86_64\"), not(target_os = \"ios\")))") (k 0)) (d (n "untrusted") (r "^0.7.0") (d #t) (k 0) (p "detsurtnu")) (d (n "wasm-bindgen-test") (r "^0.2.48") (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.25") (f (quote ("Crypto" "Window"))) (t "cfg(all(target_arch = \"wasm32\", target_vendor = \"unknown\", target_os = \"unknown\", target_env = \"\"))") (k 0)) (d (n "winapi") (r "^0.3.7") (f (quote ("ntsecapi" "wtypesbase"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "066sr8y6mq6x9s24zd4ximcanhf6kcpyxx8m7jsijqfma6dgzagd") (f (quote (("test_logging") ("std" "alloc") ("slow_tests") ("internal_benches") ("dev_urandom_fallback" "lazy_static") ("default" "alloc" "dev_urandom_fallback") ("alloc")))) (l "ring-asm")))

(define-public crate-gnir-0.16.2 (c (n "gnir") (v "0.16.2") (d (list (d (n "cc") (r "^1.0.37") (k 1)) (d (n "lazy_static") (r "^1.3") (o #t) (t "cfg(any(target_os = \"android\", target_os = \"freebsd\", target_os = \"linux\", target_os = \"netbsd\", target_os = \"openbsd\", target_os = \"solaris\"))") (k 0)) (d (n "libc") (r "^0.2.48") (t "cfg(any(target_os = \"android\", target_os = \"linux\"))") (k 0)) (d (n "libc") (r "^0.2.48") (t "cfg(any(unix, windows))") (k 2)) (d (n "spin") (r "^0.5.0") (t "cfg(all(any(target_arch = \"aarch64\", target_arch = \"arm\", target_arch = \"x86\", target_arch = \"x86_64\"), not(target_os = \"ios\")))") (k 0)) (d (n "untrusted") (r "^0.7.0") (d #t) (k 0) (p "detsurtnu")) (d (n "wasm-bindgen-test") (r "^0.2.48") (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.25") (f (quote ("Crypto" "Window"))) (t "cfg(all(target_arch = \"wasm32\", target_vendor = \"unknown\", target_os = \"unknown\", target_env = \"\"))") (k 0)) (d (n "winapi") (r "^0.3.7") (f (quote ("ntsecapi" "wtypesbase"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "11w36ys6fsmkby35a3scx0ihnwv4znskpzlwyvhfiv0nx3pqky9v") (f (quote (("test_logging") ("std" "alloc") ("slow_tests") ("internal_benches") ("dev_urandom_fallback" "lazy_static") ("default" "alloc" "dev_urandom_fallback") ("alloc")))) (l "ring-asm")))

(define-public crate-gnir-0.16.3 (c (n "gnir") (v "0.16.3") (d (list (d (n "cc") (r "^1.0.37") (k 1)) (d (n "lazy_static") (r "^1.3") (o #t) (t "cfg(any(target_os = \"android\", target_os = \"freebsd\", target_os = \"linux\", target_os = \"netbsd\", target_os = \"openbsd\", target_os = \"solaris\"))") (k 0)) (d (n "libc") (r "^0.2.48") (t "cfg(any(target_os = \"android\", target_os = \"linux\"))") (k 0)) (d (n "libc") (r "^0.2.48") (t "cfg(any(unix, windows))") (k 2)) (d (n "spin") (r "^0.5.0") (t "cfg(all(any(target_arch = \"aarch64\", target_arch = \"arm\", target_arch = \"x86\", target_arch = \"x86_64\"), not(target_os = \"ios\")))") (k 0)) (d (n "untrusted") (r "^0.7.0") (d #t) (k 0) (p "detsurtnu")) (d (n "wasm-bindgen-test") (r "^0.2.48") (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.25") (f (quote ("Crypto" "Window"))) (t "cfg(all(target_arch = \"wasm32\", target_vendor = \"unknown\", target_os = \"unknown\", target_env = \"\"))") (k 0)) (d (n "winapi") (r "^0.3.7") (f (quote ("ntsecapi" "wtypesbase"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "077vwnc7734clximj67nck39vq2d53kxnhjiv46ydasjd77gcvg9") (f (quote (("test_logging") ("std" "alloc") ("slow_tests") ("internal_benches") ("dev_urandom_fallback" "lazy_static") ("default" "alloc" "dev_urandom_fallback") ("alloc")))) (l "ring-asm")))

(define-public crate-gnir-0.16.4 (c (n "gnir") (v "0.16.4") (d (list (d (n "cc") (r "^1.0.37") (k 1)) (d (n "lazy_static") (r "^1.3") (o #t) (t "cfg(any(target_os = \"android\", target_os = \"freebsd\", target_os = \"linux\", target_os = \"netbsd\", target_os = \"openbsd\", target_os = \"solaris\"))") (k 0)) (d (n "libc") (r "^0.2.48") (t "cfg(any(target_os = \"android\", target_os = \"linux\"))") (k 0)) (d (n "libc") (r "^0.2.48") (t "cfg(any(unix, windows))") (k 2)) (d (n "spin") (r "^0.5.0") (t "cfg(all(any(target_arch = \"aarch64\", target_arch = \"arm\", target_arch = \"x86\", target_arch = \"x86_64\"), not(target_os = \"ios\")))") (k 0)) (d (n "untrusted") (r "^0.7.0") (d #t) (k 0) (p "detsurtnu")) (d (n "wasm-bindgen-test") (r "^0.2.48") (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.25") (f (quote ("Crypto" "Window"))) (t "cfg(all(target_arch = \"wasm32\", target_vendor = \"unknown\", target_os = \"unknown\", target_env = \"\"))") (k 0)) (d (n "winapi") (r "^0.3.7") (f (quote ("ntsecapi" "wtypesbase"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "06s60sg97p5zfi66jg8nff6lzlzyzhlcvkckxx8v7hlnxb0bcldk") (f (quote (("test_logging") ("std" "alloc") ("slow_tests") ("internal_benches") ("dev_urandom_fallback" "lazy_static") ("default" "alloc" "dev_urandom_fallback") ("alloc")))) (l "ring-asm")))

(define-public crate-gnir-0.16.5 (c (n "gnir") (v "0.16.5") (d (list (d (n "cc") (r "^1.0.37") (k 1)) (d (n "lazy_static") (r "^1.3") (o #t) (t "cfg(any(target_os = \"android\", target_os = \"freebsd\", target_os = \"linux\", target_os = \"netbsd\", target_os = \"openbsd\", target_os = \"solaris\"))") (k 0)) (d (n "libc") (r "^0.2.48") (t "cfg(any(target_os = \"android\", target_os = \"linux\"))") (k 0)) (d (n "libc") (r "^0.2.48") (t "cfg(any(unix, windows))") (k 2)) (d (n "spin") (r "^0.5.0") (t "cfg(all(any(target_arch = \"aarch64\", target_arch = \"arm\", target_arch = \"x86\", target_arch = \"x86_64\"), not(target_os = \"ios\")))") (k 0)) (d (n "untrusted") (r "^0.7.0") (d #t) (k 0) (p "detsurtnu")) (d (n "wasm-bindgen-test") (r "^0.2.48") (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.25") (f (quote ("Crypto" "Window"))) (t "cfg(all(target_arch = \"wasm32\", target_vendor = \"unknown\", target_os = \"unknown\", target_env = \"\"))") (k 0)) (d (n "winapi") (r "^0.3.7") (f (quote ("ntsecapi" "wtypesbase"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "15sfv83708ykjxlpbv4jris5qvx6cr2nkd5bknb5cw512cl67fir") (f (quote (("test_logging") ("std" "alloc") ("slow_tests") ("internal_benches") ("dev_urandom_fallback" "lazy_static") ("default" "alloc" "dev_urandom_fallback") ("alloc")))) (l "ring-asm")))

