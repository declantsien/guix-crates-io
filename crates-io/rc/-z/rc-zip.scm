(define-module (crates-io rc -z rc-zip) #:use-module (crates-io))

(define-public crate-rc-zip-0.0.0 (c (n "rc-zip") (v "0.0.0") (d (list (d (n "nom") (r "^5.0.0") (d #t) (k 0)) (d (n "olio") (r "^1.1.0") (d #t) (k 0)))) (h "1f536lsxs2kd59i5si5lppn6mia9dv5pxjbp2fdlxwphij4qz5b2")))

(define-public crate-rc-zip-0.0.1 (c (n "rc-zip") (v "0.0.1") (d (list (d (n "chardet") (r "^0.2.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "circular") (r "^0.3.0") (d #t) (k 0)) (d (n "codepage-437") (r "^0.1.0") (d #t) (k 0)) (d (n "color-backtrace") (r "^0.2.2") (d #t) (k 2)) (d (n "crc32fast") (r "^1.2.0") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.17") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.2") (d #t) (k 2)) (d (n "hex_fmt") (r "^0.3.0") (d #t) (k 0)) (d (n "libflate") (r "^0.1.25") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "nom") (r "^5.0.0") (d #t) (k 0)) (d (n "positioned-io") (r "^0.2.2") (d #t) (k 0)) (d (n "pretty-hex") (r "^0.1.0") (d #t) (k 0)))) (h "186b6j63jw7bmmnj15pdcldn6b6gabss5r3zay05drg7mj9pnz38")))

(define-public crate-rc-zip-2.0.0 (c (n "rc-zip") (v "2.0.0") (d (list (d (n "chardet") (r "^0.2.4") (d #t) (k 0)) (d (n "chardetng") (r "^0.1.17") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "circular") (r "^0.3.0") (d #t) (k 0)) (d (n "crc32fast") (r "^1.3.2") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.32") (d #t) (k 0)) (d (n "libflate") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (d #t) (k 0)) (d (n "oem_cp") (r "^2.0.0") (d #t) (k 0)) (d (n "positioned-io") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "pretty-hex") (r "^0.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1y3myf7vlkd56xv16nbb0rxz15r30g65wk0kcwzpdxqxmgnvd9xq") (f (quote (("sync" "libflate") ("file" "positioned-io") ("default" "sync" "file"))))))

(define-public crate-rc-zip-2.0.1 (c (n "rc-zip") (v "2.0.1") (d (list (d (n "chardetng") (r "^0.1.17") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "circular") (r "^0.3.0") (d #t) (k 0)) (d (n "crc32fast") (r "^1.3.2") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.32") (d #t) (k 0)) (d (n "libflate") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (d #t) (k 0)) (d (n "oem_cp") (r "^2.0.0") (d #t) (k 0)) (d (n "positioned-io") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "pretty-hex") (r "^0.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1j6z7p4k7spgslr3pp17bk63y418lnbg4jrqla74n14klhhaynk6") (f (quote (("sync" "libflate") ("file" "positioned-io") ("default" "sync" "file"))))))

(define-public crate-rc-zip-3.0.0 (c (n "rc-zip") (v "3.0.0") (d (list (d (n "bzip2") (r "^0.4.4") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chardetng") (r "^0.1.17") (d #t) (k 0)) (d (n "chrono") (r "^0.4.33") (d #t) (k 0)) (d (n "crc32fast") (r "^1.3.2") (d #t) (k 0)) (d (n "deflate64") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.33") (d #t) (k 0)) (d (n "lzma-rs") (r "^0.3.0") (f (quote ("stream"))) (o #t) (d #t) (k 0)) (d (n "miniz_oxide") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "num_enum") (r "^0.7.2") (d #t) (k 0)) (d (n "oem_cp") (r "^2.0.0") (d #t) (k 0)) (d (n "oval") (r "^2.0.0") (d #t) (k 0)) (d (n "pretty-hex") (r "^0.4.1") (d #t) (k 0)) (d (n "test-log") (r "^0.2.14") (f (quote ("tracing-subscriber" "trace"))) (k 2)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "winnow") (r "^0.5.36") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (o #t) (d #t) (k 0)))) (h "0kmhb4751rvsahd0wjsd0dacxbm6pjj0naa8jifrbshikvy6d8ya") (f (quote (("corpus")))) (s 2) (e (quote (("zstd" "dep:zstd") ("lzma" "dep:lzma-rs") ("deflate64" "dep:deflate64") ("deflate" "dep:miniz_oxide") ("bzip2" "dep:bzip2"))))))

(define-public crate-rc-zip-4.0.0 (c (n "rc-zip") (v "4.0.0") (d (list (d (n "bzip2") (r "^0.4.4") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chardetng") (r "^0.1.17") (d #t) (k 0)) (d (n "chrono") (r "^0.4.33") (d #t) (k 0)) (d (n "crc32fast") (r "^1.3.2") (d #t) (k 0)) (d (n "deflate64") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.33") (d #t) (k 0)) (d (n "lzma-rs") (r "^0.3.0") (f (quote ("stream"))) (o #t) (d #t) (k 0)) (d (n "miniz_oxide") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "num_enum") (r "^0.7.2") (d #t) (k 0)) (d (n "oem_cp") (r "^2.0.0") (d #t) (k 0)) (d (n "oval") (r "^2.0.0") (d #t) (k 0)) (d (n "ownable") (r "^0.6.2") (d #t) (k 0)) (d (n "temp-dir") (r "^0.1.12") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.14") (f (quote ("tracing-subscriber" "trace"))) (k 2)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "winnow") (r "^0.5.36") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (o #t) (d #t) (k 0)))) (h "10hw8yavdlcbd3b9mmnkb4cx3kaca5jyvyskr111fl72jajy98hp") (s 2) (e (quote (("zstd" "dep:zstd") ("lzma" "dep:lzma-rs") ("deflate64" "dep:deflate64") ("deflate" "dep:miniz_oxide") ("corpus" "dep:temp-dir" "dep:bzip2") ("bzip2" "dep:bzip2"))))))

(define-public crate-rc-zip-5.0.0 (c (n "rc-zip") (v "5.0.0") (d (list (d (n "bzip2") (r "^0.4.4") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chardetng") (r "^0.1.17") (d #t) (k 0)) (d (n "chrono") (r "^0.4.33") (d #t) (k 0)) (d (n "crc32fast") (r "^1.3.2") (d #t) (k 0)) (d (n "deflate64") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.33") (d #t) (k 0)) (d (n "lzma-rs") (r "^0.3.0") (f (quote ("stream"))) (o #t) (d #t) (k 0)) (d (n "miniz_oxide") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "num_enum") (r "^0.7.2") (d #t) (k 0)) (d (n "oem_cp") (r "^2.0.0") (d #t) (k 0)) (d (n "oval") (r "^2.0.0") (d #t) (k 0)) (d (n "ownable") (r "^0.6.2") (d #t) (k 0)) (d (n "temp-dir") (r "^0.1.12") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.14") (f (quote ("tracing-subscriber" "trace"))) (k 2)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "winnow") (r "^0.5.36") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (o #t) (d #t) (k 0)))) (h "1dazkgxsqpx3n888rnn1hxgnyr4dansfc3zbg3zw9z29bsamr8bb") (s 2) (e (quote (("zstd" "dep:zstd") ("lzma" "dep:lzma-rs") ("deflate64" "dep:deflate64") ("deflate" "dep:miniz_oxide") ("corpus" "dep:temp-dir" "dep:bzip2") ("bzip2" "dep:bzip2"))))))

(define-public crate-rc-zip-5.0.1 (c (n "rc-zip") (v "5.0.1") (d (list (d (n "bzip2") (r "^0.4.4") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chardetng") (r "^0.1.17") (d #t) (k 0)) (d (n "chrono") (r "^0.4.33") (d #t) (k 0)) (d (n "crc32fast") (r "^1.3.2") (d #t) (k 0)) (d (n "deflate64") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.33") (d #t) (k 0)) (d (n "lzma-rs") (r "^0.3.0") (f (quote ("stream"))) (o #t) (d #t) (k 0)) (d (n "miniz_oxide") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "num_enum") (r "^0.7.2") (d #t) (k 0)) (d (n "oem_cp") (r "^2.0.0") (d #t) (k 0)) (d (n "oval") (r "^2.0.0") (d #t) (k 0)) (d (n "ownable") (r "^0.6.2") (d #t) (k 0)) (d (n "temp-dir") (r "^0.1.12") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.14") (f (quote ("tracing-subscriber" "trace"))) (k 2)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "winnow") (r "^0.5.36") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (o #t) (d #t) (k 0)))) (h "0qp7y69cad9q7hfy8jdj2b75d9l4fzdiv3nirqrkpqgryy75df5l") (s 2) (e (quote (("zstd" "dep:zstd") ("lzma" "dep:lzma-rs") ("deflate64" "dep:deflate64") ("deflate" "dep:miniz_oxide") ("corpus" "dep:temp-dir" "dep:bzip2") ("bzip2" "dep:bzip2"))))))

(define-public crate-rc-zip-5.1.0 (c (n "rc-zip") (v "5.1.0") (d (list (d (n "bzip2") (r "^0.4.4") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chardetng") (r "^0.1.17") (d #t) (k 0)) (d (n "chrono") (r "^0.4.33") (d #t) (k 0)) (d (n "crc32fast") (r "^1.3.2") (d #t) (k 0)) (d (n "deflate64") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.33") (d #t) (k 0)) (d (n "lzma-rs") (r "^0.3.0") (f (quote ("stream"))) (o #t) (d #t) (k 0)) (d (n "miniz_oxide") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "num_enum") (r "^0.7.2") (d #t) (k 0)) (d (n "oem_cp") (r "^2.0.0") (d #t) (k 0)) (d (n "oval") (r "^2.0.0") (d #t) (k 0)) (d (n "ownable") (r "^0.6.2") (d #t) (k 0)) (d (n "temp-dir") (r "^0.1.12") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "winnow") (r "^0.5.36") (d #t) (k 0)) (d (n "zstd") (r "^0.13.0") (o #t) (d #t) (k 0)))) (h "06fx84rwy4kvyw7vf1rqy7mhgixwx50b8l3dizaj918k5mc3kp99") (s 2) (e (quote (("zstd" "dep:zstd") ("tracing-subscriber" "dep:tracing-subscriber") ("lzma" "dep:lzma-rs") ("deflate64" "dep:deflate64") ("deflate" "dep:miniz_oxide") ("corpus" "dep:temp-dir" "dep:bzip2" "dep:tracing-subscriber") ("bzip2" "dep:bzip2"))))))

