(define-module (crates-io pk ar pkarr) #:use-module (crates-io))

(define-public crate-pkarr-0.1.0 (c (n "pkarr") (v "0.1.0") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "self_cell") (r "^1.0.1") (d #t) (k 0)) (d (n "simple-dns") (r "^0.5.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("tokio-macros" "macros"))) (d #t) (k 0)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "zbase32") (r "^0.1.2") (d #t) (k 0)))) (h "0g05m9lhx4i896nfbn97qclhjrd8ci9z01cpp630b7gm8chq7zmg")))

(define-public crate-pkarr-0.1.1 (c (n "pkarr") (v "0.1.1") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "self_cell") (r "^1.0.1") (d #t) (k 0)) (d (n "simple-dns") (r "^0.5.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("tokio-macros" "macros"))) (d #t) (k 0)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "zbase32") (r "^0.1.2") (d #t) (k 0)))) (h "11p3c57r6l30wbdzzqzhk7lksa42fyggsckcgxqsxxdjj3iv0di8")))

(define-public crate-pkarr-0.1.2 (c (n "pkarr") (v "0.1.2") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "self_cell") (r "^1.0.1") (d #t) (k 0)) (d (n "simple-dns") (r "^0.5.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("tokio-macros" "macros"))) (d #t) (k 0)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "zbase32") (r "^0.1.2") (d #t) (k 0)))) (h "1h7akmfgs3z3w9v3v9kch9qayj3a4cwjcks8vq0454a8nrqdw50f")))

(define-public crate-pkarr-0.1.3 (c (n "pkarr") (v "0.1.3") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "self_cell") (r "^1.0.1") (d #t) (k 0)) (d (n "simple-dns") (r "^0.5.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("tokio-macros" "macros"))) (d #t) (k 0)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "zbase32") (r "^0.1.2") (d #t) (k 0)))) (h "1imif8bdrb40bxix83prqaz8gv1md1m88c9afh60ywjj68xh7ham")))

(define-public crate-pkarr-0.2.0 (c (n "pkarr") (v "0.2.0") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 0)) (d (n "self_cell") (r "^1.0.1") (d #t) (k 0)) (d (n "simple-dns") (r "^0.5.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("tokio-macros" "macros"))) (d #t) (k 0)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "zbase32") (r "^0.1.2") (d #t) (k 0)))) (h "00hfgfc72bkyqly17rahdgf2sb1wbw23vgjff7jrzn772vc9yqlz")))

(define-public crate-pkarr-0.2.1 (c (n "pkarr") (v "0.2.1") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 0)) (d (n "self_cell") (r "^1.0.1") (d #t) (k 0)) (d (n "simple-dns") (r "^0.5.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("tokio-macros" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "zbase32") (r "^0.1.2") (d #t) (k 0)))) (h "157xp6pzv385dls5gjr51q9f80gqinfxsxl83506yr3jgd72i10k")))

(define-public crate-pkarr-0.2.2 (c (n "pkarr") (v "0.2.2") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 0)) (d (n "self_cell") (r "^1.0.1") (d #t) (k 0)) (d (n "simple-dns") (r "^0.5.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("tokio-macros" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "zbase32") (r "^0.1.2") (d #t) (k 0)))) (h "06193sv01a972zlk777jk0gxfsmp46f4waspbfmby1bwy96f213g")))

(define-public crate-pkarr-0.3.0 (c (n "pkarr") (v "0.3.0") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 0)) (d (n "self_cell") (r "^1.0.1") (d #t) (k 0)) (d (n "simple-dns") (r "^0.5.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("tokio-macros" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "z32") (r "^1.0.0") (d #t) (k 0)))) (h "0fqnbxb3vi0h3xd427ylsl7xlz8krh38rmzrr1g28v6f3idgz3qp")))

(define-public crate-pkarr-1.0.0 (c (n "pkarr") (v "1.0.0") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "mainline") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "blocking"))) (o #t) (k 0)) (d (n "self_cell") (r "^1.0.2") (d #t) (k 0)) (d (n "simple-dns") (r "^0.5.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("tokio-macros" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "z32") (r "^1.0.0") (d #t) (k 0)))) (h "0wnzyzzgnwch5jf1dsqf8d65plf2yj0plv7q86y9s3gcr9b97skz") (f (quote (("relay" "reqwest") ("full" "dht" "relay" "async") ("dht" "mainline") ("default" "dht") ("async"))))))

(define-public crate-pkarr-1.0.1 (c (n "pkarr") (v "1.0.1") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "mainline") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "blocking"))) (o #t) (k 0)) (d (n "self_cell") (r "^1.0.2") (d #t) (k 0)) (d (n "simple-dns") (r "^0.5.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("tokio-macros" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "z32") (r "^1.0.0") (d #t) (k 0)))) (h "1zv3f21d5cqnk11r04hmrzgdk42wpb6yym57bv96qykpz6v93ysj") (f (quote (("relay" "reqwest") ("full" "dht" "relay" "async") ("dht" "mainline") ("default" "dht") ("async"))))))

(define-public crate-pkarr-1.0.2 (c (n "pkarr") (v "1.0.2") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "mainline") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "blocking"))) (o #t) (k 0)) (d (n "self_cell") (r "^1.0.2") (d #t) (k 0)) (d (n "simple-dns") (r "^0.6.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("tokio-macros" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "z32") (r "^1.0.0") (d #t) (k 0)))) (h "1slafkn7klhnw0mi9s986nky7njaa0ld4ggm1z88qxp19sdfm0kc") (f (quote (("relay" "reqwest") ("full" "dht" "relay" "async") ("dht" "mainline") ("default" "dht") ("async"))))))

(define-public crate-pkarr-1.0.3 (c (n "pkarr") (v "1.0.3") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "mainline") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "blocking"))) (o #t) (k 0)) (d (n "self_cell") (r "^1.0.2") (d #t) (k 0)) (d (n "simple-dns") (r "^0.6.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("tokio-macros" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "z32") (r "^1.0.3") (d #t) (k 0)))) (h "05fjbd9zrgg0n6823ay0rgy72kgpl5111d2vbknb44xp08jdvnrw") (f (quote (("relay" "reqwest") ("full" "dht" "relay" "async") ("dht" "mainline") ("default" "dht") ("async"))))))

(define-public crate-pkarr-1.0.4 (c (n "pkarr") (v "1.0.4") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "mainline") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "blocking"))) (o #t) (k 0)) (d (n "self_cell") (r "^1.0.2") (d #t) (k 0)) (d (n "simple-dns") (r "^0.6.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("tokio-macros" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "z32") (r "^1.0.3") (d #t) (k 0)))) (h "0sbczbwab6162gp20na4h3w9g4kdxa60673jfcfav00d4jrp6ww1") (f (quote (("relay" "reqwest") ("full" "dht" "relay" "async") ("dht" "mainline") ("default" "dht") ("async"))))))

(define-public crate-pkarr-1.0.5 (c (n "pkarr") (v "1.0.5") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "mainline") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "blocking"))) (o #t) (k 0)) (d (n "self_cell") (r "^1.0.2") (d #t) (k 0)) (d (n "simple-dns") (r "^0.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("tokio-macros" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "z32") (r "^1.0.3") (d #t) (k 0)))) (h "10ijsims8iqkzfjcynajk3p25g6mhvz54y91mns4hgfl6ydk2hkk") (f (quote (("relay" "reqwest") ("full" "dht" "relay" "async") ("dht" "mainline") ("default" "dht") ("async"))))))

(define-public crate-pkarr-1.1.0 (c (n "pkarr") (v "1.1.0") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "mainline") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "blocking"))) (o #t) (k 0)) (d (n "self_cell") (r "^1.0.2") (d #t) (k 0)) (d (n "simple-dns") (r "^0.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("tokio-macros" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "z32") (r "^1.0.3") (d #t) (k 0)))) (h "0pbl6iw5d3yk0an48j0bdz6fihskp3mh4q0lgc6yx0c0h4kzqc6n") (f (quote (("relay" "reqwest") ("full" "dht" "relay" "async") ("dht" "mainline") ("default" "dht") ("async"))))))

(define-public crate-pkarr-1.1.1 (c (n "pkarr") (v "1.1.1") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "mainline") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "blocking"))) (o #t) (k 0)) (d (n "self_cell") (r "^1.0.2") (d #t) (k 0)) (d (n "simple-dns") (r "^0.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("tokio-macros" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "z32") (r "^1.0.3") (d #t) (k 0)))) (h "0wa1znmfpy31pdaf33xa8f953apcl2kis4f52brl6ahb31rnizqb") (f (quote (("relay" "reqwest") ("full" "dht" "relay" "async") ("dht" "mainline") ("default" "dht") ("async"))))))

(define-public crate-pkarr-1.1.2 (c (n "pkarr") (v "1.1.2") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "mainline") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "blocking"))) (o #t) (k 0)) (d (n "self_cell") (r "^1.0.2") (d #t) (k 0)) (d (n "simple-dns") (r "^0.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("tokio-macros" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "z32") (r "^1.0.3") (d #t) (k 0)))) (h "1g1bg06cawnpn035n1zqbdjdwvnygvfk7n47zycv5x2h9s87rxia") (f (quote (("relay" "reqwest") ("full" "dht" "relay" "async") ("dht" "mainline") ("default" "dht") ("async"))))))

(define-public crate-pkarr-1.1.3 (c (n "pkarr") (v "1.1.3") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "mainline") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "blocking"))) (o #t) (k 0)) (d (n "self_cell") (r "^1.0.2") (d #t) (k 0)) (d (n "simple-dns") (r "^0.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("tokio-macros" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "z32") (r "^1.0.3") (d #t) (k 0)))) (h "1ixawp779y32pyz525mqvsbgcl6imrj69snl2iip22m726i2ah1d") (f (quote (("relay" "reqwest") ("full" "dht" "relay" "async") ("dht" "mainline") ("default" "dht") ("async"))))))

(define-public crate-pkarr-1.1.4 (c (n "pkarr") (v "1.1.4") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "mainline") (r "<1.5.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "blocking"))) (o #t) (k 0)) (d (n "self_cell") (r "^1.0.2") (d #t) (k 0)) (d (n "simple-dns") (r "^0.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("tokio-macros" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "z32") (r "^1.0.3") (d #t) (k 0)))) (h "1gha5qpc2f67jnp8mdycgnvpwyhlzymswfqxr02cjf3x6brkpmss") (f (quote (("relay" "reqwest") ("full" "dht" "relay" "async") ("dht" "mainline") ("default" "dht") ("async"))))))

(define-public crate-pkarr-1.1.5 (c (n "pkarr") (v "1.1.5") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "mainline") (r "<1.5.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "blocking"))) (o #t) (k 0)) (d (n "self_cell") (r "^1.0.2") (d #t) (k 0)) (d (n "simple-dns") (r "^0.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("tokio-macros" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "z32") (r "^1.0.3") (d #t) (k 0)))) (h "1yvg341vlw8pfxisf1dd543wafq4f8z75x6am6ma6awxzcnyjai4") (f (quote (("relay" "reqwest") ("full" "dht" "relay" "async") ("dht" "mainline") ("default" "dht") ("async"))))))

(define-public crate-pkarr-2.0.0-rc1 (c (n "pkarr") (v "2.0.0-rc1") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "dyn-clone") (r "^1.0.17") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "flume") (r "^0.11.0") (f (quote ("select" "eventual-fairness"))) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 2)) (d (n "lru") (r "^0.12.3") (k 0)) (d (n "mainline") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "self_cell") (r "^1.0.2") (d #t) (k 0)) (d (n "simple-dns") (r "^0.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "z32") (r "^1.1.1") (d #t) (k 0)))) (h "0ynfah0i66ipwb61rss1mkpypglqjslpi1a8gmsc663rg5k6vsg8") (f (quote (("default" "dht") ("async" "flume/async")))) (s 2) (e (quote (("dht" "dep:mainline"))))))

(define-public crate-pkarr-2.0.0-rc2 (c (n "pkarr") (v "2.0.0-rc2") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "dyn-clone") (r "^1.0.17") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "flume") (r "^0.11.0") (f (quote ("select" "eventual-fairness"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.29") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.12.3") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mainline") (r "^2.0.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mockito") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "^0.12.4") (o #t) (d #t) (k 0)) (d (n "self_cell") (r "^1.0.2") (d #t) (k 0)) (d (n "simple-dns") (r "^0.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "url") (r "^2.5.0") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.92") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.42") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "z32") (r "^1.1.1") (d #t) (k 0)))) (h "1rp5bsapjwpzf2glsx9irrgig06dpzs0mx3mpmy6fsmrcqxzpd3f") (f (quote (("default" "dht") ("async" "flume/async")))) (s 2) (e (quote (("relay" "dep:reqwest") ("dht" "dep:mainline" "dep:lru" "dep:dyn-clone" "dep:flume"))))))

(define-public crate-pkarr-2.0.0-rc3 (c (n "pkarr") (v "2.0.0-rc3") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "document-features") (r "^0.2.8") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.17") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.0.0") (d #t) (k 0)) (d (n "flume") (r "^0.11.0") (f (quote ("select" "eventual-fairness"))) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 2)) (d (n "lru") (r "^0.12.3") (k 0)) (d (n "mainline") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.12.4") (o #t) (d #t) (k 0)) (d (n "self_cell") (r "^1.0.2") (d #t) (k 0)) (d (n "simple-dns") (r "^0.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "ureq") (r "^2.9.7") (f (quote ("tls"))) (k 0)) (d (n "url") (r "^2.5.0") (o #t) (d #t) (k 0)) (d (n "z32") (r "^1.1.1") (d #t) (k 0)))) (h "1583gz0z6pzz9g18zacsj9c8whcnay2pvqik6sdn93dkaxfn2rk0") (f (quote (("full" "dht" "async" "relay" "rand") ("default" "dht" "rand") ("async" "flume/async")))) (s 2) (e (quote (("relay" "dep:reqwest" "dep:url") ("rand" "dep:rand" "ed25519-dalek/rand_core") ("dht" "dep:mainline" "dep:dyn-clone"))))))

(define-public crate-pkarr-2.0.0-rc4 (c (n "pkarr") (v "2.0.0-rc4") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "document-features") (r "^0.2.8") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.17") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ed25519-dalek") (r "^2.0.0") (d #t) (k 0)) (d (n "flume") (r "^0.11.0") (f (quote ("select" "eventual-fairness"))) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.69") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lru") (r "^0.12.3") (k 0)) (d (n "mainline") (r "^2.0.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mockito") (r "^1.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "self_cell") (r "^1.0.2") (d #t) (k 0)) (d (n "simple-dns") (r "^0.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ureq") (r "^2.9.7") (f (quote ("tls"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.92") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.42") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.42") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.69") (f (quote ("AbortSignal" "console" "Headers" "ReadableStream" "Request" "RequestInit" "RequestMode" "Response" "Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "z32") (r "^1.1.1") (d #t) (k 0)))) (h "1axqngs4axccn962d52pxy1p5k86cbavw25xlyza5yz64pibam8m") (f (quote (("full" "dht" "async" "relay" "rand") ("default" "dht" "rand") ("async" "flume/async")))) (s 2) (e (quote (("relay" "dep:ureq") ("rand" "dep:rand" "ed25519-dalek/rand_core") ("dht" "dep:mainline" "dep:dyn-clone"))))))

(define-public crate-pkarr-2.0.0 (c (n "pkarr") (v "2.0.0") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "document-features") (r "^0.2.8") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.17") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ed25519-dalek") (r "^2.0.0") (d #t) (k 0)) (d (n "flume") (r "^0.11.0") (f (quote ("select" "eventual-fairness"))) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.69") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lru") (r "^0.12.3") (k 0)) (d (n "mainline") (r "^2.0.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mockito") (r "^1.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "self_cell") (r "^1.0.2") (d #t) (k 0)) (d (n "simple-dns") (r "^0.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ureq") (r "^2.9.7") (f (quote ("tls"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.92") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.42") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.42") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.69") (f (quote ("console" "Request" "RequestInit" "RequestMode" "Response" "Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "z32") (r "^1.1.1") (d #t) (k 0)))) (h "0fdbsn89jabb85b5dlnbvfgd01ffwsxlv6ksrmbig84x1m4wbyqg") (f (quote (("full" "dht" "async" "relay" "rand") ("default" "dht" "rand") ("async" "flume/async")))) (s 2) (e (quote (("relay" "dep:ureq") ("rand" "dep:rand" "ed25519-dalek/rand_core") ("dht" "dep:mainline" "dep:dyn-clone"))))))

(define-public crate-pkarr-2.0.1 (c (n "pkarr") (v "2.0.1") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "document-features") (r "^0.2.8") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.17") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ed25519-dalek") (r "^2.0.0") (d #t) (k 0)) (d (n "flume") (r "^0.11.0") (f (quote ("select" "eventual-fairness"))) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.69") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lru") (r "^0.12.3") (k 0)) (d (n "mainline") (r "^2.0.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mockito") (r "^1.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "self_cell") (r "^1.0.2") (d #t) (k 0)) (d (n "simple-dns") (r "^0.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ureq") (r "^2.9.7") (f (quote ("tls"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.92") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.42") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.42") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.69") (f (quote ("console" "Request" "RequestInit" "RequestMode" "Response" "Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "z32") (r "^1.1.1") (d #t) (k 0)))) (h "0j85ajgaq9y0bx3ijplzad7vq6rvl2x7gvl7wxzb43p1ay60rz7w") (f (quote (("full" "dht" "async" "relay" "rand") ("default" "dht" "rand") ("async" "flume/async")))) (s 2) (e (quote (("relay" "dep:ureq") ("rand" "dep:rand" "ed25519-dalek/rand_core") ("dht" "dep:mainline" "dep:dyn-clone"))))))

