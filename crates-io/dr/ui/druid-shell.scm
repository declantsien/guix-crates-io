(define-module (crates-io dr ui druid-shell) #:use-module (crates-io))

(define-public crate-druid-shell-0.3.0 (c (n "druid-shell") (v "0.3.0") (d (list (d (n "cairo-rs") (r "^0.7.1") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "cairo-rs") (r "^0.7.1") (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cairo-rs") (r "^0.7.1") (o #t) (k 0)) (d (n "cocoa") (r "^0.19.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.18.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "direct2d") (r "^0.2.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "directwrite") (r "^0.1.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdk") (r "^0.11.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gdk") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "gdk-sys") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gdk-sys") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "gio") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gio") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "glib") (r "^0.8.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "glib") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "glib-sys") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "glib-sys") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "gtk") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "gtk") (r "^0.7.0") (f (quote ("v3_20"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gtk-sys") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gtk-sys") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "piet-common") (r "^0.0.7") (d #t) (k 0)) (d (n "time") (r "^0.1.39") (d #t) (k 0)) (d (n "winapi") (r "^0.3.6") (f (quote ("d2d1_1" "dwrite" "winbase" "libloaderapi" "errhandlingapi" "winuser" "shellscalingapi" "shobjidl" "combaseapi" "synchapi" "dxgi1_3" "dcomp" "d3d11" "dwmapi" "wincon" "fileapi" "processenv" "winbase" "handleapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wio") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "10wh4jdhcxn7hdg18s8kckym9jxk4p16nw2pjnw3dx4a61ks46n9") (f (quote (("use_gtk" "gtk" "gio" "gdk" "gdk-sys" "glib" "glib-sys" "cairo-rs"))))))

(define-public crate-druid-shell-0.3.1 (c (n "druid-shell") (v "0.3.1") (d (list (d (n "cairo-rs") (r "^0.7.1") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "cairo-rs") (r "^0.7.1") (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cairo-rs") (r "^0.7.1") (o #t) (k 0)) (d (n "cocoa") (r "^0.19.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "direct2d") (r "^0.2.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "directwrite") (r "^0.1.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdk") (r "^0.11.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gdk") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "gdk-sys") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gdk-sys") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "gio") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gio") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "glib") (r "^0.8.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "glib") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "glib-sys") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "glib-sys") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "gtk") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "gtk") (r "^0.7.0") (f (quote ("v3_20"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gtk-sys") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gtk-sys") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "piet-common") (r "^0.0.7") (d #t) (k 0)) (d (n "time") (r "^0.1.39") (d #t) (k 0)) (d (n "winapi") (r "^0.3.6") (f (quote ("d2d1_1" "dwrite" "winbase" "libloaderapi" "errhandlingapi" "winuser" "shellscalingapi" "shobjidl" "combaseapi" "synchapi" "dxgi1_3" "dcomp" "d3d11" "dwmapi" "wincon" "fileapi" "processenv" "winbase" "handleapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wio") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "063ggi7yzvkk50rgvxa7nrcx5dfwrxy5iidb4qyfas1kni6zfwlb") (f (quote (("use_gtk" "gtk" "gio" "gdk" "gdk-sys" "glib" "glib-sys" "cairo-rs"))))))

(define-public crate-druid-shell-0.3.2 (c (n "druid-shell") (v "0.3.2") (d (list (d (n "cairo-rs") (r "^0.7.1") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "cairo-rs") (r "^0.7.1") (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cairo-rs") (r "^0.7.1") (o #t) (k 0)) (d (n "cocoa") (r "^0.19.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "direct2d") (r "^0.2.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "directwrite") (r "^0.1.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdk") (r "^0.11.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gdk") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "gdk-sys") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gdk-sys") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "gio") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gio") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "glib") (r "^0.8.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "glib") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "glib-sys") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "glib-sys") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "gtk") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "gtk") (r "^0.7.0") (f (quote ("v3_20"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gtk-sys") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gtk-sys") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "piet-common") (r "^0.0.7") (d #t) (k 0)) (d (n "time") (r "^0.1.39") (d #t) (k 0)) (d (n "winapi") (r "^0.3.6") (f (quote ("d2d1_1" "dwrite" "winbase" "libloaderapi" "errhandlingapi" "winuser" "shellscalingapi" "shobjidl" "combaseapi" "synchapi" "dxgi1_3" "dcomp" "d3d11" "dwmapi" "wincon" "fileapi" "processenv" "winbase" "handleapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wio") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "09pi09kyrf18q63p3bjqkcic21w0wqhkj91n35nrbr2cbg3lk7qh") (f (quote (("use_gtk" "gtk" "gio" "gdk" "gdk-sys" "glib" "glib-sys" "cairo-rs"))))))

(define-public crate-druid-shell-0.4.0 (c (n "druid-shell") (v "0.4.0") (d (list (d (n "cairo-rs") (r "^0.7.1") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "cairo-rs") (r "^0.7.1") (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cairo-rs") (r "^0.7.1") (o #t) (k 0)) (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "cocoa") (r "^0.20.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "direct2d") (r "^0.2.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "directwrite") (r "^0.1.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gdk") (r "^0.11.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gdk") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "gdk-sys") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gdk-sys") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "gio") (r "^0.7.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gio") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "glib") (r "^0.8.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "glib") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "glib-sys") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "glib-sys") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "gtk") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "gtk") (r "^0.7.0") (f (quote ("v3_20"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gtk-sys") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gtk-sys") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "piet-common") (r "^0.0.7") (d #t) (k 0)) (d (n "time") (r "^0.1.39") (d #t) (k 0)) (d (n "winapi") (r "^0.3.6") (f (quote ("d2d1_1" "dwrite" "winbase" "libloaderapi" "errhandlingapi" "winuser" "shellscalingapi" "shobjidl" "combaseapi" "synchapi" "dxgi1_3" "dcomp" "d3d11" "dwmapi" "wincon" "fileapi" "processenv" "winbase" "handleapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wio") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0xfv8bk9q52vg97x4bivqp2vxpg0pvx787j06v3ng8lwg3ibdwvy") (f (quote (("use_gtk" "gtk" "gtk-sys" "gio" "gdk" "gdk-sys" "glib" "glib-sys" "cairo-rs"))))))

(define-public crate-druid-shell-0.5.0 (c (n "druid-shell") (v "0.5.0") (d (list (d (n "cairo-rs") (r "^0.8.1") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "cairo-rs") (r "^0.8.1") (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cairo-rs") (r "^0.8.1") (o #t) (k 0)) (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "cocoa") (r "^0.20.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gdk") (r "^0.12.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gdk") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "gdk-sys") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gdk-sys") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "gio") (r "^0.8.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gio") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "glib") (r "^0.9.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "glib") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "glib-sys") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "glib-sys") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "gtk") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "gtk") (r "^0.8.1") (f (quote ("v3_20"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gtk-sys") (r "^0.9.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gtk-sys") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "kurbo") (r "^0.5.11") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "piet-common") (r "^0.0.11") (d #t) (k 0)) (d (n "time") (r "^0.2.7") (d #t) (k 0)) (d (n "winapi") (r "^0.3.6") (f (quote ("d2d1_1" "dwrite" "winbase" "libloaderapi" "errhandlingapi" "winuser" "shellscalingapi" "shobjidl" "combaseapi" "synchapi" "dxgi1_3" "dcomp" "d3d11" "dwmapi" "wincon" "fileapi" "processenv" "winbase" "handleapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wio") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1x3k4s472qmhr1lqvbcpiz05hysx8ly5sndcfp5qcm9dmmnll164") (f (quote (("use_gtk" "gtk" "gtk-sys" "gio" "gdk" "gdk-sys" "glib" "glib-sys" "cairo-rs"))))))

(define-public crate-druid-shell-0.6.0 (c (n "druid-shell") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cairo-rs") (r "^0.8.1") (o #t) (k 0)) (d (n "cairo-rs") (r "^0.8.1") (f (quote ("xcb"))) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "cairo-sys-rs") (r "^0.9.2") (o #t) (k 0)) (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "cocoa") (r "^0.20.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.19.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "foreign-types") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gdk") (r "^0.12.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gdk") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "gdk-sys") (r "^0.9.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gdk-sys") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "gio") (r "^0.8.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gio") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "glib") (r "^0.9.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "glib") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "glib-sys") (r "^0.9.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "glib-sys") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "gtk") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "gtk") (r "^0.8.1") (f (quote ("v3_20"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gtk-sys") (r "^0.9.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gtk-sys") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "instant") (r "^0.1.4") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.40") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kurbo") (r "^0.6.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "piet-common") (r "^0.1.1") (d #t) (k 0)) (d (n "piet-common") (r "^0.1.1") (f (quote ("png"))) (d #t) (k 2)) (d (n "time") (r "^0.2.16") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.63") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.40") (f (quote ("Window" "MouseEvent" "CssStyleDeclaration" "WheelEvent" "KeyEvent" "KeyboardEvent"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("d2d1_1" "dwrite" "winbase" "libloaderapi" "errhandlingapi" "winuser" "shellscalingapi" "shobjidl" "combaseapi" "synchapi" "dxgi1_3" "dcomp" "d3d11" "dwmapi" "wincon" "fileapi" "processenv" "winbase" "handleapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wio") (r "^0.2.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "xcb") (r "^0.9.0") (f (quote ("thread" "xlib_xcb" "randr"))) (o #t) (d #t) (k 0)))) (h "16z5rxd9l76mwbk36nj03i242n328cq4bby0agamp09apr4yr9kd") (f (quote (("x11" "xcb" "cairo-sys-rs"))))))

(define-public crate-druid-shell-0.7.0 (c (n "druid-shell") (v "0.7.0") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "block") (r "^0.1.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cairo-rs") (r "^0.9.1") (f (quote ("xcb"))) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "cairo-sys-rs") (r "^0.10.0") (o #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "foreign-types") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gdk") (r "^0.13.2") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gdk-pixbuf") (r "^0.9.0") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gdk-sys") (r "^0.10.0") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gio") (r "^0.9.1") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "glib") (r "^0.10.1") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "glib-sys") (r "^0.10.0") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "gtk-rs") (r "^0.9.2") (f (quote ("v3_22"))) (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0) (p "gtk")) (d (n "gtk-sys") (r "^0.10.0") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "image") (r "^0.23.12") (o #t) (k 0)) (d (n "instant") (r "^0.1.6") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.44") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "keyboard-types") (r "^0.5.0") (k 0)) (d (n "kurbo") (r "^0.7.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "nix") (r "^0.18.0") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "piet-common") (r "=0.3.2") (d #t) (k 0)) (d (n "piet-common") (r "=0.3.2") (f (quote ("png"))) (d #t) (k 2)) (d (n "scopeguard") (r "^1.1.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "simple_logger") (r "^1.9.0") (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "time") (r "^0.2.16") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.67") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.44") (f (quote ("Window" "MouseEvent" "CssStyleDeclaration" "WheelEvent" "KeyEvent" "KeyboardEvent"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("d2d1_1" "dwrite" "winbase" "libloaderapi" "errhandlingapi" "winuser" "shellscalingapi" "shobjidl" "combaseapi" "synchapi" "dxgi1_3" "dcomp" "d3d11" "dwmapi" "wincon" "fileapi" "processenv" "winbase" "handleapi" "shellapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wio") (r "^0.2.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11rb") (r "^0.6.0") (f (quote ("allow-unsafe-code" "present" "randr" "xfixes"))) (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "0qqpzl91gixdgblg8i4cfmyd3953c19milpwq1spp9rs27z7z1kv") (f (quote (("x11" "x11rb" "nix" "cairo-sys-rs") ("webp" "piet-common/webp") ("tiff" "piet-common/tiff") ("tga" "piet-common/tga") ("pnm" "piet-common/pnm") ("jpeg_rayon" "piet-common/jpeg_rayon") ("jpeg" "piet-common/jpeg") ("image_png" "piet-common/image_png") ("ico" "piet-common/ico") ("hdr" "piet-common/hdr") ("gtk" "gio" "gdk" "gdk-sys" "glib" "glib-sys" "gtk-sys" "gtk-rs" "gdk-pixbuf") ("gif" "piet-common/gif") ("farbfeld" "piet-common/farbfeld") ("dxt" "piet-common/dxt") ("default" "gtk") ("dds" "piet-common/dds") ("bmp" "piet-common/bmp"))))))

(define-public crate-druid-shell-0.8.0 (c (n "druid-shell") (v "0.8.0") (d (list (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "image") (r "^0.23.12") (o #t) (k 0)) (d (n "instant") (r "^0.1.12") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "keyboard-types") (r "^0.6.2") (k 0)) (d (n "kurbo") (r "^0.9.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.0") (d #t) (k 0)) (d (n "piet-common") (r "^0.6.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5.0") (o #t) (k 0)) (d (n "time") (r "^0.3.17") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "piet-common") (r "^0.6.1") (f (quote ("png"))) (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (k 2)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.10.0") (d #t) (k 2)) (d (n "bindgen") (r "^0.61.0") (o #t) (d #t) (k 1)) (d (n "pkg-config") (r "^0.3.26") (o #t) (d #t) (k 1)) (d (n "ashpd") (r "^0.3.2") (o #t) (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"linux\", target_os = \"openbsd\"))") (k 0)) (d (n "cairo-rs") (r "^0.16.3") (f (quote ("xcb"))) (t "cfg(any(target_os = \"freebsd\", target_os = \"linux\", target_os = \"openbsd\"))") (k 0)) (d (n "cairo-sys-rs") (r "^0.16.3") (o #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"linux\", target_os = \"openbsd\"))") (k 0)) (d (n "calloop") (r "^0.7.2") (o #t) (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"linux\", target_os = \"openbsd\"))") (k 0)) (d (n "futures") (r "^0.3.25") (f (quote ("executor"))) (o #t) (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"linux\", target_os = \"openbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.16.0") (o #t) (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"linux\", target_os = \"openbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.16.3") (o #t) (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"linux\", target_os = \"openbsd\"))") (k 0)) (d (n "gtk-rs") (r "^0.16.2") (o #t) (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"linux\", target_os = \"openbsd\"))") (k 0) (p "gtk")) (d (n "gtk-sys") (r "^0.16.0") (o #t) (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"linux\", target_os = \"openbsd\"))") (k 0)) (d (n "im") (r "^15.1.0") (o #t) (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"linux\", target_os = \"openbsd\"))") (k 0)) (d (n "log") (r "^0.4.17") (o #t) (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"linux\", target_os = \"openbsd\"))") (k 0)) (d (n "nix") (r "^0.24.3") (o #t) (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"linux\", target_os = \"openbsd\"))") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"linux\", target_os = \"openbsd\"))") (k 0)) (d (n "wayland-client") (r "^0.29.5") (o #t) (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"linux\", target_os = \"openbsd\"))") (k 0)) (d (n "wayland-cursor") (r "^0.29.5") (o #t) (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"linux\", target_os = \"openbsd\"))") (k 0)) (d (n "wayland-protocols") (r "^0.29.5") (o #t) (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"linux\", target_os = \"openbsd\"))") (k 0)) (d (n "x11rb") (r "^0.10.1") (f (quote ("allow-unsafe-code" "present" "render" "randr" "xfixes" "xkb" "resource_manager" "cursor"))) (o #t) (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"linux\", target_os = \"openbsd\"))") (k 0)) (d (n "js-sys") (r "^0.3.60") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.83") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.60") (f (quote ("Window" "MouseEvent" "CssStyleDeclaration" "WheelEvent" "KeyEvent" "KeyboardEvent" "Navigator"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "block") (r "^0.1.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.24.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "foreign-types") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "scopeguard") (r "^1.1.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("d2d1_1" "dwrite" "winbase" "libloaderapi" "errhandlingapi" "winuser" "shellscalingapi" "shobjidl" "combaseapi" "synchapi" "dxgi1_3" "dcomp" "d3d11" "dwmapi" "wincon" "fileapi" "processenv" "winbase" "handleapi" "shellapi" "winnls"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wio") (r "^0.2.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0rp0vlkdmzzrff0rg3xbm3gbak8ih4mwff3rabaln6v5q99hv20s") (f (quote (("x11" "ashpd" "bindgen" "cairo-sys-rs" "futures" "nix" "pkg-config" "x11rb") ("webp" "piet-common/webp") ("wayland" "wayland-client" "wayland-protocols/client" "wayland-protocols/unstable_protocols" "nix" "cairo-sys-rs" "rand" "calloop" "wayland-cursor" "log" "im" "bindgen" "pkg-config") ("tiff" "piet-common/tiff") ("tga" "piet-common/tga") ("serde" "kurbo/serde") ("raw-win-handle" "raw-window-handle") ("pnm" "piet-common/pnm") ("jpeg_rayon" "piet-common/jpeg_rayon") ("jpeg" "piet-common/jpeg") ("image_png" "piet-common/image_png") ("ico" "piet-common/ico") ("hdr" "piet-common/hdr") ("gtk" "gdk-sys" "glib-sys" "gtk-sys" "gtk-rs") ("gif" "piet-common/gif") ("farbfeld" "piet-common/farbfeld") ("dxt" "piet-common/dxt") ("default" "gtk") ("dds" "piet-common/dds") ("bmp" "piet-common/bmp"))))))

(define-public crate-druid-shell-0.8.3 (c (n "druid-shell") (v "0.8.3") (d (list (d (n "anyhow") (r "^1.0.69") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "instant") (r "^0.1.12") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "keyboard-types") (r "^0.6.2") (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "piet-common") (r "^0.6.2") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5.0") (o #t) (k 0)) (d (n "time") (r "^0.3.20") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "piet-common") (r "^0.6.2") (f (quote ("png"))) (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (k 2)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.10.1") (d #t) (k 2)) (d (n "bindgen") (r "^0.61.0") (o #t) (d #t) (k 1)) (d (n "pkg-config") (r "^0.3.26") (o #t) (d #t) (k 1)) (d (n "ashpd") (r "^0.3.2") (o #t) (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"linux\", target_os = \"openbsd\"))") (k 0)) (d (n "cairo-rs") (r "^0.16.7") (f (quote ("xcb"))) (t "cfg(any(target_os = \"freebsd\", target_os = \"linux\", target_os = \"openbsd\"))") (k 0)) (d (n "cairo-sys-rs") (r "^0.16.3") (o #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"linux\", target_os = \"openbsd\"))") (k 0)) (d (n "calloop") (r "^0.7.2") (o #t) (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"linux\", target_os = \"openbsd\"))") (k 0)) (d (n "futures") (r "^0.3.26") (f (quote ("executor"))) (o #t) (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"linux\", target_os = \"openbsd\"))") (k 0)) (d (n "gdk-sys") (r "^0.16.0") (o #t) (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"linux\", target_os = \"openbsd\"))") (k 0)) (d (n "glib-sys") (r "^0.16.3") (o #t) (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"linux\", target_os = \"openbsd\"))") (k 0)) (d (n "gtk-rs") (r "^0.16.2") (o #t) (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"linux\", target_os = \"openbsd\"))") (k 0) (p "gtk")) (d (n "gtk-sys") (r "^0.16.0") (o #t) (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"linux\", target_os = \"openbsd\"))") (k 0)) (d (n "im") (r "^15.1.0") (o #t) (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"linux\", target_os = \"openbsd\"))") (k 0)) (d (n "log") (r "^0.4.17") (o #t) (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"linux\", target_os = \"openbsd\"))") (k 0)) (d (n "nix") (r "^0.24.3") (o #t) (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"linux\", target_os = \"openbsd\"))") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"linux\", target_os = \"openbsd\"))") (k 0)) (d (n "wayland-client") (r "^0.29.5") (o #t) (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"linux\", target_os = \"openbsd\"))") (k 0)) (d (n "wayland-cursor") (r "^0.29.5") (o #t) (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"linux\", target_os = \"openbsd\"))") (k 0)) (d (n "wayland-protocols") (r "^0.29.5") (o #t) (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"linux\", target_os = \"openbsd\"))") (k 0)) (d (n "x11rb") (r "^0.10.1") (f (quote ("allow-unsafe-code" "present" "render" "randr" "xfixes" "xkb" "resource_manager" "cursor"))) (o #t) (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"linux\", target_os = \"openbsd\"))") (k 0)) (d (n "js-sys") (r "^0.3.61") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.84") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Window" "MouseEvent" "CssStyleDeclaration" "WheelEvent" "KeyEvent" "KeyboardEvent" "Navigator"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "block") (r "^0.1.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cocoa") (r "^0.24.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "foreign-types") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "scopeguard") (r "^1.1.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("d2d1_1" "dwrite" "winbase" "libloaderapi" "errhandlingapi" "winuser" "shellscalingapi" "shobjidl" "combaseapi" "synchapi" "dxgi1_3" "dcomp" "d3d11" "dwmapi" "wincon" "fileapi" "processenv" "winbase" "handleapi" "shellapi" "winnls"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wio") (r "^0.2.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1z2hhfaqj69kxmmybxpj02k5hy5sryzpa1wp61650d7rzg4dk0kn") (f (quote (("x11" "ashpd" "bindgen" "cairo-sys-rs" "futures" "nix" "pkg-config" "x11rb") ("webp" "piet-common/webp") ("wayland" "wayland-client" "wayland-protocols/client" "wayland-protocols/unstable_protocols" "nix" "cairo-sys-rs" "rand" "calloop" "wayland-cursor" "log" "im" "bindgen" "pkg-config") ("tiff" "piet-common/tiff") ("tga" "piet-common/tga") ("serde" "piet-common/serde") ("raw-win-handle" "raw-window-handle") ("pnm" "piet-common/pnm") ("jpeg_rayon" "piet-common/jpeg_rayon") ("jpeg" "piet-common/jpeg") ("image_png" "piet-common/image_png") ("image" "piet-common/image") ("ico" "piet-common/ico") ("hdr" "piet-common/hdr") ("gtk" "gdk-sys" "glib-sys" "gtk-sys" "gtk-rs") ("gif" "piet-common/gif") ("farbfeld" "piet-common/farbfeld") ("dxt" "piet-common/dxt") ("default" "gtk") ("dds" "piet-common/dds") ("bmp" "piet-common/bmp"))))))

