(define-module (crates-io dr ui druid-widget-nursery) #:use-module (crates-io))

(define-public crate-druid-widget-nursery-0.1.0 (c (n "druid-widget-nursery") (v "0.1.0") (d (list (d (n "druid") (r "^0.8") (f (quote ("im"))) (d #t) (k 0)) (d (n "druid-material-icons") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "druid-widget-nursery-derive") (r "=0.1.0") (o #t) (d #t) (k 0)) (d (n "flume") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.6.6") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "notify") (r "^4.0.12") (o #t) (d #t) (k 0)) (d (n "notify5") (r "^5.0.0-pre.11") (o #t) (d #t) (k 0) (p "notify")) (d (n "rand") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "time"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.22") (d #t) (k 0)) (d (n "clap") (r "^3.2.19") (f (quote ("derive"))) (d #t) (k 2)) (d (n "qu") (r "^0.5.1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.71") (d #t) (k 2)))) (h "1rclj5qva49iyqgvbhd7h6bgkaljmhwv6df1y6jckr97q35y7r0z") (f (quote (("material-icons" "druid-material-icons") ("hot-reload" "libloading" "notify5" "rand") ("derive" "druid-widget-nursery-derive") ("async" "tokio/rt" "futures" "flume"))))))

