(define-module (crates-io dr iv driver-pal) #:use-module (crates-io))

(define-public crate-driver-pal-0.8.0-alpha.0 (c (n "driver-pal") (v "0.8.0-alpha.0") (d (list (d (n "driver-cp2130") (r "^1.0.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0-alpha.4") (d #t) (k 0)) (d (n "libc") (r "^0.2.54") (o #t) (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.4.0-alpha.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.91") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simplelog") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5.1") (o #t) (d #t) (k 0)))) (h "14vr9iidqbmi1mxfkis29qgw96qrd9p7wr0zp0hi9b8vk9fw5dm9") (f (quote (("utils" "hal") ("mock") ("hal-linux" "linux-embedded-hal") ("hal-cp2130" "driver-cp2130") ("hal" "toml" "structopt" "serde" "simplelog") ("ffi" "libc") ("default" "mock" "hal" "hal-cp2130" "hal-linux"))))))

(define-public crate-driver-pal-0.8.0-alpha.1 (c (n "driver-pal") (v "0.8.0-alpha.1") (d (list (d (n "driver-cp2130") (r "^1.0.0-alpha.2") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0-alpha.4") (d #t) (k 0)) (d (n "libc") (r "^0.2.54") (o #t) (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.4.0-alpha.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.91") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simplelog") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5.1") (o #t) (d #t) (k 0)))) (h "0m864zdbykhdhav1jf27lfimwh2kfmc7dx42kfdask2gbigw90pg") (f (quote (("utils" "hal") ("mock") ("hal-linux" "linux-embedded-hal") ("hal-cp2130" "driver-cp2130") ("hal" "toml" "structopt" "serde" "simplelog") ("ffi" "libc") ("default" "mock" "hal" "hal-cp2130" "hal-linux"))))))

(define-public crate-driver-pal-0.8.0-alpha.2 (c (n "driver-pal") (v "0.8.0-alpha.2") (d (list (d (n "driver-cp2130") (r "^1.0.0-alpha.2") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0-alpha.4") (d #t) (k 0)) (d (n "libc") (r "^0.2.54") (o #t) (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.4.0-alpha.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.91") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simplelog") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5.1") (o #t) (d #t) (k 0)))) (h "0cfz2q6jh1j907asrs54289lj3avmjb7j83ia8h1njbvj54yndqw") (f (quote (("utils" "hal") ("mock") ("hal-linux" "linux-embedded-hal") ("hal-cp2130" "driver-cp2130") ("hal" "toml" "structopt" "serde" "simplelog") ("ffi" "libc") ("default" "mock" "hal" "hal-cp2130" "hal-linux"))))))

(define-public crate-driver-pal-0.8.0-alpha.3 (c (n "driver-pal") (v "0.8.0-alpha.3") (d (list (d (n "driver-cp2130") (r "^1.0.0-alpha.2") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0-alpha.4") (d #t) (k 0)) (d (n "libc") (r "^0.2.54") (o #t) (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.4.0-alpha.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.91") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simplelog") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5.1") (o #t) (d #t) (k 0)))) (h "0h2vvrigh7ppq7gwlpgs55yd8ada4hkszg3fzwpjnvz04apq6x2a") (f (quote (("utils" "hal") ("mock") ("hal-linux" "linux-embedded-hal") ("hal-cp2130" "driver-cp2130") ("hal" "toml" "structopt" "serde" "simplelog") ("ffi" "libc") ("default" "mock" "hal" "hal-cp2130" "hal-linux"))))))

(define-public crate-driver-pal-0.8.0-alpha.4 (c (n "driver-pal") (v "0.8.0-alpha.4") (d (list (d (n "driver-cp2130") (r "^1.0.0-alpha.3") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0-alpha.5") (d #t) (k 0)) (d (n "libc") (r "^0.2.54") (o #t) (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.4.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.91") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simplelog") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5.1") (o #t) (d #t) (k 0)))) (h "1jhp3wfq52f6gdjfk1m6wc7hmwzc32a6qr833ssm4vpirsp4dkn7") (f (quote (("utils" "hal") ("mock") ("hal-linux" "linux-embedded-hal") ("hal-cp2130" "driver-cp2130") ("hal" "toml" "structopt" "serde" "simplelog") ("ffi" "libc") ("default" "mock" "hal" "hal-cp2130" "hal-linux"))))))

(define-public crate-driver-pal-0.8.0-alpha.5 (c (n "driver-pal") (v "0.8.0-alpha.5") (d (list (d (n "driver-cp2130") (r "^1.0.0-alpha.3") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0-alpha.5") (d #t) (k 0)) (d (n "libc") (r "^0.2.54") (o #t) (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.4.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.91") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simplelog") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5.1") (o #t) (d #t) (k 0)))) (h "0wn286iqhn47ih3ib7mxr6hq5bz1j357428jrx5dprg48m1f0wx5") (f (quote (("utils" "hal") ("mock") ("hal-linux" "linux-embedded-hal") ("hal-cp2130" "driver-cp2130") ("hal" "toml" "structopt" "serde" "simplelog") ("ffi" "libc") ("default" "mock" "hal" "hal-cp2130" "hal-linux"))))))

(define-public crate-driver-pal-0.8.0-alpha.6 (c (n "driver-pal") (v "0.8.0-alpha.6") (d (list (d (n "driver-cp2130") (r "^1.0.0-alpha.5") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0-alpha.7") (d #t) (k 0)) (d (n "libc") (r "^0.2.54") (o #t) (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.4.0-alpha.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.91") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simplelog") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3.11") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5.1") (o #t) (d #t) (k 0)))) (h "1a8c78nk7ijlhyi8gc2wxfx17yprhgcn4fxrpjmfs598c83v9m4l") (f (quote (("utils" "hal") ("mock") ("hal-linux" "linux-embedded-hal") ("hal-cp2130" "driver-cp2130") ("hal" "toml" "structopt" "serde" "simplelog") ("ffi" "libc") ("default" "mock" "hal"))))))

(define-public crate-driver-pal-0.8.0 (c (n "driver-pal") (v "0.8.0") (d (list (d (n "clap") (r "^4.4.7") (f (quote ("derive" "env"))) (o #t) (d #t) (k 0)) (d (n "driver-cp2130") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.54") (o #t) (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.91") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simplelog") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.8.12") (o #t) (d #t) (k 0)))) (h "0q3yl5f97c4b88xwia5q96gbs6aprypydl3rxrhpqkydrskm57yj") (f (quote (("utils" "hal") ("mock") ("hal-linux" "linux-embedded-hal") ("hal-cp2130" "driver-cp2130") ("hal" "toml" "clap" "serde" "simplelog") ("ffi" "libc") ("default" "mock" "hal" "hal-cp2130" "hal-linux"))))))

(define-public crate-driver-pal-0.9.0 (c (n "driver-pal") (v "0.9.0") (d (list (d (n "clap") (r "^4.4.7") (f (quote ("derive" "env"))) (o #t) (d #t) (k 0)) (d (n "driver-cp2130") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0") (d #t) (k 0)) (d (n "embedded-hal-bus") (r "^0.1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.54") (o #t) (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.91") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "simplelog") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.8.12") (o #t) (d #t) (k 0)))) (h "0iwnxwj6114nqy33pwc14rdxnivq4rwmc3m3z22zgvkxilrpqpci") (f (quote (("utils" "hal") ("mock") ("hal-linux" "linux-embedded-hal") ("hal-cp2130" "driver-cp2130") ("hal" "toml" "clap" "serde" "simplelog") ("ffi" "libc") ("default" "mock" "hal" "hal-cp2130" "hal-linux"))))))

