(define-module (crates-io dr og drogue-grove-uart-spi) #:use-module (crates-io))

(define-public crate-drogue-grove-uart-spi-0.1.0 (c (n "drogue-grove-uart-spi") (v "0.1.0") (d (list (d (n "cortex-m") (r "^0.6") (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.6") (d #t) (k 2)) (d (n "cortex-m-rtic") (r "^0.5") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "panic-rtt-target") (r "^0.1") (f (quote ("cortex-m"))) (d #t) (k 2)) (d (n "rtt-logger") (r "^0.1") (d #t) (k 2)) (d (n "rtt-target") (r "^0.2") (f (quote ("cortex-m"))) (d #t) (k 2)) (d (n "stm32f4") (r "^0.11") (f (quote ("stm32f411" "rt"))) (d #t) (k 2)) (d (n "stm32f4xx-hal") (r "^0.8") (f (quote ("stm32f411" "rt"))) (d #t) (k 2)) (d (n "stm32f7") (r "^0.11") (f (quote ("stm32f7x3" "rt"))) (d #t) (k 2)) (d (n "stm32f7xx-hal") (r "^0.2") (f (quote ("stm32f723" "rt"))) (d #t) (k 2)) (d (n "sx127x_lora") (r "^0.3") (d #t) (k 2)))) (h "0a0p7kfvcjf4dcihk7dgsv2qi61mkbvxi7hj2p0shlljs04pxrby") (f (quote (("stm32f7xx") ("stm32f4xx") ("dump"))))))

