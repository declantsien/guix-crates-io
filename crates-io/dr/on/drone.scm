(define-module (crates-io dr on drone) #:use-module (crates-io))

(define-public crate-drone-0.1.0 (c (n "drone") (v "0.1.0") (d (list (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "drone-core") (r "^0.1") (d #t) (k 0)) (d (n "drone-stm32f1") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "drone-test") (r "^0.1") (d #t) (k 2)))) (h "1na7q9dss3s4w60rngcyhykzsmimpxn48p3nnzlam0anvbxkhrz8") (f (quote (("stm32f1" "drone-stm32f1") ("default" "stm32f1"))))))

(define-public crate-drone-0.1.1 (c (n "drone") (v "0.1.1") (d (list (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "drone-core") (r "^0.1.1") (d #t) (k 0)) (d (n "drone-stm32f1") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "drone-stm32l4") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "drone-test") (r "^0.1.1") (d #t) (k 2)))) (h "12ya3liwypwl9sb86zlw1d7wvypzhh97aywm9di8sm21ikhphvaw") (f (quote (("stm32l4" "drone-stm32l4") ("stm32f1" "drone-stm32f1") ("default" "stm32l4"))))))

(define-public crate-drone-0.1.2 (c (n "drone") (v "0.1.2") (d (list (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "drone-core") (r "^0.1.2") (d #t) (k 0)) (d (n "drone-stm32f1") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "drone-stm32l4") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "drone-test") (r "^0.1.2") (d #t) (k 2)))) (h "1vxr2jaq43dkfwfl24vng6iwbfn57wlparjliq87q9az58g8clkj") (f (quote (("stm32l4" "drone-stm32l4") ("stm32f1" "drone-stm32f1") ("default" "stm32l4"))))))

(define-public crate-drone-0.2.0 (c (n "drone") (v "0.2.0") (d (list (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "compiletest_rs") (r "^0.2") (f (quote ("tmp"))) (d #t) (k 2)))) (h "09a2zz1dfn6av69bvaxghwds173qd9mb0xsd9skqrzc4lidfz03w")))

(define-public crate-drone-0.3.0 (c (n "drone") (v "0.3.0") (d (list (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "compiletest_rs") (r "^0.2") (f (quote ("tmp"))) (d #t) (k 2)) (d (n "glob") (r "^0.2") (d #t) (k 2)) (d (n "linked_list_allocator") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.4") (d #t) (k 0)))) (h "0hf54sal0sa3nkfz53xb7rhll4247znikc60wd1c5jm35h4rdz3f") (f (quote (("default" "alloc") ("alloc" "linked_list_allocator"))))))

(define-public crate-drone-0.4.0 (c (n "drone") (v "0.4.0") (d (list (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "compiletest_rs") (r "^0.2") (f (quote ("tmp"))) (d #t) (k 2)) (d (n "glob") (r "^0.2") (d #t) (k 2)) (d (n "linked_list_allocator") (r "^0.4") (d #t) (k 0)))) (h "16ssnfdlqxyf3g2dv1dwgikh562sj0p0h97wny02lcffq9ggarss") (f (quote (("test") ("default"))))))

(define-public crate-drone-0.5.0 (c (n "drone") (v "0.5.0") (d (list (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "compiletest_rs") (r "^0.2") (f (quote ("tmp"))) (d #t) (k 2)) (d (n "drone-macros") (r "^0.5.0") (d #t) (k 0)) (d (n "glob") (r "^0.2") (d #t) (k 2)))) (h "0k58mb3887zz0vfmhj27dqgcw6ai9wmvk71l1wgyw8y4m4xs73mr") (f (quote (("std") ("default"))))))

(define-public crate-drone-0.5.1 (c (n "drone") (v "0.5.1") (d (list (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "compiletest_rs") (r "^0.2") (f (quote ("tmp"))) (d #t) (k 2)) (d (n "drone-macros") (r "^0.5.1") (d #t) (k 0)) (d (n "glob") (r "^0.2") (d #t) (k 2)))) (h "1waf2qrlzj2vdzviz1hxmlqp6q7ivjxkk9ipxc5kpj5anqdvv52s") (f (quote (("std") ("default"))))))

(define-public crate-drone-0.6.0 (c (n "drone") (v "0.6.0") (d (list (d (n "bitflags") (r "^1") (k 0)) (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "compiletest_rs") (r "^0.2") (f (quote ("tmp"))) (d #t) (k 2)) (d (n "drone-macros") (r "^0.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.1") (k 0)) (d (n "glob") (r "^0.2") (d #t) (k 2)))) (h "0vvny6kwlcizjskfflvlw00ckl3bxg0nmls74pnh4vsn27i2kjg5") (f (quote (("std") ("default"))))))

(define-public crate-drone-0.9.0 (c (n "drone") (v "0.9.0") (d (list (d (n "drone-config") (r "= 0.9.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "exitfailure") (r "^0.5") (d #t) (k 0)) (d (n "failure") (r "^0.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "handlebars") (r "^2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "termcolor") (r "^1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "07r4q3al90n2sfvlzi7v72b5ikl371rnsxibia8bw4p65qm326df")))

(define-public crate-drone-0.10.0 (c (n "drone") (v "0.10.0") (d (list (d (n "drone-config") (r "= 0.10.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "exitfailure") (r "^0.5") (d #t) (k 0)) (d (n "failure") (r "^0.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "handlebars") (r "^2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "termcolor") (r "^1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "11l29ajclafi2q9lkpnzwifpcb6zca84wq8rwyk15rzlcigqcihd")))

(define-public crate-drone-0.10.1 (c (n "drone") (v "0.10.1") (d (list (d (n "drone-config") (r "= 0.10.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "exitfailure") (r "^0.5") (d #t) (k 0)) (d (n "failure") (r "^0.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "handlebars") (r "^2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "termcolor") (r "^1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0g90m2bwjf6jg7lzlhnmiwkaglih02sapdbqfzaxcirlqa7wgqnx")))

(define-public crate-drone-0.11.0 (c (n "drone") (v "0.11.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "drone-config") (r "= 0.11.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "handlebars") (r "^2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "signal-hook") (r "^0.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "termcolor") (r "^1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0dgsgcd5bnh5r4ksrd5rdq7dknjrk35rvfwi1ahxspi7l34pl32r")))

(define-public crate-drone-0.11.1 (c (n "drone") (v "0.11.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "drone-config") (r "= 0.11.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "handlebars") (r "^2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "signal-hook") (r "^0.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "termcolor") (r "^1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "10fqqj6fs4b4hk2ccimmcpdky70f9mpkfy2njif6b2il14sznk7p")))

(define-public crate-drone-0.12.0 (c (n "drone") (v "0.12.0") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "drone-config") (r "= 0.12.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "handlebars") (r "^3") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "signal-hook") (r "^0.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "00nc5ddg2lynqbmvnjiikrax5xr12k25kr7b7mdp8j995w8df43d")))

(define-public crate-drone-0.12.1 (c (n "drone") (v "0.12.1") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "drone-config") (r "= 0.12.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "handlebars") (r "^3") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "signal-hook") (r "^0.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "06ss5xprhs1cc2jb8qfvqrnk2cyq3zggc8r33d39wrjxsimc4hcm")))

(define-public crate-drone-0.12.2 (c (n "drone") (v "0.12.2") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "drone-config") (r "= 0.12.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "handlebars") (r "^3") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "signal-hook") (r "^0.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1mk3y6msazf9wsmsz0r83v1vscx46v4kxsmma9h9pd09zwkj4dap")))

(define-public crate-drone-0.12.3 (c (n "drone") (v "0.12.3") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "drone-config") (r "=0.12.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "handlebars") (r "^3") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "signal-hook") (r "^0.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0a4707yddrnvbvdfxdsnbr8q4whhh3k1m74zkys98b774fkpsdw0")))

(define-public crate-drone-0.12.4 (c (n "drone") (v "0.12.4") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "drone-config") (r "=0.12.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "handlebars") (r "^3") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "signal-hook") (r "^0.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0i6fww5m4fzjkbcl5zgnda74132d8lkvninn08yb74kibm22rp2a")))

(define-public crate-drone-0.13.0 (c (n "drone") (v "0.13.0") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "drone-config") (r "=0.13.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "handlebars") (r "^3") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "signal-hook") (r "^0.2") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0aqsxmn061gr5klx4qy3aji5agfyy6b7l34nsjzj5vxjhb5mdazp")))

(define-public crate-drone-0.13.1 (c (n "drone") (v "0.13.1") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "drone-config") (r "=0.13.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "handlebars") (r "^3") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "signal-hook") (r "^0.2") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1p1sasv8665n393cgidmvpf4ni2422yns1l1hd5ckc4n47wpkfpr")))

(define-public crate-drone-0.13.2 (c (n "drone") (v "0.13.2") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "drone-config") (r "=0.13.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "handlebars") (r "^3") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "signal-hook") (r "^0.2") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0fr70ffx80w9m4gsi2j0k7dpadfx7kbnn551aa2yxxx4qm9561p0")))

(define-public crate-drone-0.14.0 (c (n "drone") (v "0.14.0") (d (list (d (n "Inflector") (r "^0.11") (d #t) (k 0)) (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "drone-config") (r "=0.14.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "handlebars") (r "^3") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "signal-hook") (r "^0.2") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "18bkc202i5g0pngb9n2p6zjnhbqgmbc1xkrkfd6fsv2nxzin2s89")))

