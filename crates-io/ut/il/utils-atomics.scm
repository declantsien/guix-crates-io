(define-module (crates-io ut il utils-atomics) #:use-module (crates-io))

(define-public crate-utils-atomics-0.1.0 (c (n "utils-atomics") (v "0.1.0") (d (list (d (n "bytemuck") (r "^1.11.0") (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)))) (h "0qlg0536adinx6xx9h15n84w9vpblfpiyb1c8img758byjbbxhj5") (f (quote (("std" "alloc" "crossbeam/std" "bytemuck/extern_crate_std" "num-traits/std") ("default" "std") ("const") ("alloc" "crossbeam/alloc" "bytemuck/extern_crate_alloc"))))))

(define-public crate-utils-atomics-0.2.0 (c (n "utils-atomics") (v "0.2.0") (d (list (d (n "bytemuck") (r "^1.11.0") (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (k 0)) (d (n "futures") (r "^0.3.24") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "once_cell") (r "^1.14.0") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "tokio") (r "^1.21.0") (f (quote ("full"))) (d #t) (k 2)))) (h "19idpx8icih562rgjss3zcnaykm9a1r12r20sxkjj71f36vya483") (f (quote (("default" "std") ("const")))) (s 2) (e (quote (("std" "alloc" "crossbeam/std" "bytemuck/extern_crate_std" "num-traits/std" "once_cell/std" "futures?/std") ("futures" "dep:futures") ("alloc" "crossbeam/alloc" "bytemuck/extern_crate_alloc" "once_cell/alloc" "futures?/alloc"))))))

(define-public crate-utils-atomics-0.2.1 (c (n "utils-atomics") (v "0.2.1") (d (list (d (n "bytemuck") (r "^1.11.0") (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (k 0)) (d (n "futures") (r "^0.3.24") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "once_cell") (r "^1.14.0") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "tokio") (r "^1.21.0") (f (quote ("full"))) (d #t) (k 2)))) (h "1szdvikx7whn31jclwkqim1jliwl5dfxz361d2zj06kgzsbgn3d6") (f (quote (("default" "std") ("const")))) (s 2) (e (quote (("std" "alloc" "crossbeam/std" "bytemuck/extern_crate_std" "num-traits/std" "once_cell/std" "futures?/std") ("futures" "dep:futures") ("alloc" "crossbeam/alloc" "bytemuck/extern_crate_alloc" "once_cell/alloc" "futures?/alloc"))))))

(define-public crate-utils-atomics-0.2.2 (c (n "utils-atomics") (v "0.2.2") (d (list (d (n "bytemuck") (r "^1.11.0") (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (k 0)) (d (n "futures") (r "^0.3.24") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "once_cell") (r "^1.14.0") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "tokio") (r "^1.21.0") (f (quote ("full"))) (d #t) (k 2)))) (h "17gvyywwb1a71h3g0kfl76ys36mx5iz5ig2951sq0gm441fhr3ih") (f (quote (("default" "std") ("const")))) (s 2) (e (quote (("std" "alloc" "crossbeam/std" "bytemuck/extern_crate_std" "num-traits/std" "once_cell/std" "futures?/std") ("futures" "dep:futures") ("alloc" "crossbeam/alloc" "bytemuck/extern_crate_alloc" "once_cell/alloc" "futures?/alloc"))))))

(define-public crate-utils-atomics-0.2.3 (c (n "utils-atomics") (v "0.2.3") (d (list (d (n "bytemuck") (r "^1.11.0") (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (k 0)) (d (n "futures") (r "^0.3.24") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "once_cell") (r "^1.14.0") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "tokio") (r "^1.21.0") (f (quote ("full"))) (d #t) (k 2)))) (h "1afq8dn74cdm4499m3pyvd68n9isiglp5jsaqls4jy7sr1w94m15") (f (quote (("default" "std") ("const")))) (s 2) (e (quote (("std" "alloc" "crossbeam/std" "bytemuck/extern_crate_std" "num-traits/std" "once_cell/std" "futures?/std") ("futures" "dep:futures") ("alloc" "crossbeam/alloc" "bytemuck/extern_crate_alloc" "once_cell/alloc" "futures?/alloc"))))))

(define-public crate-utils-atomics-0.3.0 (c (n "utils-atomics") (v "0.3.0") (d (list (d (n "bytemuck") (r "^1.11.0") (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (k 0)) (d (n "docfg") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "once_cell") (r "^1.14.0") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "tokio") (r "^1.21.0") (f (quote ("full"))) (d #t) (k 2)))) (h "19whb7610l7whamfhn7iz2cyjashisxbs81c67qpphp0islmqa95") (f (quote (("nightly") ("default" "std" "nightly") ("const") ("alloc_api" "nightly" "alloc")))) (s 2) (e (quote (("std" "alloc" "crossbeam/std" "bytemuck/extern_crate_std" "num-traits/std" "once_cell/std" "futures?/std") ("futures" "dep:futures") ("alloc" "crossbeam/alloc" "bytemuck/extern_crate_alloc" "once_cell/alloc" "futures?/alloc"))))))

(define-public crate-utils-atomics-0.4.0 (c (n "utils-atomics") (v "0.4.0") (d (list (d (n "bytemuck") (r "^1.11.0") (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (k 0)) (d (n "docfg") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "once_cell") (r "^1.14.0") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "tokio") (r "^1.21.0") (f (quote ("full"))) (d #t) (k 2)))) (h "0qrizzrk7a1vymfcs45lc74148y1s4czsx612c0i3rrzc3s3pcfv") (f (quote (("nightly") ("default" "std" "nightly") ("const") ("alloc_api" "nightly" "alloc")))) (s 2) (e (quote (("std" "alloc" "crossbeam/std" "bytemuck/extern_crate_std" "num-traits/std" "once_cell/std" "futures?/std") ("futures" "dep:futures") ("alloc" "crossbeam/alloc" "bytemuck/extern_crate_alloc" "once_cell/alloc" "futures?/alloc"))))))

(define-public crate-utils-atomics-0.4.1 (c (n "utils-atomics") (v "0.4.1") (d (list (d (n "bytemuck") (r "^1.11.0") (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8.2") (k 0)) (d (n "docfg") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "once_cell") (r "^1.14.0") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "tokio") (r "^1.21.0") (f (quote ("full"))) (d #t) (k 2)))) (h "1f87nhmff8i07q4kjdzid3ws0day3pwaprbzah57ymqfsmx0jw6r") (f (quote (("nightly") ("default" "std" "nightly") ("const") ("alloc_api" "nightly" "alloc")))) (s 2) (e (quote (("std" "alloc" "crossbeam/std" "bytemuck/extern_crate_std" "num-traits/std" "once_cell/std" "futures?/std") ("futures" "dep:futures") ("alloc" "crossbeam/alloc" "bytemuck/extern_crate_alloc" "once_cell/alloc" "futures?/alloc"))))))

(define-public crate-utils-atomics-0.4.2 (c (n "utils-atomics") (v "0.4.2") (d (list (d (n "bytemuck") (r "^1.11.0") (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8.2") (k 0)) (d (n "docfg") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "once_cell") (r "^1.14.0") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "tokio") (r "^1.21.0") (f (quote ("full"))) (d #t) (k 2)))) (h "16z4hqbvl01ic06vxrgr9gly54qm0n5rb7zavvni78nbpsay7qqs") (f (quote (("nightly") ("default" "std" "nightly") ("const") ("alloc_api" "nightly" "alloc")))) (s 2) (e (quote (("std" "alloc" "crossbeam/std" "bytemuck/extern_crate_std" "num-traits/std" "once_cell/std" "futures?/std") ("futures" "dep:futures") ("alloc" "crossbeam/alloc" "bytemuck/extern_crate_alloc" "once_cell/alloc" "futures?/alloc"))))))

(define-public crate-utils-atomics-0.4.3 (c (n "utils-atomics") (v "0.4.3") (d (list (d (n "bytemuck") (r "^1.11.0") (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8.2") (k 0)) (d (n "docfg") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "once_cell") (r "^1.14.0") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "tokio") (r "^1.21.0") (f (quote ("full"))) (d #t) (k 2)))) (h "1f10cwp3niqq356zbfrgb979dnvzcxalzpsgp14njfnb0p7yxhbk") (f (quote (("nightly") ("default" "std" "nightly") ("const") ("alloc_api" "nightly" "alloc")))) (s 2) (e (quote (("std" "alloc" "crossbeam/std" "bytemuck/extern_crate_std" "num-traits/std" "once_cell/std" "futures?/std") ("futures" "dep:futures") ("alloc" "crossbeam/alloc" "bytemuck/extern_crate_alloc" "once_cell/alloc" "futures?/alloc"))))))

(define-public crate-utils-atomics-0.4.4 (c (n "utils-atomics") (v "0.4.4") (d (list (d (n "bytemuck") (r "^1.11.0") (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8.2") (k 0)) (d (n "docfg") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "once_cell") (r "^1.14.0") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "tokio") (r "^1.21.0") (f (quote ("full"))) (d #t) (k 2)))) (h "1kk4zxqx0a9gpjwdvn11jdf364zb0hx267ngiw8c712fs7ya70zi") (f (quote (("nightly") ("default" "std" "nightly") ("const") ("alloc_api" "nightly" "alloc")))) (s 2) (e (quote (("std" "alloc" "crossbeam/std" "bytemuck/extern_crate_std" "num-traits/std" "once_cell/std" "futures?/std") ("futures" "dep:futures") ("alloc" "crossbeam/alloc" "bytemuck/extern_crate_alloc" "once_cell/alloc" "futures?/alloc"))))))

(define-public crate-utils-atomics-0.4.5 (c (n "utils-atomics") (v "0.4.5") (d (list (d (n "bytemuck") (r "^1.11.0") (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8.2") (k 0)) (d (n "docfg") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "once_cell") (r "^1.14.0") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "tokio") (r "^1.21.0") (f (quote ("full"))) (d #t) (k 2)))) (h "0vr2n2cfc90zcfxc7sg5ynh4693kq6g8ga5dgm77n8lwmck8jcrs") (f (quote (("nightly") ("default" "std" "nightly") ("const") ("alloc_api" "nightly" "alloc")))) (s 2) (e (quote (("std" "alloc" "crossbeam/std" "bytemuck/extern_crate_std" "num-traits/std" "once_cell/std" "futures?/std") ("futures" "dep:futures") ("alloc" "crossbeam/alloc" "bytemuck/extern_crate_alloc" "once_cell/alloc" "futures?/alloc"))))))

(define-public crate-utils-atomics-0.5.0 (c (n "utils-atomics") (v "0.5.0") (d (list (d (n "bytemuck") (r "^1.11.0") (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8.2") (k 0)) (d (n "docfg") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "once_cell") (r "^1.14.0") (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.21.0") (f (quote ("full"))) (d #t) (k 2)))) (h "0a0anr32d6663sgccnpylbdkvgs2wa9ksfy85d5qwgwq5pldrc0a") (f (quote (("nightly") ("default" "std" "nightly") ("const") ("alloc_api" "nightly" "alloc")))) (s 2) (e (quote (("std" "alloc" "crossbeam/std" "bytemuck/extern_crate_std" "num-traits/std" "once_cell/std" "futures?/std") ("futures" "dep:futures") ("alloc" "crossbeam/alloc" "bytemuck/extern_crate_alloc" "once_cell/alloc" "futures?/alloc"))))))

(define-public crate-utils-atomics-0.5.1 (c (n "utils-atomics") (v "0.5.1") (d (list (d (n "bytemuck") (r "^1.11.0") (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8.2") (k 0)) (d (n "docfg") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "once_cell") (r "^1.14.0") (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.21.0") (f (quote ("full"))) (d #t) (k 2)))) (h "0l4vjf3ly46p8v9z0cllancddg30kxm9kg6rnymfhmhqm8ifgdcb") (f (quote (("nightly") ("default" "std" "nightly") ("const") ("alloc_api" "nightly" "alloc")))) (s 2) (e (quote (("std" "alloc" "crossbeam/std" "bytemuck/extern_crate_std" "num-traits/std" "once_cell/std" "futures?/std") ("futures" "dep:futures") ("alloc" "crossbeam/alloc" "bytemuck/extern_crate_alloc" "once_cell/alloc" "futures?/alloc"))))))

(define-public crate-utils-atomics-1.0.0 (c (n "utils-atomics") (v "1.0.0") (d (list (d (n "bytemuck") (r "^1.11.0") (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8.2") (k 0)) (d (n "docfg") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "once_cell") (r "^1.14.0") (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.21.0") (f (quote ("full"))) (d #t) (k 2)))) (h "0ajdv36wrvq5pz6sncrh8nj1v268807k3ninjlwl7grvmaczgf5c") (f (quote (("nightly") ("default" "std") ("const" "nightly") ("alloc_api" "nightly" "alloc")))) (s 2) (e (quote (("std" "alloc" "crossbeam/std" "bytemuck/extern_crate_std" "num-traits/std" "once_cell/std" "futures?/std") ("futures" "dep:futures") ("alloc" "crossbeam/alloc" "bytemuck/extern_crate_alloc" "once_cell/alloc" "futures?/alloc"))))))

(define-public crate-utils-atomics-1.0.1 (c (n "utils-atomics") (v "1.0.1") (d (list (d (n "bytemuck") (r "^1.11.0") (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8.2") (k 0)) (d (n "docfg") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "once_cell") (r "^1.14.0") (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.21.0") (f (quote ("full"))) (d #t) (k 2)))) (h "148y5dlskvgs6xff9qmb8j3k2177wk7g176747x8cqmxphlj0jrv") (f (quote (("nightly") ("default" "std") ("const" "nightly") ("alloc_api" "nightly" "alloc")))) (s 2) (e (quote (("std" "alloc" "crossbeam/std" "bytemuck/extern_crate_std" "num-traits/std" "once_cell/std" "futures?/std") ("futures" "dep:futures") ("alloc" "crossbeam/alloc" "bytemuck/extern_crate_alloc" "once_cell/alloc" "futures?/alloc"))))))

(define-public crate-utils-atomics-1.1.0 (c (n "utils-atomics") (v "1.1.0") (d (list (d (n "bytemuck") (r "^1.11.0") (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8.2") (k 0)) (d (n "docfg") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "once_cell") (r "^1.14.0") (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.21.0") (f (quote ("full"))) (d #t) (k 2)))) (h "1v7hlr0x4dp3ahf8fkcmilwmw9nhnxdvvq53xrm9arrpp10v8yrp") (f (quote (("nightly") ("default" "std") ("const" "nightly") ("alloc_api" "nightly" "alloc")))) (s 2) (e (quote (("std" "alloc" "crossbeam/std" "bytemuck/extern_crate_std" "num-traits/std" "once_cell/std" "futures?/std") ("futures" "dep:futures") ("alloc" "crossbeam/alloc" "bytemuck/extern_crate_alloc" "once_cell/alloc" "futures?/alloc"))))))

(define-public crate-utils-atomics-1.1.1 (c (n "utils-atomics") (v "1.1.1") (d (list (d (n "bytemuck") (r "^1.11.0") (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8.2") (k 0)) (d (n "docfg") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "once_cell") (r "^1.14.0") (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.21.0") (f (quote ("full"))) (d #t) (k 2)))) (h "181111naz0mdxnd9kysqjn49ky37lv8as7xgchwblzxxfxb0chn0") (f (quote (("nightly") ("default" "std") ("const" "nightly") ("alloc_api" "nightly" "alloc")))) (s 2) (e (quote (("std" "alloc" "crossbeam/std" "bytemuck/extern_crate_std" "num-traits/std" "once_cell/std" "futures?/std") ("futures" "dep:futures") ("alloc" "crossbeam/alloc" "bytemuck/extern_crate_alloc" "once_cell/alloc" "futures?/alloc"))))))

(define-public crate-utils-atomics-1.1.2 (c (n "utils-atomics") (v "1.1.2") (d (list (d (n "bytemuck") (r "^1.11.0") (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8.2") (k 0)) (d (n "docfg") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "once_cell") (r "^1.14.0") (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.21.0") (f (quote ("full"))) (d #t) (k 2)))) (h "0g1fdd3bkmkzs9jrrk795fj41qjhm4x44bml48b1y115yhgjqmj5") (f (quote (("nightly") ("default" "std") ("const" "nightly") ("alloc_api" "nightly" "alloc")))) (s 2) (e (quote (("std" "alloc" "crossbeam/std" "bytemuck/extern_crate_std" "num-traits/std" "once_cell/std" "futures?/std") ("futures" "dep:futures") ("alloc" "crossbeam/alloc" "bytemuck/extern_crate_alloc" "once_cell/alloc" "futures?/alloc"))))))

