(define-module (crates-io ut cn utcnow) #:use-module (crates-io))

(define-public crate-utcnow-0.0.0-pre1 (c (n "utcnow") (v "0.0.0-pre1") (d (list (d (n "libc") (r "^0.2.126") (k 2)) (d (n "rustix") (r "^0.35.7") (f (quote ("time"))) (d #t) (t "cfg(target_os = \"dragonfly\")") (k 0)) (d (n "rustix") (r "^0.35.7") (f (quote ("time"))) (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "rustix") (r "^0.35.7") (f (quote ("time"))) (d #t) (t "cfg(target_os = \"freebsd\")") (k 0)) (d (n "rustix") (r "^0.35.7") (f (quote ("time"))) (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "rustix") (r "^0.35.7") (f (quote ("time"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "rustix") (r "^0.35.7") (f (quote ("time"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "rustix") (r "^0.35.7") (f (quote ("time"))) (d #t) (t "cfg(target_os = \"openbsd\")") (k 0)) (d (n "rustix") (r "^0.35.7") (f (quote ("time"))) (d #t) (t "cfg(target_os = \"redox\")") (k 0)) (d (n "rustix") (r "^0.35.7") (f (quote ("time"))) (d #t) (t "cfg(target_os = \"wasi\")") (k 0)))) (h "0nx8b40jpibwfv2z2wf4h3br24qp20ys92q6srzfa8kdzhpan5k6") (f (quote (("std") ("default" "std"))))))

(define-public crate-utcnow-0.0.0-pre2 (c (n "utcnow") (v "0.0.0-pre2") (d (list (d (n "libc") (r "^0.2.126") (k 2)) (d (n "rustix") (r "^0.35.7") (f (quote ("time"))) (d #t) (t "cfg(target_os = \"dragonfly\")") (k 0)) (d (n "rustix") (r "^0.35.7") (f (quote ("time"))) (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "rustix") (r "^0.35.7") (f (quote ("time"))) (d #t) (t "cfg(target_os = \"freebsd\")") (k 0)) (d (n "rustix") (r "^0.35.7") (f (quote ("time"))) (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "rustix") (r "^0.35.7") (f (quote ("time"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "rustix") (r "^0.35.7") (f (quote ("time"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "rustix") (r "^0.35.7") (f (quote ("time"))) (d #t) (t "cfg(target_os = \"openbsd\")") (k 0)) (d (n "rustix") (r "^0.35.7") (f (quote ("time"))) (d #t) (t "cfg(target_os = \"redox\")") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("sysinfoapi"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "08fz182i32dwj98vnpmd88fkcnnn1qi9lyipqqd7ksx2ciczc5n6") (f (quote (("std") ("fallback") ("default" "std" "fallback"))))))

(define-public crate-utcnow-0.0.0-pre3 (c (n "utcnow") (v "0.0.0-pre3") (d (list (d (n "js-sys") (r "^0.3.58") (d #t) (k 0)) (d (n "rustix") (r "^0.35.7") (f (quote ("time"))) (d #t) (t "cfg(target_os = \"dragonfly\")") (k 0)) (d (n "rustix") (r "^0.35.7") (f (quote ("time"))) (d #t) (t "cfg(target_os = \"emscripten\")") (k 0)) (d (n "rustix") (r "^0.35.7") (f (quote ("time"))) (d #t) (t "cfg(target_os = \"freebsd\")") (k 0)) (d (n "rustix") (r "^0.35.7") (f (quote ("time"))) (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "rustix") (r "^0.35.7") (f (quote ("time"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "rustix") (r "^0.35.7") (f (quote ("time"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "rustix") (r "^0.35.7") (f (quote ("time"))) (d #t) (t "cfg(target_os = \"openbsd\")") (k 0)) (d (n "rustix") (r "^0.35.7") (f (quote ("time"))) (d #t) (t "cfg(target_os = \"redox\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.81") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.31") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 2)) (d (n "winapi") (r "^0.3.9") (f (quote ("sysinfoapi"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "120hgp1cn1nchzy3466mgaiw11njgsjgxfg0jhlcipyrrpq5in5k") (f (quote (("std") ("fallback") ("default" "std" "fallback"))))))

(define-public crate-utcnow-0.0.0-pre4 (c (n "utcnow") (v "0.0.0-pre4") (d (list (d (n "errno") (r "^0.2.8") (t "cfg(target_os = \"netbsd\")") (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 0)) (d (n "libc") (r "^0.2.126") (t "cfg(target_os = \"netbsd\")") (k 0)) (d (n "rustix") (r "^0.35.7") (f (quote ("time"))) (d #t) (t "cfg(any(target_os = \"dragonfly\", target_os = \"emscripten\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"linux\", target_os = \"macos\", target_os = \"openbsd\", target_os = \"redox\"))") (k 0)) (d (n "wasi") (r "^0.11.0") (t "cfg(target_os = \"wasi\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.81") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.31") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 2)) (d (n "winapi") (r "^0.3.9") (f (quote ("sysinfoapi"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "131wivw4hcjzr5jgq7n4cw5sjjn36dyzlw8iv1m5jk5hiq4kgj7f") (f (quote (("std") ("fallback") ("default" "std" "fallback"))))))

(define-public crate-utcnow-0.0.0-pre5 (c (n "utcnow") (v "0.0.0-pre5") (d (list (d (n "errno") (r "^0.2.8") (t "cfg(any(target_os = \"android\", target_os = \"darwin\", target_os = \"emscripten\", target_os = \"fuchsia\", target_os = \"illumos\", target_os = \"netbsd\", target_os = \"solaris\"))") (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 0)) (d (n "libc") (r "^0.2.126") (t "cfg(any(target_os = \"android\", target_os = \"darwin\", target_os = \"emscripten\", target_os = \"fuchsia\", target_os = \"illumos\", target_os = \"netbsd\", target_os = \"solaris\"))") (k 0)) (d (n "rustix") (r "^0.35.7") (f (quote ("time"))) (d #t) (t "cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"linux\", target_os = \"macos\", target_os = \"openbsd\", target_os = \"redox\"))") (k 0)) (d (n "wasi") (r "^0.11.0") (t "cfg(target_os = \"wasi\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.81") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.31") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 2)) (d (n "winapi") (r "^0.3.9") (f (quote ("sysinfoapi"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0iynvrspbjvny36i9q784h6cd4ila1dymbpmq8hqj1qwc0m99rzx") (f (quote (("std") ("fallback") ("default" "std" "fallback"))))))

(define-public crate-utcnow-0.1.0 (c (n "utcnow") (v "0.1.0") (d (list (d (n "errno") (r "^0.2.8") (t "cfg(any(target_os = \"android\", target_os = \"darwin\", target_os = \"emscripten\", target_os = \"fuchsia\", target_os = \"illumos\", target_os = \"netbsd\", target_os = \"solaris\"))") (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 0)) (d (n "libc") (r "^0.2.126") (t "cfg(any(target_os = \"android\", target_os = \"darwin\", target_os = \"emscripten\", target_os = \"fuchsia\", target_os = \"illumos\", target_os = \"netbsd\", target_os = \"solaris\"))") (k 0)) (d (n "rustix") (r "^0.35.7") (f (quote ("time"))) (d #t) (t "cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"linux\", target_os = \"macos\", target_os = \"openbsd\", target_os = \"redox\"))") (k 0)) (d (n "wasi") (r "^0.11.0") (t "cfg(target_os = \"wasi\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.81") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.31") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 2)) (d (n "winapi") (r "^0.3.9") (f (quote ("sysinfoapi"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0jafx1cbxkyw5zddkn5da9ka16bw6glr05k8hzg3qa8bpxl8fz1y") (f (quote (("std") ("fallback") ("default" "std" "fallback")))) (y #t)))

(define-public crate-utcnow-0.1.1 (c (n "utcnow") (v "0.1.1") (d (list (d (n "errno") (r "^0.2.8") (t "cfg(any(target_os = \"android\", target_os = \"darwin\", target_os = \"emscripten\", target_os = \"fuchsia\", target_os = \"illumos\", target_os = \"netbsd\", target_os = \"solaris\"))") (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 0)) (d (n "libc") (r "^0.2.126") (t "cfg(any(target_os = \"android\", target_os = \"darwin\", target_os = \"emscripten\", target_os = \"fuchsia\", target_os = \"illumos\", target_os = \"netbsd\", target_os = \"solaris\"))") (k 0)) (d (n "rustix") (r "^0.35.7") (f (quote ("time"))) (d #t) (t "cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"linux\", target_os = \"macos\", target_os = \"openbsd\", target_os = \"redox\"))") (k 0)) (d (n "wasi") (r "^0.11.0") (t "cfg(target_os = \"wasi\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.81") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.31") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 2)) (d (n "winapi") (r "^0.3.9") (f (quote ("sysinfoapi"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1pqh0lapl86nz6hcvmyicw53v0lf1ydvwnx0bhka758aw6nvq9mh") (f (quote (("std") ("fallback") ("default" "std" "fallback")))) (y #t)))

(define-public crate-utcnow-0.1.2 (c (n "utcnow") (v "0.1.2") (d (list (d (n "errno") (r "^0.2.8") (t "cfg(any(target_os = \"android\", target_os = \"darwin\", target_os = \"emscripten\", target_os = \"fuchsia\", target_os = \"illumos\", target_os = \"netbsd\", target_os = \"solaris\"))") (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 0)) (d (n "libc") (r "^0.2.126") (t "cfg(any(target_os = \"android\", target_os = \"darwin\", target_os = \"emscripten\", target_os = \"fuchsia\", target_os = \"illumos\", target_os = \"netbsd\", target_os = \"solaris\"))") (k 0)) (d (n "rustix") (r "^0.35.7") (f (quote ("time"))) (d #t) (t "cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"linux\", target_os = \"macos\", target_os = \"openbsd\", target_os = \"redox\"))") (k 0)) (d (n "wasi") (r "^0.11.0") (t "cfg(target_os = \"wasi\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.81") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.31") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 2)) (d (n "winapi") (r "^0.3.9") (f (quote ("sysinfoapi"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0507p4magy9lwdyd131y9alc7h0b77ixxn437nfsc94b73bgf7ac") (f (quote (("std") ("fallback") ("default" "std" "fallback")))) (y #t)))

(define-public crate-utcnow-0.1.3 (c (n "utcnow") (v "0.1.3") (d (list (d (n "errno") (r "^0.2.8") (t "cfg(any(target_os = \"android\", target_os = \"darwin\", target_os = \"emscripten\", target_os = \"fuchsia\", target_os = \"illumos\", target_os = \"netbsd\", target_os = \"solaris\"))") (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 0)) (d (n "libc") (r "^0.2.126") (t "cfg(any(target_os = \"android\", target_os = \"darwin\", target_os = \"emscripten\", target_os = \"fuchsia\", target_os = \"illumos\", target_os = \"netbsd\", target_os = \"solaris\"))") (k 0)) (d (n "rustix") (r "^0.35.7") (f (quote ("time"))) (d #t) (t "cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"linux\", target_os = \"macos\", target_os = \"openbsd\", target_os = \"redox\"))") (k 0)) (d (n "wasi") (r "^0.11.0") (t "cfg(target_os = \"wasi\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.81") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.31") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 2)) (d (n "winapi") (r "^0.3.9") (f (quote ("sysinfoapi"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1xi6fq462p5ynbdfdbb2cnvh10k5azzbxcgsshqvf1a5cfdndh8s") (f (quote (("std") ("fallback") ("default" "std" "fallback"))))))

(define-public crate-utcnow-0.1.4 (c (n "utcnow") (v "0.1.4") (d (list (d (n "const_fn") (r "^0.4.9") (d #t) (k 0)) (d (n "errno") (r "^0.2.8") (t "cfg(any(target_os = \"android\", target_os = \"darwin\", target_os = \"emscripten\", target_os = \"fuchsia\", target_os = \"illumos\", target_os = \"netbsd\", target_os = \"solaris\"))") (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 0)) (d (n "libc") (r "^0.2.126") (t "cfg(any(target_os = \"android\", target_os = \"darwin\", target_os = \"emscripten\", target_os = \"fuchsia\", target_os = \"illumos\", target_os = \"netbsd\", target_os = \"solaris\"))") (k 0)) (d (n "rustix") (r "^0.35.7") (f (quote ("time"))) (d #t) (t "cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"linux\", target_os = \"macos\", target_os = \"openbsd\", target_os = \"redox\"))") (k 0)) (d (n "wasi") (r "^0.11.0") (t "cfg(target_os = \"wasi\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.81") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.31") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 2)) (d (n "winapi") (r "^0.3.9") (f (quote ("sysinfoapi"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0i6scyr1b1q8mkq3fws9kp0n8zl4x0m6n3asablpnwc8xsdvl098") (f (quote (("std") ("fallback") ("default" "std" "fallback"))))))

(define-public crate-utcnow-0.2.0 (c (n "utcnow") (v "0.2.0") (d (list (d (n "arbitrary") (r "^1") (o #t) (k 0)) (d (n "const_fn") (r "^0.4.9") (d #t) (k 0)) (d (n "errno") (r "^0.2.8") (t "cfg(any(target_os = \"android\", target_os = \"darwin\", target_os = \"emscripten\", target_os = \"fuchsia\", target_os = \"illumos\", target_os = \"netbsd\", target_os = \"solaris\"))") (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 0)) (d (n "libc") (r "^0.2.126") (t "cfg(any(target_os = \"android\", target_os = \"darwin\", target_os = \"emscripten\", target_os = \"fuchsia\", target_os = \"illumos\", target_os = \"netbsd\", target_os = \"solaris\"))") (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "quickcheck") (r "^1") (o #t) (k 0)) (d (n "quickcheck_macros") (r "^1") (k 2)) (d (n "rand") (r "^0.8.3") (k 2)) (d (n "rustix") (r "^0.35.7") (f (quote ("time"))) (d #t) (t "cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"linux\", target_os = \"macos\", target_os = \"openbsd\", target_os = \"redox\"))") (k 0)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.47") (f (quote ("alloc"))) (k 2)) (d (n "wasi") (r "^0.11.0") (t "cfg(target_os = \"wasi\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.81") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.31") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 2)) (d (n "winapi") (r "^0.3.9") (f (quote ("sysinfoapi"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0lrhc9ywl8xcd98g9nyyp87fg61b9wbfbf0fsiranpq55x23b67y") (f (quote (("std") ("fallback") ("default" "std" "fallback"))))))

(define-public crate-utcnow-0.2.1 (c (n "utcnow") (v "0.2.1") (d (list (d (n "arbitrary") (r "^1") (o #t) (k 0)) (d (n "castaway") (r "^0.2") (o #t) (k 0)) (d (n "const_fn") (r "^0.4.9") (d #t) (k 0)) (d (n "errno") (r "^0.2.8") (t "cfg(any(target_os = \"android\", target_os = \"darwin\", target_os = \"emscripten\", target_os = \"fuchsia\", target_os = \"illumos\", target_os = \"netbsd\", target_os = \"solaris\"))") (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 0)) (d (n "libc") (r "^0.2.126") (t "cfg(any(target_os = \"android\", target_os = \"darwin\", target_os = \"emscripten\", target_os = \"fuchsia\", target_os = \"illumos\", target_os = \"netbsd\", target_os = \"solaris\"))") (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "quickcheck") (r "^1") (o #t) (k 0)) (d (n "quickcheck_macros") (r "^1") (k 2)) (d (n "rand") (r "^0.8.3") (k 2)) (d (n "rkyv") (r "^0.7.27") (o #t) (d #t) (k 0)) (d (n "rustix") (r "^0.35.7") (f (quote ("time"))) (d #t) (t "cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"linux\", target_os = \"macos\", target_os = \"openbsd\", target_os = \"redox\"))") (k 0)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.47") (f (quote ("alloc"))) (k 2)) (d (n "wasi") (r "^0.11.0") (t "cfg(target_os = \"wasi\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.81") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.31") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 2)) (d (n "winapi") (r "^0.3.9") (f (quote ("sysinfoapi"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1df88ilfnapjrvrayxsyqnwfpdihj3law5bxkvdm177092w9vd40") (f (quote (("std") ("fallback") ("default" "std" "fallback"))))))

(define-public crate-utcnow-0.2.2 (c (n "utcnow") (v "0.2.2") (d (list (d (n "arbitrary") (r "^1") (o #t) (k 0)) (d (n "autocfg") (r "^1") (d #t) (k 1)) (d (n "castaway") (r "^0.2") (o #t) (k 0)) (d (n "const_fn") (r "^0.4.9") (d #t) (k 0)) (d (n "errno") (r "^0.2.8") (t "cfg(any(target_os = \"android\", target_os = \"darwin\", target_os = \"emscripten\", target_os = \"fuchsia\", target_os = \"haiku\", target_os = \"illumos\", target_os = \"netbsd\", target_os = \"solaris\"))") (k 0)) (d (n "js-sys") (r "^0.3.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 0)) (d (n "libc") (r "^0.2.126") (t "cfg(any(target_os = \"android\", target_os = \"darwin\", target_os = \"emscripten\", target_os = \"fuchsia\", target_os = \"haiku\", target_os = \"illumos\", target_os = \"netbsd\", target_os = \"solaris\"))") (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "quickcheck") (r "^1") (o #t) (k 0)) (d (n "quickcheck_macros") (r "^1") (k 2)) (d (n "rand") (r "^0.8.3") (k 2)) (d (n "rkyv") (r "^0.7.27") (o #t) (d #t) (k 0)) (d (n "rustix") (r "^0.36.0") (f (quote ("time"))) (d #t) (t "cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"linux\", target_os = \"macos\", target_os = \"openbsd\", target_os = \"redox\"))") (k 0)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.47") (f (quote ("alloc"))) (k 2)) (d (n "wasi") (r "^0.11.0") (t "cfg(target_os = \"wasi\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.13") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 2)) (d (n "winapi") (r "^0.3.9") (f (quote ("sysinfoapi"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "030bir1z5glk02i0bj8wnpq3cw0xnw04kpl0dk4nzmgic884vbkp") (f (quote (("std") ("fallback") ("default" "std" "fallback"))))))

(define-public crate-utcnow-0.2.3 (c (n "utcnow") (v "0.2.3") (d (list (d (n "arbitrary") (r "^1") (o #t) (k 0)) (d (n "autocfg") (r "^1") (d #t) (k 1)) (d (n "castaway") (r "^0.2") (o #t) (k 0)) (d (n "const_fn") (r "^0.4.9") (d #t) (k 0)) (d (n "errno") (r "^0.3.0") (t "cfg(any(target_os = \"android\", target_os = \"darwin\", target_os = \"emscripten\", target_os = \"fuchsia\", target_os = \"haiku\", target_os = \"illumos\", target_os = \"netbsd\", target_os = \"solaris\"))") (k 0)) (d (n "js-sys") (r "^0.3.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 0)) (d (n "libc") (r "^0.2.126") (t "cfg(any(target_os = \"android\", target_os = \"darwin\", target_os = \"emscripten\", target_os = \"fuchsia\", target_os = \"haiku\", target_os = \"illumos\", target_os = \"netbsd\", target_os = \"solaris\"))") (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "quickcheck") (r "^1") (o #t) (k 0)) (d (n "quickcheck_macros") (r "^1") (k 2)) (d (n "rand") (r "^0.8.3") (k 2)) (d (n "rkyv") (r "^0.7.27") (o #t) (d #t) (k 0)) (d (n "rustix") (r "^0.37.0") (f (quote ("time"))) (d #t) (t "cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"linux\", target_os = \"macos\", target_os = \"openbsd\", target_os = \"redox\"))") (k 0)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.47") (f (quote ("alloc"))) (k 2)) (d (n "wasi") (r "^0.11.0") (t "cfg(target_os = \"wasi\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.13") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 2)) (d (n "winapi") (r "^0.3.9") (f (quote ("sysinfoapi"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0grwvf88liqxd47jjvj2qn0zncklib2jhbivnkryc9cldiw4dda1") (f (quote (("std") ("fallback") ("default" "std" "fallback"))))))

(define-public crate-utcnow-0.2.4 (c (n "utcnow") (v "0.2.4") (d (list (d (n "arbitrary") (r "^1") (o #t) (k 0)) (d (n "autocfg") (r "^1") (d #t) (k 1)) (d (n "castaway") (r "^0.2") (o #t) (k 0)) (d (n "const_fn") (r "^0.4.9") (d #t) (k 0)) (d (n "errno") (r "^0.3.0") (t "cfg(any(target_os = \"android\", target_os = \"darwin\", target_os = \"emscripten\", target_os = \"fuchsia\", target_os = \"haiku\", target_os = \"illumos\", target_os = \"netbsd\", target_os = \"solaris\"))") (k 0)) (d (n "js-sys") (r "^0.3.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 0)) (d (n "libc") (r "^0.2.126") (t "cfg(any(target_os = \"android\", target_os = \"darwin\", target_os = \"emscripten\", target_os = \"fuchsia\", target_os = \"haiku\", target_os = \"illumos\", target_os = \"netbsd\", target_os = \"solaris\"))") (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "quickcheck") (r "^1") (o #t) (k 0)) (d (n "quickcheck_macros") (r "^1") (k 2)) (d (n "rand") (r "^0.8.3") (k 2)) (d (n "rkyv") (r "^0.7.27") (o #t) (d #t) (k 0)) (d (n "rustix") (r ">=0.37, <0.39") (f (quote ("time"))) (d #t) (t "cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"linux\", target_os = \"macos\", target_os = \"openbsd\", target_os = \"redox\"))") (k 0)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.47") (f (quote ("alloc"))) (k 2)) (d (n "wasi") (r "^0.11.0") (t "cfg(target_os = \"wasi\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.13") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 2)) (d (n "winapi") (r "^0.3.9") (f (quote ("sysinfoapi"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "07wxa7c789wss6crnyg2lbakc8avdkwiaysa11rrpg9visllj3di") (f (quote (("std") ("fallback") ("default" "std" "fallback"))))))

(define-public crate-utcnow-0.2.5 (c (n "utcnow") (v "0.2.5") (d (list (d (n "arbitrary") (r "^1") (o #t) (k 0)) (d (n "castaway") (r "^0.2") (o #t) (k 0)) (d (n "const_fn") (r "^0.4.9") (d #t) (k 0)) (d (n "errno") (r "^0.3.0") (t "cfg(any(target_os = \"android\", target_os = \"darwin\", target_os = \"emscripten\", target_os = \"fuchsia\", target_os = \"haiku\", target_os = \"illumos\", target_os = \"netbsd\", target_os = \"solaris\"))") (k 0)) (d (n "js-sys") (r "^0.3.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 0)) (d (n "libc") (r "^0.2.126") (t "cfg(any(target_os = \"android\", target_os = \"darwin\", target_os = \"emscripten\", target_os = \"fuchsia\", target_os = \"haiku\", target_os = \"illumos\", target_os = \"netbsd\", target_os = \"solaris\"))") (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "quickcheck") (r "^1") (o #t) (k 0)) (d (n "quickcheck_macros") (r "^1") (k 2)) (d (n "rand") (r "^0.8.3") (k 2)) (d (n "rkyv") (r "^0.7.27") (o #t) (d #t) (k 0)) (d (n "rustix") (r ">=0.37, <0.39") (f (quote ("time"))) (d #t) (t "cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\", target_os = \"linux\", target_os = \"macos\", target_os = \"openbsd\", target_os = \"redox\"))") (k 0)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.47") (f (quote ("alloc"))) (k 2)) (d (n "wasi") (r "^0.11.0") (t "cfg(target_os = \"wasi\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.13") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 2)) (d (n "winapi") (r "^0.3.9") (f (quote ("sysinfoapi"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1dvj30vi1b2g6rqsvd2ifmxm4g0qi7phwkrsz249fmz81qvwwfj9") (f (quote (("std") ("fallback") ("default" "std" "fallback"))))))

