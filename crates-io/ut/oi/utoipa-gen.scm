(define-module (crates-io ut oi utoipa-gen) #:use-module (crates-io))

(define-public crate-utoipa-gen-0.1.0-beta.0 (c (n "utoipa-gen") (v "0.1.0-beta.0") (d (list (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "proc-macro-error") (r "^1.0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.32") (d #t) (k 0)) (d (n "quote") (r "^1.0.10") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (o #t) (d #t) (k 0)) (d (n "syn") (r "^1.0.81") (f (quote ("full"))) (d #t) (k 0)))) (h "0mcdyq50ir69dffwfjfz8k2p8z59cg6d9q21fzh7hwydc0dkrn0a") (f (quote (("debug") ("actix_extras" "regex" "lazy_static"))))))

(define-public crate-utoipa-gen-0.1.0-beta.1 (c (n "utoipa-gen") (v "0.1.0-beta.1") (d (list (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "proc-macro-error") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)))) (h "1cl2jkn3pdrci61zc6hyaj6mvc4w5chdnh8gg3xkqjiny60311p2") (f (quote (("json") ("debug" "syn/extra-traits") ("actix_extras" "regex" "lazy_static"))))))

(define-public crate-utoipa-gen-0.1.0-beta.3 (c (n "utoipa-gen") (v "0.1.0-beta.3") (d (list (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "proc-macro-error") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)))) (h "0gwagimm1lqyc2v9wz1pg9f38nfc602zdggvd9bzhd5mmn37mzq6") (f (quote (("json") ("debug" "syn/extra-traits") ("actix_extras" "regex" "lazy_static"))))))

(define-public crate-utoipa-gen-0.1.0-beta.4 (c (n "utoipa-gen") (v "0.1.0-beta.4") (d (list (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "proc-macro-error") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)))) (h "05igwc600nw8bx4npbwbi80mpav5npb5lh5sf70bgdi6467xam03") (f (quote (("json") ("debug" "syn/extra-traits") ("actix_extras" "regex" "lazy_static"))))))

(define-public crate-utoipa-gen-0.1.0-beta.5 (c (n "utoipa-gen") (v "0.1.0-beta.5") (d (list (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "proc-macro-error") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)))) (h "0ql27impggfqd40jki2zwj33nnziks9khr1d88pvfib9sid47klq") (f (quote (("json") ("debug" "syn/extra-traits") ("actix_extras" "regex" "lazy_static"))))))

(define-public crate-utoipa-gen-0.1.0-beta6 (c (n "utoipa-gen") (v "0.1.0-beta6") (d (list (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "proc-macro-error") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)))) (h "0gbx33b8g8b9b229dvyaizkwyvssx3yxyn4wnbb27c0hr73fzmnp") (f (quote (("json") ("debug" "syn/extra-traits") ("actix_extras" "regex" "lazy_static"))))))

(define-public crate-utoipa-gen-0.1.0-rc1 (c (n "utoipa-gen") (v "0.1.0-rc1") (d (list (d (n "actix-web") (r "^4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "proc-macro-error") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)))) (h "0nchidc0qjlrcph6fisvkmaar2vwrx6lr2vmqnlyrcyj0zzhixi0") (f (quote (("json") ("debug" "syn/extra-traits") ("actix_extras" "regex" "lazy_static"))))))

(define-public crate-utoipa-gen-0.1.0 (c (n "utoipa-gen") (v "0.1.0") (d (list (d (n "actix-web") (r "^4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "proc-macro-error") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)))) (h "0b9cy3sg06fqy0qi9vf4jj1mz9x1gvj5ybqkivffw5k2cychgpsr") (f (quote (("json") ("debug" "syn/extra-traits") ("actix_extras" "regex" "lazy_static"))))))

(define-public crate-utoipa-gen-0.1.1 (c (n "utoipa-gen") (v "0.1.1") (d (list (d (n "actix-web") (r "^4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "proc-macro-error") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)))) (h "1cfhkq359inxcmwa5rys2w1svxs5wyf1850p4bdmh12y5kand0nm") (f (quote (("json") ("debug" "syn/extra-traits") ("actix_extras" "regex" "lazy_static"))))))

(define-public crate-utoipa-gen-0.1.2 (c (n "utoipa-gen") (v "0.1.2") (d (list (d (n "actix-web") (r "^4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "proc-macro-error") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)))) (h "1yryildp0kwsifghxkn0v233pa08bn17qd97981xj4ldij2zn7jz") (f (quote (("json") ("decimal") ("debug" "syn/extra-traits") ("chrono_types_with_format") ("chrono_types") ("actix_extras" "regex" "lazy_static"))))))

(define-public crate-utoipa-gen-0.2.0 (c (n "utoipa-gen") (v "0.2.0") (d (list (d (n "actix-web") (r "^4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "proc-macro-error") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)))) (h "09aw5ipm0d9r9gx0211nsybx098d316km20yg0b46nggn8a3fii2") (f (quote (("rocket_extras" "regex" "lazy_static") ("json") ("decimal") ("debug" "syn/extra-traits") ("chrono_types_with_format") ("chrono_types") ("actix_extras" "regex" "lazy_static"))))))

(define-public crate-utoipa-gen-1.0.0 (c (n "utoipa-gen") (v "1.0.0") (d (list (d (n "actix-web") (r "^4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "proc-macro-error") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "19spc5zs3kmc3q2w4j00pc4f59q8n5zabq9pdk5zzb3wmzs3875r") (f (quote (("rocket_extras" "regex" "lazy_static") ("json") ("decimal") ("debug" "syn/extra-traits") ("chrono_with_format") ("chrono") ("actix_extras" "regex" "lazy_static")))) (s 2) (e (quote (("uuid" "dep:uuid"))))))

(define-public crate-utoipa-gen-1.0.1 (c (n "utoipa-gen") (v "1.0.1") (d (list (d (n "actix-web") (r "^4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "proc-macro-error") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "0p5qg2igsjq63lx9cw21fawg63vmc3ks6z1cwxk771560pyfy7yn") (f (quote (("rocket_extras" "regex" "lazy_static") ("json") ("decimal") ("debug" "syn/extra-traits") ("chrono_with_format") ("chrono") ("actix_extras" "regex" "lazy_static")))) (s 2) (e (quote (("uuid" "dep:uuid"))))))

(define-public crate-utoipa-gen-1.0.2 (c (n "utoipa-gen") (v "1.0.2") (d (list (d (n "actix-web") (r "^4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "proc-macro-error") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "0q060r64vg37hd0gb5ksdnzzppjzwr6rv4q902gkwbcj01xk8cim") (f (quote (("rocket_extras" "regex" "lazy_static") ("json") ("decimal") ("debug" "syn/extra-traits") ("chrono_with_format") ("chrono") ("actix_extras" "regex" "lazy_static")))) (s 2) (e (quote (("uuid" "dep:uuid"))))))

(define-public crate-utoipa-gen-1.1.0 (c (n "utoipa-gen") (v "1.1.0") (d (list (d (n "actix-web") (r "^4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "proc-macro-error") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "1qg4hwlln6rmnf5r3fm7z0j168vkjd5662csxh05kzylv60jjn9n") (f (quote (("rocket_extras" "regex" "lazy_static") ("json") ("decimal") ("debug" "syn/extra-traits") ("chrono_with_format") ("chrono") ("actix_extras" "regex" "lazy_static")))) (s 2) (e (quote (("uuid" "dep:uuid"))))))

(define-public crate-utoipa-gen-2.0.0 (c (n "utoipa-gen") (v "2.0.0") (d (list (d (n "actix-web") (r "^4") (f (quote ("macros"))) (k 2)) (d (n "assert-json-diff") (r "^2") (d #t) (k 2)) (d (n "axum") (r "^0.5") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "proc-macro-error") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "rocket") (r "^0.5.0-rc.1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.9.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "time") (r "^0.3.11") (f (quote ("serde-human-readable"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "0bikg9hwvmr7zapqv6zwgh3knvsxiap0707g46q3wy3lk0nzrw0c") (f (quote (("yaml") ("time") ("smallvec") ("rocket_extras" "regex" "lazy_static" "syn/extra-traits") ("json") ("decimal") ("debug") ("chrono") ("axum_extras" "syn/extra-traits") ("actix_extras" "regex" "lazy_static" "syn/extra-traits")))) (s 2) (e (quote (("uuid" "dep:uuid"))))))

(define-public crate-utoipa-gen-2.0.1 (c (n "utoipa-gen") (v "2.0.1") (d (list (d (n "actix-web") (r "^4") (f (quote ("macros"))) (k 2)) (d (n "assert-json-diff") (r "^2") (d #t) (k 2)) (d (n "axum") (r "^0.5") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "proc-macro-error") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "rocket") (r "^0.5.0-rc.1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.9.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "time") (r "^0.3.11") (f (quote ("serde-human-readable"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "1xgcdwpi115mahhx66564vn433k3waikxjbsd1qj96ix11hjdmn5") (f (quote (("yaml") ("time") ("smallvec") ("rocket_extras" "regex" "lazy_static" "syn/extra-traits") ("json") ("decimal") ("debug") ("chrono") ("axum_extras" "syn/extra-traits") ("actix_extras" "regex" "lazy_static" "syn/extra-traits")))) (s 2) (e (quote (("uuid" "dep:uuid"))))))

(define-public crate-utoipa-gen-2.1.0 (c (n "utoipa-gen") (v "2.1.0") (d (list (d (n "actix-web") (r "^4") (f (quote ("macros"))) (k 2)) (d (n "assert-json-diff") (r "^2") (d #t) (k 2)) (d (n "axum") (r "^0.5") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "proc-macro-error") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "rocket") (r "^0.5.0-rc.1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.9.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "time") (r "^0.3.11") (f (quote ("serde-human-readable"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "1yi81s5mdkaxss94vy8an61p9kzy23scs230fawhqm50xkb01jna") (f (quote (("yaml") ("time") ("smallvec") ("rocket_extras" "regex" "lazy_static" "syn/extra-traits") ("json") ("decimal") ("debug") ("chrono") ("axum_extras" "syn/extra-traits") ("actix_extras" "regex" "lazy_static" "syn/extra-traits")))) (s 2) (e (quote (("uuid" "dep:uuid"))))))

(define-public crate-utoipa-gen-2.2.0 (c (n "utoipa-gen") (v "2.2.0") (d (list (d (n "actix-web") (r "^4") (f (quote ("macros"))) (k 2)) (d (n "assert-json-diff") (r "^2") (d #t) (k 2)) (d (n "axum") (r "^0.5") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "proc-macro-error") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "rocket") (r "^0.5.0-rc.1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.9.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "time") (r "^0.3.11") (f (quote ("serde-human-readable"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "1wa39cqr46h0qmfl793mm6vn552n1kryvhh66lp6mqdk21wm9y7c") (f (quote (("yaml") ("time") ("smallvec") ("rocket_extras" "regex" "lazy_static" "syn/extra-traits") ("repr") ("json") ("decimal") ("debug") ("chrono") ("axum_extras" "syn/extra-traits") ("actix_extras" "regex" "lazy_static" "syn/extra-traits")))) (s 2) (e (quote (("uuid" "dep:uuid"))))))

(define-public crate-utoipa-gen-2.3.0 (c (n "utoipa-gen") (v "2.3.0") (d (list (d (n "actix-web") (r "^4") (f (quote ("macros"))) (k 2)) (d (n "assert-json-diff") (r "^2") (d #t) (k 2)) (d (n "axum") (r "^0.5") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "proc-macro-error") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "rocket") (r "^0.5.0-rc.1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.9.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "time") (r "^0.3.11") (f (quote ("serde-human-readable"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "092j7x9zx6r4psycxcc1ys0prgphjzajj52g5f3bwvhhbi0siwbv") (f (quote (("yaml") ("time") ("smallvec") ("rocket_extras" "regex" "lazy_static" "syn/extra-traits") ("repr") ("json") ("decimal") ("debug") ("chrono") ("axum_extras" "syn/extra-traits") ("actix_extras" "regex" "lazy_static" "syn/extra-traits")))) (s 2) (e (quote (("uuid" "dep:uuid"))))))

(define-public crate-utoipa-gen-2.4.0 (c (n "utoipa-gen") (v "2.4.0") (d (list (d (n "actix-web") (r "^4") (f (quote ("macros"))) (k 2)) (d (n "assert-json-diff") (r "^2") (d #t) (k 2)) (d (n "axum") (r "^0.5") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "proc-macro-error") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "rocket") (r "^0.5.0-rc.1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.9.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "time") (r "^0.3.11") (f (quote ("serde-human-readable"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "0wa5ii95ccyhcdpbpnhga0dgzvdpmsngm3y920bqpffrm8qdfadl") (f (quote (("yaml") ("time") ("smallvec") ("rocket_extras" "regex" "lazy_static" "syn/extra-traits") ("repr") ("json") ("decimal") ("debug" "syn/extra-traits") ("chrono") ("axum_extras" "syn/extra-traits") ("actix_extras" "regex" "lazy_static" "syn/extra-traits")))) (s 2) (e (quote (("uuid" "dep:uuid"))))))

(define-public crate-utoipa-gen-2.4.1 (c (n "utoipa-gen") (v "2.4.1") (d (list (d (n "actix-web") (r "^4") (f (quote ("macros"))) (k 2)) (d (n "assert-json-diff") (r "^2") (d #t) (k 2)) (d (n "axum") (r "^0.5") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "proc-macro-error") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "rocket") (r "^0.5.0-rc.1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.9.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "time") (r "^0.3.11") (f (quote ("serde-human-readable"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "1krh7yqinci20lz5mb638k2lhp70jkx32mkdckjg4f0nvjkvmy5b") (f (quote (("yaml") ("time") ("smallvec") ("rocket_extras" "regex" "lazy_static" "syn/extra-traits") ("repr") ("json") ("decimal") ("debug" "syn/extra-traits") ("chrono") ("axum_extras" "syn/extra-traits") ("actix_extras" "regex" "lazy_static" "syn/extra-traits")))) (s 2) (e (quote (("uuid" "dep:uuid"))))))

(define-public crate-utoipa-gen-2.4.2 (c (n "utoipa-gen") (v "2.4.2") (d (list (d (n "actix-web") (r "^4") (f (quote ("macros"))) (k 2)) (d (n "assert-json-diff") (r "^2") (d #t) (k 2)) (d (n "axum") (r "^0.5") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "proc-macro-error") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "rocket") (r "^0.5.0-rc.1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.9.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "time") (r "^0.3.11") (f (quote ("serde-human-readable"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "14d785mkixzmximpf8dpz89kfxqd6047zjqs3jmgpdk10kdqq3i5") (f (quote (("yaml") ("time") ("smallvec") ("rocket_extras" "regex" "lazy_static" "syn/extra-traits") ("repr") ("json") ("decimal") ("debug" "syn/extra-traits") ("chrono") ("axum_extras" "syn/extra-traits") ("actix_extras" "regex" "lazy_static" "syn/extra-traits")))) (s 2) (e (quote (("uuid" "dep:uuid"))))))

(define-public crate-utoipa-gen-3.0.0 (c (n "utoipa-gen") (v "3.0.0") (d (list (d (n "actix-web") (r "^4") (f (quote ("macros"))) (k 2)) (d (n "assert-json-diff") (r "^2") (d #t) (k 2)) (d (n "axum") (r "^0.6") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "proc-macro-error") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "rocket") (r "^0.5.0-rc.2") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.10.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde-human-readable"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "1b9j5l0vpgxihwnwzc4rd22ky66rpvaxy4401y9czrf5v3kdlbgh") (f (quote (("yaml") ("time") ("smallvec") ("rocket_extras" "regex" "lazy_static" "syn/extra-traits") ("repr") ("decimal") ("debug" "syn/extra-traits") ("chrono") ("axum_extras" "syn/extra-traits") ("actix_extras" "regex" "lazy_static" "syn/extra-traits")))) (s 2) (e (quote (("uuid" "dep:uuid"))))))

(define-public crate-utoipa-gen-3.0.1 (c (n "utoipa-gen") (v "3.0.1") (d (list (d (n "actix-web") (r "^4") (f (quote ("macros"))) (k 2)) (d (n "assert-json-diff") (r "^2") (d #t) (k 2)) (d (n "axum") (r "^0.6") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "proc-macro-error") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "rocket") (r "^0.5.0-rc.2") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.10.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde-human-readable"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "0qh0mrhcm8fwqjsq04qhqg8j06mlxahnfzj5kvgj1jpgqvx9h0kj") (f (quote (("yaml") ("time") ("smallvec") ("rocket_extras" "regex" "lazy_static" "syn/extra-traits") ("repr") ("decimal") ("debug" "syn/extra-traits") ("chrono") ("axum_extras" "syn/extra-traits") ("actix_extras" "regex" "lazy_static" "syn/extra-traits")))) (s 2) (e (quote (("uuid" "dep:uuid"))))))

(define-public crate-utoipa-gen-3.0.2 (c (n "utoipa-gen") (v "3.0.2") (d (list (d (n "actix-web") (r "^4") (f (quote ("macros"))) (k 2)) (d (n "assert-json-diff") (r "^2") (d #t) (k 2)) (d (n "axum") (r "^0.6") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "proc-macro-error") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "rocket") (r "^0.5.0-rc.2") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.10.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde-human-readable"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "0z6irvzn1bkmv2npik5n55xaaj20brvr2l34f0sbk9202747hvjc") (f (quote (("yaml") ("time") ("smallvec") ("rocket_extras" "regex" "lazy_static" "syn/extra-traits") ("repr") ("decimal") ("debug" "syn/extra-traits") ("chrono") ("axum_extras" "syn/extra-traits") ("actix_extras" "regex" "lazy_static" "syn/extra-traits")))) (s 2) (e (quote (("uuid" "dep:uuid"))))))

(define-public crate-utoipa-gen-3.0.3 (c (n "utoipa-gen") (v "3.0.3") (d (list (d (n "actix-web") (r "^4") (f (quote ("macros"))) (k 2)) (d (n "assert-json-diff") (r "^2") (d #t) (k 2)) (d (n "axum") (r "^0.6") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "proc-macro-error") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "rocket") (r "^0.5.0-rc.2") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.10.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde-human-readable"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "1v6hy400dy0qzx94n81hv99ml3ixnc0ysdsw7xxp1946g4136bkg") (f (quote (("yaml") ("time") ("smallvec") ("rocket_extras" "regex" "lazy_static" "syn/extra-traits") ("repr") ("decimal") ("debug" "syn/extra-traits") ("chrono") ("axum_extras" "syn/extra-traits") ("actix_extras" "regex" "lazy_static" "syn/extra-traits")))) (s 2) (e (quote (("uuid" "dep:uuid"))))))

(define-public crate-utoipa-gen-3.1.0 (c (n "utoipa-gen") (v "3.1.0") (d (list (d (n "actix-web") (r "^4") (f (quote ("macros"))) (k 2)) (d (n "assert-json-diff") (r "^2") (d #t) (k 2)) (d (n "axum") (r "^0.6") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "proc-macro-error") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "rocket") (r "^0.5.0-rc.2") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^2.2.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.10.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde-human-readable"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "16dangi74y53gkjdz7z2aa02k494g2pm8s4pm8d1s6w5nni51l51") (f (quote (("yaml") ("time") ("smallvec") ("rocket_extras" "regex" "lazy_static" "syn/extra-traits") ("repr") ("decimal") ("debug" "syn/extra-traits") ("chrono") ("axum_extras" "syn/extra-traits") ("actix_extras" "regex" "lazy_static" "syn/extra-traits")))) (s 2) (e (quote (("uuid" "dep:uuid"))))))

(define-public crate-utoipa-gen-3.1.1 (c (n "utoipa-gen") (v "3.1.1") (d (list (d (n "actix-web") (r "^4") (f (quote ("macros"))) (k 2)) (d (n "assert-json-diff") (r "^2") (d #t) (k 2)) (d (n "axum") (r "^0.6") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "proc-macro-error") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "rocket") (r "^0.5.0-rc.2") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^2.3") (d #t) (k 2)) (d (n "smallvec") (r "^1.10") (f (quote ("serde"))) (d #t) (k 2)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde-human-readable"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "1vlmq5ir8qp1s9sr3rjw0i0fldbbwkidb97v95bq9igq4s9xphz6") (f (quote (("yaml") ("time") ("smallvec") ("rocket_extras" "regex" "lazy_static" "syn/extra-traits") ("repr") ("decimal") ("debug" "syn/extra-traits") ("chrono") ("axum_extras" "syn/extra-traits") ("actix_extras" "regex" "lazy_static" "syn/extra-traits")))) (s 2) (e (quote (("uuid" "dep:uuid"))))))

(define-public crate-utoipa-gen-3.1.2 (c (n "utoipa-gen") (v "3.1.2") (d (list (d (n "actix-web") (r "^4") (f (quote ("macros"))) (k 2)) (d (n "assert-json-diff") (r "^2") (d #t) (k 2)) (d (n "axum") (r "^0.6") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "proc-macro-error") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "rocket") (r "^0.5.0-rc.2") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^2.3") (d #t) (k 2)) (d (n "smallvec") (r "^1.10") (f (quote ("serde"))) (d #t) (k 2)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde-human-readable"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "148rlf59xgp7dk41nwx6lf67z8s8128gjm28dz6hfmjzylvd3br0") (f (quote (("yaml") ("time") ("smallvec") ("rocket_extras" "regex" "lazy_static" "syn/extra-traits") ("repr") ("decimal") ("debug" "syn/extra-traits") ("chrono") ("axum_extras" "syn/extra-traits") ("actix_extras" "regex" "lazy_static" "syn/extra-traits")))) (s 2) (e (quote (("uuid" "dep:uuid"))))))

(define-public crate-utoipa-gen-3.2.0 (c (n "utoipa-gen") (v "3.2.0") (d (list (d (n "actix-web") (r "^4") (f (quote ("macros"))) (k 2)) (d (n "assert-json-diff") (r "^2") (d #t) (k 2)) (d (n "axum") (r "^0.6") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "proc-macro-error") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "rocket") (r "^0.5.0-rc.2") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^2.3") (d #t) (k 2)) (d (n "smallvec") (r "^1.10") (f (quote ("serde"))) (d #t) (k 2)) (d (n "syn") (r "^2.0") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde-human-readable"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "0asfhbqms5bwc42jmhdkhq8k8d98lvpcx8z9md1wjzzmx5yivmc1") (f (quote (("yaml") ("time") ("smallvec") ("rocket_extras" "regex" "lazy_static" "syn/extra-traits") ("repr") ("decimal") ("debug" "syn/extra-traits") ("chrono") ("axum_extras" "syn/extra-traits") ("actix_extras" "regex" "lazy_static" "syn/extra-traits")))) (s 2) (e (quote (("uuid" "dep:uuid"))))))

(define-public crate-utoipa-gen-3.2.1 (c (n "utoipa-gen") (v "3.2.1") (d (list (d (n "actix-web") (r "^4") (f (quote ("macros"))) (k 2)) (d (n "assert-json-diff") (r "^2") (d #t) (k 2)) (d (n "axum") (r "^0.6") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "proc-macro-error") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "rocket") (r "^0.5.0-rc.2") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^2.3") (d #t) (k 2)) (d (n "smallvec") (r "^1.10") (f (quote ("serde"))) (d #t) (k 2)) (d (n "syn") (r "^2.0") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde-human-readable"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "0kbrv78z64bns4ramwksb9bbfgqnqkpmb152mi21v0dwba74avyz") (f (quote (("yaml") ("time") ("smallvec") ("rocket_extras" "regex" "lazy_static" "syn/extra-traits") ("repr") ("decimal") ("debug" "syn/extra-traits") ("chrono") ("axum_extras" "syn/extra-traits") ("actix_extras" "regex" "lazy_static" "syn/extra-traits")))) (s 2) (e (quote (("uuid" "dep:uuid"))))))

(define-public crate-utoipa-gen-3.3.0 (c (n "utoipa-gen") (v "3.3.0") (d (list (d (n "actix-web") (r "^4") (f (quote ("macros"))) (k 2)) (d (n "assert-json-diff") (r "^2") (d #t) (k 2)) (d (n "axum") (r "^0.6") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "proc-macro-error") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "rocket") (r "^0.5.0-rc.3") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^2.3") (d #t) (k 2)) (d (n "smallvec") (r "^1.10") (f (quote ("serde"))) (d #t) (k 2)) (d (n "syn") (r "^2.0") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde-human-readable"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "0yqkig5njxc2pmayd50rwc7f1xcnib74qnc56ak4drx7in0sra3y") (f (quote (("yaml") ("time") ("smallvec") ("rocket_extras" "regex" "lazy_static" "syn/extra-traits") ("repr") ("non_strict_integers") ("indexmap") ("decimal") ("debug" "syn/extra-traits") ("chrono") ("axum_extras" "syn/extra-traits") ("actix_extras" "regex" "lazy_static" "syn/extra-traits")))) (s 2) (e (quote (("uuid" "dep:uuid"))))))

(define-public crate-utoipa-gen-3.4.1 (c (n "utoipa-gen") (v "3.4.1") (d (list (d (n "actix-web") (r "^4") (f (quote ("macros"))) (k 2)) (d (n "assert-json-diff") (r "^2") (d #t) (k 2)) (d (n "axum") (r "^0.6") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "proc-macro-error") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "rocket") (r "^0.5.0-rc.3") (f (quote ("json"))) (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^3.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.10") (f (quote ("serde"))) (d #t) (k 2)) (d (n "syn") (r "^2.0") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde-human-readable"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "0386p4pzhhpb8zanp4yh3dkhbvax3ydvfw9qads06vkv925fh8kf") (f (quote (("yaml") ("time") ("smallvec") ("rocket_extras" "regex" "syn/extra-traits") ("repr") ("non_strict_integers") ("indexmap") ("decimal") ("debug" "syn/extra-traits") ("chrono") ("axum_extras" "regex" "syn/extra-traits") ("auto_into_responses") ("actix_extras" "regex" "syn/extra-traits")))) (y #t) (s 2) (e (quote (("uuid" "dep:uuid"))))))

(define-public crate-utoipa-gen-3.4.2 (c (n "utoipa-gen") (v "3.4.2") (d (list (d (n "actix-web") (r "^4") (f (quote ("macros"))) (k 2)) (d (n "assert-json-diff") (r "^2") (d #t) (k 2)) (d (n "axum") (r "^0.6") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "proc-macro-error") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "rocket") (r "^0.5.0-rc.3") (f (quote ("json"))) (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^3.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.10") (f (quote ("serde"))) (d #t) (k 2)) (d (n "syn") (r "^2.0") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde-human-readable"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)))) (h "15jylslqcrai5idxgz8z00z78gkr0qppfzhj9qgz0yk8bz5j2h59") (f (quote (("yaml") ("time") ("smallvec") ("rocket_extras" "regex" "syn/extra-traits") ("repr") ("non_strict_integers") ("indexmap") ("decimal") ("debug" "syn/extra-traits") ("chrono") ("axum_extras" "regex" "syn/extra-traits") ("auto_into_responses") ("actix_extras" "regex" "syn/extra-traits")))) (s 2) (e (quote (("uuid" "dep:uuid"))))))

(define-public crate-utoipa-gen-3.4.3 (c (n "utoipa-gen") (v "3.4.3") (d (list (d (n "actix-web") (r "^4") (f (quote ("macros"))) (k 2)) (d (n "assert-json-diff") (r "^2") (d #t) (k 2)) (d (n "axum") (r "^0.6") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "proc-macro-error") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "rocket") (r "^0.5.0-rc.3") (f (quote ("json"))) (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^3.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.10") (f (quote ("serde"))) (d #t) (k 2)) (d (n "syn") (r "^2.0") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde-human-readable"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)))) (h "0r7cf5swc18ck5b1f42r2l4y5hgnjyck6661rqjgsq4mf2y2grcp") (f (quote (("yaml") ("time") ("smallvec") ("rocket_extras" "regex" "syn/extra-traits") ("repr") ("rc_schema") ("non_strict_integers") ("indexmap") ("decimal") ("debug" "syn/extra-traits") ("chrono") ("axum_extras" "regex" "syn/extra-traits") ("auto_into_responses") ("actix_extras" "regex" "syn/extra-traits")))) (s 2) (e (quote (("uuid" "dep:uuid"))))))

(define-public crate-utoipa-gen-3.4.4 (c (n "utoipa-gen") (v "3.4.4") (d (list (d (n "actix-web") (r "^4") (f (quote ("macros"))) (k 2)) (d (n "assert-json-diff") (r "^2") (d #t) (k 2)) (d (n "axum") (r "^0.6") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "proc-macro-error") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "rocket") (r "^0.5.0-rc.3") (f (quote ("json"))) (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^3.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.10") (f (quote ("serde"))) (d #t) (k 2)) (d (n "syn") (r "^2.0") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde-human-readable"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)))) (h "0c2vbn7rgky6g9mxq6wacsrnhb49mg3939rz53si1q3pr8hmzkmr") (f (quote (("yaml") ("time") ("smallvec") ("rocket_extras" "regex" "syn/extra-traits") ("repr") ("rc_schema") ("non_strict_integers") ("indexmap") ("decimal") ("debug" "syn/extra-traits") ("chrono") ("axum_extras" "regex" "syn/extra-traits") ("auto_into_responses") ("actix_extras" "regex" "syn/extra-traits")))) (s 2) (e (quote (("uuid" "dep:uuid"))))))

(define-public crate-utoipa-gen-3.4.5 (c (n "utoipa-gen") (v "3.4.5") (d (list (d (n "actix-web") (r "^4") (f (quote ("macros"))) (k 2)) (d (n "assert-json-diff") (r "^2") (d #t) (k 2)) (d (n "axum") (r "^0.6") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "proc-macro-error") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "rocket") (r "^0.5.0-rc.3") (f (quote ("json"))) (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^3.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.10") (f (quote ("serde"))) (d #t) (k 2)) (d (n "syn") (r "^2.0") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde-human-readable"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)))) (h "1l437imswq037n6d0gvb9baxcldgmmdcs4w3rjdhs0p5nffagjqg") (f (quote (("yaml") ("time") ("smallvec") ("rocket_extras" "regex" "syn/extra-traits") ("repr") ("rc_schema") ("non_strict_integers") ("indexmap") ("decimal") ("debug" "syn/extra-traits") ("chrono") ("axum_extras" "regex" "syn/extra-traits") ("auto_into_responses") ("actix_extras" "regex" "syn/extra-traits")))) (s 2) (e (quote (("uuid" "dep:uuid"))))))

(define-public crate-utoipa-gen-3.5.0 (c (n "utoipa-gen") (v "3.5.0") (d (list (d (n "actix-web") (r "^4") (f (quote ("macros"))) (k 2)) (d (n "assert-json-diff") (r "^2") (d #t) (k 2)) (d (n "axum") (r "^0.6") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "proc-macro-error") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "rocket") (r "^0.5.0-rc.3") (f (quote ("json"))) (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^3.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.10") (f (quote ("serde"))) (d #t) (k 2)) (d (n "syn") (r "^2.0") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde-human-readable"))) (d #t) (k 2)) (d (n "ulid") (r "^1") (o #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)))) (h "034jdnbngc59pa953iabs72vgw8afy0g83i8ngwksvy9dz6nvn85") (f (quote (("yaml") ("time") ("smallvec") ("rocket_extras" "regex" "syn/extra-traits") ("repr") ("rc_schema") ("non_strict_integers") ("indexmap") ("decimal") ("debug" "syn/extra-traits") ("chrono") ("axum_extras" "regex" "syn/extra-traits") ("auto_into_responses") ("actix_extras" "regex" "syn/extra-traits")))) (s 2) (e (quote (("uuid" "dep:uuid") ("ulid" "dep:ulid"))))))

(define-public crate-utoipa-gen-4.0.0 (c (n "utoipa-gen") (v "4.0.0") (d (list (d (n "actix-web") (r "^4") (f (quote ("macros"))) (k 2)) (d (n "assert-json-diff") (r "^2") (d #t) (k 2)) (d (n "axum") (r "^0.6") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "proc-macro-error") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "rocket") (r "^0.5.0-rc.3") (f (quote ("json"))) (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^3.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.10") (f (quote ("serde"))) (d #t) (k 2)) (d (n "syn") (r "^2.0") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde-human-readable"))) (d #t) (k 2)) (d (n "ulid") (r "^1") (o #t) (k 0)) (d (n "url") (r "^2") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)))) (h "0wkykjfrvs0xiz5swdn30935lyzir2bbr43naf0y0hwhhzc1dm8b") (f (quote (("yaml") ("time") ("smallvec") ("rocket_extras" "regex" "syn/extra-traits") ("repr") ("rc_schema") ("non_strict_integers") ("indexmap") ("decimal_float") ("decimal") ("debug" "syn/extra-traits") ("chrono") ("axum_extras" "regex" "syn/extra-traits") ("auto_into_responses") ("actix_extras" "regex" "syn/extra-traits")))) (s 2) (e (quote (("uuid" "dep:uuid") ("url" "dep:url") ("ulid" "dep:ulid"))))))

(define-public crate-utoipa-gen-4.1.0 (c (n "utoipa-gen") (v "4.1.0") (d (list (d (n "actix-web") (r "^4") (f (quote ("macros"))) (k 2)) (d (n "assert-json-diff") (r "^2") (d #t) (k 2)) (d (n "axum") (r "^0.6") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "proc-macro-error") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "rocket") (r "^0.5.0-rc.3") (f (quote ("json"))) (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^3.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.10") (f (quote ("serde"))) (d #t) (k 2)) (d (n "syn") (r "^2.0") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde-human-readable"))) (d #t) (k 2)) (d (n "ulid") (r "^1") (o #t) (k 0)) (d (n "url") (r "^2") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)))) (h "07fnfqmqfnsj76n8kvmn22bjcfj3c0d67mi0x3h4pmpdcx36y2sz") (f (quote (("yaml") ("time") ("smallvec") ("rocket_extras" "regex" "syn/extra-traits") ("repr") ("rc_schema") ("non_strict_integers") ("indexmap") ("decimal_float") ("decimal") ("debug" "syn/extra-traits") ("chrono") ("axum_extras" "regex" "syn/extra-traits") ("auto_into_responses") ("actix_extras" "regex" "syn/extra-traits")))) (s 2) (e (quote (("uuid" "dep:uuid") ("url" "dep:url") ("ulid" "dep:ulid"))))))

(define-public crate-utoipa-gen-4.2.0 (c (n "utoipa-gen") (v "4.2.0") (d (list (d (n "actix-web") (r "^4") (f (quote ("macros"))) (k 2)) (d (n "assert-json-diff") (r "^2") (d #t) (k 2)) (d (n "axum") (r "^0.7") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "proc-macro-error") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "rocket") (r "^0.5") (f (quote ("json"))) (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^3.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.10") (f (quote ("serde"))) (d #t) (k 2)) (d (n "syn") (r "^2.0") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde-human-readable"))) (d #t) (k 2)) (d (n "ulid") (r "^1") (o #t) (k 0)) (d (n "url") (r "^2") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)))) (h "1z1743js2drlmym0jgcb65plr20a0hm42ffy1nkvzh9qhg8g9jfk") (f (quote (("yaml") ("time") ("smallvec") ("rocket_extras" "regex" "syn/extra-traits") ("repr") ("rc_schema") ("non_strict_integers") ("indexmap") ("decimal_float") ("decimal") ("debug" "syn/extra-traits") ("chrono") ("axum_extras" "regex" "syn/extra-traits") ("auto_into_responses") ("actix_extras" "regex" "syn/extra-traits")))) (s 2) (e (quote (("uuid" "dep:uuid") ("url" "dep:url") ("ulid" "dep:ulid"))))))

(define-public crate-utoipa-gen-4.3.0 (c (n "utoipa-gen") (v "4.3.0") (d (list (d (n "actix-web") (r "^4") (f (quote ("macros"))) (k 2)) (d (n "assert-json-diff") (r "^2") (d #t) (k 2)) (d (n "axum") (r "^0.7") (f (quote ("json" "query"))) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "proc-macro-error") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "rocket") (r "^0.5") (f (quote ("json"))) (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^3.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.10") (f (quote ("serde"))) (d #t) (k 2)) (d (n "syn") (r "^2.0") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde-human-readable"))) (d #t) (k 2)) (d (n "ulid") (r "^1") (o #t) (k 0)) (d (n "url") (r "^2") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)))) (h "1glhh4zhldspf3f6dficg2mbrga926mi0pxn58rgajxw09nf3w3v") (f (quote (("yaml") ("time") ("smallvec") ("rocket_extras" "regex" "syn/extra-traits") ("repr") ("rc_schema") ("non_strict_integers") ("indexmap") ("decimal_float") ("decimal") ("debug" "syn/extra-traits") ("chrono") ("axum_extras" "regex" "syn/extra-traits") ("auto_into_responses") ("actix_extras" "regex" "syn/extra-traits")))) (s 2) (e (quote (("uuid" "dep:uuid") ("url" "dep:url") ("ulid" "dep:ulid"))))))

(define-public crate-utoipa-gen-5.0.0-alpha.0 (c (n "utoipa-gen") (v "5.0.0-alpha.0") (d (list (d (n "actix-web") (r "^4") (f (quote ("macros"))) (k 2)) (d (n "assert-json-diff") (r "^2") (d #t) (k 2)) (d (n "axum") (r "^0.7") (f (quote ("json" "query"))) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "rocket") (r "^0.5") (f (quote ("json"))) (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_with") (r "^3.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.10") (f (quote ("serde"))) (d #t) (k 2)) (d (n "syn") (r "^2.0") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde-human-readable"))) (d #t) (k 2)) (d (n "ulid") (r "^1") (o #t) (k 0)) (d (n "url") (r "^2") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)))) (h "0l9py42x8rphi3y435y28d7gh56h7mykgj8yq684sfw7br8nd1bf") (f (quote (("yaml") ("time") ("smallvec") ("rocket_extras" "regex" "syn/extra-traits") ("repr") ("rc_schema") ("non_strict_integers") ("indexmap") ("decimal_float") ("decimal") ("debug" "syn/extra-traits") ("chrono") ("axum_extras" "regex" "syn/extra-traits") ("auto_into_responses") ("actix_extras" "regex" "syn/extra-traits")))) (s 2) (e (quote (("uuid" "dep:uuid") ("url" "dep:url") ("ulid" "dep:ulid")))) (r "1.75")))

