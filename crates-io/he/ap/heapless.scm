(define-module (crates-io he ap heapless) #:use-module (crates-io))

(define-public crate-heapless-0.1.0 (c (n "heapless") (v "0.1.0") (h "19vy9hjwzrqc9hsv792c7ify88zw8p7zg4dgnlj0k0jg0wzjzw4r")))

(define-public crate-heapless-0.2.0 (c (n "heapless") (v "0.2.0") (d (list (d (n "scoped_threadpool") (r "^0.1.8") (d #t) (k 2)) (d (n "untagged-option") (r "^0.1.1") (d #t) (k 0)))) (h "1yz3kcfkxsxgnmypcdbm3w1j75ha1klgx1x94fad54lpjrsa1b3a")))

(define-public crate-heapless-0.2.1 (c (n "heapless") (v "0.2.1") (d (list (d (n "scoped_threadpool") (r "^0.1.8") (d #t) (k 2)) (d (n "untagged-option") (r "^0.1.1") (d #t) (k 0)))) (h "1pdlgzf8fcn59m228m24bn34xjwn1yb8jif53fykablabk3pagpf")))

(define-public crate-heapless-0.2.2 (c (n "heapless") (v "0.2.2") (d (list (d (n "scoped_threadpool") (r "^0.1.8") (d #t) (k 2)) (d (n "untagged-option") (r "^0.1.1") (d #t) (k 0)))) (h "10k7mlvjn2lcl0c3jn20zvhr083ccxa2izry4i4ipai8als13f6a")))

(define-public crate-heapless-0.2.3 (c (n "heapless") (v "0.2.3") (d (list (d (n "scoped_threadpool") (r "^0.1.8") (d #t) (k 2)) (d (n "untagged-option") (r "^0.1.1") (d #t) (k 0)))) (h "1iwkbnw9iqqw9lyd8xci3bqafrz3qgwdmb5wccv77f09va1cqlzk")))

(define-public crate-heapless-0.2.4 (c (n "heapless") (v "0.2.4") (d (list (d (n "scoped_threadpool") (r "^0.1.8") (d #t) (k 2)) (d (n "untagged-option") (r "^0.1.1") (d #t) (k 0)))) (h "0vb3lsc6d07k6f3ni3577436vcf2igwqjjshkykgz4ldnjxvdjx6")))

(define-public crate-heapless-0.2.5 (c (n "heapless") (v "0.2.5") (d (list (d (n "scoped_threadpool") (r "^0.1.8") (d #t) (k 2)) (d (n "untagged-option") (r "^0.1.1") (d #t) (k 0)))) (h "139r7n2vpl3nldh4zqcvpz9y4s9s7a4jp4qjq0cvad7jki2nx4cb")))

(define-public crate-heapless-0.2.6 (c (n "heapless") (v "0.2.6") (d (list (d (n "scoped_threadpool") (r "^0.1.8") (d #t) (k 2)) (d (n "untagged-option") (r "^0.1.1") (d #t) (k 0)))) (h "18jkwy4y3kr4wa7gsawzmichskpcjbwikxiyhivjxjmp5jmbhwin")))

(define-public crate-heapless-0.2.7 (c (n "heapless") (v "0.2.7") (d (list (d (n "scoped_threadpool") (r "^0.1.8") (d #t) (k 2)) (d (n "untagged-option") (r "^0.1.1") (d #t) (k 0)))) (h "0a6bxywpw96gwbq1zqa34d077kg57ac04gq0300dji3d1izslni3")))

(define-public crate-heapless-0.3.0 (c (n "heapless") (v "0.3.0") (d (list (d (n "generic-array") (r "^0.11.0") (d #t) (k 0)) (d (n "scoped_threadpool") (r "^0.1.8") (d #t) (k 2)))) (h "18l0ra7i9bgb3dh2lr59xghjq1i03as99bwbk0amr7zby0i2hzrm")))

(define-public crate-heapless-0.3.1 (c (n "heapless") (v "0.3.1") (d (list (d (n "generic-array") (r "^0.11.0") (d #t) (k 0)) (d (n "hash32") (r "^0.1.0") (d #t) (k 0)) (d (n "scoped_threadpool") (r "^0.1.8") (d #t) (k 2)))) (h "0wa9ac5lizsds0nf394d38d66kqv1pdixmf93qhmvx4zqm4c4p4b")))

(define-public crate-heapless-0.3.2 (c (n "heapless") (v "0.3.2") (d (list (d (n "generic-array") (r "^0.11.0") (d #t) (k 0)) (d (n "hash32") (r "^0.1.0") (d #t) (k 0)) (d (n "scoped_threadpool") (r "^0.1.8") (d #t) (k 2)))) (h "05cj5vjnf9d7y35i3zkwkwa3kz433801i1jzrhj12gd6brjdh1bk")))

(define-public crate-heapless-0.3.3 (c (n "heapless") (v "0.3.3") (d (list (d (n "generic-array") (r "^0.11.0") (d #t) (k 0)) (d (n "hash32") (r "^0.1.0") (d #t) (k 0)) (d (n "scoped_threadpool") (r "^0.1.8") (d #t) (k 2)))) (h "0z8plcpljh8v6sbgp9y21lq4k8jmcsgmf57f850i7hyiwqi48fsj")))

(define-public crate-heapless-0.3.4 (c (n "heapless") (v "0.3.4") (d (list (d (n "generic-array") (r "^0.11.0") (d #t) (k 0)) (d (n "hash32") (r "^0.1.0") (d #t) (k 0)) (d (n "scoped_threadpool") (r "^0.1.8") (d #t) (k 2)))) (h "1q14fvflaib55laxkldgqdic6fds8qgw8adzfmm4gvxwlfxk7fhi")))

(define-public crate-heapless-0.3.5 (c (n "heapless") (v "0.3.5") (d (list (d (n "generic-array") (r "^0.11.0") (d #t) (k 0)) (d (n "hash32") (r "^0.1.0") (d #t) (k 0)) (d (n "scoped_threadpool") (r "^0.1.8") (d #t) (k 2)))) (h "1xgsx5nrjpfknn42n93jvd0b8rnb6910ap251kpwbyxrsks7svkn")))

(define-public crate-heapless-0.3.6 (c (n "heapless") (v "0.3.6") (d (list (d (n "generic-array") (r "^0.11.0") (d #t) (k 0)) (d (n "hash32") (r "^0.1.0") (d #t) (k 0)) (d (n "scoped_threadpool") (r "^0.1.8") (d #t) (k 2)))) (h "0krxwvl7i5a2hzgn0v4yh4ixyzcy232ska5wxiak7c7n9pvj6nml")))

(define-public crate-heapless-0.3.7 (c (n "heapless") (v "0.3.7") (d (list (d (n "generic-array") (r "^0.11.0") (d #t) (k 0)) (d (n "hash32") (r "^0.1.0") (d #t) (k 0)) (d (n "scoped_threadpool") (r "^0.1.8") (d #t) (k 2)))) (h "0pw2b067jcgrh90ydhc2k5q1lc4k8lkq93z18dq0a350x12dzwr4") (f (quote (("smaller-atomics") ("default" "const-fn" "smaller-atomics") ("const-fn"))))))

(define-public crate-heapless-0.4.0 (c (n "heapless") (v "0.4.0") (d (list (d (n "generic-array") (r "^0.11.0") (d #t) (k 0)) (d (n "hash32") (r "^0.1.0") (d #t) (k 0)) (d (n "scoped_threadpool") (r "^0.1.8") (d #t) (k 2)))) (h "0av56banxhcgxaigr90hishxlb3dbnqfiszm35b1pp6494kqxfgv") (f (quote (("smaller-atomics") ("const-fn"))))))

(define-public crate-heapless-0.4.1 (c (n "heapless") (v "0.4.1") (d (list (d (n "generic-array") (r "^0.11.0") (d #t) (k 0)) (d (n "hash32") (r "^0.1.0") (d #t) (k 0)) (d (n "scoped_threadpool") (r "^0.1.8") (d #t) (k 2)))) (h "0h5lm88w7gawz0i44v5wram41n6y1n6cfnxis02m46kgbmjp6h99") (f (quote (("smaller-atomics") ("const-fn"))))))

(define-public crate-heapless-0.4.2 (c (n "heapless") (v "0.4.2") (d (list (d (n "generic-array") (r "^0.11.0") (d #t) (k 0)) (d (n "hash32") (r "^0.1.0") (d #t) (k 0)) (d (n "scoped_threadpool") (r "^0.1.8") (d #t) (k 2)) (d (n "serde") (r "^1") (o #t) (k 0)))) (h "0748k7h1c4di27gfpsv4hcjcc8dcfl2mzc0y7kxz2ihszz561fan") (f (quote (("smaller-atomics") ("const-fn"))))))

(define-public crate-heapless-0.4.3 (c (n "heapless") (v "0.4.3") (d (list (d (n "as-slice") (r "^0.1.0") (d #t) (k 0)) (d (n "generic-array") (r "^0.11.0") (d #t) (k 0)) (d (n "hash32") (r "^0.1.0") (d #t) (k 0)) (d (n "scoped_threadpool") (r "^0.1.8") (d #t) (k 2)) (d (n "serde") (r "^1") (o #t) (k 0)))) (h "0drwywpgdzsb0iql7gqm5dxdzpk2k414bh6wnmyzrx08sp4cbdw2") (f (quote (("smaller-atomics") ("min-const-fn") ("const-fn" "min-const-fn"))))))

(define-public crate-heapless-0.4.4 (c (n "heapless") (v "0.4.4") (d (list (d (n "as-slice") (r "^0.1.0") (d #t) (k 0)) (d (n "generic-array") (r "^0.11.0") (d #t) (k 0)) (d (n "hash32") (r "^0.1.0") (d #t) (k 0)) (d (n "scoped_threadpool") (r "^0.1.8") (d #t) (k 2)) (d (n "serde") (r "^1") (o #t) (k 0)))) (h "0narl1h46qs4a476fdhg439dpjh74lbmfs4pjs0aw094qsxq1bp1") (f (quote (("smaller-atomics") ("min-const-fn") ("const-fn" "min-const-fn"))))))

(define-public crate-heapless-0.5.0-alpha.1 (c (n "heapless") (v "0.5.0-alpha.1") (d (list (d (n "as-slice") (r "^0.1.0") (d #t) (k 0)) (d (n "generic-array") (r "^0.13.0") (d #t) (k 0)) (d (n "hash32") (r "^0.1.0") (d #t) (k 0)) (d (n "scoped_threadpool") (r "^0.1.8") (d #t) (k 2)) (d (n "serde") (r "^1") (o #t) (k 0)))) (h "19fcbrg45myxcm9xgga86f6w89wccbqzvwna29637lcdqi78wmgf") (y #t)))

(define-public crate-heapless-0.5.0-alpha.2 (c (n "heapless") (v "0.5.0-alpha.2") (d (list (d (n "as-slice") (r "^0.1.0") (d #t) (k 0)) (d (n "generic-array") (r "^0.13.0") (d #t) (k 0)) (d (n "hash32") (r "^0.1.0") (d #t) (k 0)) (d (n "scoped_threadpool") (r "^0.1.8") (d #t) (k 2)) (d (n "serde") (r "^1") (o #t) (k 0)))) (h "1lfyrylh5apqbk0i4n54pr6dvhrq0w4602a14shvr620xm89y3n5") (y #t)))

(define-public crate-heapless-0.5.0 (c (n "heapless") (v "0.5.0") (d (list (d (n "as-slice") (r "^0.1.0") (d #t) (k 0)) (d (n "generic-array") (r "^0.13.0") (d #t) (k 0)) (d (n "hash32") (r "^0.1.0") (d #t) (k 0)) (d (n "scoped_threadpool") (r "^0.1.8") (d #t) (k 2)) (d (n "serde") (r "^1") (o #t) (k 0)))) (h "16yaz9pk7ch5jk6yx35bs9cyldq3krgzxwnbgb8k8vq18wpcxiy6")))

(define-public crate-heapless-0.5.1 (c (n "heapless") (v "0.5.1") (d (list (d (n "as-slice") (r "^0.1.0") (d #t) (k 0)) (d (n "generic-array") (r "^0.13.0") (d #t) (k 0)) (d (n "hash32") (r "^0.1.0") (d #t) (k 0)) (d (n "scoped_threadpool") (r "^0.1.8") (d #t) (k 2)) (d (n "serde") (r "^1") (o #t) (k 0)))) (h "0s8fgwrw54mv1y6s9vdxkh16qvpwglkypjx7dapw0zvpa5yslfgk")))

(define-public crate-heapless-0.5.2 (c (n "heapless") (v "0.5.2") (d (list (d (n "as-slice") (r "^0.1.0") (d #t) (k 0)) (d (n "generic-array") (r "^0.13.0") (d #t) (k 0)) (d (n "hash32") (r "^0.1.0") (d #t) (k 0)) (d (n "scoped_threadpool") (r "^0.1.8") (d #t) (t "x86_64-unknown-linux-gnu") (k 2)) (d (n "serde") (r "^1") (o #t) (k 0)))) (h "01fnvw89va57kgcgyi85kl4z8f5q6frw4ahpww4lqs5dbhwwkxhi") (f (quote (("default" "cas") ("cas") ("__trybuild"))))))

(define-public crate-heapless-0.5.3 (c (n "heapless") (v "0.5.3") (d (list (d (n "as-slice") (r "^0.1.0") (d #t) (k 0)) (d (n "generic-array") (r "^0.13.0") (d #t) (k 0)) (d (n "hash32") (r "^0.1.0") (d #t) (k 0)) (d (n "scoped_threadpool") (r "^0.1.8") (d #t) (t "x86_64-unknown-linux-gnu") (k 2)) (d (n "serde") (r "^1") (o #t) (k 0)))) (h "11whs60b0p9mrrz7snsialq5a336aasgmyylfxx4n49g0fh93d8h") (f (quote (("default" "cas") ("cas") ("__trybuild"))))))

(define-public crate-heapless-0.5.4 (c (n "heapless") (v "0.5.4") (d (list (d (n "as-slice") (r "^0.1.0") (d #t) (k 0)) (d (n "generic-array") (r "^0.13.0") (d #t) (k 0)) (d (n "hash32") (r "^0.1.0") (d #t) (k 0)) (d (n "scoped_threadpool") (r "^0.1.8") (d #t) (t "x86_64-unknown-linux-gnu") (k 2)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "stable_deref_trait") (r "^1") (k 0)))) (h "11drp9miljpqjiara0dsy7cp1ankh0pxhng7zg2lc8xicl9m3ylg") (f (quote (("default" "cas") ("cas") ("__trybuild"))))))

(define-public crate-heapless-0.5.5 (c (n "heapless") (v "0.5.5") (d (list (d (n "as-slice") (r "^0.1.0") (d #t) (k 0)) (d (n "generic-array") (r "^0.13.0") (d #t) (k 0)) (d (n "hash32") (r "^0.1.0") (d #t) (k 0)) (d (n "scoped_threadpool") (r "^0.1.8") (d #t) (t "x86_64-unknown-linux-gnu") (k 2)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "stable_deref_trait") (r "^1") (k 0)) (d (n "ufmt") (r "^0.1") (d #t) (k 2)) (d (n "ufmt-write") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1h1d6s1f9zn0rz2vkdn0b42kcnkmlpd90yhfyqqhpirv38ws5a3k") (f (quote (("x86-sync-pool") ("ufmt-impl" "ufmt-write") ("default" "cas") ("cas") ("__trybuild"))))))

(define-public crate-heapless-0.5.6 (c (n "heapless") (v "0.5.6") (d (list (d (n "as-slice") (r "^0.1.0") (d #t) (k 0)) (d (n "generic-array") (r "^0.13.0") (d #t) (k 0)) (d (n "hash32") (r "^0.1.0") (d #t) (k 0)) (d (n "scoped_threadpool") (r "^0.1.8") (d #t) (t "x86_64-unknown-linux-gnu") (k 2)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "stable_deref_trait") (r "^1") (k 0)) (d (n "ufmt") (r "^0.1") (d #t) (k 2)) (d (n "ufmt-write") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1wc444z7w5ahxs1phbwcdy86wfvfafywy35wc7xzr335l5l1m4bl") (f (quote (("x86-sync-pool") ("ufmt-impl" "ufmt-write") ("default" "cas") ("cas") ("__trybuild"))))))

(define-public crate-heapless-0.6.0 (c (n "heapless") (v "0.6.0") (d (list (d (n "as-slice") (r "^0.1.4") (d #t) (k 0)) (d (n "generic-array") (r "^0.14.2") (d #t) (k 0)) (d (n "hash32") (r "^0.1.0") (d #t) (k 0)) (d (n "scoped_threadpool") (r "^0.1.8") (d #t) (t "x86_64-unknown-linux-gnu") (k 2)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "stable_deref_trait") (r "^1") (k 0)) (d (n "ufmt") (r "^0.1") (d #t) (k 2)) (d (n "ufmt-write") (r "^0.1") (o #t) (d #t) (k 0)))) (h "021qj37lpl482bm66h64a0b59gp1925wpsw9afvc4ss1z1k2icpg") (f (quote (("x86-sync-pool") ("ufmt-impl" "ufmt-write") ("default" "cas") ("cas") ("__trybuild"))))))

(define-public crate-heapless-0.6.1 (c (n "heapless") (v "0.6.1") (d (list (d (n "as-slice") (r "^0.1.5") (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (d #t) (k 0)) (d (n "hash32") (r "^0.1.0") (d #t) (k 0)) (d (n "scoped_threadpool") (r "^0.1.8") (d #t) (t "x86_64-unknown-linux-gnu") (k 2)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "stable_deref_trait") (r "^1") (k 0)) (d (n "ufmt") (r "^0.1") (d #t) (k 2)) (d (n "ufmt-write") (r "^0.1") (o #t) (d #t) (k 0)))) (h "08il083hcffis6km4is24kf2j0cnqs0bzz2b196l495zkk9d8jv3") (f (quote (("x86-sync-pool") ("ufmt-impl" "ufmt-write") ("default" "cas") ("cas") ("__trybuild"))))))

(define-public crate-heapless-0.7.0 (c (n "heapless") (v "0.7.0") (d (list (d (n "atomic-polyfill") (r "^0.1.2") (d #t) (t "thumbv6m-none-eabi") (k 0)) (d (n "hash32") (r "^0.2.1") (d #t) (k 0)) (d (n "scoped_threadpool") (r "^0.1.8") (d #t) (t "x86_64-unknown-linux-gnu") (k 2)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "stable_deref_trait") (r "^1") (k 0)) (d (n "ufmt") (r "^0.1") (d #t) (k 2)) (d (n "ufmt-write") (r "^0.1") (o #t) (d #t) (k 0)))) (h "19ilhcar3hdlcgsdnbf3izwlf42gcrvf5g08szdjlparifvi6k79") (f (quote (("x86-sync-pool") ("ufmt-impl" "ufmt-write") ("default" "cas") ("cas") ("__trybuild"))))))

(define-public crate-heapless-0.7.1 (c (n "heapless") (v "0.7.1") (d (list (d (n "atomic-polyfill") (r "^0.1.2") (d #t) (t "thumbv6m-none-eabi") (k 0)) (d (n "defmt") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "defmt") (r "^0.2.1") (f (quote ("unstable-test"))) (d #t) (k 2)) (d (n "hash32") (r "^0.2.1") (d #t) (k 0)) (d (n "scoped_threadpool") (r "^0.1.8") (d #t) (t "x86_64-unknown-linux-gnu") (k 2)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "stable_deref_trait") (r "^1") (k 0)) (d (n "ufmt") (r "^0.1") (d #t) (k 2)) (d (n "ufmt-write") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1xmmjccgzizlq7bnkymsd7k0dpqz40s9y9s0gwhn5695gncqmvn7") (f (quote (("x86-sync-pool") ("ufmt-impl" "ufmt-write") ("mpmc_large") ("defmt-impl" "defmt") ("default" "cas") ("cas") ("__trybuild"))))))

(define-public crate-heapless-0.7.2 (c (n "heapless") (v "0.7.2") (d (list (d (n "atomic-polyfill") (r "^0.1.2") (d #t) (t "thumbv6m-none-eabi") (k 0)) (d (n "defmt") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "defmt") (r "^0.2.1") (f (quote ("unstable-test"))) (d #t) (k 2)) (d (n "hash32") (r "^0.2.1") (d #t) (k 0)) (d (n "scoped_threadpool") (r "^0.1.8") (d #t) (t "x86_64-unknown-linux-gnu") (k 2)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "stable_deref_trait") (r "^1") (k 0)) (d (n "ufmt") (r "^0.1") (d #t) (k 2)) (d (n "ufmt-write") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0fk1qrk0lx2h853brkg4jkj5fzxas0wmczs563y6iibpi2x9yjp4") (f (quote (("x86-sync-pool") ("ufmt-impl" "ufmt-write") ("mpmc_large") ("defmt-impl" "defmt") ("default" "cas") ("cas") ("__trybuild"))))))

(define-public crate-heapless-0.7.3 (c (n "heapless") (v "0.7.3") (d (list (d (n "atomic-polyfill") (r "^0.1.2") (d #t) (t "thumbv6m-none-eabi") (k 0)) (d (n "defmt") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "defmt") (r "^0.2.1") (f (quote ("unstable-test"))) (d #t) (k 2)) (d (n "hash32") (r "^0.2.1") (d #t) (k 0)) (d (n "scoped_threadpool") (r "^0.1.8") (d #t) (t "x86_64-unknown-linux-gnu") (k 2)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "stable_deref_trait") (r "^1") (k 0)) (d (n "ufmt") (r "^0.1") (d #t) (k 2)) (d (n "ufmt-write") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1kp7nigclg1pisdhynp7rlwgki2dmkxci8s38brj300nwwk6bqil") (f (quote (("x86-sync-pool") ("ufmt-impl" "ufmt-write") ("mpmc_large") ("defmt-impl" "defmt") ("default" "cas") ("cas") ("__trybuild"))))))

(define-public crate-heapless-0.7.4 (c (n "heapless") (v "0.7.4") (d (list (d (n "atomic-polyfill") (r "^0.1.2") (o #t) (d #t) (t "thumbv6m-none-eabi") (k 0)) (d (n "defmt") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "defmt") (r "^0.2.1") (f (quote ("unstable-test"))) (d #t) (k 2)) (d (n "hash32") (r "^0.2.1") (d #t) (k 0)) (d (n "scoped_threadpool") (r "^0.1.8") (d #t) (t "x86_64-unknown-linux-gnu") (k 2)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "stable_deref_trait") (r "^1") (k 0)) (d (n "ufmt") (r "^0.1") (d #t) (k 2)) (d (n "ufmt-write") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1jm7ancbpx5dc207ah36jzbd8b99pqn4pcndyav8ywj335n78z3n") (f (quote (("x86-sync-pool") ("ufmt-impl" "ufmt-write") ("mpmc_large") ("defmt-impl" "defmt") ("default" "cas") ("cas" "atomic-polyfill") ("__trybuild"))))))

(define-public crate-heapless-0.7.5 (c (n "heapless") (v "0.7.5") (d (list (d (n "atomic-polyfill") (r "^0.1.2") (o #t) (d #t) (t "thumbv6m-none-eabi") (k 0)) (d (n "defmt") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "defmt") (r "^0.2.1") (f (quote ("unstable-test"))) (d #t) (k 2)) (d (n "hash32") (r "^0.2.1") (d #t) (k 0)) (d (n "scoped_threadpool") (r "^0.1.8") (d #t) (t "x86_64-unknown-linux-gnu") (k 2)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "stable_deref_trait") (r "^1") (k 0)) (d (n "ufmt") (r "^0.1") (d #t) (k 2)) (d (n "ufmt-write") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0apqm8hdhcs26fyprzrhv8i7nlmdrrxrs2m3wf9b2ix9x6004lsh") (f (quote (("x86-sync-pool") ("ufmt-impl" "ufmt-write") ("mpmc_large") ("defmt-impl" "defmt") ("default" "cas") ("cas" "atomic-polyfill") ("__trybuild"))))))

(define-public crate-heapless-0.7.6 (c (n "heapless") (v "0.7.6") (d (list (d (n "atomic-polyfill") (r "^0.1.2") (o #t) (d #t) (t "thumbv6m-none-eabi") (k 0)) (d (n "defmt") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "defmt") (r "^0.2.1") (f (quote ("unstable-test"))) (d #t) (k 2)) (d (n "hash32") (r "^0.2.1") (d #t) (k 0)) (d (n "scoped_threadpool") (r "^0.1.8") (d #t) (t "cfg(any(target_arch = \"x86_64\", target_arch = \"x86\"))") (k 2)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "spin") (r "^0.9.2") (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "stable_deref_trait") (r "^1") (k 0)) (d (n "ufmt") (r "^0.1") (d #t) (k 2)) (d (n "ufmt-write") (r "^0.1") (o #t) (d #t) (k 0)))) (h "10f3jzff15452yizi6k48j97h5xsfmdbh2q1891hf4y1zsij5nql") (f (quote (("x86-sync-pool") ("ufmt-impl" "ufmt-write") ("mpmc_large") ("defmt-impl" "defmt") ("default" "cas") ("cas" "atomic-polyfill") ("__trybuild"))))))

(define-public crate-heapless-0.7.7 (c (n "heapless") (v "0.7.7") (d (list (d (n "atomic-polyfill") (r "^0.1.2") (o #t) (d #t) (t "thumbv6m-none-eabi") (k 0)) (d (n "defmt") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "defmt") (r "^0.2.1") (f (quote ("unstable-test"))) (d #t) (k 2)) (d (n "hash32") (r "^0.2.1") (d #t) (k 0)) (d (n "scoped_threadpool") (r "^0.1.8") (d #t) (t "cfg(any(target_arch = \"x86_64\", target_arch = \"x86\"))") (k 2)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "spin") (r "^0.9.2") (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "stable_deref_trait") (r "^1") (k 0)) (d (n "ufmt") (r "^0.1") (d #t) (k 2)) (d (n "ufmt-write") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0lvd080kv85dwqiamii23n7c6wfnbg20naw4i6qv3x8s5w3fyrgy") (f (quote (("x86-sync-pool") ("ufmt-impl" "ufmt-write") ("mpmc_large") ("defmt-impl" "defmt") ("default" "cas") ("cas" "atomic-polyfill") ("__trybuild"))))))

(define-public crate-heapless-0.7.8 (c (n "heapless") (v "0.7.8") (d (list (d (n "atomic-polyfill") (r "^0.1.2") (o #t) (d #t) (t "thumbv6m-none-eabi") (k 0)) (d (n "defmt") (r ">=0.2.0, <0.4") (o #t) (d #t) (k 0)) (d (n "hash32") (r "^0.2.1") (d #t) (k 0)) (d (n "scoped_threadpool") (r "^0.1.8") (d #t) (t "cfg(any(target_arch = \"x86_64\", target_arch = \"x86\"))") (k 2)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "spin") (r "^0.9.2") (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "stable_deref_trait") (r "^1") (k 0)) (d (n "ufmt") (r "^0.1") (d #t) (k 2)) (d (n "ufmt-write") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1wv0jjw9kzmxs1s40xhfz124693qs9irw24mns1dy1blw1wdh6lw") (f (quote (("x86-sync-pool") ("ufmt-impl" "ufmt-write") ("mpmc_large") ("defmt-impl" "defmt") ("default" "cas") ("cas" "atomic-polyfill") ("__trybuild"))))))

(define-public crate-heapless-0.7.9 (c (n "heapless") (v "0.7.9") (d (list (d (n "atomic-polyfill") (r "^0.1.2") (o #t) (d #t) (t "thumbv6m-none-eabi") (k 0)) (d (n "defmt") (r ">=0.2.0, <0.4") (o #t) (d #t) (k 0)) (d (n "hash32") (r "^0.2.1") (d #t) (k 0)) (d (n "scoped_threadpool") (r "^0.1.8") (d #t) (t "cfg(any(target_arch = \"x86_64\", target_arch = \"x86\"))") (k 2)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "spin") (r "^0.9.2") (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "stable_deref_trait") (r "^1") (k 0)) (d (n "ufmt") (r "^0.1") (d #t) (k 2)) (d (n "ufmt-write") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0lnrbzf1cpxg3n5s00lyi1gal2ajkqzsrw11arrc6rbn35j6qivy") (f (quote (("x86-sync-pool") ("ufmt-impl" "ufmt-write") ("mpmc_large") ("defmt-impl" "defmt") ("default" "cas") ("cas" "atomic-polyfill") ("__trybuild"))))))

(define-public crate-heapless-0.7.10 (c (n "heapless") (v "0.7.10") (d (list (d (n "atomic-polyfill") (r "^0.1.2") (o #t) (d #t) (t "thumbv6m-none-eabi") (k 0)) (d (n "atomic-polyfill") (r "^0.1.4") (o #t) (d #t) (t "riscv32i-unknown-none-elf") (k 0)) (d (n "atomic-polyfill") (r "^0.1.4") (o #t) (d #t) (t "riscv32imc-unknown-none-elf") (k 0)) (d (n "defmt") (r ">=0.2.0, <0.4") (o #t) (d #t) (k 0)) (d (n "hash32") (r "^0.2.1") (d #t) (k 0)) (d (n "scoped_threadpool") (r "^0.1.8") (d #t) (t "cfg(not(target_os = \"none\"))") (k 2)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "spin") (r "^0.9.2") (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "stable_deref_trait") (r "^1") (k 0)) (d (n "ufmt") (r "^0.1") (d #t) (k 2)) (d (n "ufmt-write") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1srixfiv34ggxhb948pvc9sdpzzbim97fm1if4l8cgz070c14xnh") (f (quote (("x86-sync-pool") ("ufmt-impl" "ufmt-write") ("mpmc_large") ("defmt-impl" "defmt") ("default" "cas") ("cas" "atomic-polyfill") ("__trybuild"))))))

(define-public crate-heapless-0.7.11 (c (n "heapless") (v "0.7.11") (d (list (d (n "atomic-polyfill") (r "^0.1.2") (o #t) (d #t) (t "thumbv6m-none-eabi") (k 0)) (d (n "atomic-polyfill") (r "^0.1.4") (o #t) (d #t) (t "riscv32i-unknown-none-elf") (k 0)) (d (n "atomic-polyfill") (r "^0.1.4") (o #t) (d #t) (t "riscv32imc-unknown-none-elf") (k 0)) (d (n "defmt") (r ">=0.2.0, <0.4") (o #t) (d #t) (k 0)) (d (n "hash32") (r "^0.2.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "spin") (r "^0.9.2") (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "stable_deref_trait") (r "^1") (k 0)) (d (n "ufmt") (r "^0.1") (d #t) (k 2)) (d (n "ufmt-write") (r "^0.1") (o #t) (d #t) (k 0)))) (h "170ip2r6bw74cdd6xzja13dxj5s6r0vff9q94k7br5spzmaacfmz") (f (quote (("x86-sync-pool") ("ufmt-impl" "ufmt-write") ("mpmc_large") ("defmt-impl" "defmt") ("default" "cas") ("cas" "atomic-polyfill") ("__trybuild"))))))

(define-public crate-heapless-0.7.12 (c (n "heapless") (v "0.7.12") (d (list (d (n "atomic-polyfill") (r "^0.1.2") (o #t) (d #t) (t "thumbv6m-none-eabi") (k 0)) (d (n "atomic-polyfill") (r "^0.1.4") (d #t) (t "riscv32i-unknown-none-elf") (k 0)) (d (n "atomic-polyfill") (r "^0.1.4") (d #t) (t "riscv32imc-unknown-none-elf") (k 0)) (d (n "defmt") (r ">=0.2.0, <0.4") (o #t) (d #t) (k 0)) (d (n "hash32") (r "^0.2.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "spin") (r "^0.9.2") (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "stable_deref_trait") (r "^1") (k 0)) (d (n "ufmt") (r "^0.1") (d #t) (k 2)) (d (n "ufmt-write") (r "^0.1") (o #t) (d #t) (k 0)))) (h "02g9nh38xkqv7q1a77piakwixbzvifx37bpnsv8hh47j8ddnbnc0") (f (quote (("x86-sync-pool") ("ufmt-impl" "ufmt-write") ("mpmc_large") ("defmt-impl" "defmt") ("default" "cas") ("cas" "atomic-polyfill") ("__trybuild"))))))

(define-public crate-heapless-0.7.13 (c (n "heapless") (v "0.7.13") (d (list (d (n "atomic-polyfill") (r "^0.1.2") (o #t) (d #t) (t "thumbv6m-none-eabi") (k 0)) (d (n "atomic-polyfill") (r "^0.1.4") (d #t) (t "riscv32i-unknown-none-elf") (k 0)) (d (n "atomic-polyfill") (r "^0.1.4") (d #t) (t "riscv32imc-unknown-none-elf") (k 0)) (d (n "defmt") (r ">=0.2.0, <0.4") (o #t) (d #t) (k 0)) (d (n "hash32") (r "^0.2.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "spin") (r "^0.9.2") (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "stable_deref_trait") (r "^1") (k 0)) (d (n "ufmt") (r "^0.1") (d #t) (k 2)) (d (n "ufmt-write") (r "^0.1") (o #t) (d #t) (k 0)))) (h "10zr83nfyndf3zvdawpk6r9y3vixi2jg8aavfa1x42mwmmayf24a") (f (quote (("x86-sync-pool") ("ufmt-impl" "ufmt-write") ("mpmc_large") ("defmt-impl" "defmt") ("default" "cas") ("cas" "atomic-polyfill") ("__trybuild"))))))

(define-public crate-heapless-0.7.14 (c (n "heapless") (v "0.7.14") (d (list (d (n "atomic-polyfill") (r "^0.1.2") (o #t) (d #t) (t "thumbv6m-none-eabi") (k 0)) (d (n "atomic-polyfill") (r "^0.1.4") (d #t) (t "riscv32i-unknown-none-elf") (k 0)) (d (n "atomic-polyfill") (r "^0.1.4") (d #t) (t "riscv32imc-unknown-none-elf") (k 0)) (d (n "atomic-polyfill") (r "^0.1.8") (o #t) (d #t) (t "cfg(target_arch = \"avr\")") (k 0)) (d (n "defmt") (r ">=0.2.0, <0.4") (o #t) (d #t) (k 0)) (d (n "hash32") (r "^0.2.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "spin") (r "^0.9.2") (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "stable_deref_trait") (r "^1") (k 0)) (d (n "ufmt") (r "^0.1") (d #t) (k 2)) (d (n "ufmt-write") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0hyakl5za6yxmsbz0mayvgkvvjyvmqk06akh2glf1xwykzlq2mh6") (f (quote (("x86-sync-pool") ("ufmt-impl" "ufmt-write") ("mpmc_large") ("defmt-impl" "defmt") ("default" "cas") ("cas" "atomic-polyfill") ("__trybuild"))))))

(define-public crate-heapless-0.7.15 (c (n "heapless") (v "0.7.15") (d (list (d (n "atomic-polyfill") (r "^0.1.2") (o #t) (d #t) (t "thumbv6m-none-eabi") (k 0)) (d (n "atomic-polyfill") (r "^0.1.4") (d #t) (t "riscv32i-unknown-none-elf") (k 0)) (d (n "atomic-polyfill") (r "^0.1.4") (d #t) (t "riscv32imc-unknown-none-elf") (k 0)) (d (n "atomic-polyfill") (r "^0.1.8") (o #t) (d #t) (t "cfg(target_arch = \"avr\")") (k 0)) (d (n "defmt") (r ">=0.2.0, <0.4") (o #t) (d #t) (k 0)) (d (n "hash32") (r "^0.2.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "spin") (r "^0.9.2") (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "stable_deref_trait") (r "^1") (k 0)) (d (n "ufmt") (r "^0.1") (d #t) (k 2)) (d (n "ufmt-write") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1ya6i3p0wc10nlv0jqx5ij7dc3qpcw3bxj1k05hszhkd4kd36rwz") (f (quote (("x86-sync-pool") ("ufmt-impl" "ufmt-write") ("mpmc_large") ("defmt-impl" "defmt") ("default" "cas") ("cas" "atomic-polyfill") ("__trybuild"))))))

(define-public crate-heapless-0.7.16 (c (n "heapless") (v "0.7.16") (d (list (d (n "atomic-polyfill") (r "^0.1.2") (o #t) (d #t) (t "thumbv6m-none-eabi") (k 0)) (d (n "atomic-polyfill") (r "^0.1.4") (d #t) (t "riscv32i-unknown-none-elf") (k 0)) (d (n "atomic-polyfill") (r "^0.1.4") (d #t) (t "riscv32imc-unknown-none-elf") (k 0)) (d (n "atomic-polyfill") (r "^0.1.8") (o #t) (d #t) (t "cfg(target_arch = \"avr\")") (k 0)) (d (n "defmt") (r ">=0.2.0, <0.4") (o #t) (d #t) (k 0)) (d (n "hash32") (r "^0.2.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "spin") (r "^0.9.2") (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "stable_deref_trait") (r "^1") (k 0)) (d (n "ufmt") (r "^0.1") (d #t) (k 2)) (d (n "ufmt-write") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0hq7ifnzpdj9rc06rhys4qa3qkr6q3k01kwfca0ak7lbl4jbq16v") (f (quote (("x86-sync-pool") ("ufmt-impl" "ufmt-write") ("mpmc_large") ("defmt-impl" "defmt") ("default" "cas") ("cas" "atomic-polyfill") ("__trybuild"))))))

(define-public crate-heapless-0.8.0 (c (n "heapless") (v "0.8.0") (d (list (d (n "defmt") (r ">=0.2.0, <0.4") (o #t) (d #t) (k 0)) (d (n "hash32") (r "^0.3.0") (d #t) (k 0)) (d (n "portable-atomic") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "stable_deref_trait") (r "^1") (k 0)) (d (n "ufmt") (r "^0.2") (d #t) (k 2)) (d (n "ufmt-write") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1b9zpdjv4qkl2511s2c80fz16fx9in4m9qkhbaa8j73032v9xyqb") (f (quote (("mpmc_large")))) (s 2) (e (quote (("ufmt" "dep:ufmt-write") ("serde" "dep:serde") ("portable-atomic-unsafe-assume-single-core" "dep:portable-atomic" "portable-atomic" "portable-atomic?/unsafe-assume-single-core") ("portable-atomic-critical-section" "dep:portable-atomic" "portable-atomic" "portable-atomic?/critical-section") ("portable-atomic" "dep:portable-atomic") ("defmt-03" "dep:defmt"))))))

(define-public crate-heapless-0.7.17 (c (n "heapless") (v "0.7.17") (d (list (d (n "atomic-polyfill") (r "^1") (d #t) (t "riscv32i-unknown-none-elf") (k 0)) (d (n "atomic-polyfill") (r "^1") (d #t) (t "riscv32imc-unknown-none-elf") (k 0)) (d (n "atomic-polyfill") (r "^1") (d #t) (t "xtensa-esp32s2-none-elf") (k 0)) (d (n "atomic-polyfill") (r "^1") (o #t) (d #t) (t "cfg(target_arch = \"avr\")") (k 0)) (d (n "atomic-polyfill") (r "^1") (o #t) (d #t) (t "thumbv6m-none-eabi") (k 0)) (d (n "defmt") (r ">=0.2.0, <0.4") (o #t) (d #t) (k 0)) (d (n "hash32") (r "^0.2.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "serde") (r "^1") (o #t) (k 0)) (d (n "spin") (r "^0.9.2") (d #t) (t "cfg(target_arch = \"x86_64\")") (k 0)) (d (n "stable_deref_trait") (r "^1") (k 0)) (d (n "ufmt") (r "^0.1") (d #t) (k 2)) (d (n "ufmt-write") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0kwn2wzk9fnsqnwp6rqjqhvh6hfq4rh225xwqjm72b5n1ry4bind") (f (quote (("x86-sync-pool") ("ufmt-impl" "ufmt-write") ("mpmc_large") ("defmt-impl" "defmt") ("default" "cas") ("cas" "atomic-polyfill") ("__trybuild"))))))

