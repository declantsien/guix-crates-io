(define-module (crates-io he xe hexe_core) #:use-module (crates-io))

(define-public crate-hexe_core-0.0.0 (c (n "hexe_core") (v "0.0.0") (h "1l44caij3mhy46mwizy4mg0m4y8w3nnfr8vi9kdj9dg093gkm0iq")))

(define-public crate-hexe_core-0.0.1 (c (n "hexe_core") (v "0.0.1") (d (list (d (n "memchr") (r "^2.0") (f (quote ("libc"))) (k 0)) (d (n "rand") (r "^0.4.1") (o #t) (k 0)) (d (n "rand") (r "^0.4.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "simd") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^0.2") (d #t) (k 2)) (d (n "uncon") (r "^1.1.0") (k 0)) (d (n "uncon_derive") (r "^1.1.1") (k 0)))) (h "1ngfvmx0xay7j3nf9p6r4diqz7jhcg9wly51xdvr2hyizmk18pyf") (f (quote (("std" "memchr/use_std" "uncon/std" "uncon_derive/std") ("default" "std"))))))

(define-public crate-hexe_core-0.0.2 (c (n "hexe_core") (v "0.0.2") (d (list (d (n "memchr") (r "^2.0") (f (quote ("libc"))) (k 0)) (d (n "rand") (r "^0.4.1") (o #t) (k 0)) (d (n "rand") (r "^0.4.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "simd") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^0.2") (d #t) (k 2)) (d (n "uncon") (r "^1.1.0") (k 0)) (d (n "uncon_derive") (r "^1.1.1") (k 0)) (d (n "version_check") (r "^0.1") (d #t) (k 1)))) (h "12zy3wj7xl34pib110kjk3ksjkmnd1rnmvxm80ny44hl9317isv3") (f (quote (("std" "memchr/use_std" "uncon/std" "uncon_derive/std") ("default" "std"))))))

(define-public crate-hexe_core-0.0.3 (c (n "hexe_core") (v "0.0.3") (d (list (d (n "memchr") (r "^2.0") (f (quote ("libc"))) (k 0)) (d (n "rand") (r "^0.4.1") (o #t) (k 0)) (d (n "rand") (r "^0.4.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "simd") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^0.2") (d #t) (k 2)) (d (n "uncon") (r "^1.1.0") (k 0)) (d (n "uncon_derive") (r "^1.1.1") (k 0)) (d (n "version_check") (r "^0.1") (d #t) (k 1)))) (h "06vl5x6cq8ap8g9xnzjjzlx2s96n7w0cq62ni6mrm1ngbxh58zrl") (f (quote (("std" "memchr/use_std" "uncon/std" "uncon_derive/std") ("default" "std"))))))

(define-public crate-hexe_core-0.0.4 (c (n "hexe_core") (v "0.0.4") (d (list (d (n "memchr") (r "^2.0.0") (k 0)) (d (n "rand") (r "^0.4.1") (o #t) (k 0)) (d (n "rand") (r "^0.4.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.0") (o #t) (k 0)) (d (n "static_assertions") (r "^0.2") (d #t) (k 2)) (d (n "uncon") (r "^1.1.0") (k 0)) (d (n "uncon_derive") (r "^1.1.1") (k 0)) (d (n "version_check") (r "^0.1") (d #t) (k 1)))) (h "16b9zrvpm302m69hkmk1axky9jxisc7vg20dcnvxmdm2ss4z1d7v") (f (quote (("std" "memchr/use_std" "uncon/std" "uncon_derive/std") ("simd") ("default" "std" "memchr/libc"))))))

(define-public crate-hexe_core-0.0.5 (c (n "hexe_core") (v "0.0.5") (d (list (d (n "memchr") (r "^2.0.0") (k 0)) (d (n "rand") (r "^0.4.1") (o #t) (k 0)) (d (n "rand") (r "^0.4.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.0") (o #t) (k 0)) (d (n "static_assertions") (r "^0.2") (d #t) (k 2)) (d (n "uncon") (r "^1.1.0") (k 0)) (d (n "uncon_derive") (r "^1.1.1") (k 0)) (d (n "version_check") (r "^0.1") (d #t) (k 1)))) (h "0yah31j6zx7v64pcn8m6581hfm84is1lxb73z6711brg34cbi6xd") (f (quote (("std" "memchr/use_std" "uncon/std" "uncon_derive/std") ("simd") ("default" "std" "memchr/libc"))))))

