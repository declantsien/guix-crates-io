(define-module (crates-io he xe hexe) #:use-module (crates-io))

(define-public crate-hexe-0.0.0 (c (n "hexe") (v "0.0.0") (d (list (d (n "hexe_core") (r "^0.0.0") (d #t) (k 0)))) (h "16sysng1pn6fj2n4km146dw44k81bbmirj43agsrhaq2ahrl2zkj")))

(define-public crate-hexe-0.0.1 (c (n "hexe") (v "0.0.1") (d (list (d (n "hexe_core") (r "^0.0.1") (d #t) (k 0)) (d (n "rand") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 2)) (d (n "static_assertions") (r "^0.2") (d #t) (k 2)) (d (n "uncon") (r "^1.1.0") (d #t) (k 0)) (d (n "uncon_derive") (r "^1.1.1") (d #t) (k 0)) (d (n "version_check") (r "^0.1") (d #t) (k 1)))) (h "0flx7qr4hav2dlqmpjfzcwahkq70myngplsz355afh3lyild51rk") (f (quote (("simd" "hexe_core/simd") ("serde" "hexe_core/serde"))))))

(define-public crate-hexe-0.0.2 (c (n "hexe") (v "0.0.2") (d (list (d (n "hexe_core") (r "^0.0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 2)) (d (n "static_assertions") (r "^0.2") (d #t) (k 2)) (d (n "uncon") (r "^1.1.0") (d #t) (k 0)) (d (n "uncon_derive") (r "^1.1.1") (d #t) (k 0)) (d (n "version_check") (r "^0.1") (d #t) (k 1)))) (h "095ywcwn5qsycdzsw48ng9x0z96d8x6slcxmldwd7vk18c8r0nar") (f (quote (("simd" "hexe_core/simd") ("serde" "hexe_core/serde"))))))

(define-public crate-hexe-0.0.3 (c (n "hexe") (v "0.0.3") (d (list (d (n "hexe_core") (r "^0.0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 2)) (d (n "static_assertions") (r "^0.2") (d #t) (k 2)) (d (n "uncon") (r "^1.1.0") (d #t) (k 0)) (d (n "uncon_derive") (r "^1.1.1") (d #t) (k 0)) (d (n "version_check") (r "^0.1") (d #t) (k 1)))) (h "04sisp4pdfdvd88lqlqz1gj57rx4mlg5rp3irrw4axdags38k04j") (f (quote (("simd" "hexe_core/simd") ("serde" "hexe_core/serde"))))))

(define-public crate-hexe-0.0.4 (c (n "hexe") (v "0.0.4") (d (list (d (n "hexe_core") (r "^0.0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 2)) (d (n "scoped_threadpool") (r "^0.1") (d #t) (k 0)) (d (n "static_assertions") (r "^0.2") (d #t) (k 2)) (d (n "uncon") (r "^1.1.0") (d #t) (k 0)) (d (n "version_check") (r "^0.1") (d #t) (k 1)))) (h "0a6wajbzaqcs3rg6k0gqgdgby1w4rc3q0bpk8dfib25ap4vl1dsj") (f (quote (("simd" "hexe_core/simd") ("serde" "hexe_core/serde"))))))

(define-public crate-hexe-0.0.5 (c (n "hexe") (v "0.0.5") (d (list (d (n "hexe_core") (r "^0.0.5") (d #t) (k 0)) (d (n "num_cpus") (r "^1.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 2)) (d (n "scoped_threadpool") (r "^0.1") (d #t) (k 0)) (d (n "static_assertions") (r "^0.2") (d #t) (k 2)) (d (n "uncon") (r "^1.1.0") (d #t) (k 0)) (d (n "version_check") (r "^0.1") (d #t) (k 1)))) (h "0h76nscydjwifdzld4n04amd0v059rn73c2s56zrhgj36d1pzkyi") (f (quote (("simd" "hexe_core/simd") ("serde" "hexe_core/serde"))))))

