(define-module (crates-io he ma hematite_server) #:use-module (crates-io))

(define-public crate-hematite_server-0.0.2 (c (n "hematite_server") (v "0.0.2") (d (list (d (n "byteorder") (r "^0.5.1") (d #t) (k 0)) (d (n "flate2") (r "^0.2") (d #t) (k 0)) (d (n "hematite-nbt") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^0.1") (d #t) (k 0)))) (h "1rcygzsarsp6cjxi6v0vqskr1pzvgs64xf8500dlidcci8d1njvw")))

(define-public crate-hematite_server-0.0.3 (c (n "hematite_server") (v "0.0.3") (d (list (d (n "byteorder") (r "^1.0.0") (d #t) (k 0)) (d (n "flate2") (r "^0.2") (d #t) (k 0)) (d (n "hematite-nbt") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^0.1") (d #t) (k 0)))) (h "036rdyi9qyk9s16gpxpnl8asiajdvy3j4b0h3p1622j6w83zpmdc")))

(define-public crate-hematite_server-0.0.4 (c (n "hematite_server") (v "0.0.4") (d (list (d (n "byteorder") (r "^1.0.0") (d #t) (k 0)) (d (n "flate2") (r "^0.2") (d #t) (k 0)) (d (n "hematite-nbt") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.4.2") (d #t) (k 0)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^0.1") (d #t) (k 0)))) (h "0n59hfaakm8a3w0qnj2553fd6cr7cprk6l6dx4c1yrhlh8xn2jhf")))

