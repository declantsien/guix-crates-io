(define-module (crates-io he de hedera) #:use-module (crates-io))

(define-public crate-hedera-0.1.0 (c (n "hedera") (v "0.1.0") (d (list (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^0.8.1") (f (quote ("std" "nightly" "asm" "u64_backend"))) (k 0)) (d (n "failure") (r "^0.1.3") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.3") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "glob") (r "^0.2.11") (d #t) (k 1)) (d (n "grpc") (r "^0.6.0") (d #t) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.7.8") (d #t) (k 0)) (d (n "libc") (r "^0.2.43") (o #t) (d #t) (k 0)) (d (n "mbox") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "num") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^0.1.6") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.6.4") (d #t) (k 0)) (d (n "protobuf") (r "^2.1") (d #t) (k 0)) (d (n "protoc-rust-grpc") (r "^0.6.0") (d #t) (k 1)) (d (n "rand") (r "^0.5.5") (d #t) (k 0)) (d (n "sha2") (r "^0.7.0") (d #t) (k 0)) (d (n "simple_asn1") (r "^0.2.0") (d #t) (k 0)) (d (n "slotmap") (r "^0.3.0") (f (quote ("unstable"))) (o #t) (d #t) (k 0)))) (h "15zijv8dyahis68n4ia4as4bx41z82zjl170xmsqfiry1xwh5nsx") (f (quote (("default") ("bridge" "mbox" "libc" "slotmap"))))))

(define-public crate-hedera-0.1.1 (c (n "hedera") (v "0.1.1") (d (list (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0-pre.0") (f (quote ("std" "nightly" "asm" "u64_backend"))) (k 0)) (d (n "failure") (r "^0.1.3") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.3") (d #t) (k 0)) (d (n "futures") (r "^0.1.25") (d #t) (k 0)) (d (n "glob") (r "^0.2.11") (d #t) (k 1)) (d (n "grpc") (r "^0.6.1") (d #t) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 0)) (d (n "httpbis") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.7.9") (d #t) (k 0)) (d (n "libc") (r "^0.2.43") (o #t) (d #t) (k 0)) (d (n "mbox") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "num") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^0.1.6") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.6.4") (d #t) (k 0)) (d (n "protobuf") (r "^2.2.0") (d #t) (k 0)) (d (n "protoc-rust-grpc") (r "^0.6.1") (d #t) (k 1)) (d (n "query_interface") (r "^0.3.5") (d #t) (k 0)) (d (n "rand") (r "^0.6.0") (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "simple_asn1") (r "^0.2.1") (d #t) (k 0)) (d (n "slotmap") (r "^0.3.0") (f (quote ("unstable"))) (o #t) (d #t) (k 0)))) (h "1npymcncjghkhzyrmy3ynkqjls9zyw3v19y2y47q3linx0qg1xrf") (f (quote (("default") ("bridge-c" "mbox" "libc" "slotmap"))))))

(define-public crate-hedera-0.2.0 (c (n "hedera") (v "0.2.0") (d (list (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0-pre.0") (f (quote ("std" "nightly" "u64_backend"))) (k 0)) (d (n "failure") (r "^0.1.3") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.3") (d #t) (k 0)) (d (n "futures") (r "^0.1.25") (d #t) (k 0)) (d (n "glob") (r "^0.2.11") (d #t) (k 1)) (d (n "grpc") (r "^0.6.1") (d #t) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 0)) (d (n "httpbis") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.7.11") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "num") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^0.1.6") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.7.0") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.2.5") (d #t) (k 2)) (d (n "protobuf") (r "^2.2.0") (d #t) (k 0)) (d (n "protoc-rust-grpc") (r "^0.6.1") (d #t) (k 1)) (d (n "query_interface") (r "^0.3.5") (d #t) (k 0)) (d (n "rand") (r "^0.6.1") (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "simple_asn1") (r "^0.2.1") (d #t) (k 0)))) (h "11v2jnwmvwk16vqvv4lgikln6y5hs9f115v6b91hx7p2kns5489w")))

(define-public crate-hedera-0.3.0 (c (n "hedera") (v "0.3.0") (d (list (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0-pre.0") (f (quote ("std" "u64_backend"))) (k 0)) (d (n "failure") (r "^0.1.3") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.3") (d #t) (k 0)) (d (n "futures") (r "^0.1.25") (d #t) (k 0)) (d (n "glob") (r "^0.2.11") (d #t) (k 1)) (d (n "grpc") (r "^0.6.1") (d #t) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 0)) (d (n "httpbis") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.7.11") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "num") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^0.1.6") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.7.0") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.2.5") (d #t) (k 2)) (d (n "protobuf") (r "^2.2.0") (d #t) (k 0)) (d (n "protoc-rust-grpc") (r "^0.6.1") (d #t) (k 1)) (d (n "query_interface") (r "^0.3.5") (d #t) (k 0)) (d (n "rand") (r "^0.6.1") (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "simple_asn1") (r "^0.2.1") (d #t) (k 0)) (d (n "try_from") (r "^0.3.2") (d #t) (k 0)))) (h "002xb1inpvmby78ga4x07nsdw1xrh1w8hg02h0q3zp438sr2p5c8")))

(define-public crate-hedera-0.4.0 (c (n "hedera") (v "0.4.0") (d (list (d (n "bip39") (r "^0.6.0-beta.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0-pre.0") (f (quote ("std" "nightly" "u64_backend"))) (k 0)) (d (n "failure") (r "^0.1.3") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.0-alpha.11") (d #t) (k 0) (p "futures-preview")) (d (n "futures01") (r "^0.1.25") (d #t) (k 0) (p "futures")) (d (n "glob") (r "^0.2.11") (d #t) (k 1)) (d (n "grpc") (r "^0.6.1") (d #t) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 0)) (d (n "httpbis") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "num") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^0.1.6") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.7.0") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.3.0") (d #t) (k 2)) (d (n "protobuf") (r "^2.2.0") (d #t) (k 0)) (d (n "protoc-rust-grpc") (r "^0.6.1") (d #t) (k 1)) (d (n "query_interface") (r "^0.3.5") (d #t) (k 0)) (d (n "rand") (r "^0.6.1") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "simple_asn1") (r "^0.3.0") (d #t) (k 0)) (d (n "tokio") (r "^0.1.13") (f (quote ("async-await-preview"))) (d #t) (k 0)) (d (n "tokio-async-await") (r "^0.1.4") (d #t) (k 0)) (d (n "try_from") (r "^0.3.2") (d #t) (k 0)))) (h "18a6by26fjpmdz27icmnxkm9j2jnsa1dbs292m8ri1h2f3jskm9s")))

(define-public crate-hedera-0.4.1 (c (n "hedera") (v "0.4.1") (d (list (d (n "bip39") (r "^0.6.0-beta.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0-pre.1") (f (quote ("std" "nightly" "u64_backend"))) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.5") (d #t) (k 0)) (d (n "futures") (r "^0.3.0-alpha.12") (d #t) (k 0) (p "futures-preview")) (d (n "futures01") (r "^0.1.25") (d #t) (k 0) (p "futures")) (d (n "glob") (r "^0.2.11") (d #t) (k 1)) (d (n "grpc") (r "^0.6.1") (d #t) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 0)) (d (n "httpbis") (r "^0.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "num") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^0.1.7") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.7.1") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.3.0") (d #t) (k 2)) (d (n "protobuf") (r "^2.3.0") (d #t) (k 0)) (d (n "protoc-rust-grpc") (r "^0.6.1") (d #t) (k 1)) (d (n "query_interface") (r "^0.3.5") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.1") (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "simple_asn1") (r "^0.3.0") (d #t) (k 0)) (d (n "tokio") (r "^0.1.13") (f (quote ("async-await-preview"))) (d #t) (k 0)) (d (n "tokio-async-await") (r "^0.1.5") (d #t) (k 0)) (d (n "try_from") (r "^0.3.2") (d #t) (k 0)))) (h "10x8zmkmfca7086rhm8x0ywd85i7crgbg3l6n84y50zql7sbqia6")))

(define-public crate-hedera-0.5.0 (c (n "hedera") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0.57") (o #t) (d #t) (k 1)) (d (n "anyhow") (r "^1.0.57") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-stream") (r "^0.3.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.53") (d #t) (k 0)) (d (n "backoff") (r "^0.4.0") (d #t) (k 0)) (d (n "cbindgen") (r "^0.24.3") (o #t) (k 1)) (d (n "clap") (r "^4.0.0") (f (quote ("derive" "env"))) (d #t) (k 2)) (d (n "dotenvy") (r "^0.15.5") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("rand"))) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.0") (d #t) (k 2)) (d (n "fraction") (r "^0.11.0") (d #t) (k 0)) (d (n "futures-core") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.21") (d #t) (k 0)) (d (n "hedera-proto") (r "^0.4.0") (f (quote ("time_0_3" "fraction"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3.4") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "k256") (r "^0.11.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.135") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "pem-rfc7468") (r "^0.6.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "pkcs8") (r "^0.9.0") (d #t) (k 0)) (d (n "prost") (r "^0.11.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_0_7") (r "^0.7") (d #t) (k 0) (p "rand")) (d (n "rust_decimal") (r "^1.26.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.0.0") (f (quote ("base64" "time_0_3"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (d #t) (k 0)) (d (n "tokio") (r "^1.18.1") (f (quote ("rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio") (r "^1.18.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tonic") (r "^0.8.0") (d #t) (k 0)))) (h "1b1cwr7mp9k2h4isk64rs7vx311jfwk3w80vhyl7wk3bc3xgz4al") (f (quote (("ffi" "anyhow" "cbindgen" "libc" "fraction/with-serde-support" "ed25519-dalek/serde" "hedera-proto/serde" "serde" "serde_with" "serde_json" "time/serde" "serde/derive"))))))

(define-public crate-hedera-0.6.0 (c (n "hedera") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0.57") (o #t) (d #t) (k 1)) (d (n "anyhow") (r "^1.0.57") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-stream") (r "^0.3.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.53") (d #t) (k 0)) (d (n "backoff") (r "^0.4.0") (d #t) (k 0)) (d (n "cbindgen") (r "^0.24.3") (o #t) (k 1)) (d (n "clap") (r "^4.0.0") (f (quote ("derive" "env"))) (d #t) (k 2)) (d (n "dotenvy") (r "^0.15.5") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("rand"))) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.0") (d #t) (k 2)) (d (n "fraction") (r "^0.11.0") (d #t) (k 0)) (d (n "futures-core") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.21") (d #t) (k 0)) (d (n "hedera-proto") (r "^0.4.0") (f (quote ("time_0_3" "fraction"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3.4") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "k256") (r "^0.11.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.135") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "pem-rfc7468") (r "^0.6.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "pkcs8") (r "^0.9.0") (d #t) (k 0)) (d (n "prost") (r "^0.11.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_0_7") (r "^0.7") (d #t) (k 0) (p "rand")) (d (n "rust_decimal") (r "^1.26.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.0.0") (f (quote ("base64" "time_0_3"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (d #t) (k 0)) (d (n "tokio") (r "^1.18.1") (f (quote ("rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio") (r "^1.18.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tonic") (r "^0.8.0") (d #t) (k 0)))) (h "1k8rpxs512w7dhnzq7djh08wddxypa8j19v1k3xc8x8hb8yzy2cr") (f (quote (("ffi" "anyhow" "cbindgen" "libc" "fraction/with-serde-support" "ed25519-dalek/serde" "hedera-proto/serde" "serde" "serde_with" "serde_json" "time/serde" "serde/derive"))))))

(define-public crate-hedera-0.7.0 (c (n "hedera") (v "0.7.0") (d (list (d (n "anyhow") (r "^1.0.57") (o #t) (d #t) (k 1)) (d (n "anyhow") (r "^1.0.57") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-stream") (r "^0.3.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.53") (d #t) (k 0)) (d (n "backoff") (r "^0.4.0") (d #t) (k 0)) (d (n "cbindgen") (r "^0.24.3") (o #t) (k 1)) (d (n "clap") (r "^4.0.0") (f (quote ("derive" "env"))) (d #t) (k 2)) (d (n "dotenvy") (r "^0.15.5") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("rand"))) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.0") (d #t) (k 2)) (d (n "fraction") (r "^0.11.0") (d #t) (k 0)) (d (n "futures-core") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.21") (d #t) (k 0)) (d (n "hedera-proto") (r "^0.4.0") (f (quote ("time_0_3" "fraction"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3.4") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "k256") (r "^0.11.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.135") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "pem-rfc7468") (r "^0.6.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "pkcs8") (r "^0.9.0") (d #t) (k 0)) (d (n "prost") (r "^0.11.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_0_7") (r "^0.7") (d #t) (k 0) (p "rand")) (d (n "rust_decimal") (r "^1.26.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.0.0") (f (quote ("base64" "time_0_3"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (d #t) (k 0)) (d (n "tokio") (r "^1.18.1") (f (quote ("rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio") (r "^1.18.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tonic") (r "^0.8.0") (d #t) (k 0)))) (h "1gjixx5pgvhqxlnmiibz24blnh9r8pza2l06gvrw76278y4lmhqn") (f (quote (("ffi" "anyhow" "cbindgen" "libc" "fraction/with-serde-support" "ed25519-dalek/serde" "hedera-proto/serde" "serde" "serde_with" "serde_json" "time/serde" "serde/derive"))))))

(define-public crate-hedera-0.8.0 (c (n "hedera") (v "0.8.0") (d (list (d (n "anyhow") (r "^1.0.57") (o #t) (d #t) (k 1)) (d (n "anyhow") (r "^1.0.57") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-stream") (r "^0.3.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.53") (d #t) (k 0)) (d (n "backoff") (r "^0.4.0") (d #t) (k 0)) (d (n "cbindgen") (r "^0.24.3") (o #t) (k 1)) (d (n "clap") (r "^4.0.0") (f (quote ("derive" "env"))) (d #t) (k 2)) (d (n "dotenvy") (r "^0.15.5") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("rand"))) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.0") (d #t) (k 2)) (d (n "fraction") (r "^0.11.0") (d #t) (k 0)) (d (n "futures-core") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.21") (d #t) (k 0)) (d (n "hedera-proto") (r "^0.5.0") (f (quote ("time_0_3" "fraction"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3.4") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "k256") (r "^0.11.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.135") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "pem-rfc7468") (r "^0.6.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "pkcs8") (r "^0.9.0") (d #t) (k 0)) (d (n "prost") (r "^0.11.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_0_7") (r "^0.7") (d #t) (k 0) (p "rand")) (d (n "rust_decimal") (r "^1.26.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.0.0") (f (quote ("base64" "time_0_3"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (d #t) (k 0)) (d (n "tinystr") (r "^0.7.0") (d #t) (k 0)) (d (n "tokio") (r "^1.18.1") (f (quote ("rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio") (r "^1.18.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tonic") (r "^0.8.0") (d #t) (k 0)))) (h "0vrvbr0s41dalahdf0nvkhkx0bazamj3pxzmh5yzfawlbwf5sssp") (f (quote (("ffi" "anyhow" "cbindgen" "libc" "fraction/with-serde-support" "ed25519-dalek/serde" "hedera-proto/serde" "serde" "serde_with" "serde_json" "time/serde" "serde/derive"))))))

(define-public crate-hedera-0.9.0 (c (n "hedera") (v "0.9.0") (d (list (d (n "anyhow") (r "^1.0.57") (o #t) (d #t) (k 1)) (d (n "anyhow") (r "^1.0.57") (d #t) (k 2)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-stream") (r "^0.3.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.53") (d #t) (k 0)) (d (n "backoff") (r "^0.4.0") (d #t) (k 0)) (d (n "cbindgen") (r "^0.24.3") (o #t) (k 1)) (d (n "clap") (r "^4.0.0") (f (quote ("derive" "env"))) (d #t) (k 2)) (d (n "dotenvy") (r "^0.15.5") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("rand"))) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.0") (d #t) (k 2)) (d (n "fraction") (r "^0.11.0") (d #t) (k 0)) (d (n "futures-core") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.21") (d #t) (k 0)) (d (n "hedera-proto") (r "^0.5.1") (f (quote ("time_0_3" "fraction"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3.4") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "k256") (r "^0.11.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.135") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "pem-rfc7468") (r "^0.6.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "pkcs8") (r "^0.9.0") (d #t) (k 0)) (d (n "prost") (r "^0.11.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_0_7") (r "^0.7") (d #t) (k 0) (p "rand")) (d (n "rust_decimal") (r "^1.26.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.0.0") (f (quote ("base64" "time_0_3"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (d #t) (k 0)) (d (n "tinystr") (r "^0.7.0") (d #t) (k 0)) (d (n "tokio") (r "^1.23.1") (f (quote ("rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio") (r "^1.23.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tonic") (r "^0.8.0") (d #t) (k 0)))) (h "1jmijz86jaw3340vzjiya4fik49g4l2dsl86xwqgkmjxixcpjm3v") (f (quote (("ffi" "anyhow" "cbindgen" "libc" "fraction/with-serde-support" "ed25519-dalek/serde" "hedera-proto/serde" "serde" "serde_with" "serde_json" "time/serde" "serde/derive"))))))

(define-public crate-hedera-0.10.0 (c (n "hedera") (v "0.10.0") (d (list (d (n "anyhow") (r "^1.0.57") (o #t) (d #t) (k 1)) (d (n "anyhow") (r "^1.0.57") (d #t) (k 2)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-stream") (r "^0.3.3") (d #t) (k 0)) (d (n "backoff") (r "^0.4.0") (d #t) (k 0)) (d (n "cbindgen") (r "^0.24.3") (o #t) (k 1)) (d (n "clap") (r "^4.0.0") (f (quote ("derive" "env"))) (d #t) (k 2)) (d (n "dotenvy") (r "^0.15.5") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("rand"))) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.0") (d #t) (k 2)) (d (n "fraction") (r "^0.11.0") (d #t) (k 0)) (d (n "futures-core") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.21") (d #t) (k 0)) (d (n "hedera-proto") (r "^0.5.1") (f (quote ("time_0_3" "fraction"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3.4") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "k256") (r "^0.11.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.135") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "pem-rfc7468") (r "^0.6.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "pkcs8") (r "^0.9.0") (f (quote ("encryption"))) (k 0)) (d (n "prost") (r "^0.11.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_0_7") (r "^0.7") (d #t) (k 0) (p "rand")) (d (n "rust_decimal") (r "^1.26.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.0.0") (f (quote ("base64" "time_0_3"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (d #t) (k 0)) (d (n "tinystr") (r "^0.7.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 2)) (d (n "tonic") (r "^0.8.0") (d #t) (k 0)) (d (n "triomphe") (r "^0.1.8") (o #t) (k 0)))) (h "171yfj3dd9j00gx0f4zalz9h4w3k1clsipz6mranlg3ggyv439i6") (f (quote (("ffi" "anyhow" "cbindgen" "libc" "fraction/with-serde-support" "ed25519-dalek/serde" "hedera-proto/serde" "serde" "serde_with" "serde_json" "time/serde" "serde/derive" "triomphe"))))))

(define-public crate-hedera-0.11.0 (c (n "hedera") (v "0.11.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 2)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-stream") (r "^0.3.3") (d #t) (k 0)) (d (n "backoff") (r "^0.4.0") (d #t) (k 0)) (d (n "cbindgen") (r "^0.24.3") (o #t) (k 1)) (d (n "clap") (r "^4.0.0") (f (quote ("derive" "env"))) (d #t) (k 2)) (d (n "dotenvy") (r "^0.15.5") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^2.0.0-pre.0") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.0") (d #t) (k 2)) (d (n "fraction") (r "^0.11.0") (k 0)) (d (n "futures-core") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.21") (d #t) (k 0)) (d (n "hedera-proto") (r "^0.5.1") (f (quote ("time_0_3" "fraction"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3.4") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "k256") (r "^0.12.0") (f (quote ("arithmetic" "ecdsa" "pkcs8" "precomputed-tables" "std"))) (k 0)) (d (n "libc") (r "^0.2.135") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "pem-rfc7468") (r "^0.6.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "pkcs8") (r "^0.9.0") (f (quote ("encryption"))) (k 0)) (d (n "prost") (r "^0.11.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.26.1") (f (quote ("std"))) (k 0)) (d (n "serde") (r "^1.0.137") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.0.0") (f (quote ("base64" "time_0_3"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (d #t) (k 0)) (d (n "tinystr") (r "^0.7.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 2)) (d (n "tonic") (r "^0.8.0") (d #t) (k 0)) (d (n "triomphe") (r "^0.1.8") (o #t) (k 0)))) (h "19dmpyy5ddlvf12qd9vqbmq4f3ilsl5sjf26q2ir86jgy6ms26f9") (f (quote (("ffi" "cbindgen" "libc" "hedera-proto/serde" "serde" "serde_with" "serde_json" "time/serde" "serde/derive" "triomphe" "rust_decimal/serde"))))))

(define-public crate-hedera-0.12.0 (c (n "hedera") (v "0.12.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 2)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-stream") (r "^0.3.3") (d #t) (k 0)) (d (n "backoff") (r "^0.4.0") (d #t) (k 0)) (d (n "cbindgen") (r "^0.24.3") (o #t) (k 1)) (d (n "clap") (r "^4.0.0") (f (quote ("derive" "env"))) (d #t) (k 2)) (d (n "dotenvy") (r "^0.15.5") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^2.0.0-pre.0") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.0") (d #t) (k 2)) (d (n "fraction") (r "^0.11.0") (k 0)) (d (n "futures-core") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.21") (d #t) (k 0)) (d (n "hedera-proto") (r "^0.6.0") (f (quote ("time_0_3" "fraction"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3.4") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "k256") (r "^0.12.0") (f (quote ("arithmetic" "ecdsa" "pkcs8" "precomputed-tables" "std"))) (k 0)) (d (n "libc") (r "^0.2.135") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "pem-rfc7468") (r "^0.6.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "pkcs8") (r "^0.9.0") (f (quote ("encryption"))) (k 0)) (d (n "prost") (r "^0.11.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.26.1") (f (quote ("std"))) (k 0)) (d (n "serde") (r "^1.0.137") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.0.0") (f (quote ("base64" "time_0_3"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (d #t) (k 0)) (d (n "tinystr") (r "^0.7.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 2)) (d (n "tonic") (r "^0.8.0") (d #t) (k 0)) (d (n "triomphe") (r "^0.1.8") (o #t) (k 0)))) (h "1jkmjjlcr48x8id3blqqfpm3rjls7rx6j1yg99k36f3njfqhq2y4") (f (quote (("mnemonic") ("ffi" "cbindgen" "libc" "hedera-proto/serde" "serde" "serde_with" "serde_json" "time/serde" "serde/derive" "triomphe" "rust_decimal/serde") ("default" "mnemonic"))))))

(define-public crate-hedera-0.13.0 (c (n "hedera") (v "0.13.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 2)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-stream") (r "^0.3.3") (d #t) (k 0)) (d (n "backoff") (r "^0.4.0") (d #t) (k 0)) (d (n "clap") (r "^4.0.0") (f (quote ("derive" "env"))) (d #t) (k 2)) (d (n "dotenvy") (r "^0.15.5") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^2.0.0-pre.0") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.0") (d #t) (k 2)) (d (n "fraction") (r "^0.11.0") (k 0)) (d (n "futures-core") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.21") (d #t) (k 0)) (d (n "hedera-proto") (r "^0.6.0") (f (quote ("time_0_3" "fraction"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3.4") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "k256") (r "^0.12.0") (f (quote ("arithmetic" "ecdsa" "pkcs8" "precomputed-tables" "std"))) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "pem-rfc7468") (r "^0.6.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "pkcs8") (r "^0.9.0") (f (quote ("encryption"))) (k 0)) (d (n "prost") (r "^0.11.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.26.1") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (d #t) (k 0)) (d (n "tinystr") (r "^0.7.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 2)) (d (n "tonic") (r "^0.8.0") (d #t) (k 0)))) (h "1xzjipwhbl74qjkpp4l8nna1nqdg9ykssk1bizaw5a2r300fsxgj") (f (quote (("mnemonic") ("default" "mnemonic"))))))

(define-public crate-hedera-0.14.0 (c (n "hedera") (v "0.14.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 2)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-stream") (r "^0.3.3") (d #t) (k 0)) (d (n "backoff") (r "^0.4.0") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "clap") (r "^4.0.0") (f (quote ("derive" "env"))) (d #t) (k 2)) (d (n "dotenvy") (r "^0.15.5") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^2.0.0-pre.0") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "expect-test") (r "^1.4.0") (d #t) (k 2)) (d (n "fraction") (r "^0.11.0") (k 0)) (d (n "futures-core") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.21") (d #t) (k 0)) (d (n "hedera-proto") (r "^0.6.0") (f (quote ("time_0_3" "fraction"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3.4") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "k256") (r "^0.12.0") (f (quote ("arithmetic" "ecdsa" "pkcs8" "precomputed-tables" "std"))) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "pem-rfc7468") (r "^0.6.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "pkcs8") (r "^0.9.0") (f (quote ("encryption"))) (k 0)) (d (n "prost") (r "^0.11.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rlp") (r "^0.5.2") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.26.1") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (d #t) (k 0)) (d (n "tinystr") (r "^0.7.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 2)) (d (n "tonic") (r "^0.8.0") (d #t) (k 0)))) (h "1fdg0ijwd7gwh4q2a22317qzbgczrqixd4iax4lp7lj2bbl1fvsy") (f (quote (("mnemonic") ("default" "mnemonic"))))))

(define-public crate-hedera-0.15.0 (c (n "hedera") (v "0.15.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 2)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-stream") (r "^0.3.3") (d #t) (k 0)) (d (n "backoff") (r "^0.4.0") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (k 0)) (d (n "clap") (r "^4.0.0") (f (quote ("derive" "env"))) (d #t) (k 2)) (d (n "dotenvy") (r "^0.15.5") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^2.0.0-rc.2") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (f (quote ("auto-color" "color" "humantime"))) (k 2)) (d (n "expect-test") (r "^1.4.0") (d #t) (k 2)) (d (n "fraction") (r "^0.13.0") (k 0)) (d (n "futures-core") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.21") (k 0)) (d (n "hedera-proto") (r "^0.7.0") (f (quote ("time_0_3" "fraction"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.0") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "k256") (r "^0.13.0") (f (quote ("ecdsa" "precomputed-tables" "std"))) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 2)) (d (n "pbkdf2") (r "^0.12.0") (k 0)) (d (n "pem-rfc7468") (r "^0.7.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "pkcs8") (r "^0.10.0") (f (quote ("encryption"))) (k 0)) (d (n "prost") (r "^0.11") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rlp") (r "^0.5.2") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.26.1") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (d #t) (k 0)) (d (n "tinystr") (r "^0.7.0") (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tonic") (r "^0.9.0") (d #t) (k 0)))) (h "1qqqm6i1vzmz18rig72d7i8ib15v3j1gl3405z3nfdvncs9gargj") (f (quote (("mnemonic") ("default" "mnemonic"))))))

(define-public crate-hedera-0.16.0 (c (n "hedera") (v "0.16.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 2)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-stream") (r "^0.3.3") (d #t) (k 0)) (d (n "backoff") (r "^0.4.0") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (k 0)) (d (n "clap") (r "^4.0.0") (f (quote ("derive" "env"))) (d #t) (k 2)) (d (n "dotenvy") (r "^0.15.5") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^2.0.0-rc.2") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (f (quote ("auto-color" "color" "humantime"))) (k 2)) (d (n "expect-test") (r "^1.4.0") (d #t) (k 2)) (d (n "fraction") (r "^0.13.0") (k 0)) (d (n "futures-core") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.21") (k 0)) (d (n "hedera-proto") (r "^0.7.0") (f (quote ("time_0_3" "fraction"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.0") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "k256") (r "^0.13.0") (f (quote ("ecdsa" "precomputed-tables" "std"))) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 2)) (d (n "pbkdf2") (r "^0.12.0") (k 0)) (d (n "pem-rfc7468") (r "^0.7.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "pkcs8") (r "^0.10.0") (f (quote ("encryption"))) (k 0)) (d (n "prost") (r "^0.11") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rlp") (r "^0.5.2") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.26.1") (f (quote ("std"))) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (d #t) (k 0)) (d (n "tinystr") (r "^0.7.0") (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tonic") (r "^0.9.0") (d #t) (k 0)) (d (n "triomphe") (r "^0.1.8") (f (quote ("std" "arc-swap" "unsize"))) (k 0)) (d (n "unsize") (r "^1.1.0") (d #t) (k 0)))) (h "0swsryn3svqh647gsryr5d71w9invvkq9d75xwdk2kfm1xj03ad7") (f (quote (("mnemonic") ("default" "mnemonic"))))))

(define-public crate-hedera-0.17.0 (c (n "hedera") (v "0.17.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 2)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-stream") (r "^0.3.3") (d #t) (k 0)) (d (n "backoff") (r "^0.4.0") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (k 0)) (d (n "clap") (r "^4.0.0") (f (quote ("derive" "env"))) (d #t) (k 2)) (d (n "dotenvy") (r "^0.15.5") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^2.0.0-rc.2") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (f (quote ("auto-color" "color" "humantime"))) (k 2)) (d (n "expect-test") (r "^1.4.0") (d #t) (k 2)) (d (n "fraction") (r "^0.13.0") (k 0)) (d (n "futures-core") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.21") (k 0)) (d (n "hedera-proto") (r "^0.7.0") (f (quote ("time_0_3" "fraction"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.0") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "k256") (r "^0.13.0") (f (quote ("ecdsa" "precomputed-tables" "std"))) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "miniserde") (r "^0.1.30") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 2)) (d (n "pbkdf2") (r "^0.12.0") (k 0)) (d (n "pem-rfc7468") (r "^0.7.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "pkcs8") (r "^0.10.0") (f (quote ("encryption"))) (k 0)) (d (n "prost") (r "^0.11") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rlp") (r "^0.5.2") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.26.1") (f (quote ("std"))) (k 0)) (d (n "serde") (r "^1.0.163") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.163") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (d #t) (k 0)) (d (n "tinystr") (r "^0.7.0") (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tonic") (r "^0.9.0") (d #t) (k 0)) (d (n "triomphe") (r "^0.1.8") (f (quote ("std" "arc-swap" "unsize"))) (k 0)) (d (n "unsize") (r "^1.1.0") (d #t) (k 0)))) (h "1w3awlylv7ak8av94jb15gvyg9ib4cv8ijhfkhp890gk00hp4f18") (f (quote (("mnemonic") ("default" "mnemonic" "serde")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_derive" "dep:serde_json"))))))

(define-public crate-hedera-0.18.0 (c (n "hedera") (v "0.18.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 2)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-stream") (r "^0.3.3") (d #t) (k 0)) (d (n "backoff") (r "^0.4.0") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (k 0)) (d (n "clap") (r "^4.0.0") (f (quote ("derive" "env"))) (d #t) (k 2)) (d (n "dotenvy") (r "^0.15.5") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^2.0.0-rc.2") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (f (quote ("auto-color" "color" "humantime"))) (k 2)) (d (n "expect-test") (r "^1.4.0") (d #t) (k 2)) (d (n "fraction") (r "^0.13.0") (k 0)) (d (n "futures-core") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.21") (k 0)) (d (n "hedera-proto") (r "^0.7.0") (f (quote ("time_0_3" "fraction"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.0") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "k256") (r "^0.13.0") (f (quote ("ecdsa" "precomputed-tables" "std"))) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "miniserde") (r "^0.1.30") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 2)) (d (n "pbkdf2") (r "^0.12.0") (k 0)) (d (n "pem-rfc7468") (r "^0.7.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "pkcs8") (r "^0.10.0") (f (quote ("encryption"))) (k 0)) (d (n "prost") (r "^0.11") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rlp") (r "^0.5.2") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.26.1") (f (quote ("std"))) (k 0)) (d (n "serde") (r "^1.0.163") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.163") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (d #t) (k 0)) (d (n "tinystr") (r "^0.7.0") (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("rt-multi-thread" "macros" "parking_lot"))) (d #t) (k 2)) (d (n "tonic") (r "^0.9.0") (d #t) (k 0)) (d (n "triomphe") (r "^0.1.8") (f (quote ("std" "arc-swap" "unsize"))) (k 0)) (d (n "unsize") (r "^1.1.0") (d #t) (k 0)))) (h "1c6yn8xviqw3h9k1rv1fzbch8jmq88jdv7si7dcmsp2a490x4jr2") (f (quote (("mnemonic") ("default" "mnemonic" "serde")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_derive" "dep:serde_json"))))))

(define-public crate-hedera-0.19.0 (c (n "hedera") (v "0.19.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 2)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-stream") (r "^0.3.3") (d #t) (k 0)) (d (n "backoff") (r "^0.4.0") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (k 0)) (d (n "clap") (r "^4.0.0") (f (quote ("derive" "env"))) (d #t) (k 2)) (d (n "dotenvy") (r "^0.15.5") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^2.0.0-rc.2") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (f (quote ("auto-color" "color" "humantime"))) (k 2)) (d (n "expect-test") (r "^1.4.0") (d #t) (k 2)) (d (n "fraction") (r "^0.13.0") (k 0)) (d (n "futures-core") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.21") (k 0)) (d (n "hedera-proto") (r "^0.7.0") (f (quote ("time_0_3" "fraction"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.0") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "k256") (r "^0.13.0") (f (quote ("ecdsa" "precomputed-tables" "std"))) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "miniserde") (r "^0.1.30") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 2)) (d (n "pbkdf2") (r "^0.12.0") (k 0)) (d (n "pem-rfc7468") (r "^0.7.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "pkcs8") (r "^0.10.0") (f (quote ("encryption"))) (k 0)) (d (n "prost") (r "^0.11") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rlp") (r "^0.5.2") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.26.1") (f (quote ("std"))) (k 0)) (d (n "serde") (r "^1.0.163") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.163") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (d #t) (k 0)) (d (n "tinystr") (r "^0.7.0") (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("rt-multi-thread" "macros" "parking_lot"))) (d #t) (k 2)) (d (n "tonic") (r "^0.9.0") (d #t) (k 0)) (d (n "triomphe") (r "^0.1.8") (f (quote ("std" "arc-swap" "unsize"))) (k 0)) (d (n "unsize") (r "^1.1.0") (d #t) (k 0)))) (h "1amc8h8qscgrnn2p7wlhw859kwvk1mlprhj0s3b8i9fyrd6sxij1") (f (quote (("mnemonic") ("default" "mnemonic" "serde")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_derive" "dep:serde_json"))))))

(define-public crate-hedera-0.19.1 (c (n "hedera") (v "0.19.1") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 2)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-stream") (r "^0.3.3") (d #t) (k 0)) (d (n "backoff") (r "^0.4.0") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (k 0)) (d (n "clap") (r "^4.0.0") (f (quote ("derive" "env"))) (d #t) (k 2)) (d (n "dotenvy") (r "^0.15.5") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^2.0.0-rc.2") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (f (quote ("auto-color" "color" "humantime"))) (k 2)) (d (n "expect-test") (r "^1.4.0") (d #t) (k 2)) (d (n "fraction") (r "^0.13.0") (k 0)) (d (n "futures-core") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.21") (k 0)) (d (n "hedera-proto") (r "^0.7.0") (f (quote ("time_0_3" "fraction"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.0") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.14") (k 0)) (d (n "k256") (r "^0.13.0") (f (quote ("ecdsa" "precomputed-tables" "std"))) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "miniserde") (r "^0.1.30") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 2)) (d (n "pbkdf2") (r "^0.12.0") (k 0)) (d (n "pem-rfc7468") (r "^0.7.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "pkcs8") (r "^0.10.0") (f (quote ("encryption"))) (k 0)) (d (n "prost") (r "^0.11") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rlp") (r "^0.5.2") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.26.1") (f (quote ("std"))) (k 0)) (d (n "serde") (r "^1.0.163") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.163") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (d #t) (k 0)) (d (n "tinystr") (r "^0.7.0") (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("rt-multi-thread" "macros" "parking_lot"))) (d #t) (k 2)) (d (n "tonic") (r "^0.9.0") (d #t) (k 0)) (d (n "triomphe") (r "^0.1.8") (f (quote ("std" "arc-swap" "unsize"))) (k 0)) (d (n "unsize") (r "^1.1.0") (d #t) (k 0)))) (h "1q6s8wxm9an3rqnv6ld4swc51695xfqm5lrsz3ajyyvmz5i50qvn") (f (quote (("mnemonic") ("default" "mnemonic" "serde")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_derive" "dep:serde_json"))))))

(define-public crate-hedera-0.20.0 (c (n "hedera") (v "0.20.0") (d (list (d (n "aes") (r "^0.8.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.57") (d #t) (k 2)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-stream") (r "^0.3.3") (d #t) (k 0)) (d (n "backoff") (r "^0.4.0") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (k 0)) (d (n "cbc") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "^4.0.0") (f (quote ("derive" "env"))) (d #t) (k 2)) (d (n "dotenvy") (r "^0.15.5") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^2.0.0-rc.2") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (f (quote ("auto-color" "color" "humantime"))) (k 2)) (d (n "expect-test") (r "^1.4.0") (d #t) (k 2)) (d (n "fraction") (r "^0.13.0") (k 0)) (d (n "futures-core") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.21") (k 0)) (d (n "hedera-proto") (r "^0.8.0") (f (quote ("time_0_3" "fraction"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.0") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.14") (k 0)) (d (n "k256") (r "^0.13.0") (f (quote ("ecdsa" "precomputed-tables" "std"))) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "miniserde") (r "^0.1.30") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 2)) (d (n "pbkdf2") (r "^0.12.0") (k 0)) (d (n "pem") (r "^3.0.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "pkcs8") (r "^0.10.0") (f (quote ("encryption"))) (k 0)) (d (n "prost") (r "^0.11") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rlp") (r "^0.5.2") (d #t) (k 0)) (d (n "rust_decimal") (r "=1.26.1") (f (quote ("std"))) (k 0)) (d (n "sec1") (r "^0.7.3") (f (quote ("der"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.163") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (d #t) (k 0)) (d (n "tinystr") (r "^0.7.0") (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("rt-multi-thread" "macros" "parking_lot"))) (d #t) (k 2)) (d (n "tonic") (r "^0.9.0") (f (quote ("tls" "tls-webpki-roots"))) (d #t) (k 0)) (d (n "triomphe") (r "^0.1.8") (f (quote ("std" "arc-swap" "unsize"))) (k 0)) (d (n "unsize") (r "^1.1.0") (d #t) (k 0)))) (h "1gfhfgbpfr4b22qqiyxz1n4aa5ykx61g5y05i9qmz4v34d35rlgp") (f (quote (("mnemonic") ("default" "mnemonic" "serde")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_derive" "dep:serde_json"))))))

(define-public crate-hedera-0.20.1 (c (n "hedera") (v "0.20.1") (d (list (d (n "aes") (r "^0.8.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.57") (d #t) (k 2)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-stream") (r "^0.3.3") (d #t) (k 0)) (d (n "backoff") (r "^0.4.0") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (k 0)) (d (n "cbc") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "^4.0.0") (f (quote ("derive" "env"))) (d #t) (k 2)) (d (n "dotenvy") (r "^0.15.5") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^2.0.0-rc.2") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (f (quote ("auto-color" "color" "humantime"))) (k 2)) (d (n "expect-test") (r "^1.4.0") (d #t) (k 2)) (d (n "fraction") (r "^0.13.0") (k 0)) (d (n "futures-core") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.21") (k 0)) (d (n "hedera-proto") (r "^0.8.0") (f (quote ("time_0_3" "fraction"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.0") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.14") (k 0)) (d (n "k256") (r "^0.13.0") (f (quote ("ecdsa" "precomputed-tables" "std"))) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "miniserde") (r "^0.1.30") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 2)) (d (n "pbkdf2") (r "^0.12.0") (k 0)) (d (n "pem") (r "^3.0.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "pkcs8") (r "^0.10.0") (f (quote ("encryption"))) (k 0)) (d (n "prost") (r "^0.11") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rlp") (r "^0.5.2") (d #t) (k 0)) (d (n "rust_decimal") (r "=1.26.1") (f (quote ("std"))) (k 0)) (d (n "sec1") (r "^0.7.3") (f (quote ("der"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.163") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (d #t) (k 0)) (d (n "tinystr") (r "^0.7.0") (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("rt-multi-thread" "macros" "parking_lot"))) (d #t) (k 2)) (d (n "tonic") (r "^0.9.0") (f (quote ("tls" "tls-webpki-roots"))) (d #t) (k 0)) (d (n "triomphe") (r "^0.1.8") (f (quote ("std" "arc-swap" "unsize"))) (k 0)) (d (n "unsize") (r "^1.1.0") (d #t) (k 0)))) (h "1mybj4a5q47grksfl9vqqrk297vnhavvgp62yliw69qc5d4i96mw") (f (quote (("mnemonic") ("default" "mnemonic" "serde")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_derive" "dep:serde_json"))))))

(define-public crate-hedera-0.20.2 (c (n "hedera") (v "0.20.2") (d (list (d (n "aes") (r "^0.8.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.57") (d #t) (k 2)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-stream") (r "^0.3.3") (d #t) (k 0)) (d (n "backoff") (r "^0.4.0") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (k 0)) (d (n "cbc") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "^4.0.0") (f (quote ("derive" "env"))) (d #t) (k 2)) (d (n "dotenvy") (r "^0.15.5") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (f (quote ("auto-color" "color" "humantime"))) (k 2)) (d (n "expect-test") (r "^1.4.0") (d #t) (k 2)) (d (n "fraction") (r "^0.13.0") (k 0)) (d (n "futures-core") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.21") (k 0)) (d (n "hedera-proto") (r "^0.8.1") (f (quote ("time_0_3" "fraction"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.0") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.14") (k 0)) (d (n "k256") (r "^0.13.0") (f (quote ("ecdsa" "precomputed-tables" "std"))) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "miniserde") (r "^0.1.30") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 2)) (d (n "pbkdf2") (r "^0.12.0") (k 0)) (d (n "pem") (r "^3.0.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "pkcs8") (r "^0.10.0") (f (quote ("encryption"))) (k 0)) (d (n "prost") (r "^0.11") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rlp") (r "^0.5.2") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.26.1") (f (quote ("std"))) (k 0)) (d (n "sec1") (r "^0.7.3") (f (quote ("der"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.163") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (d #t) (k 0)) (d (n "tinystr") (r "^0.7.0") (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("rt-multi-thread" "macros" "parking_lot"))) (d #t) (k 2)) (d (n "tonic") (r "^0.9.0") (f (quote ("tls" "tls-webpki-roots"))) (d #t) (k 0)) (d (n "triomphe") (r "^0.1.8") (f (quote ("std" "arc-swap" "unsize"))) (k 0)) (d (n "unsize") (r "^1.1.0") (d #t) (k 0)))) (h "00dipssrlya0lkrx23h0p28i9l8a30h9yfjcp4qrr6kvg6lrfvj7") (f (quote (("mnemonic") ("default" "mnemonic" "serde")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_derive" "dep:serde_json"))))))

(define-public crate-hedera-0.21.0 (c (n "hedera") (v "0.21.0") (d (list (d (n "aes") (r "^0.8.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.57") (d #t) (k 2)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-stream") (r "^0.3.3") (d #t) (k 0)) (d (n "backoff") (r "^0.4.0") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (k 0)) (d (n "cbc") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "^4.0.0") (f (quote ("derive" "env"))) (d #t) (k 2)) (d (n "dotenvy") (r "^0.15.5") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (f (quote ("auto-color" "color" "humantime"))) (k 2)) (d (n "expect-test") (r "^1.4.0") (d #t) (k 2)) (d (n "fraction") (r "^0.13.0") (k 0)) (d (n "futures-core") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.21") (k 0)) (d (n "hedera-proto") (r "^0.8.1") (f (quote ("time_0_3" "fraction"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.0") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.14") (k 0)) (d (n "k256") (r "^0.13.0") (f (quote ("ecdsa" "precomputed-tables" "std"))) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "miniserde") (r "^0.1.30") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 2)) (d (n "pbkdf2") (r "^0.12.0") (k 0)) (d (n "pem") (r "^3.0.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "pkcs8") (r "^0.10.0") (f (quote ("encryption"))) (k 0)) (d (n "prost") (r "^0.11") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rlp") (r "^0.5.2") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.26.1") (f (quote ("std"))) (k 0)) (d (n "sec1") (r "^0.7.3") (f (quote ("der"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.163") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (d #t) (k 0)) (d (n "tinystr") (r "^0.7.0") (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("rt-multi-thread" "macros" "parking_lot"))) (d #t) (k 2)) (d (n "tonic") (r "^0.9.0") (f (quote ("tls" "tls-webpki-roots"))) (d #t) (k 0)) (d (n "triomphe") (r "^0.1.8") (f (quote ("std" "arc-swap" "unsize"))) (k 0)) (d (n "unsize") (r "^1.1.0") (d #t) (k 0)))) (h "0vm9dgkla3w227l1rzmcwrwqyd2bali7dwgqjgfyj02gd1q8nvdz") (f (quote (("mnemonic") ("default" "mnemonic" "serde")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_derive" "dep:serde_json"))))))

(define-public crate-hedera-0.22.0 (c (n "hedera") (v "0.22.0") (d (list (d (n "aes") (r "^0.8.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.57") (d #t) (k 2)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-stream") (r "^0.3.3") (d #t) (k 0)) (d (n "backoff") (r "^0.4.0") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (k 0)) (d (n "cbc") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "^4.0.0") (f (quote ("derive" "env"))) (d #t) (k 2)) (d (n "dotenvy") (r "^0.15.5") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (f (quote ("auto-color" "color" "humantime"))) (k 2)) (d (n "expect-test") (r "^1.4.0") (d #t) (k 2)) (d (n "fraction") (r "^0.13.0") (k 0)) (d (n "futures-core") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.21") (k 0)) (d (n "hedera-proto") (r "^0.8.1") (f (quote ("time_0_3" "fraction"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.0") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.14") (k 0)) (d (n "k256") (r "^0.13.0") (f (quote ("ecdsa" "precomputed-tables" "std"))) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "miniserde") (r "^0.1.30") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 2)) (d (n "pbkdf2") (r "^0.12.0") (k 0)) (d (n "pem") (r "^3.0.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "pkcs8") (r "^0.10.0") (f (quote ("encryption"))) (k 0)) (d (n "prost") (r "^0.11") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rlp") (r "^0.5.2") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.26.1") (f (quote ("std"))) (k 0)) (d (n "sec1") (r "^0.7.3") (f (quote ("der"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.163") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (d #t) (k 0)) (d (n "tinystr") (r "^0.7.0") (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("rt-multi-thread" "macros" "parking_lot"))) (d #t) (k 2)) (d (n "tonic") (r "^0.9.0") (f (quote ("tls" "tls-webpki-roots"))) (d #t) (k 0)) (d (n "triomphe") (r "^0.1.8") (f (quote ("std" "arc-swap" "unsize"))) (k 0)) (d (n "unsize") (r "^1.1.0") (d #t) (k 0)))) (h "1jvvlbv1wq14b3rdy4j6ibzgq542yhbnjqwvfch8p9bnqxdpk7j2") (f (quote (("mnemonic") ("default" "mnemonic" "serde")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_derive" "dep:serde_json"))))))

(define-public crate-hedera-0.23.0 (c (n "hedera") (v "0.23.0") (d (list (d (n "aes") (r "^0.8.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.57") (d #t) (k 2)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-stream") (r "^0.3.3") (d #t) (k 0)) (d (n "backoff") (r "^0.4.0") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (k 0)) (d (n "cbc") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "^4.0.0") (f (quote ("derive" "env"))) (d #t) (k 2)) (d (n "dotenvy") (r "^0.15.5") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (f (quote ("auto-color" "color" "humantime"))) (k 2)) (d (n "expect-test") (r "^1.4.0") (d #t) (k 2)) (d (n "fraction") (r "^0.13.0") (k 0)) (d (n "futures-core") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.21") (k 0)) (d (n "hedera-proto") (r "^0.8.1") (f (quote ("time_0_3" "fraction"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.0") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.14") (k 0)) (d (n "k256") (r "^0.13.0") (f (quote ("ecdsa" "precomputed-tables" "std"))) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "miniserde") (r "^0.1.30") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 2)) (d (n "pbkdf2") (r "^0.12.0") (k 0)) (d (n "pem") (r "^3.0.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "pkcs8") (r "^0.10.0") (f (quote ("encryption"))) (k 0)) (d (n "prost") (r "^0.11") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rlp") (r "^0.5.2") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.26.1") (f (quote ("std"))) (k 0)) (d (n "sec1") (r "^0.7.3") (f (quote ("der"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.163") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (d #t) (k 0)) (d (n "tinystr") (r "^0.7.0") (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("rt-multi-thread" "macros" "parking_lot"))) (d #t) (k 2)) (d (n "tonic") (r "^0.9.0") (f (quote ("tls" "tls-webpki-roots"))) (d #t) (k 0)) (d (n "triomphe") (r "^0.1.8") (f (quote ("std" "arc-swap" "unsize"))) (k 0)) (d (n "unsize") (r "^1.1.0") (d #t) (k 0)))) (h "0lmw54v1v0laphvh73g8yrn6whkn4dwnqxrjzarlfxbgi2md8cdy") (f (quote (("mnemonic") ("default" "mnemonic" "serde")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_derive" "dep:serde_json"))))))

(define-public crate-hedera-0.24.0 (c (n "hedera") (v "0.24.0") (d (list (d (n "aes") (r "^0.8.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.57") (d #t) (k 2)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-stream") (r "^0.3.3") (d #t) (k 0)) (d (n "backoff") (r "^0.4.0") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (k 0)) (d (n "cbc") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "^4.0.0") (f (quote ("derive" "env"))) (d #t) (k 2)) (d (n "dotenvy") (r "^0.15.5") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (f (quote ("auto-color" "color" "humantime"))) (k 2)) (d (n "expect-test") (r "^1.4.0") (d #t) (k 2)) (d (n "fraction") (r "^0.13.0") (k 0)) (d (n "futures-core") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.21") (k 0)) (d (n "hedera-proto") (r "^0.9.0") (f (quote ("time_0_3" "fraction"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.0") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.14") (k 0)) (d (n "k256") (r "^0.13.0") (f (quote ("ecdsa" "precomputed-tables" "std"))) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "miniserde") (r "^0.1.30") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 2)) (d (n "pbkdf2") (r "^0.12.0") (k 0)) (d (n "pem") (r "^3.0.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "pkcs8") (r "^0.10.0") (f (quote ("encryption"))) (k 0)) (d (n "prost") (r "^0.11") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rlp") (r "^0.5.2") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.26.1") (f (quote ("std"))) (k 0)) (d (n "sec1") (r "^0.7.3") (f (quote ("der"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.163") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (d #t) (k 0)) (d (n "tinystr") (r "^0.7.0") (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("rt-multi-thread" "macros" "parking_lot"))) (d #t) (k 2)) (d (n "tonic") (r "^0.9.0") (f (quote ("tls" "tls-webpki-roots"))) (d #t) (k 0)) (d (n "triomphe") (r "^0.1.8") (f (quote ("std" "arc-swap" "unsize"))) (k 0)) (d (n "unsize") (r "^1.1.0") (d #t) (k 0)))) (h "1p2cfkqh61czr2syp8i8mb3kf8ik27s8jslmdp62jwmg2rk8b4xc") (f (quote (("mnemonic") ("default" "mnemonic" "serde")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_derive" "dep:serde_json"))))))

(define-public crate-hedera-0.25.0-beta.1 (c (n "hedera") (v "0.25.0-beta.1") (d (list (d (n "aes") (r "^0.8.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.57") (d #t) (k 2)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-stream") (r "^0.3.3") (d #t) (k 0)) (d (n "backoff") (r "^0.4.0") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (k 0)) (d (n "cbc") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "^4.0.0") (f (quote ("derive" "env"))) (d #t) (k 2)) (d (n "dotenvy") (r "^0.15.5") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.11.3") (f (quote ("auto-color" "color" "humantime"))) (k 2)) (d (n "expect-test") (r "^1.4.0") (d #t) (k 2)) (d (n "fraction") (r "^0.15.1") (k 0)) (d (n "futures-core") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.21") (k 0)) (d (n "hedera-proto") (r "^0.10.0") (f (quote ("time_0_3" "fraction"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.0") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "hyper") (r "^1.3.1") (k 0)) (d (n "k256") (r "^0.13.0") (f (quote ("ecdsa" "precomputed-tables" "std"))) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "miniserde") (r "^0.1.30") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 2)) (d (n "pbkdf2") (r "^0.12.0") (k 0)) (d (n "pem") (r "^3.0.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "pkcs8") (r "^0.10.0") (f (quote ("encryption"))) (k 0)) (d (n "prost") (r "^0.12.4") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rlp") (r "^0.5.2") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.26.1") (f (quote ("std"))) (k 0)) (d (n "sec1") (r "^0.7.3") (f (quote ("der"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.163") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (d #t) (k 0)) (d (n "tinystr") (r "^0.7.0") (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("rt-multi-thread" "macros" "parking_lot"))) (d #t) (k 2)) (d (n "tonic") (r "^0.11.0") (f (quote ("tls" "tls-webpki-roots"))) (d #t) (k 0)) (d (n "triomphe") (r "^0.1.8") (f (quote ("std" "arc-swap" "unsize"))) (k 0)) (d (n "unsize") (r "^1.1.0") (d #t) (k 0)))) (h "0p48bhgmvzcqq7rx3y7ghn5iphy3w937zm1244jqkxhyf998jpni") (f (quote (("mnemonic") ("default" "mnemonic" "serde")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_derive" "dep:serde_json"))))))

(define-public crate-hedera-0.25.0 (c (n "hedera") (v "0.25.0") (d (list (d (n "aes") (r "^0.8.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.57") (d #t) (k 2)) (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-stream") (r "^0.3.3") (d #t) (k 0)) (d (n "backoff") (r "^0.4.0") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (k 0)) (d (n "cbc") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "^4.0.0") (f (quote ("derive" "env"))) (d #t) (k 2)) (d (n "dotenvy") (r "^0.15.5") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.11.3") (f (quote ("auto-color" "color" "humantime"))) (k 2)) (d (n "expect-test") (r "^1.4.0") (d #t) (k 2)) (d (n "fraction") (r "^0.15.1") (k 0)) (d (n "futures-core") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.21") (k 0)) (d (n "hedera-proto") (r "^0.10.0") (f (quote ("time_0_3" "fraction"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.0") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "hyper") (r "^1.3.1") (k 0)) (d (n "k256") (r "^0.13.0") (f (quote ("ecdsa" "precomputed-tables" "std"))) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "miniserde") (r "^0.1.30") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 2)) (d (n "pbkdf2") (r "^0.12.0") (k 0)) (d (n "pem") (r "^3.0.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "pkcs8") (r "^0.10.0") (f (quote ("encryption"))) (k 0)) (d (n "prost") (r "^0.12.4") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rlp") (r "^0.5.2") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.26.1") (f (quote ("std"))) (k 0)) (d (n "sec1") (r "^0.7.3") (f (quote ("der"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.163") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (d #t) (k 0)) (d (n "tinystr") (r "^0.7.0") (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("rt-multi-thread" "macros" "parking_lot"))) (d #t) (k 2)) (d (n "tonic") (r "^0.11.0") (f (quote ("tls" "tls-webpki-roots"))) (d #t) (k 0)) (d (n "triomphe") (r "^0.1.8") (f (quote ("std" "arc-swap" "unsize"))) (k 0)) (d (n "unsize") (r "^1.1.0") (d #t) (k 0)))) (h "0dmshy8q55ahjfmds1s1ffk9sapiazyixcn42wvs43s76frj907r") (f (quote (("mnemonic") ("default" "mnemonic" "serde")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_derive" "dep:serde_json"))))))

