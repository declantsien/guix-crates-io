(define-module (crates-io he im heim-cpu) #:use-module (crates-io))

(define-public crate-heim-cpu-0.0.1 (c (n "heim-cpu") (v "0.0.1") (d (list (d (n "cfg-if") (r "^0.1.7") (d #t) (k 0)) (d (n "criterion") (r "^0.2.10") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "heim-common") (r "^0.0.1") (d #t) (k 0)) (d (n "heim-derive") (r "^0.0.1") (d #t) (k 0)) (d (n "heim-runtime") (r "^0.0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.50") (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "09hfmrh160g1gj7bdw9bjfvnr4l0f23mpkgbbw89y7sh949jyw3i") (f (quote (("doc"))))))

(define-public crate-heim-cpu-0.0.2 (c (n "heim-cpu") (v "0.0.2") (d (list (d (n "cfg-if") (r "^0.1.7") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "heim-common") (r "^0.0.2") (d #t) (k 0)) (d (n "heim-derive") (r "^0.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.51") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2.51") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach") (r "^0.2.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "runtime") (r "^0.3.0-alpha.3") (d #t) (k 2)) (d (n "winapi") (r "^0.3.7") (f (quote ("powerbase" "sysinfoapi" "winnt" "processthreadsapi" "impl-default"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0lxn6pz8aizngq5n9crs7yjpspxldi59w0sp1gb2s60z8mjz41x6") (f (quote (("doc"))))))

(define-public crate-heim-cpu-0.0.3 (c (n "heim-cpu") (v "0.0.3") (d (list (d (n "cfg-if") (r "^0.1.7") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "heim-common") (r "^0.0.3") (d #t) (k 0)) (d (n "heim-derive") (r "^0.0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.58") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2.58") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "runtime") (r "^0.3.0-alpha.6") (d #t) (k 2)) (d (n "winapi") (r "^0.3.7") (f (quote ("powerbase" "sysinfoapi" "winnt" "processthreadsapi" "impl-default"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1ykmwgd66k3ryjlpr4fa8nb6dv7a2qf6dkj13y0ykl6hqlgfbdvk") (f (quote (("doc"))))))

(define-public crate-heim-cpu-0.0.4 (c (n "heim-cpu") (v "0.0.4") (d (list (d (n "cfg-if") (r "^0.1.7") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "heim-common") (r "^0.0.4") (d #t) (k 0)) (d (n "heim-derive") (r "^0.0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.58") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2.58") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "runtime") (r "^0.3.0-alpha.6") (d #t) (k 2)) (d (n "winapi") (r "^0.3.7") (f (quote ("powerbase" "sysinfoapi" "winnt" "processthreadsapi" "impl-default" "winbase"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "09sxjmlm4py12wq8qnllkgn3029n6wpla143b8rzg9flfnlmkada") (f (quote (("doc"))))))

(define-public crate-heim-cpu-0.0.5 (c (n "heim-cpu") (v "0.0.5") (d (list (d (n "cfg-if") (r "^0.1.7") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "heim-common") (r "^0.0.5") (d #t) (k 0)) (d (n "heim-derive") (r "^0.0.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.58") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2.58") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "runtime") (r "^0.3.0-alpha.6") (d #t) (k 2)) (d (n "version-sync") (r "^0.8") (d #t) (k 2)) (d (n "winapi") (r "^0.3.7") (f (quote ("powerbase" "sysinfoapi" "winnt" "processthreadsapi" "impl-default" "winbase"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1x7g5fk05h6zz7lxks6l6w7d07b5n0jx63vi41bsqj4b4wv2lamz")))

(define-public crate-heim-cpu-0.0.6 (c (n "heim-cpu") (v "0.0.6") (d (list (d (n "cfg-if") (r "^0.1.7") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "heim-common") (r "^0.0.6") (d #t) (k 0)) (d (n "heim-derive") (r "^0.0.6") (d #t) (k 0)) (d (n "heim-runtime") (r "^0.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.58") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2.58") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "runtime") (r "^0.3.0-alpha.6") (d #t) (k 2)) (d (n "version-sync") (r "^0.8") (d #t) (k 2)) (d (n "winapi") (r "^0.3.7") (f (quote ("powerbase" "sysinfoapi" "winnt" "processthreadsapi" "impl-default" "winbase"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0qlcwsxhvv0h42wd3gjnvs46b31gqgarn5kxsx6x5mji121cn4pi") (f (quote (("runtime-polyfill" "heim-runtime/runtime-polyfill"))))))

(define-public crate-heim-cpu-0.0.7 (c (n "heim-cpu") (v "0.0.7") (d (list (d (n "cfg-if") (r "^0.1.7") (d #t) (k 0)) (d (n "futures-preview") (r "^0.3.0-alpha.18") (d #t) (k 2)) (d (n "heim-common") (r "^0.0.7") (d #t) (k 0)) (d (n "heim-derive") (r "^0.0.7") (d #t) (k 0)) (d (n "heim-runtime") (r "^0.0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "libc") (r "~0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "~0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "version-sync") (r "^0.8") (d #t) (k 2)) (d (n "winapi") (r ">= 0.3.8") (f (quote ("powerbase" "sysinfoapi" "winnt" "processthreadsapi" "impl-default" "winbase"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1ilkhb9mpwcq5vgvypznp4axfwlglbhsd61z8696rrfg56j14zrh") (f (quote (("runtime-polyfill" "heim-runtime/runtime-polyfill"))))))

(define-public crate-heim-cpu-0.0.8-alpha.1 (c (n "heim-cpu") (v "0.0.8-alpha.1") (d (list (d (n "cfg-if") (r "^0.1.7") (d #t) (k 0)) (d (n "futures-executor-preview") (r "^0.3.0-alpha.18") (d #t) (k 2)) (d (n "heim-common") (r "^0.0.8-alpha.1") (d #t) (k 0)) (d (n "heim-derive") (r "^0.0.8-alpha.1") (d #t) (k 0)) (d (n "heim-runtime") (r "^0.0.4-alpha.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "libc") (r "~0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "~0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "version-sync") (r "^0.8") (d #t) (k 2)) (d (n "winapi") (r ">= 0.3.8") (f (quote ("powerbase" "sysinfoapi" "winnt" "processthreadsapi" "impl-default" "winbase"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1hb9xx34yh8l9hah8lpjnp56gbmslwdb9plnz4win2da5rjkghk0") (f (quote (("runtime-polyfill" "heim-runtime/runtime-polyfill"))))))

(define-public crate-heim-cpu-0.0.8 (c (n "heim-cpu") (v "0.0.8") (d (list (d (n "cfg-if") (r "^0.1.7") (d #t) (k 0)) (d (n "futures-executor-preview") (r "^0.3.0-alpha.18") (d #t) (k 2)) (d (n "heim-common") (r "^0.0.8") (d #t) (k 0)) (d (n "heim-derive") (r "^0.0.8") (d #t) (k 0)) (d (n "heim-runtime") (r "^0.0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "libc") (r "~0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "~0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "version-sync") (r "^0.8") (d #t) (k 2)) (d (n "winapi") (r ">= 0.3.8") (f (quote ("powerbase" "sysinfoapi" "winnt" "processthreadsapi" "impl-default" "winbase"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1vv40q4l4ldicmpgnpc3asl4iiqnvj6ppch4slaahs5xzm6h11ap") (f (quote (("runtime-polyfill" "heim-runtime/runtime-polyfill"))))))

(define-public crate-heim-cpu-0.0.9 (c (n "heim-cpu") (v "0.0.9") (d (list (d (n "cfg-if") (r "^0.1.7") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "heim-common") (r "^0.0.9") (d #t) (k 0)) (d (n "heim-derive") (r "^0.0.9") (d #t) (k 0)) (d (n "heim-runtime") (r "^0.0.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "libc") (r "~0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "~0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "version-sync") (r "^0.8") (d #t) (k 2)) (d (n "winapi") (r ">= 0.3.8") (f (quote ("powerbase" "sysinfoapi" "winnt" "processthreadsapi" "impl-default" "winbase"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "01lbvn14n3qa2qdsk3hab724pyj9jw9iqgjja3sqm8i18v9r301j") (f (quote (("runtime-polyfill" "heim-runtime/runtime-polyfill"))))))

(define-public crate-heim-cpu-0.0.10 (c (n "heim-cpu") (v "0.0.10") (d (list (d (n "cfg-if") (r "^0.1.7") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "heim-common") (r "^0.0.10") (d #t) (k 0)) (d (n "heim-derive") (r "^0.0.10") (d #t) (k 2)) (d (n "heim-runtime") (r "^0.0.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "libc") (r "~0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "~0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "version-sync") (r "^0.8") (d #t) (k 2)) (d (n "winapi") (r ">= 0.3.8") (f (quote ("powerbase" "sysinfoapi" "minwindef" "winnt" "winerror" "processthreadsapi" "impl-default" "winbase"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "03a75fm5n44ac71h28ns7y0yi80lc6v5cbgmsxfdf6rkdmhm1fwa") (f (quote (("runtime-polyfill" "heim-runtime/runtime-polyfill"))))))

(define-public crate-heim-cpu-0.1.0-alpha.1 (c (n "heim-cpu") (v "0.1.0-alpha.1") (d (list (d (n "async-std") (r "^1.5") (d #t) (k 2)) (d (n "cfg-if") (r "~0.1") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "heim-common") (r "^0.1.0-alpha.1") (d #t) (k 0)) (d (n "heim-derive") (r "^0.1.0-alpha.1") (d #t) (k 2)) (d (n "heim-runtime") (r "^0.1.0-alpha.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "libc") (r "~0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "~0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-threaded"))) (d #t) (k 2)) (d (n "version-sync") (r "^0.8") (d #t) (k 2)) (d (n "winapi") (r ">= 0.3.8") (f (quote ("powerbase" "sysinfoapi" "minwindef" "winnt" "winerror" "processthreadsapi" "impl-default" "winbase"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0piriih8l63h38ir9vix76rgn9hn9jk20l4f8spxrgjdz053pkyq") (f (quote (("default" "heim-runtime/runtime-polyfill"))))))

(define-public crate-heim-cpu-0.1.0-beta.1 (c (n "heim-cpu") (v "0.1.0-beta.1") (d (list (d (n "cfg-if") (r "~0.1") (d #t) (k 0)) (d (n "futures") (r "~0.3") (f (quote ("std"))) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 2)) (d (n "glob") (r "~0.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "heim-common") (r "^0.1.0-beta.1") (d #t) (k 0)) (d (n "heim-derive") (r "^0.1.0-beta.1") (d #t) (k 2)) (d (n "heim-runtime") (r "^0.1.0-beta.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "libc") (r "~0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "~0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ntapi") (r "~0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "smol") (r "~0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "smol") (r "~0.1") (d #t) (k 2)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)) (d (n "winapi") (r ">=0.3.8") (f (quote ("powerbase" "sysinfoapi" "minwindef" "winnt" "winerror" "processthreadsapi" "impl-default" "winbase"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "14sn57p0gdjddhkrqq0lhh33b751hclw4jgmvim4vp6a501if382")))

(define-public crate-heim-cpu-0.1.0-beta.2 (c (n "heim-cpu") (v "0.1.0-beta.2") (d (list (d (n "cfg-if") (r "~0.1") (d #t) (k 0)) (d (n "futures") (r "~0.3") (f (quote ("std"))) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 2)) (d (n "glob") (r "~0.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "heim-common") (r "^0.1.0-beta.1") (d #t) (k 0)) (d (n "heim-derive") (r "^0.1.0-beta.1") (d #t) (k 2)) (d (n "heim-runtime") (r "^0.1.0-beta.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "libc") (r "~0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "~0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ntapi") (r "~0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "smol") (r "~0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "smol") (r "~0.1") (d #t) (k 2)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)) (d (n "winapi") (r ">=0.3.8") (f (quote ("powerbase" "sysinfoapi" "minwindef" "winnt" "winerror" "processthreadsapi" "impl-default" "winbase"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "19pc2l6k9jk4xy0934xvcf3asccwl454wj6zhns61krhrr18q24b")))

(define-public crate-heim-cpu-0.1.0-beta.3 (c (n "heim-cpu") (v "0.1.0-beta.3") (d (list (d (n "cfg-if") (r "~0.1") (d #t) (k 0)) (d (n "futures") (r "~0.3") (f (quote ("std"))) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 2)) (d (n "glob") (r "~0.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "heim-common") (r "^0.1.0-beta.1") (d #t) (k 0)) (d (n "heim-derive") (r "^0.1.0-beta.1") (d #t) (k 2)) (d (n "heim-runtime") (r "^0.1.0-beta.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "libc") (r "~0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "~0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ntapi") (r "~0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "smol") (r "~0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "smol") (r "~0.1") (d #t) (k 2)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)) (d (n "winapi") (r ">=0.3.8") (f (quote ("powerbase" "sysinfoapi" "minwindef" "winnt" "winerror" "processthreadsapi" "impl-default" "winbase"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1fy4mc2w6376y5wfs39kn5vhw8db9840l7wkm9qsc6l3b4il9cbk")))

(define-public crate-heim-cpu-0.0.11 (c (n "heim-cpu") (v "0.0.11") (d (list (d (n "cfg-if") (r "^0.1.7") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "heim-common") (r "^0.0.11") (d #t) (k 0)) (d (n "heim-derive") (r "^0.0.10") (d #t) (k 2)) (d (n "heim-runtime") (r "^0.0.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "libc") (r "~0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "~0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "version-sync") (r "^0.8") (d #t) (k 2)) (d (n "winapi") (r ">=0.3.8") (f (quote ("powerbase" "sysinfoapi" "minwindef" "winnt" "winerror" "processthreadsapi" "impl-default" "winbase"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "07xjkkngc426gcfh0g951lm7i1kb4i3srh6lyqyhi178xnbin6fc") (f (quote (("runtime-polyfill" "heim-runtime/runtime-polyfill"))))))

(define-public crate-heim-cpu-0.1.0-rc.1 (c (n "heim-cpu") (v "0.1.0-rc.1") (d (list (d (n "cfg-if") (r "~1.0") (d #t) (k 0)) (d (n "futures") (r "~0.3") (f (quote ("std"))) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0") (d #t) (k 2)) (d (n "glob") (r "~0.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "heim-common") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "heim-derive") (r "^0.1.0-rc.1") (d #t) (k 2)) (d (n "heim-runtime") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "libc") (r "~0.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "~0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ntapi") (r "~0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "smol") (r "~1.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "smol") (r "~1.2") (d #t) (k 2)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)) (d (n "winapi") (r ">=0.3.8") (f (quote ("powerbase" "sysinfoapi" "minwindef" "winnt" "winerror" "processthreadsapi" "impl-default" "winbase"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1px6rakjg8hnd39j7q9ac9268calgkl9kpsf5g9821drlc9zp9cv")))

