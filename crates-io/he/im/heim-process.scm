(define-module (crates-io he im heim-process) #:use-module (crates-io))

(define-public crate-heim-process-0.1.0 (c (n "heim-process") (v "0.1.0") (d (list (d (n "cfg-if") (r "^0.1.7") (d #t) (k 0)) (d (n "criterion") (r "^0.2.10") (d #t) (k 2)) (d (n "heim-common") (r "^0.0.1") (d #t) (k 0)) (d (n "heim-derive") (r "^0.0.1") (d #t) (k 0)) (d (n "heim-runtime") (r "^0.0.1") (d #t) (k 2)) (d (n "libc") (r "^0.2.51") (d #t) (k 0)) (d (n "tokio") (r "^0.1.18") (f (quote ("fs"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "02dsscl6vnsjf4j4vc0576fg4zpx4222dd73rxgw7b66zilxrc7c") (f (quote (("doc")))) (y #t)))

(define-public crate-heim-process-0.0.3 (c (n "heim-process") (v "0.0.3") (d (list (d (n "cfg-if") (r "^0.1.7") (d #t) (k 0)) (d (n "heim-common") (r "^0.0.3") (d #t) (k 0)) (d (n "heim-derive") (r "^0.0.3") (d #t) (k 0)) (d (n "libc") (r "^0.2.58") (d #t) (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "runtime") (r "^0.3.0-alpha.6") (d #t) (k 2)) (d (n "winapi") (r "^0.3.7") (f (quote ("minwindef"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0f31hy9b6l4nifwm8g23fg58xxx6h6d23nbc10jzd1vpq8lgh2a9") (f (quote (("doc"))))))

(define-public crate-heim-process-0.0.4 (c (n "heim-process") (v "0.0.4") (d (list (d (n "cfg-if") (r "^0.1.7") (d #t) (k 0)) (d (n "heim-common") (r "^0.0.4") (d #t) (k 0)) (d (n "heim-derive") (r "^0.0.4") (d #t) (k 0)) (d (n "libc") (r "^0.2.58") (d #t) (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "runtime") (r "^0.3.0-alpha.6") (d #t) (k 2)) (d (n "winapi") (r "^0.3.7") (f (quote ("minwindef" "winnt" "handleapi" "psapi" "processthreadsapi" "winerror"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0hycgfzp6yw0nj3bnw3ahiagd9ayj50ic13plxfwsmzngldxjlbi") (f (quote (("doc"))))))

(define-public crate-heim-process-0.0.5 (c (n "heim-process") (v "0.0.5") (d (list (d (n "cfg-if") (r "^0.1.7") (d #t) (k 0)) (d (n "heim-common") (r "^0.0.5") (d #t) (k 0)) (d (n "heim-derive") (r "^0.0.5") (d #t) (k 0)) (d (n "libc") (r "^0.2.58") (d #t) (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "runtime") (r "^0.3.0-alpha.6") (d #t) (k 2)) (d (n "version-sync") (r "^0.8") (d #t) (k 2)) (d (n "winapi") (r "^0.3.7") (f (quote ("minwindef" "winnt" "handleapi" "psapi" "processthreadsapi" "winerror"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "000n8s7vikdah03xcb2s2qs3g2ry8fy59hskqzqyw5ms9x530bcl")))

(define-public crate-heim-process-0.0.6 (c (n "heim-process") (v "0.0.6") (d (list (d (n "cfg-if") (r "^0.1.7") (d #t) (k 0)) (d (n "futures-preview") (r "^0.3.0-alpha.17") (d #t) (k 0)) (d (n "heim-common") (r "^0.0.6") (d #t) (k 0)) (d (n "heim-derive") (r "^0.0.6") (d #t) (k 0)) (d (n "heim-runtime") (r "^0.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.58") (d #t) (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ntapi") (r "^0.3.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "runtime") (r "^0.3.0-alpha.6") (d #t) (k 2)) (d (n "version-sync") (r "^0.8") (d #t) (k 2)) (d (n "winapi") (r "^0.3.7") (f (quote ("minwindef" "winnt" "handleapi" "psapi" "processthreadsapi" "winerror" "tlhelp32"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1m2c4yskjhkrgh06ivgfrx0hlf973430535x1i3fbb0c3lgn2q2l") (f (quote (("runtime-polyfill" "heim-runtime/runtime-polyfill"))))))

(define-public crate-heim-process-0.0.7 (c (n "heim-process") (v "0.0.7") (d (list (d (n "cfg-if") (r "^0.1.7") (d #t) (k 0)) (d (n "darwin-libproc") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "futures-preview") (r "^0.3.0-alpha.18") (d #t) (k 0)) (d (n "futures-timer") (r "^0.3.0") (d #t) (k 2)) (d (n "heim-common") (r "^0.0.7") (d #t) (k 0)) (d (n "heim-cpu") (r "^0.0.7") (d #t) (k 0)) (d (n "heim-derive") (r "^0.0.7") (d #t) (k 0)) (d (n "heim-net") (r "^0.0.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "heim-runtime") (r "^0.0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ntapi") (r "^0.3.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "pin-utils") (r "^0.1.0-alpha.4") (d #t) (k 2)) (d (n "version-sync") (r "^0.8") (d #t) (k 2)) (d (n "winapi") (r ">= 0.3.8") (f (quote ("impl-default" "minwindef" "winnt" "winbase" "handleapi" "psapi" "processthreadsapi" "winerror" "tlhelp32"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "13gjkvf5ax3iqv57iiv2zwfnkq96qaswnrnawj6h6kffrxy5fr91") (f (quote (("runtime-polyfill" "heim-runtime/runtime-polyfill"))))))

(define-public crate-heim-process-0.0.8-alpha.1 (c (n "heim-process") (v "0.0.8-alpha.1") (d (list (d (n "cfg-if") (r "^0.1.7") (d #t) (k 0)) (d (n "darwin-libproc") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "futures-executor-preview") (r "^0.3.0-alpha.18") (d #t) (k 2)) (d (n "futures-timer") (r "^0.4.0") (d #t) (k 2)) (d (n "heim-common") (r "^0.0.8-alpha.1") (d #t) (k 0)) (d (n "heim-cpu") (r "^0.0.8-alpha.1") (d #t) (k 0)) (d (n "heim-derive") (r "^0.0.8-alpha.1") (d #t) (k 0)) (d (n "heim-host") (r "^0.0.8-alpha.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "heim-host") (r "^0.0.8-alpha.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "heim-net") (r "^0.0.8-alpha.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "heim-runtime") (r "^0.0.4-alpha.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "memchr") (r "~2.2") (d #t) (k 0)) (d (n "ntapi") (r "^0.3.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "ordered-float") (r "~1.0") (k 0)) (d (n "pin-utils") (r "^0.1.0-alpha.4") (d #t) (k 2)) (d (n "version-sync") (r "^0.8") (d #t) (k 2)) (d (n "which") (r "~3.0") (d #t) (k 2)) (d (n "winapi") (r ">= 0.3.8") (f (quote ("impl-default" "minwindef" "winnt" "winbase" "handleapi" "psapi" "processthreadsapi" "winerror" "tlhelp32"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0zfacq650sfk4n6fp5frqgpdb2qrrjmc5chzfa48cw1w2afhsksn") (f (quote (("runtime-polyfill" "heim-runtime/runtime-polyfill"))))))

(define-public crate-heim-process-0.0.8 (c (n "heim-process") (v "0.0.8") (d (list (d (n "cfg-if") (r "^0.1.7") (d #t) (k 0)) (d (n "darwin-libproc") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "futures-executor-preview") (r "^0.3.0-alpha.18") (d #t) (k 2)) (d (n "futures-timer") (r "^0.4.0") (d #t) (k 2)) (d (n "heim-common") (r "^0.0.8") (d #t) (k 0)) (d (n "heim-cpu") (r "^0.0.8") (d #t) (k 0)) (d (n "heim-derive") (r "^0.0.8") (d #t) (k 0)) (d (n "heim-host") (r "^0.0.8") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "heim-host") (r "^0.0.8") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "heim-net") (r "^0.0.8") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "heim-runtime") (r "^0.0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "memchr") (r "~2.2") (d #t) (k 0)) (d (n "ntapi") (r "^0.3.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "ordered-float") (r "~1.0") (k 0)) (d (n "pin-utils") (r "^0.1.0-alpha.4") (d #t) (k 2)) (d (n "version-sync") (r "^0.8") (d #t) (k 2)) (d (n "which") (r "~3.0") (d #t) (k 2)) (d (n "winapi") (r ">= 0.3.8") (f (quote ("impl-default" "minwindef" "winnt" "winbase" "handleapi" "psapi" "processthreadsapi" "winerror" "tlhelp32"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "08g16wy5vc3n3g0hlrbqcyzh091fng98fyiyjp3w1f9rccqp8j56") (f (quote (("runtime-polyfill" "heim-runtime/runtime-polyfill"))))))

(define-public crate-heim-process-0.0.9 (c (n "heim-process") (v "0.0.9") (d (list (d (n "cfg-if") (r "^0.1.7") (d #t) (k 0)) (d (n "darwin-libproc") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-timer") (r "^2.0") (d #t) (k 2)) (d (n "heim-common") (r "^0.0.9") (d #t) (k 0)) (d (n "heim-cpu") (r "^0.0.9") (d #t) (k 0)) (d (n "heim-derive") (r "^0.0.9") (d #t) (k 0)) (d (n "heim-host") (r "^0.0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "heim-host") (r "^0.0.9") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "heim-net") (r "^0.0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "heim-runtime") (r "^0.0.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "memchr") (r "~2.2") (d #t) (k 0)) (d (n "ntapi") (r "^0.3.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "ordered-float") (r "~1.0") (k 0)) (d (n "pin-utils") (r "^0.1.0-alpha.4") (d #t) (k 2)) (d (n "version-sync") (r "^0.8") (d #t) (k 2)) (d (n "which") (r "~3.1") (d #t) (k 2)) (d (n "winapi") (r ">= 0.3.8") (f (quote ("impl-default" "minwindef" "winnt" "winbase" "handleapi" "psapi" "processthreadsapi" "winerror" "tlhelp32"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0ya38vl1ivb25q0g0hmm3h3n3ijm5f1914icic43g66w6nrmh2mj") (f (quote (("runtime-polyfill" "heim-runtime/runtime-polyfill"))))))

(define-public crate-heim-process-0.0.10 (c (n "heim-process") (v "0.0.10") (d (list (d (n "cfg-if") (r "^0.1.7") (d #t) (k 0)) (d (n "darwin-libproc") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-timer") (r "^2.0") (d #t) (k 2)) (d (n "heim-common") (r "^0.0.10") (d #t) (k 0)) (d (n "heim-cpu") (r "^0.0.10") (d #t) (k 0)) (d (n "heim-derive") (r "^0.0.10") (d #t) (k 2)) (d (n "heim-host") (r "^0.0.10") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "heim-host") (r "^0.0.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "heim-net") (r "^0.0.10") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "heim-runtime") (r "^0.0.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "memchr") (r "~2.3") (d #t) (k 0)) (d (n "ntapi") (r "^0.3.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "ordered-float") (r "~1.0") (k 0)) (d (n "pin-utils") (r "^0.1.0-alpha.4") (d #t) (k 2)) (d (n "version-sync") (r "^0.8") (d #t) (k 2)) (d (n "which") (r "~3.1") (d #t) (k 2)) (d (n "winapi") (r ">= 0.3.8") (f (quote ("impl-default" "minwindef" "winnt" "winbase" "handleapi" "psapi" "processthreadsapi" "winerror" "tlhelp32"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1pjry0z7l938s0ykal94javmi8s57w7j6f0w4syadkmym3y2k3ic") (f (quote (("runtime-polyfill" "heim-runtime/runtime-polyfill"))))))

(define-public crate-heim-process-0.1.1-alpha.1 (c (n "heim-process") (v "0.1.1-alpha.1") (d (list (d (n "async-std") (r "^1.5") (d #t) (k 2)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "cfg-if") (r "~0.1") (d #t) (k 0)) (d (n "darwin-libproc") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-timer") (r "^2.0") (d #t) (k 2)) (d (n "heim-common") (r "^0.1.0-alpha.1") (d #t) (k 0)) (d (n "heim-cpu") (r "^0.1.0-alpha.1") (k 0)) (d (n "heim-derive") (r "^0.1.0-alpha.1") (d #t) (k 2)) (d (n "heim-host") (r "^0.1.0-alpha.1") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "heim-host") (r "^0.1.0-alpha.1") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "heim-net") (r "^0.1.0-alpha.1") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "heim-runtime") (r "^0.1.0-alpha.1") (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "memchr") (r "^2.2") (d #t) (k 0)) (d (n "ntapi") (r "^0.3.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "ordered-float") (r "~1.0") (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-threaded"))) (d #t) (k 2)) (d (n "version-sync") (r "^0.8") (d #t) (k 2)) (d (n "which") (r "^3.1") (k 2)) (d (n "winapi") (r ">= 0.3.8") (f (quote ("impl-default" "minwindef" "winnt" "winbase" "handleapi" "psapi" "processthreadsapi" "winerror" "tlhelp32"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0jc3x47lfvmnzdv8zbg54k2ihbsklf5ifza50ccbwwdig5wswwcy") (f (quote (("default" "heim-runtime/runtime-polyfill"))))))

(define-public crate-heim-process-0.1.1-beta.1 (c (n "heim-process") (v "0.1.1-beta.1") (d (list (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "cfg-if") (r "~0.1") (d #t) (k 0)) (d (n "darwin-libproc") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "futures") (r "~0.3") (t "cfg(unix)") (k 0)) (d (n "futures") (r "~0.3") (k 2)) (d (n "futures-timer") (r "^3.0") (d #t) (k 2)) (d (n "heim-common") (r "^0.1.0-beta.1") (d #t) (k 0)) (d (n "heim-cpu") (r "^0.1.0-beta.1") (d #t) (k 0)) (d (n "heim-derive") (r "^0.1.0-beta.1") (d #t) (k 2)) (d (n "heim-host") (r "^0.1.0-beta.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "heim-host") (r "^0.1.0-beta.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "heim-net") (r "^0.1.0-beta.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "heim-runtime") (r "^0.1.0-beta.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "memchr") (r "^2.2") (d #t) (k 0)) (d (n "ntapi") (r "^0.3.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "ordered-float") (r "~1.0") (k 0)) (d (n "smol") (r "~0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "smol") (r "~0.1") (d #t) (k 2)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)) (d (n "which") (r "^3.1") (k 2)) (d (n "winapi") (r ">=0.3.8") (f (quote ("impl-default" "minwindef" "winnt" "winbase" "handleapi" "psapi" "processthreadsapi" "winerror" "tlhelp32"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "08ykn0kr75jzl7byyg5yrnai9cwcdrnih05329n797bwdw5276xc")))

(define-public crate-heim-process-0.1.1-beta.2 (c (n "heim-process") (v "0.1.1-beta.2") (d (list (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "cfg-if") (r "~0.1") (d #t) (k 0)) (d (n "darwin-libproc") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "futures") (r "~0.3") (t "cfg(unix)") (k 0)) (d (n "futures") (r "~0.3") (k 2)) (d (n "futures-timer") (r "^3.0") (d #t) (k 2)) (d (n "heim-common") (r "^0.1.0-beta.1") (d #t) (k 0)) (d (n "heim-cpu") (r "^0.1.0-beta.2") (d #t) (k 0)) (d (n "heim-derive") (r "^0.1.0-beta.1") (d #t) (k 2)) (d (n "heim-host") (r "^0.1.0-beta.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "heim-host") (r "^0.1.0-beta.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "heim-net") (r "^0.1.0-beta.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "heim-runtime") (r "^0.1.0-beta.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "memchr") (r "^2.2") (d #t) (k 0)) (d (n "ntapi") (r "^0.3.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "ordered-float") (r "~1.0") (k 0)) (d (n "smol") (r "~0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "smol") (r "~0.1") (d #t) (k 2)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)) (d (n "which") (r "^3.1") (k 2)) (d (n "winapi") (r ">=0.3.8") (f (quote ("impl-default" "minwindef" "winnt" "winbase" "handleapi" "psapi" "processthreadsapi" "winerror" "tlhelp32"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "038pq1nl89lf31larlh0m8liggfml0yr8z6p1l35939w562i03qr")))

(define-public crate-heim-process-0.1.1-beta.3 (c (n "heim-process") (v "0.1.1-beta.3") (d (list (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "cfg-if") (r "~0.1") (d #t) (k 0)) (d (n "darwin-libproc") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "futures") (r "~0.3") (t "cfg(unix)") (k 0)) (d (n "futures") (r "~0.3") (k 2)) (d (n "futures-timer") (r "^3.0") (d #t) (k 2)) (d (n "heim-common") (r "^0.1.0-beta.1") (d #t) (k 0)) (d (n "heim-cpu") (r "^0.1.0-beta.3") (d #t) (k 0)) (d (n "heim-derive") (r "^0.1.0-beta.1") (d #t) (k 2)) (d (n "heim-host") (r "^0.1.0-beta.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "heim-host") (r "^0.1.0-beta.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "heim-net") (r "^0.1.0-beta.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "heim-runtime") (r "^0.1.0-beta.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "memchr") (r "^2.2") (d #t) (k 0)) (d (n "ntapi") (r "^0.3.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "ordered-float") (r "~1.0") (k 0)) (d (n "smol") (r "~0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "smol") (r "~0.1") (d #t) (k 2)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)) (d (n "which") (r "^3.1") (k 2)) (d (n "winapi") (r ">=0.3.8") (f (quote ("impl-default" "minwindef" "winnt" "winbase" "handleapi" "psapi" "processthreadsapi" "winerror" "tlhelp32"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1bmmvsacdxafnznjvyi8n7vdwk5f4dcsc65zm6v8i9495bmrv5px")))

(define-public crate-heim-process-0.0.11 (c (n "heim-process") (v "0.0.11") (d (list (d (n "cfg-if") (r "^0.1.7") (d #t) (k 0)) (d (n "darwin-libproc") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-timer") (r "^2.0") (d #t) (k 2)) (d (n "heim-common") (r "^0.0.11") (d #t) (k 0)) (d (n "heim-cpu") (r "^0.0.11") (d #t) (k 0)) (d (n "heim-derive") (r "^0.0.10") (d #t) (k 2)) (d (n "heim-host") (r "^0.0.11") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "heim-host") (r "^0.0.11") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "heim-net") (r "^0.0.11") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "heim-runtime") (r "^0.0.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "memchr") (r "~2.3") (d #t) (k 0)) (d (n "ntapi") (r "^0.3.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "ordered-float") (r "~1.0") (k 0)) (d (n "pin-utils") (r "^0.1.0-alpha.4") (d #t) (k 2)) (d (n "version-sync") (r "^0.8") (d #t) (k 2)) (d (n "which") (r "~3.1") (d #t) (k 2)) (d (n "winapi") (r ">=0.3.8") (f (quote ("impl-default" "minwindef" "winnt" "winbase" "handleapi" "psapi" "processthreadsapi" "winerror" "tlhelp32"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0z77dh7n6n3nwl85n7za536npgp6y65gk0id5bg10w5p1kz1gg2q") (f (quote (("runtime-polyfill" "heim-runtime/runtime-polyfill"))))))

(define-public crate-heim-process-0.1.1-rc.1 (c (n "heim-process") (v "0.1.1-rc.1") (d (list (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "cfg-if") (r "~1.0") (d #t) (k 0)) (d (n "darwin-libproc") (r "^0.2.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "futures") (r "~0.3") (t "cfg(unix)") (k 0)) (d (n "futures") (r "~0.3") (k 2)) (d (n "futures-timer") (r "^3.0") (d #t) (k 2)) (d (n "heim-common") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "heim-cpu") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "heim-derive") (r "^0.1.0-rc.1") (d #t) (k 2)) (d (n "heim-host") (r "^0.1.0-rc.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "heim-host") (r "^0.1.0-rc.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "heim-net") (r "^0.1.0-rc.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "heim-runtime") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "memchr") (r "^2.2") (d #t) (k 0)) (d (n "ntapi") (r "^0.3.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "ordered-float") (r "~2.0") (k 0)) (d (n "smol") (r "~1.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "smol") (r "~1.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1") (d #t) (k 2)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)) (d (n "which") (r "~4.0") (k 2)) (d (n "winapi") (r ">=0.3.8") (f (quote ("impl-default" "minwindef" "winnt" "winbase" "handleapi" "psapi" "processthreadsapi" "winerror" "tlhelp32"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0ffgw85bbvpc9g872g4y6spy0lrm63s1x7vhzqbvhaaxqym70s1q")))

