(define-module (crates-io he im heim-host) #:use-module (crates-io))

(define-public crate-heim-host-0.0.1 (c (n "heim-host") (v "0.0.1") (d (list (d (n "cfg-if") (r "^0.1.7") (d #t) (k 0)) (d (n "criterion") (r "^0.2.10") (d #t) (k 2)) (d (n "heim-common") (r "^0.0.1") (d #t) (k 0)) (d (n "heim-derive") (r "^0.0.1") (d #t) (k 0)) (d (n "heim-runtime") (r "^0.0.1") (d #t) (k 2)) (d (n "libc") (r "^0.2.50") (d #t) (t "cfg(unix)") (k 0)) (d (n "platforms") (r "^0.2.0") (d #t) (k 0)))) (h "0cxkkxizywrjhgx12mj42w5250747w9xz0x8zf1jjyvi7dcqyg1z") (f (quote (("doc"))))))

(define-public crate-heim-host-0.0.2 (c (n "heim-host") (v "0.0.2") (d (list (d (n "cfg-if") (r "^0.1.7") (d #t) (k 0)) (d (n "heim-common") (r "^0.0.2") (d #t) (k 0)) (d (n "heim-derive") (r "^0.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2.51") (d #t) (k 0)) (d (n "platforms") (r "^0.2.0") (d #t) (k 0)) (d (n "runtime") (r "^0.3.0-alpha.3") (d #t) (k 2)) (d (n "winapi") (r "^0.3.7") (f (quote ("sysinfoapi" "libloaderapi" "minwindef" "winnt" "ntdef"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "147rhbmhkd6c9s5wj5nnd85qhqw2dqyiv88hig4496vw5afknkx2") (f (quote (("doc"))))))

(define-public crate-heim-host-0.0.3 (c (n "heim-host") (v "0.0.3") (d (list (d (n "cfg-if") (r "^0.1.7") (d #t) (k 0)) (d (n "heim-common") (r "^0.0.3") (d #t) (k 0)) (d (n "heim-derive") (r "^0.0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2.58") (d #t) (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "platforms") (r "^0.2.0") (d #t) (k 0)) (d (n "runtime") (r "^0.3.0-alpha.6") (d #t) (k 2)) (d (n "winapi") (r "^0.3.7") (f (quote ("sysinfoapi" "libloaderapi" "minwindef" "winnt" "ntdef"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "09dki3v1nrv5aii2jr8hh7w63zzxzb8vkm2pk7gqvxqlhlj4y6r2") (f (quote (("doc"))))))

(define-public crate-heim-host-0.0.4 (c (n "heim-host") (v "0.0.4") (d (list (d (n "cfg-if") (r "^0.1.7") (d #t) (k 0)) (d (n "heim-common") (r "^0.0.4") (d #t) (k 0)) (d (n "heim-derive") (r "^0.0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2.58") (d #t) (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "platforms") (r "^0.2.0") (d #t) (k 0)) (d (n "runtime") (r "^0.3.0-alpha.6") (d #t) (k 2)) (d (n "winapi") (r "^0.3.7") (f (quote ("sysinfoapi" "libloaderapi" "minwindef" "winnt" "ntdef"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "13v4smjx84yqr3xi6hbdp33rvkb6xf5kbczncfzlw6574wcj68ac") (f (quote (("doc"))))))

(define-public crate-heim-host-0.0.5 (c (n "heim-host") (v "0.0.5") (d (list (d (n "cfg-if") (r "^0.1.7") (d #t) (k 0)) (d (n "heim-common") (r "^0.0.5") (d #t) (k 0)) (d (n "heim-derive") (r "^0.0.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2.58") (d #t) (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "platforms") (r "^0.2.0") (d #t) (k 0)) (d (n "runtime") (r "^0.3.0-alpha.6") (d #t) (k 2)) (d (n "version-sync") (r "^0.8") (d #t) (k 2)) (d (n "winapi") (r "^0.3.7") (f (quote ("sysinfoapi" "libloaderapi" "minwindef" "winnt" "ntdef"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "13lir6ldb0y8q0x667c1fcdxmpn4pj1z901gy9vr1p16b2mw2jdi")))

(define-public crate-heim-host-0.0.6 (c (n "heim-host") (v "0.0.6") (d (list (d (n "cfg-if") (r "^0.1.7") (d #t) (k 0)) (d (n "heim-common") (r "^0.0.6") (d #t) (k 0)) (d (n "heim-derive") (r "^0.0.6") (d #t) (k 0)) (d (n "heim-runtime") (r "^0.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2.58") (d #t) (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "platforms") (r "^0.2.0") (d #t) (k 0)) (d (n "runtime") (r "^0.3.0-alpha.6") (d #t) (k 2)) (d (n "version-sync") (r "^0.8") (d #t) (k 2)) (d (n "winapi") (r "^0.3.7") (f (quote ("sysinfoapi" "libloaderapi" "minwindef" "winnt" "ntdef"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "05qw047fah7akkw0hiv17n62029g69n8gamqlclvxvi66w8k3g47") (f (quote (("runtime-polyfill" "heim-runtime/runtime-polyfill"))))))

(define-public crate-heim-host-0.0.7 (c (n "heim-host") (v "0.0.7") (d (list (d (n "cfg-if") (r "^0.1.7") (d #t) (k 0)) (d (n "futures-preview") (r "^0.3.0-alpha.18") (d #t) (k 2)) (d (n "heim-common") (r "^0.0.7") (d #t) (k 0)) (d (n "heim-derive") (r "^0.0.7") (d #t) (k 0)) (d (n "heim-runtime") (r "^0.0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "platforms") (r "^0.2.0") (d #t) (k 0)) (d (n "version-sync") (r "^0.8") (d #t) (k 2)) (d (n "winapi") (r ">= 0.3.8") (f (quote ("sysinfoapi" "libloaderapi" "minwindef" "winnt" "ntdef"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1ffa7q5y5wsjsvjmypmnczp8nfkpc9sbziiy6bxvbs8bj53ywv8w") (f (quote (("runtime-polyfill" "heim-runtime/runtime-polyfill"))))))

(define-public crate-heim-host-0.0.8-alpha.1 (c (n "heim-host") (v "0.0.8-alpha.1") (d (list (d (n "cfg-if") (r "^0.1.7") (d #t) (k 0)) (d (n "futures-executor-preview") (r "^0.3.0-alpha.18") (d #t) (k 2)) (d (n "heim-common") (r "^0.0.8-alpha.1") (d #t) (k 0)) (d (n "heim-derive") (r "^0.0.8-alpha.1") (d #t) (k 0)) (d (n "heim-runtime") (r "^0.0.4-alpha.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "platforms") (r "^0.2.0") (d #t) (k 0)) (d (n "version-sync") (r "^0.8") (d #t) (k 2)) (d (n "winapi") (r ">= 0.3.8") (f (quote ("sysinfoapi" "libloaderapi" "ws2def" "winbase" "minwindef" "winnt" "ntdef"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1cgfwi2wwvr3pbgcq4m59b1ij01yhgd9pq091yga0s1mf9cch0b4") (f (quote (("runtime-polyfill" "heim-runtime/runtime-polyfill"))))))

(define-public crate-heim-host-0.0.8 (c (n "heim-host") (v "0.0.8") (d (list (d (n "cfg-if") (r "^0.1.7") (d #t) (k 0)) (d (n "futures-executor-preview") (r "^0.3.0-alpha.18") (d #t) (k 2)) (d (n "heim-common") (r "^0.0.8") (d #t) (k 0)) (d (n "heim-derive") (r "^0.0.8") (d #t) (k 0)) (d (n "heim-runtime") (r "^0.0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "platforms") (r "^0.2.0") (d #t) (k 0)) (d (n "version-sync") (r "^0.8") (d #t) (k 2)) (d (n "winapi") (r ">= 0.3.8") (f (quote ("sysinfoapi" "libloaderapi" "ws2def" "winbase" "minwindef" "winnt" "ntdef"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1lwf4py2191rqmhkhkwwnmlb06xxi23kgghicdvanswzjvaikq0x") (f (quote (("runtime-polyfill" "heim-runtime/runtime-polyfill"))))))

(define-public crate-heim-host-0.0.9 (c (n "heim-host") (v "0.0.9") (d (list (d (n "cfg-if") (r "^0.1.7") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "heim-common") (r "^0.0.9") (d #t) (k 0)) (d (n "heim-derive") (r "^0.0.9") (d #t) (k 0)) (d (n "heim-runtime") (r "^0.0.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "platforms") (r "^0.2.0") (d #t) (k 0)) (d (n "version-sync") (r "^0.8") (d #t) (k 2)) (d (n "winapi") (r ">= 0.3.8") (f (quote ("sysinfoapi" "libloaderapi" "ws2def" "winbase" "minwindef" "winnt" "ntdef"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1wx7wzzgp98bw4ajpw0nz6dq3yqv4hrz5qq3ll192iyiyz2wifb4") (f (quote (("runtime-polyfill" "heim-runtime/runtime-polyfill"))))))

(define-public crate-heim-host-0.0.10 (c (n "heim-host") (v "0.0.10") (d (list (d (n "cfg-if") (r "^0.1.7") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "heim-common") (r "^0.0.10") (d #t) (k 0)) (d (n "heim-derive") (r "^0.0.10") (d #t) (k 2)) (d (n "heim-runtime") (r "^0.0.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "platforms") (r "^0.2.0") (d #t) (k 0)) (d (n "version-sync") (r "^0.8") (d #t) (k 2)) (d (n "winapi") (r ">= 0.3.8") (f (quote ("sysinfoapi" "libloaderapi" "ws2def" "winbase" "minwindef" "winnt" "ntdef"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1w65wd1hqywhrig6hycbm9b9apfb29m65f2vzm2160mhi7dijq6l") (f (quote (("runtime-polyfill" "heim-runtime/runtime-polyfill"))))))

(define-public crate-heim-host-0.1.0-alpha.1 (c (n "heim-host") (v "0.1.0-alpha.1") (d (list (d (n "async-std") (r "^1.5") (d #t) (k 2)) (d (n "cfg-if") (r "~0.1") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "heim-common") (r "^0.1.0-alpha.1") (d #t) (k 0)) (d (n "heim-derive") (r "^0.1.0-alpha.1") (d #t) (k 2)) (d (n "heim-runtime") (r "^0.1.0-alpha.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "platforms") (r "^0.2.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-threaded"))) (d #t) (k 2)) (d (n "version-sync") (r "^0.8") (d #t) (k 2)) (d (n "winapi") (r ">= 0.3.8") (f (quote ("sysinfoapi" "libloaderapi" "ws2def" "winbase" "minwindef" "winnt" "ntdef"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1552xaxvw4l3l6c0jdbr09c5n77jhd7kv1ay4mld2vkhh539ssgx") (f (quote (("default" "heim-runtime/runtime-polyfill"))))))

(define-public crate-heim-host-0.1.0-beta.1 (c (n "heim-host") (v "0.1.0-beta.1") (d (list (d (n "cfg-if") (r "~0.1") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 2)) (d (n "heim-common") (r "^0.1.0-beta.1") (d #t) (k 0)) (d (n "heim-derive") (r "^0.1.0-beta.1") (d #t) (k 2)) (d (n "heim-runtime") (r "^0.1.0-beta.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ntapi") (r "~0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "platforms") (r "^0.2.0") (d #t) (k 0)) (d (n "smol") (r "~0.1") (d #t) (k 2)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)) (d (n "winapi") (r ">=0.3.8") (f (quote ("sysinfoapi" "ws2def" "winbase" "minwindef" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0blhssgwjh9p2bdx37wjd1rimglccrfgp8ph1x8mxm4bcp7f7k3r")))

(define-public crate-heim-host-0.0.11 (c (n "heim-host") (v "0.0.11") (d (list (d (n "cfg-if") (r "^0.1.7") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "heim-common") (r "^0.0.11") (d #t) (k 0)) (d (n "heim-derive") (r "^0.0.10") (d #t) (k 2)) (d (n "heim-runtime") (r "^0.0.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "platforms") (r "^0.2.0") (d #t) (k 0)) (d (n "version-sync") (r "^0.8") (d #t) (k 2)) (d (n "winapi") (r ">=0.3.8") (f (quote ("sysinfoapi" "libloaderapi" "ws2def" "winbase" "minwindef" "winnt" "ntdef"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0r4mv8p1sl1pki7q86037jq0zm2jlbzbd980ajxcz2nkcdakwcjy") (f (quote (("runtime-polyfill" "heim-runtime/runtime-polyfill"))))))

(define-public crate-heim-host-0.1.0-rc.1 (c (n "heim-host") (v "0.1.0-rc.1") (d (list (d (n "cfg-if") (r "~1.0") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 2)) (d (n "heim-common") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "heim-derive") (r "^0.1.0-rc.1") (d #t) (k 2)) (d (n "heim-runtime") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "~0.2") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ntapi") (r "~0.3") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "platforms") (r "~1.0") (d #t) (k 0)) (d (n "smol") (r "~1.2") (d #t) (k 2)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)) (d (n "winapi") (r ">=0.3.8") (f (quote ("sysinfoapi" "ws2def" "winbase" "minwindef" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "08j760vb03jmqf9nl5f6ybs79rfhl810gy5766mfdxn45g86rgws")))

