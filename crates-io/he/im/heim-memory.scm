(define-module (crates-io he im heim-memory) #:use-module (crates-io))

(define-public crate-heim-memory-0.0.1 (c (n "heim-memory") (v "0.0.1") (d (list (d (n "cfg-if") (r "^0.1.7") (d #t) (k 0)) (d (n "criterion") (r "^0.2.10") (d #t) (k 2)) (d (n "heim-common") (r "^0.0.1") (d #t) (k 0)) (d (n "heim-derive") (r "^0.0.1") (d #t) (k 0)) (d (n "heim-runtime") (r "^0.0.1") (d #t) (k 2)) (d (n "libc") (r "^0.2.51") (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3.6") (f (quote ("minwindef" "sysinfoapi"))) (t "cfg(windows)") (k 0)))) (h "1q32mfmkl7bwny74vkvmcyx98m7i7la6fyf8rnzvhgfx7z3v6acd") (f (quote (("doc"))))))

(define-public crate-heim-memory-0.0.2 (c (n "heim-memory") (v "0.0.2") (d (list (d (n "cfg-if") (r "^0.1.7") (d #t) (k 0)) (d (n "heim-common") (r "^0.0.2") (d #t) (k 0)) (d (n "heim-derive") (r "^0.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2.51") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2.51") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "mach") (r "^0.2.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "runtime") (r "^0.3.0-alpha.3") (d #t) (k 2)) (d (n "winapi") (r "^0.3.6") (f (quote ("minwindef" "sysinfoapi"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0cvxfwy2v9vfkghvq2gsx17z8zj2hgsmpxpb160g9yz5iln7rbr5") (f (quote (("doc"))))))

(define-public crate-heim-memory-0.0.3 (c (n "heim-memory") (v "0.0.3") (d (list (d (n "cfg-if") (r "^0.1.7") (d #t) (k 0)) (d (n "heim-common") (r "^0.0.3") (d #t) (k 0)) (d (n "heim-derive") (r "^0.0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2.58") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2.58") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "runtime") (r "^0.3.0-alpha.6") (d #t) (k 2)) (d (n "winapi") (r "^0.3.7") (f (quote ("minwindef" "sysinfoapi"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0qvg3kx26cijia7d96d9azzcd7lhdw3lj8cgkl1pqchj8iyxaxsi") (f (quote (("doc"))))))

(define-public crate-heim-memory-0.0.4 (c (n "heim-memory") (v "0.0.4") (d (list (d (n "cfg-if") (r "^0.1.7") (d #t) (k 0)) (d (n "heim-common") (r "^0.0.4") (d #t) (k 0)) (d (n "heim-derive") (r "^0.0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2.58") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2.58") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "runtime") (r "^0.3.0-alpha.6") (d #t) (k 2)) (d (n "winapi") (r "^0.3.7") (f (quote ("minwindef" "sysinfoapi"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0fywn2sim9ypkkq1145kk1ggv4k2v59fk523530ymrfv1fy8lgdk") (f (quote (("doc"))))))

(define-public crate-heim-memory-0.0.5 (c (n "heim-memory") (v "0.0.5") (d (list (d (n "cfg-if") (r "^0.1.7") (d #t) (k 0)) (d (n "heim-common") (r "^0.0.5") (d #t) (k 0)) (d (n "heim-derive") (r "^0.0.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2.58") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2.58") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "runtime") (r "^0.3.0-alpha.6") (d #t) (k 2)) (d (n "version-sync") (r "^0.8") (d #t) (k 2)) (d (n "winapi") (r "^0.3.7") (f (quote ("minwindef" "sysinfoapi"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1ish2h70kk0k8x7ibbbpv605yi8h4bb5xc32fjr1pvzpyf2hbi9p")))

(define-public crate-heim-memory-0.0.6 (c (n "heim-memory") (v "0.0.6") (d (list (d (n "cfg-if") (r "^0.1.7") (d #t) (k 0)) (d (n "heim-common") (r "^0.0.6") (d #t) (k 0)) (d (n "heim-derive") (r "^0.0.6") (d #t) (k 0)) (d (n "heim-runtime") (r "^0.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2.58") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2.58") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "runtime") (r "^0.3.0-alpha.6") (d #t) (k 2)) (d (n "version-sync") (r "^0.8") (d #t) (k 2)) (d (n "winapi") (r "^0.3.7") (f (quote ("minwindef" "sysinfoapi"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1wm3imbcskr98wiyr14z8l07ky564anwhi8wcrni7y31syj43k0b") (f (quote (("runtime-polyfill" "heim-runtime/runtime-polyfill"))))))

(define-public crate-heim-memory-0.0.7 (c (n "heim-memory") (v "0.0.7") (d (list (d (n "cfg-if") (r "^0.1.7") (d #t) (k 0)) (d (n "futures-preview") (r "^0.3.0-alpha.18") (d #t) (k 2)) (d (n "heim-common") (r "^0.0.7") (d #t) (k 0)) (d (n "heim-derive") (r "^0.0.7") (d #t) (k 0)) (d (n "heim-runtime") (r "^0.0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "~0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "~0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "version-sync") (r "^0.8") (d #t) (k 2)) (d (n "winapi") (r ">= 0.3.8") (f (quote ("minwindef" "sysinfoapi"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "137rsy9m3w6p8ndp77a5ssyzlly1hhgifzcrc5hfxmxgvj7fix9h") (f (quote (("runtime-polyfill" "heim-runtime/runtime-polyfill"))))))

(define-public crate-heim-memory-0.0.8-alpha.1 (c (n "heim-memory") (v "0.0.8-alpha.1") (d (list (d (n "cfg-if") (r "^0.1.7") (d #t) (k 0)) (d (n "futures-executor-preview") (r "^0.3.0-alpha.18") (d #t) (k 2)) (d (n "heim-common") (r "^0.0.8-alpha.1") (d #t) (k 0)) (d (n "heim-derive") (r "^0.0.8-alpha.1") (d #t) (k 0)) (d (n "heim-runtime") (r "^0.0.4-alpha.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "~0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "~0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "version-sync") (r "^0.8") (d #t) (k 2)) (d (n "winapi") (r ">= 0.3.8") (f (quote ("minwindef" "sysinfoapi"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "00z3cai8ajv7ksw42mwrqy8z3ncyz3qljgfdj8jcrbizdjdm8jj2") (f (quote (("runtime-polyfill" "heim-runtime/runtime-polyfill"))))))

(define-public crate-heim-memory-0.0.8 (c (n "heim-memory") (v "0.0.8") (d (list (d (n "cfg-if") (r "^0.1.7") (d #t) (k 0)) (d (n "futures-executor-preview") (r "^0.3.0-alpha.18") (d #t) (k 2)) (d (n "heim-common") (r "^0.0.8") (d #t) (k 0)) (d (n "heim-derive") (r "^0.0.8") (d #t) (k 0)) (d (n "heim-runtime") (r "^0.0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "~0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "~0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "version-sync") (r "^0.8") (d #t) (k 2)) (d (n "winapi") (r ">= 0.3.8") (f (quote ("minwindef" "sysinfoapi"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1ifdk6zfm35jamisgy2mblwb8k8qv6pz236dglwahz8r6djbxkd9") (f (quote (("runtime-polyfill" "heim-runtime/runtime-polyfill"))))))

(define-public crate-heim-memory-0.0.9 (c (n "heim-memory") (v "0.0.9") (d (list (d (n "cfg-if") (r "^0.1.7") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "heim-common") (r "^0.0.9") (d #t) (k 0)) (d (n "heim-derive") (r "^0.0.9") (d #t) (k 0)) (d (n "heim-runtime") (r "^0.0.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "~0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "~0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "version-sync") (r "^0.8") (d #t) (k 2)) (d (n "winapi") (r ">= 0.3.8") (f (quote ("minwindef" "sysinfoapi"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0flf2y6gqrfaaby9vhv6w9ch8cjzlj1a3x1cc9i9012pic39wknh") (f (quote (("runtime-polyfill" "heim-runtime/runtime-polyfill"))))))

(define-public crate-heim-memory-0.0.10 (c (n "heim-memory") (v "0.0.10") (d (list (d (n "cfg-if") (r "^0.1.7") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "heim-common") (r "^0.0.10") (d #t) (k 0)) (d (n "heim-derive") (r "^0.0.10") (d #t) (k 2)) (d (n "heim-runtime") (r "^0.0.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "~0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "~0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "version-sync") (r "^0.8") (d #t) (k 2)) (d (n "winapi") (r ">= 0.3.8") (f (quote ("minwindef" "sysinfoapi"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1gyk8wisry4l2hhdbj5lbxmk89jq1hzqjnyi125gd8nbrvz6csr1") (f (quote (("runtime-polyfill" "heim-runtime/runtime-polyfill"))))))

(define-public crate-heim-memory-0.1.0-alpha.1 (c (n "heim-memory") (v "0.1.0-alpha.1") (d (list (d (n "async-std") (r "^1.5") (d #t) (k 2)) (d (n "cfg-if") (r "~0.1") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "heim-common") (r "^0.1.0-alpha.1") (d #t) (k 0)) (d (n "heim-derive") (r "^0.1.0-alpha.1") (d #t) (k 2)) (d (n "heim-runtime") (r "^0.1.0-alpha.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "~0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "~0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-threaded"))) (d #t) (k 2)) (d (n "version-sync") (r "^0.8") (d #t) (k 2)) (d (n "winapi") (r ">= 0.3.8") (f (quote ("minwindef" "sysinfoapi"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0gy6gampra0vxxnlsvr2gi7kbia73w5lx5ld9w45bdgkg37zdrxj") (f (quote (("default" "heim-runtime/runtime-polyfill"))))))

(define-public crate-heim-memory-0.1.0-beta.1 (c (n "heim-memory") (v "0.1.0-beta.1") (d (list (d (n "cfg-if") (r "~0.1") (d #t) (k 0)) (d (n "heim-common") (r "^0.1.0-beta.1") (d #t) (k 0)) (d (n "heim-derive") (r "^0.1.0-beta.1") (d #t) (k 2)) (d (n "heim-runtime") (r "^0.1.0-beta.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "~0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "~0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "smol") (r "~0.1") (d #t) (k 2)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)) (d (n "winapi") (r ">=0.3.8") (f (quote ("minwindef" "sysinfoapi"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0y157id232asiacayhyjadpcyyv8fq4bjc3jk4vsxg2yzj9idwpd")))

(define-public crate-heim-memory-0.0.11 (c (n "heim-memory") (v "0.0.11") (d (list (d (n "cfg-if") (r "^0.1.7") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "heim-common") (r "^0.0.11") (d #t) (k 0)) (d (n "heim-derive") (r "^0.0.10") (d #t) (k 2)) (d (n "heim-runtime") (r "^0.0.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "~0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "~0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "version-sync") (r "^0.8") (d #t) (k 2)) (d (n "winapi") (r ">=0.3.8") (f (quote ("minwindef" "sysinfoapi"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "18z4pwkl1n1xcxgx2zyy28cds3zk7jbwfabcybj3z21n6bsq35v7") (f (quote (("runtime-polyfill" "heim-runtime/runtime-polyfill"))))))

(define-public crate-heim-memory-0.1.0-rc.1 (c (n "heim-memory") (v "0.1.0-rc.1") (d (list (d (n "cfg-if") (r "~1.0") (d #t) (k 0)) (d (n "heim-common") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "heim-derive") (r "^0.1.0-rc.1") (d #t) (k 2)) (d (n "heim-runtime") (r "^0.1.0-rc.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "~0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "~0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "smol") (r "~1.2") (d #t) (k 2)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)) (d (n "winapi") (r ">=0.3.8") (f (quote ("minwindef" "sysinfoapi"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1qg3s157b1p81lb20qgwmfn7p0a2rfjwn3jjiz3b06p8qp61pa3g")))

