(define-module (crates-io he bi hebi) #:use-module (crates-io))

(define-public crate-hebi-0.0.0 (c (n "hebi") (v "0.0.0") (h "0xvdacy114d5dkfwl8dc3894i0chvsw76ika9ahlyagi380xvcgk")))

(define-public crate-hebi-0.0.1 (c (n "hebi") (v "0.0.1") (d (list (d (n "anyhow") (r "^1.0.69") (d #t) (k 2)) (d (n "beef") (r "^0.5.2") (d #t) (k 0)) (d (n "clap") (r "^4.1.4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "derive") (r "^0.0.1") (d #t) (k 0) (p "hebi_derive")) (d (n "diag") (r "^0.0.1") (d #t) (k 0) (p "hebi_diag")) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "indoc") (r "^1.0.8") (d #t) (k 2)) (d (n "insta") (r "^1.23.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.11") (d #t) (k 0)) (d (n "rustyline") (r "^10.1.0") (d #t) (k 2)) (d (n "rustyline-derive") (r "^0.7.0") (d #t) (k 2)) (d (n "span") (r "^0.0.1") (d #t) (k 0) (p "hebi_span")) (d (n "syntax") (r "^0.0.1") (k 0) (p "hebi_syntax")))) (h "1dkhmpr8qhvzyim50wbp87qm7dhb4q2a9r3sgxy9x34l75gxwqmn") (f (quote (("portable") ("default" "check-recursion-limit") ("check-recursion-limit" "syntax/check-recursion-limit"))))))

(define-public crate-hebi-0.2.0 (c (n "hebi") (v "0.2.0") (d (list (d (n "beef") (r "^0.5.2") (d #t) (k 0)) (d (n "derive") (r "^0.2.0") (d #t) (k 0) (p "hebi_derive")) (d (n "diag") (r "^0.2.0") (d #t) (k 0) (p "hebi_diag")) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "indoc") (r "^1.0.8") (d #t) (k 2)) (d (n "insta") (r "^1.23.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.11") (d #t) (k 0)) (d (n "span") (r "^0.0.1") (d #t) (k 0) (p "hebi_span")) (d (n "syntax") (r "^0.2.0") (k 0) (p "hebi_syntax")))) (h "0wz19xyqdwhangmisgd41pk8q4h4znpk573v7shccjcq0fbw24s8") (f (quote (("portable") ("emit_snapshots") ("default" "check_recursion_limit" "emit_snapshots") ("check_recursion_limit" "syntax/check_recursion_limit"))))))

(define-public crate-hebi-0.3.0 (c (n "hebi") (v "0.3.0") (d (list (d (n "beef") (r "^0.5.2") (d #t) (k 0)) (d (n "derive") (r "^0.3.0") (d #t) (k 0) (p "hebi_derive")) (d (n "diag") (r "^0.2.0") (d #t) (k 0) (p "hebi_diag")) (d (n "dyn-clone") (r "^1.0.11") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "indoc") (r "^1.0.8") (d #t) (k 2)) (d (n "insta") (r "^1.23.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.11") (d #t) (k 0)) (d (n "span") (r "^0.0.1") (d #t) (k 0) (p "hebi_span")) (d (n "syntax") (r "^0.3.0") (k 0) (p "hebi_syntax")))) (h "1yxs857pr13c2bhfiyc9znjl19vk6h358q522g34iy5fbr3dgpck") (f (quote (("portable") ("emit_snapshots") ("default" "check_recursion_limit" "emit_snapshots") ("check_recursion_limit" "syntax/check_recursion_limit"))))))

(define-public crate-hebi-0.3.1 (c (n "hebi") (v "0.3.1") (d (list (d (n "beef") (r "^0.5.2") (d #t) (k 0)) (d (n "derive") (r "^0.3.0") (d #t) (k 0) (p "hebi_derive")) (d (n "diag") (r "^0.2.0") (d #t) (k 0) (p "hebi_diag")) (d (n "dyn-clone") (r "^1.0.11") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "indoc") (r "^1.0.8") (d #t) (k 2)) (d (n "insta") (r "^1.23.0") (d #t) (k 2)) (d (n "paste") (r "^1.0.11") (d #t) (k 0)) (d (n "span") (r "^0.0.1") (d #t) (k 0) (p "hebi_span")) (d (n "syntax") (r "^0.3.0") (k 0) (p "hebi_syntax")))) (h "1jjh69kdfa0sy6z3add50crajhxszh55cl7mdc757svxaqyspjj0") (f (quote (("portable") ("emit_snapshots") ("default" "check_recursion_limit" "emit_snapshots") ("check_recursion_limit" "syntax/check_recursion_limit"))))))

(define-public crate-hebi-0.4.0 (c (n "hebi") (v "0.4.0") (d (list (d (n "beef") (r "^0.5.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "flume") (r "^0.10.14") (d #t) (k 2)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "indoc") (r "^2.0.1") (d #t) (k 2)) (d (n "insta") (r "^1.29.0") (d #t) (k 2)) (d (n "logos") (r "^0.13.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "pollster") (r "^0.3.0") (f (quote ("macro"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (d #t) (k 2)) (d (n "serde") (r "^1.0.163") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 2)) (d (n "stacker") (r "^0.1.15") (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("macros" "rt" "time" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("rt"))) (d #t) (k 2)))) (h "09nr4m4dnv6zy7i30bxj3kwckyyap06bzmyk01bys1lhys6xinwh") (f (quote (("nanbox") ("default" "nanbox" "__check_recursion_limit" "__assert_snapshots" "__disable_verbose_logs") ("__disable_verbose_logs") ("__check_recursion_limit") ("__assert_snapshots"))))))

