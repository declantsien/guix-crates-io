(define-module (crates-io he ca heca) #:use-module (crates-io))

(define-public crate-heca-0.0.1 (c (n "heca") (v "0.0.1") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "enum_primitive") (r "^0.1.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "num") (r "^0.2.0") (d #t) (k 0)) (d (n "time") (r "^0.1.42") (d #t) (k 0)))) (h "0q2xkx9plw942k0dyqg615cxclkffhphpiljvlk93qpvgfs88chs")))

(define-public crate-heca-0.0.2 (c (n "heca") (v "0.0.2") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "enum_primitive") (r "^0.1.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "num") (r "^0.2.0") (d #t) (k 0)) (d (n "time") (r "^0.1.42") (d #t) (k 0)))) (h "003bk14zkb01a0994iccmcapk1n782cksh2b4s0xzkwsnyy9ckb8")))

(define-public crate-heca-0.0.4 (c (n "heca") (v "0.0.4") (d (list (d (n "atoi") (r "^0.3.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "chrono-english") (r "^0.1.4") (d #t) (k 0)) (d (n "clap") (r "^2.32.0") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "enum_primitive") (r "^0.1.1") (d #t) (k 0)) (d (n "heca-convert-lib") (r "^0.0.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "num") (r "^0.2.0") (d #t) (k 0)) (d (n "time") (r "^0.1.42") (d #t) (k 0)))) (h "1ygl0yns1c0qznfpmlcd2hllk9srbycbmbcz088fzlryx4x5l71n")))

(define-public crate-heca-0.1.0 (c (n "heca") (v "0.1.0") (d (list (d (n "atoi") (r "^0.3.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "chrono-english") (r "^0.1.4") (d #t) (k 0)) (d (n "clap") (r "^2.32.0") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "enum_primitive") (r "^0.1.1") (d #t) (k 0)) (d (n "heca-lib") (r "^0.1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "num") (r "^0.2.0") (d #t) (k 0)) (d (n "time") (r "^0.1.42") (d #t) (k 0)))) (h "08kvgngb27hiq3w2h0bqqnv3wywbch1v28796k61d0h2iwpw7wrx")))

(define-public crate-heca-1.0.0 (c (n "heca") (v "1.0.0") (d (list (d (n "assert_cmd") (r "^0.11") (d #t) (k 2)) (d (n "atoi") (r "^0.3.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-english") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "either") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "enum_primitive") (r "^0.1.1") (d #t) (k 0)) (d (n "heca-lib") (r "^1.0") (d #t) (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 2)) (d (n "num") (r "^0.2.0") (d #t) (k 0)) (d (n "predicates") (r "^1") (d #t) (k 2)) (d (n "rayon") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "time") (r "^0.1.42") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "xdg") (r "^2.2") (d #t) (k 0)))) (h "1vlxgckgph4251ibdzw8w7yqqf7s0y1in8a11dvpkbgdzm45yn2l")))

(define-public crate-heca-1.1.0 (c (n "heca") (v "1.1.0") (d (list (d (n "assert_cmd") (r "^0.11") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "cpuprofiler") (r "^0.0.4") (d #t) (k 0)) (d (n "either") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "heca-lib") (r "^1.0") (d #t) (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.2") (d #t) (k 2)) (d (n "predicates") (r "^1") (d #t) (k 2)) (d (n "rayon") (r "^1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "xdg") (r "^2.2") (d #t) (k 0)))) (h "0237ih8lgxjpj44x88bp54dj0i5aj5snfqy8z6kgnqfr7aq2qjmk")))

(define-public crate-heca-1.1.2 (c (n "heca") (v "1.1.2") (d (list (d (n "assert_cmd") (r "^0.11") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "cpuprofiler") (r "^0.0.4") (d #t) (k 0)) (d (n "either") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "heca-lib") (r "^1.0") (d #t) (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.2") (d #t) (k 2)) (d (n "predicates") (r "^1") (d #t) (k 2)) (d (n "rayon") (r "^1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "xdg") (r "^2.2") (d #t) (k 0)))) (h "1zfwd88gpcag5wlzyma7l3sh3rawh0cb6fafwca8896h38r5gxiw")))

(define-public crate-heca-1.1.3 (c (n "heca") (v "1.1.3") (d (list (d (n "assert_cmd") (r "^0.11") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "cpuprofiler") (r "^0.0.4") (d #t) (k 0)) (d (n "either") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "heca-lib") (r "^1.0") (d #t) (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.2") (d #t) (k 2)) (d (n "predicates") (r "^1") (d #t) (k 2)) (d (n "rayon") (r "^1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "xdg") (r "^2.2") (d #t) (k 0)))) (h "08bx70djqa4pqkpzsq76w1ywi4afcjfscbb58hmfv64790n4c8z5")))

(define-public crate-heca-1.2.0 (c (n "heca") (v "1.2.0") (d (list (d (n "assert_cmd") (r "^0.11") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "either") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "heca-lib") (r "^1.0") (d #t) (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.2") (d #t) (k 2)) (d (n "predicates") (r "^1") (d #t) (k 2)) (d (n "rayon") (r "^1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "xdg") (r "^2.2") (d #t) (k 0)))) (h "1i1p53wjvj4yj6c427bnn998i91qjdxxng23czy42p5hb85fwrwd")))

(define-public crate-heca-1.2.1 (c (n "heca") (v "1.2.1") (d (list (d (n "assert_cmd") (r "^0.11") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "either") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "heca-lib") (r "^1.0") (d #t) (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.2") (d #t) (k 2)) (d (n "predicates") (r "^1") (d #t) (k 2)) (d (n "rayon") (r "^1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "xdg") (r "^2.2") (d #t) (k 0)))) (h "0rzrrk8ldaqwy5vj5f40jql80mdcxiqhqr6sjwyfn53ly280pnl4")))

(define-public crate-heca-1.2.2 (c (n "heca") (v "1.2.2") (d (list (d (n "assert_cmd") (r "^0.11") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "either") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "heca-lib") (r "^1.0") (d #t) (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.2") (d #t) (k 2)) (d (n "predicates") (r "^1") (d #t) (k 2)) (d (n "rayon") (r "^1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "xdg") (r "^2.2") (d #t) (k 0)))) (h "1qhv7vkdvyhyvs64h9w0szg7cvxbskv5n30ca9cm4xdw7ychx54f")))

(define-public crate-heca-1.3.3 (c (n "heca") (v "1.3.3") (d (list (d (n "assert_cmd") (r "^0.11") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "cpuprofiler") (r "^0.0.4") (d #t) (k 0)) (d (n "either") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "heca-lib") (r "^1.0") (d #t) (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.2") (d #t) (k 2)) (d (n "predicates") (r "^1") (d #t) (k 2)) (d (n "rayon") (r "^1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "xdg") (r "^2.2") (d #t) (k 0)))) (h "0i8q09inhr9qnwgx2hnf036r5iiwwfcvqcnl9bnfnhp2wjcf3d3g") (f (quote (("profile"))))))

(define-public crate-heca-1.3.4 (c (n "heca") (v "1.3.4") (d (list (d (n "assert_cmd") (r "^0.11") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "cpuprofiler") (r "^0.0.4") (d #t) (k 0)) (d (n "either") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "heca-lib") (r "^1.0") (d #t) (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.2") (d #t) (k 2)) (d (n "predicates") (r "^1") (d #t) (k 2)) (d (n "rayon") (r "^1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "xdg") (r "^2.2") (d #t) (k 0)))) (h "1yc397xc1w8kilaj0835cvsbq1pzcamsac3glhg5qrf414dfvpky") (f (quote (("profile"))))))

(define-public crate-heca-1.4.0 (c (n "heca") (v "1.4.0") (d (list (d (n "assert_cmd") (r "^0.12") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "cpuprofiler") (r "^0.0.4") (d #t) (k 0)) (d (n "either") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "heca-lib") (r "^1.0") (d #t) (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.2") (d #t) (k 2)) (d (n "predicates") (r "^1") (d #t) (k 2)) (d (n "rayon") (r "^1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "xdg") (r "^2.2") (d #t) (k 0)))) (h "1zw9k9xzhjhmf93zbc1qyq65hqr9frwzf7673wzn96gfymrklbp5") (f (quote (("profile"))))))

(define-public crate-heca-1.4.1 (c (n "heca") (v "1.4.1") (d (list (d (n "assert_cmd") (r "^0.12") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "cpuprofiler") (r "^0.0.4") (d #t) (k 0)) (d (n "either") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "heca-lib") (r "^1.0") (d #t) (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.2") (d #t) (k 2)) (d (n "predicates") (r "^1") (d #t) (k 2)) (d (n "rayon") (r "^1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "xdg") (r "^2.2") (d #t) (k 0)))) (h "0c1lj50g95a3dxkdpn2hs7lpyywpg95gkxp7i2c5ixrd1r1ahq0b") (f (quote (("profile"))))))

(define-public crate-heca-1.5.0 (c (n "heca") (v "1.5.0") (d (list (d (n "assert_cmd") (r "^0.12") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "cpuprofiler") (r "^0.0.4") (d #t) (k 0)) (d (n "either") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "heca-lib") (r "^1.3") (d #t) (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.2") (d #t) (k 2)) (d (n "predicates") (r "^1") (d #t) (k 2)) (d (n "rayon") (r "^1.2") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "xdg") (r "^2.2") (d #t) (k 0)))) (h "1qrza3rw4swh49fdzjk9hbpcxckfw1r8klimbm252i9fkjxc758j") (f (quote (("profile"))))))

(define-public crate-heca-1.4.3 (c (n "heca") (v "1.4.3") (d (list (d (n "assert_cmd") (r "^0.12") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "cpuprofiler") (r "^0.0.4") (d #t) (k 0)) (d (n "dirs") (r "^2.0") (d #t) (k 0)) (d (n "either") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "heca-lib") (r "^1.3") (d #t) (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.2") (d #t) (k 2)) (d (n "predicates") (r "^1") (d #t) (k 2)) (d (n "rayon") (r "^1.2") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "xdg") (r "^2.2") (d #t) (k 0)))) (h "0pnk8fmxkd3ll0nbwsjga6gwdfjjz2xqlnrh479lp4j25fr6v4i0") (f (quote (("profile"))))))

