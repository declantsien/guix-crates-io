(define-module (crates-io he ed heed) #:use-module (crates-io))

(define-public crate-heed-0.1.0 (c (n "heed") (v "0.1.0") (d (list (d (n "bincode") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "lmdb-rkv-sys") (r "^0.9.5") (d #t) (k 0)) (d (n "once_cell") (r "^1.2.0") (d #t) (k 0)) (d (n "page_size") (r "^0.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.101") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.101") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.41") (o #t) (d #t) (k 0)) (d (n "zerocopy") (r "^0.2.8") (d #t) (k 0)))) (h "0f1xpa6i0mw78mzcr0y0gr7kirjqnh35p3wrq0190q14ql9xiyyx") (f (quote (("unbounded_depth" "serde_json/unbounded_depth") ("serde-json" "serde" "serde_json") ("serde-bincode" "serde" "bincode") ("raw_value" "serde_json/raw_value") ("preserve_order" "serde_json/preserve_order") ("default" "serde-bincode" "serde-json") ("arbitrary_precision" "serde_json/arbitrary_precision"))))))

(define-public crate-heed-0.2.0 (c (n "heed") (v "0.2.0") (d (list (d (n "bincode") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "lmdb-rkv-sys") (r "^0.9.5") (d #t) (k 0)) (d (n "once_cell") (r "^1.2.0") (d #t) (k 0)) (d (n "page_size") (r "^0.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.101") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.101") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.41") (o #t) (d #t) (k 0)) (d (n "zerocopy") (r "^0.2.8") (d #t) (k 0)))) (h "0b1balcf77c7qcqd5yd85zpvaaj1grx4r0027yww5v9rp106hppx") (f (quote (("unbounded_depth" "serde_json/unbounded_depth") ("serde-json" "serde" "serde_json") ("serde-bincode" "serde" "bincode") ("raw_value" "serde_json/raw_value") ("preserve_order" "serde_json/preserve_order") ("default" "serde-bincode" "serde-json") ("arbitrary_precision" "serde_json/arbitrary_precision"))))))

(define-public crate-heed-0.3.0 (c (n "heed") (v "0.3.0") (d (list (d (n "bincode") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "lmdb-rkv-sys") (r "^0.9.5") (d #t) (k 0)) (d (n "once_cell") (r "^1.2.0") (d #t) (k 0)) (d (n "page_size") (r "^0.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.101") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.101") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.41") (o #t) (d #t) (k 0)) (d (n "zerocopy") (r "^0.2.8") (d #t) (k 0)))) (h "07mgry0yqgsrrh83fg5ikz7wwkgh2q85ay434ih560d24xwfams4") (f (quote (("unbounded_depth" "serde_json/unbounded_depth") ("serde-json" "serde" "serde_json") ("serde-bincode" "serde" "bincode") ("raw_value" "serde_json/raw_value") ("preserve_order" "serde_json/preserve_order") ("default" "serde-bincode" "serde-json") ("arbitrary_precision" "serde_json/arbitrary_precision"))))))

(define-public crate-heed-0.3.1 (c (n "heed") (v "0.3.1") (d (list (d (n "bincode") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "lmdb-rkv-sys") (r "^0.9.5") (d #t) (k 0)) (d (n "once_cell") (r "^1.2.0") (d #t) (k 0)) (d (n "page_size") (r "^0.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.101") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.101") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.41") (o #t) (d #t) (k 0)) (d (n "zerocopy") (r "^0.2.8") (d #t) (k 0)))) (h "0vxvc32dcwv5wfzypkqjb9bfjdl9v3p3yi74kpxsrgd30pfqgziq") (f (quote (("unbounded_depth" "serde_json/unbounded_depth") ("serde-json" "serde" "serde_json") ("serde-bincode" "serde" "bincode") ("raw_value" "serde_json/raw_value") ("preserve_order" "serde_json/preserve_order") ("default" "serde-bincode" "serde-json") ("arbitrary_precision" "serde_json/arbitrary_precision"))))))

(define-public crate-heed-0.4.0 (c (n "heed") (v "0.4.0") (d (list (d (n "bincode") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "lmdb-rkv-sys") (r "^0.9.5") (d #t) (k 0)) (d (n "once_cell") (r "^1.2.0") (d #t) (k 0)) (d (n "page_size") (r "^0.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.101") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.101") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.41") (o #t) (d #t) (k 0)) (d (n "zerocopy") (r "^0.2.8") (d #t) (k 0)))) (h "1kjcays8ik7v6qnlq88g37gkw4x0h2b43qinhc9p8rka7y2ybv1j") (f (quote (("unbounded_depth" "serde_json/unbounded_depth") ("serde-json" "serde" "serde_json") ("serde-bincode" "serde" "bincode") ("raw_value" "serde_json/raw_value") ("preserve_order" "serde_json/preserve_order") ("default" "serde-bincode" "serde-json") ("arbitrary_precision" "serde_json/arbitrary_precision"))))))

(define-public crate-heed-0.5.0 (c (n "heed") (v "0.5.0") (d (list (d (n "bincode") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "lmdb-rkv-sys") (r "^0.9.5") (d #t) (k 0)) (d (n "once_cell") (r "^1.2.0") (d #t) (k 0)) (d (n "page_size") (r "^0.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.101") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.101") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.41") (o #t) (d #t) (k 0)) (d (n "zerocopy") (r "^0.2.8") (d #t) (k 0)))) (h "10faxcfsbaxmcdahalhqclnfr6pkdgymij56dxqjzy0qvrvdy8dh") (f (quote (("unbounded_depth" "serde_json/unbounded_depth") ("serde-json" "serde" "serde_json") ("serde-bincode" "serde" "bincode") ("raw_value" "serde_json/raw_value") ("preserve_order" "serde_json/preserve_order") ("default" "serde-bincode" "serde-json") ("arbitrary_precision" "serde_json/arbitrary_precision"))))))

(define-public crate-heed-0.6.0 (c (n "heed") (v "0.6.0") (d (list (d (n "bincode") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "lmdb-rkv-sys") (r "^0.9.5") (d #t) (k 0)) (d (n "once_cell") (r "^1.2.0") (d #t) (k 0)) (d (n "page_size") (r "^0.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.101") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.101") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.41") (o #t) (d #t) (k 0)) (d (n "zerocopy") (r "^0.2.8") (d #t) (k 0)))) (h "1fl7w8r9q9xidmi6fr50g43mpn0mjsfglqjg90i2fnhjga08hv6z") (f (quote (("unbounded_depth" "serde_json/unbounded_depth") ("serde-json" "serde" "serde_json") ("serde-bincode" "serde" "bincode") ("raw_value" "serde_json/raw_value") ("preserve_order" "serde_json/preserve_order") ("default" "serde-bincode" "serde-json") ("arbitrary_precision" "serde_json/arbitrary_precision"))))))

(define-public crate-heed-0.6.1 (c (n "heed") (v "0.6.1") (d (list (d (n "bincode") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "lmdb-rkv-sys") (r "^0.10.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.2.0") (d #t) (k 0)) (d (n "page_size") (r "^0.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.101") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.101") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.41") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "zerocopy") (r "^0.2.8") (d #t) (k 0)))) (h "0vfw4dmydclq4minfj8f007ssda7a2z77bk8nhqyfglgsyszy709") (f (quote (("unbounded_depth" "serde_json/unbounded_depth") ("serde-json" "serde" "serde_json") ("serde-bincode" "serde" "bincode") ("raw_value" "serde_json/raw_value") ("preserve_order" "serde_json/preserve_order") ("default" "serde-bincode" "serde-json") ("arbitrary_precision" "serde_json/arbitrary_precision"))))))

(define-public crate-heed-0.6.2 (c (n "heed") (v "0.6.2") (d (list (d (n "bincode") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "lmdb-rkv-sys") (r "^0.10.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.2.0") (d #t) (k 0)) (d (n "page_size") (r "^0.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.101") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.101") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.41") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "zerocopy") (r "^0.2.8") (d #t) (k 0)))) (h "0hb59csdr5v10ndk09zxj5vh655rirh7axmkfi1qklgz3z35qzvk") (f (quote (("unbounded_depth" "serde_json/unbounded_depth") ("serde-json" "serde" "serde_json") ("serde-bincode" "serde" "bincode") ("raw_value" "serde_json/raw_value") ("preserve_order" "serde_json/preserve_order") ("default" "serde-bincode" "serde-json") ("arbitrary_precision" "serde_json/arbitrary_precision"))))))

(define-public crate-heed-0.6.3 (c (n "heed") (v "0.6.3") (d (list (d (n "bincode") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "lmdb-rkv-sys") (r "^0.10.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.2.0") (d #t) (k 0)) (d (n "page_size") (r "^0.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.101") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.101") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.41") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "zerocopy") (r "^0.2.8") (d #t) (k 0)))) (h "1760wyvhnisvbax1h3m6llycw8irsk9267q59hrd8haz7d4m2xn3") (f (quote (("unbounded_depth" "serde_json/unbounded_depth") ("serde-json" "serde" "serde_json") ("serde-bincode" "serde" "bincode") ("raw_value" "serde_json/raw_value") ("preserve_order" "serde_json/preserve_order") ("default" "serde-bincode" "serde-json") ("arbitrary_precision" "serde_json/arbitrary_precision"))))))

(define-public crate-heed-0.6.4 (c (n "heed") (v "0.6.4") (d (list (d (n "bincode") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "lmdb-rkv-sys") (r "^0.10.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.2.0") (d #t) (k 0)) (d (n "page_size") (r "^0.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.101") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.101") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.41") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "zerocopy") (r "^0.2.8") (d #t) (k 0)))) (h "1nvx30ldlxqmfkzam99jchpil2zslwwn99ajrpcgri09nyf84dhp") (f (quote (("unbounded_depth" "serde_json/unbounded_depth") ("serde-json" "serde" "serde_json") ("serde-bincode" "serde" "bincode") ("raw_value" "serde_json/raw_value") ("preserve_order" "serde_json/preserve_order") ("default" "serde-bincode" "serde-json") ("arbitrary_precision" "serde_json/arbitrary_precision"))))))

(define-public crate-heed-0.6.5 (c (n "heed") (v "0.6.5") (d (list (d (n "bincode") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "lmdb-rkv-sys") (r "^0.10.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.2.0") (d #t) (k 0)) (d (n "page_size") (r "^0.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.101") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.101") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.41") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "zerocopy") (r "^0.2.8") (d #t) (k 0)))) (h "01cnxgkrz9z92740r7m6q985lxzcfgl2zkjgkv9crbanl71p2awf") (f (quote (("unbounded_depth" "serde_json/unbounded_depth") ("serde-json" "serde" "serde_json") ("serde-bincode" "serde" "bincode") ("raw_value" "serde_json/raw_value") ("preserve_order" "serde_json/preserve_order") ("default" "serde-bincode" "serde-json") ("arbitrary_precision" "serde_json/arbitrary_precision"))))))

(define-public crate-heed-0.7.0 (c (n "heed") (v "0.7.0") (d (list (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (k 0)) (d (n "libc") (r "^0.2.68") (d #t) (k 0)) (d (n "lmdb-rkv-sys") (r "^0.11.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "page_size") (r "^0.4.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.105") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.105") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.49") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "zerocopy") (r "^0.3.0") (d #t) (k 0)))) (h "0g7npwvh15cvk1bgnwxvdk00vqd6lb0rc17lpkbv1gc4i9cq2f7p") (f (quote (("unbounded_depth" "serde_json/unbounded_depth") ("serde-json" "serde" "serde_json") ("serde-bincode" "serde" "bincode") ("raw_value" "serde_json/raw_value") ("preserve_order" "serde_json/preserve_order") ("default" "serde-bincode" "serde-json") ("arbitrary_precision" "serde_json/arbitrary_precision"))))))

(define-public crate-heed-0.7.1 (c (n "heed") (v "0.7.1") (d (list (d (n "byteorder") (r "^1.3.4") (k 0)) (d (n "heed-traits") (r "^0.7.0") (d #t) (k 0)) (d (n "heed-types") (r "^0.7.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.68") (d #t) (k 0)) (d (n "lmdb-rkv-sys") (r "^0.11.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "page_size") (r "^0.4.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.105") (f (quote ("derive"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "zerocopy") (r "^0.3.0") (d #t) (k 0)))) (h "0p0sxmi8050fr6q8iv5mlicyc5la4pnrh6rr5nyabbad1pv2lhsx") (f (quote (("unbounded_depth" "heed-types/unbounded_depth") ("serde-json" "heed-types/serde" "heed-types/serde_json") ("serde-bincode" "heed-types/serde" "heed-types/bincode") ("raw_value" "heed-types/raw_value") ("preserve_order" "heed-types/preserve_order") ("default" "serde-bincode" "serde-json") ("arbitrary_precision" "heed-types/arbitrary_precision"))))))

(define-public crate-heed-0.7.2 (c (n "heed") (v "0.7.2") (d (list (d (n "byteorder") (r "^1.3.4") (k 0)) (d (n "heed-traits") (r "^0.7.0") (d #t) (k 0)) (d (n "heed-types") (r "^0.7.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.70") (d #t) (k 0)) (d (n "lmdb-rkv-sys") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "mdbx-sys") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "page_size") (r "^0.4.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.105") (f (quote ("derive"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "zerocopy") (r "^0.3.0") (d #t) (k 0)))) (h "09np8yaw6r9r9xz8hxj3i3np9kmd25bwrb72njr22z643inw06cv") (f (quote (("unbounded_depth" "heed-types/unbounded_depth") ("serde-json" "heed-types/serde" "heed-types/serde_json") ("serde-bincode" "heed-types/serde" "heed-types/bincode") ("raw_value" "heed-types/raw_value") ("preserve_order" "heed-types/preserve_order") ("mdbx" "mdbx-sys") ("lmdb" "lmdb-rkv-sys") ("default" "lmdb" "serde-bincode" "serde-json") ("arbitrary_precision" "heed-types/arbitrary_precision")))) (y #t)))

(define-public crate-heed-0.8.0 (c (n "heed") (v "0.8.0") (d (list (d (n "byteorder") (r "^1.3.4") (k 0)) (d (n "heed-traits") (r "^0.7.0") (d #t) (k 0)) (d (n "heed-types") (r "^0.7.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.70") (d #t) (k 0)) (d (n "lmdb-rkv-sys") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "mdbx-sys") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "page_size") (r "^0.4.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.105") (f (quote ("derive"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "zerocopy") (r "^0.3.0") (d #t) (k 0)))) (h "14xsvfxnsmvrisy8sw3a2x1rnlx2mk3y8p6fv281pgmlcsvq4y7x") (f (quote (("unbounded_depth" "heed-types/unbounded_depth") ("serde-json" "heed-types/serde" "heed-types/serde_json") ("serde-bincode" "heed-types/serde" "heed-types/bincode") ("raw_value" "heed-types/raw_value") ("preserve_order" "heed-types/preserve_order") ("mdbx" "mdbx-sys") ("lmdb" "lmdb-rkv-sys") ("default" "lmdb" "serde-bincode" "serde-json") ("arbitrary_precision" "heed-types/arbitrary_precision"))))))

(define-public crate-heed-0.8.1 (c (n "heed") (v "0.8.1") (d (list (d (n "byteorder") (r "^1.3.4") (k 0)) (d (n "heed-traits") (r "^0.7.0") (d #t) (k 0)) (d (n "heed-types") (r "^0.7.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.70") (d #t) (k 0)) (d (n "lmdb-rkv-sys") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "mdbx-sys") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "page_size") (r "^0.4.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.105") (f (quote ("derive"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "zerocopy") (r "^0.3.0") (d #t) (k 0)))) (h "0ygl6z2zmdcinjgg4l0zbky7fb48klkql0sqsr918aj05zwxdjf1") (f (quote (("unbounded_depth" "heed-types/unbounded_depth") ("serde-json" "heed-types/serde" "heed-types/serde_json") ("serde-bincode" "heed-types/serde" "heed-types/bincode") ("raw_value" "heed-types/raw_value") ("preserve_order" "heed-types/preserve_order") ("mdbx" "mdbx-sys") ("lmdb" "lmdb-rkv-sys") ("default" "lmdb" "serde-bincode" "serde-json") ("arbitrary_precision" "heed-types/arbitrary_precision"))))))

(define-public crate-heed-0.9.0 (c (n "heed") (v "0.9.0") (d (list (d (n "byteorder") (r "^1.3.4") (k 0)) (d (n "heed-traits") (r "^0.7.0") (d #t) (k 0)) (d (n "heed-types") (r "^0.7.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.70") (d #t) (k 0)) (d (n "lmdb-rkv-sys") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "mdbx-sys") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "page_size") (r "^0.4.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.105") (f (quote ("derive"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "zerocopy") (r "^0.3.0") (d #t) (k 0)))) (h "1camfhbz9rd4i96n3gri45721bm0dr8d4pa8m2qpqp57da9wvgqw") (f (quote (("unbounded_depth" "heed-types/unbounded_depth") ("serde-json" "heed-types/serde" "heed-types/serde_json") ("serde-bincode" "heed-types/serde" "heed-types/bincode") ("raw_value" "heed-types/raw_value") ("preserve_order" "heed-types/preserve_order") ("mdbx" "mdbx-sys") ("lmdb" "lmdb-rkv-sys") ("default" "lmdb" "serde-bincode" "serde-json") ("arbitrary_precision" "heed-types/arbitrary_precision"))))))

(define-public crate-heed-0.10.0 (c (n "heed") (v "0.10.0") (d (list (d (n "byteorder") (r "^1.3.4") (k 0)) (d (n "heed-traits") (r "^0.7.0") (d #t) (k 0)) (d (n "heed-types") (r "^0.7.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.70") (d #t) (k 0)) (d (n "lmdb-rkv-sys") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "mdbx-sys") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "page_size") (r "^0.4.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.105") (f (quote ("derive"))) (d #t) (k 2)) (d (n "synchronoise") (r "^1.0.0") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "zerocopy") (r "^0.3.0") (d #t) (k 0)))) (h "1c5s1ysxd3hd9r98iqvpwls4pv9sjqg4mj7amracfnxdrx2zprb8") (f (quote (("unbounded_depth" "heed-types/unbounded_depth") ("serde-json" "heed-types/serde" "heed-types/serde_json") ("serde-bincode" "heed-types/serde" "heed-types/bincode") ("raw_value" "heed-types/raw_value") ("preserve_order" "heed-types/preserve_order") ("mdbx" "mdbx-sys") ("lmdb" "lmdb-rkv-sys") ("default" "lmdb" "serde-bincode" "serde-json") ("arbitrary_precision" "heed-types/arbitrary_precision"))))))

(define-public crate-heed-0.10.1 (c (n "heed") (v "0.10.1") (d (list (d (n "byteorder") (r "^1.3.4") (k 0)) (d (n "heed-traits") (r "^0.7.0") (d #t) (k 0)) (d (n "heed-types") (r "^0.7.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.70") (d #t) (k 0)) (d (n "lmdb-rkv-sys") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "mdbx-sys") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "page_size") (r "^0.4.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.105") (f (quote ("derive"))) (d #t) (k 2)) (d (n "synchronoise") (r "^1.0.0") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "zerocopy") (r "^0.3.0") (d #t) (k 0)))) (h "15r7hcybvrhapxm7bqvym4a6nqc86m7b92g2v4iyadypfn8sc9cf") (f (quote (("unbounded_depth" "heed-types/unbounded_depth") ("sync-read-txn") ("serde-json" "heed-types/serde" "heed-types/serde_json") ("serde-bincode" "heed-types/serde" "heed-types/bincode") ("raw_value" "heed-types/raw_value") ("preserve_order" "heed-types/preserve_order") ("mdbx" "mdbx-sys") ("lmdb" "lmdb-rkv-sys") ("default" "lmdb" "serde-bincode" "serde-json") ("arbitrary_precision" "heed-types/arbitrary_precision"))))))

(define-public crate-heed-0.10.2 (c (n "heed") (v "0.10.2") (d (list (d (n "byteorder") (r "^1.3.4") (k 0)) (d (n "heed-traits") (r "^0.7.0") (d #t) (k 0)) (d (n "heed-types") (r "^0.7.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.70") (d #t) (k 0)) (d (n "lmdb-rkv-sys") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "mdbx-sys") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "page_size") (r "^0.4.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.105") (f (quote ("derive"))) (d #t) (k 2)) (d (n "synchronoise") (r "^1.0.0") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "zerocopy") (r "^0.3.0") (d #t) (k 0)))) (h "1740nxhq4gj7y3aq4wkfxdgckhdmq02bnmd4r5ph585sqvkrn5ir") (f (quote (("unbounded_depth" "heed-types/unbounded_depth") ("sync-read-txn") ("serde-json" "heed-types/serde" "heed-types/serde_json") ("serde-bincode" "heed-types/serde" "heed-types/bincode") ("raw_value" "heed-types/raw_value") ("preserve_order" "heed-types/preserve_order") ("mdbx" "mdbx-sys") ("lmdb" "lmdb-rkv-sys") ("default" "lmdb" "serde-bincode" "serde-json") ("arbitrary_precision" "heed-types/arbitrary_precision"))))))

(define-public crate-heed-0.10.3 (c (n "heed") (v "0.10.3") (d (list (d (n "byteorder") (r "^1.3.4") (k 0)) (d (n "heed-traits") (r "^0.7.0") (d #t) (k 0)) (d (n "heed-types") (r "^0.7.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.70") (d #t) (k 0)) (d (n "lmdb-rkv-sys") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "mdbx-sys") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "page_size") (r "^0.4.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.105") (f (quote ("derive"))) (d #t) (k 2)) (d (n "synchronoise") (r "^1.0.0") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "zerocopy") (r "^0.3.0") (d #t) (k 0)))) (h "0gixra6gq0xwnbks9ravnj7ndvc1970hygn4y1pnwapvpg6409wd") (f (quote (("unbounded_depth" "heed-types/unbounded_depth") ("sync-read-txn") ("serde-json" "heed-types/serde" "heed-types/serde_json") ("serde-bincode" "heed-types/serde" "heed-types/bincode") ("raw_value" "heed-types/raw_value") ("preserve_order" "heed-types/preserve_order") ("mdbx" "mdbx-sys") ("lmdb" "lmdb-rkv-sys") ("default" "lmdb" "serde-bincode" "serde-json") ("arbitrary_precision" "heed-types/arbitrary_precision"))))))

(define-public crate-heed-0.10.4 (c (n "heed") (v "0.10.4") (d (list (d (n "byteorder") (r "^1.3.4") (k 0)) (d (n "heed-traits") (r "^0.7.0") (d #t) (k 0)) (d (n "heed-types") (r "^0.7.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.70") (d #t) (k 0)) (d (n "lmdb-rkv-sys") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "mdbx-sys") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "page_size") (r "^0.4.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.105") (f (quote ("derive"))) (d #t) (k 2)) (d (n "synchronoise") (r "^1.0.0") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "zerocopy") (r "^0.3.0") (d #t) (k 0)))) (h "05n6cfz3qpn6fpi6hbi06vbcld718x2dihjp7qxq1z5d406hvp6d") (f (quote (("unbounded_depth" "heed-types/unbounded_depth") ("sync-read-txn") ("serde-json" "heed-types/serde" "heed-types/serde_json") ("serde-bincode" "heed-types/serde" "heed-types/bincode") ("raw_value" "heed-types/raw_value") ("preserve_order" "heed-types/preserve_order") ("mdbx" "mdbx-sys") ("lmdb" "lmdb-rkv-sys") ("default" "lmdb" "serde-bincode" "serde-json") ("arbitrary_precision" "heed-types/arbitrary_precision"))))))

(define-public crate-heed-0.10.5 (c (n "heed") (v "0.10.5") (d (list (d (n "byteorder") (r "^1.3.4") (k 0)) (d (n "heed-traits") (r "^0.7.0") (d #t) (k 0)) (d (n "heed-types") (r "^0.7.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.80") (d #t) (k 0)) (d (n "lmdb-rkv-sys") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "mdbx-sys") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "page_size") (r "^0.4.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (f (quote ("derive"))) (d #t) (k 2)) (d (n "synchronoise") (r "^1.0.0") (d #t) (k 0)) (d (n "url") (r "^2.2.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "zerocopy") (r "^0.3.0") (d #t) (k 0)))) (h "1k4g6k0z8smqy0akl87pb4rb08kr0aiaqk7ja7arqspfxnqa7arf") (f (quote (("unbounded_depth" "heed-types/unbounded_depth") ("sync-read-txn") ("serde-json" "heed-types/serde" "heed-types/serde_json") ("serde-bincode" "heed-types/serde" "heed-types/bincode") ("raw_value" "heed-types/raw_value") ("preserve_order" "heed-types/preserve_order") ("mdbx" "mdbx-sys") ("lmdb" "lmdb-rkv-sys") ("default" "lmdb" "serde-bincode" "serde-json") ("arbitrary_precision" "heed-types/arbitrary_precision"))))))

(define-public crate-heed-0.10.6 (c (n "heed") (v "0.10.6") (d (list (d (n "byteorder") (r "^1.3.4") (k 0)) (d (n "heed-traits") (r "^0.7.0") (d #t) (k 0)) (d (n "heed-types") (r "^0.7.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.80") (d #t) (k 0)) (d (n "lmdb-rkv-sys") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "mdbx-sys") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "page_size") (r "^0.4.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 2)) (d (n "synchronoise") (r "^1.0.0") (d #t) (k 0)) (d (n "url") (r "^2.2.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "zerocopy") (r "^0.3.0") (d #t) (k 0)))) (h "06nz1av072i3nr3nymip434p3gc0gmqg27lzpqzavbfa3a8nrk5g") (f (quote (("unbounded_depth" "heed-types/unbounded_depth") ("sync-read-txn") ("serde-json" "heed-types/serde" "heed-types/serde_json") ("serde-bincode" "heed-types/serde" "heed-types/bincode") ("raw_value" "heed-types/raw_value") ("preserve_order" "heed-types/preserve_order") ("mdbx" "mdbx-sys") ("lmdb" "lmdb-rkv-sys") ("default" "lmdb" "serde" "serde-bincode" "serde-json") ("arbitrary_precision" "heed-types/arbitrary_precision"))))))

(define-public crate-heed-0.11.0 (c (n "heed") (v "0.11.0") (d (list (d (n "bytemuck") (r "^1.5.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.5.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "byteorder") (r "^1.3.4") (k 0)) (d (n "heed-traits") (r "^0.8.0") (d #t) (k 0)) (d (n "heed-types") (r "^0.8.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.80") (d #t) (k 0)) (d (n "lmdb-rkv-sys") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "mdbx-sys") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "page_size") (r "^0.4.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 2)) (d (n "synchronoise") (r "^1.0.0") (d #t) (k 0)) (d (n "url") (r "^2.2.0") (d #t) (t "cfg(windows)") (k 0)))) (h "14l3d22kjbczihff408x73a4skbvx31ww9x4b5xmvvvdxn379716") (f (quote (("unbounded_depth" "heed-types/unbounded_depth") ("sync-read-txn") ("serde-json" "heed-types/serde" "heed-types/serde_json") ("serde-bincode" "heed-types/serde" "heed-types/bincode") ("raw_value" "heed-types/raw_value") ("preserve_order" "heed-types/preserve_order") ("mdbx" "mdbx-sys") ("lmdb" "lmdb-rkv-sys") ("default" "lmdb" "serde" "serde-bincode" "serde-json") ("arbitrary_precision" "heed-types/arbitrary_precision"))))))

(define-public crate-heed-0.20.0-alpha.0 (c (n "heed") (v "0.20.0-alpha.0") (d (list (d (n "bytemuck") (r "^1.12.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.12.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "byteorder") (r "^1.4.3") (k 0)) (d (n "heed-traits") (r "^0.20.0-alpha.0") (d #t) (k 0)) (d (n "heed-types") (r "^0.20.0-alpha.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.139") (d #t) (k 0)) (d (n "lmdb-master-sys") (r "^0.1.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "page_size") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.151") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.151") (f (quote ("derive"))) (d #t) (k 2)) (d (n "synchronoise") (r "^1.0.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "url") (r "^2.3.1") (d #t) (t "cfg(windows)") (k 0)))) (h "161lzdxmwkpy50d43x0ibmv8nwicapy58hm26ib5arwk527qd970") (f (quote (("unbounded_depth" "heed-types/unbounded_depth") ("sync-read-txn") ("serde-json" "heed-types/serde" "heed-types/serde_json") ("serde-bincode" "heed-types/serde" "heed-types/bincode") ("raw_value" "heed-types/raw_value") ("preserve_order" "heed-types/preserve_order") ("posix-sem" "lmdb-master-sys/posix-sem") ("default" "serde" "serde-bincode" "serde-json") ("arbitrary_precision" "heed-types/arbitrary_precision"))))))

(define-public crate-heed-0.20.0-alpha.1 (c (n "heed") (v "0.20.0-alpha.1") (d (list (d (n "bytemuck") (r "^1.12.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.12.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "byteorder") (r "^1.4.3") (k 0)) (d (n "heed-traits") (r "^0.20.0-alpha.0") (d #t) (k 0)) (d (n "heed-types") (r "^0.20.0-alpha.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.139") (d #t) (k 0)) (d (n "lmdb-master-sys") (r "^0.1.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "page_size") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.151") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.151") (f (quote ("derive"))) (d #t) (k 2)) (d (n "synchronoise") (r "^1.0.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "url") (r "^2.3.1") (d #t) (t "cfg(windows)") (k 0)))) (h "003ihd0zrkc3mi0698f48xxid7i5vwd1j42vgxb3vdska28mk5n3") (f (quote (("unbounded_depth" "heed-types/unbounded_depth") ("sync-read-txn") ("serde-json" "heed-types/serde" "heed-types/serde_json") ("serde-bincode" "heed-types/serde" "heed-types/bincode") ("raw_value" "heed-types/raw_value") ("preserve_order" "heed-types/preserve_order") ("posix-sem" "lmdb-master-sys/posix-sem") ("default" "serde" "serde-bincode" "serde-json") ("arbitrary_precision" "heed-types/arbitrary_precision"))))))

(define-public crate-heed-0.20.0-alpha.2 (c (n "heed") (v "0.20.0-alpha.2") (d (list (d (n "bytemuck") (r "^1.12.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.12.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "byteorder") (r "^1.4.3") (k 0)) (d (n "heed-traits") (r "^0.20.0-alpha.0") (d #t) (k 0)) (d (n "heed-types") (r "^0.20.0-alpha.0") (k 0)) (d (n "libc") (r "^0.2.139") (d #t) (k 0)) (d (n "lmdb-master-sys") (r "^0.1.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "page_size") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.151") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.151") (f (quote ("derive"))) (d #t) (k 2)) (d (n "synchronoise") (r "^1.0.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "url") (r "^2.3.1") (d #t) (t "cfg(windows)") (k 0)))) (h "1di67zdzp937fx3r1xlrp9vcv7rki87fvw4c941jk824sdl6xk5c") (f (quote (("unbounded_depth" "heed-types/unbounded_depth") ("sync-read-txn") ("serde-json" "heed-types/serde" "heed-types/serde_json") ("serde-bincode" "heed-types/serde" "heed-types/bincode") ("raw_value" "heed-types/raw_value") ("preserve_order" "heed-types/preserve_order") ("posix-sem" "lmdb-master-sys/posix-sem") ("default" "serde" "serde-bincode" "serde-json") ("arbitrary_precision" "heed-types/arbitrary_precision"))))))

(define-public crate-heed-0.20.0-alpha.3 (c (n "heed") (v "0.20.0-alpha.3") (d (list (d (n "bytemuck") (r "^1.12.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.12.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "byteorder") (r "^1.4.3") (k 0)) (d (n "heed-traits") (r "^0.20.0-alpha.3") (d #t) (k 0)) (d (n "heed-types") (r "^0.20.0-alpha.3") (k 0)) (d (n "libc") (r "^0.2.139") (d #t) (k 0)) (d (n "lmdb-master-sys") (r "^0.1.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "page_size") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.151") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.151") (f (quote ("derive"))) (d #t) (k 2)) (d (n "synchronoise") (r "^1.0.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "url") (r "^2.3.1") (d #t) (t "cfg(windows)") (k 0)))) (h "18npa2sal5a98p95n0k5wcjg9nca2b0vx2fxrl45cjwfg06jxs9a") (f (quote (("unbounded_depth" "heed-types/unbounded_depth") ("sync-read-txn") ("serde-json" "heed-types/serde" "heed-types/serde-json") ("serde-bincode" "heed-types/serde" "heed-types/bincode") ("raw_value" "heed-types/raw_value") ("preserve_order" "heed-types/preserve_order") ("posix-sem" "lmdb-master-sys/posix-sem") ("default" "serde" "serde-bincode" "serde-json") ("arbitrary_precision" "heed-types/arbitrary_precision"))))))

(define-public crate-heed-0.20.0-alpha.4 (c (n "heed") (v "0.20.0-alpha.4") (d (list (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.12.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.12.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "byteorder") (r "^1.4.3") (k 0)) (d (n "heed-traits") (r "^0.20.0-alpha.4") (d #t) (k 0)) (d (n "heed-types") (r "^0.20.0-alpha.4") (k 0)) (d (n "libc") (r "^0.2.139") (d #t) (k 0)) (d (n "lmdb-master-sys") (r "^0.1.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "page_size") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.151") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.151") (f (quote ("derive"))) (d #t) (k 2)) (d (n "synchronoise") (r "^1.0.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "url") (r "^2.3.1") (d #t) (t "cfg(windows)") (k 0)))) (h "16m3a4m5sxkac4pmggjl9y0hll709i7vlrp6l5iqzxvdadsbzhbk") (f (quote (("unbounded_depth" "heed-types/unbounded_depth") ("serde-json" "heed-types/serde" "heed-types/serde-json") ("serde-bincode" "heed-types/serde" "heed-types/bincode") ("read-txn-no-tls") ("raw_value" "heed-types/raw_value") ("preserve_order" "heed-types/preserve_order") ("posix-sem" "lmdb-master-sys/posix-sem") ("default" "serde" "serde-bincode" "serde-json") ("arbitrary_precision" "heed-types/arbitrary_precision"))))))

(define-public crate-heed-0.20.0-alpha.5 (c (n "heed") (v "0.20.0-alpha.5") (d (list (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.12.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.12.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "byteorder") (r "^1.4.3") (k 0)) (d (n "heed-traits") (r "^0.20.0-alpha.5") (d #t) (k 0)) (d (n "heed-types") (r "^0.20.0-alpha.5") (k 0)) (d (n "libc") (r "^0.2.139") (d #t) (k 0)) (d (n "lmdb-master-sys") (r "^0.1.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "page_size") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.151") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.151") (f (quote ("derive"))) (d #t) (k 2)) (d (n "synchronoise") (r "^1.0.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "url") (r "^2.3.1") (d #t) (t "cfg(windows)") (k 0)))) (h "05lw72871zpipf4qfpclrilamsbwjchk3kbappqbp9dry6d3dk97") (f (quote (("unbounded_depth" "heed-types/unbounded_depth") ("serde-rmp" "heed-types/serde-rmp") ("serde-json" "heed-types/serde-json") ("serde-bincode" "heed-types/serde-bincode") ("read-txn-no-tls") ("raw_value" "heed-types/raw_value") ("preserve_order" "heed-types/preserve_order") ("posix-sem" "lmdb-master-sys/posix-sem") ("default" "serde" "serde-bincode" "serde-json") ("arbitrary_precision" "heed-types/arbitrary_precision"))))))

(define-public crate-heed-0.20.0-alpha.6 (c (n "heed") (v "0.20.0-alpha.6") (d (list (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.12.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.12.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "byteorder") (r "^1.4.3") (k 0)) (d (n "heed-traits") (r "^0.20.0-alpha.6") (d #t) (k 0)) (d (n "heed-types") (r "^0.20.0-alpha.6") (k 0)) (d (n "libc") (r "^0.2.139") (d #t) (k 0)) (d (n "lmdb-master-sys") (r "^0.1.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "page_size") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.151") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.151") (f (quote ("derive"))) (d #t) (k 2)) (d (n "synchronoise") (r "^1.0.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "url") (r "^2.3.1") (d #t) (t "cfg(windows)") (k 0)))) (h "1syyx6a2gp9hm1d3q7jxzdrjnr1xgp6ssj38syssldq5ms0vwy5h") (f (quote (("unbounded_depth" "heed-types/unbounded_depth") ("serde-rmp" "heed-types/serde-rmp") ("serde-json" "heed-types/serde-json") ("serde-bincode" "heed-types/serde-bincode") ("read-txn-no-tls") ("raw_value" "heed-types/raw_value") ("preserve_order" "heed-types/preserve_order") ("posix-sem" "lmdb-master-sys/posix-sem") ("default" "serde" "serde-bincode" "serde-json") ("arbitrary_precision" "heed-types/arbitrary_precision"))))))

(define-public crate-heed-0.20.0-alpha.7 (c (n "heed") (v "0.20.0-alpha.7") (d (list (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.12.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.12.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "byteorder") (r "^1.4.3") (k 0)) (d (n "heed-traits") (r "^0.20.0-alpha.7") (d #t) (k 0)) (d (n "heed-types") (r "^0.20.0-alpha.7") (k 0)) (d (n "libc") (r "^0.2.139") (d #t) (k 0)) (d (n "lmdb-master-sys") (r "^0.1.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "page_size") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.151") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.151") (f (quote ("derive"))) (d #t) (k 2)) (d (n "synchronoise") (r "^1.0.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "url") (r "^2.3.1") (d #t) (t "cfg(windows)") (k 0)))) (h "1v6j3i6p84bnsapszy0i3hnx6yqfip6376ifcvz43338zsch2cw5") (f (quote (("unbounded_depth" "heed-types/unbounded_depth") ("serde-rmp" "heed-types/serde-rmp") ("serde-json" "heed-types/serde-json") ("serde-bincode" "heed-types/serde-bincode") ("read-txn-no-tls") ("raw_value" "heed-types/raw_value") ("preserve_order" "heed-types/preserve_order") ("posix-sem" "lmdb-master-sys/posix-sem") ("default" "serde" "serde-bincode" "serde-json") ("arbitrary_precision" "heed-types/arbitrary_precision"))))))

(define-public crate-heed-0.20.0-alpha.8 (c (n "heed") (v "0.20.0-alpha.8") (d (list (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.12.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.12.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "byteorder") (r "^1.4.3") (k 0)) (d (n "heed-traits") (r "^0.20.0-alpha.8") (d #t) (k 0)) (d (n "heed-types") (r "^0.20.0-alpha.8") (k 0)) (d (n "libc") (r "^0.2.139") (d #t) (k 0)) (d (n "lmdb-master-sys") (r "^0.1.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "page_size") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.151") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.151") (f (quote ("derive"))) (d #t) (k 2)) (d (n "synchronoise") (r "^1.0.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "url") (r "^2.3.1") (d #t) (t "cfg(windows)") (k 0)))) (h "0i5gpssn6x6hr0fyb8c34vf28ffc6gpc9v0dva19g4arjh1hfzz2") (f (quote (("unbounded_depth" "heed-types/unbounded_depth") ("serde-rmp" "heed-types/serde-rmp") ("serde-json" "heed-types/serde-json") ("serde-bincode" "heed-types/serde-bincode") ("read-txn-no-tls") ("raw_value" "heed-types/raw_value") ("preserve_order" "heed-types/preserve_order") ("posix-sem" "lmdb-master-sys/posix-sem") ("default" "serde" "serde-bincode" "serde-json") ("arbitrary_precision" "heed-types/arbitrary_precision"))))))

(define-public crate-heed-0.20.0-alpha.9 (c (n "heed") (v "0.20.0-alpha.9") (d (list (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.12.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.12.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "byteorder") (r "^1.4.3") (k 0)) (d (n "heed-traits") (r "^0.20.0-alpha.9") (d #t) (k 0)) (d (n "heed-types") (r "^0.20.0-alpha.9") (k 0)) (d (n "libc") (r "^0.2.139") (d #t) (k 0)) (d (n "lmdb-master-sys") (r "^0.1.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "page_size") (r "^0.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.151") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.151") (f (quote ("derive"))) (d #t) (k 2)) (d (n "synchronoise") (r "^1.0.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "url") (r "^2.3.1") (d #t) (t "cfg(windows)") (k 0)))) (h "0d79dy695p009by5gfp21g4g9z2lfz16ihjn1k8gfvf8j44saj4n") (f (quote (("unbounded_depth" "heed-types/unbounded_depth") ("serde-rmp" "heed-types/serde-rmp") ("serde-json" "heed-types/serde-json") ("serde-bincode" "heed-types/serde-bincode") ("read-txn-no-tls") ("raw_value" "heed-types/raw_value") ("preserve_order" "heed-types/preserve_order") ("posix-sem" "lmdb-master-sys/posix-sem") ("default" "serde" "serde-bincode" "serde-json") ("arbitrary_precision" "heed-types/arbitrary_precision"))))))

(define-public crate-heed-0.20.0 (c (n "heed") (v "0.20.0") (d (list (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (k 0)) (d (n "heed-traits") (r "^0.20.0") (d #t) (k 0)) (d (n "heed-types") (r "^0.20.0") (k 0)) (d (n "libc") (r "^0.2.139") (d #t) (k 0)) (d (n "lmdb-master-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "page_size") (r "^0.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.151") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.151") (f (quote ("derive"))) (d #t) (k 2)) (d (n "synchronoise") (r "^1.0.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "url") (r "^2.3.1") (d #t) (t "cfg(windows)") (k 0)))) (h "02zm2qvzpn2pg97bpx9s6f41rgmkcgqb0lkp5lb5fagbvsq018z7") (f (quote (("unbounded_depth" "heed-types/unbounded_depth") ("serde-rmp" "heed-types/serde-rmp") ("serde-json" "heed-types/serde-json") ("serde-bincode" "heed-types/serde-bincode") ("read-txn-no-tls") ("raw_value" "heed-types/raw_value") ("preserve_order" "heed-types/preserve_order") ("posix-sem" "lmdb-master-sys/posix-sem") ("mdb_idl_logn_9" "lmdb-master-sys/mdb_idl_logn_9") ("mdb_idl_logn_8" "lmdb-master-sys/mdb_idl_logn_8") ("mdb_idl_logn_16" "lmdb-master-sys/mdb_idl_logn_16") ("mdb_idl_logn_15" "lmdb-master-sys/mdb_idl_logn_15") ("mdb_idl_logn_14" "lmdb-master-sys/mdb_idl_logn_14") ("mdb_idl_logn_13" "lmdb-master-sys/mdb_idl_logn_13") ("mdb_idl_logn_12" "lmdb-master-sys/mdb_idl_logn_12") ("mdb_idl_logn_11" "lmdb-master-sys/mdb_idl_logn_11") ("mdb_idl_logn_10" "lmdb-master-sys/mdb_idl_logn_10") ("default" "serde" "serde-bincode" "serde-json") ("arbitrary_precision" "heed-types/arbitrary_precision")))) (s 2) (e (quote (("serde" "bitflags/serde" "dep:serde"))))))

(define-public crate-heed-0.20.1 (c (n "heed") (v "0.20.1") (d (list (d (n "bitflags") (r "^2.3.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (k 0)) (d (n "heed-traits") (r "^0.20.0") (d #t) (k 0)) (d (n "heed-types") (r "^0.20.0") (k 0)) (d (n "libc") (r "^0.2.139") (d #t) (k 0)) (d (n "lmdb-master-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "page_size") (r "^0.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.151") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.151") (f (quote ("derive"))) (d #t) (k 2)) (d (n "synchronoise") (r "^1.0.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "url") (r "^2.3.1") (d #t) (t "cfg(windows)") (k 0)))) (h "1zb305hh6yx80jahsdabjrvs4dafz9xmaivdlj50diyphfbcnykg") (f (quote (("unbounded_depth" "heed-types/unbounded_depth") ("serde-rmp" "heed-types/serde-rmp") ("serde-json" "heed-types/serde-json") ("serde-bincode" "heed-types/serde-bincode") ("read-txn-no-tls") ("raw_value" "heed-types/raw_value") ("preserve_order" "heed-types/preserve_order") ("posix-sem" "lmdb-master-sys/posix-sem") ("mdb_idl_logn_9" "lmdb-master-sys/mdb_idl_logn_9") ("mdb_idl_logn_8" "lmdb-master-sys/mdb_idl_logn_8") ("mdb_idl_logn_16" "lmdb-master-sys/mdb_idl_logn_16") ("mdb_idl_logn_15" "lmdb-master-sys/mdb_idl_logn_15") ("mdb_idl_logn_14" "lmdb-master-sys/mdb_idl_logn_14") ("mdb_idl_logn_13" "lmdb-master-sys/mdb_idl_logn_13") ("mdb_idl_logn_12" "lmdb-master-sys/mdb_idl_logn_12") ("mdb_idl_logn_11" "lmdb-master-sys/mdb_idl_logn_11") ("mdb_idl_logn_10" "lmdb-master-sys/mdb_idl_logn_10") ("default" "serde" "serde-bincode" "serde-json") ("arbitrary_precision" "heed-types/arbitrary_precision")))) (s 2) (e (quote (("serde" "bitflags/serde" "dep:serde"))))))

