(define-module (crates-io he x- hex-simd) #:use-module (crates-io))

(define-public crate-hex-simd-0.1.0 (c (n "hex-simd") (v "0.1.0") (d (list (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "faster-hex") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "simd-abstraction") (r "^0.1.2") (f (quote ("hex"))) (d #t) (k 0)))) (h "15yi1f0x2425kws6zmp8na4hfc5cs284fc8ggg6nazwm82a01xab") (f (quote (("std" "alloc") ("detect" "simd-abstraction/std") ("default" "std" "detect") ("alloc")))) (y #t)))

(define-public crate-hex-simd-0.3.0 (c (n "hex-simd") (v "0.3.0") (d (list (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "faster-hex") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "simd-abstraction") (r "^0.3.0") (f (quote ("hex"))) (d #t) (k 0)))) (h "1d2acm48yzsaqj6ny1v735lg74rw9kxaid8dr2bih03nn1s24psp") (f (quote (("std" "alloc") ("detect" "simd-abstraction/std") ("default" "std" "detect") ("alloc"))))))

(define-public crate-hex-simd-0.5.0 (c (n "hex-simd") (v "0.5.0") (d (list (d (n "faster-hex") (r "^0.6.1") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "simd-abstraction") (r "^0.5.0") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (k 2)))) (h "1rh4d7nfs6hswz45xx4dwnxvl2azxnawx55yn11d8kwq4by7a37y") (f (quote (("unstable" "simd-abstraction/unstable") ("std" "alloc") ("detect" "simd-abstraction/std") ("default" "std" "detect") ("alloc" "simd-abstraction/alloc")))) (r "1.57")))

(define-public crate-hex-simd-0.5.1 (c (n "hex-simd") (v "0.5.1") (d (list (d (n "faster-hex") (r "^0.6.1") (d #t) (k 2)) (d (n "getrandom") (r "^0.2.7") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "simd-abstraction") (r "^0.5.1") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.31") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "11pmlcsl5cy8phl6vqna4xchhh96la9l6lc770alsr4ywf3zwxzn") (f (quote (("unstable" "simd-abstraction/unstable") ("std" "alloc") ("detect" "simd-abstraction/std") ("default" "std" "detect") ("alloc" "simd-abstraction/alloc")))) (r "1.57")))

(define-public crate-hex-simd-0.6.0 (c (n "hex-simd") (v "0.6.0") (d (list (d (n "faster-hex") (r "^0.6.1") (d #t) (k 2)) (d (n "getrandom") (r "^0.2.7") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "simd-abstraction") (r "^0.6.0") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.31") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0zaf3079ryw5hv6s98ghrf7299b0bbsq6za5xnw3j74lhkw3bhw5") (f (quote (("unstable" "simd-abstraction/unstable") ("std" "alloc") ("detect" "simd-abstraction/std") ("default" "std" "detect") ("alloc" "simd-abstraction/alloc")))) (r "1.57")))

(define-public crate-hex-simd-0.6.1 (c (n "hex-simd") (v "0.6.1") (d (list (d (n "faster-hex") (r "^0.6.1") (d #t) (k 2)) (d (n "getrandom") (r "^0.2.7") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "simd-abstraction") (r "^0.6.1") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.31") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1z7gp4vi97wn7m4vksykf5c0z6iyv7izxky9d3yqzlbpvnxrqx50") (f (quote (("unstable" "simd-abstraction/unstable") ("std" "alloc") ("detect" "simd-abstraction/std") ("default" "std" "detect") ("alloc" "simd-abstraction/alloc")))) (y #t) (r "1.57")))

(define-public crate-hex-simd-0.6.2 (c (n "hex-simd") (v "0.6.2") (d (list (d (n "faster-hex") (r "^0.6.1") (d #t) (k 2)) (d (n "getrandom") (r "^0.2.7") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "simd-abstraction") (r "^0.6.2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.31") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "13bhhv4mk40il9wz93dd0bjkf2z2izaxhcw003iv0i8r7vymgxnc") (f (quote (("unstable" "simd-abstraction/unstable") ("std" "alloc") ("detect" "simd-abstraction/std") ("default" "std" "detect") ("alloc" "simd-abstraction/alloc")))) (r "1.57")))

(define-public crate-hex-simd-0.7.0 (c (n "hex-simd") (v "0.7.0") (d (list (d (n "faster-hex") (r "^0.6.1") (d #t) (k 2)) (d (n "getrandom") (r "^0.2.7") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "simd-abstraction") (r "^0.7.0") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.31") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1dxzapzcvdr62nzjswv7qyav43h1hdjhrh563ry6fvgdml6s9ksx") (f (quote (("unstable" "simd-abstraction/unstable") ("std" "alloc" "simd-abstraction/std") ("detect" "simd-abstraction/detect") ("default" "std" "detect") ("alloc" "simd-abstraction/alloc")))) (r "1.61")))

(define-public crate-hex-simd-0.8.0 (c (n "hex-simd") (v "0.8.0") (d (list (d (n "getrandom") (r "^0.2.8") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "outref") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "vsimd") (r "^0.8.0") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1viv1llx4s81fv8n2y93xyw1ifp9a5fjzwq54vy0xhiznnz8axhz") (f (quote (("unstable" "vsimd/unstable") ("std" "alloc" "vsimd/std") ("detect" "vsimd/detect") ("default" "std" "detect") ("alloc" "vsimd/alloc")))) (r "1.63")))

