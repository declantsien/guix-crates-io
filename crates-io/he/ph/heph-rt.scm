(define-module (crates-io he ph heph-rt) #:use-module (crates-io))

(define-public crate-heph-rt-0.4.0 (c (n "heph-rt") (v "0.4.0") (d (list (d (n "crossbeam-channel") (r "^0.5.0") (f (quote ("std"))) (k 0)) (d (n "getrandom") (r "^0.2.2") (f (quote ("std"))) (o #t) (k 0)) (d (n "getrandom") (r "^0.2.2") (f (quote ("std"))) (k 2)) (d (n "heph") (r "^0.4.0") (k 0)) (d (n "heph-inbox") (r "^0.2.1") (k 0)) (d (n "libc") (r "^0.2.96") (k 0)) (d (n "log") (r "^0.4.16") (f (quote ("kv_unstable" "kv_unstable_std"))) (k 0)) (d (n "mio") (r "^0.8.0") (f (quote ("os-poll" "net"))) (k 0)) (d (n "mio-signals") (r "^0.2.0") (k 0)) (d (n "socket2") (r "^0.4.0") (f (quote ("all"))) (k 0)) (d (n "std-logger") (r "^0.4.0") (f (quote ("log-panic" "nightly"))) (k 2)))) (h "015az2yn96hwprfhwrqsvxjk31qhj62y1b5pf61jhm1xd75zd100") (f (quote (("test" "getrandom" "heph/test"))))))

(define-public crate-heph-rt-0.4.1 (c (n "heph-rt") (v "0.4.1") (d (list (d (n "crossbeam-channel") (r "^0.5.0") (f (quote ("std"))) (k 0)) (d (n "getrandom") (r "^0.2.2") (f (quote ("std"))) (o #t) (k 0)) (d (n "getrandom") (r "^0.2.2") (f (quote ("std"))) (k 2)) (d (n "heph") (r "^0.4.0") (k 0)) (d (n "heph-inbox") (r "^0.2.1") (k 0)) (d (n "libc") (r "^0.2.96") (k 0)) (d (n "log") (r "^0.4.16") (f (quote ("kv_unstable" "kv_unstable_std"))) (k 0)) (d (n "mio") (r "^0.8.0") (f (quote ("os-poll" "net"))) (k 0)) (d (n "mio-signals") (r "^0.2.0") (k 0)) (d (n "socket2") (r "^0.4.0") (f (quote ("all"))) (k 0)) (d (n "std-logger") (r "^0.4.0") (f (quote ("log-panic" "nightly"))) (k 2)))) (h "11yy0mwrcjsxv5l8df4fzmcfkjl4wyhi2hziw45z5931k70m7iki") (f (quote (("test" "getrandom" "heph/test"))))))

