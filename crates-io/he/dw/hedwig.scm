(define-module (crates-io he dw hedwig) #:use-module (crates-io))

(define-public crate-hedwig-0.1.0 (c (n "hedwig") (v "0.1.0") (d (list (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "google-pubsub1") (r "^1.0.8") (d #t) (k 0)) (d (n "hyper") (r "^0.10") (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.6") (d #t) (k 0)) (d (n "rust-embed") (r "^4.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "strum") (r "^0.15") (d #t) (k 2)) (d (n "strum_macros") (r "^0.15") (d #t) (k 2)) (d (n "url") (r "^1.7") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "valico") (r "^3.0") (d #t) (k 0)) (d (n "yup-oauth2") (r "^1.0") (d #t) (k 0)))) (h "1v1wpbc8pk1a703apdg3n4fcmhnkgdcfav4q4caxdfgb0j50vf42")))

(define-public crate-hedwig-0.1.1 (c (n "hedwig") (v "0.1.1") (d (list (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "google-pubsub1") (r "^1.0.8") (d #t) (k 0)) (d (n "hyper") (r "^0.10") (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.6") (d #t) (k 0)) (d (n "rust-embed") (r "^4.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "strum") (r "^0.15") (d #t) (k 2)) (d (n "strum_macros") (r "^0.15") (d #t) (k 2)) (d (n "url") (r "^1.7") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "valico") (r "^3.0") (d #t) (k 0)) (d (n "yup-oauth2") (r "^1.0") (d #t) (k 0)))) (h "079mpblm3vs8q5kapqh28issn8zizab3l2gxna5jgxj66k99n62f")))

(define-public crate-hedwig-0.2.0 (c (n "hedwig") (v "0.2.0") (d (list (d (n "base64") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "google-pubsub1") (r "^1.0.8") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.10") (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.6") (d #t) (k 0)) (d (n "rust-embed") (r "^4.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "strum") (r "^0.15") (d #t) (k 2)) (d (n "strum_macros") (r "^0.15") (d #t) (k 2)) (d (n "url") (r "^1.7") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "valico") (r "^3.0") (d #t) (k 0)) (d (n "yup-oauth2") (r "^1.0") (o #t) (d #t) (k 0)))) (h "0b53drd240hbs0kba3xkifm5k26dja49kajpkyjpc163sfrgp6gr") (f (quote (("mock") ("google" "base64" "google-pubsub1" "yup-oauth2") ("default"))))))

(define-public crate-hedwig-0.3.0 (c (n "hedwig") (v "0.3.0") (d (list (d (n "assert_matches") (r "^1.3") (d #t) (k 2)) (d (n "base64") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "google-pubsub1") (r "^1.0.8") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.10") (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.6") (d #t) (k 0)) (d (n "rust-embed") (r "^4.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "strum") (r "^0.15") (d #t) (k 2)) (d (n "strum_macros") (r "^0.15") (d #t) (k 2)) (d (n "url") (r "^1.7") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "valico") (r "^3.0") (d #t) (k 0)) (d (n "yup-oauth2") (r "^1.0") (o #t) (d #t) (k 0)))) (h "1azhw7n8jr3dcfkr2c0yq7sgvhdhin3zsk3m81wsb59kp904qjn9") (f (quote (("mock") ("google" "base64" "google-pubsub1" "yup-oauth2") ("default"))))))

(define-public crate-hedwig-0.3.1 (c (n "hedwig") (v "0.3.1") (d (list (d (n "assert_matches") (r "^1.3") (d #t) (k 2)) (d (n "base64") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "google-pubsub1") (r "^1.0.8") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.10") (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.6") (d #t) (k 0)) (d (n "rust-embed") (r "^4.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "strum") (r "^0.15") (d #t) (k 2)) (d (n "strum_macros") (r "^0.15") (d #t) (k 2)) (d (n "url") (r "^1.7") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "valico") (r "^3.1") (d #t) (k 0)) (d (n "yup-oauth2") (r "^1.0") (o #t) (d #t) (k 0)))) (h "184mzvs8yrz2nnjsrrjawg0xhvw5z5gcj9yg89knrgzl17mkr5x0") (f (quote (("mock") ("google" "base64" "google-pubsub1" "yup-oauth2") ("default"))))))

(define-public crate-hedwig-0.4.0 (c (n "hedwig") (v "0.4.0") (d (list (d (n "assert_matches") (r "^1.3") (d #t) (k 2)) (d (n "base64") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "google-pubsub1") (r "^1.0.8") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.10") (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.6") (d #t) (k 0)) (d (n "rust-embed") (r "^4.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "strum") (r "^0.15") (d #t) (k 2)) (d (n "strum_macros") (r "^0.15") (d #t) (k 2)) (d (n "url") (r "^1.7") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "valico") (r "^3.1") (d #t) (k 0)) (d (n "yup-oauth2") (r "^1.0") (o #t) (d #t) (k 0)))) (h "070l4hbs534bb8lh8xsvrwydpp324rnrymnf64pncm5f1h0wfr6s") (f (quote (("mock") ("google" "base64" "google-pubsub1" "yup-oauth2") ("default"))))))

(define-public crate-hedwig-0.5.0 (c (n "hedwig") (v "0.5.0") (d (list (d (n "assert_matches") (r "^1.3") (d #t) (k 2)) (d (n "base64") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "google-pubsub1") (r "^1.0.8") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.10") (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.6") (d #t) (k 0)) (d (n "rust-embed") (r "^4.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "strum") (r "^0.15") (d #t) (k 2)) (d (n "strum_macros") (r "^0.15") (d #t) (k 2)) (d (n "url") (r "^1.7") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "valico") (r "^3.1") (d #t) (k 0)) (d (n "yup-oauth2") (r "^1.0") (o #t) (d #t) (k 0)))) (h "12ky3n2xql47cdk6kj42n49syfsvsrxs82s5wqli2j6wjvbj8fgr") (f (quote (("mock") ("google" "base64" "google-pubsub1" "yup-oauth2") ("default"))))))

(define-public crate-hedwig-0.6.0 (c (n "hedwig") (v "0.6.0") (d (list (d (n "assert_matches") (r "^1.3") (d #t) (k 2)) (d (n "base64") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "google-pubsub1") (r "^1.0.8") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.10") (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.6") (d #t) (k 0)) (d (n "rust-embed") (r "^4.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "strum") (r "^0.15") (d #t) (k 2)) (d (n "strum_macros") (r "^0.15") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "url") (r "^1.7") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "valico") (r "^3.1") (d #t) (k 0)) (d (n "yup-oauth2") (r "^1.0") (o #t) (d #t) (k 0)))) (h "0x6ff3gg2949w1q70rqwwxl3zhd762x6zl3bgl6rfwb49gq54rvn") (f (quote (("mock") ("google" "base64" "google-pubsub1" "yup-oauth2") ("default"))))))

(define-public crate-hedwig-1.0.0 (c (n "hedwig") (v "1.0.0") (d (list (d (n "base64") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.13.1") (o #t) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.4.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "strum") (r "^0.18") (d #t) (k 2)) (d (n "strum_macros") (r "^0.18") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^0.2.4") (f (quote ("macros"))) (d #t) (k 2)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "valico") (r "^3.2") (d #t) (k 0)) (d (n "yup-oauth2") (r "^4") (o #t) (d #t) (k 0)))) (h "1c3ywxsgb7m7b5q9rnj3cd902ld3g14qdan2r6y6xhchs8r40v8s") (f (quote (("google" "base64" "yup-oauth2" "hyper" "http") ("default"))))))

(define-public crate-hedwig-1.0.1 (c (n "hedwig") (v "1.0.1") (d (list (d (n "base64") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.13.1") (o #t) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.4.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "strum") (r "^0.18") (d #t) (k 2)) (d (n "strum_macros") (r "^0.18") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^0.2.4") (f (quote ("macros"))) (d #t) (k 2)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "valico") (r "^3.2") (d #t) (k 0)) (d (n "yup-oauth2") (r "^4") (o #t) (d #t) (k 0)))) (h "0r535h3i8i27jfgm767if0gxa9yrj33dgn4m40yyb3kbyfasba2c") (f (quote (("google" "base64" "yup-oauth2" "hyper" "http") ("default"))))))

(define-public crate-hedwig-2.0.0 (c (n "hedwig") (v "2.0.0") (d (list (d (n "base64") (r "^0.12") (o #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "http") (r "^0.2") (o #t) (k 0)) (d (n "hyper") (r "^0.13.1") (o #t) (k 0)) (d (n "hyper-tls") (r "^0.4.0") (d #t) (k 2)) (d (n "prost") (r "^0.6") (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "thiserror") (r "^1") (k 0)) (d (n "tokio") (r "^0.2.4") (f (quote ("macros"))) (d #t) (k 2)) (d (n "url") (r "^2") (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (k 0)) (d (n "valico") (r "^3.2") (o #t) (k 0)) (d (n "yup-oauth2") (r "^4") (o #t) (k 0)))) (h "033mpb90c76k29iv7209qml6kcf24mnqakffm21ybbafcxr657k9") (f (quote (("protobuf" "prost") ("json-schema" "valico" "serde_json" "serde") ("google" "base64" "yup-oauth2" "hyper" "http" "serde_json" "serde" "serde/derive" "uuid/serde") ("default"))))))

(define-public crate-hedwig-2.1.0 (c (n "hedwig") (v "2.1.0") (d (list (d (n "base64") (r "^0.12") (o #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "http") (r "^0.2") (o #t) (k 0)) (d (n "hyper") (r "^0.13.1") (o #t) (k 0)) (d (n "hyper-tls") (r "^0.4.0") (d #t) (k 2)) (d (n "prost") (r "^0.6") (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "thiserror") (r "^1") (k 0)) (d (n "tokio") (r "^0.2.4") (f (quote ("macros"))) (d #t) (k 2)) (d (n "url") (r "^2") (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (k 0)) (d (n "valico") (r "^3.2") (o #t) (k 0)) (d (n "yup-oauth2") (r "^4") (o #t) (k 0)))) (h "0wwa1iikj15yflm3wsjb1976slincy7qwzdrcyc2p2vqm2zg60bz") (f (quote (("protobuf" "prost") ("json-schema" "valico" "serde_json" "serde") ("google" "base64" "yup-oauth2" "hyper" "http" "serde_json" "serde" "serde/derive" "uuid/serde") ("default"))))))

(define-public crate-hedwig-3.0.0 (c (n "hedwig") (v "3.0.0") (d (list (d (n "base64") (r "^0.13") (o #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "http") (r "^0.2") (o #t) (k 0)) (d (n "hyper") (r "^0.14.4") (f (quote ("client" "stream"))) (o #t) (k 0)) (d (n "hyper-tls") (r "^0.5.0") (d #t) (k 2)) (d (n "prost") (r "^0.7") (f (quote ("std"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "thiserror") (r "^1") (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt"))) (d #t) (k 2)) (d (n "url") (r "^2") (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (k 0)) (d (n "valico") (r "^3.2") (o #t) (k 0)) (d (n "yup-oauth2") (r "^5") (f (quote ("hyper-rustls"))) (o #t) (k 0)))) (h "1xprjfzivm96187l53v2lx7w751pjp0zd2qa3mkiqhq1f2ci0v7w") (f (quote (("protobuf" "prost") ("json-schema" "valico" "serde_json" "serde") ("google" "base64" "yup-oauth2" "hyper" "http" "serde_json" "serde" "serde/derive" "uuid/serde") ("default"))))))

(define-public crate-hedwig-3.1.0 (c (n "hedwig") (v "3.1.0") (d (list (d (n "base64") (r "^0.13") (o #t) (k 0)) (d (n "either") (r "^1") (o #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "http") (r "^0.2") (o #t) (k 0)) (d (n "hyper") (r "^0.14.4") (f (quote ("client" "stream"))) (o #t) (k 0)) (d (n "hyper-tls") (r "^0.5.0") (d #t) (k 2)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "prost") (r "^0.7") (f (quote ("std"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "thiserror") (r "^1") (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt"))) (d #t) (k 2)) (d (n "url") (r "^2") (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (k 0)) (d (n "valico") (r "^3.2") (o #t) (k 0)) (d (n "yup-oauth2") (r "^5") (f (quote ("hyper-rustls"))) (o #t) (k 0)))) (h "0l07qi25i71zqn2c1y5bza9hssc05in0xhzip5sgc2pn2m3pym6j") (f (quote (("sink" "futures-util/sink" "either") ("protobuf" "prost") ("json-schema" "valico" "serde_json" "serde") ("google" "base64" "yup-oauth2" "hyper" "http" "serde_json" "serde" "serde/derive" "uuid/serde") ("default" "sink"))))))

(define-public crate-hedwig-4.0.0 (c (n "hedwig") (v "4.0.0") (d (list (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (f (quote ("use_std"))) (o #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "http") (r "^0.2") (o #t) (k 0)) (d (n "hyper") (r "^0.14.4") (f (quote ("client" "stream"))) (o #t) (k 0)) (d (n "hyper-tls") (r "^0.5.0") (d #t) (k 2)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "prost") (r "^0.7") (f (quote ("std"))) (o #t) (k 0)) (d (n "prost") (r "^0.7") (f (quote ("std" "prost-derive"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "thiserror") (r "^1") (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt"))) (d #t) (k 2)) (d (n "url") (r "^2") (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (k 0)) (d (n "valico") (r "^3.2") (o #t) (k 0)) (d (n "yup-oauth2") (r "^5.1") (f (quote ("hyper-rustls"))) (o #t) (k 0)))) (h "1bfjkhgfbbvqdfliw1icx997d85rf95diryi2qd7wiznb8ydv55n") (f (quote (("sink" "futures-util/sink" "either" "publish") ("publish") ("protobuf" "prost") ("json-schema" "valico" "serde_json" "serde") ("google" "base64" "yup-oauth2" "hyper" "http" "serde_json" "serde" "serde/derive" "uuid/serde") ("default" "consume" "sink") ("consume" "async-trait" "either"))))))

(define-public crate-hedwig-4.1.0 (c (n "hedwig") (v "4.1.0") (d (list (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (f (quote ("use_std"))) (o #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "http") (r "^0.2") (o #t) (k 0)) (d (n "hyper") (r "^0.14.4") (f (quote ("client" "stream"))) (o #t) (k 0)) (d (n "hyper-tls") (r "^0.5.0") (d #t) (k 2)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "prost") (r "^0.7") (f (quote ("std"))) (o #t) (k 0)) (d (n "prost") (r "^0.7") (f (quote ("std" "prost-derive"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "thiserror") (r "^1") (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt"))) (d #t) (k 2)) (d (n "url") (r "^2") (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (k 0)) (d (n "valico") (r "^3.2") (o #t) (k 0)) (d (n "yup-oauth2") (r "^5.1") (f (quote ("hyper-rustls"))) (o #t) (k 0)))) (h "1jzz3z3835jjfccc0hdgvgivs7l7b4c6x457m9n3zn2rlkcavhk3") (f (quote (("sink" "futures-util/sink" "either" "publish") ("publish") ("protobuf" "prost") ("json-schema" "valico" "serde_json" "serde") ("google" "base64" "yup-oauth2" "hyper" "http" "serde_json" "serde" "serde/derive" "uuid/serde") ("default" "consume" "sink") ("consume" "async-trait" "either"))))))

(define-public crate-hedwig-4.1.1 (c (n "hedwig") (v "4.1.1") (d (list (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (f (quote ("use_std"))) (o #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "http") (r "^0.2") (o #t) (k 0)) (d (n "hyper") (r "^0.14.4") (f (quote ("client" "stream"))) (o #t) (k 0)) (d (n "hyper-tls") (r "^0.5.0") (d #t) (k 2)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "prost") (r "^0.7") (f (quote ("std"))) (o #t) (k 0)) (d (n "prost") (r "^0.7") (f (quote ("std" "prost-derive"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "thiserror") (r "^1") (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt"))) (d #t) (k 2)) (d (n "url") (r "^2") (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (k 0)) (d (n "valico") (r "^3.2") (o #t) (k 0)) (d (n "yup-oauth2") (r "^5.1") (f (quote ("hyper-rustls"))) (o #t) (k 0)))) (h "1iwsgk6g8k2rbvbp512kmwxkqrjja8lsx6pmj2kzbh1jdvybxgdd") (f (quote (("sink" "futures-util/sink" "either" "publish") ("publish") ("protobuf" "prost") ("json-schema" "valico" "serde_json" "serde") ("google" "base64" "yup-oauth2" "hyper" "http" "serde_json" "serde" "serde/derive" "uuid/serde") ("default" "consume" "sink") ("consume" "async-trait" "either"))))))

(define-public crate-hedwig-5.0.0 (c (n "hedwig") (v "5.0.0") (d (list (d (n "async-channel") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "async-channel") (r "^1.6") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (f (quote ("use_std"))) (k 0)) (d (n "futures-channel") (r "^0.3.17") (d #t) (k 2)) (d (n "futures-util") (r "^0.3.17") (f (quote ("std" "sink"))) (k 0)) (d (n "parking_lot") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 2)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "prost") (r "^0.8") (f (quote ("std"))) (o #t) (k 0)) (d (n "prost") (r "^0.8") (f (quote ("std" "prost-derive"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt"))) (d #t) (k 2)) (d (n "tonic") (r "^0.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1.26") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (k 0)) (d (n "valico") (r "^3.2") (o #t) (k 0)) (d (n "ya-gcp") (r "^0.6.3") (f (quote ("pubsub"))) (o #t) (d #t) (k 0)) (d (n "ya-gcp") (r "^0.6.3") (f (quote ("pubsub" "emulators"))) (d #t) (k 2)))) (h "0y7rp6167bqmadd9c9s6vl18jwcznw45fhcxyjs2x6k174fhxfdk") (f (quote (("protobuf" "prost") ("mock" "async-channel" "parking_lot") ("json-schema" "valico" "serde_json" "serde") ("google" "ya-gcp" "tracing" "parking_lot") ("default"))))))

(define-public crate-hedwig-6.0.0 (c (n "hedwig") (v "6.0.0") (d (list (d (n "async-channel") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "async-channel") (r "^1.6") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (f (quote ("use_std"))) (k 0)) (d (n "futures-channel") (r "^0.3.17") (d #t) (k 2)) (d (n "futures-util") (r "^0.3.17") (f (quote ("std" "sink"))) (k 0)) (d (n "parking_lot") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 2)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "prost") (r "^0.9") (f (quote ("std"))) (o #t) (k 0)) (d (n "prost") (r "^0.9") (f (quote ("std" "prost-derive"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt"))) (d #t) (k 2)) (d (n "tonic") (r "^0.6") (d #t) (k 2)) (d (n "tracing") (r "^0.1.26") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (k 0)) (d (n "valico") (r "^3.2") (o #t) (k 0)) (d (n "ya-gcp") (r "^0.7.2") (f (quote ("pubsub"))) (o #t) (d #t) (k 0)) (d (n "ya-gcp") (r "^0.7") (f (quote ("pubsub" "emulators"))) (d #t) (k 2)))) (h "16c28rg0r4c71xpm6a4h85gzbyhvid0v1b8m8ndbs2a50w2xy4ij") (f (quote (("protobuf" "prost") ("mock" "async-channel" "parking_lot") ("json-schema" "valico" "serde_json" "serde") ("google" "ya-gcp" "tracing" "parking_lot") ("default"))))))

(define-public crate-hedwig-6.0.1 (c (n "hedwig") (v "6.0.1") (d (list (d (n "async-channel") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "async-channel") (r "^1.6") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (f (quote ("use_std"))) (k 0)) (d (n "futures-channel") (r "^0.3.17") (d #t) (k 2)) (d (n "futures-util") (r "^0.3.17") (f (quote ("std" "sink"))) (k 0)) (d (n "parking_lot") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 2)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "prost") (r "^0.9") (f (quote ("std"))) (o #t) (k 0)) (d (n "prost") (r "^0.9") (f (quote ("std" "prost-derive"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt"))) (d #t) (k 2)) (d (n "tonic") (r "^0.6") (d #t) (k 2)) (d (n "tracing") (r "^0.1.26") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (k 0)) (d (n "valico") (r "^3.2") (o #t) (k 0)) (d (n "ya-gcp") (r "^0.7.2") (f (quote ("pubsub"))) (o #t) (d #t) (k 0)) (d (n "ya-gcp") (r "^0.7") (f (quote ("pubsub" "emulators"))) (d #t) (k 2)))) (h "1g0phj4p0kxv85mr9q7bgawh0z2c1djnhf8ia4kgiqsvgabcmbwk") (f (quote (("protobuf" "prost") ("mock" "async-channel" "parking_lot") ("json-schema" "valico" "serde_json" "serde") ("google" "ya-gcp" "tracing" "parking_lot") ("default"))))))

(define-public crate-hedwig-6.1.0 (c (n "hedwig") (v "6.1.0") (d (list (d (n "async-channel") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "async-channel") (r "^1.6") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (f (quote ("use_std"))) (k 0)) (d (n "futures-channel") (r "^0.3.17") (d #t) (k 2)) (d (n "futures-util") (r "^0.3.17") (f (quote ("std" "sink"))) (k 0)) (d (n "parking_lot") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 2)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "prost") (r "^0.9") (f (quote ("std"))) (o #t) (k 0)) (d (n "prost") (r "^0.9") (f (quote ("std" "prost-derive"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt"))) (d #t) (k 2)) (d (n "tonic") (r "^0.6") (d #t) (k 2)) (d (n "tracing") (r "^0.1.26") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (k 0)) (d (n "valico") (r "^3.2") (o #t) (k 0)) (d (n "ya-gcp") (r "^0.7.2") (f (quote ("pubsub"))) (o #t) (d #t) (k 0)) (d (n "ya-gcp") (r "^0.7") (f (quote ("pubsub" "emulators"))) (d #t) (k 2)))) (h "07ljss94xdfy1pqwbxrj763bx62wj8xxdih0678jm27aknld4w8w") (f (quote (("protobuf" "prost") ("mock" "async-channel" "parking_lot") ("json-schema" "valico" "serde_json" "serde") ("google" "ya-gcp" "tracing" "parking_lot") ("default"))))))

(define-public crate-hedwig-6.2.0 (c (n "hedwig") (v "6.2.0") (d (list (d (n "async-channel") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "async-channel") (r "^1.6") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (f (quote ("use_std"))) (k 0)) (d (n "futures-channel") (r "^0.3.17") (d #t) (k 2)) (d (n "futures-util") (r "^0.3.17") (f (quote ("std" "sink"))) (k 0)) (d (n "parking_lot") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 2)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "prost") (r "^0.9") (f (quote ("std"))) (o #t) (k 0)) (d (n "prost") (r "^0.9") (f (quote ("std" "prost-derive"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt"))) (d #t) (k 2)) (d (n "tonic") (r "^0.6") (d #t) (k 2)) (d (n "tracing") (r "^0.1.26") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (k 0)) (d (n "valico") (r "^3.2") (o #t) (k 0)) (d (n "ya-gcp") (r "^0.7.2") (f (quote ("pubsub"))) (o #t) (d #t) (k 0)) (d (n "ya-gcp") (r "^0.7") (f (quote ("pubsub" "emulators"))) (d #t) (k 2)))) (h "0hyj08sjwb0j784aqf59hzjnczh38ap0ziv8hq0rsg9hmqq6aq1z") (f (quote (("protobuf" "prost") ("mock" "async-channel" "parking_lot") ("json-schema" "valico" "serde_json" "serde") ("google" "ya-gcp" "tracing" "parking_lot") ("default"))))))

(define-public crate-hedwig-6.3.0 (c (n "hedwig") (v "6.3.0") (d (list (d (n "async-channel") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "async-channel") (r "^1.6") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (f (quote ("use_std"))) (k 0)) (d (n "futures-channel") (r "^0.3.17") (d #t) (k 2)) (d (n "futures-util") (r "^0.3.17") (f (quote ("std" "sink"))) (k 0)) (d (n "parking_lot") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 2)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "prost") (r "^0.9") (f (quote ("std"))) (o #t) (k 0)) (d (n "prost") (r "^0.9") (f (quote ("std" "prost-derive"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt"))) (d #t) (k 2)) (d (n "tonic") (r "^0.6") (d #t) (k 2)) (d (n "tracing") (r "^0.1.26") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (k 0)) (d (n "valico") (r "^3.2") (o #t) (k 0)) (d (n "ya-gcp") (r "^0.7.2") (f (quote ("pubsub"))) (o #t) (d #t) (k 0)) (d (n "ya-gcp") (r "^0.7") (f (quote ("pubsub" "emulators"))) (d #t) (k 2)))) (h "1wn9mdwmkiqzxkh5c3d9wcb3wrw3f6mx9gzccprq45pwlmqyrp4n") (f (quote (("protobuf" "prost") ("mock" "async-channel" "parking_lot") ("json-schema" "valico" "serde_json" "serde") ("google" "ya-gcp" "tracing" "parking_lot") ("default"))))))

(define-public crate-hedwig-6.4.0 (c (n "hedwig") (v "6.4.0") (d (list (d (n "async-channel") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "async-channel") (r "^1.6") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (f (quote ("use_std"))) (k 0)) (d (n "futures-channel") (r "^0.3.17") (d #t) (k 2)) (d (n "futures-util") (r "^0.3.17") (f (quote ("std" "sink"))) (k 0)) (d (n "parking_lot") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 2)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "prost") (r "^0.9") (f (quote ("std"))) (o #t) (k 0)) (d (n "prost") (r "^0.9") (f (quote ("std" "prost-derive"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "smallstr") (r "^0.3.0") (f (quote ("union"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt"))) (d #t) (k 2)) (d (n "tonic") (r "^0.6") (d #t) (k 2)) (d (n "tracing") (r "^0.1.26") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (k 0)) (d (n "valico") (r "^3.2") (o #t) (k 0)) (d (n "ya-gcp") (r "^0.7.2") (f (quote ("pubsub"))) (o #t) (d #t) (k 0)) (d (n "ya-gcp") (r "^0.7") (f (quote ("pubsub" "emulators"))) (d #t) (k 2)))) (h "0d10khc6msqp97ybf9sp3j87b1g04x0zlp4zhdfd2xzc5z2zmlll") (f (quote (("protobuf" "prost") ("mock" "async-channel" "parking_lot") ("json-schema" "valico" "serde_json" "serde") ("google" "ya-gcp" "tracing" "parking_lot") ("default"))))))

(define-public crate-hedwig-7.0.0 (c (n "hedwig") (v "7.0.0") (d (list (d (n "async-channel") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "async-channel") (r "^1.6") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (f (quote ("use_std"))) (k 0)) (d (n "futures-channel") (r "^0.3.17") (d #t) (k 2)) (d (n "futures-util") (r "^0.3.17") (f (quote ("std" "sink"))) (k 0)) (d (n "parking_lot") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 2)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "prost") (r "^0.12") (f (quote ("std"))) (o #t) (k 0)) (d (n "prost") (r "^0.12") (f (quote ("std" "prost-derive"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "smallstr") (r "^0.3.0") (f (quote ("union"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt"))) (d #t) (k 2)) (d (n "tonic") (r "^0.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (k 0)) (d (n "uuid") (r "^1.6") (f (quote ("v4"))) (k 0)) (d (n "valico") (r "^3.2") (o #t) (k 0)) (d (n "ya-gcp") (r "^0.11") (f (quote ("pubsub"))) (o #t) (d #t) (k 0)) (d (n "ya-gcp") (r "^0.11") (f (quote ("pubsub" "emulators"))) (d #t) (k 2)))) (h "1508k4vfqm21b67da9wx0g2v8rhlrc3pw1anihaxzr7zkv17jsn9") (f (quote (("protobuf" "prost") ("mock" "async-channel" "parking_lot") ("json-schema" "valico" "serde_json" "serde") ("google" "ya-gcp" "tracing" "parking_lot") ("default"))))))

(define-public crate-hedwig-7.1.0 (c (n "hedwig") (v "7.1.0") (d (list (d (n "async-channel") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "async-channel") (r "^1.6") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (f (quote ("use_std"))) (k 0)) (d (n "futures-channel") (r "^0.3.17") (d #t) (k 2)) (d (n "futures-util") (r "^0.3.17") (f (quote ("std" "sink"))) (k 0)) (d (n "hedwig_core") (r "^0.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 2)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "prost") (r "^0.12") (f (quote ("std"))) (o #t) (k 0)) (d (n "prost") (r "^0.12") (f (quote ("std" "prost-derive"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "smallstr") (r "^0.3.0") (f (quote ("union"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt"))) (d #t) (k 2)) (d (n "tonic") (r "^0.10") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (k 0)) (d (n "uuid") (r "^1.6") (f (quote ("v4"))) (k 0)) (d (n "valico") (r "^3.2") (o #t) (k 0)) (d (n "ya-gcp") (r "^0.11") (f (quote ("pubsub"))) (o #t) (d #t) (k 0)) (d (n "ya-gcp") (r "^0.11") (f (quote ("pubsub" "emulators"))) (d #t) (k 2)))) (h "1rqphw53c19m50d5za029sj4w8gm8ncxyzin6i1xha1m1ay00pkx") (f (quote (("protobuf" "prost") ("mock" "async-channel" "parking_lot") ("json-schema" "valico" "serde_json" "serde") ("google" "ya-gcp" "tracing" "parking_lot") ("default"))))))

