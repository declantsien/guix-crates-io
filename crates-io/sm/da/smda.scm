(define-module (crates-io sm da smda) #:use-module (crates-io))

(define-public crate-smda-0.1.5 (c (n "smda") (v "0.1.5") (d (list (d (n "capstone") (r "^0.10.0") (d #t) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "goblin") (r "^0.4.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "ring") (r "^0.17.0-alpha.11") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.75") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "0x89gjsyrz84fpsnmyqk0k36r7mw908jlyydw8iv2a8apkxisg45")))

(define-public crate-smda-0.1.6 (c (n "smda") (v "0.1.6") (d (list (d (n "capstone") (r "^0.10.0") (d #t) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "goblin") (r "^0.4.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "ring") (r "^0.17.0-alpha.11") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.75") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "10vrvafm5f6pva3ih5bb7c3y8g4qy9gfbhj2fhjrxi5psslwb7gj")))

(define-public crate-smda-0.2.0 (c (n "smda") (v "0.2.0") (d (list (d (n "capstone") (r "^0.10.0") (d #t) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "goblin") (r "^0.4.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "ring") (r "^0.17.0-alpha.11") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "13bwgwj4q5bhkg08ibz4wcypm1lrf116qvhk9pamhqslplfl4i5a")))

(define-public crate-smda-0.2.1 (c (n "smda") (v "0.2.1") (d (list (d (n "capstone") (r "^0.10.0") (d #t) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "goblin") (r "^0.4.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "ring") (r "^0.17.0-alpha.11") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0sknpiwvzxpdkqws7cgayv0ami1pqc29b8bfhvsc969wd7yv8sda")))

(define-public crate-smda-0.2.2 (c (n "smda") (v "0.2.2") (d (list (d (n "capstone") (r "^0.10.0") (d #t) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "goblin") (r "^0.4.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "ring") (r "^0.17.0-alpha.11") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "04g7ah4n0z9awszww8zj6s6j654vnyycka00pfjq8pliabiscic6")))

(define-public crate-smda-0.2.3 (c (n "smda") (v "0.2.3") (d (list (d (n "capstone") (r "^0.10.0") (d #t) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "goblin") (r "^0.4.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "ring") (r "^0.17.0-alpha.11") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0qp1b2aijpy9pa4c05xs75krh3nsbc8ra0ajqcg5qbbjxvibv1lx")))

(define-public crate-smda-0.2.4 (c (n "smda") (v "0.2.4") (d (list (d (n "capstone") (r "^0.10.0") (d #t) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "goblin") (r "^0.4.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "ring") (r "^0.17.0-alpha.11") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0pq5367b4mz768qp4gvaz4hh2idjyhz4vdx6whlgfbnafl541lg6")))

(define-public crate-smda-0.2.5 (c (n "smda") (v "0.2.5") (d (list (d (n "capstone") (r "^0.10.0") (d #t) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "goblin") (r "^0.4.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "ring") (r "^0.17.0-alpha.11") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0b671cffgmnb0qnr37gxni2042id6lp8v8fixipdwicmg0yl5jav")))

(define-public crate-smda-0.2.6 (c (n "smda") (v "0.2.6") (d (list (d (n "capstone") (r "^0.11.0") (d #t) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "goblin") (r "^0.8.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "ring") (r "^0.17.0-alpha.11") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1fkzhy9f9a3dym66ipcxp87lfdpki0w3ma53q5qdrinidfxscj6n")))

(define-public crate-smda-0.2.7 (c (n "smda") (v "0.2.7") (d (list (d (n "capstone") (r "^0.11.0") (d #t) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "goblin") (r "^0.8.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "ring") (r "^0.17.0-alpha.11") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "17afardwkb2gdp6my13kbrx6xcqw50iivm88cz625hgmzphg62mz")))

