(define-module (crates-io sm ar smartgpt) #:use-module (crates-io))

(define-public crate-smartgpt-0.1.0 (c (n "smartgpt") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "async-openai") (r "^0.10.2") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.4") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "json5") (r "^0.4.1") (d #t) (k 0)) (d (n "llm") (r "^0.1.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "qdrant-client") (r "^1.1.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "readability") (r "^0.2.0") (d #t) (k 0)) (d (n "redis") (r "^0.23.0") (f (quote ("tokio-comp" "json"))) (d #t) (k 0)) (d (n "regex") (r "^1.7.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.16") (d #t) (k 0)) (d (n "rustpython-parser") (r "^0.2.0") (d #t) (k 0)) (d (n "select") (r "^0.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.21") (d #t) (k 0)) (d (n "textwrap") (r "^0.16.0") (d #t) (k 0)) (d (n "tiktoken-rs") (r "^0.4.1") (f (quote ("async-openai"))) (d #t) (k 0)) (d (n "tokenizers") (r "^0.13.3") (d #t) (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("macros" "io-util" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tonic") (r "^0.9.2") (d #t) (k 0)))) (h "1va2n83w9g3k4mi08p0pcfia6cgjgzxkg6hi2acwinv96cw924ky")))

(define-public crate-smartgpt-0.1.1 (c (n "smartgpt") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "async-openai") (r "^0.10.2") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.4") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "json5") (r "^0.4.1") (d #t) (k 0)) (d (n "llm") (r "^0.1.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "qdrant-client") (r "^1.1.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "readability") (r "^0.2.0") (d #t) (k 0)) (d (n "redis") (r "^0.23.0") (f (quote ("tokio-comp" "json"))) (d #t) (k 0)) (d (n "regex") (r "^1.7.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.16") (d #t) (k 0)) (d (n "rustpython-parser") (r "^0.2.0") (d #t) (k 0)) (d (n "select") (r "^0.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.21") (d #t) (k 0)) (d (n "textwrap") (r "^0.16.0") (d #t) (k 0)) (d (n "tiktoken-rs") (r "^0.4.1") (f (quote ("async-openai"))) (d #t) (k 0)) (d (n "tokenizers") (r "^0.13.3") (d #t) (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("macros" "io-util" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tonic") (r "^0.9.2") (d #t) (k 0)))) (h "0frhz8ybvbn65lzlzdl02941ynfcp26rw8lmhb5js2ywyn3y8v3f")))

(define-public crate-smartgpt-0.1.2 (c (n "smartgpt") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "async-openai") (r "^0.10.2") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.4") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "json5") (r "^0.4.1") (d #t) (k 0)) (d (n "llm") (r "^0.1.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "qdrant-client") (r "^1.1.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "readability") (r "^0.2.0") (d #t) (k 0)) (d (n "redis") (r "^0.23.0") (f (quote ("tokio-comp" "json"))) (d #t) (k 0)) (d (n "regex") (r "^1.7.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.16") (d #t) (k 0)) (d (n "rustpython-parser") (r "^0.2.0") (d #t) (k 0)) (d (n "select") (r "^0.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.21") (d #t) (k 0)) (d (n "textwrap") (r "^0.16.0") (d #t) (k 0)) (d (n "tiktoken-rs") (r "^0.4.1") (f (quote ("async-openai"))) (d #t) (k 0)) (d (n "tokenizers") (r "^0.13.3") (d #t) (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("macros" "io-util" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tonic") (r "^0.9.2") (d #t) (k 0)))) (h "0iizwh9m8if6rvfzgry6jp8q2hm5g78m5s45mimjqznhpilq01c9")))

(define-public crate-smartgpt-0.1.3 (c (n "smartgpt") (v "0.1.3") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "async-openai") (r "^0.10.2") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.4") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "json5") (r "^0.4.1") (d #t) (k 0)) (d (n "llm") (r "^0.1.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "qdrant-client") (r "^1.1.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "readability") (r "^0.2.0") (d #t) (k 0)) (d (n "redis") (r "^0.23.0") (f (quote ("tokio-comp" "json"))) (d #t) (k 0)) (d (n "regex") (r "^1.7.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.16") (d #t) (k 0)) (d (n "rustpython-parser") (r "^0.2.0") (d #t) (k 0)) (d (n "select") (r "^0.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.21") (d #t) (k 0)) (d (n "textwrap") (r "^0.16.0") (d #t) (k 0)) (d (n "tiktoken-rs") (r "^0.4.1") (f (quote ("async-openai"))) (d #t) (k 0)) (d (n "tokenizers") (r "^0.13.3") (d #t) (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("macros" "io-util" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tonic") (r "^0.9.2") (d #t) (k 0)))) (h "07zvs7w16ijr8jq5508xi3ml67nacv8nrqxwbl9avzdxvlcqwm3x")))

(define-public crate-smartgpt-0.1.4 (c (n "smartgpt") (v "0.1.4") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "async-openai") (r "^0.10.2") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.4") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "json5") (r "^0.4.1") (d #t) (k 0)) (d (n "llm") (r "^0.1.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "qdrant-client") (r "^1.1.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "readability") (r "^0.2.0") (d #t) (k 0)) (d (n "redis") (r "^0.23.0") (f (quote ("tokio-comp" "json"))) (d #t) (k 0)) (d (n "regex") (r "^1.7.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.16") (d #t) (k 0)) (d (n "rustpython-parser") (r "^0.2.0") (d #t) (k 0)) (d (n "select") (r "^0.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.21") (d #t) (k 0)) (d (n "textwrap") (r "^0.16.0") (d #t) (k 0)) (d (n "tiktoken-rs") (r "^0.4.1") (f (quote ("async-openai"))) (d #t) (k 0)) (d (n "tokenizers") (r "^0.13.3") (d #t) (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("macros" "io-util" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tonic") (r "^0.9.2") (d #t) (k 0)))) (h "13imghiplm02nvy6hyy3w5pfk4k2rizqxx192zsxkqxaax0b170q")))

(define-public crate-smartgpt-0.1.5 (c (n "smartgpt") (v "0.1.5") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "async-openai") (r "^0.10.2") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.4") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "json5") (r "^0.4.1") (d #t) (k 0)) (d (n "llm") (r "^0.1.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "qdrant-client") (r "^1.1.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "readability") (r "^0.2.0") (d #t) (k 0)) (d (n "redis") (r "^0.23.0") (f (quote ("tokio-comp" "json"))) (d #t) (k 0)) (d (n "regex") (r "^1.7.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.16") (d #t) (k 0)) (d (n "rustpython-parser") (r "^0.2.0") (d #t) (k 0)) (d (n "select") (r "^0.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.21") (d #t) (k 0)) (d (n "textwrap") (r "^0.16.0") (d #t) (k 0)) (d (n "tiktoken-rs") (r "^0.4.1") (f (quote ("async-openai"))) (d #t) (k 0)) (d (n "tokenizers") (r "^0.13.3") (d #t) (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("macros" "io-util" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tonic") (r "^0.9.2") (d #t) (k 0)))) (h "0x28xlxlrchflxfjvhfy6bsa80g55y49dc305740ly59n427ycmr")))

(define-public crate-smartgpt-0.1.6 (c (n "smartgpt") (v "0.1.6") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "async-openai") (r "^0.10.2") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.4") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "json5") (r "^0.4.1") (d #t) (k 0)) (d (n "llm") (r "^0.1.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "qdrant-client") (r "^1.1.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "readability") (r "^0.2.0") (d #t) (k 0)) (d (n "redis") (r "^0.23.0") (f (quote ("tokio-comp" "json"))) (d #t) (k 0)) (d (n "regex") (r "^1.7.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.16") (d #t) (k 0)) (d (n "rustpython-parser") (r "^0.2.0") (d #t) (k 0)) (d (n "select") (r "^0.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.21") (d #t) (k 0)) (d (n "textwrap") (r "^0.16.0") (d #t) (k 0)) (d (n "tiktoken-rs") (r "^0.4.1") (f (quote ("async-openai"))) (d #t) (k 0)) (d (n "tokenizers") (r "^0.13.3") (d #t) (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("macros" "io-util" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tonic") (r "^0.9.2") (d #t) (k 0)))) (h "1qn2r2p4kx8jnxl67jmna0d6f8bd5s5fr8rqjj5l4vsfxavv8l7w")))

(define-public crate-smartgpt-0.1.7 (c (n "smartgpt") (v "0.1.7") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "async-openai") (r "^0.10.2") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.4") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "json5") (r "^0.4.1") (d #t) (k 0)) (d (n "llm") (r "^0.1.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "qdrant-client") (r "^1.1.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "readability") (r "^0.2.0") (d #t) (k 0)) (d (n "redis") (r "^0.23.0") (f (quote ("tokio-comp" "json"))) (d #t) (k 0)) (d (n "regex") (r "^1.7.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.16") (d #t) (k 0)) (d (n "rustpython-parser") (r "^0.2.0") (d #t) (k 0)) (d (n "select") (r "^0.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.21") (d #t) (k 0)) (d (n "textwrap") (r "^0.16.0") (d #t) (k 0)) (d (n "tiktoken-rs") (r "^0.4.1") (f (quote ("async-openai"))) (d #t) (k 0)) (d (n "tokenizers") (r "^0.13.3") (d #t) (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("macros" "io-util" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tonic") (r "^0.9.2") (d #t) (k 0)))) (h "1v7f2x16cixg10f697pc5v9pbmpyp4p7swpvja4j4r6gplpg91fv")))

(define-public crate-smartgpt-0.1.8 (c (n "smartgpt") (v "0.1.8") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "async-openai") (r "^0.10.2") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.4") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "json5") (r "^0.4.1") (d #t) (k 0)) (d (n "llm") (r "^0.1.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "qdrant-client") (r "^1.1.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "readability") (r "^0.2.0") (d #t) (k 0)) (d (n "redis") (r "^0.23.0") (f (quote ("tokio-comp" "json"))) (d #t) (k 0)) (d (n "regex") (r "^1.7.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.16") (d #t) (k 0)) (d (n "rustpython-parser") (r "^0.2.0") (d #t) (k 0)) (d (n "select") (r "^0.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.21") (d #t) (k 0)) (d (n "textwrap") (r "^0.16.0") (d #t) (k 0)) (d (n "tiktoken-rs") (r "^0.4.1") (f (quote ("async-openai"))) (d #t) (k 0)) (d (n "tokenizers") (r "^0.13.3") (d #t) (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("macros" "io-util" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tonic") (r "^0.9.2") (d #t) (k 0)))) (h "1jbdzh5rqncakxm57jlszrm2d8ach9m9q9z8m3yrpkx7r1z6gm2r")))

(define-public crate-smartgpt-0.1.9 (c (n "smartgpt") (v "0.1.9") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "async-openai") (r "^0.10.2") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.4") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "json5") (r "^0.4.1") (d #t) (k 0)) (d (n "llm") (r "^0.1.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "qdrant-client") (r "^1.1.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "readability") (r "^0.2.0") (d #t) (k 0)) (d (n "redis") (r "^0.23.0") (f (quote ("tokio-comp" "json"))) (d #t) (k 0)) (d (n "regex") (r "^1.7.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.16") (d #t) (k 0)) (d (n "rustpython-parser") (r "^0.2.0") (d #t) (k 0)) (d (n "select") (r "^0.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.21") (d #t) (k 0)) (d (n "textwrap") (r "^0.16.0") (d #t) (k 0)) (d (n "tiktoken-rs") (r "^0.4.1") (f (quote ("async-openai"))) (d #t) (k 0)) (d (n "tokenizers") (r "^0.13.3") (d #t) (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("macros" "io-util" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tonic") (r "^0.9.2") (d #t) (k 0)))) (h "1q6frhpjg5fxq53j7z79yvr2wvyh1077mdsp605s75rb6dqyq44g")))

