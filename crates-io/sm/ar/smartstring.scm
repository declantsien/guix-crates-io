(define-module (crates-io sm ar smartstring) #:use-module (crates-io))

(define-public crate-smartstring-0.1.0 (c (n "smartstring") (v "0.1.0") (d (list (d (n "arbitrary") (r "^0.4") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "proptest") (r "^0.9.6") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.1.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "03vb0kkwb254shyfbfaqyjx1hvfbnmbmfpxi9qk38r18dnm5l0sz") (f (quote (("test" "arbitrary"))))))

(define-public crate-smartstring-0.2.0 (c (n "smartstring") (v "0.2.0") (d (list (d (n "arbitrary") (r "^0.4") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "04658hhq99i3n41d8cmyx8qhgizyq25s1avwih6bfrg4w8qpwsj7") (f (quote (("test" "arbitrary"))))))

(define-public crate-smartstring-0.2.1 (c (n "smartstring") (v "0.2.1") (d (list (d (n "arbitrary") (r "^0.4") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "0cyk31nb2dyj9jhv0qpik752v6f0d5i5ja90aymvrlbl3p09phln") (f (quote (("test" "arbitrary"))))))

(define-public crate-smartstring-0.2.2 (c (n "smartstring") (v "0.2.2") (d (list (d (n "arbitrary") (r "^0.4") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "0bdmdbnbid3cbk8p717zwf4z928jzjqvn6g0dyfzdrja7ywrbp9d") (f (quote (("test" "arbitrary"))))))

(define-public crate-smartstring-0.2.3 (c (n "smartstring") (v "0.2.3") (d (list (d (n "arbitrary") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "proptest") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_test") (r "^1") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "03fqkzrmsxabq2s2kka1ylfax0bx01n8ajbdn7kr9bcj47bcgpib") (f (quote (("test" "arbitrary" "arbitrary/derive"))))))

(define-public crate-smartstring-0.2.4 (c (n "smartstring") (v "0.2.4") (d (list (d (n "arbitrary") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "proptest") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_test") (r "^1") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "142nry3g59lwyldfnd30yinc3pa6918zgf3x2hgvj1mc0vr0124k") (f (quote (("test" "std" "arbitrary" "arbitrary/derive") ("std") ("default" "std"))))))

(define-public crate-smartstring-0.2.5 (c (n "smartstring") (v "0.2.5") (d (list (d (n "arbitrary") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "proptest") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_test") (r "^1") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "02hqzs1k3bmi7sq8hzmpvvd4k891fm2w85nmy36bkrjijsxfsyam") (f (quote (("test" "std" "arbitrary" "arbitrary/derive") ("std") ("default" "std"))))))

(define-public crate-smartstring-0.2.6 (c (n "smartstring") (v "0.2.6") (d (list (d (n "arbitrary") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "proptest") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_test") (r "^1") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "1sdsrppmazvzrwbdivqzkfsrp0i6aqbyp7bql7w4rvzq1da8gnhs") (f (quote (("test" "std" "arbitrary" "arbitrary/derive") ("std") ("default" "std"))))))

(define-public crate-smartstring-0.2.7 (c (n "smartstring") (v "0.2.7") (d (list (d (n "arbitrary") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "proptest") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_test") (r "^1") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "15srd2l7wk26livnd7vkg9llmx0y9ksba1nq1yjsgayf27hhyqi9") (f (quote (("test" "std" "arbitrary" "arbitrary/derive") ("std") ("default" "std"))))))

(define-public crate-smartstring-0.2.8 (c (n "smartstring") (v "0.2.8") (d (list (d (n "arbitrary") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "proptest") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_test") (r "^1") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "1plivgx0ypdrmrvlzxiad9kcb434fpzx7i67bza42gcmdck5bbxs") (f (quote (("test" "std" "arbitrary" "arbitrary/derive") ("std") ("default" "std"))))))

(define-public crate-smartstring-0.2.9 (c (n "smartstring") (v "0.2.9") (d (list (d (n "arbitrary") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.2") (d #t) (k 2)) (d (n "proptest") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_test") (r "^1") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "16rc6n0p4r4aw6k6jxf2s37wyaijaa4pwpw7rqki7cn2q0qnmaii") (f (quote (("test" "std" "arbitrary" "arbitrary/derive") ("std") ("default" "std"))))))

(define-public crate-smartstring-0.2.10 (c (n "smartstring") (v "0.2.10") (d (list (d (n "arbitrary") (r "^1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "proptest") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_test") (r "^1") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 0)))) (h "13nlpk9a35dkbx0pzws6v29ad0cpqz772ns7rpyj28rzngrdy577") (f (quote (("test" "std" "arbitrary" "arbitrary/derive") ("std") ("default" "std")))) (r "1.56")))

(define-public crate-smartstring-1.0.0 (c (n "smartstring") (v "1.0.0") (d (list (d (n "arbitrary") (r "^1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "proptest") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_test") (r "^1") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 0)))) (h "0qs149h6zl9glbrfsr0rfkhhwd8v3rky7z9qybkyrj5c1kcqm5ga") (f (quote (("test" "std" "arbitrary" "arbitrary/derive") ("std") ("default" "std")))) (r "1.57")))

(define-public crate-smartstring-1.0.1 (c (n "smartstring") (v "1.0.1") (d (list (d (n "arbitrary") (r "^1") (o #t) (d #t) (k 0)) (d (n "autocfg") (r "^1") (d #t) (k 1)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "proptest") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_test") (r "^1") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "version_check") (r "^0.9") (d #t) (k 1)))) (h "0agf4x0jz79r30aqibyfjm1h9hrjdh0harcqcvb2vapv7rijrdrz") (f (quote (("test" "std" "arbitrary" "arbitrary/derive") ("std") ("default" "std")))) (r "1.57")))

