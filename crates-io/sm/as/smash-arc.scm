(define-module (crates-io sm as smash-arc) #:use-module (crates-io))

(define-public crate-smash-arc-0.2.0 (c (n "smash-arc") (v "0.2.0") (d (list (d (n "binread") (r "^1.4") (d #t) (k 0)) (d (n "crc32fast") (r "^1.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "modular-bitfield") (r "^0.10") (d #t) (k 0)) (d (n "network-reader-adapter") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "ruzstd") (r "=0.2.2") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "zstd") (r "^0.5") (o #t) (d #t) (k 0)))) (h "0486q1k1rnd7ik8azp3y6mn955fbbhc3556nzpxrbspii7rsz91x") (f (quote (("smash-runtime" "crc32fast/nightly") ("rust-zstd" "ruzstd") ("nozstd") ("network" "network-reader-adapter") ("libzstd" "zstd") ("global-hashes" "lazy_static" "parking_lot") ("dir-listing" "global-hashes") ("default" "dir-listing" "network"))))))

(define-public crate-smash-arc-0.2.1 (c (n "smash-arc") (v "0.2.1") (d (list (d (n "binread") (r "^1.4") (d #t) (k 0)) (d (n "crc32fast") (r "^1.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "modular-bitfield") (r "^0.10") (d #t) (k 0)) (d (n "network-reader-adapter") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "ruzstd") (r "=0.2.2") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "zstd") (r "^0.5") (o #t) (d #t) (k 0)))) (h "0f3sijasbrsa7jipwvznsy1sj883y4bqzykw7icqis7s55afl922") (f (quote (("smash-runtime" "crc32fast/nightly") ("rust-zstd" "ruzstd") ("nozstd") ("network" "network-reader-adapter") ("libzstd" "zstd") ("global-hashes" "lazy_static" "parking_lot") ("dir-listing" "global-hashes") ("default" "dir-listing" "network"))))))

(define-public crate-smash-arc-0.4.0 (c (n "smash-arc") (v "0.4.0") (d (list (d (n "bincode") (r "^1.3.3") (o #t) (d #t) (k 0)) (d (n "binrw") (r "^0.8.4") (d #t) (k 0)) (d (n "crc32fast") (r "=1.3.1") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "modular-bitfield") (r "^0.10") (d #t) (k 0)) (d (n "network-reader-adapter") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "ruzstd") (r "=0.2.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "zstd") (r "^0.5") (o #t) (d #t) (k 0)))) (h "11mpkwfl88zih3xdfzi0qy1h0zanclg37pigiv2kcavg5n5938jf") (f (quote (("smash-runtime" "crc32fast/nightly") ("serialize" "serde") ("search" "fuzzy-matcher" "rayon") ("rust-zstd" "ruzstd") ("nozstd") ("network" "network-reader-adapter") ("libzstd" "zstd") ("global-hashes" "lazy_static" "parking_lot") ("dir-listing" "global-hashes") ("default" "dir-listing" "network"))))))

(define-public crate-smash-arc-0.5.0 (c (n "smash-arc") (v "0.5.0") (d (list (d (n "bincode") (r "^1.3.3") (o #t) (d #t) (k 0)) (d (n "binrw") (r "^0.8.4") (d #t) (k 0)) (d (n "crc32fast") (r "^1.3.2") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "modular-bitfield") (r "^0.10") (d #t) (k 0)) (d (n "network-reader-adapter") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "ruzstd") (r "=0.2.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "zstd") (r "^0.5") (o #t) (d #t) (k 0)))) (h "1g4g6xdc32h3sb815rc68imy0m9a37rw5bx8gacgxixl4s0gln4d") (f (quote (("smash-runtime" "crc32fast/nightly") ("serialize" "serde") ("search" "fuzzy-matcher" "rayon") ("rust-zstd" "ruzstd") ("nozstd") ("network" "network-reader-adapter") ("libzstd" "zstd") ("global-hashes" "lazy_static" "parking_lot") ("ffi-bindings") ("dir-listing" "global-hashes") ("default" "dir-listing" "network"))))))

(define-public crate-smash-arc-0.6.0 (c (n "smash-arc") (v "0.6.0") (d (list (d (n "bincode") (r "^1.3.3") (o #t) (d #t) (k 0)) (d (n "binrw") (r "^0.11.2") (d #t) (k 0)) (d (n "crc32fast") (r "^1.3.2") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "modular-bitfield") (r "^0.11.2") (d #t) (k 0)) (d (n "network-reader-adapter") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "ruzstd") (r "=0.2.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "zstd") (r "^0.5") (o #t) (d #t) (k 0)))) (h "1k1lyx8gpss5k2279nyqk847y04lf8qcsbg8vhrm1si2h5j5iy5r") (f (quote (("smash-runtime" "crc32fast/nightly") ("serialize" "serde") ("search" "fuzzy-matcher" "rayon") ("rust-zstd" "ruzstd") ("nozstd") ("network" "network-reader-adapter") ("libzstd" "zstd") ("global-hashes" "lazy_static" "parking_lot") ("ffi-bindings") ("dir-listing" "global-hashes") ("default" "dir-listing" "network"))))))

