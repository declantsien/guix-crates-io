(define-module (crates-io sm it smithay) #:use-module (crates-io))

(define-public crate-smithay-0.1.0 (c (n "smithay") (v "0.1.0") (d (list (d (n "drm") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "error-chain") (r "^0.11.0") (d #t) (k 0)) (d (n "gbm") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "glium") (r "^0.17.1") (o #t) (k 0)) (d (n "image") (r "^0.15.0") (d #t) (k 0)) (d (n "input") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.4.0") (d #t) (k 0)) (d (n "nix") (r "^0.7.0") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 2)) (d (n "rental") (r "^0.4.11") (d #t) (k 0)) (d (n "slog") (r "^2.0.0") (d #t) (k 0)) (d (n "slog-async") (r "^2.0") (d #t) (k 2)) (d (n "slog-stdlog") (r "^2.0.0-0.2") (d #t) (k 0)) (d (n "slog-term") (r "^2.0") (d #t) (k 2)) (d (n "tempfile") (r "^2.1.5") (d #t) (k 0)) (d (n "wayland-client") (r "^0.9.9") (o #t) (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.10.2") (f (quote ("unstable_protocols" "server"))) (d #t) (k 0)) (d (n "wayland-server") (r "^0.10.2") (d #t) (k 0)) (d (n "winit") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "xkbcommon") (r "^0.2.1") (d #t) (k 0)))) (h "1c1j4hpw26x36cjhw88j0lb3zzd0c57bx4pg892fpl3k2l8bz603") (f (quote (("renderer_glium" "glium") ("default" "backend_winit" "backend_drm" "backend_libinput" "renderer_glium") ("backend_winit" "winit" "wayland-server/dlopen" "wayland-client/dlopen") ("backend_libinput" "input") ("backend_drm" "drm" "gbm"))))))

(define-public crate-smithay-0.2.0 (c (n "smithay") (v "0.2.0") (d (list (d (n "dbus") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "drm") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "error-chain") (r "^0.11.0") (d #t) (k 0)) (d (n "gbm") (r "^0.5.0") (f (quote ("drm-support"))) (o #t) (k 0)) (d (n "gl_generator") (r "^0.9") (o #t) (d #t) (k 1)) (d (n "glium") (r "^0.19.0") (o #t) (k 0)) (d (n "image") (r "^0.17.0") (d #t) (k 0)) (d (n "input") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 0)) (d (n "libloading") (r "^0.4.0") (d #t) (k 0)) (d (n "nix") (r "^0.11") (d #t) (k 0)) (d (n "slog") (r "^2.1.1") (d #t) (k 0)) (d (n "slog-stdlog") (r "^3.0.2") (d #t) (k 0)) (d (n "slog-term") (r "^2.3") (d #t) (k 2)) (d (n "systemd") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^2.1.5") (d #t) (k 0)) (d (n "udev") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "wayland-client") (r "^0.21.1") (f (quote ("egl"))) (o #t) (d #t) (k 0)) (d (n "wayland-commons") (r "^0.21.1") (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.21.3") (f (quote ("unstable_protocols" "server"))) (d #t) (k 0)) (d (n "wayland-server") (r "^0.21.6") (d #t) (k 0)) (d (n "wayland-sys") (r "^0.21.6") (o #t) (d #t) (k 0)) (d (n "winit") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "xkbcommon") (r "^0.2.1") (d #t) (k 0)))) (h "10x6qmphw70x6h6a8mh9a4gj45wzx71778ayhrpnkajm8cjlibq1") (f (quote (("xwayland") ("renderer_glium" "renderer_gl" "glium") ("renderer_gl" "gl_generator") ("native_lib" "wayland-sys" "wayland-server/native_lib" "wayland-protocols/native_server") ("default" "backend_winit" "backend_drm_legacy" "backend_drm_gbm" "backend_drm_egl" "backend_libinput" "backend_udev" "backend_session" "renderer_glium" "xwayland") ("backend_winit" "winit" "wayland-server/dlopen" "wayland-client/dlopen" "backend_egl" "renderer_gl" "native_lib") ("backend_udev" "udev") ("backend_session_logind" "dbus" "systemd" "backend_session") ("backend_session") ("backend_libinput" "input") ("backend_egl" "gl_generator") ("backend_drm_legacy" "backend_drm") ("backend_drm_gbm" "backend_drm" "gbm") ("backend_drm_egl" "backend_drm" "backend_egl") ("backend_drm" "drm"))))))

(define-public crate-smithay-0.2.1 (c (n "smithay") (v "0.2.1") (d (list (d (n "dbus") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "drm") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "error-chain") (r "^0.11.0") (d #t) (k 0)) (d (n "gbm") (r "^0.5.0") (f (quote ("drm-support"))) (o #t) (k 0)) (d (n "gl_generator") (r "^0.9") (o #t) (d #t) (k 1)) (d (n "glium") (r "^0.19.0") (o #t) (k 0)) (d (n "image") (r "^0.17.0") (d #t) (k 0)) (d (n "input") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 0)) (d (n "libloading") (r "^0.4.0") (d #t) (k 0)) (d (n "nix") (r "^0.14") (d #t) (k 0)) (d (n "slog") (r "^2.1.1") (d #t) (k 0)) (d (n "slog-stdlog") (r "^3.0.2") (d #t) (k 0)) (d (n "slog-term") (r "^2.3") (d #t) (k 2)) (d (n "systemd") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^2.1.5") (d #t) (k 0)) (d (n "udev") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "wayland-client") (r "^0.21.1") (f (quote ("egl"))) (o #t) (d #t) (k 0)) (d (n "wayland-commons") (r "^0.21.1") (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.21.3") (f (quote ("unstable_protocols" "server"))) (d #t) (k 0)) (d (n "wayland-server") (r "^0.21.6") (d #t) (k 0)) (d (n "wayland-sys") (r "^0.21.6") (o #t) (d #t) (k 0)) (d (n "winit") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "xkbcommon") (r "^0.2.1") (d #t) (k 0)))) (h "0d9x5252a03r7zp9p8fc2nx6bilwam2n2z85y6iw58r37rk3i0l4") (f (quote (("xwayland") ("renderer_glium" "renderer_gl" "glium") ("renderer_gl" "gl_generator") ("native_lib" "wayland-sys" "wayland-server/native_lib" "wayland-protocols/native_server") ("default" "backend_winit" "backend_drm_legacy" "backend_drm_gbm" "backend_drm_egl" "backend_libinput" "backend_udev" "backend_session" "renderer_glium" "xwayland") ("backend_winit" "winit" "wayland-server/dlopen" "wayland-client/dlopen" "backend_egl" "renderer_gl" "native_lib") ("backend_udev" "udev") ("backend_session_logind" "dbus" "systemd" "backend_session") ("backend_session") ("backend_libinput" "input") ("backend_egl" "gl_generator") ("backend_drm_legacy" "backend_drm") ("backend_drm_gbm" "backend_drm" "gbm") ("backend_drm_egl" "backend_drm" "backend_egl") ("backend_drm" "drm"))))))

(define-public crate-smithay-0.3.0 (c (n "smithay") (v "0.3.0") (d (list (d (n "appendlist") (r "^1.4") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "calloop") (r "^0.9.0") (d #t) (k 0)) (d (n "cgmath") (r "^0.18.0") (d #t) (k 0)) (d (n "dbus") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "drm") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "drm-ffi") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "drm-fourcc") (r "^2.1.1") (d #t) (k 0)) (d (n "gbm") (r "^0.7.0") (f (quote ("drm-support"))) (o #t) (k 0)) (d (n "gl_generator") (r "^0.14") (o #t) (d #t) (k 1)) (d (n "input") (r "^0.6") (f (quote ("libinput_1_14"))) (o #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2.70") (d #t) (k 0)) (d (n "libloading") (r "^0.7.0") (d #t) (k 0)) (d (n "libseat") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.22") (d #t) (k 0)) (d (n "pkg-config") (r "^0.3.17") (o #t) (d #t) (k 1)) (d (n "scan_fmt") (r "^0.2") (k 0)) (d (n "slog") (r "^2") (d #t) (k 0)) (d (n "slog-stdlog") (r "^4") (o #t) (d #t) (k 0)) (d (n "slog-term") (r "^2.3") (d #t) (k 2)) (d (n "tempfile") (r "^3.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "udev") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "wayland-commons") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "wayland-egl") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.29.0") (f (quote ("unstable_protocols" "server"))) (o #t) (d #t) (k 0)) (d (n "wayland-server") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "wayland-sys") (r "^0.29.0") (o #t) (d #t) (k 0)) (d (n "winit") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "xkbcommon") (r "^0.4.0") (d #t) (k 0)))) (h "1pym4gwp8fgh1ffcj9n3cniqjpy941v3bgan7fdcmg6dj79p0jjj") (f (quote (("xwayland" "wayland_frontend") ("wayland_frontend" "wayland-server" "wayland-commons" "wayland-protocols" "tempfile") ("use_system_lib" "wayland_frontend" "wayland-sys" "wayland-server/use_system_lib") ("test_all_features" "default" "use_system_lib" "wayland-server/dlopen") ("renderer_gl" "gl_generator" "backend_egl") ("default" "backend_drm" "backend_gbm" "backend_libinput" "backend_udev" "backend_session_logind" "backend_winit" "renderer_gl" "xwayland" "wayland_frontend" "slog-stdlog") ("backend_winit" "winit" "wayland-server/dlopen" "backend_egl" "wayland-egl" "renderer_gl") ("backend_udev" "udev" "input/udev") ("backend_session_logind" "dbus" "backend_session" "pkg-config") ("backend_session_libseat" "backend_session" "libseat") ("backend_session_elogind" "backend_session_logind") ("backend_session") ("backend_libinput" "input") ("backend_gbm" "gbm") ("backend_egl" "gl_generator") ("backend_drm" "drm" "drm-ffi"))))))

