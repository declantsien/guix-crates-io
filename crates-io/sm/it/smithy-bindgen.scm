(define-module (crates-io sm it smithy-bindgen) #:use-module (crates-io))

(define-public crate-smithy-bindgen-0.1.0 (c (n "smithy-bindgen") (v "0.1.0") (d (list (d (n "atelier_json") (r "^0.2") (d #t) (k 0)) (d (n "proc-macro-error") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.7.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "wasmbus-rpc") (r "^0.12") (d #t) (k 2)))) (h "1ifzhlbrw3cqjqlv3laz9z4s2ki06rxsr7icds0maaqilixmyikj")))

(define-public crate-smithy-bindgen-0.2.0 (c (n "smithy-bindgen") (v "0.2.0") (d (list (d (n "atelier_json") (r "^0.2") (d #t) (k 0)) (d (n "proc-macro-error") (r "^1.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "weld-codegen") (r "^0.7.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "wasmbus-rpc") (r "^0.13") (d #t) (k 2)))) (h "102kv5hjx1ipl3ggk9djkjj9wn7qzmd5vxk5ixcd051cbzgplm0x")))

