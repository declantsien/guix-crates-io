(define-module (crates-io r2 rs r2rs-rfit) #:use-module (crates-io))

(define-public crate-r2rs-rfit-0.1.0 (c (n "r2rs-rfit") (v "0.1.0") (d (list (d (n "approx") (r "~0.5") (d #t) (k 2)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "nalgebra") (r "~0.32") (d #t) (k 0)) (d (n "num-traits") (r "~0.2") (d #t) (k 0)) (d (n "polars") (r "~0.38") (d #t) (k 0)) (d (n "r2rs-base") (r "~0.1") (d #t) (k 0)) (d (n "r2rs-nmath") (r "~0.1") (d #t) (k 0)) (d (n "r2rs-stats") (r "~0.1") (d #t) (k 0)) (d (n "strafe-testing") (r "~0.1") (d #t) (k 0)) (d (n "strafe-trait") (r "~0.1") (d #t) (k 0)) (d (n "strafe-type") (r "~0.1") (d #t) (k 0)))) (h "00a64fg0pzbpd0l4wbyxqqcd9n1c0inpf7sy0mbhv0997maki2qg") (f (quote (("enable_covtest")))) (y #t)))

(define-public crate-r2rs-rfit-0.1.1 (c (n "r2rs-rfit") (v "0.1.1") (d (list (d (n "approx") (r "~0.5") (d #t) (k 2)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "nalgebra") (r "~0.32") (d #t) (k 0)) (d (n "num-traits") (r "~0.2") (d #t) (k 0)) (d (n "polars") (r "~0.38") (d #t) (k 0)) (d (n "r2rs-base") (r "~0.1") (d #t) (k 0)) (d (n "r2rs-nmath") (r "~0.1") (d #t) (k 0)) (d (n "r2rs-stats") (r "~0.1") (d #t) (k 0)) (d (n "strafe-testing") (r "~0.1") (d #t) (k 0)) (d (n "strafe-trait") (r "~0.1") (d #t) (k 0)) (d (n "strafe-type") (r "~0.1") (d #t) (k 0)))) (h "00pgm3idh2aadr0v8ah8lz4m7shnd1mcbbp0x9hslwq39anrfmbg") (f (quote (("enable_covtest"))))))

