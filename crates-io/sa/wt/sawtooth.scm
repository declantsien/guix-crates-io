(define-module (crates-io sa wt sawtooth) #:use-module (crates-io))

(define-public crate-sawtooth-0.0.0 (c (n "sawtooth") (v "0.0.0") (h "1jbkzq9ig3r8wf9rsvyymk7gpqhcgj0sbwrlg3pjs164gnywdk09")))

(define-public crate-sawtooth-0.1.0 (c (n "sawtooth") (v "0.1.0") (d (list (d (n "lmdb-zero") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "redis") (r "^0.13.0") (o #t) (k 0)) (d (n "transact") (r "^0.1") (d #t) (k 0)))) (h "0phw06r9an23a1qn9qsiny52rd0mp2lfl5l3adbrqhll7c900hjv") (f (quote (("stores") ("redis-store" "redis" "stores") ("receipt-store" "stores") ("lmdb-store" "lmdb-zero" "stores") ("experimental" "btree-store" "lmdb-store" "receipt-store" "redis-store" "stores") ("default") ("btree-store" "stores"))))))

(define-public crate-sawtooth-0.1.1 (c (n "sawtooth") (v "0.1.1") (d (list (d (n "lmdb-zero") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "redis") (r "^0.13.0") (o #t) (k 0)) (d (n "transact") (r "^0.1") (d #t) (k 0)))) (h "0z7nq97rgly4h9qmq8aph49aww1fjvfwp4ki2h4fmh61zcg2jv81") (f (quote (("stores") ("redis-store" "redis" "stores") ("receipt-store" "stores") ("lmdb-store" "lmdb-zero" "stores") ("experimental" "btree-store" "lmdb-store" "receipt-store" "redis-store" "stores") ("default") ("btree-store" "stores"))))))

(define-public crate-sawtooth-0.2.0 (c (n "sawtooth") (v "0.2.0") (d (list (d (n "lmdb-zero") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "redis") (r "^0.13.0") (o #t) (k 0)) (d (n "transact") (r "^0.1") (d #t) (k 0)))) (h "1g90zm33jgalydl9kfk1zmwldmn2x1bgvy2xqj2ing85gzmf24hr") (f (quote (("stores") ("redis-store" "redis" "stores") ("receipt-store" "stores") ("lmdb-store" "lmdb-zero" "stores") ("experimental" "btree-store" "lmdb-store" "receipt-store" "redis-store" "stores") ("default") ("btree-store" "stores"))))))

(define-public crate-sawtooth-0.3.0 (c (n "sawtooth") (v "0.3.0") (d (list (d (n "lmdb-zero") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "redis") (r "^0.13.0") (o #t) (k 0)) (d (n "transact") (r "^0.2") (d #t) (k 0)))) (h "1v9y1g0w5zlglm2a8pahckzlxmsan3gmx4gk5agwvl6iw0rj5gf0") (f (quote (("stores") ("redis-store" "redis" "stores") ("receipt-store" "stores") ("lmdb-store" "lmdb-zero" "stores") ("experimental" "btree-store" "lmdb-store" "receipt-store" "redis-store" "stores") ("default") ("btree-store" "stores"))))))

(define-public crate-sawtooth-0.3.1 (c (n "sawtooth") (v "0.3.1") (d (list (d (n "cbor-codec") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.2") (d #t) (k 1)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "lmdb-zero") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metrics") (r "^0.12") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "protobuf") (r "^2") (d #t) (k 0)) (d (n "protoc-rust") (r "^2.0") (d #t) (k 1)) (d (n "rand") (r "^0.4") (d #t) (k 2)) (d (n "redis") (r "^0.13.0") (o #t) (k 0)) (d (n "transact") (r "^0.2") (d #t) (k 0)) (d (n "uluru") (r "^0.4") (o #t) (d #t) (k 0)))) (h "11fg2d3cv8mb27r500jaw6zcx2y6i2nckrpkh8cclpl8b15syz0s") (f (quote (("validator-internals" "cbor-codec" "hex" "lmdb-zero" "metrics" "openssl" "uluru") ("stores") ("stable") ("redis-store" "redis" "stores") ("receipt-store" "stores") ("lmdb-store" "lmdb-zero" "stores") ("experimental" "stable" "btree-store" "lmdb-store" "receipt-store" "redis-store" "stores" "validator-internals") ("default") ("btree-store" "stores"))))))

(define-public crate-sawtooth-0.4.0 (c (n "sawtooth") (v "0.4.0") (d (list (d (n "cbor-codec") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.2") (d #t) (k 1)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "lmdb-zero") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metrics") (r "^0.12") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "protobuf") (r "^2") (d #t) (k 0)) (d (n "protoc-rust") (r "^2.0") (d #t) (k 1)) (d (n "rand") (r "^0.4") (d #t) (k 2)) (d (n "redis") (r "^0.13.0") (o #t) (k 0)) (d (n "transact") (r "^0.2") (d #t) (k 0)) (d (n "uluru") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0q02s4a1z5ff04mf65gfl6ia6pjncri123h05yyac58cam9r496m") (f (quote (("validator-internals" "cbor-codec" "hex" "lmdb-zero" "metrics" "openssl" "uluru") ("stores") ("stable") ("redis-store" "redis" "stores") ("receipt-store" "stores") ("lmdb-store" "lmdb-zero" "stores") ("experimental" "stable" "btree-store" "lmdb-store" "receipt-store" "redis-store" "stores" "validator-internals") ("default") ("btree-store" "stores"))))))

(define-public crate-sawtooth-0.5.0 (c (n "sawtooth") (v "0.5.0") (d (list (d (n "cbor-codec") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.2") (d #t) (k 1)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lmdb-zero") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metrics") (r "^0.12") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "protobuf") (r "^2") (d #t) (k 0)) (d (n "protoc-rust") (r "^2.0") (d #t) (k 1)) (d (n "rand") (r "^0.4") (d #t) (k 2)) (d (n "redis") (r "^0.13.0") (o #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 0)) (d (n "transact") (r "^0.2") (d #t) (k 0)) (d (n "uluru") (r "^0.4") (o #t) (d #t) (k 0)))) (h "16cynslaafdxafa18v5arwz02bdg9bc7ylzh8xymsw7mcdhlvl65") (f (quote (("validator-internals" "cbor-codec" "lmdb-zero" "metrics" "openssl" "uluru") ("stores") ("stable") ("redis-store" "redis" "stores") ("receipt-store" "stores") ("lmdb-store" "lmdb-zero" "stores") ("experimental" "stable" "btree-store" "lmdb-store" "receipt-store" "redis-store" "stores" "validator-internals") ("default") ("btree-store" "stores"))))))

(define-public crate-sawtooth-0.6.0 (c (n "sawtooth") (v "0.6.0") (d (list (d (n "cbor-codec") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "cylinder") (r "^0.1") (d #t) (k 0)) (d (n "glob") (r "^0.2") (d #t) (k 1)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lmdb-zero") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metrics") (r "^0.12") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "protobuf") (r "^2") (d #t) (k 0)) (d (n "protoc-rust") (r "^2.0") (d #t) (k 1)) (d (n "rand") (r "^0.4") (d #t) (k 2)) (d (n "redis") (r "^0.13.0") (o #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "transact") (r "^0.3") (d #t) (k 0)) (d (n "uluru") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0knwrr17szan15v2cj0bbiaav141rvxm5gblrvnfjfp4v3lmgzxb") (f (quote (("validator-internals" "cbor-codec" "lmdb-zero" "metrics" "openssl" "uluru") ("stores") ("stable") ("redis-store" "redis" "stores") ("receipt-store" "stores") ("lmdb-store" "lmdb-zero" "stores") ("experimental" "stable" "btree-store" "client" "client-rest" "lmdb-store" "receipt-store" "redis-store" "stores" "validator-internals") ("default") ("client-rest" "client" "reqwest" "serde") ("client") ("btree-store" "stores"))))))

(define-public crate-sawtooth-0.6.1 (c (n "sawtooth") (v "0.6.1") (d (list (d (n "base64") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "cbor-codec") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "cylinder") (r "^0.1") (d #t) (k 0)) (d (n "glob") (r "^0.2") (d #t) (k 1)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lmdb-zero") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metrics") (r "^0.12") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "protobuf") (r "^2") (d #t) (k 0)) (d (n "protoc-rust") (r "^2.0") (d #t) (k 1)) (d (n "rand") (r "^0.4") (d #t) (k 2)) (d (n "redis") (r "^0.13.0") (o #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "transact") (r "^0.3") (d #t) (k 0)) (d (n "uluru") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1f24w5lyqigfd0wffn5w2x8k0c3yx93ddxfvhvdaq2xvhri4x5y6") (f (quote (("validator-internals" "cbor-codec" "lmdb-zero" "metrics" "openssl" "uluru") ("stores") ("stable") ("redis-store" "redis" "stores") ("receipt-store" "stores") ("lmdb-store" "lmdb-zero" "stores") ("experimental" "stable" "btree-store" "client" "client-rest" "lmdb-store" "receipt-store" "redis-store" "stores" "validator-internals") ("default") ("client-rest" "base64" "client" "reqwest" "serde") ("client") ("btree-store" "stores"))))))

(define-public crate-sawtooth-0.6.2 (c (n "sawtooth") (v "0.6.2") (d (list (d (n "base64") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "cbor-codec") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "cylinder") (r "^0.1") (d #t) (k 0)) (d (n "glob") (r "^0.2") (d #t) (k 1)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lmdb-zero") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metrics") (r "^0.12") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "protobuf") (r "^2") (d #t) (k 0)) (d (n "protoc-rust") (r "^2.0") (d #t) (k 1)) (d (n "rand") (r "^0.4") (d #t) (k 2)) (d (n "redis") (r "^0.13.0") (o #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "transact") (r "^0.3") (d #t) (k 0)) (d (n "uluru") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0n15583bdh69xhn64vp6gl3y91250kijiwkikp983y2yyvwqc4dq") (f (quote (("validator-internals" "cbor-codec" "lmdb-zero" "metrics" "openssl" "uluru") ("stores") ("stable") ("redis-store" "redis" "stores") ("receipt-store" "stores") ("lmdb-store" "lmdb-zero" "stores") ("experimental" "stable" "btree-store" "client" "client-rest" "lmdb-store" "receipt-store" "redis-store" "stores" "validator-internals") ("default") ("client-rest" "base64" "client" "reqwest" "serde") ("client") ("btree-store" "stores"))))))

(define-public crate-sawtooth-0.6.3 (c (n "sawtooth") (v "0.6.3") (d (list (d (n "base64") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "cbor-codec") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "cylinder") (r "^0.1") (d #t) (k 0)) (d (n "glob") (r "^0.2") (d #t) (k 1)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lmdb-zero") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metrics") (r "^0.12") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "protobuf") (r "^2") (d #t) (k 0)) (d (n "protoc-rust") (r "^2.0") (d #t) (k 1)) (d (n "rand") (r "^0.4") (d #t) (k 2)) (d (n "redis") (r "^0.13.0") (o #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "transact") (r "^0.3") (d #t) (k 0)) (d (n "uluru") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0hcxnhy2asslniad1jiwfafh0ny97jn4syis0cfph12v511c65ym") (f (quote (("validator-internals" "cbor-codec" "lmdb-zero" "metrics" "openssl" "uluru") ("stores") ("stable") ("redis-store" "redis" "stores") ("receipt-store" "stores") ("lmdb-store" "lmdb-zero" "stores") ("experimental" "stable" "btree-store" "client" "client-rest" "lmdb-store" "receipt-store" "redis-store" "stores" "validator-internals") ("default") ("client-rest" "base64" "client" "reqwest" "serde") ("client") ("btree-store" "stores"))))))

(define-public crate-sawtooth-0.6.4 (c (n "sawtooth") (v "0.6.4") (d (list (d (n "base64") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "cbor-codec") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "cylinder") (r "^0.1") (d #t) (k 0)) (d (n "glob") (r "^0.2") (d #t) (k 1)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lmdb-zero") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metrics") (r "^0.12") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "protobuf") (r "^2") (d #t) (k 0)) (d (n "protoc-rust") (r "^2.0") (d #t) (k 1)) (d (n "rand") (r "^0.4") (d #t) (k 2)) (d (n "redis") (r "^0.13.0") (o #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "transact") (r "^0.3") (d #t) (k 0)) (d (n "uluru") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1aiiqvcxq8y4g90ll6c3in7fi4lmz5kpxg0l08n02jydgyjs27y0") (f (quote (("validator-internals" "cbor-codec" "lmdb-zero" "metrics" "openssl" "uluru") ("stores") ("stable") ("redis-store" "redis" "stores") ("receipt-store" "stores") ("lmdb-store" "lmdb-zero" "stores") ("experimental" "stable" "btree-store" "client" "client-rest" "lmdb-store" "receipt-store" "redis-store" "stores" "validator-internals") ("default") ("client-rest" "base64" "client" "reqwest" "serde") ("client") ("btree-store" "stores"))))))

(define-public crate-sawtooth-0.6.5 (c (n "sawtooth") (v "0.6.5") (d (list (d (n "base64") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "cbor-codec") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "cylinder") (r "^0.2") (d #t) (k 0)) (d (n "glob") (r "^0.2") (d #t) (k 1)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lmdb-zero") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metrics") (r "^0.12") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "protobuf") (r "^2") (d #t) (k 0)) (d (n "protoc-rust") (r "^2.0") (d #t) (k 1)) (d (n "rand") (r "^0.4") (d #t) (k 2)) (d (n "redis") (r "^0.13.0") (o #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "transact") (r "^0.3") (d #t) (k 0)) (d (n "uluru") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0hklvamdri7vacwbpn68lqlnw3xwdk4fy4mbzq90v8385pgywfn9") (f (quote (("validator-internals" "cbor-codec" "lmdb-zero" "metrics" "openssl" "uluru") ("stores") ("stable") ("redis-store" "redis" "stores") ("receipt-store" "stores") ("lmdb-store" "lmdb-zero" "stores") ("experimental" "stable" "btree-store" "client" "client-rest" "lmdb-store" "receipt-store" "redis-store" "stores" "validator-internals") ("default") ("client-rest" "base64" "client" "reqwest" "serde") ("client") ("btree-store" "stores"))))))

(define-public crate-sawtooth-0.6.6 (c (n "sawtooth") (v "0.6.6") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "cbor-codec") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "cylinder") (r "^0.2") (d #t) (k 0)) (d (n "diesel") (r "^1.0") (f (quote ("r2d2" "serde_json"))) (o #t) (d #t) (k 0)) (d (n "diesel_migrations") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lmdb-zero") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metrics") (r "^0.12") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "protobuf") (r "^2.23") (d #t) (k 0)) (d (n "protoc-rust") (r "^2.0") (d #t) (k 1)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.20") (o #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "transact") (r "^0.3") (d #t) (k 0)) (d (n "uluru") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1n4cdri33hwll4rc70nka8x2c2qnn8siq5zibnykq160njq6jxgk") (f (quote (("validator-internals" "cbor-codec" "lmdb-zero" "metrics" "openssl" "uluru") ("transaction-receipt-store-lmdb" "lmdb-zero" "transaction-receipt-store") ("transaction-receipt-store") ("stores") ("stable") ("sqlite" "diesel/sqlite" "diesel_migrations" "transaction-receipt-store") ("redis-store" "redis" "stores") ("receipt-store" "stores") ("postgres" "diesel/postgres" "diesel_migrations" "transaction-receipt-store") ("pending-batch-queue" "validator-internals") ("lmdb-store" "lmdb-zero" "stores") ("experimental" "stable" "btree-store" "client" "client-rest" "lmdb-store" "pending-batch-queue" "postgres" "receipt-store" "redis-store" "sqlite" "stores" "transaction-receipt-store" "transaction-receipt-store-lmdb" "validator-internals") ("default") ("client-rest" "base64" "client" "reqwest" "serde") ("client") ("btree-store" "stores"))))))

(define-public crate-sawtooth-0.6.7 (c (n "sawtooth") (v "0.6.7") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "cbor-codec") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "cylinder") (r "^0.2") (d #t) (k 0)) (d (n "diesel") (r "^1.0") (f (quote ("r2d2" "serde_json"))) (o #t) (d #t) (k 0)) (d (n "diesel_migrations") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lmdb-zero") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metrics") (r "^0.12") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "protobuf") (r "^2.23") (d #t) (k 0)) (d (n "protoc-rust") (r "^2.0") (d #t) (k 1)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.20") (o #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "transact") (r "^0.3") (d #t) (k 0)) (d (n "uluru") (r "^0.4") (o #t) (d #t) (k 0)))) (h "14sajaw460sr2gm0xw8cmx4hzvc2ym7y5fwss58ysg5hhdmx4xgh") (f (quote (("validator-internals" "cbor-codec" "lmdb-zero" "metrics" "openssl" "uluru") ("transaction-receipt-store") ("stores") ("stable" "lmdb" "postgres" "sqlite" "transaction-receipt-store") ("sqlite" "diesel/sqlite" "diesel_migrations") ("redis-store" "redis" "stores") ("receipt-store" "stores") ("postgres" "diesel/postgres" "diesel_migrations") ("pending-batch-queue" "validator-internals") ("lmdb-store" "lmdb-zero" "stores") ("lmdb" "lmdb-zero") ("experimental" "stable" "btree-store" "client" "client-rest" "lmdb-store" "pending-batch-queue" "receipt-store" "redis-store" "stores" "validator-internals") ("default") ("client-rest" "base64" "client" "reqwest" "serde") ("client") ("btree-store" "stores"))))))

(define-public crate-sawtooth-0.7.0 (c (n "sawtooth") (v "0.7.0") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "cbor-codec") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "cylinder") (r "^0.2") (d #t) (k 0)) (d (n "diesel") (r "^1.0") (f (quote ("r2d2" "serde_json"))) (o #t) (d #t) (k 0)) (d (n "diesel_migrations") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lmdb-zero") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metrics") (r "^0.17") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "protobuf") (r "^2.23") (d #t) (k 0)) (d (n "protoc-rust") (r "^2.0") (d #t) (k 1)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "transact") (r "^0.4") (d #t) (k 0)) (d (n "uluru") (r "^3") (o #t) (d #t) (k 0)))) (h "1f01dn91kxl5ajb1k59px8cvh740l4yqbpph5b9y3hpcqw11j8ky") (f (quote (("validator-internals" "cbor-codec" "lmdb-zero" "metrics" "sha2" "uluru") ("transaction-receipt-store") ("stable" "lmdb" "postgres" "sqlite" "transaction-receipt-store") ("sqlite" "diesel/sqlite" "diesel_migrations") ("postgres" "diesel/postgres" "diesel_migrations") ("pending-batch-queue" "validator-internals") ("lmdb" "lmdb-zero") ("experimental" "stable" "client" "client-rest" "pending-batch-queue" "validator-internals") ("default") ("client-rest" "base64" "client" "reqwest" "serde") ("client"))))))

(define-public crate-sawtooth-0.7.1 (c (n "sawtooth") (v "0.7.1") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "cbor-codec") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "cylinder") (r "^0.2") (d #t) (k 0)) (d (n "diesel") (r "^1.0") (f (quote ("r2d2" "serde_json"))) (o #t) (d #t) (k 0)) (d (n "diesel_migrations") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lmdb-zero") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "metrics") (r "^0.17") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "protobuf") (r "^2.23") (d #t) (k 0)) (d (n "protoc-rust") (r "^2.0") (d #t) (k 1)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "transact") (r "^0.4") (d #t) (k 0)) (d (n "uluru") (r "^3") (o #t) (d #t) (k 0)))) (h "0ff5qaabpxn8gdniy88qwprgb6y4ilmjcjh4q8mpz9r4w2bm7h2n") (f (quote (("validator-internals" "cbor-codec" "lmdb-zero" "log" "metrics" "sha2" "uluru") ("transaction-receipt-store") ("stable" "lmdb" "postgres" "sqlite" "transaction-receipt-store") ("sqlite" "diesel/sqlite" "diesel_migrations" "log") ("postgres" "diesel/postgres" "diesel_migrations" "log") ("pending-batch-queue" "validator-internals") ("lmdb" "lmdb-zero" "log") ("experimental" "stable" "client" "client-rest" "pending-batch-queue" "validator-internals") ("default") ("client-rest" "base64" "client" "log" "reqwest" "serde") ("client"))))))

(define-public crate-sawtooth-0.7.2 (c (n "sawtooth") (v "0.7.2") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "cbor-codec") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "cylinder") (r "^0.2") (d #t) (k 0)) (d (n "diesel") (r "^1.0") (f (quote ("r2d2" "serde_json"))) (o #t) (d #t) (k 0)) (d (n "diesel_migrations") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lmdb-zero") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "metrics") (r "^0.17") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "protobuf") (r "^2.23") (d #t) (k 0)) (d (n "protoc-rust") (r "^2.0") (d #t) (k 1)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "transact") (r "^0.4") (d #t) (k 0)) (d (n "uluru") (r "^3") (o #t) (d #t) (k 0)))) (h "0bqib6aa3nnsyzgbcxm91pawxz1ncbk68w37pksh2sc2kw253fjp") (f (quote (("validator-internals" "cbor-codec" "lmdb-zero" "log" "metrics" "sha2" "uluru") ("transaction-receipt-store") ("store") ("stable" "lmdb" "postgres" "sqlite" "store" "transaction-receipt-store") ("sqlite" "diesel/sqlite" "diesel_migrations" "log" "store") ("postgres" "diesel/postgres" "diesel_migrations" "log" "store") ("pending-batch-queue" "validator-internals") ("lmdb" "lmdb-zero" "log") ("experimental" "stable" "client" "client-rest" "pending-batch-queue" "validator-internals") ("default") ("client-rest" "base64" "client" "log" "reqwest" "serde") ("client"))))))

(define-public crate-sawtooth-0.7.3 (c (n "sawtooth") (v "0.7.3") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "cbor-codec") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "cylinder") (r "^0.2") (d #t) (k 0)) (d (n "diesel") (r "^1.0") (f (quote ("r2d2" "serde_json"))) (o #t) (d #t) (k 0)) (d (n "diesel_migrations") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lmdb-zero") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "metrics") (r "^0.17") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "protobuf") (r "^2.23") (d #t) (k 0)) (d (n "protoc-rust") (r "^2.0") (d #t) (k 1)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "transact") (r "^0.4") (d #t) (k 0)) (d (n "uluru") (r "^3") (o #t) (d #t) (k 0)))) (h "1ilidbrjvpp79gdr6njxlc29dmh7z5hh72m391f2kaviq1ss2s96") (f (quote (("validator-internals" "cbor-codec" "lmdb-zero" "log" "metrics" "sha2" "uluru") ("transaction-receipt-store") ("store") ("stable" "lmdb" "postgres" "sqlite" "store" "transaction-receipt-store") ("sqlite" "diesel/sqlite" "diesel_migrations" "log" "store") ("postgres" "diesel/postgres" "diesel_migrations" "log" "store") ("pending-batch-queue" "validator-internals") ("lmdb" "lmdb-zero" "log") ("experimental" "stable" "client" "client-rest" "pending-batch-queue" "validator-internals") ("default") ("client-rest" "base64" "client" "log" "reqwest" "serde") ("client"))))))

(define-public crate-sawtooth-0.8.0 (c (n "sawtooth") (v "0.8.0") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bzip2") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "cbor-codec") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "cylinder") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "diesel") (r "^1.0") (f (quote ("r2d2" "serde_json"))) (o #t) (d #t) (k 0)) (d (n "diesel_migrations") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "lmdb-zero") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "metrics") (r "^0.17") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "protobuf") (r "^2.23") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "sabre-sdk") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "sawtooth-sdk") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "tar") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "uluru") (r "^3") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (o #t) (d #t) (k 0)) (d (n "wasmi") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rusty-fork") (r "^0.3") (d #t) (k 2)) (d (n "sawtooth-xo") (r "^0.5") (d #t) (k 2)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "protoc-rust") (r "^2.0") (d #t) (k 1)))) (h "0wg6ricr4hpiv1zhp83dvcnrvz0w7mkkb2lxzaazk47kwsviapcz") (f (quote (("wasm-experimental" "wasm") ("wasm" "transact-sabre-compat") ("validator-internals" "cbor-codec" "cylinder" "lmdb-zero" "log" "metrics" "sha2" "uluru") ("transaction-receipt-store" "transact") ("transact-workload-runner" "transact" "chrono" "reqwest" "serde") ("transact-workload-batch-gen" "transact" "transact-workload") ("transact-workload" "transact") ("transact-state-merkle-sql-postgres-tests" "postgres" "lazy_static") ("transact-state-merkle-sql" "transact-state-merkle" "diesel" "diesel_migrations" "lru") ("transact-state-merkle" "transact" "cbor-codec" "log") ("transact-scheduler" "transact-context" "log" "transact-protocol-batch") ("transact-sawtooth-compat" "transact" "transact-handler" "sawtooth-sdk") ("transact-sabre-compat" "transact" "transact-handler" "sabre-sdk") ("transact-protocol-transaction-builder" "cylinder" "transact-protocol-transaction" "transact-protocol-batch-builder" "rand" "sha2") ("transact-protocol-transaction" "transact") ("transact-protocol-sabre" "cylinder" "transact-protocol-transaction-builder") ("transact-protocol-batch-builder" "cylinder" "transact-protocol-batch") ("transact-protocol-batch" "transact-protocol-transaction") ("transact-key-value-state" "transact") ("transact-handler" "transact" "transact-protocol-transaction") ("transact-execution" "transact-context" "transact-handler" "log" "transact-protocol-transaction" "transact-scheduler") ("transact-database-lmdb" "transact" "lmdb-zero") ("transact-contract-context-key-value" "transact-contract-context" "transact-key-value-state") ("transact-contract-context" "transact-contract" "transact-contract-address") ("transact-contract-archive" "bzip2" "transact-contract" "glob" "semver" "serde" "serde_yaml" "tar") ("transact-contract-address-triple-key-hash" "transact-contract-address") ("transact-contract-address-key-hash" "transact-contract-address") ("transact-contract-address-double-key-hash" "transact-contract-address") ("transact-contract-address" "transact-contract") ("transact-contract" "transact") ("transact-context" "transact" "uuid") ("transact") ("store") ("stable" "default" "family-command" "family-command-transaction-builder" "family-command-workload" "family-sabre" "family-smallbank" "lmdb" "postgres" "sqlite" "store" "transact" "transact-context" "transact-contract-archive" "transact-database-lmdb" "transact-execution" "transact-handler" "transact-protocol-batch" "transact-protocol-batch-builder" "transact-protocol-sabre" "transact-protocol-transaction" "transact-protocol-transaction-builder" "transact-scheduler" "transact-state-merkle" "transact-state-merkle-sql" "transact-workload" "transact-workload-batch-gen" "transact-workload-runner" "transaction-receipt-store") ("sqlite" "diesel/sqlite" "diesel_migrations" "log" "serde_json" "store") ("publisher" "artifact-creator") ("protocol-genesis" "transact-protocol-batch" "transact-protocol-batch-builder" "transact-protocol-transaction" "transact-protocol-transaction-builder") ("protocol-block" "transact-protocol-batch" "transact-protocol-batch-builder" "transact-protocol-transaction" "transact-protocol-transaction-builder") ("postgres" "diesel/postgres" "diesel_migrations" "log" "store") ("pending-batch-queue" "validator-internals") ("lmdb" "lmdb-zero" "log") ("family-xo" "transact-handler" "transact-workload") ("family-smallbank-workload" "family-smallbank" "transact-protocol-sabre" "rand" "yaml-rust" "transact-workload" "transact-workload-runner") ("family-smallbank" "transact-handler" "sha2") ("family-sabre" "transact-handler" "wasmi") ("family-command-workload" "family-command" "transact-protocol-sabre" "transact-workload") ("family-command-transaction-builder" "family-command" "cylinder" "transact-protocol-transaction-builder") ("family-command" "transact-handler") ("experimental" "stable" "artifact" "artifact-creator" "artifact-store" "client" "client-rest" "family-smallbank-workload" "family-xo" "pending-batch-queue" "publisher" "transact-contract" "transact-contract-address" "transact-contract-address-double-key-hash" "transact-contract-address-key-hash" "transact-contract-address-triple-key-hash" "transact-contract-context" "transact-contract-context-key-value" "transact-key-value-state" "validator-internals") ("default" "protocol-block" "protocol-genesis") ("client-rest" "base64" "client" "log" "reqwest" "serde") ("client") ("artifact-store" "artifact") ("artifact-creator" "artifact") ("artifact"))))))

