(define-module (crates-io sa ba sabaton-mw) #:use-module (crates-io))

(define-public crate-sabaton-mw-0.3.0 (c (n "sabaton-mw") (v "0.3.0") (d (list (d (n "async-signals") (r "^0.4.0") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.31") (d #t) (k 0)) (d (n "cdds_derive") (r "^0.1.1") (d #t) (k 0)) (d (n "cyclonedds-rs") (r "^0.6") (d #t) (k 0)) (d (n "fix-hidden-lifetime-bug") (r "^0.2.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.21") (d #t) (k 0)) (d (n "libc") (r "^0.2.121") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "someip") (r "^0.1.0") (d #t) (k 0)) (d (n "someip_derive") (r "^0.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.9") (d #t) (k 2)))) (h "177rv03ak96zjsjkpcgrr1583bb8yc8kzm9pxwd02bhy2sh2vnhq")))

(define-public crate-sabaton-mw-0.3.1 (c (n "sabaton-mw") (v "0.3.1") (d (list (d (n "async-signals") (r "^0.4.0") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.31") (d #t) (k 0)) (d (n "cdds_derive") (r "^0.1.1") (d #t) (k 0)) (d (n "cyclonedds-rs") (r "^0.6") (d #t) (k 0)) (d (n "fix-hidden-lifetime-bug") (r "^0.2.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.21") (d #t) (k 0)) (d (n "libc") (r "^0.2.121") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "someip") (r "^0.1.0") (d #t) (k 0)) (d (n "someip_derive") (r "^0.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.9") (d #t) (k 2)))) (h "0sh5kkkq7g9q8q12sva6hzbaiqdcqxzm4cwv47f5yh0szgkp0vds")))

(define-public crate-sabaton-mw-0.3.2 (c (n "sabaton-mw") (v "0.3.2") (d (list (d (n "async-signals") (r "^0.4.0") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.31") (d #t) (k 0)) (d (n "cdds_derive") (r "^0.1.1") (d #t) (k 0)) (d (n "cyclonedds-rs") (r "^0.6.5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.21") (d #t) (k 0)) (d (n "libc") (r "^0.2.121") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "someip") (r "^0.1.1") (d #t) (k 0)) (d (n "someip_derive") (r "^0.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.9") (d #t) (k 2)))) (h "0mlfz3z6z3di758q3mimnv93r44gpkipyfi83nbqnvx3gs39vjgr")))

