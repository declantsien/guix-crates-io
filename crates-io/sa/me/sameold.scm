(define-module (crates-io sa me sameold) #:use-module (crates-io))

(define-public crate-sameold-0.1.0 (c (n "sameold") (v "0.1.0") (d (list (d (n "arraydeque") (r "^0.4.5") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7.1") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nalgebra") (r "^0.26.1") (d #t) (k 0)) (d (n "num-complex") (r "^0.3.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "slice-deque") (r "^0.3.0") (d #t) (k 0)) (d (n "strum") (r "^0.21") (d #t) (k 0)) (d (n "strum_macros") (r "^0.21") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0w6abvwbj3z99mwqihwkww4di93hqpbbqjqc5wbbij0xc9s96phx") (f (quote (("default" "chrono"))))))

(define-public crate-sameold-0.2.0 (c (n "sameold") (v "0.2.0") (d (list (d (n "arraydeque") (r "^0.4.5") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7.1") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nalgebra") (r "^0.26.1") (d #t) (k 0)) (d (n "num-complex") (r "^0.3.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "slice-deque") (r "^0.3.0") (d #t) (k 0)) (d (n "strum") (r "^0.21") (d #t) (k 0)) (d (n "strum_macros") (r "^0.21") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0vfvw2x5w5c80qgdc46kvvlv58q7gikj579mhbwq4q9q2vp6zl0s") (f (quote (("default" "chrono"))))))

(define-public crate-sameold-0.2.1 (c (n "sameold") (v "0.2.1") (d (list (d (n "arraydeque") (r "^0.4.5") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7.1") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nalgebra") (r "^0.27.1") (d #t) (k 0)) (d (n "num-complex") (r "^0.3.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "slice-deque") (r "^0.3.0") (d #t) (k 0)) (d (n "strum") (r "^0.21") (d #t) (k 0)) (d (n "strum_macros") (r "^0.21") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0n19vczpq51j2agqdcdcx49mmbq43scrdx0gg1jxfnw3c3wziy48") (f (quote (("default" "chrono"))))))

(define-public crate-sameold-0.2.2 (c (n "sameold") (v "0.2.2") (d (list (d (n "arraydeque") (r "^0.4.5") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7.1") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nalgebra") (r "^0.27.1") (d #t) (k 0)) (d (n "num-complex") (r "^0.3.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "slice-deque") (r "^0.3.0") (d #t) (k 0)) (d (n "strum") (r "^0.21") (d #t) (k 0)) (d (n "strum_macros") (r "^0.21") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0lfkcycm364x2ln39sc7gmpcbsnjy6kkjf1pi2m8lb9nmzhnmdiw") (f (quote (("default" "chrono"))))))

(define-public crate-sameold-0.2.3 (c (n "sameold") (v "0.2.3") (d (list (d (n "arraydeque") (r "^0.4.5") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7.1") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nalgebra") (r "^0.27.1") (d #t) (k 0)) (d (n "num-complex") (r "^0.3.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "slice-deque") (r "^0.3.0") (d #t) (k 0)) (d (n "strum") (r "^0.21") (d #t) (k 0)) (d (n "strum_macros") (r "^0.21") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1bxinmnyihvhbfmih7f3w22ilr5cz60xclazgd3hg2z8khnkb851") (f (quote (("default" "chrono"))))))

(define-public crate-sameold-0.2.4 (c (n "sameold") (v "0.2.4") (d (list (d (n "arraydeque") (r "^0.4.5") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7.1") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nalgebra") (r "^0.27.1") (d #t) (k 0)) (d (n "num-complex") (r "^0.3.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "slice-ring-buffer") (r "^0.3") (d #t) (k 0)) (d (n "strum") (r "^0.21") (d #t) (k 0)) (d (n "strum_macros") (r "^0.21") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "17qzkdcvsa74y93gzl0m7yzyfn299irgvlx2qhg871w0p2kk88yv") (f (quote (("default" "chrono"))))))

(define-public crate-sameold-0.2.5 (c (n "sameold") (v "0.2.5") (d (list (d (n "arraydeque") (r "^0.4.5") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7.1") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nalgebra") (r "^0.27.1") (d #t) (k 0)) (d (n "num-complex") (r "^0.3.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "slice-ring-buffer") (r "^0.3") (d #t) (k 0)) (d (n "strum") (r "^0.21") (d #t) (k 0)) (d (n "strum_macros") (r "^0.21") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0y2g4ybx5vdahppjxzylqc6c07d8hzl65ayz59rpzixznq4fi1vf") (f (quote (("default" "chrono"))))))

(define-public crate-sameold-0.3.0 (c (n "sameold") (v "0.3.0") (d (list (d (n "arraydeque") (r "^0.4.5") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7.1") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.2") (d #t) (k 0)) (d (n "num-complex") (r "^0.3.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "slice-ring-buffer") (r "^0.3") (d #t) (k 0)) (d (n "strum") (r "^0.21") (d #t) (k 0)) (d (n "strum_macros") (r "^0.21") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "025wdqafhqm7261q3ybly5b95rgrrcg9c9mr0hj5j0vx96azh8mc") (f (quote (("default" "chrono"))))))

(define-public crate-sameold-0.4.0 (c (n "sameold") (v "0.4.0") (d (list (d (n "arraydeque") (r "^0.4.5") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7.1") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock" "std"))) (o #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.2") (d #t) (k 0)) (d (n "num-complex") (r "^0.3.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "phf") (r "^0.11") (f (quote ("macros"))) (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "slice-ring-buffer") (r "^0.3") (d #t) (k 0)) (d (n "strum") (r "^0.26") (d #t) (k 0)) (d (n "strum_macros") (r "^0.26") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1f72dakvc4dycf9p8y4msim3vssjj9zyqg4gwindpm02a16vf6n0") (f (quote (("default" "chrono")))) (r "1.65")))

