(define-module (crates-io sa va savant_core) #:use-module (crates-io))

(define-public crate-savant_core-0.2.10 (c (n "savant_core") (v "0.2.10") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1.5") (d #t) (k 0)) (d (n "crc32fast") (r "^1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "derive_builder") (r "^0.13") (d #t) (k 0)) (d (n "etcd_dynamic_state") (r "^0.2.10") (d #t) (k 0)) (d (n "evalexpr") (r "^11") (f (quote ("rand" "regex_support"))) (d #t) (k 0)) (d (n "geo") (r "^0.26") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw" "serde"))) (d #t) (k 0)) (d (n "jmespath") (r "^0.3") (f (quote ("sync"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libloading") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lru") (r "^0.12") (f (quote ("hashbrown"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.20") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.2") (f (quote ("trace"))) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "prost") (r "^0.12") (d #t) (k 0)) (d (n "prost-build") (r "^0.12") (d #t) (k 1)) (d (n "prost-types") (r "^0.12") (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread"))) (d #t) (k 0)) (d (n "uuid") (r "^1.7") (f (quote ("fast-rng" "v4"))) (d #t) (k 0)) (d (n "zmq") (r "^0.10") (d #t) (k 0)))) (h "1n1137vwp1mwwnffsvc1kgapqly02gkbqaljk39ivwh1318qy97s") (r "1.70")))

(define-public crate-savant_core-0.2.11 (c (n "savant_core") (v "0.2.11") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1.5") (d #t) (k 0)) (d (n "crc32fast") (r "^1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "derive_builder") (r "^0.13") (d #t) (k 0)) (d (n "etcd_dynamic_state") (r "^0.2.10") (d #t) (k 0)) (d (n "evalexpr") (r "^11") (f (quote ("rand" "regex_support"))) (d #t) (k 0)) (d (n "geo") (r "^0.26") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw" "serde"))) (d #t) (k 0)) (d (n "jmespath") (r "^0.3") (f (quote ("sync"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libloading") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lru") (r "^0.12") (f (quote ("hashbrown"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.20") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.2") (f (quote ("trace"))) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "prost") (r "^0.12") (d #t) (k 0)) (d (n "prost-build") (r "^0.12") (d #t) (k 1)) (d (n "prost-types") (r "^0.12") (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread"))) (d #t) (k 0)) (d (n "uuid") (r "^1.7") (f (quote ("fast-rng" "v4"))) (d #t) (k 0)) (d (n "zmq") (r "^0.10") (d #t) (k 0)))) (h "0ma7ng5dfypnria896lr3gahs9nnrws3skg2ca89c77zhshf7943") (r "1.70")))

(define-public crate-savant_core-0.2.12 (c (n "savant_core") (v "0.2.12") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1.5") (d #t) (k 0)) (d (n "crc32fast") (r "^1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "derive_builder") (r "^0.13") (d #t) (k 0)) (d (n "etcd_dynamic_state") (r "^0.2.10") (d #t) (k 0)) (d (n "evalexpr") (r "^11") (f (quote ("rand" "regex_support"))) (d #t) (k 0)) (d (n "geo") (r "^0.26") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw" "serde"))) (d #t) (k 0)) (d (n "jmespath") (r "^0.3") (f (quote ("sync"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libloading") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lru") (r "^0.12") (f (quote ("hashbrown"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.20") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.2") (f (quote ("trace"))) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "prost") (r "^0.12") (d #t) (k 0)) (d (n "prost-build") (r "^0.12") (d #t) (k 1)) (d (n "prost-types") (r "^0.12") (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread"))) (d #t) (k 0)) (d (n "uuid") (r "^1.7") (f (quote ("fast-rng" "v4"))) (d #t) (k 0)) (d (n "zmq") (r "^0.10") (d #t) (k 0)))) (h "0lxgv4v29l7dajjl7mwf91r2fk52z56mzsd5yyzkl42j66ksb8k2") (r "1.70")))

(define-public crate-savant_core-0.2.13 (c (n "savant_core") (v "0.2.13") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1.5") (d #t) (k 0)) (d (n "crc32fast") (r "^1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "derive_builder") (r "^0.13") (d #t) (k 0)) (d (n "etcd_dynamic_state") (r "^0.2.10") (d #t) (k 0)) (d (n "evalexpr") (r "^11") (f (quote ("rand" "regex_support"))) (d #t) (k 0)) (d (n "geo") (r "^0.26") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw" "serde"))) (d #t) (k 0)) (d (n "jmespath") (r "^0.3") (f (quote ("sync"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libloading") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lru") (r "^0.12") (f (quote ("hashbrown"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.20") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.2") (f (quote ("trace"))) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "prost") (r "^0.12") (d #t) (k 0)) (d (n "prost-build") (r "^0.12") (d #t) (k 1)) (d (n "prost-types") (r "^0.12") (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread"))) (d #t) (k 0)) (d (n "uuid") (r "^1.7") (f (quote ("fast-rng" "v4"))) (d #t) (k 0)) (d (n "zmq") (r "^0.10") (d #t) (k 0)))) (h "0g5w9s9dsvjcvpjv4qxzmgk16j9l7frqw3xblk9acwc6y3wbdrs7") (r "1.70")))

(define-public crate-savant_core-0.2.14 (c (n "savant_core") (v "0.2.14") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1.5") (d #t) (k 0)) (d (n "crc32fast") (r "^1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "derive_builder") (r "^0.13") (d #t) (k 0)) (d (n "etcd_dynamic_state") (r "^0.2.10") (d #t) (k 0)) (d (n "evalexpr") (r "^11") (f (quote ("rand" "regex_support"))) (d #t) (k 0)) (d (n "geo") (r "^0.26") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw" "serde"))) (d #t) (k 0)) (d (n "jmespath") (r "^0.3") (f (quote ("sync"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libloading") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lru") (r "^0.12") (f (quote ("hashbrown"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.20") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.2") (f (quote ("trace"))) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "prost") (r "^0.12") (d #t) (k 0)) (d (n "prost-build") (r "^0.12") (d #t) (k 1)) (d (n "prost-types") (r "^0.12") (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread"))) (d #t) (k 0)) (d (n "uuid") (r "^1.7") (f (quote ("fast-rng" "v4"))) (d #t) (k 0)) (d (n "zmq") (r "^0.10") (d #t) (k 0)))) (h "0lbhvz77a24lj9ps54kwjaw44y807lskrc6c995n4ys62dkawvpx") (r "1.70")))

(define-public crate-savant_core-0.2.16 (c (n "savant_core") (v "0.2.16") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1.5") (d #t) (k 0)) (d (n "crc32fast") (r "^1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "derive_builder") (r "^0.13") (d #t) (k 0)) (d (n "etcd_dynamic_state") (r "^0.2.10") (d #t) (k 0)) (d (n "evalexpr") (r "^11") (f (quote ("rand" "regex_support"))) (d #t) (k 0)) (d (n "geo") (r "^0.26") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw" "serde"))) (d #t) (k 0)) (d (n "jmespath") (r "^0.3") (f (quote ("sync"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libloading") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lru") (r "^0.12") (f (quote ("hashbrown"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.20") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.2") (f (quote ("trace"))) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "prost") (r "^0.12") (d #t) (k 0)) (d (n "prost-build") (r "^0.12") (d #t) (k 1)) (d (n "prost-types") (r "^0.12") (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread"))) (d #t) (k 0)) (d (n "uuid") (r "^1.7") (f (quote ("fast-rng" "v4"))) (d #t) (k 0)) (d (n "zmq") (r "^0.10") (d #t) (k 0)))) (h "0kw8rl2rsb65v9qn57wzcprwnyypci79nkzh6b2wfn2z3kpakc55") (r "1.70")))

(define-public crate-savant_core-0.2.17 (c (n "savant_core") (v "0.2.17") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1.5") (d #t) (k 0)) (d (n "crc32fast") (r "^1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "derive_builder") (r "^0.13") (d #t) (k 0)) (d (n "etcd_dynamic_state") (r "^0.2.10") (d #t) (k 0)) (d (n "evalexpr") (r "^11") (f (quote ("rand" "regex_support"))) (d #t) (k 0)) (d (n "geo") (r "^0.26") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw" "serde"))) (d #t) (k 0)) (d (n "jmespath") (r "^0.3") (f (quote ("sync"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libloading") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lru") (r "^0.12") (f (quote ("hashbrown"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.20") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.2") (f (quote ("trace"))) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "prost") (r "^0.12") (d #t) (k 0)) (d (n "prost-build") (r "^0.12") (d #t) (k 1)) (d (n "prost-types") (r "^0.12") (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread"))) (d #t) (k 0)) (d (n "uuid") (r "^1.7") (f (quote ("fast-rng" "v4"))) (d #t) (k 0)) (d (n "zmq") (r "^0.10") (d #t) (k 0)))) (h "1ii22dr1bv3krrh1qrbns0lv9bj7dxdd6xyqiw53jh535fsymfz6") (r "1.70")))

(define-public crate-savant_core-0.2.18 (c (n "savant_core") (v "0.2.18") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1.5") (d #t) (k 0)) (d (n "crc32fast") (r "^1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "derive_builder") (r "^0.13") (d #t) (k 0)) (d (n "etcd_dynamic_state") (r "^0.2.10") (d #t) (k 0)) (d (n "evalexpr") (r "^11") (f (quote ("rand" "regex_support"))) (d #t) (k 0)) (d (n "geo") (r "^0.26") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw" "serde"))) (d #t) (k 0)) (d (n "jmespath") (r "^0.3") (f (quote ("sync"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libloading") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lru") (r "^0.12") (f (quote ("hashbrown"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.20") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.2") (f (quote ("trace"))) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "prost") (r "^0.12") (d #t) (k 0)) (d (n "prost-build") (r "^0.12") (d #t) (k 1)) (d (n "prost-types") (r "^0.12") (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread"))) (d #t) (k 0)) (d (n "uuid") (r "^1.7") (f (quote ("fast-rng" "v4"))) (d #t) (k 0)) (d (n "zmq") (r "^0.10") (d #t) (k 0)))) (h "0smxdw17fi39yigjw9x5nzciggfsgp3bca8c94nkb01y1cbnpxjz") (r "1.70")))

(define-public crate-savant_core-0.2.19 (c (n "savant_core") (v "0.2.19") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1.5") (d #t) (k 0)) (d (n "crc32fast") (r "^1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "derive_builder") (r "^0.13") (d #t) (k 0)) (d (n "etcd_dynamic_state") (r "^0.2.10") (d #t) (k 0)) (d (n "evalexpr") (r "^11") (f (quote ("rand" "regex_support"))) (d #t) (k 0)) (d (n "geo") (r "^0.26") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw" "serde"))) (d #t) (k 0)) (d (n "jmespath") (r "^0.3") (f (quote ("sync"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libloading") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lru") (r "^0.12") (f (quote ("hashbrown"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.20") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.2") (f (quote ("trace"))) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "prost") (r "^0.12") (d #t) (k 0)) (d (n "prost-build") (r "^0.12") (d #t) (k 1)) (d (n "prost-types") (r "^0.12") (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread"))) (d #t) (k 0)) (d (n "uuid") (r "^1.7") (f (quote ("fast-rng" "v4"))) (d #t) (k 0)) (d (n "zmq") (r "^0.10") (d #t) (k 0)))) (h "0gb15k4kh559xdhgs8dk7bhzpccmshc6p1arwavcbfhaqb6sn6cb") (r "1.70")))

(define-public crate-savant_core-0.2.20 (c (n "savant_core") (v "0.2.20") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1.5") (d #t) (k 0)) (d (n "crc32fast") (r "^1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "derive_builder") (r "^0.13") (d #t) (k 0)) (d (n "etcd_dynamic_state") (r "^0.2.10") (d #t) (k 0)) (d (n "evalexpr") (r "^11") (f (quote ("rand" "regex_support"))) (d #t) (k 0)) (d (n "geo") (r "^0.26") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw" "serde"))) (d #t) (k 0)) (d (n "jmespath") (r "^0.3") (f (quote ("sync"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libloading") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lru") (r "^0.12") (f (quote ("hashbrown"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.20") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.2") (f (quote ("trace"))) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "prost") (r "^0.12") (d #t) (k 0)) (d (n "prost-build") (r "^0.12") (d #t) (k 1)) (d (n "prost-types") (r "^0.12") (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread"))) (d #t) (k 0)) (d (n "uuid") (r "^1.7") (f (quote ("fast-rng" "v4"))) (d #t) (k 0)) (d (n "zmq") (r "^0.10") (d #t) (k 0)))) (h "1ix14gil16kfinn0jfwl5gsclw896xgjbjr4qyx2f4hy03560rlq") (r "1.70")))

(define-public crate-savant_core-0.2.21 (c (n "savant_core") (v "0.2.21") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1.5") (d #t) (k 0)) (d (n "crc32fast") (r "^1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "derive_builder") (r "^0.13") (d #t) (k 0)) (d (n "etcd_dynamic_state") (r "^0.2.10") (d #t) (k 0)) (d (n "evalexpr") (r "^11") (f (quote ("rand" "regex_support"))) (d #t) (k 0)) (d (n "geo") (r "^0.26") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw" "serde"))) (d #t) (k 0)) (d (n "jmespath") (r "^0.3") (f (quote ("sync"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libloading") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lru") (r "^0.12") (f (quote ("hashbrown"))) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.20") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.2") (f (quote ("trace"))) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "prost") (r "^0.12") (d #t) (k 0)) (d (n "prost-build") (r "^0.12") (d #t) (k 1)) (d (n "prost-types") (r "^0.12") (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread"))) (d #t) (k 0)) (d (n "uuid") (r "^1.7") (f (quote ("fast-rng" "v4"))) (d #t) (k 0)) (d (n "zmq") (r "^0.10") (d #t) (k 0)))) (h "1yqgp68x4xi70zn9azc28i5c4c8v20w9mks5mi8yq6gkn9hg3jx1") (r "1.70")))

