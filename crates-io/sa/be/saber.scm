(define-module (crates-io sa be saber) #:use-module (crates-io))

(define-public crate-saber-0.1.0 (c (n "saber") (v "0.1.0") (h "0pyg9s5g0y4bxxiai096jkdjpd13zbfac46y3qqyj5wawqvxw98g")))

(define-public crate-saber-0.1.1 (c (n "saber") (v "0.1.1") (d (list (d (n "analytic") (r "^0.2.4") (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "biofile") (r "^0.1.11") (d #t) (k 0)) (d (n "blas-src") (r "^0.3") (f (quote ("openblas"))) (d #t) (k 0)) (d (n "clap") (r "^2.32.0") (d #t) (k 0)) (d (n "colored") (r "^1.7.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.12.1") (f (quote ("blas"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.10.0") (d #t) (k 0)) (d (n "ndarray-parallel") (r "^0.9.0") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.9.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.6") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "rayon") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.0.8") (d #t) (k 2)) (d (n "time") (r "^0.1.42") (d #t) (k 0)))) (h "0zfm363kfw6inaydfs1cakk8rds9fzspxmbgng9xswk80m123m42")))

(define-public crate-saber-0.1.2 (c (n "saber") (v "0.1.2") (d (list (d (n "analytic") (r "^0.3.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "biofile") (r "^0.1.12") (d #t) (k 0)) (d (n "blas-src") (r "^0.3") (f (quote ("openblas"))) (d #t) (k 0)) (d (n "clap") (r "^2.32.0") (d #t) (k 0)) (d (n "colored") (r "^1.7.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.12.1") (f (quote ("blas"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.10.0") (d #t) (k 0)) (d (n "ndarray-parallel") (r "^0.9.0") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.9.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.6") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "rayon") (r "^1.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.0.8") (d #t) (k 2)) (d (n "time") (r "^0.1.42") (d #t) (k 0)))) (h "1islhxfxpfxqvgdibhxjb7h37q5fh5cyp170lg3jbpv1qryrpn6y")))

