(define-module (crates-io sa mp sampler) #:use-module (crates-io))

(define-public crate-sampler-0.1.0 (c (n "sampler") (v "0.1.0") (d (list (d (n "find_folder") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "find_folder") (r "^0.3.0") (d #t) (k 2)) (d (n "hound") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "instrument") (r "^0.1.0") (d #t) (k 0)) (d (n "pitch_calc") (r "^0.11.0") (d #t) (k 0)) (d (n "portaudio") (r "^0.6.2") (d #t) (k 2)) (d (n "sample") (r "^0.6.0") (d #t) (k 0)) (d (n "serde") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "time_calc") (r "^0.11.0") (d #t) (k 0)))) (h "0q5a7mbz1vfimw4fwvjc189zj8al0d1shadww0l5m99ax7gk2vxi") (f (quote (("wav" "hound") ("serde_serialization" "serde" "serde_json" "time_calc/serde_serialization" "pitch_calc/serde_serialization" "instrument/serde_serialization" "find_folder") ("default" "wav"))))))

(define-public crate-sampler-0.2.0 (c (n "sampler") (v "0.2.0") (d (list (d (n "find_folder") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "find_folder") (r "^0.3.0") (d #t) (k 2)) (d (n "hound") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "instrument") (r "^0.2.0") (d #t) (k 0)) (d (n "pitch_calc") (r "^0.11.0") (d #t) (k 0)) (d (n "portaudio") (r "^0.6.4") (d #t) (k 2)) (d (n "sample") (r "^0.6.0") (d #t) (k 0)) (d (n "serde") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "time_calc") (r "^0.11.0") (d #t) (k 0)))) (h "1ylnsxrx68f4gmifh741rl677rxxlx4gkgafbnni9id4i18h2y84") (f (quote (("wav" "hound") ("serde_serialization" "serde" "serde_json" "time_calc/serde_serialization" "pitch_calc/serde_serialization" "instrument/serde_serialization" "find_folder") ("default" "wav"))))))

