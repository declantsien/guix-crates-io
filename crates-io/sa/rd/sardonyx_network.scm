(define-module (crates-io sa rd sardonyx_network) #:use-module (crates-io))

(define-public crate-sardonyx_network-0.0.1 (c (n "sardonyx_network") (v "0.0.1") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.3.9") (d #t) (k 0)) (d (n "err-derive") (r "^0.1") (d #t) (k 0)) (d (n "laminar") (r "^0.2.3") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "sardonyx_core") (r "^0.0.1") (d #t) (k 0)) (d (n "sardonyx_error") (r "^0.0.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "shred") (r "^0.7") (d #t) (k 0)) (d (n "shrev") (r "^1.0") (d #t) (k 0)) (d (n "thread_profiler") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.7.1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "0h062cdwxxz3hsw384hkpnsz4cdszpbv15p9crp1yp7kygrf360s") (f (quote (("profiler" "thread_profiler/thread_profiler") ("nightly" "sardonyx_core/nightly")))) (y #t)))

(define-public crate-sardonyx_network-0.0.3 (c (n "sardonyx_network") (v "0.0.3") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.3.9") (d #t) (k 0)) (d (n "err-derive") (r "^0.1") (d #t) (k 0)) (d (n "laminar") (r "^0.2.3") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "sardonyx_core") (r ">= 0.0.3") (d #t) (k 0)) (d (n "sardonyx_error") (r ">= 0.0.3") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "shred") (r "^0.7") (d #t) (k 0)) (d (n "shrev") (r "^1.0") (d #t) (k 0)) (d (n "thread_profiler") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.7.1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "1lfgyl7rh3x3dflzyfxcqglslrffc33g76j07m4g6dca7zy95zsi") (f (quote (("profiler" "thread_profiler/thread_profiler") ("nightly" "sardonyx_core/nightly")))) (y #t)))

