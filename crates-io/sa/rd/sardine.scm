(define-module (crates-io sa rd sardine) #:use-module (crates-io))

(define-public crate-sardine-0.1.0 (c (n "sardine") (v "0.1.0") (d (list (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "digest") (r "^0.7") (d #t) (k 0)) (d (n "hmac") (r "^0.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.40") (d #t) (k 0)) (d (n "num-bigint") (r "^0.1") (k 0)) (d (n "num-integer") (r "^0.1") (k 0)) (d (n "num-traits") (r "^0.1") (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha2") (r "^0.7") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.2") (o #t) (d #t) (k 0)))) (h "10kv3jhzx9rw3nlihd5d1bncvljly6dm0sy2qdcclybx3fjiapqm") (f (quote (("wasm" "wasm-bindgen") ("default"))))))

(define-public crate-sardine-0.2.0 (c (n "sardine") (v "0.2.0") (d (list (d (n "aes_frast") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chacha") (r "^0.1.0") (d #t) (k 0)) (d (n "hmac") (r "^0.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.40") (d #t) (k 0)) (d (n "num-bigint") (r "^0.1") (k 0)) (d (n "num-integer") (r "^0.1") (k 0)) (d (n "num-traits") (r "^0.1") (k 0)) (d (n "rand") (r "^0.5.0") (d #t) (k 0)) (d (n "sha2") (r "^0.7") (d #t) (k 0)) (d (n "wasm-bindgen") (r "= 0.2.8") (f (quote ("std"))) (o #t) (k 0)))) (h "098fnmy6xy4hqg2ib7lbqpajj06dsjyla3izmhfsii9gcdiqpd7j") (f (quote (("wasm" "wasm-bindgen") ("fips" "aes") ("default") ("aes" "aes_frast"))))))

(define-public crate-sardine-0.3.0 (c (n "sardine") (v "0.3.0") (d (list (d (n "aes_frast") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chacha") (r "^0.1.0") (d #t) (k 0)) (d (n "hmac") (r "^0.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.40") (d #t) (k 0)) (d (n "num-bigint") (r "^0.1") (k 0)) (d (n "num-integer") (r "^0.1") (k 0)) (d (n "num-traits") (r "^0.1") (k 0)) (d (n "rand") (r "^0.5.0") (d #t) (k 0)) (d (n "sha2") (r "^0.7") (d #t) (k 0)) (d (n "wasm-bindgen") (r "= 0.2.23") (f (quote ("std"))) (o #t) (k 0)))) (h "12fvlw84fqjsxk3qdqq5qw7bx7736vynnngp401czfijih18rmn6") (f (quote (("wasm" "wasm-bindgen") ("fips" "aes") ("default") ("aes" "aes_frast"))))))

(define-public crate-sardine-0.4.0 (c (n "sardine") (v "0.4.0") (d (list (d (n "aes_frast") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chacha") (r "^0.1.0") (d #t) (k 0)) (d (n "hmac") (r "^0.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.40") (d #t) (k 0)) (d (n "num-bigint") (r "^0.1") (k 0)) (d (n "num-integer") (r "^0.1") (k 0)) (d (n "num-traits") (r "^0.1") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "sha2") (r "^0.7") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("std"))) (o #t) (k 0)))) (h "1d9lb5mkjr4rqzlqhg9vbqvlr29c8l5jwdzbbh0wx41cb7dxndz1") (f (quote (("wasm" "wasm-bindgen" "rand/wasm-bindgen") ("fips" "aes") ("default") ("aes" "aes_frast"))))))

(define-public crate-sardine-0.4.1 (c (n "sardine") (v "0.4.1") (d (list (d (n "aes_frast") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chacha") (r "^0.1.0") (d #t) (k 0)) (d (n "hmac") (r "^0.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.40") (d #t) (k 0)) (d (n "num-bigint") (r "^0.1") (k 0)) (d (n "num-integer") (r "^0.1") (k 0)) (d (n "num-traits") (r "^0.1") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "sha2") (r "^0.7") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("std"))) (o #t) (k 0)))) (h "1qdfr435r6nfaxqg66dah030hr2s00hljxhxncsrxacsplv9imwx") (f (quote (("wasm" "wasm-bindgen" "rand/wasm-bindgen") ("fips" "aes") ("default") ("aes" "aes_frast"))))))

(define-public crate-sardine-0.5.0 (c (n "sardine") (v "0.5.0") (d (list (d (n "aes256") (r "^0.3.2") (o #t) (d #t) (k 0) (p "aes")) (d (n "block-modes") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chacha") (r "^0.1.0") (d #t) (k 0)) (d (n "hmac") (r "^0.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.40") (d #t) (k 0)) (d (n "num-bigint") (r "^0.1") (k 0)) (d (n "num-integer") (r "^0.1") (k 0)) (d (n "num-traits") (r "^0.1") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "sha2") (r "^0.7") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("std"))) (o #t) (k 0)))) (h "0l8qca35zgkcznqby9d7vj53xzysjnkrq4qsb3wimdj1nnvprfsd") (f (quote (("wasm" "wasm-bindgen" "rand/wasm-bindgen") ("fips" "aes") ("default") ("aes" "aes256" "block-modes"))))))

(define-public crate-sardine-0.6.0 (c (n "sardine") (v "0.6.0") (d (list (d (n "aes256") (r "^0.3.2") (o #t) (d #t) (k 0) (p "aes")) (d (n "block-modes") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chacha") (r "^0.1.0") (d #t) (k 0)) (d (n "hmac") (r "^0.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.40") (d #t) (k 0)) (d (n "num-bigint") (r "^0.1") (k 0)) (d (n "num-integer") (r "^0.1") (k 0)) (d (n "num-traits") (r "^0.1") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.7") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("std"))) (o #t) (k 0)))) (h "02qlz60hcasx9q1aq6yvh5j7hd6cnfhimxkz3vdb757zqagh4h0b") (f (quote (("wasm" "wasm-bindgen" "rand/wasm-bindgen") ("ser" "serde") ("fips" "aes") ("default") ("aes" "aes256" "block-modes"))))))

(define-public crate-sardine-0.6.1 (c (n "sardine") (v "0.6.1") (d (list (d (n "aes256") (r "^0.3.2") (o #t) (d #t) (k 0) (p "aes")) (d (n "block-modes") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chacha") (r "^0.1.0") (d #t) (k 0)) (d (n "hmac") (r "^0.6") (d #t) (k 0)) (d (n "libc") (r "^0.2.40") (d #t) (k 0)) (d (n "num-bigint") (r "^0.3") (k 0)) (d (n "num-integer") (r "^0.1") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.7") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("std"))) (o #t) (k 0)))) (h "0mb1kbk7ji1cqyynwgmkprcn5yivk8xlrd2fyrdgixypfmc5mq2f") (f (quote (("wasm" "wasm-bindgen" "rand/wasm-bindgen") ("ser" "serde" "num-bigint/serde") ("fips" "aes") ("default") ("aes" "aes256" "block-modes"))))))

(define-public crate-sardine-0.6.2 (c (n "sardine") (v "0.6.2") (d (list (d (n "aes256") (r "^0.7") (o #t) (d #t) (k 0) (p "aes")) (d (n "block-modes") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chacha") (r "^0.1.0") (d #t) (k 0)) (d (n "hmac") (r "^0.11") (d #t) (k 0)) (d (n "libc") (r "^0.2.40") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "num-integer") (r "^0.1") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("std"))) (o #t) (k 0)))) (h "16667kbx7sjdd6vrm2r1sfsi3sk22kag2sx909frvvs0b65yxnns") (f (quote (("wasm" "wasm-bindgen") ("ser" "serde" "num-bigint/serde") ("fips" "aes") ("default") ("aes" "aes256" "block-modes"))))))

