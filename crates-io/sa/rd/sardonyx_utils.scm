(define-module (crates-io sa rd sardonyx_utils) #:use-module (crates-io))

(define-public crate-sardonyx_utils-0.0.1 (c (n "sardonyx_utils") (v "0.0.1") (d (list (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "sardonyx_assets") (r "^0.0.1") (d #t) (k 0)) (d (n "sardonyx_controls") (r "^0.0.1") (d #t) (k 0)) (d (n "sardonyx_core") (r "^0.0.1") (d #t) (k 0)) (d (n "sardonyx_derive") (r "^0.0.1") (d #t) (k 0)) (d (n "sardonyx_error") (r "^0.0.1") (d #t) (k 0)) (d (n "sardonyx_rendy") (r "^0.0.1") (d #t) (k 0)) (d (n "sardonyx_window") (r "^0.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "specs-derive") (r "^0.4.0") (d #t) (k 0)) (d (n "specs-hierarchy") (r "^0.5.1") (d #t) (k 0)) (d (n "thread_profiler") (r "^0.3") (o #t) (d #t) (k 0)))) (h "0m9w69qm0pgqq19717h5hq51mh8p4lgmv0k52ricg8mcr7i7vgzn") (f (quote (("profiler" "thread_profiler/thread_profiler") ("nightly" "sardonyx_core/nightly")))) (y #t)))

(define-public crate-sardonyx_utils-0.0.3 (c (n "sardonyx_utils") (v "0.0.3") (d (list (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "sardonyx_assets") (r ">= 0.0.3") (d #t) (k 0)) (d (n "sardonyx_controls") (r ">= 0.0.3") (d #t) (k 0)) (d (n "sardonyx_core") (r ">= 0.0.3") (d #t) (k 0)) (d (n "sardonyx_derive") (r ">= 0.0.3") (d #t) (k 0)) (d (n "sardonyx_error") (r ">= 0.0.3") (d #t) (k 0)) (d (n "sardonyx_rendy") (r ">= 0.0.3") (d #t) (k 0)) (d (n "sardonyx_window") (r ">= 0.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "specs-derive") (r "^0.4.0") (d #t) (k 0)) (d (n "specs-hierarchy") (r "^0.5.1") (d #t) (k 0)) (d (n "thread_profiler") (r "^0.3") (o #t) (d #t) (k 0)))) (h "1hw9ihqw2q8y8hr16lf418islmri2zxfksqch4k73dkr7s7a9k36") (f (quote (("profiler" "thread_profiler/thread_profiler") ("nightly" "sardonyx_core/nightly")))) (y #t)))

