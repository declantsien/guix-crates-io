(define-module (crates-io sa rd sardonyx_audio) #:use-module (crates-io))

(define-public crate-sardonyx_audio-0.0.1 (c (n "sardonyx_audio") (v "0.0.1") (d (list (d (n "cpal") (r "^0.8") (d #t) (k 0)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "rodio") (r "^0.9") (d #t) (k 0)) (d (n "sardonyx_assets") (r "^0.0.1") (d #t) (k 0)) (d (n "sardonyx_core") (r "^0.0.1") (d #t) (k 0)) (d (n "sardonyx_error") (r "^0.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thread_profiler") (r "^0.3") (o #t) (d #t) (k 0)))) (h "073z7z1b2kzjcyka0fd50vqkm9m1yf0k90jkz80p9cc2iddj1v35") (f (quote (("profiler" "thread_profiler/thread_profiler") ("nightly" "sardonyx_core/nightly")))) (y #t)))

(define-public crate-sardonyx_audio-0.0.3 (c (n "sardonyx_audio") (v "0.0.3") (d (list (d (n "cpal") (r "^0.8") (d #t) (k 0)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "rodio") (r "^0.9") (d #t) (k 0)) (d (n "sardonyx_assets") (r ">= 0.0.3") (d #t) (k 0)) (d (n "sardonyx_core") (r ">= 0.0.3") (d #t) (k 0)) (d (n "sardonyx_error") (r ">= 0.0.3") (d #t) (k 0)) (d (n "sardonyx_utils") (r ">= 0.0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thread_profiler") (r "^0.3") (o #t) (d #t) (k 0)))) (h "0c8mc4bxbhkg3ncih2231s6kv95gnfbp0gb539xmwyhk0pw943bs") (f (quote (("profiler" "thread_profiler/thread_profiler") ("nightly" "sardonyx_core/nightly")))) (y #t)))

