(define-module (crates-io sa fe safe_vault) #:use-module (crates-io))

(define-public crate-safe_vault-0.1.5 (c (n "safe_vault") (v "0.1.5") (d (list (d (n "cbor") (r "*") (d #t) (k 0)) (d (n "env_logger") (r "*") (d #t) (k 0)) (d (n "log") (r "*") (d #t) (k 0)) (d (n "lru_time_cache") (r "0.2.*") (d #t) (k 0)) (d (n "rand") (r "*") (d #t) (k 0)) (d (n "routing") (r "0.3.*") (d #t) (k 0)) (d (n "rustc-serialize") (r "*") (d #t) (k 0)) (d (n "sodiumoxide") (r "*") (d #t) (k 0)) (d (n "tempdir") (r "*") (d #t) (k 0)) (d (n "time") (r "*") (d #t) (k 0)))) (h "1mxhi8ffw0x293gjjbgy1n8p0h53y5sj5jf27p3nnd00j65g3khm") (f (quote (("use-actual-routing"))))))

(define-public crate-safe_vault-0.1.6 (c (n "safe_vault") (v "0.1.6") (d (list (d (n "cbor") (r "*") (d #t) (k 0)) (d (n "env_logger") (r "*") (d #t) (k 0)) (d (n "log") (r "*") (d #t) (k 0)) (d (n "lru_time_cache") (r "0.2.*") (d #t) (k 0)) (d (n "rand") (r "*") (d #t) (k 0)) (d (n "routing") (r "0.3.*") (d #t) (k 0)) (d (n "rustc-serialize") (r "*") (d #t) (k 0)) (d (n "sodiumoxide") (r "*") (d #t) (k 0)) (d (n "tempdir") (r "*") (d #t) (k 0)) (d (n "time") (r "*") (d #t) (k 0)))) (h "0k7h35x0xjgq8g8s7wbvpl2wij2fc256dvx9rywikmwiin77ph88") (f (quote (("use-mock-routing"))))))

(define-public crate-safe_vault-0.2.0 (c (n "safe_vault") (v "0.2.0") (d (list (d (n "cbor") (r "*") (d #t) (k 0)) (d (n "env_logger") (r "*") (d #t) (k 0)) (d (n "log") (r "*") (d #t) (k 0)) (d (n "lru_time_cache") (r "0.2.*") (d #t) (k 0)) (d (n "rand") (r "*") (d #t) (k 0)) (d (n "routing") (r "0.4.*") (d #t) (k 0)) (d (n "rustc-serialize") (r "*") (d #t) (k 0)) (d (n "sodiumoxide") (r "*") (d #t) (k 0)) (d (n "tempdir") (r "*") (d #t) (k 0)) (d (n "time") (r "*") (d #t) (k 0)))) (h "0md2f67cnhw9ipdjb1pj3jhbbxmp12gqdcj21s70dicm1fq3lck4") (f (quote (("use-mock-routing"))))))

(define-public crate-safe_vault-0.3.0 (c (n "safe_vault") (v "0.3.0") (d (list (d (n "chunk_store") (r "~0.2.0") (d #t) (k 0)) (d (n "clippy") (r "~0.0.44") (o #t) (d #t) (k 0)) (d (n "config_file_handler") (r "~0.0.1") (d #t) (k 0)) (d (n "ctrlc") (r "~1.1.1") (d #t) (k 0)) (d (n "docopt") (r "~0.6.78") (d #t) (k 0)) (d (n "kademlia_routing_table") (r "~0.3.3") (d #t) (k 2)) (d (n "log") (r "~0.3.5") (d #t) (k 0)) (d (n "lru_time_cache") (r "~0.2.6") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.3.0") (d #t) (k 0)) (d (n "mpid_messaging") (r "~0.1.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.14") (d #t) (k 2)) (d (n "routing") (r "~0.9.0") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.18") (d #t) (k 0)) (d (n "sodiumoxide") (r "~0.0.9") (d #t) (k 0)) (d (n "time") (r "~0.1.34") (d #t) (k 0)) (d (n "xor_name") (r "~0.0.5") (d #t) (k 0)))) (h "0k9ljiaz25vvhkwvdfpygnfqlkn6154phgjy9zwl6l8syjvl42zb") (f (quote (("use-mock-routing"))))))

(define-public crate-safe_vault-0.4.0 (c (n "safe_vault") (v "0.4.0") (d (list (d (n "chunk_store") (r "~0.3.0") (d #t) (k 0)) (d (n "clippy") (r "~0.0.46") (o #t) (d #t) (k 0)) (d (n "config_file_handler") (r "~0.1.0") (d #t) (k 0)) (d (n "ctrlc") (r "~1.1.1") (d #t) (k 0)) (d (n "docopt") (r "~0.6.78") (d #t) (k 0)) (d (n "kademlia_routing_table") (r "~0.4.0") (d #t) (k 2)) (d (n "log") (r "~0.3.5") (d #t) (k 0)) (d (n "lru_time_cache") (r "~0.2.7") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.4.0") (d #t) (k 0)) (d (n "mpid_messaging") (r "~0.2.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.14") (d #t) (k 2)) (d (n "routing") (r "~0.11.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.18") (d #t) (k 0)) (d (n "sodiumoxide") (r "~0.0.9") (d #t) (k 0)) (d (n "time") (r "~0.1.34") (d #t) (k 0)) (d (n "xor_name") (r "~0.1.0") (d #t) (k 0)))) (h "1g76g5qca20jhf134z6gjlqwyzapdqs1v0zmifwjychw2x67qv11") (f (quote (("use-mock-routing"))))))

(define-public crate-safe_vault-0.5.0 (c (n "safe_vault") (v "0.5.0") (d (list (d (n "chunk_store") (r "~0.3.0") (d #t) (k 0)) (d (n "clippy") (r "~0.0.54") (o #t) (d #t) (k 0)) (d (n "config_file_handler") (r "~0.2.1") (d #t) (k 0)) (d (n "ctrlc") (r "~1.1.1") (d #t) (k 0)) (d (n "docopt") (r "~0.6.78") (d #t) (k 0)) (d (n "kademlia_routing_table") (r "~0.4.0") (d #t) (k 2)) (d (n "log") (r "~0.3.5") (d #t) (k 0)) (d (n "lru_time_cache") (r "~0.2.7") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.4.1") (d #t) (k 0)) (d (n "rand") (r "~0.3.14") (d #t) (k 2)) (d (n "routing") (r "~0.11.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.18") (d #t) (k 0)) (d (n "safe_network_common") (r "~0.0.1") (d #t) (k 0)) (d (n "sodiumoxide") (r "~0.0.9") (d #t) (k 0)) (d (n "time") (r "~0.1.34") (d #t) (k 0)) (d (n "xor_name") (r "~0.1.0") (d #t) (k 0)))) (h "18rgdr4bgwnz5bryiqcg20ndfgczr5mz3b6q0n9xabp6p0zwf3ji") (f (quote (("use-mock-routing"))))))

(define-public crate-safe_vault-0.8.0 (c (n "safe_vault") (v "0.8.0") (d (list (d (n "accumulator") (r "~0.3.0") (d #t) (k 0)) (d (n "chunk_store") (r "~0.4.0") (d #t) (k 0)) (d (n "clippy") (r "~0.0.64") (o #t) (d #t) (k 0)) (d (n "config_file_handler") (r "~0.3.0") (d #t) (k 0)) (d (n "docopt") (r "~0.6.80") (d #t) (k 0)) (d (n "hyper") (r "~0.9.1") (o #t) (d #t) (k 1)) (d (n "itertools") (r "~0.4.13") (d #t) (k 0)) (d (n "kademlia_routing_table") (r "~0.5.1") (d #t) (k 0)) (d (n "log") (r "~0.3.6") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.5.4") (d #t) (k 0)) (d (n "rand") (r "~0.3.14") (d #t) (k 0)) (d (n "routing") (r "~0.18.4") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.19") (d #t) (k 0)) (d (n "safe_network_common") (r "~0.1.1") (d #t) (k 0)) (d (n "sodiumoxide") (r "~0.0.10") (d #t) (k 0)) (d (n "xor_name") (r "~0.1.0") (d #t) (k 0)))) (h "1xzcw7zma95lk21mav1hzixv3m6vwwwyds49kvnlwlafqn9dnn85") (f (quote (("use-mock-crust" "routing/use-mock-crust") ("generate-diagrams" "hyper"))))))

(define-public crate-safe_vault-0.8.1 (c (n "safe_vault") (v "0.8.1") (d (list (d (n "accumulator") (r "~0.3.0") (d #t) (k 0)) (d (n "chunk_store") (r "~0.4.0") (d #t) (k 0)) (d (n "clippy") (r "~0.0.67") (o #t) (d #t) (k 0)) (d (n "config_file_handler") (r "~0.3.0") (d #t) (k 0)) (d (n "docopt") (r "~0.6.80") (d #t) (k 0)) (d (n "hyper") (r "~0.9.4") (o #t) (d #t) (k 1)) (d (n "itertools") (r "~0.4.15") (d #t) (k 0)) (d (n "kademlia_routing_table") (r "~0.5.2") (d #t) (k 0)) (d (n "log") (r "~0.3.6") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.5.4") (d #t) (k 0)) (d (n "rand") (r "~0.3.14") (d #t) (k 0)) (d (n "routing") (r "~0.19.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.19") (d #t) (k 0)) (d (n "safe_network_common") (r "~0.1.1") (d #t) (k 0)) (d (n "sodiumoxide") (r "~0.0.10") (d #t) (k 0)) (d (n "xor_name") (r "~0.1.0") (d #t) (k 0)))) (h "1z8hywg4fv4sa6gdfpy5bj6b31d5971fnipdlv12j5n69d88lrb8") (f (quote (("use-mock-crust" "routing/use-mock-crust") ("generate-diagrams" "hyper"))))))

(define-public crate-safe_vault-0.10.0 (c (n "safe_vault") (v "0.10.0") (d (list (d (n "accumulator") (r "~0.4.0") (d #t) (k 0)) (d (n "clippy") (r "~0.0.77") (o #t) (d #t) (k 0)) (d (n "config_file_handler") (r "~0.3.1") (d #t) (k 0)) (d (n "docopt") (r "~0.6.80") (d #t) (k 0)) (d (n "hyper") (r "~0.9.6") (o #t) (d #t) (k 1)) (d (n "itertools") (r "~0.4.16") (d #t) (k 0)) (d (n "kademlia_routing_table") (r "~0.6.0") (d #t) (k 0)) (d (n "log") (r "~0.3.6") (d #t) (k 0)) (d (n "lru_time_cache") (r "~0.4.0") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.8.0") (d #t) (k 0)) (d (n "quick-error") (r "~1.1.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.14") (d #t) (k 0)) (d (n "routing") (r "~0.23.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.19") (d #t) (k 0)) (d (n "safe_network_common") (r "~0.4.1") (d #t) (k 0)) (d (n "sodiumoxide") (r "~0.0.10") (d #t) (k 0)) (d (n "tempdir") (r "~0.3.4") (d #t) (k 2)))) (h "10yp0scxbv8w7kvp04zpd72lndzcz7srsvndxl34lvi51c4ww2c0") (f (quote (("use-mock-crust" "routing/use-mock-crust") ("generate-diagrams" "hyper"))))))

(define-public crate-safe_vault-0.10.1 (c (n "safe_vault") (v "0.10.1") (d (list (d (n "accumulator") (r "~0.4.0") (d #t) (k 0)) (d (n "clippy") (r "~0.0.77") (o #t) (d #t) (k 0)) (d (n "config_file_handler") (r "~0.3.1") (d #t) (k 0)) (d (n "docopt") (r "~0.6.80") (d #t) (k 0)) (d (n "hyper") (r "~0.9.6") (o #t) (d #t) (k 1)) (d (n "itertools") (r "~0.4.16") (d #t) (k 0)) (d (n "kademlia_routing_table") (r "~0.6.0") (d #t) (k 0)) (d (n "log") (r "~0.3.6") (d #t) (k 0)) (d (n "lru_time_cache") (r "~0.4.0") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.8.0") (d #t) (k 0)) (d (n "quick-error") (r "~1.1.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.14") (d #t) (k 0)) (d (n "routing") (r "~0.23.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.19") (d #t) (k 0)) (d (n "safe_network_common") (r "~0.4.1") (d #t) (k 0)) (d (n "sodiumoxide") (r "~0.0.10") (d #t) (k 0)) (d (n "tempdir") (r "~0.3.4") (d #t) (k 2)))) (h "1979lryc33pdgar6brmsw6hhfk60cbr9p47jb8jva7y6a9a55n1n") (f (quote (("use-mock-crust" "routing/use-mock-crust") ("generate-diagrams" "hyper"))))))

(define-public crate-safe_vault-0.10.3 (c (n "safe_vault") (v "0.10.3") (d (list (d (n "accumulator") (r "~0.4.0") (d #t) (k 0)) (d (n "clippy") (r "~0.0.79") (o #t) (d #t) (k 0)) (d (n "config_file_handler") (r "~0.3.1") (d #t) (k 0)) (d (n "docopt") (r "~0.6.80") (d #t) (k 0)) (d (n "fs2") (r "~0.2.5") (d #t) (k 0)) (d (n "hyper") (r "~0.9.6") (o #t) (d #t) (k 1)) (d (n "itertools") (r "~0.4.16") (d #t) (k 0)) (d (n "kademlia_routing_table") (r "~0.6.0") (d #t) (k 0)) (d (n "log") (r "~0.3.6") (d #t) (k 0)) (d (n "lru_time_cache") (r "~0.4.0") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.8.0") (d #t) (k 0)) (d (n "quick-error") (r "~1.1.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.14") (d #t) (k 0)) (d (n "routing") (r "~0.24.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.19") (d #t) (k 0)) (d (n "safe_network_common") (r "~0.5.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "= 0.0.10") (d #t) (k 0)) (d (n "tempdir") (r "~0.3.4") (d #t) (k 2)))) (h "1bs0c4r150q2vd9fjf4vqb7fwbyppvw0gn9yjy0ilfjnxiw3y77w") (f (quote (("use-mock-crust" "routing/use-mock-crust") ("generate-diagrams" "hyper"))))))

(define-public crate-safe_vault-0.10.4 (c (n "safe_vault") (v "0.10.4") (d (list (d (n "accumulator") (r "~0.4.0") (d #t) (k 0)) (d (n "clippy") (r "~0.0.79") (o #t) (d #t) (k 0)) (d (n "config_file_handler") (r "~0.3.1") (d #t) (k 0)) (d (n "docopt") (r "~0.6.80") (d #t) (k 0)) (d (n "fs2") (r "~0.2.5") (d #t) (k 0)) (d (n "hyper") (r "~0.9.6") (o #t) (d #t) (k 1)) (d (n "itertools") (r "~0.4.16") (d #t) (k 0)) (d (n "kademlia_routing_table") (r "~0.6.0") (d #t) (k 0)) (d (n "log") (r "~0.3.6") (d #t) (k 0)) (d (n "lru_time_cache") (r "~0.4.0") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.8.0") (d #t) (k 0)) (d (n "quick-error") (r "~1.1.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.14") (d #t) (k 0)) (d (n "routing") (r "~0.24.3") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.19") (d #t) (k 0)) (d (n "safe_network_common") (r "~0.5.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "= 0.0.10") (d #t) (k 0)) (d (n "tempdir") (r "~0.3.4") (d #t) (k 2)))) (h "0zm6rw7lhkgamf1204a385xx4awpqlxvrmwjxxxfqsb4f2h4q547") (f (quote (("use-mock-crust" "routing/use-mock-crust") ("generate-diagrams" "hyper"))))))

(define-public crate-safe_vault-0.10.5 (c (n "safe_vault") (v "0.10.5") (d (list (d (n "accumulator") (r "~0.4.0") (d #t) (k 0)) (d (n "clippy") (r "~0.0.79") (o #t) (d #t) (k 0)) (d (n "config_file_handler") (r "~0.3.1") (d #t) (k 0)) (d (n "docopt") (r "~0.6.80") (d #t) (k 0)) (d (n "fs2") (r "~0.2.5") (d #t) (k 0)) (d (n "hyper") (r "~0.9.6") (o #t) (d #t) (k 1)) (d (n "itertools") (r "~0.4.16") (d #t) (k 0)) (d (n "kademlia_routing_table") (r "~0.6.0") (d #t) (k 0)) (d (n "log") (r "~0.3.6") (d #t) (k 0)) (d (n "lru_time_cache") (r "~0.4.0") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.8.0") (d #t) (k 0)) (d (n "quick-error") (r "~1.1.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.14") (d #t) (k 0)) (d (n "routing") (r "~0.25.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.19") (d #t) (k 0)) (d (n "safe_network_common") (r "~0.6.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "= 0.0.10") (d #t) (k 0)) (d (n "tempdir") (r "~0.3.4") (d #t) (k 2)))) (h "09njqk44zhibqnwj0rsqz7553l9048axfq1mxz3msiq68c872j6x") (f (quote (("use-mock-crust" "routing/use-mock-crust") ("generate-diagrams" "hyper"))))))

(define-public crate-safe_vault-0.11.0 (c (n "safe_vault") (v "0.11.0") (d (list (d (n "accumulator") (r "~0.4.0") (d #t) (k 0)) (d (n "clippy") (r "~0.0.80") (o #t) (d #t) (k 0)) (d (n "config_file_handler") (r "~0.4.0") (d #t) (k 0)) (d (n "docopt") (r "~0.6.80") (d #t) (k 0)) (d (n "fs2") (r "~0.2.5") (d #t) (k 0)) (d (n "hyper") (r "~0.9.6") (o #t) (d #t) (k 1)) (d (n "itertools") (r "~0.4.16") (d #t) (k 0)) (d (n "kademlia_routing_table") (r "~0.6.0") (d #t) (k 0)) (d (n "log") (r "~0.3.6") (d #t) (k 0)) (d (n "lru_time_cache") (r "~0.4.0") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.9.0") (d #t) (k 0)) (d (n "quick-error") (r "~1.1.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.14") (d #t) (k 0)) (d (n "routing") (r "~0.23.4") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.1.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.19") (d #t) (k 0)) (d (n "tempdir") (r "~0.3.4") (d #t) (k 2)))) (h "0w9qzan5wqvkv5d48qbnslfz7frq9hzw47m9hgq62ax53cmwnfcb") (f (quote (("use-mock-crust" "routing/use-mock-crust") ("generate-diagrams" "hyper"))))))

(define-public crate-safe_vault-0.12.0 (c (n "safe_vault") (v "0.12.0") (d (list (d (n "accumulator") (r "~0.4.0") (d #t) (k 0)) (d (n "clippy") (r "~0.0.80") (o #t) (d #t) (k 0)) (d (n "config_file_handler") (r "~0.4.0") (d #t) (k 0)) (d (n "docopt") (r "~0.6.80") (d #t) (k 0)) (d (n "fs2") (r "~0.2.5") (d #t) (k 0)) (d (n "hyper") (r "~0.9.6") (o #t) (d #t) (k 1)) (d (n "itertools") (r "~0.4.16") (d #t) (k 0)) (d (n "kademlia_routing_table") (r "~0.6.0") (d #t) (k 0)) (d (n "log") (r "~0.3.6") (d #t) (k 0)) (d (n "lru_time_cache") (r "~0.4.0") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.9.0") (d #t) (k 0)) (d (n "quick-error") (r "~1.1.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.14") (d #t) (k 0)) (d (n "routing") (r "^0.26.0") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.1.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.19") (d #t) (k 0)) (d (n "tempdir") (r "~0.3.4") (d #t) (k 2)))) (h "1b9wdfp529k3xl31wzd61zcvlih6574ihlbx4aclxrjcfiv52xsl") (f (quote (("use-mock-crust" "routing/use-mock-crust") ("generate-diagrams" "hyper"))))))

(define-public crate-safe_vault-0.12.1 (c (n "safe_vault") (v "0.12.1") (d (list (d (n "accumulator") (r "~0.4.0") (d #t) (k 0)) (d (n "clippy") (r "~0.0.95") (o #t) (d #t) (k 0)) (d (n "config_file_handler") (r "~0.4.0") (d #t) (k 0)) (d (n "docopt") (r "~0.6.86") (d #t) (k 0)) (d (n "fs2") (r "~0.2.5") (d #t) (k 0)) (d (n "hyper") (r "~0.9.10") (o #t) (d #t) (k 1)) (d (n "itertools") (r "~0.5.2") (d #t) (k 0)) (d (n "kademlia_routing_table") (r "~0.6.0") (d #t) (k 0)) (d (n "log") (r "~0.3.6") (d #t) (k 0)) (d (n "lru_time_cache") (r "~0.5.0") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.10.0") (d #t) (k 0)) (d (n "quick-error") (r "~1.1.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.14") (d #t) (k 0)) (d (n "routing") (r "~0.27.1") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.1.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.19") (d #t) (k 0)) (d (n "tempdir") (r "~0.3.5") (d #t) (k 2)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)))) (h "112hf8c34vcfzm2spqj002y7w4waflz5qvcb2v76dgra5jcjsxb0") (f (quote (("use-mock-crust" "routing/use-mock-crust") ("generate-diagrams" "hyper"))))))

(define-public crate-safe_vault-0.13.0 (c (n "safe_vault") (v "0.13.0") (d (list (d (n "accumulator") (r "~0.5.0") (d #t) (k 0)) (d (n "config_file_handler") (r "~0.4.0") (d #t) (k 0)) (d (n "docopt") (r "~0.6.86") (d #t) (k 0)) (d (n "fs2") (r "~0.2.5") (d #t) (k 0)) (d (n "hyper") (r "~0.9.10") (o #t) (d #t) (k 1)) (d (n "itertools") (r "~0.5.9") (d #t) (k 0)) (d (n "log") (r "~0.3.6") (d #t) (k 0)) (d (n "lru_time_cache") (r "~0.5.0") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.10.0") (d #t) (k 0)) (d (n "quick-error") (r "~1.1.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.14") (d #t) (k 0)) (d (n "routing") (r "~0.28.0") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.1.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.19") (d #t) (k 0)) (d (n "tempdir") (r "~0.3.5") (d #t) (k 2)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)))) (h "1r4fm68nbisb416lvxa24cr7dkdijnpvj19jmlgxl092l0f190qc") (f (quote (("use-mock-crust" "routing/use-mock-crust") ("generate-diagrams" "hyper"))))))

(define-public crate-safe_vault-0.13.1 (c (n "safe_vault") (v "0.13.1") (d (list (d (n "accumulator") (r "~0.5.0") (d #t) (k 0)) (d (n "config_file_handler") (r "~0.4.0") (d #t) (k 0)) (d (n "docopt") (r "~0.6.86") (d #t) (k 0)) (d (n "fs2") (r "~0.2.5") (d #t) (k 0)) (d (n "hyper") (r "~0.9.10") (o #t) (d #t) (k 1)) (d (n "itertools") (r "~0.5.9") (d #t) (k 0)) (d (n "log") (r "~0.3.6") (d #t) (k 0)) (d (n "lru_time_cache") (r "~0.5.0") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.10.0") (d #t) (k 0)) (d (n "quick-error") (r "~1.1.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.14") (d #t) (k 0)) (d (n "routing") (r "~0.28.2") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.1.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.19") (d #t) (k 0)) (d (n "tempdir") (r "~0.3.5") (d #t) (k 2)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)))) (h "11dcrqh5g3b5cyjly04w5lqzpyfvxf3lr1pb8450zipnhjz0m8h3") (f (quote (("use-mock-crust" "routing/use-mock-crust") ("generate-diagrams" "hyper"))))))

(define-public crate-safe_vault-0.13.2 (c (n "safe_vault") (v "0.13.2") (d (list (d (n "accumulator") (r "~0.5.0") (d #t) (k 0)) (d (n "config_file_handler") (r "~0.4.0") (d #t) (k 0)) (d (n "docopt") (r "~0.6.86") (d #t) (k 0)) (d (n "fs2") (r "~0.2.5") (d #t) (k 0)) (d (n "hyper") (r "~0.9.10") (o #t) (d #t) (k 1)) (d (n "itertools") (r "~0.5.9") (d #t) (k 0)) (d (n "log") (r "~0.3.6") (d #t) (k 0)) (d (n "lru_time_cache") (r "~0.5.0") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.10.0") (d #t) (k 0)) (d (n "quick-error") (r "~1.1.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.14") (d #t) (k 0)) (d (n "routing") (r "~0.28.4") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.1.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.19") (d #t) (k 0)) (d (n "tempdir") (r "~0.3.5") (d #t) (k 2)) (d (n "tiny-keccak") (r "~1.2.0") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)))) (h "032h2cdh82r04z9bn9i2sraam3msqahz1jggz0flcj271bizgznf") (f (quote (("use-mock-crust" "routing/use-mock-crust") ("generate-diagrams" "hyper"))))))

(define-public crate-safe_vault-0.14.0 (c (n "safe_vault") (v "0.14.0") (d (list (d (n "accumulator") (r "~0.5.0") (d #t) (k 0)) (d (n "clap") (r "~2.14.1") (d #t) (k 0)) (d (n "config_file_handler") (r "~0.6.0") (d #t) (k 0)) (d (n "fs2") (r "~0.2.5") (d #t) (k 0)) (d (n "hex") (r "~0.2.0") (d #t) (k 0)) (d (n "hyper") (r "~0.9.10") (o #t) (d #t) (k 1)) (d (n "itertools") (r "~0.5.9") (d #t) (k 0)) (d (n "log") (r "~0.3.7") (d #t) (k 0)) (d (n "lru_time_cache") (r "~0.5.0") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.11.2") (d #t) (k 0)) (d (n "quick-error") (r "~1.1.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.14") (d #t) (k 0)) (d (n "routing") (r "~0.28.5") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.2.0") (d #t) (k 0)) (d (n "serde") (r "~0.9.13") (d #t) (k 0)) (d (n "serde_derive") (r "~0.9.13") (d #t) (k 0)) (d (n "serde_json") (r "~0.9.9") (d #t) (k 0)) (d (n "tempdir") (r "~0.3.5") (d #t) (k 2)) (d (n "tiny-keccak") (r "~1.2.1") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)))) (h "1b6ydb7cmwk6w6bb93g42biq0njk272jk2grax2iczcc6047l5lf") (f (quote (("use-mock-crust" "routing/use-mock-crust") ("generate-diagrams" "hyper"))))))

(define-public crate-safe_vault-0.15.0 (c (n "safe_vault") (v "0.15.0") (d (list (d (n "accumulator") (r "~0.5.0") (d #t) (k 0)) (d (n "clap") (r "~2.14.1") (d #t) (k 0)) (d (n "config_file_handler") (r "~0.7.0") (d #t) (k 0)) (d (n "fake_clock") (r "~0.1.0") (d #t) (k 0)) (d (n "fs2") (r "~0.2.5") (d #t) (k 0)) (d (n "hex") (r "~0.2.0") (d #t) (k 0)) (d (n "hyper") (r "~0.9.10") (o #t) (d #t) (k 1)) (d (n "itertools") (r "~0.5.9") (d #t) (k 0)) (d (n "log") (r "~0.3.7") (d #t) (k 0)) (d (n "lru_time_cache") (r "~0.6.0") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.13.0") (d #t) (k 0)) (d (n "quick-error") (r "~1.1.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.14") (d #t) (k 0)) (d (n "routing") (r "~0.31.0") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.3.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.6") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.6") (d #t) (k 0)) (d (n "serde_json") (r "~1.0.2") (d #t) (k 0)) (d (n "tempdir") (r "~0.3.5") (d #t) (k 2)) (d (n "tiny-keccak") (r "~1.2.1") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)))) (h "1pjpxblm11940kv6wzagzxnz8jvdckk5mkgfvdyc7zpjla0pbjnw") (f (quote (("use-mock-routing" "lru_time_cache/fake_clock") ("use-mock-crypto" "routing/use-mock-crypto") ("use-mock-crust" "routing/use-mock-crust" "lru_time_cache/fake_clock") ("generate-diagrams" "hyper"))))))

(define-public crate-safe_vault-0.16.0 (c (n "safe_vault") (v "0.16.0") (d (list (d (n "accumulator") (r "~0.6.0") (d #t) (k 0)) (d (n "clap") (r "~2.25.1") (d #t) (k 0)) (d (n "config_file_handler") (r "~0.8.1") (d #t) (k 0)) (d (n "fake_clock") (r "~0.2.0") (d #t) (k 0)) (d (n "hex") (r "~0.2.0") (d #t) (k 0)) (d (n "hyper") (r "~0.9.10") (o #t) (d #t) (k 1)) (d (n "itertools") (r "~0.6.1") (d #t) (k 0)) (d (n "log") (r "~0.3.8") (d #t) (k 0)) (d (n "lru_time_cache") (r "~0.7.0") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.14.0") (d #t) (k 0)) (d (n "quick-error") (r "~1.2.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.16") (d #t) (k 0)) (d (n "routing") (r "~0.32.0") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.5.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.11") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.11") (d #t) (k 0)) (d (n "serde_json") (r "~1.0.2") (d #t) (k 0)) (d (n "tempdir") (r "~0.3.5") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.3.1") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)))) (h "1z3bwaz87zcgvw6n4qibzll1sy873zjjx5k577bp57wyrr24m56l") (f (quote (("use-mock-routing" "lru_time_cache/fake_clock") ("use-mock-crypto" "routing/use-mock-crypto") ("use-mock-crust" "routing/use-mock-crust" "lru_time_cache/fake_clock") ("generate-diagrams" "hyper"))))))

(define-public crate-safe_vault-0.16.1 (c (n "safe_vault") (v "0.16.1") (d (list (d (n "accumulator") (r "~0.6.0") (d #t) (k 0)) (d (n "clap") (r "~2.25.1") (d #t) (k 0)) (d (n "config_file_handler") (r "~0.8.1") (d #t) (k 0)) (d (n "fake_clock") (r "~0.2.0") (d #t) (k 0)) (d (n "hex") (r "~0.2.0") (d #t) (k 0)) (d (n "hyper") (r "~0.9.10") (o #t) (d #t) (k 1)) (d (n "itertools") (r "~0.6.1") (d #t) (k 0)) (d (n "log") (r "~0.3.8") (d #t) (k 0)) (d (n "lru_time_cache") (r "~0.7.0") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.14.0") (d #t) (k 0)) (d (n "quick-error") (r "~1.2.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.16") (d #t) (k 0)) (d (n "routing") (r "~0.32.1") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.5.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.11") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.11") (d #t) (k 0)) (d (n "serde_json") (r "~1.0.2") (d #t) (k 0)) (d (n "tempdir") (r "~0.3.5") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.3.1") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)))) (h "10s4j4182140zc9m0q2xzbyw5lgdawd7lpcbf35ih99av7jpdffh") (f (quote (("use-mock-routing" "lru_time_cache/fake_clock") ("use-mock-crypto" "routing/use-mock-crypto") ("use-mock-crust" "routing/use-mock-crust" "lru_time_cache/fake_clock") ("generate-diagrams" "hyper"))))))

(define-public crate-safe_vault-0.16.2 (c (n "safe_vault") (v "0.16.2") (d (list (d (n "accumulator") (r "~0.6.0") (d #t) (k 0)) (d (n "clap") (r "~2.25.1") (d #t) (k 0)) (d (n "config_file_handler") (r "~0.8.1") (d #t) (k 0)) (d (n "fake_clock") (r "~0.2.0") (d #t) (k 0)) (d (n "hex") (r "~0.2.0") (d #t) (k 0)) (d (n "hyper") (r "~0.9.10") (o #t) (d #t) (k 1)) (d (n "itertools") (r "~0.6.1") (d #t) (k 0)) (d (n "log") (r "~0.3.8") (d #t) (k 0)) (d (n "lru_time_cache") (r "~0.7.0") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.14.0") (d #t) (k 0)) (d (n "quick-error") (r "~1.2.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.16") (d #t) (k 0)) (d (n "routing") (r "~0.32.2") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.5.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.11") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.11") (d #t) (k 0)) (d (n "serde_json") (r "~1.0.2") (d #t) (k 0)) (d (n "tempdir") (r "~0.3.5") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.3.1") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)))) (h "19ggav1i9xvcb3fjlwvnml44sa64qq5wny9bcwyqpi0qr5hikkx3") (f (quote (("use-mock-routing" "lru_time_cache/fake_clock") ("use-mock-crypto" "routing/use-mock-crypto") ("use-mock-crust" "routing/use-mock-crust" "lru_time_cache/fake_clock") ("generate-diagrams" "hyper"))))))

(define-public crate-safe_vault-0.17.0 (c (n "safe_vault") (v "0.17.0") (d (list (d (n "accumulator") (r "~0.6.0") (d #t) (k 0)) (d (n "clap") (r "~2.25.1") (d #t) (k 0)) (d (n "config_file_handler") (r "~0.8.1") (d #t) (k 0)) (d (n "fake_clock") (r "~0.2.0") (d #t) (k 0)) (d (n "hex") (r "~0.2.0") (d #t) (k 0)) (d (n "hyper") (r "~0.9.10") (o #t) (d #t) (k 1)) (d (n "itertools") (r "~0.6.1") (d #t) (k 0)) (d (n "log") (r "~0.3.8") (d #t) (k 0)) (d (n "lru_time_cache") (r "~0.7.0") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.14.0") (d #t) (k 0)) (d (n "quick-error") (r "~1.2.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.16") (d #t) (k 0)) (d (n "routing") (r "~0.33.0") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.5.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.11") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.11") (d #t) (k 0)) (d (n "serde_json") (r "~1.0.2") (d #t) (k 0)) (d (n "tempdir") (r "~0.3.5") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.3.1") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)))) (h "11hw60mr8vf7l5v2z4fbirvk8pzy5hqrpxzzwqs31k7f1ch4bc5n") (f (quote (("use-mock-routing" "lru_time_cache/fake_clock") ("use-mock-crypto" "routing/use-mock-crypto") ("use-mock-crust" "routing/use-mock-crust" "lru_time_cache/fake_clock") ("generate-diagrams" "hyper"))))))

(define-public crate-safe_vault-0.17.1 (c (n "safe_vault") (v "0.17.1") (d (list (d (n "accumulator") (r "~0.6.0") (d #t) (k 0)) (d (n "clap") (r "~2.25.1") (d #t) (k 0)) (d (n "config_file_handler") (r "~0.8.1") (d #t) (k 0)) (d (n "fake_clock") (r "~0.2.0") (d #t) (k 0)) (d (n "hex") (r "~0.2.0") (d #t) (k 0)) (d (n "hyper") (r "~0.9.10") (o #t) (d #t) (k 1)) (d (n "itertools") (r "~0.6.1") (d #t) (k 0)) (d (n "log") (r "~0.3.8") (d #t) (k 0)) (d (n "lru_time_cache") (r "~0.7.0") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.14.0") (d #t) (k 0)) (d (n "quick-error") (r "~1.2.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.16") (d #t) (k 0)) (d (n "routing") (r "~0.33.1") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.5.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.11") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.11") (d #t) (k 0)) (d (n "serde_json") (r "~1.0.2") (d #t) (k 0)) (d (n "tempdir") (r "~0.3.5") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.3.1") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)))) (h "1bdrr4nny52k38sh49kwfmzphywalil20gbc36qvy1y4s7fv4rlj") (f (quote (("use-mock-routing" "lru_time_cache/fake_clock") ("use-mock-crypto" "routing/use-mock-crypto") ("use-mock-crust" "routing/use-mock-crust" "lru_time_cache/fake_clock") ("generate-diagrams" "hyper"))))))

(define-public crate-safe_vault-0.17.2 (c (n "safe_vault") (v "0.17.2") (d (list (d (n "accumulator") (r "~0.6.0") (d #t) (k 0)) (d (n "clap") (r "~2.25.1") (d #t) (k 0)) (d (n "config_file_handler") (r "~0.8.2") (d #t) (k 0)) (d (n "fake_clock") (r "~0.2.0") (d #t) (k 0)) (d (n "hex") (r "~0.2.0") (d #t) (k 0)) (d (n "hyper") (r "~0.9.10") (o #t) (d #t) (k 1)) (d (n "itertools") (r "~0.6.1") (d #t) (k 0)) (d (n "log") (r "~0.3.8") (d #t) (k 0)) (d (n "lru_time_cache") (r "~0.7.0") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.14.1") (d #t) (k 0)) (d (n "quick-error") (r "~1.2.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.16") (d #t) (k 0)) (d (n "routing") (r "~0.33.2") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.5.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.11") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.11") (d #t) (k 0)) (d (n "serde_json") (r "~1.0.2") (d #t) (k 0)) (d (n "tempdir") (r "~0.3.5") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.3.1") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)))) (h "03nsl1wxwa9silki36h0ylw1s9viw36z8s7fzjw9xnnpwkacfnp8") (f (quote (("use-mock-routing" "lru_time_cache/fake_clock") ("use-mock-crypto" "routing/use-mock-crypto") ("use-mock-crust" "routing/use-mock-crust" "lru_time_cache/fake_clock") ("generate-diagrams" "hyper"))))))

(define-public crate-safe_vault-0.18.0 (c (n "safe_vault") (v "0.18.0") (d (list (d (n "accumulator") (r "~0.7.0") (d #t) (k 0)) (d (n "clap") (r "~2.25.1") (d #t) (k 0)) (d (n "config_file_handler") (r "~0.9.0") (d #t) (k 0)) (d (n "fake_clock") (r "~0.2.0") (d #t) (k 0)) (d (n "hex") (r "~0.2.0") (d #t) (k 0)) (d (n "hyper") (r "~0.9.10") (o #t) (d #t) (k 1)) (d (n "itertools") (r "~0.6.1") (d #t) (k 0)) (d (n "log") (r "~0.3.8") (d #t) (k 0)) (d (n "lru_time_cache") (r "~0.7.0") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.15.0") (d #t) (k 0)) (d (n "quick-error") (r "~1.2.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.16") (d #t) (k 0)) (d (n "routing") (r "~0.35.0") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.7.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.25") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.25") (d #t) (k 0)) (d (n "serde_json") (r "~1.0.8") (d #t) (k 0)) (d (n "tempdir") (r "~0.3.5") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.3.1") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)))) (h "16xkm3l8944n9yyzvx3v8wvdccvlbv8mmm4r8wxn5g853grz96hn") (f (quote (("use-mock-routing" "lru_time_cache/fake_clock") ("use-mock-crypto" "routing/use-mock-crypto") ("use-mock-crust" "routing/use-mock-crust" "lru_time_cache/fake_clock") ("generate-diagrams" "hyper"))))))

(define-public crate-safe_vault-0.19.0 (c (n "safe_vault") (v "0.19.0") (d (list (d (n "base64") (r "~0.10.1") (d #t) (k 0)) (d (n "bincode") (r "= 1.1.4") (d #t) (k 0)) (d (n "bytes") (r "~0.4.12") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "~0.3.8") (d #t) (k 0)) (d (n "ctrlc") (r "~3.1.3") (d #t) (k 0)) (d (n "directories") (r "~2.0.1") (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (d #t) (k 0)) (d (n "fxhash") (r "~0.2.1") (o #t) (d #t) (k 0)) (d (n "hex") (r "~0.3.2") (d #t) (k 0)) (d (n "hex_fmt") (r "~0.3.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "~1.3.0") (d #t) (k 0)) (d (n "log") (r "~0.4.7") (d #t) (k 0)) (d (n "maplit") (r "~1.0.1") (d #t) (k 2)) (d (n "pickledb") (r "~0.4.0") (d #t) (k 0)) (d (n "quic-p2p") (r "~0.2.1") (o #t) (d #t) (k 0)) (d (n "quick-error") (r "~1.2.2") (d #t) (k 0)) (d (n "rand") (r "~0.6.5") (d #t) (k 0)) (d (n "rand_chacha") (r "~0.1.1") (d #t) (k 2)) (d (n "safe-nd") (r "~0.3.1") (d #t) (k 0)) (d (n "self_update") (r "^0.5.1") (d #t) (k 0)) (d (n "serde") (r "~1.0.97") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "~1.0.40") (d #t) (k 0)) (d (n "structopt") (r "~0.2.18") (d #t) (k 0)) (d (n "tempdir") (r "~0.3.7") (d #t) (k 2)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.1") (d #t) (k 0)))) (h "0jcp0aw9ffw5qshdwz3dag4q3j73iimr0jq3ar6r1dr2r6xwd15h") (f (quote (("mock" "fxhash" "hex_fmt") ("default" "quic-p2p"))))))

(define-public crate-safe_vault-0.19.1 (c (n "safe_vault") (v "0.19.1") (d (list (d (n "base64") (r "~0.10.1") (d #t) (k 0)) (d (n "bincode") (r "= 1.1.4") (d #t) (k 0)) (d (n "bytes") (r "~0.4.12") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "~0.3.8") (d #t) (k 0)) (d (n "ctrlc") (r "~3.1.3") (d #t) (k 0)) (d (n "directories") (r "~2.0.1") (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (d #t) (k 0)) (d (n "fxhash") (r "~0.2.1") (o #t) (d #t) (k 0)) (d (n "hex") (r "~0.3.2") (d #t) (k 0)) (d (n "hex_fmt") (r "~0.3.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "~1.3.0") (d #t) (k 0)) (d (n "log") (r "~0.4.7") (d #t) (k 0)) (d (n "maplit") (r "~1.0.1") (d #t) (k 2)) (d (n "pickledb") (r "~0.4.0") (d #t) (k 0)) (d (n "quic-p2p") (r "~0.2.1") (o #t) (d #t) (k 0)) (d (n "quick-error") (r "~1.2.2") (d #t) (k 0)) (d (n "rand") (r "~0.6.5") (d #t) (k 0)) (d (n "rand_chacha") (r "~0.1.1") (d #t) (k 2)) (d (n "safe-nd") (r "~0.3.1") (d #t) (k 0)) (d (n "self_update") (r "^0.5.1") (d #t) (k 0)) (d (n "serde") (r "~1.0.97") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "~1.0.40") (d #t) (k 0)) (d (n "structopt") (r "~0.2.18") (d #t) (k 0)) (d (n "tempdir") (r "~0.3.7") (d #t) (k 2)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.1") (d #t) (k 0)))) (h "0hlfh7vikly7mly3pppa92c708mdi91w0yl9k9ya3xxwnwwnn9d0") (f (quote (("mock" "fxhash" "hex_fmt") ("default" "quic-p2p"))))))

(define-public crate-safe_vault-0.19.2 (c (n "safe_vault") (v "0.19.2") (d (list (d (n "base64") (r "~0.10.1") (d #t) (k 0)) (d (n "bincode") (r "= 1.1.4") (d #t) (k 0)) (d (n "bytes") (r "~0.4.12") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "~0.3.8") (d #t) (k 0)) (d (n "ctrlc") (r "~3.1.3") (d #t) (k 0)) (d (n "directories") (r "~2.0.1") (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (d #t) (k 0)) (d (n "fxhash") (r "~0.2.1") (o #t) (d #t) (k 0)) (d (n "hex") (r "~0.3.2") (d #t) (k 0)) (d (n "hex_fmt") (r "~0.3.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "~1.3.0") (d #t) (k 0)) (d (n "log") (r "~0.4.7") (d #t) (k 0)) (d (n "maplit") (r "~1.0.1") (d #t) (k 2)) (d (n "pickledb") (r "~0.4.0") (d #t) (k 0)) (d (n "quic-p2p") (r "~0.2.1") (o #t) (d #t) (k 0)) (d (n "quick-error") (r "~1.2.2") (d #t) (k 0)) (d (n "rand") (r "~0.6.5") (d #t) (k 0)) (d (n "rand_chacha") (r "~0.1.1") (d #t) (k 2)) (d (n "safe-nd") (r "~0.3.1") (d #t) (k 0)) (d (n "self_update") (r "^0.5.1") (d #t) (k 0)) (d (n "serde") (r "~1.0.97") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "~1.0.40") (d #t) (k 0)) (d (n "structopt") (r "~0.2.18") (d #t) (k 0)) (d (n "tempdir") (r "~0.3.7") (d #t) (k 2)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.1") (d #t) (k 0)))) (h "18w4h0w8b95ir9z7g9iyrkcdc3axmvlghf7fsnljmd08m4chjryc") (f (quote (("mock" "fxhash" "hex_fmt") ("default" "quic-p2p"))))))

(define-public crate-safe_vault-0.20.0 (c (n "safe_vault") (v "0.20.0") (d (list (d (n "base64") (r "~0.10.1") (d #t) (k 0)) (d (n "bincode") (r "= 1.1.4") (d #t) (k 0)) (d (n "bytes") (r "~0.4.12") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "~0.3.8") (d #t) (k 0)) (d (n "ctrlc") (r "~3.1.3") (d #t) (k 0)) (d (n "directories") (r "~2.0.1") (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (d #t) (k 0)) (d (n "fxhash") (r "~0.2.1") (o #t) (d #t) (k 0)) (d (n "hex") (r "~0.3.2") (d #t) (k 0)) (d (n "hex_fmt") (r "~0.3.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "~1.3.0") (d #t) (k 0)) (d (n "log") (r "~0.4.7") (d #t) (k 0)) (d (n "maplit") (r "~1.0.1") (d #t) (k 2)) (d (n "pickledb") (r "~0.4.0") (d #t) (k 0)) (d (n "quic-p2p") (r "~0.2.1") (o #t) (d #t) (k 0)) (d (n "quick-error") (r "~1.2.2") (d #t) (k 0)) (d (n "rand") (r "~0.6.5") (d #t) (k 0)) (d (n "rand_chacha") (r "~0.1.1") (d #t) (k 2)) (d (n "safe-nd") (r "~0.4.0") (d #t) (k 0)) (d (n "self_update") (r "^0.5.1") (d #t) (k 0)) (d (n "serde") (r "~1.0.97") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "~1.0.40") (d #t) (k 0)) (d (n "structopt") (r "~0.2.18") (d #t) (k 0)) (d (n "tempdir") (r "~0.3.7") (d #t) (k 2)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.1") (d #t) (k 0)))) (h "0gisbyzd88f8z7x44s8ajdhdndz7slar8vlbk8xq22y1n7vk8ak6") (f (quote (("mock" "fxhash" "hex_fmt") ("default" "quic-p2p"))))))

(define-public crate-safe_vault-0.20.1 (c (n "safe_vault") (v "0.20.1") (d (list (d (n "base64") (r "~0.10.1") (d #t) (k 0)) (d (n "bincode") (r "= 1.1.4") (d #t) (k 0)) (d (n "bytes") (r "~0.4.12") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "~0.3.8") (d #t) (k 0)) (d (n "ctrlc") (r "~3.1.3") (d #t) (k 0)) (d (n "directories") (r "~2.0.1") (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (d #t) (k 0)) (d (n "fxhash") (r "~0.2.1") (o #t) (d #t) (k 0)) (d (n "hex") (r "~0.3.2") (d #t) (k 0)) (d (n "hex_fmt") (r "~0.3.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "~1.3.0") (d #t) (k 0)) (d (n "log") (r "~0.4.7") (d #t) (k 0)) (d (n "maplit") (r "~1.0.1") (d #t) (k 2)) (d (n "pickledb") (r "~0.4.0") (d #t) (k 0)) (d (n "quic-p2p") (r "~0.2.1") (o #t) (d #t) (k 0)) (d (n "quick-error") (r "~1.2.2") (d #t) (k 0)) (d (n "rand") (r "~0.6.5") (d #t) (k 0)) (d (n "rand_chacha") (r "~0.1.1") (d #t) (k 2)) (d (n "safe-nd") (r "~0.4.0") (d #t) (k 0)) (d (n "self_update") (r "^0.5.1") (d #t) (k 0)) (d (n "serde") (r "~1.0.97") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "~1.0.40") (d #t) (k 0)) (d (n "structopt") (r "~0.2.18") (d #t) (k 0)) (d (n "tempdir") (r "~0.3.7") (d #t) (k 2)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.1") (d #t) (k 0)))) (h "089bwjp5gmxzqw1ff46g6pw3q35qwyiddfpwi3iicvsdvdiyg6pn") (f (quote (("mock" "fxhash" "hex_fmt") ("default" "quic-p2p"))))))

(define-public crate-safe_vault-0.20.2 (c (n "safe_vault") (v "0.20.2") (d (list (d (n "base64") (r "~0.10.1") (d #t) (k 0)) (d (n "bincode") (r "=1.1.4") (d #t) (k 0)) (d (n "bytes") (r "~0.4.12") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "~0.3.8") (d #t) (k 0)) (d (n "ctrlc") (r "~3.1.3") (d #t) (k 0)) (d (n "directories") (r "~2.0.1") (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (d #t) (k 0)) (d (n "fxhash") (r "~0.2.1") (o #t) (d #t) (k 0)) (d (n "hex") (r "~0.3.2") (d #t) (k 0)) (d (n "hex_fmt") (r "~0.3.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "~1.3.0") (d #t) (k 0)) (d (n "log") (r "~0.4.7") (d #t) (k 0)) (d (n "maplit") (r "~1.0.1") (d #t) (k 2)) (d (n "pickledb") (r "~0.4.0") (d #t) (k 0)) (d (n "quic-p2p") (r "~0.2.1") (o #t) (d #t) (k 0)) (d (n "quick-error") (r "~1.2.2") (d #t) (k 0)) (d (n "rand") (r "~0.6.5") (d #t) (k 0)) (d (n "rand_chacha") (r "~0.1.1") (d #t) (k 2)) (d (n "safe-nd") (r "~0.4.0") (d #t) (k 0)) (d (n "self_update") (r "^0.5.1") (d #t) (k 0)) (d (n "serde") (r "~1.0.97") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "~1.0.40") (d #t) (k 0)) (d (n "structopt") (r "~0.2.18") (d #t) (k 0)) (d (n "tempdir") (r "~0.3.7") (d #t) (k 2)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.1") (d #t) (k 0)))) (h "0p9bivd17zxh9i31qc0hdih4y2vmnxinbc4g2xqqxxx4x349cny1") (f (quote (("mock" "fxhash" "hex_fmt") ("default" "quic-p2p"))))))

