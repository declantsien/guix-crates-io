(define-module (crates-io sa fe safe_core) #:use-module (crates-io))

(define-public crate-safe_core-0.3.0 (c (n "safe_core") (v "0.3.0") (d (list (d (n "cbor") (r "*") (d #t) (k 0)) (d (n "env_logger") (r "*") (d #t) (k 2)) (d (n "log") (r "*") (d #t) (k 0)) (d (n "lru_time_cache") (r "0.2.*") (d #t) (k 0)) (d (n "rand") (r "*") (d #t) (k 0)) (d (n "routing") (r "0.4.*") (d #t) (k 0)) (d (n "rustc-serialize") (r "*") (d #t) (k 0)) (d (n "self_encryption") (r "0.2.*") (d #t) (k 0)) (d (n "sodiumoxide") (r "*") (d #t) (k 0)))) (h "0z0c1h4zpznjrkgi1grzcvaygk9l59csqvdvkisvplswsyx9qyxh") (f (quote (("use-mock-routing"))))))

(define-public crate-safe_core-0.3.1 (c (n "safe_core") (v "0.3.1") (d (list (d (n "cbor") (r "~0.3.16") (d #t) (k 0)) (d (n "env_logger") (r "~0.3.2") (d #t) (k 2)) (d (n "log") (r "~0.3.3") (d #t) (k 0)) (d (n "lru_time_cache") (r "~0.2.4") (d #t) (k 0)) (d (n "rand") (r "~0.3.12") (d #t) (k 0)) (d (n "routing") (r "~0.4.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.16") (d #t) (k 0)) (d (n "self_encryption") (r "~0.2.4") (d #t) (k 0)) (d (n "sodiumoxide") (r "~0.0.9") (d #t) (k 0)))) (h "0s0fn161yvyjdzi0c95sddx57ckdqfi87dwpw6qjrbd5r39cyxig") (f (quote (("use-mock-routing"))))))

(define-public crate-safe_core-0.4.0 (c (n "safe_core") (v "0.4.0") (d (list (d (n "log") (r "~0.3.4") (d #t) (k 0)) (d (n "lru_time_cache") (r "~0.2.5") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.1.5") (d #t) (k 0)) (d (n "rand") (r "~0.3.12") (d #t) (k 0)) (d (n "routing") (r "~0.5.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3.16") (d #t) (k 0)) (d (n "self_encryption") (r "~0.2.5") (d #t) (k 0)) (d (n "sodiumoxide") (r "~0.0.9") (d #t) (k 0)) (d (n "xor_name") (r "~0.0.1") (d #t) (k 0)))) (h "0mglq9g580lwk6060szm6ixdh79w7mkq5kl8kq6lfc8bnvw2p9bw") (f (quote (("use-mock-routing"))))))

(define-public crate-safe_core-0.5.0 (c (n "safe_core") (v "0.5.0") (d (list (d (n "log") (r "~0.3.4") (d #t) (k 0)) (d (n "lru_time_cache") (r "~0.2.5") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.1.5") (d #t) (k 0)) (d (n "rand") (r "~0.3.12") (d #t) (k 0)) (d (n "routing") (r "~0.6.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.16") (d #t) (k 0)) (d (n "self_encryption") (r "~0.2.5") (d #t) (k 0)) (d (n "sodiumoxide") (r "~0.0.9") (d #t) (k 0)) (d (n "xor_name") (r "~0.0.1") (d #t) (k 0)))) (h "0xd3s5bsjyxkb7cqawxq72yi99msqm0id77lki6d72cl3z8vrzww") (f (quote (("use-mock-routing"))))))

(define-public crate-safe_core-0.6.0 (c (n "safe_core") (v "0.6.0") (d (list (d (n "clippy") (r "~0.0.44") (o #t) (d #t) (k 0)) (d (n "log") (r "~0.3.5") (d #t) (k 0)) (d (n "lru_time_cache") (r "~0.2.6") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.2.0") (d #t) (k 0)) (d (n "mpid_messaging") (r "~0.1.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.14") (d #t) (k 0)) (d (n "routing") (r "~0.7.0") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.18") (d #t) (k 0)) (d (n "self_encryption") (r "~0.2.5") (d #t) (k 0)) (d (n "sodiumoxide") (r "~0.0.9") (d #t) (k 0)) (d (n "xor_name") (r "~0.0.4") (d #t) (k 0)))) (h "1vc1f9hal2nrg6i3cdzh7s0npw6i070s26vgq2wsdqb5i5x05idx") (f (quote (("use-mock-routing"))))))

(define-public crate-safe_core-0.6.1 (c (n "safe_core") (v "0.6.1") (d (list (d (n "clippy") (r "~0.0.44") (o #t) (d #t) (k 0)) (d (n "log") (r "~0.3.5") (d #t) (k 0)) (d (n "lru_time_cache") (r "~0.2.6") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.2.0") (d #t) (k 0)) (d (n "mpid_messaging") (r "~0.1.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.14") (d #t) (k 0)) (d (n "routing") (r "~0.7.0") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.18") (d #t) (k 0)) (d (n "self_encryption") (r "~0.2.6") (d #t) (k 0)) (d (n "sodiumoxide") (r "~0.0.9") (d #t) (k 0)) (d (n "xor_name") (r "~0.0.4") (d #t) (k 0)))) (h "00xy9jqhss3ign17n0iig3dp7flh4vpxdivhkzfycfcdlngm5jyv") (f (quote (("use-mock-routing"))))))

(define-public crate-safe_core-0.7.0 (c (n "safe_core") (v "0.7.0") (d (list (d (n "clippy") (r "~0.0.44") (o #t) (d #t) (k 0)) (d (n "log") (r "~0.3.5") (d #t) (k 0)) (d (n "lru_time_cache") (r "~0.2.6") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.2.0") (d #t) (k 0)) (d (n "mpid_messaging") (r "~0.1.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.14") (d #t) (k 0)) (d (n "routing") (r "~0.8.0") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.18") (d #t) (k 0)) (d (n "self_encryption") (r "~0.2.6") (d #t) (k 0)) (d (n "sodiumoxide") (r "~0.0.9") (d #t) (k 0)) (d (n "xor_name") (r "~0.0.4") (d #t) (k 0)))) (h "0wkwm12ncbh929a0fm6c5sfbxnnnydsicdiqd9pb92a9ak6idjwz") (f (quote (("use-mock-routing"))))))

(define-public crate-safe_core-0.8.0 (c (n "safe_core") (v "0.8.0") (d (list (d (n "clippy") (r "~0.0.44") (o #t) (d #t) (k 0)) (d (n "log") (r "~0.3.5") (d #t) (k 0)) (d (n "lru_time_cache") (r "~0.2.6") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.3.0") (d #t) (k 0)) (d (n "mpid_messaging") (r "~0.1.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.14") (d #t) (k 0)) (d (n "regex") (r "~0.1.55") (d #t) (k 2)) (d (n "routing") (r "~0.9.0") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.18") (d #t) (k 0)) (d (n "self_encryption") (r "~0.2.6") (d #t) (k 0)) (d (n "sodiumoxide") (r "~0.0.9") (d #t) (k 0)) (d (n "time") (r "~0.1.34") (d #t) (k 0)) (d (n "xor_name") (r "~0.0.4") (d #t) (k 0)))) (h "1vri4xx6s9354b7xzlp5803s6pzvb5ckywq8ldd3rxj8a5g4pxqi") (f (quote (("use-mock-routing"))))))

(define-public crate-safe_core-0.9.0 (c (n "safe_core") (v "0.9.0") (d (list (d (n "clippy") (r "~0.0.46") (o #t) (d #t) (k 0)) (d (n "log") (r "~0.3.5") (d #t) (k 0)) (d (n "lru_time_cache") (r "~0.2.7") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.4.0") (d #t) (k 0)) (d (n "mpid_messaging") (r "~0.2.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.14") (d #t) (k 0)) (d (n "regex") (r "~0.1.55") (d #t) (k 2)) (d (n "routing") (r "~0.11.0") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.18") (d #t) (k 0)) (d (n "self_encryption") (r "~0.3.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "~0.0.9") (d #t) (k 0)) (d (n "time") (r "~0.1.34") (d #t) (k 0)) (d (n "xor_name") (r "~0.1.0") (d #t) (k 0)))) (h "0l1vfykgb9fq1x2ps7w9ad916dnb5dkrsycc7v2qqk84gb265czq") (f (quote (("use-mock-routing"))))))

(define-public crate-safe_core-0.10.0 (c (n "safe_core") (v "0.10.0") (d (list (d (n "clippy") (r "~0.0.48") (o #t) (d #t) (k 0)) (d (n "log") (r "~0.3.5") (d #t) (k 0)) (d (n "lru_time_cache") (r "~0.2.7") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.4.0") (d #t) (k 0)) (d (n "mpid_messaging") (r "~0.2.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.14") (d #t) (k 0)) (d (n "regex") (r "~0.1.55") (d #t) (k 2)) (d (n "routing") (r "~0.11.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.18") (d #t) (k 0)) (d (n "self_encryption") (r "~0.3.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "~0.0.9") (d #t) (k 0)) (d (n "time") (r "~0.1.34") (d #t) (k 0)) (d (n "xor_name") (r "~0.1.0") (d #t) (k 0)))) (h "11807vvw5rrkbmj1c4ffv63rc4d3w257qaxw3rxrdnflw4i554v9") (f (quote (("use-mock-routing"))))))

(define-public crate-safe_core-0.11.0 (c (n "safe_core") (v "0.11.0") (d (list (d (n "clippy") (r "~0.0.49") (o #t) (d #t) (k 0)) (d (n "log") (r "~0.3.5") (d #t) (k 0)) (d (n "lru_time_cache") (r "~0.2.7") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.4.0") (d #t) (k 0)) (d (n "mpid_messaging") (r "~0.2.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.14") (d #t) (k 0)) (d (n "regex") (r "~0.1.55") (d #t) (k 2)) (d (n "routing") (r "~0.11.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.18") (d #t) (k 0)) (d (n "self_encryption") (r "~0.3.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "~0.0.9") (d #t) (k 0)) (d (n "time") (r "~0.1.34") (d #t) (k 0)) (d (n "xor_name") (r "~0.1.0") (d #t) (k 0)))) (h "0vb64i0l83q15y8hbw0p2svjm8bp5nxmjd0284fdpyjyhck3jsvd") (f (quote (("use-mock-routing"))))))

(define-public crate-safe_core-0.12.0 (c (n "safe_core") (v "0.12.0") (d (list (d (n "clippy") (r "~0.0.49") (o #t) (d #t) (k 0)) (d (n "docopt") (r "~0.6.78") (d #t) (k 2)) (d (n "log") (r "~0.3.5") (d #t) (k 0)) (d (n "lru_time_cache") (r "~0.2.7") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.4.0") (d #t) (k 0)) (d (n "mpid_messaging") (r "~0.2.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.14") (d #t) (k 0)) (d (n "regex") (r "~0.1.55") (d #t) (k 2)) (d (n "routing") (r "~0.11.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.18") (d #t) (k 0)) (d (n "safe_network_common") (r "~0.0.1") (d #t) (k 0)) (d (n "self_encryption") (r "~0.3.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "~0.0.9") (d #t) (k 0)) (d (n "time") (r "~0.1.34") (d #t) (k 0)) (d (n "xor_name") (r "~0.1.0") (d #t) (k 0)))) (h "1lrckwihwnng8q4aj505cx6qjlmq4jbsiypappfj2715qcahvili") (f (quote (("use-mock-routing")))) (y #t)))

(define-public crate-safe_core-0.12.1 (c (n "safe_core") (v "0.12.1") (d (list (d (n "clippy") (r "~0.0.54") (o #t) (d #t) (k 0)) (d (n "docopt") (r "~0.6.78") (d #t) (k 2)) (d (n "log") (r "~0.3.5") (d #t) (k 0)) (d (n "lru_time_cache") (r "~0.2.7") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.4.1") (d #t) (k 0)) (d (n "rand") (r "~0.3.14") (d #t) (k 0)) (d (n "regex") (r "~0.1.55") (d #t) (k 2)) (d (n "routing") (r "~0.11.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.18") (d #t) (k 0)) (d (n "safe_network_common") (r "~0.0.1") (d #t) (k 0)) (d (n "self_encryption") (r "~0.3.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "~0.0.9") (d #t) (k 0)) (d (n "time") (r "~0.1.34") (d #t) (k 0)) (d (n "xor_name") (r "~0.1.0") (d #t) (k 0)))) (h "03sy9y1zibb6ik9388s65iyg1z0fv1bmxmfzfxp2zpv83sq2mlgr") (f (quote (("use-mock-routing"))))))

(define-public crate-safe_core-0.13.0 (c (n "safe_core") (v "0.13.0") (d (list (d (n "clippy") (r "~0.0.59") (o #t) (d #t) (k 0)) (d (n "docopt") (r "~0.6.78") (d #t) (k 2)) (d (n "log") (r "~0.3.5") (d #t) (k 0)) (d (n "lru_time_cache") (r "~0.2.7") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.5.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.14") (d #t) (k 0)) (d (n "regex") (r "~0.1.61") (d #t) (k 2)) (d (n "routing") (r "~0.12.0") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.18") (d #t) (k 0)) (d (n "safe_network_common") (r "~0.0.1") (d #t) (k 0)) (d (n "self_encryption") (r "~0.3.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "~0.0.9") (d #t) (k 0)) (d (n "time") (r "~0.1.34") (d #t) (k 0)) (d (n "xor_name") (r "~0.1.0") (d #t) (k 0)))) (h "09wz0ny56qnmw9mv4skmm695l3l2daag17p8fmclnnsr4z3qbcb3") (f (quote (("use-mock-routing") ("use-mock-crust" "routing/use-mock-crust"))))))

(define-public crate-safe_core-0.13.1 (c (n "safe_core") (v "0.13.1") (d (list (d (n "clippy") (r "~0.0.59") (o #t) (d #t) (k 0)) (d (n "docopt") (r "~0.6.78") (d #t) (k 2)) (d (n "log") (r "~0.3.5") (d #t) (k 0)) (d (n "lru_time_cache") (r "~0.2.7") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.5.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.14") (d #t) (k 0)) (d (n "regex") (r "~0.1.61") (d #t) (k 2)) (d (n "routing") (r "~0.12.0") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.18") (d #t) (k 0)) (d (n "safe_network_common") (r "~0.1.1") (d #t) (k 0)) (d (n "self_encryption") (r "~0.3.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "~0.0.9") (d #t) (k 0)) (d (n "time") (r "~0.1.34") (d #t) (k 0)) (d (n "xor_name") (r "~0.1.0") (d #t) (k 0)))) (h "14rqnxrj1n6sar24i3ld88g26iv5m4mvids92q2fsp4ciac7cx2j") (f (quote (("use-mock-routing") ("use-mock-crust" "routing/use-mock-crust"))))))

(define-public crate-safe_core-0.14.0 (c (n "safe_core") (v "0.14.0") (d (list (d (n "clippy") (r "~0.0.62") (o #t) (d #t) (k 0)) (d (n "docopt") (r "~0.6.78") (d #t) (k 2)) (d (n "log") (r "~0.3.6") (d #t) (k 0)) (d (n "lru_time_cache") (r "~0.2.7") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.5.1") (d #t) (k 0)) (d (n "rand") (r "~0.3.14") (d #t) (k 0)) (d (n "regex") (r "~0.1.61") (d #t) (k 2)) (d (n "routing") (r "~0.13.0") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.19") (d #t) (k 0)) (d (n "safe_network_common") (r "~0.1.1") (d #t) (k 0)) (d (n "self_encryption") (r "~0.3.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "~0.0.10") (d #t) (k 0)) (d (n "time") (r "~0.1.35") (d #t) (k 0)) (d (n "xor_name") (r "~0.1.0") (d #t) (k 0)))) (h "127djy59j5rnk0fnnnpkrgjm36y4kh72yj769jbhblv9wzq71d6m") (f (quote (("use-mock-routing") ("use-mock-crust" "routing/use-mock-crust"))))))

(define-public crate-safe_core-0.14.1 (c (n "safe_core") (v "0.14.1") (d (list (d (n "clippy") (r "~0.0.63") (o #t) (d #t) (k 0)) (d (n "docopt") (r "~0.6.80") (d #t) (k 2)) (d (n "log") (r "~0.3.6") (d #t) (k 0)) (d (n "lru_time_cache") (r "~0.2.7") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.5.1") (d #t) (k 0)) (d (n "rand") (r "~0.3.14") (d #t) (k 0)) (d (n "regex") (r "~0.1.65") (d #t) (k 2)) (d (n "routing") (r "~0.14.0") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.19") (d #t) (k 0)) (d (n "safe_network_common") (r "~0.1.1") (d #t) (k 0)) (d (n "self_encryption") (r "~0.3.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "~0.0.10") (d #t) (k 0)) (d (n "time") (r "~0.1.35") (d #t) (k 0)) (d (n "xor_name") (r "~0.1.0") (d #t) (k 0)))) (h "0d8nx41jj96p5zp72w2lbxw64las34ifcqg88vqidjqbrdrap5f8") (f (quote (("use-mock-routing") ("use-mock-crust" "routing/use-mock-crust"))))))

(define-public crate-safe_core-0.14.2 (c (n "safe_core") (v "0.14.2") (d (list (d (n "clippy") (r "~0.0.63") (o #t) (d #t) (k 0)) (d (n "docopt") (r "~0.6.80") (d #t) (k 2)) (d (n "log") (r "~0.3.6") (d #t) (k 0)) (d (n "lru_time_cache") (r "~0.2.7") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.5.1") (d #t) (k 0)) (d (n "rand") (r "~0.3.14") (d #t) (k 0)) (d (n "regex") (r "~0.1.65") (d #t) (k 2)) (d (n "routing") (r "~0.15.0") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.19") (d #t) (k 0)) (d (n "safe_network_common") (r "~0.1.1") (d #t) (k 0)) (d (n "self_encryption") (r "~0.3.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "~0.0.10") (d #t) (k 0)) (d (n "time") (r "~0.1.35") (d #t) (k 0)) (d (n "xor_name") (r "~0.1.0") (d #t) (k 0)))) (h "011rsv6vwn2vfik4p6iacg96jw0zw9qiykw8yk5biffd9qjxn6x2") (f (quote (("use-mock-routing"))))))

(define-public crate-safe_core-0.14.3 (c (n "safe_core") (v "0.14.3") (d (list (d (n "bincode") (r "~0.5.4") (d #t) (k 0)) (d (n "clippy") (r "~0.0.63") (o #t) (d #t) (k 0)) (d (n "docopt") (r "~0.6.80") (d #t) (k 2)) (d (n "log") (r "~0.3.6") (d #t) (k 0)) (d (n "lru_time_cache") (r "~0.3.0") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.5.3") (d #t) (k 0)) (d (n "rand") (r "~0.3.14") (d #t) (k 0)) (d (n "regex") (r "~0.1.66") (d #t) (k 2)) (d (n "routing") (r "~0.16.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.19") (d #t) (k 0)) (d (n "safe_network_common") (r "~0.1.1") (d #t) (k 0)) (d (n "self_encryption") (r "~0.3.1") (d #t) (k 0)) (d (n "sodiumoxide") (r "~0.0.10") (d #t) (k 0)) (d (n "time") (r "~0.1.35") (d #t) (k 0)) (d (n "xor_name") (r "~0.1.0") (d #t) (k 0)))) (h "0zc6jzix49hx8hh3csqmwjczdd9x19078gd2zw3v7gs7z86i6i9j") (f (quote (("use-mock-routing"))))))

(define-public crate-safe_core-0.14.4 (c (n "safe_core") (v "0.14.4") (d (list (d (n "bincode") (r "~0.5.4") (d #t) (k 0)) (d (n "clippy") (r "~0.0.63") (o #t) (d #t) (k 0)) (d (n "docopt") (r "~0.6.80") (d #t) (k 2)) (d (n "log") (r "~0.3.6") (d #t) (k 0)) (d (n "lru_time_cache") (r "~0.3.0") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.5.4") (d #t) (k 0)) (d (n "rand") (r "~0.3.14") (d #t) (k 0)) (d (n "regex") (r "~0.1.65") (d #t) (k 2)) (d (n "routing") (r "~0.18.3") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.19") (d #t) (k 0)) (d (n "safe_network_common") (r "~0.1.1") (d #t) (k 0)) (d (n "self_encryption") (r "~0.3.1") (d #t) (k 0)) (d (n "sodiumoxide") (r "~0.0.10") (d #t) (k 0)) (d (n "time") (r "~0.1.35") (d #t) (k 0)) (d (n "xor_name") (r "~0.1.0") (d #t) (k 0)))) (h "0hpp4zlw5ph4mj43k6p56645rg9sg8qz3qj9jlnmv5z01kj1vjw7") (f (quote (("use-mock-routing"))))))

(define-public crate-safe_core-0.14.5 (c (n "safe_core") (v "0.14.5") (d (list (d (n "bincode") (r "~0.5.4") (d #t) (k 0)) (d (n "clippy") (r "~0.0.67") (o #t) (d #t) (k 0)) (d (n "docopt") (r "~0.6.80") (d #t) (k 2)) (d (n "log") (r "~0.3.6") (d #t) (k 0)) (d (n "lru_time_cache") (r "~0.3.0") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.5.4") (d #t) (k 0)) (d (n "rand") (r "~0.3.14") (d #t) (k 0)) (d (n "regex") (r "~0.1.65") (d #t) (k 2)) (d (n "routing") (r "~0.19.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.19") (d #t) (k 0)) (d (n "safe_network_common") (r "~0.1.1") (d #t) (k 0)) (d (n "self_encryption") (r "~0.3.1") (d #t) (k 0)) (d (n "sodiumoxide") (r "~0.0.10") (d #t) (k 0)) (d (n "time") (r "~0.1.35") (d #t) (k 0)) (d (n "xor_name") (r "~0.1.0") (d #t) (k 0)))) (h "1khjdcxn43626rzpy24nr6yxk0y8s6mk21kk33cc08f2g3q8h62d") (f (quote (("use-mock-routing"))))))

(define-public crate-safe_core-0.14.6 (c (n "safe_core") (v "0.14.6") (d (list (d (n "bincode") (r "~0.5.4") (d #t) (k 0)) (d (n "clippy") (r "~0.0.67") (o #t) (d #t) (k 0)) (d (n "docopt") (r "~0.6.80") (d #t) (k 2)) (d (n "libc") (r "~0.2.11") (d #t) (k 0)) (d (n "log") (r "~0.3.6") (d #t) (k 0)) (d (n "lru_time_cache") (r "~0.3.0") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.5.4") (d #t) (k 0)) (d (n "rand") (r "~0.3.14") (d #t) (k 0)) (d (n "regex") (r "~0.1.65") (d #t) (k 2)) (d (n "routing") (r "~0.19.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.19") (d #t) (k 0)) (d (n "safe_network_common") (r "~0.1.1") (d #t) (k 0)) (d (n "self_encryption") (r "~0.3.1") (d #t) (k 0)) (d (n "sodiumoxide") (r "~0.0.10") (d #t) (k 0)) (d (n "time") (r "~0.1.35") (d #t) (k 0)) (d (n "xor_name") (r "~0.1.0") (d #t) (k 0)))) (h "10s5q7ygx5rg0138q5c2dr963ni2dz5wrja70h3mrh7hawwc54zz") (f (quote (("use-mock-routing"))))))

(define-public crate-safe_core-0.15.0 (c (n "safe_core") (v "0.15.0") (d (list (d (n "bincode") (r "~0.5.6") (d #t) (k 0)) (d (n "clippy") (r "~0.0.69") (o #t) (d #t) (k 0)) (d (n "docopt") (r "~0.6.80") (d #t) (k 2)) (d (n "libc") (r "~0.2.11") (d #t) (k 0)) (d (n "log") (r "~0.3.6") (d #t) (k 0)) (d (n "lru_time_cache") (r "~0.4.0") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.6.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.14") (d #t) (k 0)) (d (n "regex") (r "~0.1.71") (d #t) (k 2)) (d (n "routing") (r "~0.21.0") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.19") (d #t) (k 0)) (d (n "safe_network_common") (r "~0.2.0") (d #t) (k 0)) (d (n "self_encryption") (r "~0.5.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "~0.0.10") (d #t) (k 0)) (d (n "time") (r "~0.1.35") (d #t) (k 0)))) (h "1whb6xvlx7d61qfns6lxa5w54qis9y1jka0ng3cqgif1w7zpd7mz") (f (quote (("use-mock-routing"))))))

(define-public crate-safe_core-0.15.1 (c (n "safe_core") (v "0.15.1") (d (list (d (n "bincode") (r "~0.5.6") (d #t) (k 0)) (d (n "clippy") (r "^0.0.76") (o #t) (d #t) (k 0)) (d (n "docopt") (r "~0.6.80") (d #t) (k 2)) (d (n "libc") (r "~0.2.11") (d #t) (k 0)) (d (n "log") (r "~0.3.6") (d #t) (k 0)) (d (n "lru_time_cache") (r "~0.4.0") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.6.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.14") (d #t) (k 0)) (d (n "regex") (r "~0.1.71") (d #t) (k 2)) (d (n "routing") (r "~0.22.0") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.19") (d #t) (k 0)) (d (n "safe_network_common") (r "~0.3.0") (d #t) (k 0)) (d (n "self_encryption") (r "~0.5.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "~0.0.10") (d #t) (k 0)) (d (n "time") (r "~0.1.35") (d #t) (k 0)))) (h "0hbvn9f2gpgqa6gl8gvzf5a4qva9lz7yimws692c95wfdv2gd6zp") (f (quote (("use-mock-routing"))))))

(define-public crate-safe_core-0.16.0 (c (n "safe_core") (v "0.16.0") (d (list (d (n "bincode") (r "~0.5.7") (d #t) (k 0)) (d (n "clippy") (r "~0.0.77") (o #t) (d #t) (k 0)) (d (n "docopt") (r "~0.6.81") (d #t) (k 2)) (d (n "libc") (r "~0.2.12") (d #t) (k 0)) (d (n "log") (r "~0.3.6") (d #t) (k 0)) (d (n "lru_time_cache") (r "~0.4.0") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.8.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.14") (d #t) (k 0)) (d (n "regex") (r "~0.1.71") (d #t) (k 2)) (d (n "routing") (r "~0.23.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.19") (d #t) (k 0)) (d (n "safe_network_common") (r "~0.4.1") (d #t) (k 0)) (d (n "self_encryption") (r "~0.5.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "~0.0.10") (d #t) (k 0)) (d (n "time") (r "~0.1.35") (d #t) (k 0)))) (h "13a5bszx40rccg2illdbb3533asbpb3bfznwzp259mkwd5cca1ag") (f (quote (("use-mock-routing"))))))

(define-public crate-safe_core-0.16.1 (c (n "safe_core") (v "0.16.1") (d (list (d (n "bincode") (r "~0.5.7") (d #t) (k 0)) (d (n "clippy") (r "~0.0.77") (o #t) (d #t) (k 0)) (d (n "docopt") (r "~0.6.81") (d #t) (k 2)) (d (n "libc") (r "~0.2.12") (d #t) (k 0)) (d (n "log") (r "~0.3.6") (d #t) (k 0)) (d (n "lru_time_cache") (r "~0.4.0") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.8.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.14") (d #t) (k 0)) (d (n "regex") (r "~0.1.71") (d #t) (k 2)) (d (n "routing") (r "~0.23.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.19") (d #t) (k 0)) (d (n "safe_network_common") (r "~0.4.1") (d #t) (k 0)) (d (n "self_encryption") (r "~0.5.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "~0.0.10") (d #t) (k 0)) (d (n "time") (r "~0.1.35") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)))) (h "1n3j953n8412rl59473lqkvf076hdnzx67qpy2axk35lp8i5rzix") (f (quote (("use-mock-routing"))))))

(define-public crate-safe_core-0.16.2 (c (n "safe_core") (v "0.16.2") (d (list (d (n "bincode") (r "~0.5.8") (d #t) (k 0)) (d (n "clippy") (r "~0.0.78") (o #t) (d #t) (k 0)) (d (n "docopt") (r "~0.6.81") (d #t) (k 2)) (d (n "libc") (r "~0.2.13") (d #t) (k 0)) (d (n "log") (r "~0.3.6") (d #t) (k 0)) (d (n "lru_time_cache") (r "~0.4.0") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.8.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.14") (d #t) (k 0)) (d (n "regex") (r "~0.1.71") (d #t) (k 2)) (d (n "routing") (r "~0.24.0") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.19") (d #t) (k 0)) (d (n "safe_network_common") (r "~0.5.0") (d #t) (k 0)) (d (n "self_encryption") (r "~0.5.1") (d #t) (k 0)) (d (n "sodiumoxide") (r "= 0.0.10") (d #t) (k 0)) (d (n "time") (r "~0.1.35") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)))) (h "1d9vr1cx07xvi1bfzr5asv8rqk7xvz90k2nrz8cki3wqa6kvjlvw") (f (quote (("use-mock-routing"))))))

(define-public crate-safe_core-0.17.0 (c (n "safe_core") (v "0.17.0") (d (list (d (n "bincode") (r "~0.5.8") (d #t) (k 0)) (d (n "clippy") (r "~0.0.78") (o #t) (d #t) (k 0)) (d (n "docopt") (r "~0.6.81") (d #t) (k 2)) (d (n "libc") (r "~0.2.13") (d #t) (k 0)) (d (n "log") (r "~0.3.6") (d #t) (k 0)) (d (n "lru_time_cache") (r "~0.4.0") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.8.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.14") (d #t) (k 0)) (d (n "regex") (r "~0.1.71") (d #t) (k 2)) (d (n "routing") (r "~0.24.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.19") (d #t) (k 0)) (d (n "safe_network_common") (r "~0.5.0") (d #t) (k 0)) (d (n "self_encryption") (r "~0.5.1") (d #t) (k 0)) (d (n "sodiumoxide") (r "= 0.0.10") (d #t) (k 0)) (d (n "time") (r "~0.1.35") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)))) (h "1pq3yf7xln8zfnpy6ak6hxvcsysakfbyhxih9s10rk2r0q528sxj") (f (quote (("use-mock-routing"))))))

(define-public crate-safe_core-0.18.0 (c (n "safe_core") (v "0.18.0") (d (list (d (n "bincode") (r "~0.5.9") (d #t) (k 0)) (d (n "clippy") (r "~0.0.79") (o #t) (d #t) (k 0)) (d (n "docopt") (r "~0.6.81") (d #t) (k 2)) (d (n "libc") (r "~0.2.14") (d #t) (k 0)) (d (n "log") (r "~0.3.6") (d #t) (k 0)) (d (n "lru_time_cache") (r "~0.4.0") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.8.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.14") (d #t) (k 0)) (d (n "regex") (r "~0.1.73") (d #t) (k 2)) (d (n "routing") (r "~0.25.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.19") (d #t) (k 0)) (d (n "safe_network_common") (r "~0.6.0") (d #t) (k 0)) (d (n "self_encryption") (r "~0.6.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "= 0.0.10") (d #t) (k 0)) (d (n "time") (r "~0.1.35") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)))) (h "0p956xdfbwjxl0xc0yandb4iy7rpasx38vq08x5pxl4zq7vajlwb") (f (quote (("use-mock-routing"))))))

(define-public crate-safe_core-0.18.1 (c (n "safe_core") (v "0.18.1") (d (list (d (n "bincode") (r "~0.5.9") (d #t) (k 0)) (d (n "clippy") (r "~0.0.79") (o #t) (d #t) (k 0)) (d (n "docopt") (r "~0.6.81") (d #t) (k 2)) (d (n "libc") (r "~0.2.14") (d #t) (k 0)) (d (n "log") (r "~0.3.6") (d #t) (k 0)) (d (n "lru_time_cache") (r "~0.4.0") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.8.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.14") (d #t) (k 0)) (d (n "regex") (r "~0.1.73") (d #t) (k 2)) (d (n "routing") (r "~0.23.3") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.19") (d #t) (k 0)) (d (n "safe_network_common") (r "~0.7.0") (d #t) (k 0)) (d (n "self_encryption") (r "~0.6.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "= 0.0.10") (d #t) (k 0)) (d (n "time") (r "~0.1.35") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)))) (h "0bxbahg06njc3aal40jb22hfkkdjzjbv28vr7w8bd11nch0qrwq7") (f (quote (("use-mock-routing"))))))

(define-public crate-safe_core-0.19.0 (c (n "safe_core") (v "0.19.0") (d (list (d (n "bincode") (r "~0.5.9") (d #t) (k 0)) (d (n "clippy") (r "~0.0.79") (o #t) (d #t) (k 0)) (d (n "config_file_handler") (r "~0.4.0") (d #t) (k 0)) (d (n "docopt") (r "~0.6.81") (d #t) (k 2)) (d (n "libc") (r "~0.2.14") (d #t) (k 0)) (d (n "log") (r "~0.3.6") (d #t) (k 0)) (d (n "lru_time_cache") (r "~0.4.0") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.9.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.14") (d #t) (k 0)) (d (n "regex") (r "~0.1.73") (d #t) (k 2)) (d (n "routing") (r "~0.23.4") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.1.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.19") (d #t) (k 0)) (d (n "self_encryption") (r "~0.7.0") (d #t) (k 0)) (d (n "time") (r "~0.1.35") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)))) (h "0vnxpsrkyn5r6744x5jz0mjgqzbacapal3xmg8qqwk6inm728k61") (f (quote (("use-mock-routing"))))))

(define-public crate-safe_core-0.20.0 (c (n "safe_core") (v "0.20.0") (d (list (d (n "bincode") (r "~0.5.9") (d #t) (k 0)) (d (n "clippy") (r "~0.0.79") (o #t) (d #t) (k 0)) (d (n "config_file_handler") (r "~0.4.0") (d #t) (k 0)) (d (n "crossbeam") (r "~0.2.10") (d #t) (k 2)) (d (n "docopt") (r "~0.6.81") (d #t) (k 2)) (d (n "lazy_static") (r "~0.2.1") (d #t) (k 0)) (d (n "libc") (r "~0.2.14") (d #t) (k 0)) (d (n "log") (r "~0.3.6") (d #t) (k 0)) (d (n "lru-cache") (r "~0.0.7") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.9.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.14") (d #t) (k 0)) (d (n "regex") (r "~0.1.73") (d #t) (k 2)) (d (n "routing") (r "~0.26.0") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.1.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.19") (d #t) (k 0)) (d (n "self_encryption") (r "~0.7.0") (d #t) (k 0)) (d (n "time") (r "~0.1.35") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)))) (h "1pf9sv8dnspgb80pgbbr2i79nb2nxgf574jlr0scxsfssvb874h7") (f (quote (("use-mock-routing"))))))

(define-public crate-safe_core-0.21.0 (c (n "safe_core") (v "0.21.0") (d (list (d (n "bincode") (r "~0.5.9") (d #t) (k 0)) (d (n "clippy") (r "~0.0.91") (o #t) (d #t) (k 0)) (d (n "config_file_handler") (r "~0.4.0") (d #t) (k 0)) (d (n "crossbeam") (r "~0.2.10") (d #t) (k 2)) (d (n "docopt") (r "~0.6.85") (d #t) (k 2)) (d (n "lazy_static") (r "~0.2.1") (d #t) (k 0)) (d (n "libc") (r "~0.2.16") (d #t) (k 0)) (d (n "log") (r "~0.3.6") (d #t) (k 0)) (d (n "lru-cache") (r "~0.0.7") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.9.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.14") (d #t) (k 0)) (d (n "regex") (r "~0.1.77") (d #t) (k 2)) (d (n "routing") (r "~0.26.0") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.1.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.19") (d #t) (k 0)) (d (n "self_encryption") (r "~0.7.0") (d #t) (k 0)) (d (n "time") (r "~0.1.35") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)))) (h "0kca6rddagq13g1hxsgqgdcsrz5p5rkhcdcsd3xqbgwdq8ih5882") (f (quote (("use-mock-routing"))))))

(define-public crate-safe_core-0.21.2 (c (n "safe_core") (v "0.21.2") (d (list (d (n "bincode") (r "~0.5.9") (d #t) (k 0)) (d (n "clippy") (r "~0.0.91") (o #t) (d #t) (k 0)) (d (n "config_file_handler") (r "~0.4.0") (d #t) (k 0)) (d (n "crossbeam") (r "~0.2.10") (d #t) (k 2)) (d (n "docopt") (r "~0.6.85") (d #t) (k 2)) (d (n "lazy_static") (r "~0.2.1") (d #t) (k 0)) (d (n "libc") (r "~0.2.16") (d #t) (k 0)) (d (n "log") (r "~0.3.6") (d #t) (k 0)) (d (n "lru-cache") (r "~0.0.7") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.9.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.14") (d #t) (k 0)) (d (n "regex") (r "~0.1.77") (d #t) (k 2)) (d (n "routing") (r "~0.26.0") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.1.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.19") (d #t) (k 0)) (d (n "self_encryption") (r "~0.7.0") (d #t) (k 0)) (d (n "time") (r "~0.1.35") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)))) (h "04a9n71ikr6d6xlrd7s5bq3i8pva0z4xvr41a2hpf0njkkbfqaqg") (f (quote (("use-mock-routing"))))))

(define-public crate-safe_core-0.22.0 (c (n "safe_core") (v "0.22.0") (d (list (d (n "clippy") (r "~0.0.91") (o #t) (d #t) (k 0)) (d (n "config_file_handler") (r "~0.4.0") (d #t) (k 0)) (d (n "crossbeam") (r "~0.2.10") (d #t) (k 2)) (d (n "docopt") (r "~0.6.85") (d #t) (k 2)) (d (n "lazy_static") (r "~0.2.1") (d #t) (k 0)) (d (n "libc") (r "~0.2.16") (d #t) (k 0)) (d (n "log") (r "~0.3.6") (d #t) (k 0)) (d (n "lru-cache") (r "~0.0.7") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.10.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.14") (d #t) (k 0)) (d (n "regex") (r "~0.1.77") (d #t) (k 2)) (d (n "routing") (r "~0.27.1") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.1.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.19") (d #t) (k 0)) (d (n "self_encryption") (r "~0.7.1") (d #t) (k 0)) (d (n "time") (r "~0.1.35") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)))) (h "0ibicavwrb3ya33xfg8z9cbfd0ymam86316ipn5bbkfc6pv23vgj") (f (quote (("use-mock-routing"))))))

(define-public crate-safe_core-0.22.1 (c (n "safe_core") (v "0.22.1") (d (list (d (n "clippy") (r "~0.0.91") (o #t) (d #t) (k 0)) (d (n "config_file_handler") (r "~0.4.0") (d #t) (k 0)) (d (n "crossbeam") (r "~0.2.10") (d #t) (k 2)) (d (n "docopt") (r "~0.6.85") (d #t) (k 2)) (d (n "lazy_static") (r "~0.2.1") (d #t) (k 0)) (d (n "libc") (r "~0.2.16") (d #t) (k 0)) (d (n "log") (r "~0.3.6") (d #t) (k 0)) (d (n "lru-cache") (r "~0.0.7") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.10.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.14") (d #t) (k 0)) (d (n "regex") (r "~0.1.77") (d #t) (k 2)) (d (n "routing") (r "~0.27.1") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.1.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.19") (d #t) (k 0)) (d (n "self_encryption") (r "~0.7.1") (d #t) (k 0)) (d (n "time") (r "~0.1.35") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)))) (h "1dn4n2053qbryv1bzdpj53zm79jk21zw8a68jdf5l74cdb7v2hyf") (f (quote (("use-mock-routing"))))))

(define-public crate-safe_core-0.22.2 (c (n "safe_core") (v "0.22.2") (d (list (d (n "clippy") (r "~0.0.91") (o #t) (d #t) (k 0)) (d (n "config_file_handler") (r "~0.4.0") (d #t) (k 0)) (d (n "crossbeam") (r "~0.2.10") (d #t) (k 2)) (d (n "docopt") (r "~0.6.85") (d #t) (k 2)) (d (n "lazy_static") (r "~0.2.1") (d #t) (k 0)) (d (n "libc") (r "~0.2.16") (d #t) (k 0)) (d (n "log") (r "~0.3.6") (d #t) (k 0)) (d (n "lru-cache") (r "~0.0.7") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.10.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.14") (d #t) (k 0)) (d (n "regex") (r "~0.1.77") (d #t) (k 2)) (d (n "routing") (r "~0.28.0") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.1.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.19") (d #t) (k 0)) (d (n "self_encryption") (r "~0.7.1") (d #t) (k 0)) (d (n "time") (r "~0.1.35") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)))) (h "1qab4gmrhswbhz6w0rnwg49nydwzj3r972pp8qknwr15hjcincfs") (f (quote (("use-mock-routing"))))))

(define-public crate-safe_core-0.22.3 (c (n "safe_core") (v "0.22.3") (d (list (d (n "clippy") (r "~0.0.91") (o #t) (d #t) (k 0)) (d (n "config_file_handler") (r "~0.4.0") (d #t) (k 0)) (d (n "crossbeam") (r "~0.2.10") (d #t) (k 2)) (d (n "docopt") (r "~0.6.85") (d #t) (k 2)) (d (n "lazy_static") (r "~0.2.1") (d #t) (k 0)) (d (n "libc") (r "~0.2.16") (d #t) (k 0)) (d (n "log") (r "~0.3.6") (d #t) (k 0)) (d (n "lru-cache") (r "~0.0.7") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.10.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.14") (d #t) (k 0)) (d (n "regex") (r "~0.1.77") (d #t) (k 2)) (d (n "routing") (r "~0.28.2") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.1.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.19") (d #t) (k 0)) (d (n "self_encryption") (r "~0.7.1") (d #t) (k 0)) (d (n "time") (r "~0.1.35") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)))) (h "0p4kmsgsvcr5gv87dldfcymhjwq7s0f3hjpf7ci9kyln2d9lqz12") (f (quote (("use-mock-routing"))))))

(define-public crate-safe_core-0.22.4 (c (n "safe_core") (v "0.22.4") (d (list (d (n "config_file_handler") (r "~0.4.0") (d #t) (k 0)) (d (n "crossbeam") (r "~0.2.10") (d #t) (k 2)) (d (n "docopt") (r "~0.6.85") (d #t) (k 2)) (d (n "lazy_static") (r "~0.2.1") (d #t) (k 0)) (d (n "libc") (r "~0.2.16") (d #t) (k 0)) (d (n "log") (r "~0.3.6") (d #t) (k 0)) (d (n "lru-cache") (r "~0.0.7") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.10.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.14") (d #t) (k 0)) (d (n "regex") (r "~0.1.77") (d #t) (k 2)) (d (n "routing") (r "~0.28.4") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.1.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.19") (d #t) (k 0)) (d (n "self_encryption") (r "~0.7.1") (d #t) (k 0)) (d (n "time") (r "~0.1.35") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)))) (h "1ycnh6cmbcmbzirlzn72pnnkxxnib3kpc290ayknm4vfnjb0b2c0") (f (quote (("use-mock-routing"))))))

(define-public crate-safe_core-0.23.0 (c (n "safe_core") (v "0.23.0") (d (list (d (n "chrono") (r "~0.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "config_file_handler") (r "~0.6.0") (d #t) (k 0)) (d (n "crossbeam") (r "~0.2.10") (d #t) (k 2)) (d (n "docopt") (r "~0.6.85") (d #t) (k 2)) (d (n "lazy_static") (r "~0.2.1") (d #t) (k 0)) (d (n "libc") (r "~0.2.16") (d #t) (k 0)) (d (n "log") (r "~0.3.6") (d #t) (k 0)) (d (n "lru-cache") (r "~0.0.7") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.11.2") (d #t) (k 0)) (d (n "rand") (r "~0.3.14") (d #t) (k 0)) (d (n "regex") (r "~0.1.77") (d #t) (k 2)) (d (n "routing") (r "~0.28.5") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.2.0") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.23") (d #t) (k 2)) (d (n "self_encryption") (r "~0.8.0") (d #t) (k 0)) (d (n "serde") (r "~0.9.12") (d #t) (k 0)) (d (n "serde_derive") (r "~0.9.12") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.2.0") (d #t) (k 2)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)))) (h "00619ylgha6nnvdfidda29swbr8a7qldrnmh0hwgppx7nv8gllp7") (f (quote (("use-mock-routing"))))))

(define-public crate-safe_core-0.24.0 (c (n "safe_core") (v "0.24.0") (d (list (d (n "base64") (r "~0.4.1") (d #t) (k 0)) (d (n "chrono") (r "~0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "docopt") (r "~0.7.0") (d #t) (k 2)) (d (n "ffi_utils") (r "~0.1.0") (d #t) (k 0)) (d (n "fs2") (r "~0.4.2") (d #t) (k 0)) (d (n "futures") (r "~0.1.14") (d #t) (k 0)) (d (n "lazy_static") (r "~0.2.4") (d #t) (k 0)) (d (n "log") (r "~0.3.7") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.0") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.13.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.15") (d #t) (k 0)) (d (n "routing") (r "~0.31.0") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.3.0") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.23") (d #t) (k 2)) (d (n "self_encryption") (r "~0.10.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.9") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.9") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.2.1") (d #t) (k 0)) (d (n "tokio-core") (r "~0.1.8") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)))) (h "0ngn6706n89v0gv71nlzvcavxi38mi457mpc5551pph59pz6jrv1") (f (quote (("use-mock-routing") ("testing"))))))

(define-public crate-safe_core-0.25.0 (c (n "safe_core") (v "0.25.0") (d (list (d (n "base64") (r "~0.4.1") (d #t) (k 0)) (d (n "chrono") (r "~0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "docopt") (r "~0.7.0") (d #t) (k 2)) (d (n "ffi_utils") (r "~0.2.0") (d #t) (k 0)) (d (n "fs2") (r "~0.4.2") (d #t) (k 0)) (d (n "futures") (r "~0.1.14") (d #t) (k 0)) (d (n "lazy_static") (r "~0.2.4") (d #t) (k 0)) (d (n "log") (r "~0.3.7") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.0") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.14.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.15") (d #t) (k 0)) (d (n "routing") (r "~0.32.1") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.5.0") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.23") (d #t) (k 2)) (d (n "self_encryption") (r "~0.11.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.11") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.11") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.3.1") (d #t) (k 0)) (d (n "tokio-core") (r "~0.1.9") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)))) (h "1wqq4aij98kqfd1k1bn4bbnlqi3ac5gpps33c9d5dqxh5lkndkq6") (f (quote (("use-mock-routing") ("testing"))))))

(define-public crate-safe_core-0.25.1 (c (n "safe_core") (v "0.25.1") (d (list (d (n "base64") (r "~0.4.1") (d #t) (k 0)) (d (n "chrono") (r "~0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "docopt") (r "~0.7.0") (d #t) (k 2)) (d (n "ffi_utils") (r "~0.2.0") (d #t) (k 0)) (d (n "fs2") (r "~0.4.2") (d #t) (k 0)) (d (n "futures") (r "~0.1.14") (d #t) (k 0)) (d (n "lazy_static") (r "~0.2.4") (d #t) (k 0)) (d (n "log") (r "~0.3.7") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.0") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.14.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.15") (d #t) (k 0)) (d (n "routing") (r "~0.32.2") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.5.0") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.23") (d #t) (k 2)) (d (n "self_encryption") (r "~0.11.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.11") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.11") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.3.1") (d #t) (k 0)) (d (n "tokio-core") (r "~0.1.9") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)))) (h "085x1w0396xzr9mhajc7pgj5qpv83kqlvsk0l1vw70767d45mbz9") (f (quote (("use-mock-routing") ("testing"))))))

(define-public crate-safe_core-0.26.0 (c (n "safe_core") (v "0.26.0") (d (list (d (n "base64") (r "~0.4.1") (d #t) (k 0)) (d (n "bincode") (r "~0.8.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "~0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "docopt") (r "~0.7.0") (d #t) (k 2)) (d (n "ffi_utils") (r "~0.2.0") (d #t) (k 0)) (d (n "fs2") (r "~0.4.2") (d #t) (k 0)) (d (n "futures") (r "~0.1.14") (d #t) (k 0)) (d (n "lazy_static") (r "~0.2.4") (d #t) (k 0)) (d (n "log") (r "~0.3.7") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.0") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.14.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.15") (d #t) (k 0)) (d (n "routing") (r "~0.33.0") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.5.0") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.23") (d #t) (k 2)) (d (n "self_encryption") (r "~0.11.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.11") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.11") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.3.1") (d #t) (k 0)) (d (n "tokio-core") (r "~0.1.9") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)))) (h "17prhxwy0ij5lg9gjvlm846mk4y8ghjn97kwhzwr6xyb6rjjrw01") (f (quote (("use-mock-routing" "bincode") ("testing"))))))

(define-public crate-safe_core-0.26.1 (c (n "safe_core") (v "0.26.1") (d (list (d (n "base64") (r "~0.4.1") (d #t) (k 0)) (d (n "chrono") (r "~0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "docopt") (r "~0.7.0") (d #t) (k 2)) (d (n "ffi_utils") (r "~0.2.0") (d #t) (k 0)) (d (n "fs2") (r "~0.4.2") (d #t) (k 0)) (d (n "futures") (r "~0.1.15") (d #t) (k 0)) (d (n "lazy_static") (r "~0.2.4") (d #t) (k 0)) (d (n "log") (r "~0.3.7") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.0") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.14.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.15") (d #t) (k 0)) (d (n "routing") (r "~0.33.1") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.5.0") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.23") (d #t) (k 2)) (d (n "self_encryption") (r "~0.11.1") (d #t) (k 0)) (d (n "serde") (r "~1.0.11") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.11") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.3.1") (d #t) (k 0)) (d (n "tokio-core") (r "~0.1.9") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)))) (h "0g73xydic6hfi35xdl9pncd9qcv6i0hss2bi0n03j1qkanw7w5h8") (f (quote (("use-mock-routing") ("testing"))))))

(define-public crate-safe_core-0.26.2 (c (n "safe_core") (v "0.26.2") (d (list (d (n "base64") (r "~0.4.1") (d #t) (k 0)) (d (n "chrono") (r "~0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "docopt") (r "~0.7.0") (d #t) (k 2)) (d (n "ffi_utils") (r "~0.2.0") (d #t) (k 0)) (d (n "fs2") (r "~0.4.2") (d #t) (k 0)) (d (n "futures") (r "~0.1.15") (d #t) (k 0)) (d (n "lazy_static") (r "~0.2.4") (d #t) (k 0)) (d (n "log") (r "~0.3.7") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.0") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.14.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.15") (d #t) (k 0)) (d (n "routing") (r "~0.33.2") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.5.0") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.23") (d #t) (k 2)) (d (n "self_encryption") (r "~0.11.1") (d #t) (k 0)) (d (n "serde") (r "~1.0.11") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.11") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.3.1") (d #t) (k 0)) (d (n "tokio-core") (r "~0.1.9") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)))) (h "0257q5w8qgj75xf2zf1divi4m1jgwf43y27jyzlln3b92qakf7n0") (f (quote (("use-mock-routing") ("testing"))))))

(define-public crate-safe_core-0.27.0 (c (n "safe_core") (v "0.27.0") (d (list (d (n "base64") (r "~0.4.1") (d #t) (k 0)) (d (n "chrono") (r "~0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "docopt") (r "~0.7.0") (d #t) (k 2)) (d (n "ffi_utils") (r "~0.3.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.3.0") (d #t) (k 1)) (d (n "fs2") (r "~0.4.2") (d #t) (k 0)) (d (n "futures") (r "~0.1.15") (d #t) (k 0)) (d (n "lazy_static") (r "~0.2.4") (d #t) (k 0)) (d (n "log") (r "~0.3.7") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.0") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.14.1") (d #t) (k 0)) (d (n "rand") (r "~0.3.15") (d #t) (k 0)) (d (n "routing") (r "~0.33.2") (d #t) (k 0)) (d (n "routing") (r "~0.33.1") (d #t) (k 1)) (d (n "rust_sodium") (r "~0.5.0") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.5.0") (d #t) (k 1)) (d (n "rustc-serialize") (r "~0.3.23") (d #t) (k 2)) (d (n "self_encryption") (r "~0.11.1") (d #t) (k 0)) (d (n "serde") (r "~1.0.11") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.11") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.3.1") (d #t) (k 0)) (d (n "tokio-core") (r "~0.1.9") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 1)))) (h "05iy5zvq1dlw7mp13rlpp18167villnpv39j1sbn3rn1hm6yla9i") (f (quote (("use-mock-routing") ("testing"))))))

(define-public crate-safe_core-0.28.0 (c (n "safe_core") (v "0.28.0") (d (list (d (n "base64") (r "~0.7.0") (d #t) (k 0)) (d (n "chrono") (r "~0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "config_file_handler") (r "~0.8.3") (d #t) (k 0)) (d (n "docopt") (r "~0.7.0") (d #t) (k 2)) (d (n "ffi_utils") (r "~0.4.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.4.0") (d #t) (k 1)) (d (n "fs2") (r "~0.4.2") (d #t) (k 0)) (d (n "futures") (r "~0.1.15") (d #t) (k 0)) (d (n "lazy_static") (r "~0.2.11") (d #t) (k 0)) (d (n "log") (r "~0.3.7") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.0") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.14.1") (d #t) (k 0)) (d (n "rand") (r "~0.3.18") (d #t) (k 0)) (d (n "routing") (r "~0.34.0") (d #t) (k 0)) (d (n "routing") (r "~0.34.0") (d #t) (k 1)) (d (n "rust_sodium") (r "~0.6.0") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.6.0") (d #t) (k 1)) (d (n "rustc-serialize") (r "~0.3.23") (d #t) (k 2)) (d (n "self_encryption") (r "~0.11.2") (d #t) (k 0)) (d (n "serde") (r "~1.0.24") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.11") (d #t) (k 0)) (d (n "serde_json") (r "~1.0.2") (d #t) (k 2)) (d (n "tiny-keccak") (r "~1.3.1") (d #t) (k 0)) (d (n "tokio-core") (r "~0.1.9") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 1)))) (h "14b4wjmll8cwngq9y8mgrvdly45apf23hal08z426d60ywy4xxpb") (f (quote (("use-mock-routing") ("testing"))))))

(define-public crate-safe_core-0.29.0 (c (n "safe_core") (v "0.29.0") (d (list (d (n "base64") (r "~0.9.0") (d #t) (k 0)) (d (n "chrono") (r "~0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "config_file_handler") (r "~0.9.0") (d #t) (k 0)) (d (n "docopt") (r "~0.7.0") (d #t) (k 2)) (d (n "ffi_utils") (r "~0.5.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.5.0") (d #t) (k 1)) (d (n "fs2") (r "~0.4.3") (d #t) (k 0)) (d (n "futures") (r "~0.1.17") (d #t) (k 0)) (d (n "lazy_static") (r "~1.0.0") (d #t) (k 0)) (d (n "log") (r "~0.4.1") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.1") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.15.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.18") (d #t) (k 0)) (d (n "routing") (r "~0.35.0") (d #t) (k 0)) (d (n "routing") (r "~0.35.0") (d #t) (k 1)) (d (n "rust_sodium") (r "~0.7.0") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.7.0") (d #t) (k 1)) (d (n "rustc-serialize") (r "~0.3.24") (d #t) (k 2)) (d (n "self_encryption") (r "~0.12.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.27") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.27") (d #t) (k 0)) (d (n "serde_json") (r "~1.0.9") (d #t) (k 2)) (d (n "tiny-keccak") (r "~1.3.1") (d #t) (k 0)) (d (n "tokio-core") (r "~0.1.12") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 1)))) (h "1qrrg52x9q38bqyma5dk5p0panz31ayicxbq34dmhy3mv22z7xyp") (f (quote (("use-mock-routing") ("testing"))))))

(define-public crate-safe_core-0.30.0 (c (n "safe_core") (v "0.30.0") (d (list (d (n "base64") (r "~0.9.0") (d #t) (k 0)) (d (n "chrono") (r "~0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "config_file_handler") (r "~0.9.0") (d #t) (k 0)) (d (n "docopt") (r "~0.7.0") (d #t) (k 2)) (d (n "ffi_utils") (r "~0.6.0") (d #t) (k 0)) (d (n "fs2") (r "~0.4.3") (d #t) (k 0)) (d (n "futures") (r "~0.1.17") (d #t) (k 0)) (d (n "lazy_static") (r "~1.0.0") (d #t) (k 0)) (d (n "log") (r "~0.4.1") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.1") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.15.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.18") (d #t) (k 0)) (d (n "routing") (r "~0.35.0") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.7.0") (d #t) (k 0)) (d (n "rustc-serialize") (r "~0.3.24") (d #t) (k 2)) (d (n "self_encryption") (r "~0.12.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.27") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.27") (d #t) (k 0)) (d (n "serde_json") (r "~1.0.9") (d #t) (k 2)) (d (n "tiny-keccak") (r "~1.3.1") (d #t) (k 0)) (d (n "tokio-core") (r "~0.1.12") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)))) (h "1x913rqr6gbmll6szl6hv6j1qm9axhm9ywxzf05z5s48k83mpz37") (f (quote (("use-mock-routing") ("testing"))))))

(define-public crate-safe_core-0.31.0 (c (n "safe_core") (v "0.31.0") (d (list (d (n "base64") (r "~0.9.0") (d #t) (k 0)) (d (n "chrono") (r "~0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "config_file_handler") (r "~0.9.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.6.0") (d #t) (k 0)) (d (n "fs2") (r "~0.4.3") (d #t) (k 0)) (d (n "futures") (r "~0.1.17") (d #t) (k 0)) (d (n "lazy_static") (r "~1.0.0") (d #t) (k 0)) (d (n "log") (r "~0.4.1") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.1") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.15.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.18") (d #t) (k 0)) (d (n "routing") (r "~0.35.0") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.7.0") (d #t) (k 0)) (d (n "self_encryption") (r "~0.12.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.27") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.27") (d #t) (k 0)) (d (n "serde_json") (r "~1.0.9") (d #t) (k 2)) (d (n "tiny-keccak") (r "~1.3.1") (d #t) (k 0)) (d (n "tokio-core") (r "~0.1.12") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)))) (h "123hmm1hh0a5nf1n7ivzbw46j0k6az84z6pj3w541wzi3wn3kkhb") (f (quote (("use-mock-routing") ("testing"))))))

(define-public crate-safe_core-0.32.0 (c (n "safe_core") (v "0.32.0") (d (list (d (n "chrono") (r "~0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "config_file_handler") (r "~0.11.0") (d #t) (k 0)) (d (n "data-encoding") (r "~2.1.1") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.11.0") (d #t) (k 0)) (d (n "fs2") (r "~0.4.3") (d #t) (k 0)) (d (n "futures") (r "~0.1.17") (d #t) (k 0)) (d (n "lazy_static") (r "~1.0.0") (d #t) (k 0)) (d (n "log") (r "~0.4.1") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.1") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.16.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.18") (d #t) (k 0)) (d (n "routing") (r "~0.37.0") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.10.0") (d #t) (k 0)) (d (n "self_encryption") (r "~0.13.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.27") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.27") (d #t) (k 0)) (d (n "serde_json") (r "~1.0.9") (d #t) (k 2)) (d (n "tiny-keccak") (r "~1.3.1") (d #t) (k 0)) (d (n "tokio-core") (r "~0.1.17") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 0)))) (h "0yyshzb9m4jfny6zn1vlla3i7fy1zqp8v9frc15pwyh9pzvn7iy5") (f (quote (("use-mock-routing") ("testing"))))))

(define-public crate-safe_core-0.33.0 (c (n "safe_core") (v "0.33.0") (d (list (d (n "bincode") (r "~1.1.4") (d #t) (k 0)) (d (n "bytes") (r "~0.4.12") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "~0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "~0.3.9") (d #t) (k 0)) (d (n "data-encoding") (r "~2.1.1") (d #t) (k 0)) (d (n "directories") (r "~2.0.2") (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.12.0") (d #t) (k 0)) (d (n "fs2") (r "~0.4.3") (d #t) (k 0)) (d (n "futures") (r "~0.1.17") (d #t) (k 0)) (d (n "lazy_static") (r "~1.2.0") (d #t) (k 0)) (d (n "log") (r "~0.4.1") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.1") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.18.0") (d #t) (k 0)) (d (n "new_rand") (r "^0.6") (d #t) (k 0) (p "rand")) (d (n "quic-p2p") (r "~0.2.1") (d #t) (k 0)) (d (n "rand") (r "~0.3.18") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.10.2") (d #t) (k 0)) (d (n "safe-nd") (r "~0.3.0") (d #t) (k 0)) (d (n "self_encryption") (r "~0.15.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.97") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "~1.0.40") (d #t) (k 0)) (d (n "serde_json") (r "~1.0.9") (d #t) (k 2)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "tokio") (r "~0.1.22") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 0)))) (h "1ws9gviryhv4a6l8isq1jb9ivcgdlq4j0ia0z65iaylqjp3b8bhq") (f (quote (("testing") ("mock-network"))))))

(define-public crate-safe_core-0.33.1 (c (n "safe_core") (v "0.33.1") (d (list (d (n "bincode") (r "~1.1.4") (d #t) (k 0)) (d (n "bytes") (r "~0.4.12") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "~0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "~0.3.9") (d #t) (k 0)) (d (n "data-encoding") (r "~2.1.1") (d #t) (k 0)) (d (n "directories") (r "~2.0.2") (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.12.0") (d #t) (k 0)) (d (n "fs2") (r "~0.4.3") (d #t) (k 0)) (d (n "futures") (r "~0.1.17") (d #t) (k 0)) (d (n "lazy_static") (r "~1.2.0") (d #t) (k 0)) (d (n "log") (r "~0.4.1") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.1") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.18.0") (d #t) (k 0)) (d (n "new_rand") (r "^0.6") (d #t) (k 0) (p "rand")) (d (n "quic-p2p") (r "~0.2.1") (d #t) (k 0)) (d (n "rand") (r "~0.3.18") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.10.2") (d #t) (k 0)) (d (n "safe-nd") (r "~0.4.0") (d #t) (k 0)) (d (n "self_encryption") (r "~0.15.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.97") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "~1.0.40") (d #t) (k 0)) (d (n "serde_json") (r "~1.0.9") (d #t) (k 2)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "tokio") (r "~0.1.22") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 0)))) (h "1xjmj5dzp7ayv5vj4xc6h672l0pf16id3cvqjsk16lw5xdcf9pjc") (f (quote (("testing") ("mock-network")))) (y #t)))

(define-public crate-safe_core-0.33.2 (c (n "safe_core") (v "0.33.2") (d (list (d (n "bincode") (r "~1.1.4") (d #t) (k 0)) (d (n "bytes") (r "~0.4.12") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "~0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "~0.3.9") (d #t) (k 0)) (d (n "data-encoding") (r "~2.1.1") (d #t) (k 0)) (d (n "directories") (r "~2.0.2") (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.12.0") (d #t) (k 0)) (d (n "fs2") (r "~0.4.3") (d #t) (k 0)) (d (n "futures") (r "~0.1.17") (d #t) (k 0)) (d (n "lazy_static") (r "~1.2.0") (d #t) (k 0)) (d (n "log") (r "~0.4.1") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.1") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.18.0") (d #t) (k 0)) (d (n "new_rand") (r "^0.6") (d #t) (k 0) (p "rand")) (d (n "quic-p2p") (r "~0.2.1") (d #t) (k 0)) (d (n "rand") (r "~0.3.18") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.10.2") (d #t) (k 0)) (d (n "safe-nd") (r "~0.4.0") (d #t) (k 0)) (d (n "self_encryption") (r "~0.15.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.97") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "~1.0.40") (d #t) (k 0)) (d (n "serde_json") (r "~1.0.9") (d #t) (k 2)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "tokio") (r "~0.1.22") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 0)))) (h "12rp5wnknar05rp0c3dvzg8gngrawqdr2n8373jlbqvm2plr4xxd") (f (quote (("testing") ("mock-network")))) (y #t)))

(define-public crate-safe_core-0.34.0 (c (n "safe_core") (v "0.34.0") (d (list (d (n "bincode") (r "~1.1.4") (d #t) (k 0)) (d (n "bytes") (r "~0.4.12") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "~0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "~0.3.9") (d #t) (k 0)) (d (n "data-encoding") (r "~2.1.1") (d #t) (k 0)) (d (n "directories") (r "~2.0.2") (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.12.0") (d #t) (k 0)) (d (n "fs2") (r "~0.4.3") (d #t) (k 0)) (d (n "futures") (r "~0.1.17") (d #t) (k 0)) (d (n "lazy_static") (r "~1.2.0") (d #t) (k 0)) (d (n "log") (r "~0.4.1") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.1") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.18.0") (d #t) (k 0)) (d (n "new_rand") (r "^0.6") (d #t) (k 0) (p "rand")) (d (n "quic-p2p") (r "~0.2.1") (d #t) (k 0)) (d (n "rand") (r "~0.3.18") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.10.2") (d #t) (k 0)) (d (n "safe-nd") (r "~0.4.0") (d #t) (k 0)) (d (n "self_encryption") (r "~0.15.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.97") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "~1.0.40") (d #t) (k 0)) (d (n "serde_json") (r "~1.0.9") (d #t) (k 2)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "tokio") (r "~0.1.22") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 0)))) (h "140zkanh0m8073yb0mr5d2rb6qmcfpm01jxv00nzp7zmphi3gwmw") (f (quote (("testing") ("mock-network"))))))

(define-public crate-safe_core-0.35.0 (c (n "safe_core") (v "0.35.0") (d (list (d (n "bincode") (r "~1.1.4") (d #t) (k 0)) (d (n "bytes") (r "~0.4.12") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "~0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "~0.3.9") (d #t) (k 0)) (d (n "data-encoding") (r "~2.1.1") (d #t) (k 0)) (d (n "directories") (r "~2.0.2") (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.12.0") (d #t) (k 0)) (d (n "fs2") (r "~0.4.3") (d #t) (k 0)) (d (n "futures") (r "~0.1.17") (d #t) (k 0)) (d (n "lazy_static") (r "~1.2.0") (d #t) (k 0)) (d (n "log") (r "~0.4.1") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.1") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.18.0") (d #t) (k 0)) (d (n "new_rand") (r "^0.6") (d #t) (k 0) (p "rand")) (d (n "quic-p2p") (r "~0.2.1") (d #t) (k 0)) (d (n "rand") (r "~0.3.18") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.10.2") (d #t) (k 0)) (d (n "safe-nd") (r "~0.4.0") (d #t) (k 0)) (d (n "self_encryption") (r "~0.15.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.97") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "~1.0.40") (d #t) (k 0)) (d (n "serde_json") (r "~1.0.9") (d #t) (k 2)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "tokio") (r "~0.1.22") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 0)))) (h "1dj5pjk4rbgpgnpz8qcgl02zp2p3l5mm0g5n7lx3sdij8x5849j1") (f (quote (("testing") ("mock-network"))))))

(define-public crate-safe_core-0.36.0 (c (n "safe_core") (v "0.36.0") (d (list (d (n "bincode") (r "~1.1.4") (d #t) (k 0)) (d (n "bytes") (r "~0.4.12") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "~0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "~0.3.9") (d #t) (k 0)) (d (n "data-encoding") (r "~2.1.1") (d #t) (k 0)) (d (n "directories") (r "~2.0.2") (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.12.0") (d #t) (k 0)) (d (n "fs2") (r "~0.4.3") (d #t) (k 0)) (d (n "futures") (r "~0.1.17") (d #t) (k 0)) (d (n "lazy_static") (r "~1.2.0") (d #t) (k 0)) (d (n "log") (r "~0.4.8") (d #t) (k 0)) (d (n "log4rs") (r "~0.8.3") (f (quote ("toml_format"))) (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.1") (d #t) (k 0)) (d (n "new_rand") (r "^0.6") (d #t) (k 0) (p "rand")) (d (n "quic-p2p") (r "~0.3.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.18") (d #t) (k 0)) (d (n "regex") (r "~1.3.1") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.10.2") (d #t) (k 0)) (d (n "safe-nd") (r "~0.4.0") (d #t) (k 0)) (d (n "self_encryption") (r "~0.15.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.97") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-value") (r "~0.5.3") (d #t) (k 0)) (d (n "serde_json") (r "~1.0.40") (d #t) (k 0)) (d (n "serde_json") (r "~1.0.9") (d #t) (k 2)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "tokio") (r "~0.1.22") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 0)) (d (n "url") (r "~2.1.0") (d #t) (k 0)) (d (n "ws") (r "~0.9.1") (d #t) (k 0)))) (h "0pzxy30ayf63a2y4h12026ld1fz4l376lvw5rnyzrawvcn7rjyzg") (f (quote (("testing") ("mock-network"))))))

(define-public crate-safe_core-0.37.2 (c (n "safe_core") (v "0.37.2") (d (list (d (n "bincode") (r "~1.1.4") (d #t) (k 0)) (d (n "bytes") (r "~0.4.12") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "~0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "~0.3.9") (d #t) (k 0)) (d (n "data-encoding") (r "~2.1.1") (d #t) (k 0)) (d (n "directories") (r "~2.0.2") (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.14.0") (d #t) (k 0)) (d (n "fs2") (r "~0.4.3") (d #t) (k 0)) (d (n "futures") (r "~0.1.17") (d #t) (k 0)) (d (n "hmac") (r "^0.7.1") (d #t) (k 0)) (d (n "lazy_static") (r "~1.2.0") (d #t) (k 0)) (d (n "log") (r "~0.4.8") (d #t) (k 0)) (d (n "log4rs") (r "~0.8.3") (f (quote ("toml_format"))) (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.1") (d #t) (k 0)) (d (n "miscreant") (r "^0.4.2") (f (quote ("soft-aes"))) (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "quic-p2p") (r "~0.3.0") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "regex") (r "~1.3.1") (d #t) (k 0)) (d (n "safe-nd") (r "~0.6.0") (d #t) (k 0)) (d (n "self_encryption") (r "~0.16.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.97") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "~0.5.3") (d #t) (k 0)) (d (n "serde_json") (r "~1.0.40") (d #t) (k 0)) (d (n "serde_json") (r "~1.0.9") (d #t) (k 2)) (d (n "sha3") (r "^0.8.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "tokio") (r "~0.1.22") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 0)) (d (n "url") (r "~2.1.0") (d #t) (k 0)) (d (n "ws") (r "~0.9.1") (d #t) (k 0)))) (h "0w3ipnn3w4hgaajgj2w0grh0klnx503qssr7pmiqq236gkp27a9x") (f (quote (("testing") ("mock-network"))))))

(define-public crate-safe_core-0.37.3 (c (n "safe_core") (v "0.37.3") (d (list (d (n "bincode") (r "~1.1.4") (d #t) (k 0)) (d (n "bytes") (r "~0.4.12") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "~0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "~0.3.9") (d #t) (k 0)) (d (n "data-encoding") (r "~2.1.1") (d #t) (k 0)) (d (n "directories") (r "~2.0.2") (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.14.0") (d #t) (k 0)) (d (n "fs2") (r "~0.4.3") (d #t) (k 0)) (d (n "futures") (r "~0.1.17") (d #t) (k 0)) (d (n "hmac") (r "^0.7.1") (d #t) (k 0)) (d (n "lazy_static") (r "~1.2.0") (d #t) (k 0)) (d (n "log") (r "~0.4.8") (d #t) (k 0)) (d (n "log4rs") (r "~0.8.3") (f (quote ("toml_format"))) (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.1") (d #t) (k 0)) (d (n "miscreant") (r "^0.4.2") (f (quote ("soft-aes"))) (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "quic-p2p") (r "~0.3.0") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "regex") (r "~1.3.1") (d #t) (k 0)) (d (n "safe-nd") (r "~0.6.0") (d #t) (k 0)) (d (n "self_encryption") (r "~0.16.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.97") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "~0.5.3") (d #t) (k 0)) (d (n "serde_json") (r "~1.0.40") (d #t) (k 0)) (d (n "serde_json") (r "~1.0.9") (d #t) (k 2)) (d (n "sha3") (r "^0.8.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "tokio") (r "~0.1.22") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 0)) (d (n "url") (r "~2.1.0") (d #t) (k 0)) (d (n "ws") (r "~0.9.1") (d #t) (k 0)))) (h "1672y84fqjpzf3053l038j41mb2b3a3qg8fvh2y0f8jiba9ighir") (f (quote (("testing") ("mock-network"))))))

(define-public crate-safe_core-0.38.1 (c (n "safe_core") (v "0.38.1") (d (list (d (n "bincode") (r "~1.1.4") (d #t) (k 0)) (d (n "bytes") (r "~0.4.12") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "~0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "~0.3.9") (d #t) (k 0)) (d (n "data-encoding") (r "~2.1.1") (d #t) (k 0)) (d (n "directories") (r "~2.0.2") (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.15.0") (d #t) (k 0)) (d (n "fs2") (r "~0.4.3") (d #t) (k 0)) (d (n "futures") (r "~0.1.17") (d #t) (k 0)) (d (n "hmac") (r "^0.7.1") (d #t) (k 0)) (d (n "lazy_static") (r "~1.4.0") (d #t) (k 0)) (d (n "log") (r "~0.4.8") (d #t) (k 0)) (d (n "log4rs") (r "~0.8.3") (f (quote ("toml_format"))) (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.1") (d #t) (k 0)) (d (n "miscreant") (r "^0.4.2") (f (quote ("soft-aes"))) (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "quic-p2p") (r "~0.3.0") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "regex") (r "~1.3.1") (d #t) (k 0)) (d (n "safe-nd") (r "~0.6.2") (d #t) (k 0)) (d (n "self_encryption") (r "~0.16.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.97") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "~0.5.3") (d #t) (k 0)) (d (n "serde_json") (r "~1.0.40") (d #t) (k 0)) (d (n "serde_json") (r "~1.0.9") (d #t) (k 2)) (d (n "sha3") (r "^0.8.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "tokio") (r "~0.1.22") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 0)) (d (n "url") (r "~2.1.0") (d #t) (k 0)) (d (n "ws") (r "~0.9.1") (d #t) (k 0)))) (h "0q5fkh28ip7niig11177psn3l7rm0jjsfy166wbyhrax1rbvdxi0") (f (quote (("testing") ("mock-network"))))))

(define-public crate-safe_core-0.39.0 (c (n "safe_core") (v "0.39.0") (d (list (d (n "bincode") (r "~1.1.4") (d #t) (k 0)) (d (n "bytes") (r "~0.4.12") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "~0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "~0.3.9") (d #t) (k 0)) (d (n "data-encoding") (r "~2.1.1") (d #t) (k 0)) (d (n "directories") (r "~2.0.2") (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.15.0") (d #t) (k 0)) (d (n "fs2") (r "~0.4.3") (d #t) (k 0)) (d (n "futures") (r "~0.1.17") (d #t) (k 0)) (d (n "hmac") (r "^0.7.1") (d #t) (k 0)) (d (n "lazy_static") (r "~1.4.0") (d #t) (k 0)) (d (n "log") (r "~0.4.8") (d #t) (k 0)) (d (n "log4rs") (r "~0.8.3") (f (quote ("toml_format"))) (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.1") (d #t) (k 0)) (d (n "miscreant") (r "^0.4.2") (f (quote ("soft-aes"))) (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "quic-p2p") (r "^0.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "regex") (r "~1.3.1") (d #t) (k 0)) (d (n "safe-nd") (r "~0.8.0") (d #t) (k 0)) (d (n "self_encryption") (r "~0.16.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.97") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "~0.5.3") (d #t) (k 0)) (d (n "serde_json") (r "~1.0.40") (d #t) (k 0)) (d (n "serde_json") (r "~1.0.9") (d #t) (k 2)) (d (n "sha3") (r "^0.8.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "tokio") (r "~0.1.22") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 0)) (d (n "url") (r "~2.1.0") (d #t) (k 0)) (d (n "ws") (r "~0.9.1") (d #t) (k 0)))) (h "1y9kq9jdi6g8j6yygmd0i4iixmhn5m9mbhqsybjwc92fvdy5gjl9") (f (quote (("testing") ("mock-network"))))))

(define-public crate-safe_core-0.39.1 (c (n "safe_core") (v "0.39.1") (d (list (d (n "bincode") (r "~1.1.4") (d #t) (k 0)) (d (n "bytes") (r "~0.4.12") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "~0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "~0.3.9") (d #t) (k 0)) (d (n "data-encoding") (r "~2.1.1") (d #t) (k 0)) (d (n "directories") (r "~2.0.2") (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.16.0") (d #t) (k 0)) (d (n "fs2") (r "~0.4.3") (d #t) (k 0)) (d (n "futures") (r "~0.1.17") (d #t) (k 0)) (d (n "hmac") (r "^0.7.1") (d #t) (k 0)) (d (n "lazy_static") (r "~1.4.0") (d #t) (k 0)) (d (n "log") (r "~0.4.8") (d #t) (k 0)) (d (n "log4rs") (r "~0.8.3") (f (quote ("toml_format"))) (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.1") (d #t) (k 0)) (d (n "miscreant") (r "^0.4.2") (f (quote ("soft-aes"))) (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "quic-p2p") (r "^0.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "regex") (r "~1.3.1") (d #t) (k 0)) (d (n "safe-nd") (r "~0.8.0") (d #t) (k 0)) (d (n "self_encryption") (r "~0.16.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.97") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "~0.5.3") (d #t) (k 0)) (d (n "serde_json") (r "~1.0.40") (d #t) (k 0)) (d (n "serde_json") (r "~1.0.9") (d #t) (k 2)) (d (n "sha3") (r "^0.8.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "tokio") (r "~0.1.22") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 0)) (d (n "url") (r "~2.1.0") (d #t) (k 0)) (d (n "ws") (r "~0.9.1") (d #t) (k 0)))) (h "1cxcvhj647nmbzbk61xi5nlifrq9vhwxqlgxljqc3949zv3mpq1g") (f (quote (("testing") ("mock-network"))))))

(define-public crate-safe_core-0.40.0 (c (n "safe_core") (v "0.40.0") (d (list (d (n "bincode") (r "~1.1.4") (d #t) (k 0)) (d (n "bytes") (r "~0.4.12") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "~0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "~0.3.9") (d #t) (k 0)) (d (n "data-encoding") (r "~2.1.1") (d #t) (k 0)) (d (n "directories") (r "~2.0.2") (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.16.0") (d #t) (k 0)) (d (n "fs2") (r "~0.4.3") (d #t) (k 0)) (d (n "futures") (r "~0.1.17") (d #t) (k 0)) (d (n "hmac") (r "^0.7.1") (d #t) (k 0)) (d (n "lazy_static") (r "~1.4.0") (d #t) (k 0)) (d (n "log") (r "~0.4.8") (d #t) (k 0)) (d (n "log4rs") (r "~0.8.3") (f (quote ("toml_format"))) (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.1") (d #t) (k 0)) (d (n "miscreant") (r "^0.4.2") (f (quote ("soft-aes"))) (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "quic-p2p") (r "~0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "regex") (r "~1.3.1") (d #t) (k 0)) (d (n "safe-nd") (r "~0.8.0") (d #t) (k 0)) (d (n "self_encryption") (r "~0.16.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.97") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "~0.5.3") (d #t) (k 0)) (d (n "serde_json") (r "~1.0.40") (d #t) (k 0)) (d (n "serde_json") (r "~1.0.9") (d #t) (k 2)) (d (n "sha3") (r "^0.8.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "tokio") (r "~0.1.22") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 0)) (d (n "url") (r "~2.1.0") (d #t) (k 0)) (d (n "ws") (r "~0.9.1") (d #t) (k 0)))) (h "143f9sx58zys538bs6zryybpbqlcwigb8m6m2gp5b9cjxyb4jpy7") (f (quote (("testing") ("mock-network"))))))

(define-public crate-safe_core-0.41.0 (c (n "safe_core") (v "0.41.0") (d (list (d (n "async-trait") (r "~0.1.30") (d #t) (k 0)) (d (n "bincode") (r "~1.1.4") (d #t) (k 0)) (d (n "bytes") (r "~0.4.12") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "~0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "~0.3.9") (d #t) (k 0)) (d (n "data-encoding") (r "~2.1.1") (d #t) (k 0)) (d (n "directories") (r "~2.0.2") (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.16.0") (d #t) (k 0)) (d (n "fs2") (r "~0.4.3") (d #t) (k 0)) (d (n "futures") (r "~0.3.5") (d #t) (k 0)) (d (n "futures-util") (r "~0.3.4") (d #t) (k 0)) (d (n "hmac") (r "^0.7.1") (d #t) (k 0)) (d (n "lazy_static") (r "~1.4.0") (d #t) (k 0)) (d (n "log") (r "~0.4.8") (d #t) (k 0)) (d (n "log4rs") (r "~0.8.3") (f (quote ("toml_format"))) (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.1") (d #t) (k 0)) (d (n "miscreant") (r "^0.4.2") (f (quote ("soft-aes"))) (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "quic-p2p") (r "~0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "regex") (r "~1.3.1") (d #t) (k 0)) (d (n "safe-nd") (r "~0.8.0") (d #t) (k 0)) (d (n "self_encryption") (r "~0.17.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.97") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "~0.5.3") (d #t) (k 0)) (d (n "serde_json") (r "~1.0.40") (d #t) (k 0)) (d (n "serde_json") (r "~1.0.9") (d #t) (k 2)) (d (n "sha3") (r "^0.8.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "tokio") (r "~0.2.21") (f (quote ("rt-core" "blocking" "stream" "rt-util"))) (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 0)) (d (n "url") (r "~2.1.0") (d #t) (k 0)) (d (n "ws") (r "~0.9.1") (d #t) (k 0)))) (h "0k3qc05njrldk4nhxh8v1fv7dh5lp82qj7qn52wwj6r4hyq5lf2b") (f (quote (("testing") ("mock-network"))))))

(define-public crate-safe_core-0.41.1 (c (n "safe_core") (v "0.41.1") (d (list (d (n "async-trait") (r "~0.1.30") (d #t) (k 0)) (d (n "bincode") (r "~1.1.4") (d #t) (k 0)) (d (n "bytes") (r "~0.5.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "~0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "~0.4.2") (d #t) (k 0)) (d (n "data-encoding") (r "~2.1.1") (d #t) (k 0)) (d (n "directories") (r "~2.0.2") (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.16.0") (d #t) (k 0)) (d (n "fs2") (r "~0.4.3") (d #t) (k 0)) (d (n "futures") (r "~0.3.5") (d #t) (k 0)) (d (n "futures-util") (r "~0.3.4") (d #t) (k 0)) (d (n "hmac") (r "^0.7.1") (d #t) (k 0)) (d (n "lazy_static") (r "~1.4.0") (d #t) (k 0)) (d (n "log") (r "~0.4.8") (d #t) (k 0)) (d (n "log4rs") (r "~0.8.3") (f (quote ("toml_format"))) (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.1") (d #t) (k 0)) (d (n "miscreant") (r "^0.4.2") (f (quote ("soft-aes"))) (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "quic-p2p") (r "~0.6.2") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "regex") (r "~1.3.1") (d #t) (k 0)) (d (n "safe-nd") (r "~0.9.0") (d #t) (k 0)) (d (n "self_encryption") (r "~0.17.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.97") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "~0.5.3") (d #t) (k 0)) (d (n "serde_json") (r "~1.0.40") (d #t) (k 0)) (d (n "serde_json") (r "~1.0.9") (d #t) (k 2)) (d (n "sha3") (r "^0.8.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "tokio") (r "~0.2.21") (f (quote ("rt-core" "blocking" "stream" "rt-util"))) (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 0)) (d (n "url") (r "~2.1.0") (d #t) (k 0)) (d (n "ws") (r "~0.9.1") (d #t) (k 0)))) (h "18h9kvghvi5zrpirq42zpgcr8vq2dyfrviz45nbmfkp1jhp0srw7") (f (quote (("testing") ("mock-network"))))))

(define-public crate-safe_core-0.41.3 (c (n "safe_core") (v "0.41.3") (d (list (d (n "async-trait") (r "~0.1.30") (d #t) (k 0)) (d (n "bincode") (r "~1.1.4") (d #t) (k 0)) (d (n "bytes") (r "~0.5.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "~0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "~0.4.2") (d #t) (k 0)) (d (n "data-encoding") (r "~2.1.1") (d #t) (k 0)) (d (n "directories") (r "~2.0.2") (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.16.0") (d #t) (k 0)) (d (n "fs2") (r "~0.4.3") (d #t) (k 0)) (d (n "futures") (r "~0.3.5") (d #t) (k 0)) (d (n "futures-util") (r "~0.3.4") (d #t) (k 0)) (d (n "hmac") (r "^0.7.1") (d #t) (k 0)) (d (n "lazy_static") (r "~1.4.0") (d #t) (k 0)) (d (n "log") (r "~0.4.8") (d #t) (k 0)) (d (n "log4rs") (r "~0.8.3") (f (quote ("toml_format"))) (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.1") (d #t) (k 0)) (d (n "miscreant") (r "^0.4.2") (f (quote ("soft-aes"))) (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "quic-p2p") (r "~0.6.2") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "regex") (r "~1.3.1") (d #t) (k 0)) (d (n "safe-nd") (r "~0.9.0") (d #t) (k 0)) (d (n "self_encryption") (r "~0.17.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.97") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "~0.5.3") (d #t) (k 0)) (d (n "serde_json") (r "~1.0.40") (d #t) (k 0)) (d (n "serde_json") (r "~1.0.9") (d #t) (k 2)) (d (n "sha3") (r "^0.8.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "tokio") (r "~0.2.21") (f (quote ("rt-core" "blocking" "stream" "rt-util"))) (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 0)) (d (n "url") (r "~2.1.0") (d #t) (k 0)) (d (n "ws") (r "~0.9.1") (d #t) (k 0)))) (h "065nbn1df5y9jzfhf16iwwvza87876i17wa4cpqj3zq8szmsikk2") (f (quote (("testing") ("mock-network"))))))

(define-public crate-safe_core-0.42.0 (c (n "safe_core") (v "0.42.0") (d (list (d (n "async-trait") (r "~0.1.30") (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bytes") (r "~0.5.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "~0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "~0.4.2") (d #t) (k 0)) (d (n "data-encoding") (r "^2.1.1") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.16.0") (d #t) (k 0)) (d (n "fs2") (r "~0.4.3") (d #t) (k 0)) (d (n "futures") (r "~0.3.5") (d #t) (k 0)) (d (n "futures-util") (r "~0.3.4") (d #t) (k 0)) (d (n "hmac") (r "~0.7.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "~0.4.8") (d #t) (k 0)) (d (n "log4rs") (r "~0.8.3") (f (quote ("toml_format"))) (d #t) (k 0)) (d (n "lru") (r "~0.5.1") (d #t) (k 0)) (d (n "miscreant") (r "~0.4.2") (f (quote ("soft-aes"))) (d #t) (k 0)) (d (n "pbkdf2") (r "~0.3.0") (k 0)) (d (n "quic-p2p") (r "~0.7.0") (d #t) (k 0)) (d (n "rand") (r "~0.6") (d #t) (k 0)) (d (n "regex") (r "^1.3.1") (d #t) (k 0)) (d (n "safe-nd") (r "~0.10.1") (d #t) (k 0)) (d (n "self_encryption") (r "~0.18.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.97") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "~0.5.3") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.9") (d #t) (k 2)) (d (n "sha3") (r "~0.8.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.5.0") (d #t) (k 0)) (d (n "tokio") (r "~0.2.21") (f (quote ("rt-core" "blocking" "stream" "rt-util"))) (d #t) (k 0)) (d (n "unwrap") (r "^1.2.0") (d #t) (k 0)) (d (n "url") (r "^2.1.0") (d #t) (k 0)) (d (n "ws") (r "~0.9.1") (d #t) (k 0)))) (h "0s10jhy54mmnj8kaxj1xwnv12dwaln4kp3iszcn6rak9bnkjm0v1") (f (quote (("testing") ("mock-network"))))))

(define-public crate-safe_core-0.42.1 (c (n "safe_core") (v "0.42.1") (d (list (d (n "async-trait") (r "~0.1.30") (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bytes") (r "~0.5.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "~0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "~0.4.2") (d #t) (k 0)) (d (n "data-encoding") (r "^2.1.1") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.17.0") (d #t) (k 0)) (d (n "fs2") (r "~0.4.3") (d #t) (k 0)) (d (n "futures") (r "~0.3.5") (d #t) (k 0)) (d (n "futures-util") (r "~0.3.4") (d #t) (k 0)) (d (n "hmac") (r "~0.7.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "~0.4.8") (d #t) (k 0)) (d (n "log4rs") (r "~0.8.3") (f (quote ("toml_format"))) (d #t) (k 0)) (d (n "lru") (r "~0.5.1") (d #t) (k 0)) (d (n "miscreant") (r "~0.4.2") (f (quote ("soft-aes"))) (d #t) (k 0)) (d (n "pbkdf2") (r "~0.3.0") (k 0)) (d (n "quic-p2p") (r "~0.7.0") (d #t) (k 0)) (d (n "rand") (r "~0.6") (d #t) (k 0)) (d (n "regex") (r "^1.3.1") (d #t) (k 0)) (d (n "safe-nd") (r "~0.10.1") (d #t) (k 0)) (d (n "self_encryption") (r "~0.18.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.97") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "~0.5.3") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.9") (d #t) (k 2)) (d (n "sha3") (r "~0.8.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.5.0") (d #t) (k 0)) (d (n "tokio") (r "~0.2.21") (f (quote ("rt-core" "blocking" "stream" "rt-util"))) (d #t) (k 0)) (d (n "unwrap") (r "^1.2.0") (d #t) (k 0)) (d (n "url") (r "^2.1.0") (d #t) (k 0)) (d (n "ws") (r "~0.9.1") (d #t) (k 0)))) (h "0qfg0b3sn9wnw4zrh2q9ngvjrllvrvk4k3y4988dnrd99gpqxhvm") (f (quote (("testing") ("mock-network"))))))

(define-public crate-safe_core-0.43.0 (c (n "safe_core") (v "0.43.0") (d (list (d (n "async-trait") (r "~0.1.30") (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bytes") (r "~0.5.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "~0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "~0.4.2") (d #t) (k 0)) (d (n "data-encoding") (r "^2.1.1") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.17.0") (d #t) (k 0)) (d (n "fs2") (r "~0.4.3") (d #t) (k 0)) (d (n "futures") (r "~0.3.5") (d #t) (k 0)) (d (n "futures-util") (r "~0.3.4") (d #t) (k 0)) (d (n "hmac") (r "~0.7.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "~0.4.8") (d #t) (k 0)) (d (n "log4rs") (r "~0.8.3") (f (quote ("toml_format"))) (d #t) (k 0)) (d (n "lru") (r "~0.5.1") (d #t) (k 0)) (d (n "miscreant") (r "~0.4.2") (f (quote ("soft-aes"))) (d #t) (k 0)) (d (n "pbkdf2") (r "~0.3.0") (k 0)) (d (n "quic-p2p") (r "~0.7.0") (d #t) (k 0)) (d (n "rand") (r "~0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.3.1") (d #t) (k 0)) (d (n "safe-nd") (r "~0.11.0") (d #t) (k 0)) (d (n "self_encryption") (r "^0.19.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.97") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "~0.5.3") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.9") (d #t) (k 2)) (d (n "sha3") (r "~0.8.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "threshold_crypto") (r "~0.4.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.5.0") (d #t) (k 0)) (d (n "tokio") (r "~0.2.21") (f (quote ("rt-core" "blocking" "stream" "rt-util"))) (d #t) (k 0)) (d (n "unwrap") (r "^1.2.0") (d #t) (k 0)) (d (n "url") (r "^2.1.0") (d #t) (k 0)) (d (n "ws") (r "~0.9.1") (d #t) (k 0)) (d (n "xor_name") (r "^1") (d #t) (k 0)))) (h "0rfj1kfnydbgi8qzsin06nhnqcjp21hp8l0k1n47q9bnvk46c8y9") (f (quote (("testing") ("mock-network"))))))

(define-public crate-safe_core-0.43.1 (c (n "safe_core") (v "0.43.1") (d (list (d (n "async-trait") (r "~0.1.30") (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "bytes") (r "~0.5.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "~0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "~0.4.2") (d #t) (k 0)) (d (n "data-encoding") (r "^2.1.1") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.17.0") (d #t) (k 0)) (d (n "fs2") (r "~0.4.3") (d #t) (k 0)) (d (n "futures") (r "~0.3.5") (d #t) (k 0)) (d (n "futures-util") (r "~0.3.4") (d #t) (k 0)) (d (n "hmac") (r "~0.7.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "~0.4.8") (d #t) (k 0)) (d (n "log4rs") (r "~0.8.3") (f (quote ("toml_format"))) (d #t) (k 0)) (d (n "lru") (r "~0.5.1") (d #t) (k 0)) (d (n "miscreant") (r "~0.4.2") (f (quote ("soft-aes"))) (d #t) (k 0)) (d (n "pbkdf2") (r "~0.3.0") (k 0)) (d (n "quic-p2p") (r "~0.7.0") (d #t) (k 0)) (d (n "rand") (r "~0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.3.1") (d #t) (k 0)) (d (n "safe-nd") (r "~0.11.0") (d #t) (k 0)) (d (n "self_encryption") (r "^0.19.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.97") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "~0.5.3") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.9") (d #t) (k 2)) (d (n "sha3") (r "~0.8.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "threshold_crypto") (r "~0.4.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.5.0") (d #t) (k 0)) (d (n "tokio") (r "~0.2.21") (f (quote ("rt-core" "blocking" "stream" "rt-util"))) (d #t) (k 0)) (d (n "unwrap") (r "^1.2.0") (d #t) (k 0)) (d (n "url") (r "^2.1.0") (d #t) (k 0)) (d (n "ws") (r "~0.9.1") (d #t) (k 0)) (d (n "xor_name") (r "^1") (d #t) (k 0)))) (h "0nvx1g0wvwh3zavzbl8pifqhk3x0vdy56b5f6rqm7186gmk47xp5") (f (quote (("testing") ("mock-network"))))))

