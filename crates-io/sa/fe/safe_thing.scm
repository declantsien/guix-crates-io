(define-module (crates-io sa fe safe_thing) #:use-module (crates-io))

(define-public crate-safe_thing-0.0.1 (c (n "safe_thing") (v "0.0.1") (d (list (d (n "ffi_utils") (r "~0.11.0") (d #t) (k 0)) (d (n "safe_app") (r "~0.9.0") (d #t) (k 0)) (d (n "safe_core") (r "~0.32.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.82") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.82") (d #t) (k 0)) (d (n "serde_json") (r "~1.0.33") (d #t) (k 0)))) (h "1wafddg82p0np9vy97favh02i12yj2parizn1fddbfqh2bzhs2ij") (f (quote (("use-mock-routing" "safe_app/use-mock-routing") ("fake-auth" "safe_app/testing"))))))

(define-public crate-safe_thing-0.0.2 (c (n "safe_thing") (v "0.0.2") (d (list (d (n "env_logger") (r "^0.5.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.5") (d #t) (k 0)) (d (n "safe_app") (r "~0.9.0") (d #t) (k 0)) (d (n "safe_core") (r "~0.32.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.82") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.82") (d #t) (k 0)) (d (n "serde_json") (r "~1.0.33") (d #t) (k 0)))) (h "0dbfj334idc8dxfsbyh3xpiarl1027qi9by8cxpckawi6g3c4as3") (f (quote (("use-mock-routing" "safe_app/use-mock-routing") ("fake-auth" "safe_app/testing"))))))

(define-public crate-safe_thing-0.0.3 (c (n "safe_thing") (v "0.0.3") (d (list (d (n "env_logger") (r "^0.5.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.5") (d #t) (k 0)) (d (n "safe_app") (r "~0.9.0") (d #t) (k 0)) (d (n "safe_core") (r "~0.32.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.82") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.82") (d #t) (k 0)) (d (n "serde_json") (r "~1.0.33") (d #t) (k 0)))) (h "0qdd8kngv5fr5m9854pz19bn090wpb1x3bl71x90bdww5jv5cv09") (f (quote (("use-mock-routing" "safe_app/use-mock-routing") ("fake-auth" "safe_app/testing"))))))

