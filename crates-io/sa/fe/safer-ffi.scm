(define-module (crates-io sa fe safer-ffi) #:use-module (crates-io))

(define-public crate-safer-ffi-0.0.0 (c (n "safer-ffi") (v "0.0.0") (h "0dggkb58pmm45lajrip52014hss38f4mc0lf8qynygiqjzwyp6nx")))

(define-public crate-safer-ffi-0.0.1-alpha-2.0 (c (n "safer-ffi") (v "0.0.1-alpha-2.0") (d (list (d (n "inventory") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (t "cfg(not(target = \"wasm32-unknown-unknown\"))") (k 0)) (d (n "log") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "macro_rules_attribute") (r "^0.0.1") (d #t) (k 2)) (d (n "paste") (r "0.1.*") (d #t) (k 0) (p "mini_paste")) (d (n "proc-macro-hack") (r "^0.5.15") (o #t) (d #t) (k 0)) (d (n "proc_macro") (r "^0.0.1-alpha-1") (d #t) (k 0) (p "safer_ffi-proc_macro")) (d (n "require_unsafe_in_body") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "uninit") (r "=0.3.0") (o #t) (k 0)))) (h "1bq6s00vi9v6dvyspp5zaahjf167j5q1ywcif9digim9dh59g1nl") (f (quote (("std" "alloc") ("proc_macros" "proc_macro/proc_macros" "require_unsafe_in_body" "proc-macro-hack") ("out-refs" "uninit") ("nightly") ("headers" "inventory" "proc_macro/headers" "std") ("derives" "proc_macros") ("default" "std") ("debug_proc_macros" "proc_macros" "proc_macro/verbose-expansions") ("alloc")))) (y #t)))

(define-public crate-safer-ffi-0.0.1 (c (n "safer-ffi") (v "0.0.1") (d (list (d (n "inventory") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (t "cfg(not(target = \"wasm32-unknown-unknown\"))") (k 0)) (d (n "log") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "macro_rules_attribute") (r "^0.0.1") (d #t) (k 2)) (d (n "paste") (r "0.1.*") (d #t) (k 0) (p "mini_paste")) (d (n "proc-macro-hack") (r "^0.5.15") (o #t) (d #t) (k 0)) (d (n "proc_macro") (r "^0.0.1") (d #t) (k 0) (p "safer_ffi-proc_macro")) (d (n "require_unsafe_in_body") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "uninit") (r "=0.3.0") (o #t) (k 0)))) (h "15sdkj7ph918hxh65m36xqmad78d72rjfsxdxm20lyv7wa0bagqi") (f (quote (("std" "alloc") ("proc_macros" "proc_macro/proc_macros" "require_unsafe_in_body" "proc-macro-hack") ("out-refs" "uninit") ("nightly") ("headers" "inventory" "proc_macro/headers" "std") ("derives" "proc_macros") ("default" "std") ("debug_proc_macros" "proc_macros" "proc_macro/verbose-expansions") ("alloc")))) (y #t)))

(define-public crate-safer-ffi-0.0.2 (c (n "safer-ffi") (v "0.0.2") (d (list (d (n "inventory") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (t "cfg(not(target = \"wasm32-unknown-unknown\"))") (k 0)) (d (n "log") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "macro_rules_attribute") (r "^0.0.1") (d #t) (k 2)) (d (n "paste") (r "0.1.*") (d #t) (k 0) (p "mini_paste")) (d (n "proc-macro-hack") (r "^0.5.15") (o #t) (d #t) (k 0)) (d (n "proc_macro") (r "^0.0.2") (d #t) (k 0) (p "safer_ffi-proc_macro")) (d (n "require_unsafe_in_body") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "uninit") (r "=0.3.0") (o #t) (k 0)))) (h "04bx68i8xnmy4clnrscz0rpxxx45zw3xihngndcj371a2x0pmfwy") (f (quote (("std" "alloc") ("proc_macros" "proc_macro/proc_macros" "require_unsafe_in_body" "proc-macro-hack") ("out-refs" "uninit") ("nightly") ("headers" "inventory" "proc_macro/headers" "std") ("derives" "proc_macros") ("default" "std") ("debug_proc_macros" "proc_macros" "proc_macro/verbose-expansions") ("alloc"))))))

(define-public crate-safer-ffi-0.0.3 (c (n "safer-ffi") (v "0.0.3") (d (list (d (n "inventory") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (t "cfg(not(target = \"wasm32-unknown-unknown\"))") (k 0)) (d (n "log") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "macro_rules_attribute") (r "^0.0.1") (d #t) (k 2)) (d (n "paste") (r "0.1.*") (d #t) (k 0) (p "mini_paste")) (d (n "proc-macro-hack") (r "^0.5.15") (o #t) (d #t) (k 0)) (d (n "proc_macro") (r "^0.0.3") (d #t) (k 0) (p "safer_ffi-proc_macro")) (d (n "require_unsafe_in_body") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "uninit") (r "=0.3.0") (o #t) (k 0)))) (h "1hbyw9nkkf03ry5zdv0b3llahkmiyr3rxbqs5rmqwrna5bvldrgz") (f (quote (("std" "alloc") ("proc_macros" "proc_macro/proc_macros" "require_unsafe_in_body" "proc-macro-hack") ("out-refs" "uninit") ("nightly") ("headers" "inventory" "proc_macro/headers" "std") ("derives" "proc_macros") ("default" "std") ("debug_proc_macros" "proc_macros" "proc_macro/verbose-expansions") ("alloc"))))))

(define-public crate-safer-ffi-0.0.4 (c (n "safer-ffi") (v "0.0.4") (d (list (d (n "inventory") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (t "cfg(not(target = \"wasm32-unknown-unknown\"))") (k 0)) (d (n "log") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "macro_rules_attribute") (r "^0.0.1") (d #t) (k 2)) (d (n "paste") (r "0.1.*") (d #t) (k 0) (p "mini_paste")) (d (n "proc-macro-hack") (r "^0.5.15") (o #t) (d #t) (k 0)) (d (n "proc_macro") (r "^0.0.4") (d #t) (k 0) (p "safer_ffi-proc_macro")) (d (n "require_unsafe_in_body") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "uninit") (r "=0.3.0") (o #t) (k 0)))) (h "0zsmdf7bxk1qzb9f5xr059pd7cx9d6nc925jw8476d3x1j9sl1m6") (f (quote (("std" "alloc") ("proc_macros" "proc_macro/proc_macros" "require_unsafe_in_body" "proc-macro-hack") ("out-refs" "uninit") ("nightly") ("headers" "inventory" "proc_macro/headers" "std") ("derives" "proc_macros") ("default" "std") ("debug_proc_macros" "proc_macros" "proc_macro/verbose-expansions") ("alloc"))))))

(define-public crate-safer-ffi-0.0.5 (c (n "safer-ffi") (v "0.0.5") (d (list (d (n "inventory") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (t "cfg(not(target = \"wasm32-unknown-unknown\"))") (k 0)) (d (n "log") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "macro_rules_attribute") (r "^0.0.1") (d #t) (k 2)) (d (n "paste") (r "0.1.*") (d #t) (k 0) (p "mini_paste")) (d (n "proc-macro-hack") (r "^0.5.15") (o #t) (d #t) (k 0)) (d (n "proc_macro") (r "^0.0.5") (d #t) (k 0) (p "safer_ffi-proc_macro")) (d (n "require_unsafe_in_body") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "uninit") (r "=0.3.0") (o #t) (k 0)))) (h "1y2wk9j4cx69gqpv7xk2sh837533nn2vnb2lkzhg6cbins09rb5y") (f (quote (("std" "alloc") ("proc_macros" "proc_macro/proc_macros" "require_unsafe_in_body" "proc-macro-hack") ("out-refs" "uninit") ("nightly") ("headers" "inventory" "proc_macro/headers" "std") ("derives" "proc_macros") ("default" "std") ("debug_proc_macros" "proc_macros" "proc_macro/verbose-expansions") ("alloc"))))))

(define-public crate-safer-ffi-0.0.6 (c (n "safer-ffi") (v "0.0.6") (d (list (d (n "inventory") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (t "cfg(not(target = \"wasm32-unknown-unknown\"))") (k 0)) (d (n "log") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "macro_rules_attribute") (r "^0.0.1") (d #t) (k 2)) (d (n "paste") (r "0.1.*") (d #t) (k 0) (p "mini_paste")) (d (n "proc-macro-hack") (r "^0.5.15") (o #t) (d #t) (k 0)) (d (n "proc_macro") (r "^0.0.6") (d #t) (k 0) (p "safer_ffi-proc_macro")) (d (n "require_unsafe_in_body") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "uninit") (r "= 0.3.0") (o #t) (k 0)))) (h "0bfc7i1kk06dc9jgdg8cky6962s2rfmxbvsb7nlbvnzwr9pirv22") (f (quote (("std" "alloc") ("proc_macros" "proc_macro/proc_macros" "require_unsafe_in_body" "proc-macro-hack") ("out-refs" "uninit") ("nightly") ("headers" "inventory" "proc_macro/headers" "std") ("derives" "proc_macros") ("default" "std") ("debug_proc_macros" "proc_macros" "proc_macro/verbose-expansions") ("alloc"))))))

(define-public crate-safer-ffi-0.0.7-rc1 (c (n "safer-ffi") (v "0.0.7-rc1") (d (list (d (n "inventory") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (t "cfg(not(target = \"wasm32-unknown-unknown\"))") (k 0)) (d (n "log") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "macro_rules_attribute") (r "^0.0.1") (d #t) (k 2)) (d (n "paste") (r "0.1.*") (d #t) (k 0) (p "mini_paste")) (d (n "proc-macro-hack") (r "^0.5.15") (o #t) (d #t) (k 0)) (d (n "proc_macro") (r "^0.0.7-rc1") (d #t) (k 0) (p "safer_ffi-proc_macro")) (d (n "require_unsafe_in_body") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "uninit") (r "=0.3.0") (o #t) (k 0)))) (h "05y443mc9x3gd9zx9dhw9s1ssrbr87jkwhlgnffc3byzc1b966di") (f (quote (("std" "alloc") ("proc_macros" "proc_macro/proc_macros" "require_unsafe_in_body" "proc-macro-hack") ("out-refs" "uninit") ("nightly") ("headers" "inventory" "proc_macro/headers" "std") ("derives" "proc_macros") ("default" "std") ("debug_proc_macros" "proc_macros" "proc_macro/verbose-expansions") ("alloc"))))))

(define-public crate-safer-ffi-0.0.7 (c (n "safer-ffi") (v "0.0.7") (d (list (d (n "inventory") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (t "cfg(not(target = \"wasm32-unknown-unknown\"))") (k 0)) (d (n "log") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "macro_rules_attribute") (r "^0.0.1") (d #t) (k 2)) (d (n "paste") (r "0.1.*") (d #t) (k 0) (p "mini_paste")) (d (n "proc-macro-hack") (r "^0.5.15") (o #t) (d #t) (k 0)) (d (n "proc_macro") (r "^0.0.7") (d #t) (k 0) (p "safer_ffi-proc_macro")) (d (n "require_unsafe_in_body") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "uninit") (r "=0.3.0") (o #t) (k 0)))) (h "08myqs287nqc0b418rvc92rr8lfp8iidfha2hnp5lbqz4z928965") (f (quote (("std" "alloc") ("proc_macros" "proc_macro/proc_macros" "require_unsafe_in_body" "proc-macro-hack") ("out-refs" "uninit") ("nightly") ("headers" "inventory" "proc_macro/headers" "std") ("derives" "proc_macros") ("default" "std") ("debug_proc_macros" "proc_macros" "proc_macro/verbose-expansions") ("alloc"))))))

(define-public crate-safer-ffi-0.0.8 (c (n "safer-ffi") (v "0.0.8") (d (list (d (n "inventory") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (t "cfg(not(target = \"wasm32-unknown-unknown\"))") (k 0)) (d (n "log") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "macro_rules_attribute") (r "^0.0.1") (d #t) (k 2)) (d (n "paste") (r "0.1.*") (d #t) (k 0) (p "mini_paste")) (d (n "proc-macro-hack") (r "^0.5.15") (o #t) (d #t) (k 0)) (d (n "proc_macro") (r "^0.0.8") (d #t) (k 0) (p "safer_ffi-proc_macro")) (d (n "require_unsafe_in_body") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "uninit") (r "=0.3.0") (o #t) (k 0)))) (h "1bcpc6aygrzm7k4bf1j9cyw9yna0nkqrj026aig8vj7wbgcr71hi") (f (quote (("std" "alloc") ("proc_macros" "proc_macro/proc_macros" "require_unsafe_in_body" "proc-macro-hack") ("out-refs" "uninit") ("nightly") ("headers" "inventory" "proc_macro/headers" "std") ("derives" "proc_macros") ("default" "std") ("debug_proc_macros" "proc_macros" "proc_macro/verbose-expansions") ("alloc"))))))

(define-public crate-safer-ffi-0.0.9 (c (n "safer-ffi") (v "0.0.9") (d (list (d (n "inventory") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (t "cfg(not(target = \"wasm32-unknown-unknown\"))") (k 0)) (d (n "log") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "macro_rules_attribute") (r "^0.0.1") (d #t) (k 2)) (d (n "paste") (r "0.1.*") (d #t) (k 0) (p "mini_paste")) (d (n "proc-macro-hack") (r "^0.5.15") (o #t) (d #t) (k 0)) (d (n "require_unsafe_in_body") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "safer_ffi-proc_macro") (r "^0.0.9") (d #t) (k 0)) (d (n "uninit") (r "=0.3.0") (o #t) (k 0)))) (h "10pwxmvd99jr7wcvbmybj9cdcsqmh5y01vhci66zyrydkk1ak7cp") (f (quote (("std" "alloc") ("proc_macros" "safer_ffi-proc_macro/proc_macros" "require_unsafe_in_body" "proc-macro-hack") ("out-refs" "uninit") ("nightly") ("headers" "inventory" "safer_ffi-proc_macro/headers" "std") ("derives" "proc_macros") ("default" "std") ("debug_proc_macros" "proc_macros" "safer_ffi-proc_macro/verbose-expansions") ("alloc"))))))

(define-public crate-safer-ffi-0.0.10-rc1 (c (n "safer-ffi") (v "0.0.10-rc1") (d (list (d (n "inventory") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (t "cfg(not(target = \"wasm32-unknown-unknown\"))") (k 0)) (d (n "log") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "macro_rules_attribute") (r "^0.0.1") (d #t) (k 2)) (d (n "paste") (r "0.1.*") (d #t) (k 0) (p "mini_paste")) (d (n "proc-macro-hack") (r "^0.5.15") (o #t) (d #t) (k 0)) (d (n "require_unsafe_in_body") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "safer_ffi-proc_macro") (r "^0.0.10-rc1") (d #t) (k 0)) (d (n "uninit") (r "=0.3.0") (o #t) (k 0)))) (h "1am7vqpjj7f7nhix81dw3lhwwax6q9lzsj6vpp83lysc298dpnr0") (f (quote (("std" "alloc") ("proc_macros" "safer_ffi-proc_macro/proc_macros" "require_unsafe_in_body" "proc-macro-hack") ("out-refs" "uninit") ("nightly") ("headers" "inventory" "safer_ffi-proc_macro/headers" "std") ("derives" "proc_macros") ("default" "std") ("debug_proc_macros" "proc_macros" "safer_ffi-proc_macro/verbose-expansions") ("alloc"))))))

(define-public crate-safer-ffi-0.0.10 (c (n "safer-ffi") (v "0.0.10") (d (list (d (n "inventory") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (t "cfg(not(target = \"wasm32-unknown-unknown\"))") (k 0)) (d (n "log") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "macro_rules_attribute") (r "^0.0.1") (d #t) (k 2)) (d (n "paste") (r "0.1.*") (d #t) (k 0) (p "mini_paste")) (d (n "proc-macro-hack") (r "^0.5.15") (o #t) (d #t) (k 0)) (d (n "require_unsafe_in_body") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "safer_ffi-proc_macro") (r "^0.0.10") (d #t) (k 0)) (d (n "uninit") (r "=0.3.0") (o #t) (k 0)))) (h "14qi3yifimi0bq1nfyvdrzm4ddnhji6mcc4slj30sa8p6qj11is0") (f (quote (("std" "alloc") ("proc_macros" "safer_ffi-proc_macro/proc_macros" "require_unsafe_in_body" "proc-macro-hack") ("out-refs" "uninit") ("nightly") ("headers" "inventory" "safer_ffi-proc_macro/headers" "std") ("derives" "proc_macros") ("default" "std") ("debug_proc_macros" "proc_macros" "safer_ffi-proc_macro/verbose-expansions") ("alloc"))))))

(define-public crate-safer-ffi-0.1.0-rc1 (c (n "safer-ffi") (v "0.1.0-rc1") (d (list (d (n "async-compat") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "inventory-0-3-1") (r "^0.3.1") (o #t) (d #t) (k 0) (p "inventory")) (d (n "libc") (r "^0.2.66") (t "cfg(not(target = \"wasm32-unknown-unknown\"))") (k 0)) (d (n "log") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "macro_rules_attribute") (r "^0.1.3") (d #t) (k 0)) (d (n "napi") (r "^0.0.3") (o #t) (d #t) (k 0) (p "cratesio-placeholder-package")) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "safer_ffi-proc_macros") (r "^0.1.0-rc1") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "uninit") (r "^0.5.0") (k 0)) (d (n "unwind_safe") (r "^0.1.0") (d #t) (k 0)) (d (n "with_builtin_macros") (r "^0.0.3") (d #t) (k 0)))) (h "1xsv7qc5csf4cnr4jizp7ldspafxrwws4a7wkjb0j2gm5a5b0w3j") (f (quote (("std" "alloc") ("proc_macros") ("nightly") ("js" "async-fn" "headers" "inventory" "napi" "safer_ffi-proc_macros/js" "std") ("internal-tests" "async-fn" "headers" "dyn-traits" "tokio/rt-multi-thread") ("headers" "inventory" "safer_ffi-proc_macros/headers" "std") ("dyn-traits" "safer_ffi-proc_macros/dyn-traits" "std") ("docs" "headers" "default" "nightly" "tokio") ("default" "std") ("debug_proc_macros" "safer_ffi-proc_macros/verbose-expansions") ("c-headers-with-fn-style" "headers") ("async-fn" "safer_ffi-proc_macros/async-fn") ("alloc")))) (s 2) (e (quote (("tokio" "async-compat" "dep:tokio" "futures") ("inventory-0-3-1" "dep:inventory-0-3-1" "safer_ffi-proc_macros/inventory-0-3-1") ("futures" "dep:futures" "dyn-traits"))))))

(define-public crate-safer-ffi-0.1.0 (c (n "safer-ffi") (v "0.1.0") (d (list (d (n "async-compat") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "inventory-0-3-1") (r "^0.3.1") (o #t) (d #t) (k 0) (p "inventory")) (d (n "libc") (r "^0.2.66") (t "cfg(not(target = \"wasm32-unknown-unknown\"))") (k 0)) (d (n "log") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "macro_rules_attribute") (r "^0.1.3") (d #t) (k 0)) (d (n "napi") (r "^0.0.3") (o #t) (d #t) (k 0) (p "cratesio-placeholder-package")) (d (n "once_cell") (r "^1.17.1") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "safer_ffi-proc_macros") (r "=0.1.0") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "uninit") (r "^0.5.0") (k 0)) (d (n "unwind_safe") (r "^0.1.0") (d #t) (k 0)) (d (n "with_builtin_macros") (r "^0.0.3") (d #t) (k 0)))) (h "1hbj6l5ndrgdc8zn30wwp41cr3rmiv21pkixi3q72jhbiid69zb2") (f (quote (("std" "alloc") ("python-headers" "headers") ("proc_macros") ("nightly") ("internal-tests" "async-fn" "headers" "python-headers" "dyn-traits" "tokio/rt-multi-thread") ("headers" "inventory" "safer_ffi-proc_macros/headers" "std") ("dyn-traits" "safer_ffi-proc_macros/dyn-traits" "std") ("docs" "headers" "default" "nightly" "tokio") ("default" "std") ("debug_proc_macros" "safer_ffi-proc_macros/verbose-expansions") ("c-headers-with-fn-style" "headers") ("async-fn" "safer_ffi-proc_macros/async-fn") ("alloc")))) (s 2) (e (quote (("tokio" "async-compat" "dep:tokio" "futures") ("js" "async-fn" "dep:once_cell" "headers" "inventory" "napi" "safer_ffi-proc_macros/js" "std") ("inventory-0-3-1" "dep:inventory-0-3-1" "safer_ffi-proc_macros/inventory-0-3-1") ("futures" "dep:futures" "dyn-traits"))))))

(define-public crate-safer-ffi-0.1.1 (c (n "safer-ffi") (v "0.1.1") (d (list (d (n "async-compat") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "inventory-0-3-1") (r "^0.3.1") (o #t) (d #t) (k 0) (p "inventory")) (d (n "libc") (r "^0.2.66") (t "cfg(not(target = \"wasm32-unknown-unknown\"))") (k 0)) (d (n "log") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "macro_rules_attribute") (r "^0.1.3") (d #t) (k 0)) (d (n "napi") (r "^0.0.3") (o #t) (d #t) (k 0) (p "cratesio-placeholder-package")) (d (n "once_cell") (r "^1.17.1") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "safer_ffi-proc_macros") (r "=0.1.1") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1.0") (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "uninit") (r "^0.5.0") (k 0)) (d (n "unwind_safe") (r "^0.1.0") (d #t) (k 0)) (d (n "with_builtin_macros") (r "^0.0.3") (d #t) (k 0)))) (h "0ci4qgz3g8dlxi3yrhfbpzalwzya4n0wsl05idgw9gz5zciiyyhf") (f (quote (("std" "alloc" "scopeguard/use_std") ("python-headers" "headers") ("proc_macros") ("nightly") ("internal-tests" "async-fn" "headers" "python-headers" "dyn-traits" "tokio/rt-multi-thread") ("headers" "inventory" "safer_ffi-proc_macros/headers" "std") ("dyn-traits" "safer_ffi-proc_macros/dyn-traits" "std") ("docs" "headers" "default" "nightly" "tokio") ("default" "std") ("debug_proc_macros" "safer_ffi-proc_macros/verbose-expansions") ("c-headers-with-fn-style" "headers") ("async-fn" "safer_ffi-proc_macros/async-fn") ("alloc")))) (s 2) (e (quote (("tokio" "async-compat" "dep:tokio" "futures") ("js" "async-fn" "dep:once_cell" "headers" "inventory" "napi" "safer_ffi-proc_macros/js" "std") ("inventory-0-3-1" "dep:inventory-0-3-1" "safer_ffi-proc_macros/inventory-0-3-1") ("futures" "dep:futures" "dyn-traits"))))))

(define-public crate-safer-ffi-0.1.2 (c (n "safer-ffi") (v "0.1.2") (d (list (d (n "async-compat") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "inventory-0-3-1") (r "^0.3.1") (o #t) (d #t) (k 0) (p "inventory")) (d (n "libc") (r "^0.2.66") (k 0)) (d (n "log") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "macro_rules_attribute") (r "^0.1.3") (d #t) (k 0)) (d (n "napi") (r "^0.0.3") (o #t) (d #t) (k 0) (p "cratesio-placeholder-package")) (d (n "once_cell") (r "^1.17.1") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "safer_ffi-proc_macros") (r "=0.1.2") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1.0") (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "uninit") (r "^0.5.0") (k 0)) (d (n "unwind_safe") (r "^0.1.0") (d #t) (k 0)) (d (n "with_builtin_macros") (r "^0.0.3") (d #t) (k 0)))) (h "0r65czdgj80g4cm3yqrh78p2ywngl7zpyld9pardm61myg9g2isg") (f (quote (("std" "alloc" "scopeguard/use_std") ("python-headers" "headers") ("proc_macros") ("nightly") ("internal-tests" "async-fn" "headers" "python-headers" "dyn-traits" "tokio/rt-multi-thread") ("headers" "inventory" "safer_ffi-proc_macros/headers" "std") ("dyn-traits" "safer_ffi-proc_macros/dyn-traits" "std") ("docs" "headers" "default" "nightly" "tokio") ("default" "std") ("debug_proc_macros" "safer_ffi-proc_macros/verbose-expansions") ("c-headers-with-fn-style" "headers") ("async-fn" "safer_ffi-proc_macros/async-fn") ("alloc")))) (s 2) (e (quote (("tokio" "async-compat" "dep:tokio" "futures") ("js" "async-fn" "dep:once_cell" "headers" "inventory" "napi" "safer_ffi-proc_macros/js" "std") ("inventory-0-3-1" "dep:inventory-0-3-1" "safer_ffi-proc_macros/inventory-0-3-1") ("futures" "dep:futures" "dyn-traits"))))))

(define-public crate-safer-ffi-0.1.3 (c (n "safer-ffi") (v "0.1.3") (d (list (d (n "async-compat") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "inventory-0-3-1") (r "^0.3.1") (o #t) (d #t) (k 0) (p "inventory")) (d (n "libc") (r "^0.2.66") (k 0)) (d (n "log") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "macro_rules_attribute") (r "^0.1.3") (d #t) (k 0)) (d (n "napi") (r "^0.0.3") (o #t) (d #t) (k 0) (p "cratesio-placeholder-package")) (d (n "once_cell") (r "^1.17.1") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "safer_ffi-proc_macros") (r "=0.1.3") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1.0") (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "uninit") (r "^0.5.0") (k 0)) (d (n "unwind_safe") (r "^0.1.0") (d #t) (k 0)) (d (n "with_builtin_macros") (r "^0.0.3") (d #t) (k 0)))) (h "1b91lhf9ha72j6lm74lfgy592sbjzc2v3ir1sj68kacc52dx3hg9") (f (quote (("std" "alloc" "scopeguard/use_std") ("python-headers" "headers") ("proc_macros") ("nightly") ("internal-tests" "async-fn" "headers" "python-headers" "dyn-traits" "tokio/rt-multi-thread") ("headers" "inventory" "safer_ffi-proc_macros/headers" "std") ("dyn-traits" "safer_ffi-proc_macros/dyn-traits" "std") ("docs" "headers" "default" "nightly" "tokio") ("default" "std") ("debug_proc_macros" "safer_ffi-proc_macros/verbose-expansions") ("c-headers-with-fn-style" "headers") ("async-fn" "safer_ffi-proc_macros/async-fn") ("alloc")))) (s 2) (e (quote (("tokio" "async-compat" "dep:tokio" "futures") ("js" "async-fn" "dep:once_cell" "headers" "inventory" "napi" "safer_ffi-proc_macros/js" "std") ("inventory-0-3-1" "dep:inventory-0-3-1" "safer_ffi-proc_macros/inventory-0-3-1") ("futures" "dep:futures" "dyn-traits"))))))

(define-public crate-safer-ffi-0.1.4 (c (n "safer-ffi") (v "0.1.4") (d (list (d (n "async-compat") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "inventory-0-3-1") (r "^0.3.1") (o #t) (d #t) (k 0) (p "inventory")) (d (n "libc") (r "^0.2.66") (k 0)) (d (n "log") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "macro_rules_attribute") (r "^0.1.3") (d #t) (k 0)) (d (n "napi") (r "^0.0.3") (o #t) (d #t) (k 0) (p "cratesio-placeholder-package")) (d (n "once_cell") (r "^1.17.1") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "safer_ffi-proc_macros") (r "=0.1.4") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1.0") (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "uninit") (r "^0.5.0") (k 0)) (d (n "unwind_safe") (r "^0.1.0") (d #t) (k 0)) (d (n "with_builtin_macros") (r "^0.0.3") (d #t) (k 0)))) (h "04bwadm1l4y5mqy5y0a4nqn5nlj5p775l9d8ihkcfacnzxdcwnir") (f (quote (("std" "alloc" "scopeguard/use_std") ("python-headers" "headers") ("proc_macros") ("nightly") ("internal-tests" "async-fn" "headers" "python-headers" "dyn-traits" "tokio/rt-multi-thread") ("headers" "inventory" "safer_ffi-proc_macros/headers" "std") ("dyn-traits" "safer_ffi-proc_macros/dyn-traits" "std") ("docs" "headers" "default" "nightly" "tokio") ("default" "std") ("debug_proc_macros" "safer_ffi-proc_macros/verbose-expansions") ("c-headers-with-fn-style" "headers") ("async-fn" "safer_ffi-proc_macros/async-fn") ("alloc")))) (s 2) (e (quote (("tokio" "async-compat" "dep:tokio" "futures") ("js" "async-fn" "dep:once_cell" "headers" "inventory" "napi" "safer_ffi-proc_macros/js" "std") ("inventory-0-3-1" "dep:inventory-0-3-1" "safer_ffi-proc_macros/inventory-0-3-1") ("futures" "dep:futures" "dyn-traits"))))))

(define-public crate-safer-ffi-0.1.5 (c (n "safer-ffi") (v "0.1.5") (d (list (d (n "async-compat") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "inventory-0-3-1") (r "^0.3.1") (o #t) (d #t) (k 0) (p "inventory")) (d (n "libc") (r "^0.2.66") (k 0)) (d (n "log") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "macro_rules_attribute") (r "^0.1.3") (d #t) (k 0)) (d (n "napi") (r "^0.0.3") (o #t) (d #t) (k 0) (p "cratesio-placeholder-package")) (d (n "once_cell") (r "^1.17.1") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "safer_ffi-proc_macros") (r "=0.1.5") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1.0") (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "uninit") (r "^0.5.0") (k 0)) (d (n "unwind_safe") (r "^0.1.0") (d #t) (k 0)) (d (n "with_builtin_macros") (r "^0.0.3") (d #t) (k 0)))) (h "00rh62gr7rkjnpf4xc7iw4prxq03j0654fp7jz1d48pj8ymwb0s4") (f (quote (("std" "alloc" "scopeguard/use_std") ("python-headers" "headers") ("proc_macros") ("nightly") ("internal-tests" "async-fn" "headers" "python-headers" "dyn-traits" "tokio/rt-multi-thread") ("headers" "inventory" "safer_ffi-proc_macros/headers" "std") ("dyn-traits" "safer_ffi-proc_macros/dyn-traits" "std") ("docs" "headers" "default" "nightly" "tokio") ("default" "std") ("debug_proc_macros" "safer_ffi-proc_macros/verbose-expansions") ("c-headers-with-fn-style" "headers") ("async-fn" "safer_ffi-proc_macros/async-fn") ("alloc")))) (s 2) (e (quote (("tokio" "async-compat" "dep:tokio" "futures") ("js" "async-fn" "dep:once_cell" "headers" "inventory" "napi" "safer_ffi-proc_macros/js" "std") ("inventory-0-3-1" "dep:inventory-0-3-1" "safer_ffi-proc_macros/inventory-0-3-1") ("futures" "dep:futures" "dyn-traits"))))))

(define-public crate-safer-ffi-0.1.6 (c (n "safer-ffi") (v "0.1.6") (d (list (d (n "async-compat") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "inventory-0-3-1") (r "^0.3.1") (o #t) (d #t) (k 0) (p "inventory")) (d (n "libc") (r "^0.2.66") (k 0)) (d (n "log") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "macro_rules_attribute") (r "^0.1.3") (d #t) (k 0)) (d (n "napi") (r "^0.0.3") (o #t) (d #t) (k 0) (p "cratesio-placeholder-package")) (d (n "once_cell") (r "^1.17.1") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "safer_ffi-proc_macros") (r "=0.1.6") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1.0") (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "uninit") (r "^0.5.0") (k 0)) (d (n "unwind_safe") (r "^0.1.0") (d #t) (k 0)) (d (n "with_builtin_macros") (r "^0.0.3") (d #t) (k 0)))) (h "16bzasyxqpfck665z42aqdk8v5z6zk0yip5dm8bvq7p2jzzrwlwk") (f (quote (("std" "alloc" "scopeguard/use_std") ("python-headers" "headers") ("proc_macros") ("nightly") ("internal-tests" "async-fn" "headers" "python-headers" "dyn-traits" "tokio/rt-multi-thread") ("headers" "inventory" "safer_ffi-proc_macros/headers" "std") ("dyn-traits" "safer_ffi-proc_macros/dyn-traits" "std") ("docs" "headers" "default" "nightly" "tokio") ("default" "std") ("debug_proc_macros" "safer_ffi-proc_macros/verbose-expansions") ("c-headers-with-fn-style" "headers") ("async-fn" "safer_ffi-proc_macros/async-fn") ("alloc")))) (s 2) (e (quote (("tokio" "async-compat" "dep:tokio" "futures") ("js" "async-fn" "dep:once_cell" "headers" "inventory" "napi" "safer_ffi-proc_macros/js" "std") ("inventory-0-3-1" "dep:inventory-0-3-1" "safer_ffi-proc_macros/inventory-0-3-1") ("futures" "dep:futures" "dyn-traits"))))))

(define-public crate-safer-ffi-0.1.7 (c (n "safer-ffi") (v "0.1.7") (d (list (d (n "async-compat") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (k 0)) (d (n "log") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "macro_rules_attribute") (r "^0.1.3") (d #t) (k 0)) (d (n "napi") (r "^0.0.3") (o #t) (d #t) (k 0) (p "cratesio-placeholder-package")) (d (n "once_cell") (r "^1.17.1") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "safer_ffi-proc_macros") (r "=0.1.7") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1.0") (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "uninit") (r "^0.5.0") (k 0)) (d (n "unwind_safe") (r "^0.1.0") (d #t) (k 0)) (d (n "with_builtin_macros") (r "^0.0.3") (d #t) (k 0)))) (h "0cv35q8pvv48s92ydv12r0rm5xk81sx8j5vkbkfjjbyz1ccgkq01") (f (quote (("std" "alloc" "scopeguard/use_std") ("python-headers" "headers") ("proc_macros") ("nightly") ("inventory-0-3-1") ("internal-tests" "async-fn" "headers" "python-headers" "dyn-traits" "tokio/rt-multi-thread") ("headers" "inventory" "safer_ffi-proc_macros/headers" "std") ("dyn-traits" "safer_ffi-proc_macros/dyn-traits" "std") ("docs" "headers" "default" "nightly" "tokio") ("default" "std") ("debug_proc_macros" "safer_ffi-proc_macros/verbose-expansions") ("c-headers-with-fn-style" "headers") ("async-fn" "safer_ffi-proc_macros/async-fn") ("alloc")))) (s 2) (e (quote (("tokio" "async-compat" "dep:tokio" "futures") ("js" "async-fn" "dep:once_cell" "headers" "inventory" "napi" "safer_ffi-proc_macros/js" "std") ("futures" "dep:futures" "dyn-traits"))))))

(define-public crate-safer-ffi-0.1.8 (c (n "safer-ffi") (v "0.1.8") (d (list (d (n "async-compat") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (k 0)) (d (n "log") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "macro_rules_attribute") (r "^0.1.3") (d #t) (k 0)) (d (n "napi") (r "^0.0.3") (o #t) (d #t) (k 0) (p "cratesio-placeholder-package")) (d (n "once_cell") (r "^1.17.1") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "safer_ffi-proc_macros") (r "=0.1.8") (d #t) (k 0)) (d (n "scopeguard") (r "^1.1.0") (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "uninit") (r "^0.5.0") (k 0)) (d (n "unwind_safe") (r "^0.1.0") (d #t) (k 0)) (d (n "with_builtin_macros") (r "^0.0.3") (d #t) (k 0)))) (h "1l1s3q37nbv0wcpb4mml0rh80k0z9f1nnsajmybgnhfwff3sxas4") (f (quote (("std" "alloc" "scopeguard/use_std") ("python-headers" "headers") ("proc_macros") ("nightly") ("inventory-0-3-1") ("internal-tests" "async-fn" "headers" "python-headers" "dyn-traits" "tokio/rt-multi-thread") ("headers" "inventory" "safer_ffi-proc_macros/headers" "std") ("dyn-traits" "safer_ffi-proc_macros/dyn-traits" "std") ("docs" "headers" "default" "nightly" "tokio") ("default" "std") ("debug_proc_macros" "safer_ffi-proc_macros/verbose-expansions") ("c-headers-with-fn-style" "headers") ("async-fn" "safer_ffi-proc_macros/async-fn") ("alloc")))) (s 2) (e (quote (("tokio" "async-compat" "dep:tokio" "futures") ("js" "async-fn" "dep:once_cell" "headers" "inventory" "napi" "safer_ffi-proc_macros/js" "std") ("futures" "dep:futures" "dyn-traits"))))))

