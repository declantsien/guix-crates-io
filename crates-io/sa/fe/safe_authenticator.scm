(define-module (crates-io sa fe safe_authenticator) #:use-module (crates-io))

(define-public crate-safe_authenticator-0.1.0 (c (n "safe_authenticator") (v "0.1.0") (d (list (d (n "config_file_handler") (r "~0.7.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.1.0") (d #t) (k 0)) (d (n "futures") (r "~0.1.14") (d #t) (k 0)) (d (n "log") (r "~0.3.7") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.13.0") (d #t) (k 0)) (d (n "routing") (r "~0.31.0") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.3.0") (d #t) (k 0)) (d (n "safe_core") (r "~0.24.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.9") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.9") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.2.1") (d #t) (k 0)) (d (n "tokio-core") (r "~0.1.8") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)))) (h "0k3xkn4qgmr3sqklml52bbdir96zqzckz9997b2a353h9jdxmgcb") (f (quote (("use-mock-routing" "safe_core/use-mock-routing") ("testing" "safe_core/testing"))))))

(define-public crate-safe_authenticator-0.2.1 (c (n "safe_authenticator") (v "0.2.1") (d (list (d (n "config_file_handler") (r "~0.8.1") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.2.0") (d #t) (k 0)) (d (n "futures") (r "~0.1.14") (d #t) (k 0)) (d (n "log") (r "~0.3.7") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.14.0") (d #t) (k 0)) (d (n "routing") (r "~0.32.2") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.5.0") (d #t) (k 0)) (d (n "safe_core") (r "~0.25.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.11") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.11") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.3.1") (d #t) (k 0)) (d (n "tokio-core") (r "~0.1.8") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)))) (h "112ak8gv5n03is6zpxzsnlkgn4fcinfk924s9kx0yyz7xljls3zj") (f (quote (("use-mock-routing" "safe_core/use-mock-routing") ("testing" "safe_core/testing"))))))

(define-public crate-safe_authenticator-0.3.0 (c (n "safe_authenticator") (v "0.3.0") (d (list (d (n "config_file_handler") (r "~0.8.1") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.2.0") (d #t) (k 0)) (d (n "futures") (r "~0.1.14") (d #t) (k 0)) (d (n "log") (r "~0.3.7") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.14.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.15") (d #t) (k 2)) (d (n "routing") (r "~0.33.0") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.5.0") (d #t) (k 0)) (d (n "safe_core") (r "~0.26.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.11") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.11") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.3.1") (d #t) (k 0)) (d (n "tokio-core") (r "~0.1.8") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)))) (h "145c3g174zwlpf8zgv2ka72mc0sb0px1svmllifjnhjvnadnb4in") (f (quote (("use-mock-routing" "safe_core/use-mock-routing") ("testing" "safe_core/testing"))))))

(define-public crate-safe_authenticator-0.3.1 (c (n "safe_authenticator") (v "0.3.1") (d (list (d (n "config_file_handler") (r "~0.8.1") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.2.0") (d #t) (k 0)) (d (n "futures") (r "~0.1.15") (d #t) (k 0)) (d (n "log") (r "~0.3.7") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.14.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.15") (d #t) (k 0)) (d (n "routing") (r "~0.33.1") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.5.0") (d #t) (k 0)) (d (n "safe_core") (r "~0.26.1") (d #t) (k 0)) (d (n "serde") (r "~1.0.11") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.11") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.3.1") (d #t) (k 0)) (d (n "tokio-core") (r "~0.1.9") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)))) (h "09wk9j5f9dkmmz772ff9vsdqdmmn34c7cr4vgqsx6lw8nkr3bv12") (f (quote (("use-mock-routing" "safe_core/use-mock-routing") ("testing" "safe_core/testing"))))))

(define-public crate-safe_authenticator-0.3.2 (c (n "safe_authenticator") (v "0.3.2") (d (list (d (n "config_file_handler") (r "~0.8.1") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.2.0") (d #t) (k 0)) (d (n "futures") (r "~0.1.15") (d #t) (k 0)) (d (n "log") (r "~0.3.7") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.14.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.15") (d #t) (k 0)) (d (n "routing") (r "~0.33.2") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.5.0") (d #t) (k 0)) (d (n "safe_core") (r "~0.26.2") (d #t) (k 0)) (d (n "serde") (r "~1.0.11") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.11") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.3.1") (d #t) (k 0)) (d (n "tokio-core") (r "~0.1.9") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)))) (h "1019sshj2lkgcmy35c5w0i4mjzspavh173c4wyxm912nkfcl6bzh") (f (quote (("use-mock-routing" "safe_core/use-mock-routing") ("testing" "safe_core/testing"))))))

(define-public crate-safe_authenticator-0.4.0 (c (n "safe_authenticator") (v "0.4.0") (d (list (d (n "config_file_handler") (r "~0.8.2") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.3.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.3.0") (d #t) (k 1)) (d (n "futures") (r "~0.1.15") (d #t) (k 0)) (d (n "log") (r "~0.3.7") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.14.1") (d #t) (k 0)) (d (n "rand") (r "~0.3.15") (d #t) (k 0)) (d (n "routing") (r "~0.33.2") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.5.0") (d #t) (k 0)) (d (n "safe_core") (r "~0.27.0") (d #t) (k 0)) (d (n "safe_core") (r "~0.27.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "serde") (r "~1.0.11") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.11") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.3.1") (d #t) (k 0)) (d (n "tokio-core") (r "~0.1.9") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 1)))) (h "11157d01zn9ilvk2jf0apsm3l1p6w0l3gaw2m4w6kzsk4n15plmy") (f (quote (("use-mock-routing" "testing" "safe_core/use-mock-routing") ("testing" "safe_core/testing"))))))

(define-public crate-safe_authenticator-0.5.0 (c (n "safe_authenticator") (v "0.5.0") (d (list (d (n "config_file_handler") (r "~0.8.3") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.4.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.4.0") (d #t) (k 1)) (d (n "futures") (r "~0.1.15") (d #t) (k 0)) (d (n "log") (r "~0.3.7") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.14.1") (d #t) (k 0)) (d (n "rand") (r "~0.3.18") (d #t) (k 0)) (d (n "routing") (r "~0.34.0") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.6.0") (d #t) (k 0)) (d (n "safe_core") (r "~0.28.0") (d #t) (k 0)) (d (n "safe_core") (r "~0.28.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "serde") (r "~1.0.24") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.24") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.3.1") (d #t) (k 0)) (d (n "tokio-core") (r "~0.1.9") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 1)))) (h "0bzjdjnq056jwadrf4933x9k3y22jjhh8hz0rbys164wz4kf9pna") (f (quote (("use-mock-routing" "testing" "safe_core/use-mock-routing") ("testing" "safe_core/testing"))))))

(define-public crate-safe_authenticator-0.6.0 (c (n "safe_authenticator") (v "0.6.0") (d (list (d (n "config_file_handler") (r "~0.9.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.5.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.5.0") (d #t) (k 1)) (d (n "futures") (r "~0.1.17") (d #t) (k 0)) (d (n "log") (r "~0.4.1") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.15.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.18") (d #t) (k 0)) (d (n "routing") (r "~0.35.0") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.7.0") (d #t) (k 0)) (d (n "safe_core") (r "~0.29.0") (d #t) (k 0)) (d (n "safe_core") (r "~0.29.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "serde") (r "~1.0.27") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.27") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.3.1") (d #t) (k 0)) (d (n "tokio-core") (r "~0.1.12") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 1)))) (h "074rdp9ln577hrbh4pq7bljz6vmpz7myc2gv28gm0hglnq9rpgjd") (f (quote (("use-mock-routing" "testing" "safe_core/use-mock-routing") ("testing" "safe_core/testing"))))))

(define-public crate-safe_authenticator-0.7.0 (c (n "safe_authenticator") (v "0.7.0") (d (list (d (n "config_file_handler") (r "~0.9.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.6.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.6.0") (d #t) (k 1)) (d (n "futures") (r "~0.1.17") (d #t) (k 0)) (d (n "jni") (r "~0.10.1") (o #t) (d #t) (k 0)) (d (n "jni") (r "~0.10.1") (d #t) (k 1)) (d (n "log") (r "~0.4.1") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.15.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.18") (d #t) (k 0)) (d (n "routing") (r "~0.35.0") (d #t) (k 0)) (d (n "routing") (r "~0.35.0") (d #t) (k 1)) (d (n "rust_sodium") (r "~0.7.0") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.7.0") (d #t) (k 1)) (d (n "safe_bindgen") (r "~0.5.0") (d #t) (k 1)) (d (n "safe_core") (r "~0.30.0") (d #t) (k 0)) (d (n "safe_core") (r "~0.30.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "serde") (r "~1.0.27") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.27") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.3.1") (d #t) (k 0)) (d (n "tokio-core") (r "~0.1.12") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 1)))) (h "00645z7qazmpd35xjp7virc03dlk2arl3zfymmi4kanh0545rrx4") (f (quote (("use-mock-routing" "testing" "safe_core/use-mock-routing") ("testing" "safe_core/testing") ("bindings"))))))

(define-public crate-safe_authenticator-0.8.0 (c (n "safe_authenticator") (v "0.8.0") (d (list (d (n "config_file_handler") (r "~0.9.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.6.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.6.0") (d #t) (k 1)) (d (n "futures") (r "~0.1.17") (d #t) (k 0)) (d (n "jni") (r "~0.10.1") (o #t) (d #t) (k 0)) (d (n "jni") (r "~0.10.1") (d #t) (k 1)) (d (n "log") (r "~0.4.1") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.1") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.15.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.18") (d #t) (k 0)) (d (n "routing") (r "~0.35.0") (d #t) (k 0)) (d (n "routing") (r "~0.35.0") (d #t) (k 1)) (d (n "rust_sodium") (r "~0.7.0") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.7.0") (d #t) (k 1)) (d (n "safe_bindgen") (r "~0.5.0") (d #t) (k 1)) (d (n "safe_core") (r "~0.31.0") (d #t) (k 0)) (d (n "safe_core") (r "~0.31.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "serde") (r "~1.0.27") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.27") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.3.1") (d #t) (k 0)) (d (n "tokio-core") (r "~0.1.12") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 1)))) (h "1fj9vf9sy3xqr8xp514yw748iyj0w4xppd9a27372kslcg4gf3xc") (f (quote (("use-mock-routing" "testing" "safe_core/use-mock-routing") ("testing" "safe_core/testing") ("bindings"))))))

(define-public crate-safe_authenticator-0.9.0 (c (n "safe_authenticator") (v "0.9.0") (d (list (d (n "config_file_handler") (r "~0.11.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.11.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.11.0") (d #t) (k 1)) (d (n "futures") (r "~0.1.17") (d #t) (k 0)) (d (n "jni") (r "~0.10.2") (o #t) (d #t) (k 0)) (d (n "jni") (r "~0.10.1") (d #t) (k 1)) (d (n "log") (r "~0.4.1") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.1") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.16.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.18") (d #t) (k 0)) (d (n "routing") (r "~0.37.0") (d #t) (k 0)) (d (n "routing") (r "~0.37.0") (d #t) (k 1)) (d (n "rust_sodium") (r "~0.10.0") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.10.0") (d #t) (k 1)) (d (n "safe_bindgen") (r "~0.11.0") (d #t) (k 1)) (d (n "safe_core") (r "~0.32.0") (d #t) (k 0)) (d (n "safe_core") (r "~0.32.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "serde") (r "~1.0.27") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.27") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.3.1") (d #t) (k 0)) (d (n "tokio-core") (r "~0.1.17") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 1)))) (h "1l94a8g7h4q8pml0302712xfdaaxp7a88nkh6rkvlfb4yz2cbkjg") (f (quote (("use-mock-routing" "testing" "safe_core/use-mock-routing") ("testing" "safe_core/testing") ("bindings"))))))

(define-public crate-safe_authenticator-0.10.0 (c (n "safe_authenticator") (v "0.10.0") (d (list (d (n "bincode") (r "~1.1.4") (d #t) (k 0)) (d (n "config_file_handler") (r "~0.11.0") (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (d #t) (k 2)) (d (n "ffi_utils") (r "~0.12.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.12.0") (d #t) (k 1)) (d (n "futures") (r "~0.1.17") (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (o #t) (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (d #t) (k 1)) (d (n "log") (r "~0.4.1") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.1") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.18.0") (d #t) (k 0)) (d (n "new_rand") (r "^0.6") (d #t) (k 0) (p "rand")) (d (n "quic-p2p") (r "~0.2.1") (d #t) (k 0)) (d (n "rand") (r "~0.3.18") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.10.2") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.10.2") (d #t) (k 1)) (d (n "safe-nd") (r "~0.3.0") (d #t) (k 0)) (d (n "safe_bindgen") (r "~0.13.0") (o #t) (d #t) (k 1)) (d (n "safe_core") (r "~0.33.0") (d #t) (k 0)) (d (n "safe_core") (r "~0.33.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "serde") (r "~1.0.97") (f (quote ("derive"))) (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "tokio") (r "~0.1.22") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 1)))) (h "08k7jh4qjxcj6s25wppjpp6lkawrz1r0rrzdhhq3pgija3pza6jq") (f (quote (("testing" "safe_core/testing" "env_logger") ("mock-network" "testing" "safe_core/mock-network") ("bindings" "safe_bindgen"))))))

(define-public crate-safe_authenticator-0.10.1 (c (n "safe_authenticator") (v "0.10.1") (d (list (d (n "bincode") (r "~1.1.4") (d #t) (k 0)) (d (n "config_file_handler") (r "~0.11.0") (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (d #t) (k 2)) (d (n "ffi_utils") (r "~0.12.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.12.0") (d #t) (k 1)) (d (n "futures") (r "~0.1.17") (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (o #t) (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (d #t) (k 1)) (d (n "log") (r "~0.4.1") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.1") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.18.0") (d #t) (k 0)) (d (n "new_rand") (r "^0.6") (d #t) (k 0) (p "rand")) (d (n "quic-p2p") (r "~0.2.1") (d #t) (k 0)) (d (n "rand") (r "~0.3.18") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.10.2") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.10.2") (d #t) (k 1)) (d (n "safe-nd") (r "~0.4.0") (d #t) (k 0)) (d (n "safe-nd") (r "~0.4.0") (d #t) (k 1)) (d (n "safe_bindgen") (r "~0.13.1") (o #t) (d #t) (k 1)) (d (n "safe_core") (r "~0.33.1") (d #t) (k 0)) (d (n "safe_core") (r "~0.33.1") (f (quote ("testing"))) (d #t) (k 2)) (d (n "serde") (r "~1.0.97") (f (quote ("derive"))) (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "tokio") (r "~0.1.22") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 1)))) (h "0p2b8w3kq9vif331pkryky0hgkxk4q43cxicr71hv3158wn6jnas") (f (quote (("testing" "safe_core/testing" "env_logger") ("mock-network" "testing" "safe_core/mock-network") ("bindings" "safe_bindgen")))) (y #t)))

(define-public crate-safe_authenticator-0.10.2 (c (n "safe_authenticator") (v "0.10.2") (d (list (d (n "bincode") (r "~1.1.4") (d #t) (k 0)) (d (n "config_file_handler") (r "~0.11.0") (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (d #t) (k 2)) (d (n "ffi_utils") (r "~0.12.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.12.0") (d #t) (k 1)) (d (n "futures") (r "~0.1.17") (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (o #t) (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (d #t) (k 1)) (d (n "log") (r "~0.4.1") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.1") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.18.0") (d #t) (k 0)) (d (n "new_rand") (r "^0.6") (d #t) (k 0) (p "rand")) (d (n "quic-p2p") (r "~0.2.1") (d #t) (k 0)) (d (n "rand") (r "~0.3.18") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.10.2") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.10.2") (d #t) (k 1)) (d (n "safe-nd") (r "~0.4.0") (d #t) (k 0)) (d (n "safe-nd") (r "~0.4.0") (d #t) (k 1)) (d (n "safe_bindgen") (r "~0.13.1") (o #t) (d #t) (k 1)) (d (n "safe_core") (r "~0.33.2") (d #t) (k 0)) (d (n "safe_core") (r "~0.33.2") (f (quote ("testing"))) (d #t) (k 2)) (d (n "serde") (r "~1.0.97") (f (quote ("derive"))) (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "tokio") (r "~0.1.22") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 1)))) (h "0xnngv0y4bv0jfiplhd3n166lqzqiq0m259vw5xgwdyzy3d1cm9q") (f (quote (("testing" "safe_core/testing" "env_logger") ("mock-network" "testing" "safe_core/mock-network") ("bindings" "safe_bindgen")))) (y #t)))

(define-public crate-safe_authenticator-0.11.0 (c (n "safe_authenticator") (v "0.11.0") (d (list (d (n "bincode") (r "~1.1.4") (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (d #t) (k 2)) (d (n "ffi_utils") (r "~0.12.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.12.0") (d #t) (k 1)) (d (n "futures") (r "~0.1.17") (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (o #t) (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (d #t) (k 1)) (d (n "log") (r "~0.4.1") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.1") (d #t) (k 0)) (d (n "new_rand") (r "^0.6") (d #t) (k 0) (p "rand")) (d (n "quic-p2p") (r "~0.3.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.18") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.10.2") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.10.2") (d #t) (k 1)) (d (n "safe-nd") (r "~0.4.0") (d #t) (k 0)) (d (n "safe-nd") (r "~0.4.0") (d #t) (k 1)) (d (n "safe_bindgen") (r "~0.13.1") (o #t) (d #t) (k 1)) (d (n "safe_core") (r "~0.36.0") (d #t) (k 0)) (d (n "safe_core") (r "~0.36.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "serde") (r "~1.0.97") (f (quote ("derive"))) (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "tokio") (r "~0.1.22") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 1)))) (h "0q973phr2pxag1r37a8inixmdfrpr5c0cwbi096bl5pcqqxjs58c") (f (quote (("testing" "safe_core/testing" "env_logger") ("mock-network" "testing" "safe_core/mock-network") ("bindings" "safe_bindgen"))))))

(define-public crate-safe_authenticator-0.12.0 (c (n "safe_authenticator") (v "0.12.0") (d (list (d (n "bincode") (r "~1.1.4") (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (d #t) (k 2)) (d (n "ffi_utils") (r "~0.14.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.14.0") (d #t) (k 1)) (d (n "futures") (r "~0.1.17") (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (o #t) (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (d #t) (k 1)) (d (n "log") (r "~0.4.1") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.1") (d #t) (k 0)) (d (n "quic-p2p") (r "~0.3.0") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "safe-nd") (r "~0.6.0") (d #t) (k 0)) (d (n "safe-nd") (r "~0.6.0") (d #t) (k 1)) (d (n "safe_bindgen") (r "~0.13.2") (o #t) (d #t) (k 1)) (d (n "safe_core") (r "~0.37.3") (d #t) (k 0)) (d (n "safe_core") (r "~0.37.3") (f (quote ("testing"))) (d #t) (k 2)) (d (n "serde") (r "~1.0.97") (f (quote ("derive"))) (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 1)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "tokio") (r "~0.1.22") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 1)))) (h "02xy0vgc3nw6w6973jacfgcrxqkb65nnl3m44y25wmm9s2p57z2r") (f (quote (("testing" "safe_core/testing" "env_logger") ("mock-network" "testing" "safe_core/mock-network") ("bindings" "safe_bindgen"))))))

(define-public crate-safe_authenticator-0.13.0 (c (n "safe_authenticator") (v "0.13.0") (d (list (d (n "bincode") (r "~1.1.4") (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (d #t) (k 2)) (d (n "ffi_utils") (r "~0.15.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.15.0") (d #t) (k 1)) (d (n "futures") (r "~0.1.17") (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (o #t) (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (d #t) (k 1)) (d (n "log") (r "~0.4.1") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.1") (d #t) (k 0)) (d (n "quic-p2p") (r "~0.3.0") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "safe-nd") (r "~0.6.2") (d #t) (k 0)) (d (n "safe-nd") (r "~0.6.2") (d #t) (k 1)) (d (n "safe_bindgen") (r "~0.13.2") (o #t) (d #t) (k 1)) (d (n "safe_core") (r "~0.38.1") (d #t) (k 0)) (d (n "safe_core") (r "~0.38.1") (f (quote ("testing"))) (d #t) (k 2)) (d (n "serde") (r "~1.0.97") (f (quote ("derive"))) (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 1)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "tokio") (r "~0.1.22") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 1)))) (h "05fnw9lswr14p2i9glnhgplrfqwq3gnnkh50g27paxxhx0wszs15") (f (quote (("testing" "safe_core/testing" "env_logger") ("mock-network" "testing" "safe_core/mock-network") ("bindings" "safe_bindgen"))))))

(define-public crate-safe_authenticator-0.14.0 (c (n "safe_authenticator") (v "0.14.0") (d (list (d (n "bincode") (r "~1.1.4") (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (d #t) (k 2)) (d (n "ffi_utils") (r "~0.15.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.15.0") (d #t) (k 1)) (d (n "futures") (r "~0.1.17") (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (o #t) (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (d #t) (k 1)) (d (n "log") (r "~0.4.1") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "safe-nd") (r "~0.8.0") (d #t) (k 0)) (d (n "safe-nd") (r "~0.8.0") (d #t) (k 1)) (d (n "safe_bindgen") (r "~0.13.2") (o #t) (d #t) (k 1)) (d (n "safe_core") (r "~0.39.0") (d #t) (k 0)) (d (n "safe_core") (r "~0.39.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "serde") (r "~1.0.97") (f (quote ("derive"))) (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 1)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "tokio") (r "~0.1.22") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 1)))) (h "1pll2kzl8sqsphxbpaf45zdazsqnsa2cqk57638jj79admgnr3aa") (f (quote (("testing" "safe_core/testing" "env_logger") ("mock-network" "testing" "safe_core/mock-network") ("bindings" "safe_bindgen"))))))

(define-public crate-safe_authenticator-0.14.1 (c (n "safe_authenticator") (v "0.14.1") (d (list (d (n "bincode") (r "~1.1.4") (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (d #t) (k 2)) (d (n "ffi_utils") (r "~0.16.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.16.0") (d #t) (k 1)) (d (n "futures") (r "~0.1.17") (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (o #t) (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (d #t) (k 1)) (d (n "log") (r "~0.4.1") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "safe-nd") (r "~0.8.0") (d #t) (k 0)) (d (n "safe-nd") (r "~0.8.0") (d #t) (k 1)) (d (n "safe_bindgen") (r "~0.13.2") (o #t) (d #t) (k 1)) (d (n "safe_core") (r "~0.39.0") (d #t) (k 0)) (d (n "safe_core") (r "~0.39.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "serde") (r "~1.0.97") (f (quote ("derive"))) (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 1)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "tokio") (r "~0.1.22") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 1)))) (h "1b5fv1v24p49wvymhd6mx68y00qik2m770v6975gb73ydrf0njs8") (f (quote (("testing" "safe_core/testing" "env_logger") ("mock-network" "testing" "safe_core/mock-network") ("bindings" "safe_bindgen"))))))

(define-public crate-safe_authenticator-0.15.0 (c (n "safe_authenticator") (v "0.15.0") (d (list (d (n "bincode") (r "~1.1.4") (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (d #t) (k 2)) (d (n "ffi_utils") (r "~0.16.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.16.0") (d #t) (k 1)) (d (n "futures") (r "~0.1.17") (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (o #t) (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (d #t) (k 1)) (d (n "log") (r "~0.4.1") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "safe-nd") (r "~0.8.0") (d #t) (k 0)) (d (n "safe-nd") (r "~0.8.0") (d #t) (k 1)) (d (n "safe_core") (r "~0.40.0") (d #t) (k 0)) (d (n "safe_core") (r "~0.40.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "serde") (r "~1.0.97") (f (quote ("derive"))) (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 1)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "tokio") (r "~0.1.22") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 1)))) (h "070mbz3kpcc117s2rjd72nqhcdrighpbabr6ck72imdlmlrnr7xm") (f (quote (("testing" "safe_core/testing" "env_logger") ("mock-network" "testing" "safe_core/mock-network"))))))

(define-public crate-safe_authenticator-0.16.0 (c (n "safe_authenticator") (v "0.16.0") (d (list (d (n "async-trait") (r "~0.1.30") (d #t) (k 0)) (d (n "bincode") (r "~1.1.4") (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (d #t) (k 2)) (d (n "ffi_utils") (r "~0.16.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.16.0") (d #t) (k 1)) (d (n "futures") (r "~0.3.5") (d #t) (k 0)) (d (n "futures-util") (r "~0.3.4") (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (o #t) (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (d #t) (k 1)) (d (n "log") (r "~0.4.1") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "safe-nd") (r "~0.8.0") (d #t) (k 0)) (d (n "safe-nd") (r "~0.8.0") (d #t) (k 1)) (d (n "safe_core") (r "~0.41.0") (d #t) (k 0)) (d (n "safe_core") (r "~0.41.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "serde") (r "~1.0.97") (f (quote ("derive"))) (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 1)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "tokio") (r "~0.2.21") (f (quote ("rt-core" "rt-util"))) (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 1)))) (h "1zd8162nwxc7qzwhclhhh53g9fjdarykc896fyfp5mmvn5sa56gf") (f (quote (("testing" "safe_core/testing" "env_logger") ("mock-network" "testing" "safe_core/mock-network"))))))

(define-public crate-safe_authenticator-0.16.1 (c (n "safe_authenticator") (v "0.16.1") (d (list (d (n "async-trait") (r "~0.1.30") (d #t) (k 0)) (d (n "bincode") (r "~1.1.4") (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (d #t) (k 2)) (d (n "ffi_utils") (r "~0.16.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.16.0") (d #t) (k 1)) (d (n "futures") (r "~0.3.5") (d #t) (k 0)) (d (n "futures-util") (r "~0.3.4") (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (o #t) (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (d #t) (k 1)) (d (n "log") (r "~0.4.1") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "safe-nd") (r "~0.9.0") (d #t) (k 0)) (d (n "safe-nd") (r "^0.9.0") (d #t) (k 1)) (d (n "safe_core") (r "~0.41.1") (d #t) (k 0)) (d (n "safe_core") (r "~0.41.1") (f (quote ("testing"))) (d #t) (k 2)) (d (n "serde") (r "~1.0.97") (f (quote ("derive"))) (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 1)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "tokio") (r "~0.2.21") (f (quote ("rt-core" "rt-util"))) (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 1)))) (h "0x92af7dvpr0a5p88q3df44wmxg7xnz1vlg1c1idp00j19xv0v97") (f (quote (("testing" "safe_core/testing" "env_logger") ("mock-network" "testing" "safe_core/mock-network"))))))

(define-public crate-safe_authenticator-0.16.3 (c (n "safe_authenticator") (v "0.16.3") (d (list (d (n "async-trait") (r "~0.1.30") (d #t) (k 0)) (d (n "bincode") (r "~1.1.4") (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (o #t) (d #t) (k 0)) (d (n "ffi_utils") (r "~0.16.0") (d #t) (k 0)) (d (n "futures") (r "~0.3.5") (d #t) (k 0)) (d (n "futures-util") (r "~0.3.4") (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (o #t) (d #t) (k 0)) (d (n "log") (r "~0.4.1") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "safe-nd") (r "~0.9.0") (d #t) (k 0)) (d (n "safe_core") (r "~0.41.3") (d #t) (k 0)) (d (n "serde") (r "~1.0.97") (f (quote ("derive"))) (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "tokio") (r "~0.2.21") (f (quote ("rt-core" "rt-util"))) (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 0)))) (h "05nr9kwfkq4qy87990mz8icxl79pj4nx5rsajh02afcbmac45727") (f (quote (("testing" "safe_core/testing" "env_logger") ("mock-network" "testing" "safe_core/mock-network"))))))

(define-public crate-safe_authenticator-0.17.0 (c (n "safe_authenticator") (v "0.17.0") (d (list (d (n "async-trait") (r "~0.1.30") (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (o #t) (d #t) (k 0)) (d (n "ffi_utils") (r "~0.16.0") (d #t) (k 0)) (d (n "futures") (r "~0.3.5") (d #t) (k 0)) (d (n "futures-util") (r "~0.3.4") (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (o #t) (d #t) (k 0)) (d (n "log") (r "~0.4.1") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.1") (d #t) (k 0)) (d (n "rand") (r "~0.6") (d #t) (k 0)) (d (n "safe-nd") (r "~0.10.1") (d #t) (k 0)) (d (n "safe_core") (r "~0.42.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.97") (f (quote ("derive"))) (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.5.0") (d #t) (k 0)) (d (n "tokio") (r "~0.2.21") (f (quote ("rt-core" "rt-util"))) (d #t) (k 0)) (d (n "unwrap") (r "^1.2.0") (d #t) (k 0)))) (h "1dchma5z64xfdybc89r1ls73x22appjcdcw77nv9f6yvfcdz1bdy") (f (quote (("testing" "safe_core/testing" "env_logger") ("mock-network" "testing" "safe_core/mock-network"))))))

(define-public crate-safe_authenticator-0.17.1 (c (n "safe_authenticator") (v "0.17.1") (d (list (d (n "async-trait") (r "~0.1.30") (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (o #t) (d #t) (k 0)) (d (n "ffi_utils") (r "~0.17.0") (d #t) (k 0)) (d (n "futures") (r "~0.3.5") (d #t) (k 0)) (d (n "futures-util") (r "~0.3.4") (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (o #t) (d #t) (k 0)) (d (n "log") (r "~0.4.1") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.1") (d #t) (k 0)) (d (n "rand") (r "~0.6") (d #t) (k 0)) (d (n "safe-nd") (r "~0.10.1") (d #t) (k 0)) (d (n "safe_core") (r "~0.42.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.97") (f (quote ("derive"))) (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.5.0") (d #t) (k 0)) (d (n "tokio") (r "~0.2.21") (f (quote ("rt-core" "rt-util"))) (d #t) (k 0)) (d (n "unwrap") (r "^1.2.0") (d #t) (k 0)))) (h "0n3c0z6ra0znj78swpqlf4hpicqhpjc7ghag1yps71l8smaxv1gh") (f (quote (("testing" "safe_core/testing" "env_logger") ("mock-network" "testing" "safe_core/mock-network"))))))

(define-public crate-safe_authenticator-0.18.0 (c (n "safe_authenticator") (v "0.18.0") (d (list (d (n "async-trait") (r "~0.1.30") (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (o #t) (d #t) (k 0)) (d (n "ffi_utils") (r "~0.17.0") (d #t) (k 0)) (d (n "futures") (r "~0.3.5") (d #t) (k 0)) (d (n "futures-util") (r "~0.3.4") (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (o #t) (d #t) (k 0)) (d (n "log") (r "~0.4.1") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.1") (d #t) (k 0)) (d (n "rand") (r "~0.7.3") (d #t) (k 0)) (d (n "safe-nd") (r "~0.11.0") (d #t) (k 0)) (d (n "safe_core") (r "~0.43.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.97") (f (quote ("derive"))) (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.4.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.5.0") (d #t) (k 0)) (d (n "tokio") (r "~0.2.21") (f (quote ("rt-core" "rt-util"))) (d #t) (k 0)) (d (n "unwrap") (r "^1.2.0") (d #t) (k 0)) (d (n "xor_name") (r "^1") (d #t) (k 0)))) (h "1izkc7cnkmx6cc6i7f6pw5hfh4gnk444hzmhrw00jwj0m5hrfn7c") (f (quote (("testing" "safe_core/testing" "env_logger") ("mock-network" "testing" "safe_core/mock-network"))))))

(define-public crate-safe_authenticator-0.18.1 (c (n "safe_authenticator") (v "0.18.1") (d (list (d (n "async-trait") (r "~0.1.30") (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (o #t) (d #t) (k 0)) (d (n "ffi_utils") (r "~0.17.0") (d #t) (k 0)) (d (n "futures") (r "~0.3.5") (d #t) (k 0)) (d (n "futures-util") (r "~0.3.4") (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (o #t) (d #t) (k 0)) (d (n "log") (r "~0.4.1") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.1") (d #t) (k 0)) (d (n "rand") (r "~0.7.3") (d #t) (k 0)) (d (n "safe-nd") (r "~0.11.0") (d #t) (k 0)) (d (n "safe_core") (r "~0.43.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.97") (f (quote ("derive"))) (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.4.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.5.0") (d #t) (k 0)) (d (n "tokio") (r "~0.2.21") (f (quote ("rt-core" "rt-util"))) (d #t) (k 0)) (d (n "unwrap") (r "^1.2.0") (d #t) (k 0)) (d (n "xor_name") (r "^1") (d #t) (k 0)))) (h "0gqk6bg6dn956z7nwgfjpickk4fw6cidv1anf0035wnl89z0dfn5") (f (quote (("testing" "safe_core/testing" "env_logger") ("mock-network" "testing" "safe_core/mock-network"))))))

