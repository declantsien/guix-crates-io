(define-module (crates-io sa fe safe_app) #:use-module (crates-io))

(define-public crate-safe_app-0.1.0 (c (n "safe_app") (v "0.1.0") (d (list (d (n "config_file_handler") (r "~0.7.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.1.0") (d #t) (k 0)) (d (n "futures") (r "~0.1.14") (d #t) (k 0)) (d (n "log") (r "~0.3.7") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.0") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.13.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.15") (d #t) (k 0)) (d (n "routing") (r "~0.31.0") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.3.0") (d #t) (k 0)) (d (n "safe_authenticator") (r "~0.1.0") (o #t) (d #t) (k 0)) (d (n "safe_authenticator") (r "~0.1.0") (d #t) (k 2)) (d (n "safe_core") (r "~0.24.0") (d #t) (k 0)) (d (n "self_encryption") (r "~0.10.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.9") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.9") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.2.1") (d #t) (k 0)) (d (n "tokio-core") (r "~0.1.8") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)))) (h "1mwar6fn36a5iix7a5yzrls1divdrmfkrh4alckkwh9al8hcxkmy") (f (quote (("use-mock-routing" "safe_core/use-mock-routing") ("testing" "safe_authenticator" "safe_authenticator/testing" "safe_core/testing"))))))

(define-public crate-safe_app-0.2.1 (c (n "safe_app") (v "0.2.1") (d (list (d (n "config_file_handler") (r "~0.8.1") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.2.0") (d #t) (k 0)) (d (n "futures") (r "~0.1.14") (d #t) (k 0)) (d (n "log") (r "~0.3.7") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.0") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.14.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.16") (d #t) (k 0)) (d (n "routing") (r "~0.32.2") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.5.0") (d #t) (k 0)) (d (n "safe_authenticator") (r "~0.2.0") (o #t) (d #t) (k 0)) (d (n "safe_authenticator") (r "~0.2.0") (d #t) (k 2)) (d (n "safe_core") (r "~0.25.0") (d #t) (k 0)) (d (n "self_encryption") (r "~0.11.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.11") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.11") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.3.1") (d #t) (k 0)) (d (n "tokio-core") (r "~0.1.9") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)))) (h "0p6gyqbqa3s5dc1rl5lx6034fic1izdl4map2p77zl7fs2s0yhcz") (f (quote (("use-mock-routing" "safe_core/use-mock-routing") ("testing" "safe_authenticator" "safe_authenticator/testing" "safe_core/testing"))))))

(define-public crate-safe_app-0.3.0 (c (n "safe_app") (v "0.3.0") (d (list (d (n "config_file_handler") (r "~0.8.1") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.2.0") (d #t) (k 0)) (d (n "futures") (r "~0.1.14") (d #t) (k 0)) (d (n "log") (r "~0.3.7") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.0") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.14.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.16") (d #t) (k 0)) (d (n "routing") (r "~0.33.0") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.5.0") (d #t) (k 0)) (d (n "safe_authenticator") (r "~0.3.0") (o #t) (d #t) (k 0)) (d (n "safe_authenticator") (r "~0.3.0") (d #t) (k 2)) (d (n "safe_core") (r "~0.26.0") (d #t) (k 0)) (d (n "self_encryption") (r "~0.11.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.11") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.11") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.3.1") (d #t) (k 0)) (d (n "tokio-core") (r "~0.1.9") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)))) (h "0jhsi17sa19pvy9bdw6pyn2a2mjrbpdkc03wr0r4kqwlmdahk4cq") (f (quote (("use-mock-routing" "safe_core/use-mock-routing") ("testing" "safe_authenticator" "safe_authenticator/testing" "safe_core/testing"))))))

(define-public crate-safe_app-0.3.1 (c (n "safe_app") (v "0.3.1") (d (list (d (n "config_file_handler") (r "~0.8.1") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.2.0") (d #t) (k 0)) (d (n "futures") (r "~0.1.15") (d #t) (k 0)) (d (n "log") (r "~0.3.7") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.0") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.14.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.16") (d #t) (k 0)) (d (n "routing") (r "~0.33.1") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.5.0") (d #t) (k 0)) (d (n "safe_authenticator") (r "~0.3.1") (o #t) (d #t) (k 0)) (d (n "safe_authenticator") (r "~0.3.1") (d #t) (k 2)) (d (n "safe_core") (r "~0.26.1") (d #t) (k 0)) (d (n "self_encryption") (r "~0.11.1") (d #t) (k 0)) (d (n "serde") (r "~1.0.11") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.11") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.3.1") (d #t) (k 0)) (d (n "tokio-core") (r "~0.1.9") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)))) (h "06wxvldg9jivnvcanwkalf7mvs6idfkj9aafrg7mca417a6pj3m1") (f (quote (("use-mock-routing" "safe_core/use-mock-routing") ("testing" "safe_authenticator" "safe_authenticator/testing" "safe_core/testing"))))))

(define-public crate-safe_app-0.3.3 (c (n "safe_app") (v "0.3.3") (d (list (d (n "config_file_handler") (r "~0.8.1") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.2.0") (d #t) (k 0)) (d (n "futures") (r "~0.1.15") (d #t) (k 0)) (d (n "log") (r "~0.3.7") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.0") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.14.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.16") (d #t) (k 0)) (d (n "routing") (r "~0.33.2") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.5.0") (d #t) (k 0)) (d (n "safe_authenticator") (r "~0.3.2") (o #t) (d #t) (k 0)) (d (n "safe_authenticator") (r "~0.3.2") (d #t) (k 2)) (d (n "safe_core") (r "~0.26.2") (d #t) (k 0)) (d (n "self_encryption") (r "~0.11.1") (d #t) (k 0)) (d (n "serde") (r "~1.0.11") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.11") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.3.1") (d #t) (k 0)) (d (n "tokio-core") (r "~0.1.9") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)))) (h "0jnmr86gfa2f1lyvzzhzwhy9ir239bzq2h7wsc5ay78hm34apr50") (f (quote (("use-mock-routing" "safe_core/use-mock-routing") ("testing" "safe_authenticator" "safe_authenticator/testing" "safe_core/testing"))))))

(define-public crate-safe_app-0.4.0 (c (n "safe_app") (v "0.4.0") (d (list (d (n "config_file_handler") (r "~0.8.2") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.3.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.3.0") (d #t) (k 1)) (d (n "futures") (r "~0.1.15") (d #t) (k 0)) (d (n "log") (r "~0.3.7") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.0") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.14.1") (d #t) (k 0)) (d (n "rand") (r "~0.3.16") (d #t) (k 0)) (d (n "routing") (r "~0.33.2") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.5.0") (d #t) (k 0)) (d (n "safe_authenticator") (r "~0.4.0") (o #t) (d #t) (k 0)) (d (n "safe_authenticator") (r "~0.4.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "safe_core") (r "~0.27.0") (d #t) (k 0)) (d (n "safe_core") (r "~0.27.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "self_encryption") (r "~0.11.1") (d #t) (k 0)) (d (n "serde") (r "~1.0.11") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.11") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.3.1") (d #t) (k 0)) (d (n "tokio-core") (r "~0.1.9") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 1)))) (h "02zrp7wgbbcx87svpwi4aw4210kc9ri4691na2vjgj6ghk9p8fz0") (f (quote (("use-mock-routing" "testing" "safe_core/use-mock-routing" "safe_authenticator/use-mock-routing") ("testing" "safe_core/testing" "safe_authenticator/testing"))))))

(define-public crate-safe_app-0.5.0 (c (n "safe_app") (v "0.5.0") (d (list (d (n "config_file_handler") (r "~0.8.3") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.4.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.4.0") (d #t) (k 1)) (d (n "futures") (r "~0.1.15") (d #t) (k 0)) (d (n "log") (r "~0.3.7") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.14.1") (d #t) (k 0)) (d (n "rand") (r "~0.3.18") (d #t) (k 0)) (d (n "routing") (r "~0.34.0") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.6.0") (d #t) (k 0)) (d (n "safe_authenticator") (r "~0.5.0") (o #t) (d #t) (k 0)) (d (n "safe_authenticator") (r "~0.5.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "safe_core") (r "~0.28.0") (d #t) (k 0)) (d (n "safe_core") (r "~0.28.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "self_encryption") (r "~0.11.1") (d #t) (k 0)) (d (n "serde") (r "~1.0.24") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.24") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.3.1") (d #t) (k 0)) (d (n "tokio-core") (r "~0.1.9") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 1)))) (h "0kaxxv2n23ihizlxvxz8s75xcnsdyikpb9ynxlh74gmlvmv2nnwr") (f (quote (("use-mock-routing" "testing" "safe_core/use-mock-routing" "safe_authenticator/use-mock-routing") ("testing" "safe_core/testing" "safe_authenticator/testing"))))))

(define-public crate-safe_app-0.6.0 (c (n "safe_app") (v "0.6.0") (d (list (d (n "config_file_handler") (r "~0.9.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.5.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.5.0") (d #t) (k 1)) (d (n "futures") (r "~0.1.17") (d #t) (k 0)) (d (n "log") (r "~0.4.1") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.15.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.18") (d #t) (k 0)) (d (n "routing") (r "~0.35.0") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.7.0") (d #t) (k 0)) (d (n "safe_authenticator") (r "~0.6.0") (o #t) (d #t) (k 0)) (d (n "safe_authenticator") (r "~0.6.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "safe_core") (r "~0.29.0") (d #t) (k 0)) (d (n "safe_core") (r "~0.29.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "self_encryption") (r "~0.12.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.27") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.27") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.3.1") (d #t) (k 0)) (d (n "tokio-core") (r "~0.1.12") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 1)))) (h "01yrw10wlg960b3ax7sf4f5cmvpdfm4qga83afxwpnmkgyhddmvm") (f (quote (("use-mock-routing" "testing" "safe_core/use-mock-routing" "safe_authenticator/use-mock-routing") ("testing" "safe_core/testing" "safe_authenticator/testing"))))))

(define-public crate-safe_app-0.7.0 (c (n "safe_app") (v "0.7.0") (d (list (d (n "config_file_handler") (r "~0.9.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.6.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.6.0") (d #t) (k 1)) (d (n "futures") (r "~0.1.17") (d #t) (k 0)) (d (n "jni") (r "~0.10.1") (o #t) (d #t) (k 0)) (d (n "jni") (r "~0.10.1") (d #t) (k 1)) (d (n "log") (r "~0.4.1") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.15.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.18") (d #t) (k 0)) (d (n "routing") (r "~0.35.0") (d #t) (k 0)) (d (n "routing") (r "~0.35.0") (d #t) (k 1)) (d (n "rust_sodium") (r "~0.7.0") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.7.0") (d #t) (k 1)) (d (n "safe_authenticator") (r "~0.7.0") (o #t) (d #t) (k 0)) (d (n "safe_authenticator") (r "~0.7.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "safe_bindgen") (r "~0.5.0") (d #t) (k 1)) (d (n "safe_core") (r "~0.30.0") (d #t) (k 0)) (d (n "safe_core") (r "~0.30.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "self_encryption") (r "~0.12.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.27") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.27") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.3.1") (d #t) (k 0)) (d (n "tokio-core") (r "~0.1.12") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 1)))) (h "0cvn7vm4wh7nnn8whgragw0n2ayql6ywhy2gs12znac61h6m0hph") (f (quote (("use-mock-routing" "testing" "safe_core/use-mock-routing" "safe_authenticator/use-mock-routing") ("testing" "safe_core/testing" "safe_authenticator/testing") ("bindings"))))))

(define-public crate-safe_app-0.8.0 (c (n "safe_app") (v "0.8.0") (d (list (d (n "clap") (r "= 2.25.1") (d #t) (k 2)) (d (n "config_file_handler") (r "~0.9.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.6.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.6.0") (d #t) (k 1)) (d (n "futures") (r "~0.1.17") (d #t) (k 0)) (d (n "jni") (r "~0.10.1") (o #t) (d #t) (k 0)) (d (n "jni") (r "~0.10.1") (d #t) (k 1)) (d (n "log") (r "~0.4.1") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.1") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.15.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.18") (d #t) (k 0)) (d (n "routing") (r "~0.35.0") (d #t) (k 0)) (d (n "routing") (r "~0.35.0") (d #t) (k 1)) (d (n "rust_sodium") (r "~0.7.0") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.7.0") (d #t) (k 1)) (d (n "safe_authenticator") (r "~0.8.0") (o #t) (d #t) (k 0)) (d (n "safe_authenticator") (r "~0.8.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "safe_bindgen") (r "~0.5.0") (d #t) (k 1)) (d (n "safe_core") (r "~0.31.0") (d #t) (k 0)) (d (n "safe_core") (r "~0.31.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "self_encryption") (r "~0.12.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.27") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.27") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.3.1") (d #t) (k 0)) (d (n "tokio-core") (r "~0.1.12") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 1)))) (h "19ianq7nm77kfbzksrwlgqniqj7y32cbvy2lc53149nbvik6bmw8") (f (quote (("use-mock-routing" "testing" "safe_core/use-mock-routing" "safe_authenticator/use-mock-routing") ("testing" "safe_core/testing" "safe_authenticator/testing") ("bindings"))))))

(define-public crate-safe_app-0.9.0 (c (n "safe_app") (v "0.9.0") (d (list (d (n "clap") (r "= 2.25.1") (d #t) (k 2)) (d (n "config_file_handler") (r "~0.11.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.11.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.11.0") (d #t) (k 1)) (d (n "futures") (r "~0.1.17") (d #t) (k 0)) (d (n "jni") (r "~0.10.2") (o #t) (d #t) (k 0)) (d (n "jni") (r "~0.10.1") (d #t) (k 1)) (d (n "log") (r "~0.4.1") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.1") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.16.0") (d #t) (k 0)) (d (n "rand") (r "~0.3.18") (d #t) (k 0)) (d (n "routing") (r "~0.37.0") (d #t) (k 0)) (d (n "routing") (r "~0.37.0") (d #t) (k 1)) (d (n "rust_sodium") (r "~0.10.0") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.10.0") (d #t) (k 1)) (d (n "safe_authenticator") (r "~0.9.0") (o #t) (d #t) (k 0)) (d (n "safe_authenticator") (r "~0.9.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "safe_bindgen") (r "~0.11.0") (d #t) (k 1)) (d (n "safe_core") (r "~0.32.0") (d #t) (k 0)) (d (n "safe_core") (r "~0.32.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "self_encryption") (r "~0.13.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.27") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.27") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.3.1") (d #t) (k 0)) (d (n "tokio-core") (r "~0.1.17") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 1)))) (h "1qp5795y8c3sdif6zs0ah1zbzfndcq3l33zdy659chdprim1zvbg") (f (quote (("use-mock-routing" "testing" "safe_core/use-mock-routing" "safe_authenticator/use-mock-routing") ("testing" "safe_core/testing" "safe_authenticator/testing") ("bindings"))))))

(define-public crate-safe_app-0.10.0 (c (n "safe_app") (v "0.10.0") (d (list (d (n "bincode") (r "~1.1.4") (d #t) (k 0)) (d (n "clap") (r "~2.33.0") (d #t) (k 2)) (d (n "config_file_handler") (r "~0.11.0") (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (d #t) (k 2)) (d (n "ffi_utils") (r "~0.12.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.12.0") (d #t) (k 1)) (d (n "futures") (r "~0.1.17") (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (o #t) (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (d #t) (k 1)) (d (n "log") (r "~0.4.1") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.1") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.18.0") (d #t) (k 0)) (d (n "new_rand") (r "^0.6") (d #t) (k 0) (p "rand")) (d (n "rand") (r "~0.3.18") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.10.2") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.10.2") (d #t) (k 1)) (d (n "safe-nd") (r "~0.3.0") (d #t) (k 0)) (d (n "safe_authenticator") (r "~0.10.0") (o #t) (d #t) (k 0)) (d (n "safe_authenticator") (r "~0.10.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "safe_bindgen") (r "~0.13.0") (o #t) (d #t) (k 1)) (d (n "safe_core") (r "~0.33.0") (d #t) (k 0)) (d (n "safe_core") (r "~0.33.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "self_encryption") (r "~0.15.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.27") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.27") (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "tokio") (r "~0.1.22") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 1)))) (h "0gzb01zd33crdka937n7fbp6kjb7rlf2jpw66zdg34n1hmngw91q") (f (quote (("testing" "safe_core/testing" "safe_authenticator/testing" "env_logger") ("mock-network" "testing" "safe_core/mock-network" "safe_authenticator/mock-network") ("bindings" "safe_bindgen"))))))

(define-public crate-safe_app-0.10.2 (c (n "safe_app") (v "0.10.2") (d (list (d (n "bincode") (r "~1.1.4") (d #t) (k 0)) (d (n "clap") (r "~2.33.0") (d #t) (k 2)) (d (n "config_file_handler") (r "~0.11.0") (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (d #t) (k 2)) (d (n "ffi_utils") (r "~0.12.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.12.0") (d #t) (k 1)) (d (n "futures") (r "~0.1.17") (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (o #t) (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (d #t) (k 1)) (d (n "log") (r "~0.4.1") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.1") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.18.0") (d #t) (k 0)) (d (n "new_rand") (r "^0.6") (d #t) (k 0) (p "rand")) (d (n "rand") (r "~0.3.18") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.10.2") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.10.2") (d #t) (k 1)) (d (n "safe-nd") (r "~0.4.0") (d #t) (k 0)) (d (n "safe-nd") (r "~0.4.0") (d #t) (k 1)) (d (n "safe_authenticator") (r "~0.10.2") (o #t) (d #t) (k 0)) (d (n "safe_authenticator") (r "~0.10.2") (f (quote ("testing"))) (d #t) (k 2)) (d (n "safe_bindgen") (r "~0.13.1") (o #t) (d #t) (k 1)) (d (n "safe_core") (r "~0.33.2") (d #t) (k 0)) (d (n "safe_core") (r "~0.33.2") (f (quote ("testing"))) (d #t) (k 2)) (d (n "self_encryption") (r "~0.15.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.27") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.27") (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "tokio") (r "~0.1.22") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 1)))) (h "1q9qvqj8v4cp8aa4lyds5vm72in1xl5p3m69wvf6dlaz26c30ifk") (f (quote (("testing" "safe_core/testing" "safe_authenticator/testing" "env_logger") ("mock-network" "testing" "safe_core/mock-network" "safe_authenticator/mock-network") ("bindings" "safe_bindgen")))) (y #t)))

(define-public crate-safe_app-0.11.0 (c (n "safe_app") (v "0.11.0") (d (list (d (n "bincode") (r "~1.1.4") (d #t) (k 0)) (d (n "clap") (r "~2.33.0") (d #t) (k 2)) (d (n "env_logger") (r "~0.6.2") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (d #t) (k 2)) (d (n "ffi_utils") (r "~0.12.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.12.0") (d #t) (k 1)) (d (n "futures") (r "~0.1.17") (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (o #t) (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (d #t) (k 1)) (d (n "log") (r "~0.4.1") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.1") (d #t) (k 0)) (d (n "new_rand") (r "^0.6") (d #t) (k 0) (p "rand")) (d (n "rand") (r "~0.3.18") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.10.2") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.10.2") (d #t) (k 1)) (d (n "safe-nd") (r "~0.4.0") (d #t) (k 0)) (d (n "safe-nd") (r "~0.4.0") (d #t) (k 1)) (d (n "safe_authenticator") (r "~0.11.0") (o #t) (d #t) (k 0)) (d (n "safe_authenticator") (r "~0.11.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "safe_bindgen") (r "~0.13.1") (o #t) (d #t) (k 1)) (d (n "safe_core") (r "~0.36.0") (d #t) (k 0)) (d (n "safe_core") (r "~0.36.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "self_encryption") (r "~0.15.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.27") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.27") (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "tokio") (r "~0.1.22") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 1)))) (h "0lmwgx91msaq3y0j9507n6z8jcbs86y72gilqyjzy8cva8k68aic") (f (quote (("testing" "safe_core/testing" "safe_authenticator/testing" "env_logger") ("mock-network" "testing" "safe_core/mock-network" "safe_authenticator/mock-network") ("bindings" "safe_bindgen"))))))

(define-public crate-safe_app-0.12.0 (c (n "safe_app") (v "0.12.0") (d (list (d (n "bincode") (r "~1.1.4") (d #t) (k 0)) (d (n "clap") (r "~2.33.0") (d #t) (k 2)) (d (n "env_logger") (r "~0.6.2") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (d #t) (k 2)) (d (n "ffi_utils") (r "~0.14.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.14.0") (d #t) (k 1)) (d (n "futures") (r "~0.1.17") (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (o #t) (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (d #t) (k 1)) (d (n "log") (r "~0.4.1") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.1") (d #t) (k 0)) (d (n "miscreant") (r "^0.4.2") (f (quote ("soft-aes"))) (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "safe-nd") (r "~0.6.0") (d #t) (k 0)) (d (n "safe-nd") (r "~0.6.0") (d #t) (k 1)) (d (n "safe_authenticator") (r "~0.12.0") (o #t) (d #t) (k 0)) (d (n "safe_authenticator") (r "~0.12.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "safe_bindgen") (r "~0.13.2") (o #t) (d #t) (k 1)) (d (n "safe_core") (r "~0.37.3") (d #t) (k 0)) (d (n "safe_core") (r "~0.37.3") (f (quote ("testing"))) (d #t) (k 2)) (d (n "self_encryption") (r "~0.16.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.27") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.27") (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 1)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "tokio") (r "~0.1.22") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 1)))) (h "11pj3hzafy81a87n8hgfr4rq98smhcqax7rnqn815cv5nlqayikd") (f (quote (("testing" "safe_core/testing" "safe_authenticator/testing" "env_logger") ("mock-network" "testing" "safe_core/mock-network" "safe_authenticator/mock-network") ("bindings" "safe_bindgen"))))))

(define-public crate-safe_app-0.13.0 (c (n "safe_app") (v "0.13.0") (d (list (d (n "bincode") (r "~1.1.4") (d #t) (k 0)) (d (n "clap") (r "~2.33.0") (d #t) (k 2)) (d (n "env_logger") (r "~0.6.2") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (d #t) (k 2)) (d (n "ffi_utils") (r "~0.15.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.15.0") (d #t) (k 1)) (d (n "futures") (r "~0.1.17") (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (o #t) (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (d #t) (k 1)) (d (n "log") (r "~0.4.1") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.1") (d #t) (k 0)) (d (n "miscreant") (r "^0.4.2") (f (quote ("soft-aes"))) (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "safe-nd") (r "~0.6.2") (d #t) (k 0)) (d (n "safe-nd") (r "~0.6.2") (d #t) (k 1)) (d (n "safe_authenticator") (r "~0.13.0") (o #t) (d #t) (k 0)) (d (n "safe_authenticator") (r "~0.13.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "safe_bindgen") (r "~0.13.2") (o #t) (d #t) (k 1)) (d (n "safe_core") (r "~0.38.1") (d #t) (k 0)) (d (n "safe_core") (r "~0.38.1") (f (quote ("testing"))) (d #t) (k 2)) (d (n "self_encryption") (r "~0.16.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.27") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.27") (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 1)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "tokio") (r "~0.1.22") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 1)))) (h "1f19h8kngvjqbr6ls9cwp0f8rsa953qwpplrmwxd2p1084l4wril") (f (quote (("testing" "safe_core/testing" "safe_authenticator/testing" "env_logger") ("mock-network" "testing" "safe_core/mock-network" "safe_authenticator/mock-network") ("bindings" "safe_bindgen"))))))

(define-public crate-safe_app-0.14.0 (c (n "safe_app") (v "0.14.0") (d (list (d (n "bincode") (r "~1.1.4") (d #t) (k 0)) (d (n "clap") (r "~2.33.0") (d #t) (k 2)) (d (n "env_logger") (r "~0.6.2") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (d #t) (k 2)) (d (n "ffi_utils") (r "~0.15.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.15.0") (d #t) (k 1)) (d (n "futures") (r "~0.1.17") (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (o #t) (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (d #t) (k 1)) (d (n "log") (r "~0.4.1") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.1") (d #t) (k 0)) (d (n "miscreant") (r "^0.4.2") (f (quote ("soft-aes"))) (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "safe-nd") (r "~0.8.0") (d #t) (k 0)) (d (n "safe-nd") (r "~0.8.0") (d #t) (k 1)) (d (n "safe_authenticator") (r "~0.14.0") (o #t) (d #t) (k 0)) (d (n "safe_authenticator") (r "~0.14.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "safe_bindgen") (r "~0.13.2") (o #t) (d #t) (k 1)) (d (n "safe_core") (r "~0.39.0") (d #t) (k 0)) (d (n "safe_core") (r "~0.39.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "self_encryption") (r "~0.16.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.27") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.27") (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 1)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "tokio") (r "~0.1.22") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 1)))) (h "07wgfg09jy4m554yc5nyfr25cxbf87bsddb661dzc2a57ijxrw1y") (f (quote (("testing" "safe_core/testing" "safe_authenticator/testing" "env_logger") ("mock-network" "testing" "safe_core/mock-network" "safe_authenticator/mock-network") ("bindings" "safe_bindgen"))))))

(define-public crate-safe_app-0.14.1 (c (n "safe_app") (v "0.14.1") (d (list (d (n "bincode") (r "~1.1.4") (d #t) (k 0)) (d (n "clap") (r "~2.33.0") (d #t) (k 2)) (d (n "env_logger") (r "~0.6.2") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (d #t) (k 2)) (d (n "ffi_utils") (r "^0.16.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.16.0") (d #t) (k 1)) (d (n "futures") (r "~0.1.17") (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (o #t) (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (d #t) (k 1)) (d (n "log") (r "~0.4.1") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.1") (d #t) (k 0)) (d (n "miscreant") (r "^0.4.2") (f (quote ("soft-aes"))) (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "safe-nd") (r "~0.8.0") (d #t) (k 0)) (d (n "safe-nd") (r "~0.8.0") (d #t) (k 1)) (d (n "safe_authenticator") (r "~0.14.0") (o #t) (d #t) (k 0)) (d (n "safe_authenticator") (r "~0.14.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "safe_bindgen") (r "~0.13.2") (o #t) (d #t) (k 1)) (d (n "safe_core") (r "~0.39.0") (d #t) (k 0)) (d (n "safe_core") (r "~0.39.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "self_encryption") (r "~0.16.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.27") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.27") (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 1)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "tokio") (r "~0.1.22") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 1)))) (h "0i3c6rqq9ilid02nyrp2ijdb7kpcxwpyi704x4idxp9kr8iw0rrs") (f (quote (("testing" "safe_core/testing" "safe_authenticator/testing" "env_logger") ("mock-network" "testing" "safe_core/mock-network" "safe_authenticator/mock-network") ("bindings" "safe_bindgen"))))))

(define-public crate-safe_app-0.15.0 (c (n "safe_app") (v "0.15.0") (d (list (d (n "bincode") (r "~1.1.4") (d #t) (k 0)) (d (n "clap") (r "~2.33.0") (d #t) (k 2)) (d (n "env_logger") (r "~0.6.2") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (d #t) (k 2)) (d (n "ffi_utils") (r "^0.16.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.16.0") (d #t) (k 1)) (d (n "futures") (r "~0.1.17") (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (o #t) (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (d #t) (k 1)) (d (n "log") (r "~0.4.1") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.1") (d #t) (k 0)) (d (n "miscreant") (r "^0.4.2") (f (quote ("soft-aes"))) (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "safe-nd") (r "~0.8.0") (d #t) (k 0)) (d (n "safe-nd") (r "~0.8.0") (d #t) (k 1)) (d (n "safe_authenticator") (r "~0.15.0") (o #t) (d #t) (k 0)) (d (n "safe_authenticator") (r "~0.15.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "safe_bindgen") (r "~0.13.2") (o #t) (d #t) (k 1)) (d (n "safe_core") (r "~0.40.0") (d #t) (k 0)) (d (n "safe_core") (r "~0.40.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "self_encryption") (r "~0.16.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.27") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.27") (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 1)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "tokio") (r "~0.1.22") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 1)))) (h "0v6dngdclinv5z7ka96f2zqa9pr0cg35g0w55p0fkhbiwwlxsrmx") (f (quote (("testing" "safe_core/testing" "safe_authenticator/testing" "env_logger") ("mock-network" "testing" "safe_core/mock-network" "safe_authenticator/mock-network") ("bindings" "safe_bindgen"))))))

(define-public crate-safe_app-0.15.1 (c (n "safe_app") (v "0.15.1") (d (list (d (n "bincode") (r "~1.1.4") (d #t) (k 0)) (d (n "clap") (r "~2.33.0") (d #t) (k 2)) (d (n "env_logger") (r "~0.6.2") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (d #t) (k 2)) (d (n "ffi_utils") (r "^0.16.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.16.0") (d #t) (k 1)) (d (n "futures") (r "~0.1.17") (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (o #t) (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (d #t) (k 1)) (d (n "log") (r "~0.4.1") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.1") (d #t) (k 0)) (d (n "miscreant") (r "^0.4.2") (f (quote ("soft-aes"))) (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "safe-nd") (r "~0.8.0") (d #t) (k 0)) (d (n "safe-nd") (r "~0.8.0") (d #t) (k 1)) (d (n "safe_authenticator") (r "~0.15.0") (o #t) (d #t) (k 0)) (d (n "safe_authenticator") (r "~0.15.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "safe_authenticator_ffi") (r "~0.15.0") (o #t) (d #t) (k 0)) (d (n "safe_bindgen") (r "~0.13.2") (o #t) (d #t) (k 1)) (d (n "safe_core") (r "~0.40.0") (d #t) (k 0)) (d (n "safe_core") (r "~0.40.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "self_encryption") (r "~0.16.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.27") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.27") (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 1)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "tokio") (r "~0.1.22") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 1)))) (h "09d6301091xy0ns4gfkbb63jrv53mklmr9bwhg3qh9va9l3fpwfk") (f (quote (("testing" "safe_core/testing" "safe_authenticator/testing" "env_logger") ("mock-network" "testing" "safe_core/mock-network" "safe_authenticator/mock-network" "safe_authenticator_ffi/mock-network") ("bindings" "safe_bindgen"))))))

(define-public crate-safe_app-0.16.0 (c (n "safe_app") (v "0.16.0") (d (list (d (n "async-trait") (r "~0.1.30") (d #t) (k 0)) (d (n "bincode") (r "~1.1.4") (d #t) (k 0)) (d (n "clap") (r "~2.33.0") (d #t) (k 2)) (d (n "env_logger") (r "~0.6.2") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (d #t) (k 2)) (d (n "ffi_utils") (r "^0.16.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.16.0") (d #t) (k 1)) (d (n "futures") (r "~0.3.5") (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (o #t) (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (d #t) (k 1)) (d (n "log") (r "~0.4.1") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.1") (d #t) (k 0)) (d (n "miscreant") (r "^0.4.2") (f (quote ("soft-aes"))) (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "safe-nd") (r "~0.8.0") (d #t) (k 0)) (d (n "safe-nd") (r "~0.8.0") (d #t) (k 1)) (d (n "safe_authenticator") (r "~0.16.0") (o #t) (d #t) (k 0)) (d (n "safe_authenticator") (r "~0.16.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "safe_bindgen") (r "~0.13.2") (o #t) (d #t) (k 1)) (d (n "safe_core") (r "~0.41.0") (d #t) (k 0)) (d (n "safe_core") (r "~0.41.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "self_encryption") (r "~0.17.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.27") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.27") (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 1)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "tokio") (r "~0.2.21") (f (quote ("rt-core" "rt-util"))) (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 1)))) (h "1vz6hdxahfhms62714ysvwqblyqmszlhscm8cwswdbfx4ngawigk") (f (quote (("testing" "safe_core/testing" "safe_authenticator/testing" "env_logger") ("mock-network" "testing" "safe_core/mock-network" "safe_authenticator/mock-network") ("bindings" "safe_bindgen"))))))

(define-public crate-safe_app-0.16.1 (c (n "safe_app") (v "0.16.1") (d (list (d (n "async-trait") (r "~0.1.30") (d #t) (k 0)) (d (n "bincode") (r "~1.1.4") (d #t) (k 0)) (d (n "clap") (r "~2.33.0") (d #t) (k 2)) (d (n "env_logger") (r "~0.6.2") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (d #t) (k 2)) (d (n "ffi_utils") (r "^0.16.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.16.0") (d #t) (k 1)) (d (n "futures") (r "~0.3.5") (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (o #t) (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (d #t) (k 1)) (d (n "log") (r "~0.4.1") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.1") (d #t) (k 0)) (d (n "miscreant") (r "^0.4.2") (f (quote ("soft-aes"))) (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "safe-nd") (r "~0.9.0") (d #t) (k 0)) (d (n "safe-nd") (r "^0.9.0") (d #t) (k 1)) (d (n "safe_authenticator") (r "~0.16.1") (o #t) (d #t) (k 0)) (d (n "safe_authenticator") (r "~0.16.1") (f (quote ("testing"))) (d #t) (k 2)) (d (n "safe_bindgen") (r "~0.13.2") (o #t) (d #t) (k 1)) (d (n "safe_core") (r "~0.41.1") (d #t) (k 0)) (d (n "safe_core") (r "~0.41.1") (f (quote ("testing"))) (d #t) (k 2)) (d (n "self_encryption") (r "~0.17.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.27") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.27") (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 1)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "tokio") (r "~0.2.21") (f (quote ("rt-core" "rt-util"))) (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 1)))) (h "1ji6x70liwbyg0a0lddhcb1rfcj2qa2bgccfgykw1k2d86zmswm2") (f (quote (("testing" "safe_core/testing" "safe_authenticator/testing" "env_logger") ("mock-network" "testing" "safe_core/mock-network" "safe_authenticator/mock-network") ("bindings" "safe_bindgen"))))))

(define-public crate-safe_app-0.16.3 (c (n "safe_app") (v "0.16.3") (d (list (d (n "async-trait") (r "~0.1.30") (d #t) (k 0)) (d (n "bincode") (r "~1.1.4") (d #t) (k 0)) (d (n "clap") (r "~2.33.0") (d #t) (k 2)) (d (n "env_logger") (r "~0.6.2") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (d #t) (k 2)) (d (n "ffi_utils") (r "^0.16.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.16.0") (d #t) (k 1)) (d (n "futures") (r "~0.3.5") (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (o #t) (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (d #t) (k 1)) (d (n "log") (r "~0.4.1") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.1") (d #t) (k 0)) (d (n "miscreant") (r "^0.4.2") (f (quote ("soft-aes"))) (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "safe-nd") (r "~0.9.0") (d #t) (k 0)) (d (n "safe-nd") (r "^0.9.0") (d #t) (k 1)) (d (n "safe_authenticator") (r "~0.16.3") (o #t) (d #t) (k 0)) (d (n "safe_authenticator") (r "~0.16.3") (f (quote ("testing"))) (d #t) (k 2)) (d (n "safe_bindgen") (r "~0.13.2") (o #t) (d #t) (k 1)) (d (n "safe_core") (r "~0.41.3") (d #t) (k 0)) (d (n "safe_core") (r "~0.41.3") (f (quote ("testing"))) (d #t) (k 2)) (d (n "self_encryption") (r "~0.17.0") (d #t) (k 0)) (d (n "serde") (r "~1.0.27") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.27") (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 1)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "tokio") (r "~0.2.21") (f (quote ("rt-core" "rt-util"))) (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.0") (d #t) (k 1)))) (h "10m7c0w078cad8xrddh6gsjh7kvc7splbkyvmway3ilfn44jylnz") (f (quote (("testing" "safe_core/testing" "safe_authenticator/testing" "env_logger") ("mock-network" "testing" "safe_core/mock-network" "safe_authenticator/mock-network") ("bindings" "safe_bindgen"))))))

(define-public crate-safe_app-0.17.0 (c (n "safe_app") (v "0.17.0") (d (list (d (n "async-trait") (r "~0.1.30") (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 2)) (d (n "env_logger") (r "~0.6.2") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (d #t) (k 2)) (d (n "ffi_utils") (r "~0.16.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.16.0") (d #t) (k 1)) (d (n "futures") (r "~0.3.5") (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (o #t) (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (d #t) (k 1)) (d (n "log") (r "~0.4.1") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.1") (d #t) (k 0)) (d (n "miscreant") (r "~0.4.2") (f (quote ("soft-aes"))) (d #t) (k 0)) (d (n "rand") (r "~0.6") (d #t) (k 0)) (d (n "safe-nd") (r "~0.10.1") (d #t) (k 0)) (d (n "safe-nd") (r "~0.10.1") (d #t) (k 1)) (d (n "safe_authenticator") (r "~0.17.0") (o #t) (d #t) (k 0)) (d (n "safe_authenticator") (r "~0.17.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "safe_bindgen") (r "~0.13.2") (o #t) (d #t) (k 1)) (d (n "safe_core") (r "~0.42.0") (d #t) (k 0)) (d (n "safe_core") (r "~0.42.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "self_encryption") (r "~0.18.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.27") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.27") (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 1)) (d (n "tiny-keccak") (r "^1.5.0") (d #t) (k 0)) (d (n "tokio") (r "~0.2.21") (f (quote ("rt-core" "rt-util"))) (d #t) (k 0)) (d (n "unwrap") (r "^1.2.0") (d #t) (k 0)) (d (n "unwrap") (r "^1.2.0") (d #t) (k 1)))) (h "1yli9bl762smdhx5vlwwyv0mdzpznygh8lkkkk13llwz7qlflxig") (f (quote (("testing" "safe_core/testing" "safe_authenticator/testing" "env_logger") ("mock-network" "testing" "safe_core/mock-network" "safe_authenticator/mock-network") ("bindings" "safe_bindgen"))))))

(define-public crate-safe_app-0.17.1 (c (n "safe_app") (v "0.17.1") (d (list (d (n "async-trait") (r "~0.1.30") (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 2)) (d (n "env_logger") (r "~0.6.2") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (d #t) (k 2)) (d (n "ffi_utils") (r "~0.17.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.17.0") (d #t) (k 1)) (d (n "futures") (r "~0.3.5") (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (o #t) (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (d #t) (k 1)) (d (n "log") (r "~0.4.1") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.1") (d #t) (k 0)) (d (n "miscreant") (r "~0.4.2") (f (quote ("soft-aes"))) (d #t) (k 0)) (d (n "rand") (r "~0.6") (d #t) (k 0)) (d (n "safe-nd") (r "~0.10.1") (d #t) (k 0)) (d (n "safe-nd") (r "~0.10.1") (d #t) (k 1)) (d (n "safe_authenticator") (r "~0.17.1") (o #t) (d #t) (k 0)) (d (n "safe_authenticator") (r "~0.17.1") (f (quote ("testing"))) (d #t) (k 2)) (d (n "safe_bindgen") (r "~0.13.2") (o #t) (d #t) (k 1)) (d (n "safe_core") (r "~0.42.1") (d #t) (k 0)) (d (n "safe_core") (r "~0.42.1") (f (quote ("testing"))) (d #t) (k 2)) (d (n "self_encryption") (r "~0.18.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.27") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.27") (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 1)) (d (n "tiny-keccak") (r "^1.5.0") (d #t) (k 0)) (d (n "tokio") (r "~0.2.21") (f (quote ("rt-core" "rt-util"))) (d #t) (k 0)) (d (n "unwrap") (r "^1.2.0") (d #t) (k 0)) (d (n "unwrap") (r "^1.2.0") (d #t) (k 1)))) (h "1xdckx4ziqxckqsqzj2sxfl2i1y3vm1c2liv1gfyxvpqkd79wd67") (f (quote (("testing" "safe_core/testing" "safe_authenticator/testing" "env_logger") ("mock-network" "testing" "safe_core/mock-network" "safe_authenticator/mock-network") ("bindings" "safe_bindgen"))))))

(define-public crate-safe_app-0.18.0 (c (n "safe_app") (v "0.18.0") (d (list (d (n "async-trait") (r "~0.1.30") (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 2)) (d (n "env_logger") (r "~0.6.2") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (d #t) (k 2)) (d (n "ffi_utils") (r "~0.17.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.17.0") (d #t) (k 1)) (d (n "futures") (r "~0.3.5") (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (o #t) (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (d #t) (k 1)) (d (n "log") (r "~0.4.1") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.1") (d #t) (k 0)) (d (n "miscreant") (r "~0.4.2") (f (quote ("soft-aes"))) (d #t) (k 0)) (d (n "rand") (r "~0.7.3") (d #t) (k 0)) (d (n "safe-nd") (r "~0.11.0") (d #t) (k 0)) (d (n "safe-nd") (r "~0.11.0") (d #t) (k 1)) (d (n "safe_authenticator") (r "~0.18.0") (o #t) (d #t) (k 0)) (d (n "safe_authenticator") (r "~0.18.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "safe_bindgen") (r "~0.13.2") (o #t) (d #t) (k 1)) (d (n "safe_core") (r "~0.43.0") (d #t) (k 0)) (d (n "safe_core") (r "~0.43.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "self_encryption") (r "^0.19.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.27") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.27") (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.4.0") (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.4.0") (d #t) (k 1)) (d (n "tiny-keccak") (r "^1.5.0") (d #t) (k 0)) (d (n "tokio") (r "~0.2.21") (f (quote ("rt-core" "rt-util"))) (d #t) (k 0)) (d (n "unwrap") (r "^1.2.0") (d #t) (k 0)) (d (n "unwrap") (r "^1.2.0") (d #t) (k 1)) (d (n "xor_name") (r "^1") (d #t) (k 0)))) (h "11wplvjdndgxpjgnpjdd8s05bs1wby0z2is0wqgrmb5nzcqj0b02") (f (quote (("testing" "safe_core/testing" "safe_authenticator/testing" "env_logger") ("mock-network" "testing" "safe_core/mock-network" "safe_authenticator/mock-network") ("bindings" "safe_bindgen"))))))

(define-public crate-safe_app-0.18.1 (c (n "safe_app") (v "0.18.1") (d (list (d (n "async-trait") (r "~0.1.30") (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 2)) (d (n "env_logger") (r "~0.6.2") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "~0.6.2") (d #t) (k 2)) (d (n "ffi_utils") (r "~0.17.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.17.0") (d #t) (k 1)) (d (n "futures") (r "~0.3.5") (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (o #t) (d #t) (k 0)) (d (n "jni") (r "~0.12.0") (d #t) (k 1)) (d (n "log") (r "~0.4.1") (d #t) (k 0)) (d (n "lru-cache") (r "~0.1.1") (d #t) (k 0)) (d (n "miscreant") (r "~0.4.2") (f (quote ("soft-aes"))) (d #t) (k 0)) (d (n "rand") (r "~0.7.3") (d #t) (k 0)) (d (n "safe-nd") (r "~0.11.0") (d #t) (k 0)) (d (n "safe-nd") (r "~0.11.0") (d #t) (k 1)) (d (n "safe_authenticator") (r "~0.18.0") (o #t) (d #t) (k 0)) (d (n "safe_authenticator") (r "~0.18.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "safe_bindgen") (r "~0.13.2") (o #t) (d #t) (k 1)) (d (n "safe_core") (r "~0.43.0") (d #t) (k 0)) (d (n "safe_core") (r "~0.43.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "self_encryption") (r "^0.19.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.27") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.27") (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.4.0") (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.4.0") (d #t) (k 1)) (d (n "tiny-keccak") (r "^1.5.0") (d #t) (k 0)) (d (n "tokio") (r "~0.2.21") (f (quote ("rt-core" "rt-util"))) (d #t) (k 0)) (d (n "unwrap") (r "^1.2.0") (d #t) (k 0)) (d (n "unwrap") (r "^1.2.0") (d #t) (k 1)) (d (n "xor_name") (r "^1") (d #t) (k 0)))) (h "1fkj2l5qbb2navjhmk9m6z1844lsli15d3aywa95j7ni0ra9k7ha") (f (quote (("testing" "safe_core/testing" "safe_authenticator/testing" "env_logger") ("mock-network" "testing" "safe_core/mock-network" "safe_authenticator/mock-network") ("bindings" "safe_bindgen"))))))

