(define-module (crates-io sa fe safe_pqc_kyber) #:use-module (crates-io))

(define-public crate-safe_pqc_kyber-0.6.1 (c (n "safe_pqc_kyber") (v "0.6.1") (d (list (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2.9") (f (quote ("js"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "wasm-bindgen") (r "^0.2.84") (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1.6.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "05b6sgskpycglmfcxizkfg8hxivsdklwjcsinfcs0a023l2lhybb") (f (quote (("wasm" "wasm-bindgen" "getrandom" "rand") ("std") ("kyber768") ("kyber512") ("kyber1024") ("benchmarking" "criterion"))))))

(define-public crate-safe_pqc_kyber-0.6.2 (c (n "safe_pqc_kyber") (v "0.6.2") (d (list (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2.9") (f (quote ("js"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("getrandom"))) (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "wasm-bindgen") (r "^0.2.84") (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1.6.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "124yywkaja2js9j4c7dqbphz41gnhx6fmzbh5crimbqn94h8xv15") (f (quote (("wasm" "wasm-bindgen" "getrandom" "rand") ("std") ("kyber768") ("kyber512") ("kyber1024") ("benchmarking" "criterion"))))))

