(define-module (crates-io sa fe safe-api) #:use-module (crates-io))

(define-public crate-safe-api-0.4.0 (c (n "safe-api") (v "0.4.0") (d (list (d (n "assert_cmd") (r "^0.11.1") (d #t) (k 2)) (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("precommit-hook" "user-hooks"))) (k 2)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "duct") (r "^0.12.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.6.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.12.0") (d #t) (k 0)) (d (n "futures") (r "~0.1.17") (d #t) (k 0)) (d (n "human-panic") (r "^1.0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.18.0") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.1") (d #t) (k 0)) (d (n "multibase") (r "^0.6.0") (d #t) (k 0)) (d (n "predicates") (r "^1.0.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.4.0") (d #t) (k 0)) (d (n "relative-path") (r "^0.4.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.5") (d #t) (k 0)) (d (n "rust_sodium") (r "~0.10.2") (d #t) (k 1)) (d (n "safe-nd") (r "~0.3.0") (d #t) (k 0)) (d (n "safe-nd") (r "~0.3.0") (d #t) (k 1)) (d (n "safe_app") (r "~0.10.0") (d #t) (k 0)) (d (n "safe_bindgen") (r "~0.13.1") (o #t) (d #t) (k 1)) (d (n "safe_core") (r "~0.33.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.91") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.1") (d #t) (k 1)) (d (n "unwrap") (r "~1.2.1") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "validator") (r "^0.8.0") (d #t) (k 0)) (d (n "validator_derive") (r "^0.8.0") (d #t) (k 0)) (d (n "walkdir") (r "~2.0.1") (d #t) (k 0)))) (h "0pkrn721cmkgkwqlmhww0yqllg0lj0p84502gx0mqh2mppbl9pqa") (f (quote (("scl-mock" "fake-auth") ("mock-network" "safe_app/mock-network") ("fake-auth" "safe_app/testing") ("bindings" "safe_bindgen"))))))

(define-public crate-safe-api-0.5.0 (c (n "safe-api") (v "0.5.0") (d (list (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("precommit-hook" "user-hooks"))) (k 2)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.0") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.12.0") (d #t) (k 0)) (d (n "futures") (r "~0.1.17") (d #t) (k 0)) (d (n "human-panic") (r "^1.0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.1") (d #t) (k 0)) (d (n "multibase") (r "^0.6.0") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.4.0") (d #t) (k 0)) (d (n "relative-path") (r "^0.4.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.5") (d #t) (k 0)) (d (n "safe-nd") (r "~0.3.0") (d #t) (k 0)) (d (n "safe_app") (r "~0.10.0") (d #t) (k 0)) (d (n "safe_core") (r "~0.33.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.91") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.1") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "validator") (r "^0.8.0") (d #t) (k 0)) (d (n "validator_derive") (r "^0.8.0") (d #t) (k 0)) (d (n "walkdir") (r "~2.0.1") (d #t) (k 0)))) (h "1sz7i67iq8gvd4gz0kllgvf04h71ixymq33nx7hzp3l403by7ps5") (f (quote (("scl-mock" "fake-auth") ("mock-network" "safe_app/mock-network") ("fake-auth" "safe_app/testing"))))))

(define-public crate-safe-api-0.6.0 (c (n "safe-api") (v "0.6.0") (d (list (d (n "bincode") (r "~1.1.4") (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("precommit-hook" "user-hooks"))) (k 2)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "directories") (r "^1.0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.0") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "~0.1.17") (d #t) (k 0)) (d (n "jsonrpc-quic") (r "~0.0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.1") (d #t) (k 0)) (d (n "multibase") (r "^0.6.0") (d #t) (k 0)) (d (n "quinn") (r "~0.3.0") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.4.0") (d #t) (k 0)) (d (n "rcgen") (r "^0.2") (d #t) (k 0)) (d (n "relative-path") (r "^0.4.0") (d #t) (k 0)) (d (n "safe-nd") (r "~0.4.0") (d #t) (k 0)) (d (n "safe_app") (r "^0.11.0") (d #t) (k 0)) (d (n "safe_authenticator") (r "^0.11.0") (d #t) (k 0)) (d (n "safe_core") (r "^0.36.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.91") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.41") (d #t) (k 0)) (d (n "slog") (r "^2.1") (d #t) (k 0)) (d (n "slog-term") (r "^2") (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "tokio") (r "^0.1.6") (d #t) (k 0)) (d (n "tokio-current-thread") (r "^0.1") (d #t) (k 0)) (d (n "tokio-reactor") (r "^0.1.1") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.1") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "urlencoding") (r "^1.0.0") (d #t) (k 0)) (d (n "validator") (r "^0.8.0") (d #t) (k 0)) (d (n "validator_derive") (r "^0.8.0") (d #t) (k 0)) (d (n "walkdir") (r "~2.0.1") (d #t) (k 0)))) (h "1vxyni1ycvs5gp9vcjkwpjq5djgvs6iy1f2j1xcqbnjrsjn3gxkx") (f (quote (("scl-mock" "fake-auth") ("mock-network" "safe_app/mock-network" "safe_authenticator/mock-network") ("fake-auth" "safe_app/testing"))))))

(define-public crate-safe-api-0.7.0 (c (n "safe-api") (v "0.7.0") (d (list (d (n "bincode") (r "~1.1.4") (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("precommit-hook" "user-hooks"))) (k 2)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.0") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "~0.1.29") (d #t) (k 0)) (d (n "jsonrpc-quic") (r "~0.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.1") (d #t) (k 0)) (d (n "multibase") (r "^0.6.0") (d #t) (k 0)) (d (n "quinn") (r "~0.3.0") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.4.0") (d #t) (k 0)) (d (n "rcgen") (r "^0.2") (d #t) (k 0)) (d (n "relative-path") (r "^0.4.0") (d #t) (k 0)) (d (n "safe-nd") (r "^0.6.2") (d #t) (k 0)) (d (n "safe_app") (r "^0.13.0") (d #t) (k 0)) (d (n "safe_authenticator") (r "^0.13.0") (d #t) (k 0)) (d (n "safe_core") (r "^0.38.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.91") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.41") (d #t) (k 0)) (d (n "slog") (r "^2.1") (d #t) (k 0)) (d (n "slog-term") (r "^2") (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "tokio") (r "^0.1.6") (d #t) (k 0)) (d (n "tokio-current-thread") (r "^0.1") (d #t) (k 0)) (d (n "tokio-reactor") (r "^0.1.1") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.1") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "urlencoding") (r "^1.0.0") (d #t) (k 0)) (d (n "validator") (r "^0.8.0") (d #t) (k 0)) (d (n "validator_derive") (r "^0.8.0") (d #t) (k 0)) (d (n "walkdir") (r "~2.0.1") (d #t) (k 0)))) (h "0c6hssp96va3khm0xaahailwglrpz2g61gm6804i3cwadm47b22i") (f (quote (("scl-mock" "fake-auth") ("mock-network" "safe_app/mock-network" "safe_authenticator/mock-network") ("fake-auth" "safe_app/testing"))))))

(define-public crate-safe-api-0.8.0 (c (n "safe-api") (v "0.8.0") (d (list (d (n "bincode") (r "~1.1.4") (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("precommit-hook" "user-hooks"))) (k 2)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.0") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "~0.1.29") (d #t) (k 0)) (d (n "jsonrpc-quic") (r "~0.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.1") (d #t) (k 0)) (d (n "multibase") (r "^0.6.0") (d #t) (k 0)) (d (n "quinn") (r "~0.3.0") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.4.0") (d #t) (k 0)) (d (n "rcgen") (r "^0.2") (d #t) (k 0)) (d (n "relative-path") (r "^0.4.0") (d #t) (k 0)) (d (n "safe-nd") (r "^0.6.2") (d #t) (k 0)) (d (n "safe_app") (r "^0.13.0") (d #t) (k 0)) (d (n "safe_authenticator") (r "^0.13.0") (d #t) (k 0)) (d (n "safe_core") (r "^0.38.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.91") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.41") (d #t) (k 0)) (d (n "slog") (r "^2.1") (d #t) (k 0)) (d (n "slog-term") (r "^2") (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "tokio") (r "^0.1.6") (d #t) (k 0)) (d (n "tokio-current-thread") (r "^0.1") (d #t) (k 0)) (d (n "tokio-reactor") (r "^0.1.1") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.1") (d #t) (k 2)) (d (n "url") (r "^1.7.2") (d #t) (k 0)) (d (n "urlencoding") (r "^1.0.0") (d #t) (k 0)) (d (n "validator") (r "^0.8.0") (d #t) (k 0)) (d (n "validator_derive") (r "^0.8.0") (d #t) (k 0)) (d (n "walkdir") (r "~2.0.1") (d #t) (k 0)))) (h "08r1bs1y9s7qhdc8rsmjcly3s746yybzcvz0fkfajvhszbdgc73a") (f (quote (("scl-mock" "fake-auth") ("mock-network" "safe_app/mock-network" "safe_authenticator/mock-network") ("fake-auth" "safe_app/testing"))))))

(define-public crate-safe-api-0.9.0 (c (n "safe-api") (v "0.9.0") (d (list (d (n "bincode") (r "~1.1.4") (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("precommit-hook" "user-hooks"))) (k 2)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.1.29") (d #t) (k 0)) (d (n "jsonrpc-quic") (r "~0.0.3") (d #t) (k 0)) (d (n "lazy_static") (r "~1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.1") (d #t) (k 0)) (d (n "multibase") (r "^0.6.0") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.4.0") (d #t) (k 0)) (d (n "relative-path") (r "^0.4.0") (d #t) (k 0)) (d (n "safe-nd") (r "^0.8.0") (d #t) (k 0)) (d (n "safe_app") (r "^0.14.0") (d #t) (k 0)) (d (n "safe_authenticator") (r "^0.14.0") (d #t) (k 0)) (d (n "safe_core") (r "^0.39.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.91") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.41") (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.11") (f (quote ("rt-threaded"))) (d #t) (k 0)) (d (n "unwrap") (r "~1.2.1") (d #t) (k 2)) (d (n "url") (r "~2.1.1") (d #t) (k 0)) (d (n "urlencoding") (r "^1.0.0") (d #t) (k 0)) (d (n "walkdir") (r "~2.0.1") (d #t) (k 0)))) (h "0ns1limdnj6645mh3jjmw0nn0pw7wknxx5zpwjy4cmy1kpddypf6") (f (quote (("scl-mock" "fake-auth") ("mock-network" "safe_app/mock-network" "safe_authenticator/mock-network") ("fake-auth" "safe_app/testing") ("default" "authenticator" "authd_client" "app") ("authenticator") ("authd_client") ("app"))))))

(define-public crate-safe-api-0.10.0 (c (n "safe-api") (v "0.10.0") (d (list (d (n "async-std") (r "~1.5.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "bincode") (r "~1.1.4") (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("precommit-hook" "user-hooks"))) (k 2)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.1.29") (d #t) (k 0)) (d (n "jsonrpc-quic") (r "~0.0.3") (d #t) (k 0)) (d (n "lazy_static") (r "~1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.1") (d #t) (k 0)) (d (n "multibase") (r "^0.6.0") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.4.0") (d #t) (k 0)) (d (n "relative-path") (r "^0.4.0") (d #t) (k 0)) (d (n "safe-nd") (r "^0.8.0") (d #t) (k 0)) (d (n "safe_app") (r "^0.14.1") (d #t) (k 0)) (d (n "safe_authenticator") (r "^0.14.1") (d #t) (k 0)) (d (n "safe_core") (r "^0.39.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.91") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.41") (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.13") (f (quote ("rt-core"))) (d #t) (k 0)) (d (n "tokio") (r "^0.2.13") (f (quote ("macros"))) (d #t) (k 2)) (d (n "unwrap") (r "~1.2.1") (d #t) (k 2)) (d (n "url") (r "~2.1.1") (d #t) (k 0)) (d (n "urlencoding") (r "^1.0.0") (d #t) (k 0)) (d (n "walkdir") (r "~2.3.1") (d #t) (k 0)))) (h "1vjf54rp1vrsrgcv2fg8vmzgb1pbzpfr4bdj1r164kxycmy790jp") (f (quote (("scl-mock" "fake-auth") ("mock-network" "safe_app/mock-network" "safe_authenticator/mock-network") ("fake-auth" "safe_app/testing") ("default" "authenticator" "authd_client" "app") ("authenticator") ("authd_client") ("app"))))))

(define-public crate-safe-api-0.10.1 (c (n "safe-api") (v "0.10.1") (d (list (d (n "async-std") (r "~1.5.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "bincode") (r "~1.1.4") (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("precommit-hook" "user-hooks"))) (k 2)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.1.29") (d #t) (k 0)) (d (n "jsonrpc-quic") (r "~0.0.3") (d #t) (k 0)) (d (n "lazy_static") (r "~1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.1") (d #t) (k 0)) (d (n "multibase") (r "^0.6.0") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.4.0") (d #t) (k 0)) (d (n "relative-path") (r "^0.4.0") (d #t) (k 0)) (d (n "safe-nd") (r "^0.8.0") (d #t) (k 0)) (d (n "safe_app") (r "^0.14.1") (d #t) (k 0)) (d (n "safe_authenticator") (r "^0.14.1") (d #t) (k 0)) (d (n "safe_core") (r "^0.39.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.91") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.41") (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.13") (f (quote ("rt-core"))) (d #t) (k 0)) (d (n "tokio") (r "^0.2.13") (f (quote ("macros"))) (d #t) (k 2)) (d (n "url") (r "~2.1.1") (d #t) (k 0)) (d (n "urlencoding") (r "^1.0.0") (d #t) (k 0)) (d (n "walkdir") (r "~2.3.1") (d #t) (k 0)))) (h "1rfl6xbysz7nk50jzd46fxsh70cbrpjdkzipfw2wh074jwv77cil") (f (quote (("scl-mock" "fake-auth") ("mock-network" "safe_app/mock-network" "safe_authenticator/mock-network") ("fake-auth" "safe_app/testing") ("default" "authenticator" "authd_client" "app") ("authenticator") ("authd_client") ("app"))))))

(define-public crate-safe-api-0.11.0 (c (n "safe-api") (v "0.11.0") (d (list (d (n "async-std") (r "~1.5.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.24") (d #t) (k 0)) (d (n "bincode") (r "~1.1.4") (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("precommit-hook" "user-hooks"))) (k 2)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.1.29") (d #t) (k 0)) (d (n "jsonrpc-quic") (r "~0.0.4") (d #t) (k 0)) (d (n "lazy_static") (r "~1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.1") (d #t) (k 0)) (d (n "multibase") (r "^0.6.0") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.4.0") (d #t) (k 0)) (d (n "relative-path") (r "^0.4.0") (d #t) (k 0)) (d (n "safe-nd") (r "^0.8.0") (d #t) (k 0)) (d (n "safe_app") (r "^0.15.0") (d #t) (k 0)) (d (n "safe_authenticator") (r "^0.15.0") (d #t) (k 0)) (d (n "safe_core") (r "^0.40.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.91") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.41") (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.13") (f (quote ("rt-core"))) (d #t) (k 0)) (d (n "tokio") (r "^0.2.13") (f (quote ("macros"))) (d #t) (k 2)) (d (n "url") (r "~2.1.1") (d #t) (k 0)) (d (n "urlencoding") (r "^1.0.0") (d #t) (k 0)) (d (n "walkdir") (r "~2.3.1") (d #t) (k 0)))) (h "1pm3svw21c9zdhdd0j5lr9jjqp8a551pdmc7iimvzsvh0p617v1j") (f (quote (("scl-mock" "fake-auth") ("mock-network" "safe_app/mock-network" "safe_authenticator/mock-network") ("fake-auth" "safe_app/testing") ("default" "authenticator" "authd_client" "app") ("authenticator") ("authd_client") ("app"))))))

(define-public crate-safe-api-0.12.0 (c (n "safe-api") (v "0.12.0") (d (list (d (n "async-std") (r "^1.5.0") (d #t) (k 0)) (d (n "async-trait") (r "~0.1.24") (d #t) (k 0)) (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("precommit-hook" "user-hooks"))) (k 2)) (d (n "chrono") (r "~0.4.6") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "env_logger") (r "~0.6.0") (d #t) (k 0)) (d (n "futures") (r "~0.1.29") (d #t) (k 0)) (d (n "jsonrpc-quic") (r "~0.0.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "~0.4.6") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.1") (d #t) (k 0)) (d (n "multibase") (r "~0.6.0") (d #t) (k 0)) (d (n "rand") (r "~0.6.5") (d #t) (k 0)) (d (n "rand_core") (r "~0.4.0") (d #t) (k 0)) (d (n "relative-path") (r "~0.4.0") (d #t) (k 0)) (d (n "safe-nd") (r "~0.8.0") (d #t) (k 0)) (d (n "safe_app") (r "~0.15.0") (d #t) (k 0)) (d (n "safe_authenticator") (r "~0.15.0") (d #t) (k 0)) (d (n "safe_core") (r "~0.40.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.91") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.41") (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.5.0") (d #t) (k 0)) (d (n "tokio") (r "~0.2.13") (f (quote ("rt-core"))) (d #t) (k 0)) (d (n "tokio") (r "~0.2.13") (f (quote ("macros"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 0)) (d (n "urlencoding") (r "^1.0.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)))) (h "1qvrfyyll6gg6716zjqf2g4bnahq34q86njcifvvyc87p329zzpl") (f (quote (("scl-mock" "fake-auth") ("mock-network" "safe_app/mock-network" "safe_authenticator/mock-network") ("fake-auth" "safe_app/testing") ("default" "authenticator" "authd_client" "app") ("authenticator") ("authd_client") ("app"))))))

(define-public crate-safe-api-0.13.0 (c (n "safe-api") (v "0.13.0") (d (list (d (n "async-std") (r "^1.6.0") (d #t) (k 0)) (d (n "async-trait") (r "~0.1.24") (d #t) (k 0)) (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("precommit-hook" "user-hooks"))) (k 2)) (d (n "chrono") (r "~0.4.6") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "env_logger") (r "~0.6.0") (d #t) (k 0)) (d (n "futures") (r "~0.3.5") (d #t) (k 0)) (d (n "jsonrpc-quic") (r "~0.0.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "~0.4.6") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.1") (d #t) (k 0)) (d (n "multibase") (r "~0.6.0") (d #t) (k 0)) (d (n "rand") (r "~0.6.5") (d #t) (k 0)) (d (n "rand_core") (r "~0.4.0") (d #t) (k 0)) (d (n "relative-path") (r "~0.4.0") (d #t) (k 0)) (d (n "safe-nd") (r "~0.8.0") (d #t) (k 0)) (d (n "safe_app") (r "^0.16.0") (d #t) (k 0)) (d (n "safe_authenticator") (r "^0.16.0") (d #t) (k 0)) (d (n "safe_core") (r "^0.41.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.91") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.41") (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.5.0") (d #t) (k 0)) (d (n "tokio") (r "~0.2.21") (f (quote ("rt-core"))) (d #t) (k 0)) (d (n "tokio") (r "~0.2.21") (f (quote ("macros"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 0)) (d (n "urlencoding") (r "^1.0.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)))) (h "05ax4wrmrzzr1a4x35z5gx4ax4dg9sxf6ii859l62j97hlxr706d") (f (quote (("scl-mock" "fake-auth") ("mock-network" "safe_app/mock-network" "safe_authenticator/mock-network") ("fake-auth" "safe_app/testing") ("default" "authenticator" "authd_client" "app") ("authenticator") ("authd_client") ("app"))))))

(define-public crate-safe-api-0.14.0 (c (n "safe-api") (v "0.14.0") (d (list (d (n "async-std") (r "^1.6.0") (d #t) (k 0)) (d (n "async-trait") (r "~0.1.24") (d #t) (k 0)) (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("precommit-hook" "user-hooks"))) (k 2)) (d (n "chrono") (r "~0.4.6") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "env_logger") (r "~0.6.0") (d #t) (k 0)) (d (n "futures") (r "~0.3.5") (d #t) (k 0)) (d (n "jsonrpc-quic") (r "~0.0.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "~0.4.6") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.1") (d #t) (k 0)) (d (n "multibase") (r "~0.6.0") (d #t) (k 0)) (d (n "rand") (r "~0.6.5") (d #t) (k 0)) (d (n "rand_core") (r "~0.4.0") (d #t) (k 0)) (d (n "relative-path") (r "~0.4.0") (d #t) (k 0)) (d (n "safe-nd") (r "~0.9.0") (d #t) (k 0)) (d (n "safe_app") (r "^0.16.3") (d #t) (k 0)) (d (n "safe_authenticator") (r "^0.16.3") (d #t) (k 0)) (d (n "safe_core") (r "^0.41.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.91") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.41") (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.5.0") (d #t) (k 0)) (d (n "tokio") (r "~0.2.21") (f (quote ("rt-core"))) (d #t) (k 0)) (d (n "tokio") (r "~0.2.21") (f (quote ("macros"))) (d #t) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 0)) (d (n "urlencoding") (r "^1.0.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)))) (h "1hmdcjlyiskh43zfxs3v6grrpi08kr5nlv5pmc7d151rgfb8845l") (f (quote (("scl-mock" "fake-auth") ("mock-network" "safe_app/mock-network" "safe_authenticator/mock-network") ("fake-auth" "safe_app/testing") ("default" "authenticator" "authd_client" "app") ("authenticator") ("authd_client") ("app"))))))

(define-public crate-safe-api-0.15.0 (c (n "safe-api") (v "0.15.0") (d (list (d (n "async-std") (r "^1.6.0") (d #t) (k 0)) (d (n "async-trait") (r "~0.1.24") (d #t) (k 0)) (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("precommit-hook" "user-hooks"))) (k 2)) (d (n "chrono") (r "~0.4.6") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "env_logger") (r "~0.6.0") (d #t) (k 0)) (d (n "futures") (r "~0.3.5") (d #t) (k 0)) (d (n "jsonrpc-quic") (r "~0.0.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "~0.4.6") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.1") (d #t) (k 0)) (d (n "multibase") (r "~0.6.0") (d #t) (k 0)) (d (n "rand") (r "~0.6.5") (d #t) (k 0)) (d (n "rand_core") (r "~0.4.0") (d #t) (k 0)) (d (n "relative-path") (r "~0.4.0") (d #t) (k 0)) (d (n "safe-nd") (r "~0.10.1") (d #t) (k 0)) (d (n "safe_app") (r "~0.17.1") (d #t) (k 0)) (d (n "safe_authenticator") (r "~0.17.1") (d #t) (k 0)) (d (n "safe_core") (r "~0.42.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.91") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.41") (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.5.0") (d #t) (k 0)) (d (n "tokio") (r "~0.2.21") (f (quote ("rt-core"))) (d #t) (k 0)) (d (n "tokio") (r "~0.2.21") (f (quote ("macros"))) (d #t) (k 2)) (d (n "uhttp_uri") (r "~0.5.1") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (k 0)) (d (n "urlencoding") (r "^1.0.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)))) (h "1smfzvgzhqaxp5vg760s6g7y249jlhqgb7gj1hcyzyffyzq46zw9") (f (quote (("scl-mock") ("default" "authenticator" "authd_client" "app") ("authenticator") ("authd_client") ("app"))))))

(define-public crate-safe-api-0.15.1 (c (n "safe-api") (v "0.15.1") (d (list (d (n "async-std") (r "^1.6.0") (d #t) (k 0)) (d (n "async-trait") (r "~0.1.24") (d #t) (k 0)) (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("precommit-hook" "user-hooks"))) (k 2)) (d (n "chrono") (r "~0.4.6") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "env_logger") (r "~0.6.0") (d #t) (k 0)) (d (n "futures") (r "~0.3.5") (d #t) (k 0)) (d (n "jsonrpc-quic") (r "~0.0.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "~0.4.6") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.1") (d #t) (k 0)) (d (n "multibase") (r "~0.6.0") (d #t) (k 0)) (d (n "rand") (r "~0.6.5") (d #t) (k 0)) (d (n "rand_core") (r "~0.4.0") (d #t) (k 0)) (d (n "relative-path") (r "~0.4.0") (d #t) (k 0)) (d (n "safe-nd") (r "~0.10.1") (d #t) (k 0)) (d (n "safe_app") (r "~0.17.1") (d #t) (k 0)) (d (n "safe_authenticator") (r "~0.17.1") (d #t) (k 0)) (d (n "safe_core") (r "~0.42.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.91") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.41") (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.2") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.5.0") (d #t) (k 0)) (d (n "tokio") (r "~0.2.21") (f (quote ("rt-core"))) (d #t) (k 0)) (d (n "tokio") (r "~0.2.21") (f (quote ("macros"))) (d #t) (k 2)) (d (n "uhttp_uri") (r "~0.5.1") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (k 0)) (d (n "urlencoding") (r "^1.0.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)))) (h "1hchap5c7v2hhqnsbq0wc9mr9xakvwrdnjbdvn1j2vwj2xnpglkk") (f (quote (("scl-mock") ("default" "authenticator" "authd_client" "app") ("authenticator") ("authd_client") ("app"))))))

