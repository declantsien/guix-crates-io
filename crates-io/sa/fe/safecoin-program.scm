(define-module (crates-io sa fe safecoin-program) #:use-module (crates-io))

(define-public crate-safecoin-program-1.6.16 (c (n "safecoin-program") (v "1.6.16") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "solana-frozen-abi") (r "=1.6.16") (d #t) (k 0)) (d (n "solana-frozen-abi-macro") (r "=1.6.16") (d #t) (k 0)) (d (n "solana-logger") (r "=1.6.16") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "solana-sdk-macro") (r "=1.6.16") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1d57d2acis6bjdgn3pg8935l79zf8ax7xf8kj8cw76ajsr7byxj0")))

(define-public crate-safecoin-program-1.6.17 (c (n "safecoin-program") (v "1.6.17") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "safecoin-frozen-abi") (r "=1.6.17") (d #t) (k 0)) (d (n "safecoin-frozen-abi-macro") (r "=1.6.17") (d #t) (k 0)) (d (n "safecoin-logger") (r "=1.6.17") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "safecoin-sdk-macro") (r "=1.6.17") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0kamv1xn906g4j9fl468qa6r2dw8cfkfxzhm6gj7nijka4sdxdfg")))

(define-public crate-safecoin-program-1.6.18 (c (n "safecoin-program") (v "1.6.18") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "safecoin-frozen-abi") (r "=1.6.18") (d #t) (k 0)) (d (n "safecoin-frozen-abi-macro") (r "=1.6.18") (d #t) (k 0)) (d (n "safecoin-logger") (r "=1.6.18") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "safecoin-sdk-macro") (r "=1.6.18") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0ckmf01051yhzgg1jyfa29jh0h8rwrrgrf9qf0fmphjilxymwlfv")))

(define-public crate-safecoin-program-1.6.19 (c (n "safecoin-program") (v "1.6.19") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "safecoin-frozen-abi") (r ">=1.6.19") (d #t) (k 0)) (d (n "safecoin-frozen-abi-macro") (r ">=1.6.19") (d #t) (k 0)) (d (n "safecoin-logger") (r ">=1.6.18") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "safecoin-sdk-macro") (r ">=1.6.18") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1lig1s4ivq6pg1js35q9ld6xkbx0ms5xpyp9isgc864v7vc2frwz")))

(define-public crate-safecoin-program-1.7.17 (c (n "safecoin-program") (v "1.7.17") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "safecoin-frozen-abi") (r "=1.7.17") (d #t) (k 0)) (d (n "safecoin-frozen-abi-macro") (r "=1.7.17") (d #t) (k 0)) (d (n "safecoin-logger") (r "=1.7.17") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "safecoin-sdk-macro") (r "=1.7.17") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "11mb83izk0cz5nl0x4pikypz2y5kn61ch9ln1gzdwslhch46hifs")))

(define-public crate-safecoin-program-1.8.12 (c (n "safecoin-program") (v "1.8.12") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake3") (r "^0.3.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "borsh") (r "^0.9.0") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "bs58") (r "^0.3.1") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "safecoin-frozen-abi") (r "=1.8.12") (d #t) (k 0)) (d (n "safecoin-frozen-abi-macro") (r "=1.8.12") (d #t) (k 0)) (d (n "safecoin-logger") (r "=1.8.12") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "safecoin-sdk-macro") (r "=1.8.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1nza4mwb26cqv6dj0r2i89ca57gvicad7kn0dw38pv4rksw2jnpr")))

(define-public crate-safecoin-program-1.9.29 (c (n "safecoin-program") (v "1.9.29") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.0.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "safecoin-frozen-abi") (r "=1.9.29") (d #t) (k 0)) (d (n "safecoin-frozen-abi-macro") (r "=1.9.29") (d #t) (k 0)) (d (n "safecoin-logger") (r "=1.9.29") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "safecoin-sdk-macro") (r "=1.9.29") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.9.2") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "1yaxfmiybjn8q9xi5qxfhl89pl00bxl953q6lapf96vs88kaz1gk")))

(define-public crate-safecoin-program-1.10.32 (c (n "safecoin-program") (v "1.10.32") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "safecoin-frozen-abi") (r "=1.10.32") (d #t) (k 0)) (d (n "safecoin-frozen-abi-macro") (r "=1.10.32") (d #t) (k 0)) (d (n "safecoin-logger") (r "=1.10.32") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 2)) (d (n "safecoin-sdk-macro") (r "=1.10.32") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "0avi5xydxn8blplsg21l64khfx5r45by1ph0r93nvkgy6lchfmas")))

(define-public crate-safecoin-program-1.10.33 (c (n "safecoin-program") (v "1.10.33") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "safecoin-frozen-abi") (r "=1.10.32") (d #t) (k 0)) (d (n "safecoin-frozen-abi-macro") (r "=1.10.32") (d #t) (k 0)) (d (n "safecoin-logger") (r "=1.10.32") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 2)) (d (n "safecoin-sdk-macro") (r "=1.10.32") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "0mkzx80i2985ki83ishvaw5d89lxgbga1qh6l9gws5n1fxzbdd57")))

(define-public crate-safecoin-program-1.10.34 (c (n "safecoin-program") (v "1.10.34") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "blake3") (r "^1.2.0") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.3") (d #t) (k 0)) (d (n "safecoin-frozen-abi") (r "=1.10.34") (d #t) (k 0)) (d (n "safecoin-frozen-abi-macro") (r "=1.10.34") (d #t) (k 0)) (d (n "safecoin-logger") (r "=1.10.34") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 2)) (d (n "safecoin-sdk-macro") (r "=1.10.34") (d #t) (k 0)) (d (n "serde") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "0fa3ykvbwka5g5m7vnzxb0f0v38rv730jkc1blfdlwj6hff7qsi4")))

(define-public crate-safecoin-program-1.14.3 (c (n "safecoin-program") (v "1.14.3") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "blake3") (r "^1.3.1") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cc") (r "^1.0.67") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128" "std"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (f (quote ("simd" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "safecoin-frozen-abi") (r "=1.14.3") (d #t) (k 0)) (d (n "safecoin-frozen-abi-macro") (r "=1.14.3") (d #t) (k 0)) (d (n "safecoin-logger") (r "=1.14.3") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "safecoin-sdk-macro") (r "=1.14.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "1wykvbcps6ldxy31l6gv5yhs6kr2c6833b9qk4v2w7fw34zjyfm2") (f (quote (("default"))))))

(define-public crate-safecoin-program-1.14.17 (c (n "safecoin-program") (v "1.14.17") (d (list (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (f (quote ("digest" "traits-preview"))) (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (d #t) (k 0)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bv") (r "^0.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128" "std"))) (d #t) (k 0)) (d (n "rustversion") (r "^1.0.7") (d #t) (k 0)) (d (n "safecoin-frozen-abi") (r "=1.14.17") (d #t) (k 0)) (d (n "safecoin-frozen-abi-macro") (r "=1.14.17") (d #t) (k 0)) (d (n "safecoin-sdk-macro") (r "=1.14.17") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.45") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "borsh") (r "^0.9.1") (d #t) (k 2)) (d (n "borsh-derive") (r "^0.9.1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "cc") (r "^1.0.67") (f (quote ("jobserver" "parallel"))) (d #t) (k 1)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "base64") (r "^0.13") (f (quote ("alloc" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libc") (r "^0.2.126") (f (quote ("extra_traits"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "libsecp256k1") (r "^0.6.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand_chacha") (r "^0.2.2") (f (quote ("simd" "std"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "tiny-bip39") (r "^0.8.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "safecoin-logger") (r "=1.14.17") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_pointer_width = \"64\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "03swxqij5x33pp34jph741m4s0yb8nfikabfysny2kw5qksl9a0f") (f (quote (("default"))))))

