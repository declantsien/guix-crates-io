(define-module (crates-io sa fe safe-zk-token-sdk) #:use-module (crates-io))

(define-public crate-safe-zk-token-sdk-1.10.32 (c (n "safe-zk-token-sdk") (v "1.10.32") (d (list (d (n "aes-gcm-siv") (r "^0.10.3") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "cipher") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("dummy"))) (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "merlin") (r "^3") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "safecoin-program") (r "=1.10.32") (d #t) (k 0)) (d (n "safecoin-sdk") (r "=1.10.32") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "sha3") (r "^0.9") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "subtle") (r "^2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "10rs88ch8pbx243dq2rpdc8gfxgj3jrcqf7kpja6q60013xgfzqk")))

(define-public crate-safe-zk-token-sdk-1.10.34 (c (n "safe-zk-token-sdk") (v "1.10.34") (d (list (d (n "aes-gcm-siv") (r "^0.10.3") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "bytemuck") (r "^1.8.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "cipher") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("dummy"))) (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "merlin") (r "^3") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "safecoin-program") (r "=1.10.34") (d #t) (k 0)) (d (n "safecoin-sdk") (r "=1.10.34") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "sha3") (r "^0.9") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "subtle") (r "^2") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"bpf\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (t "cfg(not(target_arch = \"bpf\"))") (k 0)))) (h "1aa63lqbw4cvb7s62a24sy854alrwlc4cam7jm3i62rhlclviqhs")))

(define-public crate-safe-zk-token-sdk-1.14.3 (c (n "safe-zk-token-sdk") (v "1.14.3") (d (list (d (n "aes-gcm-siv") (r "^0.10.3") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "cipher") (r "^0.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("dummy"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "merlin") (r "^3") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "safecoin-program") (r "=1.14.3") (d #t) (k 0)) (d (n "safecoin-sdk") (r "=1.14.3") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "sha3") (r "^0.9") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "subtle") (r "^2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "11hx7q5v0kb3i1190v3l9hfyd7ljxpxx8swjizzrahnb4f8k68kx")))

(define-public crate-safe-zk-token-sdk-1.14.17 (c (n "safe-zk-token-sdk") (v "1.14.17") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytemuck") (r "^1.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "safecoin-program") (r "=1.14.17") (d #t) (k 0)) (d (n "aes-gcm-siv") (r "^0.10.3") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "arrayref") (r "^0.3.6") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "bincode") (r "^1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "byteorder") (r "^1") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "cipher") (r "^0.4") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "getrandom") (r "^0.1") (f (quote ("dummy"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "merlin") (r "^3") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "safecoin-sdk") (r "=1.14.17") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "sha3") (r "^0.9") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "subtle") (r "^2") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (t "cfg(not(target_os = \"solana\"))") (k 0)) (d (n "zeroize") (r "^1.3") (f (quote ("zeroize_derive"))) (t "cfg(not(target_os = \"solana\"))") (k 0)))) (h "083wl4lfkbj03ydhanv9xhcd75d4d7jmp0q4vbziwgmwmi08rp7p")))

