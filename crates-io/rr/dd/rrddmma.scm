(define-module (crates-io rr dd rrddmma) #:use-module (crates-io))

(define-public crate-rrddmma-0.4.1 (c (n "rrddmma") (v "0.4.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "local-ip-address") (r "^0.5.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "quick-xml") (r "^0.28.2") (d #t) (k 0)) (d (n "rdma-sys") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.7.3") (d #t) (k 0)))) (h "04c1kqckx265w278mhzihsfcrikl63mv4k889bxrscpij0188ffw") (y #t)))

(define-public crate-rrddmma-0.4.2 (c (n "rrddmma") (v "0.4.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "local-ip-address") (r "^0.5.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "quick-xml") (r "^0.28.2") (d #t) (k 0)) (d (n "rdma-sys") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.7.3") (d #t) (k 0)))) (h "0ph6xrsshl2vrh8zx9jx0xg7hx99a71q37m811x0p8bnkyi291rx") (y #t)))

(define-public crate-rrddmma-0.4.3 (c (n "rrddmma") (v "0.4.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "local-ip-address") (r "^0.5.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "quick-xml") (r "^0.28.2") (d #t) (k 0)) (d (n "rdma-sys") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.7.3") (d #t) (k 0)))) (h "0359n9n92924p7zcdal1s2zbh5ql2z7zrzl10ncfrsp56yn3bq3z") (y #t)))

(define-public crate-rrddmma-0.4.4 (c (n "rrddmma") (v "0.4.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "local-ip-address") (r "^0.5.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "quick-xml") (r "^0.28.2") (d #t) (k 0)) (d (n "rdma-sys") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.7.3") (d #t) (k 0)))) (h "015jbcjzjjxwh6dzlmbx2f84838br5ag8xm2660fwqxv9nkzy6xm") (y #t)))

(define-public crate-rrddmma-0.5.0 (c (n "rrddmma") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "local-ip-address") (r "^0.5.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "quick-xml") (r "^0.28.2") (d #t) (k 0)) (d (n "rdma-sys") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.7.3") (d #t) (k 0)))) (h "13k9cba57m9yp2rc49jmji3acgvwvbdn0221ls67xf0jngj7y7rf") (y #t)))

(define-public crate-rrddmma-0.5.1 (c (n "rrddmma") (v "0.5.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "local-ip-address") (r "^0.5.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "quick-xml") (r "^0.28.2") (d #t) (k 0)) (d (n "rdma-sys") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.7.3") (d #t) (k 0)))) (h "16z46g28966052w6qwxp48bwf6mg1w5y9nh174gsa0z3apkw0pld") (y #t)))

(define-public crate-rrddmma-0.5.2 (c (n "rrddmma") (v "0.5.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "local-ip-address") (r "^0.5.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "quick-xml") (r "^0.28.2") (d #t) (k 0)) (d (n "rdma-sys") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.7.3") (d #t) (k 0)))) (h "0cs0x8dwfdmsz6dylpcvq5hsw99pski8cvsk4sg25qwxmif6gnxa") (y #t)))

(define-public crate-rrddmma-0.5.3 (c (n "rrddmma") (v "0.5.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "local-ip-address") (r "^0.5.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "quick-xml") (r "^0.28.2") (d #t) (k 0)) (d (n "rdma-sys") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.7.3") (d #t) (k 0)))) (h "13y1nrqjcspbqlpalhalbhmk6alawh1y6kbvq8nsljza4y919q7p") (f (quote (("full_name")))) (y #t)))

(define-public crate-rrddmma-0.5.4 (c (n "rrddmma") (v "0.5.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "local-ip-address") (r "^0.5.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "quick-xml") (r "^0.28.2") (d #t) (k 0)) (d (n "rdma-sys") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.7.3") (d #t) (k 0)))) (h "0shd7l5pxvi64pv3kklk2d8l4m42vlwhfn2pcgj28i1jscfpk9rn") (f (quote (("full_name"))))))

(define-public crate-rrddmma-0.5.5 (c (n "rrddmma") (v "0.5.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "local-ip-address") (r "^0.5.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "quick-xml") (r "^0.28.2") (d #t) (k 0)) (d (n "rdma-sys") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.7.3") (d #t) (k 0)))) (h "13lqrbwg47n2kwdwgp8r3q2v8hi5nzhg883fb19xai7rwikddlg2") (f (quote (("full_name"))))))

(define-public crate-rrddmma-0.5.6 (c (n "rrddmma") (v "0.5.6") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "local-ip-address") (r "^0.5.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "quick-xml") (r "^0.28.2") (d #t) (k 0)) (d (n "rdma-sys") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.7.3") (d #t) (k 0)))) (h "0n93pn47i7cvshmjxmah4xqvfw0zzk9p05xhgb5rfgs81x475zf2")))

(define-public crate-rrddmma-0.6.0-pre1 (c (n "rrddmma") (v "0.6.0-pre1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "bindgen") (r "^0.69") (d #t) (k 1)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "pkg-config") (r "^0.3") (d #t) (k 1)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.8") (d #t) (k 0)))) (h "0l8sl8f32f33f629yhsl1iv0l63jgddhzi0rnbr3xw9c4lhq68kk")))

(define-public crate-rrddmma-0.6.0 (c (n "rrddmma") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "bindgen") (r "^0.69") (d #t) (k 1)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "pkg-config") (r "^0.3") (d #t) (k 1)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.8") (d #t) (k 0)))) (h "15cfbb6n78kvw9akc72g8f9v3r3lrn2ghzsm79zqvd7vprbh53s6")))

(define-public crate-rrddmma-0.6.1 (c (n "rrddmma") (v "0.6.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "bindgen") (r "^0.69") (d #t) (k 1)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "pkg-config") (r "^0.3") (d #t) (k 1)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.8") (d #t) (k 0)))) (h "0d70v4mg613g5nbfkgs6ss48pia7zwx88nzc5n4l06d136z6x98c")))

(define-public crate-rrddmma-0.6.2 (c (n "rrddmma") (v "0.6.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "bindgen") (r "^0.69") (d #t) (k 1)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "pkg-config") (r "^0.3") (d #t) (k 1)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.8") (d #t) (k 0)))) (h "0yjw9blqlvxhazpabnlwcgiayz7wmliq057y78b38k7rpyclk99y")))

(define-public crate-rrddmma-0.6.3 (c (n "rrddmma") (v "0.6.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "bindgen") (r "^0.69") (d #t) (k 1)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "pkg-config") (r "^0.3") (d #t) (k 1)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.8") (d #t) (k 0)))) (h "04hhgay8c0q1qyjpbrzzgpzvnghvbk0w9kc5n4dmc7pc4z7pbffs") (y #t)))

(define-public crate-rrddmma-0.6.4 (c (n "rrddmma") (v "0.6.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "bindgen") (r "^0.69") (d #t) (k 1)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "pkg-config") (r "^0.3") (d #t) (k 1)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.8") (d #t) (k 0)))) (h "00fwjygdkycc10548hp13l422ikf73pjxgsla3n3gwym39797i9c") (y #t)))

(define-public crate-rrddmma-0.6.5 (c (n "rrddmma") (v "0.6.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "bindgen") (r "^0.69") (d #t) (k 1)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "pkg-config") (r "^0.3") (d #t) (k 1)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.8") (d #t) (k 0)))) (h "0jqidnlq3zb6j0g9949a3ilsk84z8s1qqlpm40b6jnnvaqrwamrq")))

(define-public crate-rrddmma-0.6.6 (c (n "rrddmma") (v "0.6.6") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "bindgen") (r "^0.69") (d #t) (k 1)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "pkg-config") (r "^0.3") (d #t) (k 1)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.8") (d #t) (k 0)))) (h "10qi7ggd8xhl3a0nqw3sngrdazy9qniy5cpjp9fd2m6m5ygwjn8i")))

(define-public crate-rrddmma-0.7.0 (c (n "rrddmma") (v "0.7.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "bindgen") (r "^0.69") (d #t) (k 1)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "pkg-config") (r "^0.3") (d #t) (k 1)) (d (n "quanta") (r "^0.12") (d #t) (k 2)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.8") (d #t) (k 0)))) (h "1qafbnslw5ah4xsgccvdg5wyd44msy06jalvq8z9rjv0irjgkkmq")))

