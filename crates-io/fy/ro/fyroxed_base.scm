(define-module (crates-io fy ro fyroxed_base) #:use-module (crates-io))

(define-public crate-fyroxed_base-0.12.0 (c (n "fyroxed_base") (v "0.12.0") (d (list (d (n "fyrox") (r "^0.25") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "ron") (r "^0.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "0q2w68y3428v5mz5cnlkq05qviivpmwx6cpa1899gmp532q09hg5") (f (quote (("enable_profiler" "fyrox/enable_profiler")))) (r "1.56")))

(define-public crate-fyroxed_base-0.13.0 (c (n "fyroxed_base") (v "0.13.0") (d (list (d (n "fyrox") (r "^0.26") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "ron") (r "^0.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "1q1awzw7yz70n4yd4hc39wp5dbc7qwmfpkjn6c2lv464yckxb3lp") (f (quote (("enable_profiler" "fyrox/enable_profiler")))) (r "1.56")))

(define-public crate-fyroxed_base-0.14.0 (c (n "fyroxed_base") (v "0.14.0") (d (list (d (n "fyrox") (r "^0.27") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "ron") (r "^0.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "1l7xjkf5y9sw8v5l91md8xv95pafzvg7jkf7y4qj8adjz950nvzf") (f (quote (("enable_profiler" "fyrox/enable_profiler")))) (r "1.56")))

(define-public crate-fyroxed_base-0.14.1 (c (n "fyroxed_base") (v "0.14.1") (d (list (d (n "fyrox") (r "^0.27.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "ron") (r "^0.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "0g7n4i0rx73schx58p07w25jpnvpy8dd5939qpcqrwh9gs3f54dl") (f (quote (("enable_profiler" "fyrox/enable_profiler")))) (r "1.56")))

(define-public crate-fyroxed_base-0.15.0 (c (n "fyroxed_base") (v "0.15.0") (d (list (d (n "fyrox") (r "^0.28.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "ron") (r "^0.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "1chy2ghv6i2r78yp8h7fph1qp1k78v1j65fc1kpplg895dw7crhi") (f (quote (("enable_profiler" "fyrox/enable_profiler")))) (r "1.56")))

(define-public crate-fyroxed_base-0.16.0 (c (n "fyroxed_base") (v "0.16.0") (d (list (d (n "fyrox") (r "^0.29.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "ron") (r "^0.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "0k4gjbmyrcsavs4qpaplggi5xpwy10pfsf12zibkiq7qh13vd0jd") (f (quote (("enable_profiler" "fyrox/enable_profiler")))) (r "1.56")))

(define-public crate-fyroxed_base-0.17.0 (c (n "fyroxed_base") (v "0.17.0") (d (list (d (n "fyrox") (r "^0.30.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "open") (r "^3.2.0") (d #t) (k 0)) (d (n "ron") (r "^0.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.0") (d #t) (k 0)) (d (n "toml") (r "^0.7.0") (d #t) (k 0)))) (h "1xdpiwmbcix7xvklfcmvag60pwgzrlpaaj2pc0gsxm02b1n9ry8m") (f (quote (("enable_profiler" "fyrox/enable_profiler")))) (r "1.56")))

(define-public crate-fyroxed_base-0.18.0 (c (n "fyroxed_base") (v "0.18.0") (d (list (d (n "fyrox") (r "^0.31.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "open") (r "^5") (d #t) (k 0)) (d (n "ron") (r "^0.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.0") (d #t) (k 0)) (d (n "strum") (r "^0.25.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.0") (d #t) (k 0)) (d (n "toml") (r "^0.7.0") (d #t) (k 0)))) (h "0m0xmk807hpv3zsllffr2r5marhqjd3bpnpiknqwsxgna8m52gbx") (f (quote (("enable_profiler" "fyrox/enable_profiler")))) (r "1.56")))

(define-public crate-fyroxed_base-0.19.0 (c (n "fyroxed_base") (v "0.19.0") (d (list (d (n "fyrox") (r "^0.32.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "open") (r "^5") (d #t) (k 0)) (d (n "ron") (r "^0.8.0") (d #t) (k 0)) (d (n "rust-fuzzy-search") (r "^0.1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.0") (d #t) (k 0)) (d (n "strum") (r "^0.25.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.0") (d #t) (k 0)) (d (n "toml") (r "^0.7.0") (d #t) (k 0)))) (h "1s0hc60wng8khf06861vnn4gkrzjqp31xsl5mmbn1sf5ix72vk2a") (f (quote (("enable_profiler" "fyrox/enable_profiler")))) (r "1.56")))

(define-public crate-fyroxed_base-0.20.0 (c (n "fyroxed_base") (v "0.20.0") (d (list (d (n "fyrox") (r "^0.33.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "open") (r "^5") (d #t) (k 0)) (d (n "ron") (r "^0.8.0") (d #t) (k 0)) (d (n "rust-fuzzy-search") (r "^0.1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.0") (d #t) (k 0)) (d (n "strum") (r "^0.25.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.0") (d #t) (k 0)) (d (n "toml") (r "^0.7.0") (d #t) (k 0)))) (h "0v9mic8qymprjd045hcj1ss4fya24cjivlp1q637a9vqgvh71p4m") (f (quote (("enable_profiler" "fyrox/enable_profiler")))) (r "1.72")))

(define-public crate-fyroxed_base-0.20.1 (c (n "fyroxed_base") (v "0.20.1") (d (list (d (n "fyrox") (r "^0.33.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "open") (r "^5") (d #t) (k 0)) (d (n "ron") (r "^0.8.0") (d #t) (k 0)) (d (n "rust-fuzzy-search") (r "^0.1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.0") (d #t) (k 0)) (d (n "strum") (r "^0.25.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.0") (d #t) (k 0)) (d (n "toml") (r "^0.7.0") (d #t) (k 0)))) (h "0jdnzlf7vshp24y0hixj78iglnmbmy166h98xr3abs6z4cbd92hy") (f (quote (("enable_profiler" "fyrox/enable_profiler")))) (r "1.72")))

(define-public crate-fyroxed_base-0.21.0 (c (n "fyroxed_base") (v "0.21.0") (d (list (d (n "cargo_metadata") (r "^0.18.1") (d #t) (k 0)) (d (n "fyrox") (r "^0.34.0") (k 0)) (d (n "image") (r "^0.24.8") (f (quote ("gif" "jpeg" "png" "tga" "tiff" "bmp"))) (k 0)) (d (n "imageproc") (r "^0.23.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "open") (r "^5") (d #t) (k 0)) (d (n "ron") (r "^0.8.0") (d #t) (k 0)) (d (n "rust-fuzzy-search") (r "^0.1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (d #t) (k 0)) (d (n "strum") (r "^0.26.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.26.1") (d #t) (k 0)) (d (n "toml") (r "^0.8.10") (f (quote ("parse"))) (k 0)))) (h "0alclsbcrdmamy2mj9svrihvyjj2gd6rdl1w2njhvw4icd675yn3") (f (quote (("dylib_engine" "fyrox/dylib") ("default" "fyrox/default")))) (r "1.72")))

