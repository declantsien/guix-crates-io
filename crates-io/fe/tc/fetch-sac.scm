(define-module (crates-io fe tc fetch-sac) #:use-module (crates-io))

(define-public crate-fetch-sac-0.5.0 (c (n "fetch-sac") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("cargo" "derive"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("serde" "std"))) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "rstest") (r "^0.17.0") (d #t) (k 0)) (d (n "scraper") (r "^0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "stderrlog") (r "^0.5.4") (d #t) (k 0)))) (h "0iwqklvk61vdgvzhh607sbp7j4z4pf1mw5ik74fy708b3n07chrn")))

(define-public crate-fetch-sac-0.5.1 (c (n "fetch-sac") (v "0.5.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("cargo" "derive"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("serde" "std"))) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "rstest") (r "^0.17.0") (d #t) (k 0)) (d (n "scraper") (r "^0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "stderrlog") (r "^0.5.4") (d #t) (k 0)))) (h "1lsk6922gs4g54xjqrisxzxvlra2b2q1qi46c0si5nvb00h5xm6g")))

(define-public crate-fetch-sac-0.6.0 (c (n "fetch-sac") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("cargo" "derive"))) (d #t) (k 0)) (d (n "csv") (r "^1.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("serde" "std"))) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "rstest") (r "^0.17.0") (d #t) (k 0)) (d (n "scraper") (r "^0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "stderrlog") (r "^0.5.4") (d #t) (k 0)))) (h "132layi6g7m0dvwk21am2bawyfkvakpkvw1z1i8rd93bgrkhjn5m")))

(define-public crate-fetch-sac-0.6.1 (c (n "fetch-sac") (v "0.6.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("cargo" "derive"))) (d #t) (k 0)) (d (n "csv") (r "^1.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("serde" "std"))) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "scraper") (r "^0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "stderrlog") (r "^0.5.4") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.10") (f (quote ("color-auto"))) (d #t) (k 2)) (d (n "rstest") (r "^0.17.0") (d #t) (k 2)))) (h "1zc3vjw8iqf61vcna04ic5babrrd1iqfhmmii9ky9f7r2mzbn9f0")))

