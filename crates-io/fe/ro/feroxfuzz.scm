(define-module (crates-io fe ro feroxfuzz) #:use-module (crates-io))

(define-public crate-feroxfuzz-0.1.0-rc.0 (c (n "feroxfuzz") (v "0.1.0-rc.0") (d (list (d (n "allocation-counter") (r "^0.5") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 2)) (d (n "httpmock") (r "^0.6") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libafl") (r "^0.8.1") (f (quote ("std"))) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("socks"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_regex") (r "^1.1.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("rt-multi-thread" "macros" "tracing"))) (o #t) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "tuple_list") (r "^0.1") (d #t) (k 0)) (d (n "typetag") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1qr3xni3k9h4959yy3iavlyn62ky2vbh3v0i1qfzfxdl9vnx70d4") (f (quote (("serialize-body" "serde" "typetag") ("json" "serde" "serde_json" "typetag") ("encoders" "base64" "hex") ("default" "async" "json") ("blocking" "reqwest/blocking") ("async" "reqwest" "tokio" "futures"))))))

(define-public crate-feroxfuzz-1.0.0-rc.1 (c (n "feroxfuzz") (v "1.0.0-rc.1") (d (list (d (n "allocation-counter") (r "^0.5") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 2)) (d (n "httpmock") (r "^0.6") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libafl") (r "^0.8.1") (f (quote ("std"))) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("socks" "rustls-tls"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_regex") (r "^1.1.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("rt-multi-thread" "macros" "tracing"))) (o #t) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "tuple_list") (r "^0.1") (d #t) (k 0)) (d (n "typetag") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0vjcp8kl33cl4fad8mgp137ws787g4xwnrlcx6lzkwn2scc2inak") (f (quote (("serialize-body" "serde" "typetag") ("json" "serde" "serde_json" "typetag") ("encoders" "base64" "hex") ("default" "async" "json") ("blocking" "reqwest/blocking") ("async" "reqwest" "tokio" "futures"))))))

(define-public crate-feroxfuzz-1.0.0-rc.2 (c (n "feroxfuzz") (v "1.0.0-rc.2") (d (list (d (n "allocation-counter") (r "^0.5") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 2)) (d (n "httpmock") (r "^0.6") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libafl") (r "^0.8.1") (f (quote ("std"))) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("socks" "rustls-tls"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_regex") (r "^1.1.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("rt-multi-thread" "macros" "tracing"))) (o #t) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "tuple_list") (r "^0.1") (d #t) (k 0)) (d (n "typetag") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0hx693fi7w56pgpps8dp0xrlf5g20wzh2ycz835rl2yv66i8sb5n") (f (quote (("serialize-body" "serde" "typetag") ("json" "serde" "serde_json" "typetag") ("encoders" "base64" "hex") ("default" "async" "json") ("blocking" "reqwest/blocking") ("async" "reqwest" "tokio" "futures"))))))

(define-public crate-feroxfuzz-1.0.0-rc.3 (c (n "feroxfuzz") (v "1.0.0-rc.3") (d (list (d (n "allocation-counter") (r "^0.5") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 2)) (d (n "httpmock") (r "^0.6") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libafl") (r "^0.8.2") (f (quote ("std"))) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("socks" "rustls-tls"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_regex") (r "^1.1.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("rt-multi-thread" "macros" "tracing"))) (o #t) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "tuple_list") (r "^0.1") (d #t) (k 0)) (d (n "typetag") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0qkknw6hnxyajlapr2x57886zqixx3mkf7wrz5n9lwa7kilckkv1") (f (quote (("serialize-body" "serde" "typetag") ("json" "serde" "serde_json" "typetag") ("encoders" "base64" "hex") ("default" "async" "json") ("blocking" "reqwest/blocking") ("async" "reqwest" "tokio" "futures"))))))

(define-public crate-feroxfuzz-1.0.0-rc.4 (c (n "feroxfuzz") (v "1.0.0-rc.4") (d (list (d (n "allocation-counter") (r "^0.5") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 2)) (d (n "httpmock") (r "^0.6") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libafl") (r "^0.8.2") (f (quote ("std"))) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("socks" "rustls-tls"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_regex") (r "^1.1.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("rt-multi-thread" "macros" "tracing"))) (o #t) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "tuple_list") (r "^0.1") (d #t) (k 0)) (d (n "typetag") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1zbfvxc3hbwdf3x7zvajn8017bbzda4a2fhvc4j0riycy2x1p7ly") (f (quote (("serialize-body" "serde" "typetag") ("json" "serde" "serde_json" "typetag") ("encoders" "base64" "hex") ("default" "async" "json") ("blocking" "reqwest/blocking") ("async" "reqwest" "tokio" "futures"))))))

(define-public crate-feroxfuzz-1.0.0-rc.5 (c (n "feroxfuzz") (v "1.0.0-rc.5") (d (list (d (n "allocation-counter") (r "^0.5") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 2)) (d (n "httpmock") (r "^0.6") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libafl") (r "^0.8.2") (f (quote ("std"))) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("socks" "rustls-tls"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_regex") (r "^1.1.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("rt-multi-thread" "macros" "tracing"))) (o #t) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "tuple_list") (r "^0.1") (d #t) (k 0)) (d (n "typetag") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "033xvbysjslrc3v4xmwnl8f5xp9581wkf939isz9rr9lsl8j18k3") (f (quote (("serialize-body" "serde" "typetag") ("json" "serde" "serde_json" "typetag") ("encoders" "base64" "hex") ("default" "async" "json") ("blocking" "reqwest/blocking") ("async" "reqwest" "tokio" "futures"))))))

(define-public crate-feroxfuzz-1.0.0-rc.6 (c (n "feroxfuzz") (v "1.0.0-rc.6") (d (list (d (n "allocation-counter") (r "^0.5") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 2)) (d (n "httpmock") (r "^0.6") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libafl") (r "^0.8.2") (f (quote ("std"))) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("socks" "rustls-tls"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_regex") (r "^1.1.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("rt-multi-thread" "macros" "tracing"))) (o #t) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "tuple_list") (r "^0.1") (d #t) (k 0)) (d (n "typetag") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1vsxymj1v1sniz52q61an53lgwqcpkiy9niwapb8inc51mdsab4z") (f (quote (("serialize-body" "serde" "typetag") ("json" "serde" "serde_json" "typetag") ("encoders" "base64" "hex") ("default" "async" "json") ("blocking" "reqwest/blocking") ("async" "reqwest" "tokio" "futures"))))))

(define-public crate-feroxfuzz-1.0.0-rc.7 (c (n "feroxfuzz") (v "1.0.0-rc.7") (d (list (d (n "allocation-counter") (r "^0.5") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 2)) (d (n "httpmock") (r "^0.6") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libafl") (r "^0.8.2") (f (quote ("std"))) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("socks" "rustls-tls"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_regex") (r "^1.1.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("rt-multi-thread" "macros" "tracing"))) (o #t) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "tuple_list") (r "^0.1") (d #t) (k 0)) (d (n "typetag") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "01cn458g8cnq6q5qa5wp8sg1fvkxixrgzdqj7wkn51g7271ykzhm") (f (quote (("serialize-body" "serde" "typetag") ("json" "serde" "serde_json" "typetag") ("encoders" "base64" "hex") ("default" "async" "json") ("blocking" "reqwest/blocking") ("async" "reqwest" "tokio" "futures"))))))

(define-public crate-feroxfuzz-1.0.0-rc.8 (c (n "feroxfuzz") (v "1.0.0-rc.8") (d (list (d (n "allocation-counter") (r "^0.5") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 2)) (d (n "httpmock") (r "^0.6") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libafl") (r "^0.8.2") (f (quote ("std"))) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("socks" "rustls-tls"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_regex") (r "^1.1.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("rt-multi-thread" "macros" "tracing"))) (o #t) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "tuple_list") (r "^0.1") (d #t) (k 0)) (d (n "typetag") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1ynhm7mkbba1ff6r3zyzx4fd4pwbvagzmvz0gwhr3r0j33c9jhkn") (f (quote (("serialize-body" "serde" "typetag") ("json" "serde" "serde_json" "typetag") ("encoders" "base64" "hex") ("default" "async" "json") ("blocking" "reqwest/blocking") ("async" "reqwest" "tokio" "futures"))))))

(define-public crate-feroxfuzz-1.0.0-rc.10 (c (n "feroxfuzz") (v "1.0.0-rc.10") (d (list (d (n "allocation-counter") (r "^0.5") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13.1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.9") (d #t) (k 0)) (d (n "flume") (r "^0.10.14") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 2)) (d (n "httpmock") (r "^0.6") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libafl") (r "^0.9.0") (f (quote ("std"))) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("socks" "rustls-tls"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_regex") (r "^1.1.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("rt-multi-thread" "macros" "tracing"))) (o #t) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "tuple_list") (r "^0.1") (d #t) (k 0)) (d (n "typetag") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0dz4awm7mmalam0yndmzx93qgh9pcl59lms5dyk7jbsxzxpqjm8n") (f (quote (("serialize-body" "serde" "typetag") ("json" "serde" "serde_json" "typetag") ("encoders" "base64" "hex") ("default" "async" "json") ("blocking" "reqwest/blocking") ("async" "reqwest" "tokio" "futures"))))))

(define-public crate-feroxfuzz-1.0.0-rc.12 (c (n "feroxfuzz") (v "1.0.0-rc.12") (d (list (d (n "allocation-counter") (r "^0.5") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.21.2") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.9") (d #t) (k 0)) (d (n "flume") (r "^0.11.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 2)) (d (n "httpmock") (r "^0.6") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libafl") (r "^0.11.1") (f (quote ("std"))) (o #t) (k 0)) (d (n "libafl_bolts") (r "^0.11.1") (o #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("socks" "rustls-tls"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_regex") (r "^1.1.0") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("rt-multi-thread" "macros" "tracing"))) (o #t) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "tuple_list") (r "^0.1") (d #t) (k 0)) (d (n "typetag") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1zg44qh73gj60wm7gjm07b8vcrp82f645y0xc0gsyjk3kg63kvsb") (f (quote (("serialize-body" "serde" "typetag") ("json" "serde" "serde_json" "typetag") ("havoc" "libafl" "libafl_bolts") ("encoders" "base64" "hex") ("default" "async" "json") ("blocking" "reqwest/blocking") ("async" "reqwest" "tokio" "futures"))))))

