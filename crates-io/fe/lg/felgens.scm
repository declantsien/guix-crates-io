(define-module (crates-io fe lg felgens) #:use-module (crates-io))

(define-public crate-felgens-0.1.0 (c (n "felgens") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("zlib"))) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("sink" "std"))) (k 0)) (d (n "owo-colors") (r "^3.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "scroll") (r "^0.11") (d #t) (k 0)) (d (n "scroll_derive") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("macros" "rt" "rt-multi-thread" "io-util" "io-std" "time"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.17") (f (quote ("connect" "native-tls"))) (d #t) (k 0)))) (h "0whigl7pd4xsnfmbyf13ixrbjhlhhss2d7xglqgzz8irw32k2xwg")))

(define-public crate-felgens-0.2.0 (c (n "felgens") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("zlib"))) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("sink" "std"))) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "owo-colors") (r "^3.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "scroll") (r "^0.11") (d #t) (k 0)) (d (n "scroll_derive") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("macros" "rt" "rt-multi-thread" "io-util" "io-std" "time"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.18") (f (quote ("connect" "native-tls"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "std"))) (d #t) (k 2)))) (h "0yhpha4wv85g7iv5v70q46lqr7b3cpfa5g4ik3lkgxwyqkiczyq6")))

(define-public crate-felgens-0.2.1 (c (n "felgens") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("zlib"))) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("sink" "std"))) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "owo-colors") (r "^3.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "scroll") (r "^0.11") (d #t) (k 0)) (d (n "scroll_derive") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("macros" "rt" "rt-multi-thread" "io-util" "io-std" "time"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.18") (f (quote ("connect" "native-tls"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "std"))) (d #t) (k 2)))) (h "1jlbc9vrvdf4d9abskqfqgkvrlzx56s8wgl5bwbkc2bwvvvbk0m7")))

(define-public crate-felgens-0.3.0 (c (n "felgens") (v "0.3.0") (d (list (d (n "brotli") (r "^3.3") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("zlib"))) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("sink" "std"))) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "scroll") (r "^0.11") (d #t) (k 0)) (d (n "scroll_derive") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("macros" "rt" "rt-multi-thread" "io-util" "io-std" "time"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.18") (f (quote ("connect" "native-tls"))) (d #t) (k 0)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "owo-colors") (r "^3.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "std"))) (d #t) (k 2)))) (h "12phwjnwc16ya9acq74krq4lxg20jynmngn5ixqypnccj926nwzl")))

(define-public crate-felgens-0.3.1 (c (n "felgens") (v "0.3.1") (d (list (d (n "brotli") (r "^3.3") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("zlib"))) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("sink" "std"))) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "scroll") (r "^0.11") (d #t) (k 0)) (d (n "scroll_derive") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("macros" "rt" "rt-multi-thread" "io-util" "io-std" "time"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.18") (f (quote ("connect" "native-tls"))) (d #t) (k 0)) (d (n "url") (r "^2.3") (d #t) (k 0)) (d (n "owo-colors") (r "^3.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "std"))) (d #t) (k 2)))) (h "17krhkb1xrdrfq883xfx0i9a1pas24agkbg8a55bcam7iif9w1ig")))

