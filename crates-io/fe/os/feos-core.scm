(define-module (crates-io fe os feos-core) #:use-module (crates-io))

(define-public crate-feos-core-0.1.0 (c (n "feos-core") (v "0.1.0") (d (list (d (n "approx") (r "^0.4") (d #t) (k 0)) (d (n "argmin") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.7") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "num-dual") (r "^0.3") (f (quote ("linalg"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "numpy") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "quantity") (r "^0.3") (f (quote ("linalg"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1jc0zwnyzdd08krsga1iv5bc3548crzr5qccbiicggir8m7gzdyi") (f (quote (("python" "pyo3" "numpy" "quantity/python" "num-dual/python") ("openblas-system" "num-dual/openblas-system") ("openblas-static" "num-dual/openblas-static") ("netlib-system" "num-dual/netlib-system") ("netlib-static" "num-dual/netlib-static") ("intel-mkl-system" "num-dual/intel-mkl-system") ("intel-mkl-static" "num-dual/intel-mkl-static") ("default"))))))

(define-public crate-feos-core-0.1.1 (c (n "feos-core") (v "0.1.1") (d (list (d (n "approx") (r "^0.4") (d #t) (k 0)) (d (n "argmin") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.7") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-dual") (r "^0.4") (f (quote ("ndarray"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "numpy") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "quantity") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0p4bmqq7j6yiv1pqxg1vbb2whzvha699fvp3qqr906jl1qls5pvk") (f (quote (("python" "pyo3" "numpy" "quantity/python" "num-dual/python") ("default"))))))

(define-public crate-feos-core-0.1.2 (c (n "feos-core") (v "0.1.2") (d (list (d (n "approx") (r "^0.4") (d #t) (k 0)) (d (n "argmin") (r "^0.4") (d #t) (k 0)) (d (n "either") (r "^1.6") (d #t) (k 0)) (d (n "indexmap") (r "^1.7") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-dual") (r "^0.4") (f (quote ("ndarray"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "numpy") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "quantity") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0kmjy8cybx6prgvcasp7y3dy17chdkdbi05a83ikipkimqydfqms") (f (quote (("python" "pyo3" "numpy" "quantity/python" "num-dual/python") ("default"))))))

(define-public crate-feos-core-0.1.3 (c (n "feos-core") (v "0.1.3") (d (list (d (n "approx") (r "^0.4") (d #t) (k 0)) (d (n "argmin") (r "^0.4") (d #t) (k 0)) (d (n "either") (r "^1.6") (d #t) (k 0)) (d (n "indexmap") (r "^1.7") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-dual") (r "^0.4") (f (quote ("ndarray"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "numpy") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "quantity") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1r4qvxm6fnk9n48xczkyjy2466a8bx5b55qlx316bkrndjmhci9n") (f (quote (("python" "pyo3" "numpy" "quantity/python" "num-dual/python") ("default"))))))

(define-public crate-feos-core-0.1.4 (c (n "feos-core") (v "0.1.4") (d (list (d (n "approx") (r "^0.4") (d #t) (k 0)) (d (n "argmin") (r "^0.4") (d #t) (k 0)) (d (n "either") (r "^1.6") (d #t) (k 0)) (d (n "indexmap") (r "^1.7") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-dual") (r "^0.4") (f (quote ("ndarray"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "numpy") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "quantity") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "165ny9yqmwgxxzlw9v14yqvgp6ip7n10xijqd8hlsgc641404ygw") (f (quote (("python" "pyo3" "numpy" "quantity/python" "num-dual/python") ("default"))))))

(define-public crate-feos-core-0.1.5 (c (n "feos-core") (v "0.1.5") (d (list (d (n "approx") (r "^0.4") (d #t) (k 0)) (d (n "argmin") (r "^0.4") (d #t) (k 0)) (d (n "either") (r "^1.6") (d #t) (k 0)) (d (n "indexmap") (r "^1.7") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-dual") (r "^0.4") (f (quote ("ndarray"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "numpy") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "quantity") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "13mkgmpa32rwi83cb51vrm77nawdli75vc007gxbhqjbk87fvn7l") (f (quote (("python" "pyo3" "numpy" "quantity/python" "num-dual/python") ("default"))))))

(define-public crate-feos-core-0.2.0 (c (n "feos-core") (v "0.2.0") (d (list (d (n "approx") (r "^0.4") (d #t) (k 0)) (d (n "either") (r "^1.6") (d #t) (k 0)) (d (n "indexmap") (r "^1.7") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-dual") (r "^0.5") (f (quote ("linalg"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "numpy") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "quantity") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1s6ww5sicc5qx0rqdhm01xym5fr2m802my3fmg90x6fwy6r9g9iy") (f (quote (("python" "pyo3" "numpy" "quantity/python" "num-dual/python") ("default"))))))

(define-public crate-feos-core-0.3.0 (c (n "feos-core") (v "0.3.0") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.8") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-dual") (r "^0.5") (f (quote ("linalg"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "numpy") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "quantity") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0h28ka7g1caw1788v34jsgkpk40ghkfsjq9cahkxmhimiygxdb57") (f (quote (("python" "pyo3" "numpy" "quantity/python" "num-dual/python") ("default"))))))

(define-public crate-feos-core-0.3.1 (c (n "feos-core") (v "0.3.1") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.8") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-dual") (r "^0.5") (f (quote ("linalg"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "numpy") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "quantity") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0q53mlzyig0qw0156b0fj25vjl803bvrpxf5yccsb22vhs1arl1l") (f (quote (("python" "pyo3" "numpy" "quantity/python" "num-dual/python") ("default"))))))

(define-public crate-feos-core-0.4.0 (c (n "feos-core") (v "0.4.0") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.8") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-dual") (r "^0.6") (f (quote ("linalg"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "numpy") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "quantity") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "17mwbnzj8jfnc0rs73nxpz6b2x3bc053vk3k83q3xn32jmzgiwsj") (f (quote (("python" "pyo3" "numpy" "quantity/python" "num-dual/python" "rayon") ("default")))) (s 2) (e (quote (("rayon" "dep:rayon" "ndarray/rayon"))))))

(define-public crate-feos-core-0.4.1 (c (n "feos-core") (v "0.4.1") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.8") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-dual") (r "^0.6") (f (quote ("linalg"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "numpy") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "quantity") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0m4nvianzwnvzjdnxfqb1j37dcky3lv2c0ifxmgqq3zqi6ydb31r") (f (quote (("python" "pyo3" "numpy" "quantity/python" "num-dual/python" "rayon") ("default")))) (s 2) (e (quote (("rayon" "dep:rayon" "ndarray/rayon"))))))

(define-public crate-feos-core-0.4.2 (c (n "feos-core") (v "0.4.2") (d (list (d (n "approx") (r "^0.4") (d #t) (k 2)) (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.8") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-dual") (r "^0.6") (f (quote ("linalg"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "numpy") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "quantity") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0p9p37jwnqqwf5d9i0j8p9rwfxnkpm889xg2x98wh6szjinl61k1") (f (quote (("python" "pyo3" "numpy" "quantity/python" "num-dual/python" "rayon") ("default")))) (s 2) (e (quote (("rayon" "dep:rayon" "ndarray/rayon"))))))

(define-public crate-feos-core-0.5.0 (c (n "feos-core") (v "0.5.0") (d (list (d (n "ang") (r "^0.6") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 0)) (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "indexmap") (r "^2.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("serde" "approx-0_5"))) (d #t) (k 0)) (d (n "num-dual") (r "^0.8") (f (quote ("linalg"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "numpy") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "pyo3") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "quantity") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "typenum") (r "^1.16") (d #t) (k 0)))) (h "05w967wn8xbwyrgvblb4bxwd9nbf1wvv5r1rba6lhchijdhih28n") (f (quote (("python" "pyo3" "numpy" "quantity/python" "num-dual/python_macro" "rayon") ("default")))) (s 2) (e (quote (("rayon" "dep:rayon" "ndarray/rayon"))))))

(define-public crate-feos-core-0.5.1 (c (n "feos-core") (v "0.5.1") (d (list (d (n "ang") (r "^0.6") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 0)) (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "indexmap") (r "^2.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("serde" "approx-0_5"))) (d #t) (k 0)) (d (n "num-dual") (r "^0.8") (f (quote ("linalg"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "numpy") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "pyo3") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "quantity") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "typenum") (r "^1.16") (d #t) (k 0)))) (h "00vabb6brdxn2ikdcw9s8cxxr8mz81fhpif60q1gbnm3gc3hnkzn") (f (quote (("python" "pyo3" "numpy" "quantity/python" "num-dual/python_macro" "rayon") ("default")))) (s 2) (e (quote (("rayon" "dep:rayon" "ndarray/rayon"))))))

(define-public crate-feos-core-0.6.0 (c (n "feos-core") (v "0.6.0") (d (list (d (n "ang") (r "^0.6") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 0)) (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "indexmap") (r "^2.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("serde" "approx-0_5"))) (d #t) (k 0)) (d (n "num-dual") (r "^0.8") (f (quote ("linalg"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "numpy") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "pyo3") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "quantity") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "typenum") (r "^1.16") (d #t) (k 0)))) (h "06x60ridnvfsm22x5dy9gkmlsh0w8gpc7ar2nxxsaj5yr2xjn4jd") (f (quote (("python" "pyo3" "numpy" "quantity/python" "num-dual/python_macro" "rayon") ("default")))) (s 2) (e (quote (("rayon" "dep:rayon" "ndarray/rayon"))))))

(define-public crate-feos-core-0.6.1 (c (n "feos-core") (v "0.6.1") (d (list (d (n "ang") (r "^0.6") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 0)) (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "indexmap") (r "^2.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("serde" "approx-0_5"))) (d #t) (k 0)) (d (n "num-dual") (r "^0.8") (f (quote ("linalg"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "numpy") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "pyo3") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "quantity") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "typenum") (r "^1.16") (d #t) (k 0)))) (h "0i09alkl8scllvxb604bf8mb9bdxzjk7v25zzginkis4ax01fnr2") (f (quote (("python" "pyo3" "numpy" "quantity/python" "num-dual/python_macro" "rayon") ("default")))) (s 2) (e (quote (("rayon" "dep:rayon" "ndarray/rayon"))))))

(define-public crate-feos-core-0.7.0 (c (n "feos-core") (v "0.7.0") (d (list (d (n "ang") (r "^0.6") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 0)) (d (n "conv") (r "^0.3") (d #t) (k 0)) (d (n "indexmap") (r "^2.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("serde" "approx-0_5"))) (d #t) (k 0)) (d (n "num-dual") (r "^0.9") (f (quote ("linalg"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "numpy") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "pyo3") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "quantity") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "typenum") (r "^1.16") (d #t) (k 0)))) (h "0p353qg3v5ay3zsxf16pp8q8ny7k19dc0wblg6s20ybbxf2g34vb") (f (quote (("python" "pyo3" "numpy" "quantity/python" "num-dual/python_macro" "rayon") ("default")))) (s 2) (e (quote (("rayon" "dep:rayon" "ndarray/rayon"))))))

