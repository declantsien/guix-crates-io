(define-module (crates-io fe di fedimint-aleph-bft) #:use-module (crates-io))

(define-public crate-fedimint-aleph-bft-0.33.0 (c (n "fedimint-aleph-bft") (v "0.33.0") (d (list (d (n "aleph-bft-rmc") (r "^0.11") (d #t) (k 0)) (d (n "aleph-bft-types") (r "^0.11") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "codec") (r "^3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^3.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "0zs1jgz3fbs3ngyjcflypmsl47yab5x556mxmkwawp3jv92470mh") (f (quote (("initial_unit_collection") ("default" "initial_unit_collection"))))))

(define-public crate-fedimint-aleph-bft-0.30.0 (c (n "fedimint-aleph-bft") (v "0.30.0") (d (list (d (n "aleph-bft-rmc") (r "^0.10") (d #t) (k 0)) (d (n "aleph-bft-types") (r "^0.10") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "codec") (r "^3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "0alcm64df3mjmswg7k13ym98cri7ivxkj5wzdsaqbbx5sg5dgdpn") (f (quote (("initial_unit_collection") ("default" "initial_unit_collection"))))))

(define-public crate-fedimint-aleph-bft-0.36.0 (c (n "fedimint-aleph-bft") (v "0.36.0") (d (list (d (n "aleph-bft-rmc") (r "^0.12") (d #t) (k 0)) (d (n "aleph-bft-types") (r "^0.13") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "codec") (r "^3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^3.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "09g0rb632ca2m1fp9m4bk8p020cr2vwlmzk6v3nxvkc1nrd028cb") (f (quote (("initial_unit_collection") ("default" "initial_unit_collection"))))))

