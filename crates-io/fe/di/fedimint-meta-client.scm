(define-module (crates-io fe di fedimint-meta-client) #:use-module (crates-io))

(define-public crate-fedimint-meta-client-0.3.0-rc.0 (c (n "fedimint-meta-client") (v "0.3.0-rc.0") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "clap") (r "^4.1.6") (f (quote ("derive" "std" "help" "usage" "error-context" "suggestions" "env"))) (o #t) (k 0)) (d (n "erased-serde") (r "^0.4") (d #t) (k 0)) (d (n "fedimint-client") (r "^0.3.0-rc.0") (d #t) (k 0)) (d (n "fedimint-core") (r "^0.3.0-rc.0") (d #t) (k 0)) (d (n "fedimint-meta-common") (r "^0.3.0-rc.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "secp256k1") (r "^0.24.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "threshold_crypto") (r "^0.1") (d #t) (k 0) (p "fedimint-threshold-crypto")) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "14acxh7rjy530ln8nm3si9kahwpckgrlp0szmji53i0xwwpmxkid") (f (quote (("default")))) (s 2) (e (quote (("cli" "dep:clap" "dep:serde_json"))))))

(define-public crate-fedimint-meta-client-0.3.0-rc.1 (c (n "fedimint-meta-client") (v "0.3.0-rc.1") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "clap") (r "^4.1.6") (f (quote ("derive" "std" "help" "usage" "error-context" "suggestions" "env"))) (o #t) (k 0)) (d (n "erased-serde") (r "^0.4") (d #t) (k 0)) (d (n "fedimint-client") (r "^0.3.0-rc.1") (d #t) (k 0)) (d (n "fedimint-core") (r "^0.3.0-rc.1") (d #t) (k 0)) (d (n "fedimint-meta-common") (r "^0.3.0-rc.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "secp256k1") (r "^0.24.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "threshold_crypto") (r "^0.1") (d #t) (k 0) (p "fedimint-threshold-crypto")) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "080i4whaz7qbib68y83jvwwmk01hz0q2mah19hn01mqd9pzf554k") (f (quote (("default")))) (s 2) (e (quote (("cli" "dep:clap" "dep:serde_json"))))))

(define-public crate-fedimint-meta-client-0.3.0-rc.2 (c (n "fedimint-meta-client") (v "0.3.0-rc.2") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "clap") (r "^4.1.6") (f (quote ("derive" "std" "help" "usage" "error-context" "suggestions" "env"))) (o #t) (k 0)) (d (n "erased-serde") (r "^0.4") (d #t) (k 0)) (d (n "fedimint-client") (r "=0.3.0-rc.2") (d #t) (k 0)) (d (n "fedimint-core") (r "=0.3.0-rc.2") (d #t) (k 0)) (d (n "fedimint-meta-common") (r "=0.3.0-rc.2") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "secp256k1") (r "^0.24.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "threshold_crypto") (r "^0.1") (d #t) (k 0) (p "fedimint-threshold-crypto")) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0cr0nrq953z7iji39wa2mvbng9xng4pf367045ddba23mgj88d52") (f (quote (("default")))) (s 2) (e (quote (("cli" "dep:clap" "dep:serde_json"))))))

(define-public crate-fedimint-meta-client-0.3.0-rc.3 (c (n "fedimint-meta-client") (v "0.3.0-rc.3") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "clap") (r "^4.1.6") (f (quote ("derive" "std" "help" "usage" "error-context" "suggestions" "env"))) (o #t) (k 0)) (d (n "erased-serde") (r "^0.4") (d #t) (k 0)) (d (n "fedimint-client") (r "=0.3.0-rc.3") (d #t) (k 0)) (d (n "fedimint-core") (r "=0.3.0-rc.3") (d #t) (k 0)) (d (n "fedimint-meta-common") (r "=0.3.0-rc.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "secp256k1") (r "^0.24.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "threshold_crypto") (r "^0.1") (d #t) (k 0) (p "fedimint-threshold-crypto")) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1y99slnvdhg8xd7pbmi7c7iflf83bwb6dalqs39hpak1q5n48hli") (f (quote (("default")))) (s 2) (e (quote (("cli" "dep:clap" "dep:serde_json"))))))

(define-public crate-fedimint-meta-client-0.3.0 (c (n "fedimint-meta-client") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "clap") (r "^4.1.6") (f (quote ("derive" "std" "help" "usage" "error-context" "suggestions" "env"))) (o #t) (k 0)) (d (n "erased-serde") (r "^0.4") (d #t) (k 0)) (d (n "fedimint-client") (r "=0.3.0") (d #t) (k 0)) (d (n "fedimint-core") (r "=0.3.0") (d #t) (k 0)) (d (n "fedimint-meta-common") (r "=0.3.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "secp256k1") (r "^0.24.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "threshold_crypto") (r "^0.1") (d #t) (k 0) (p "fedimint-threshold-crypto")) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0y4xkjj9bgf9fi7all3gpa7vv373ri2wvid82wgi1kadk4pq1pak") (f (quote (("default")))) (s 2) (e (quote (("cli" "dep:clap" "dep:serde_json"))))))

(define-public crate-fedimint-meta-client-0.3.1-rc.0 (c (n "fedimint-meta-client") (v "0.3.1-rc.0") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "clap") (r "^4.1.6") (f (quote ("derive" "std" "help" "usage" "error-context" "suggestions" "env"))) (o #t) (k 0)) (d (n "erased-serde") (r "^0.4") (d #t) (k 0)) (d (n "fedimint-client") (r "=0.3.1-rc.0") (d #t) (k 0)) (d (n "fedimint-core") (r "=0.3.1-rc.0") (d #t) (k 0)) (d (n "fedimint-meta-common") (r "=0.3.1-rc.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "secp256k1") (r "^0.24.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "threshold_crypto") (r "^0.1") (d #t) (k 0) (p "fedimint-threshold-crypto")) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "105mv7h8viyjj515gszjwypx33prvricyvd302nhr5wq7ccvwd0z") (f (quote (("default")))) (s 2) (e (quote (("cli" "dep:clap" "dep:serde_json"))))))

(define-public crate-fedimint-meta-client-0.3.1-rc.1 (c (n "fedimint-meta-client") (v "0.3.1-rc.1") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "clap") (r "^4.1.6") (f (quote ("derive" "std" "help" "usage" "error-context" "suggestions" "env"))) (o #t) (k 0)) (d (n "erased-serde") (r "^0.4") (d #t) (k 0)) (d (n "fedimint-client") (r "=0.3.1-rc.1") (d #t) (k 0)) (d (n "fedimint-core") (r "=0.3.1-rc.1") (d #t) (k 0)) (d (n "fedimint-meta-common") (r "=0.3.1-rc.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "secp256k1") (r "^0.24.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "threshold_crypto") (r "^0.1") (d #t) (k 0) (p "fedimint-threshold-crypto")) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0yybiq6dakm33188zdz6b2gk3yg11f059s12vk11g3r1zw6n3dvx") (f (quote (("default")))) (s 2) (e (quote (("cli" "dep:clap" "dep:serde_json"))))))

(define-public crate-fedimint-meta-client-0.3.1 (c (n "fedimint-meta-client") (v "0.3.1") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "clap") (r "^4.1.6") (f (quote ("derive" "std" "help" "usage" "error-context" "suggestions" "env"))) (o #t) (k 0)) (d (n "erased-serde") (r "^0.4") (d #t) (k 0)) (d (n "fedimint-client") (r "=0.3.1") (d #t) (k 0)) (d (n "fedimint-core") (r "=0.3.1") (d #t) (k 0)) (d (n "fedimint-meta-common") (r "=0.3.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "secp256k1") (r "^0.24.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "threshold_crypto") (r "^0.1") (d #t) (k 0) (p "fedimint-threshold-crypto")) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1p9xhz2zl0l1p3aw6igqx7jycqv9y2w6ygvah15fps7vyiz06zbz") (f (quote (("default")))) (s 2) (e (quote (("cli" "dep:clap" "dep:serde_json"))))))

(define-public crate-fedimint-meta-client-0.3.2-rc.0 (c (n "fedimint-meta-client") (v "0.3.2-rc.0") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "clap") (r "^4.1.6") (f (quote ("derive" "std" "help" "usage" "error-context" "suggestions" "env"))) (o #t) (k 0)) (d (n "erased-serde") (r "^0.4") (d #t) (k 0)) (d (n "fedimint-client") (r "=0.3.2-rc.0") (d #t) (k 0)) (d (n "fedimint-core") (r "=0.3.2-rc.0") (d #t) (k 0)) (d (n "fedimint-meta-common") (r "=0.3.2-rc.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "secp256k1") (r "^0.24.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "threshold_crypto") (r "^0.1") (d #t) (k 0) (p "fedimint-threshold-crypto")) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1jfs21al28q10h50vy4h2wy1qalaxabkck7iajxxxfb9wwcq13i3") (f (quote (("default")))) (s 2) (e (quote (("cli" "dep:clap" "dep:serde_json"))))))

