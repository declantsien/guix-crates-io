(define-module (crates-io fe di fedimint-hbbft) #:use-module (crates-io))

(define-public crate-fedimint-hbbft-0.1.0 (c (n "fedimint-hbbft") (v "0.1.0") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.5") (d #t) (k 2)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "docopt") (r "^1.1.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "hex_fmt") (r "^0.3.0") (d #t) (k 0)) (d (n "init_with") (r "^1.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "number_prefix") (r "^0.4.0") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_derive") (r "^0.5.0") (d #t) (k 0)) (d (n "reed-solomon-erasure") (r "^5.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "threshold_crypto") (r "^0.1") (d #t) (k 0) (p "fedimint-threshold-crypto")) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("sha3"))) (d #t) (k 0)))) (h "09hyl9rzjvmz5s1d0bijkjdcd9f2rm87nhv75f301n63asv02gm7") (f (quote (("simd-accel" "reed-solomon-erasure/simd-accel"))))))

