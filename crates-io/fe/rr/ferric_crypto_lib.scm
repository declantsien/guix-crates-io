(define-module (crates-io fe rr ferric_crypto_lib) #:use-module (crates-io))

(define-public crate-ferric_crypto_lib-0.2.2 (c (n "ferric_crypto_lib") (v "0.2.2") (d (list (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "pyo3") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rayon") (r "^1.8.0") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)))) (h "11hdmbz2s85b8qbcflkkfm3jywpy67y9yjpgjm77q6v93piwwdaw") (f (quote (("sequential") ("parallel") ("default" "parallel")))) (s 2) (e (quote (("python-integration" "dep:pyo3" "pyo3/extension-module"))))))

(define-public crate-ferric_crypto_lib-0.2.3 (c (n "ferric_crypto_lib") (v "0.2.3") (d (list (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "pyo3") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rayon") (r "^1.8.0") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)))) (h "1z2rnwyl9jjls24bzp8f9v4vmw85slxq8nnqx7xfgpxf2i1ixlys") (f (quote (("sequential") ("parallel") ("default" "parallel")))) (s 2) (e (quote (("python-integration" "dep:pyo3" "pyo3/extension-module"))))))

(define-public crate-ferric_crypto_lib-0.2.6 (c (n "ferric_crypto_lib") (v "0.2.6") (d (list (d (n "gmp-mpfr-sys") (r "^1.6.1") (f (quote ("force-cross"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "pyo3") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rayon") (r "^1.8.0") (d #t) (k 0)) (d (n "rug") (r "^1.22.0") (f (quote ("integer" "num-traits"))) (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)))) (h "0xw6k547swas0pvlybqcjrd9mai20sjlq97lsh7adccmzklad3h3") (f (quote (("sequential") ("parallel") ("default" "parallel" "custom-enconding") ("debug") ("custom-enconding")))) (s 2) (e (quote (("python-integration" "dep:pyo3" "pyo3/extension-module"))))))

(define-public crate-ferric_crypto_lib-0.2.7 (c (n "ferric_crypto_lib") (v "0.2.7") (d (list (d (n "gmp-mpfr-sys") (r "^1.6.1") (f (quote ("force-cross"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-prime") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.17") (d #t) (k 0)) (d (n "pyo3") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "pyo3-helper-macros") (r "^0.0.6") (f (quote ("multiple_pymethod"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rayon") (r "^1.8.0") (d #t) (k 0)) (d (n "rug") (r "^1.22.0") (f (quote ("integer" "num-traits"))) (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)))) (h "1k0w5dgcx8ky800an14xymzixv4xw7rrry9jhjc2nlwccwmdlb1d") (f (quote (("sequential") ("parallel") ("default" "parallel" "custom-enconding") ("debug") ("custom-enconding")))) (s 2) (e (quote (("python-integration" "dep:pyo3" "dep:pyo3-helper-macros" "pyo3/extension-module" "pyo3/multiple-pymethods"))))))

