(define-module (crates-io fe rr ferrischat_webserver) #:use-module (crates-io))

(define-public crate-ferrischat_webserver-0.1.0 (c (n "ferrischat_webserver") (v "0.1.0") (d (list (d (n "actix") (r "^0.10") (d #t) (k 0)) (d (n "actix-web") (r "^3") (d #t) (k 0)) (d (n "actix-web-actors") (r "^3") (d #t) (k 0)) (d (n "argonautica") (r "^0.2") (f (quote ("serde" "simd"))) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "ferrischat_common") (r "^0.1") (d #t) (k 0)) (d (n "ferrischat_db") (r "^0.1") (d #t) (k 0)) (d (n "ferrischat_macros") (r "^0.1") (d #t) (k 0)) (d (n "ferrischat_snowflake_generator") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-cpupool") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "sqlx") (r "^0.4") (f (quote ("postgres" "macros" "offline" "runtime-actix-rustls"))) (d #t) (k 0)) (d (n "tokio") (r "^1.9") (f (quote ("full"))) (d #t) (k 0)))) (h "1gax0fws8dg4an31bdh945cj17iy4jqv7040hp1qdapxd931sqv5")))

