(define-module (crates-io aq ua aquatic_ws) #:use-module (crates-io))

(define-public crate-aquatic_ws-0.1.0 (c (n "aquatic_ws") (v "0.1.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "aquatic_cli_helpers") (r "^0.1.0") (d #t) (k 0)) (d (n "aquatic_common") (r "^0.1.0") (d #t) (k 0)) (d (n "aquatic_ws_protocol") (r "^0.1.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.9") (f (quote ("serde"))) (d #t) (k 0)) (d (n "histogram") (r "^0.6") (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1") (k 0)) (d (n "mio") (r "^0.7") (f (quote ("tcp" "os-poll" "os-util"))) (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "privdrop") (r "^0.3") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "socket2") (r "^0.3") (f (quote ("reuseport"))) (d #t) (k 0)) (d (n "tungstenite") (r "^0.11") (d #t) (k 0)))) (h "0rd29pymmkr1b4id65i87lqzfsdckfi4nq157nmgjm6qy4646f5a")))

(define-public crate-aquatic_ws-0.2.0 (c (n "aquatic_ws") (v "0.2.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "aquatic_cli_helpers") (r "^0.2.0") (d #t) (k 0)) (d (n "aquatic_common") (r "^0.2.0") (d #t) (k 0)) (d (n "aquatic_toml_config") (r "^0.2.0") (d #t) (k 0)) (d (n "aquatic_ws_protocol") (r "^0.2.0") (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.17") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1") (d #t) (k 0)) (d (n "futures-rustls") (r "^0.22") (d #t) (k 0)) (d (n "glommio") (r "^0.7") (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1") (k 0)) (d (n "privdrop") (r "^0.5") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "rustls") (r "^0.20") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "socket2") (r "^0.4") (f (quote ("all"))) (d #t) (k 0)) (d (n "tungstenite") (r "^0.17") (d #t) (k 0)))) (h "0lkpsg100bw562qihjvxy6qahvzhxsll8nbar45dsl7v5c5xdlzr") (f (quote (("cpu-pinning" "aquatic_common/cpu-pinning"))))))

(define-public crate-aquatic_ws-0.8.0 (c (n "aquatic_ws") (v "0.8.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "aquatic_common") (r "^0.8.0") (f (quote ("rustls" "glommio"))) (d #t) (k 0)) (d (n "aquatic_toml_config") (r "^0.8.0") (d #t) (k 0)) (d (n "aquatic_ws_protocol") (r "^0.8.0") (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.19") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1") (d #t) (k 0)) (d (n "futures-rustls") (r "^0.22") (d #t) (k 0)) (d (n "glommio") (r "^0.8") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13") (f (quote ("serde"))) (d #t) (k 0)) (d (n "httparse") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.11") (f (quote ("http-listener"))) (o #t) (k 0)) (d (n "mimalloc") (r "^0.1") (k 0)) (d (n "privdrop") (r "^0.5") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "rustls") (r "^0.20") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "socket2") (r "^0.4") (f (quote ("all"))) (d #t) (k 0)) (d (n "tungstenite") (r "^0.18") (d #t) (k 0)))) (h "0z201cpncskrrgv8gnm2qbcs343hiz1qcy74ab2xhls0hpigilmf") (f (quote (("prometheus" "metrics" "metrics-exporter-prometheus") ("default" "prometheus")))) (s 2) (e (quote (("metrics" "dep:metrics")))) (r "1.64")))

(define-public crate-aquatic_ws-0.9.0 (c (n "aquatic_ws") (v "0.9.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "aquatic_common") (r "^0.9.0") (f (quote ("rustls"))) (d #t) (k 0)) (d (n "aquatic_peer_id") (r "^0.9.0") (d #t) (k 0)) (d (n "aquatic_toml_config") (r "^0.9.0") (d #t) (k 0)) (d (n "aquatic_ws_protocol") (r "^0.9.0") (d #t) (k 0)) (d (n "arc-swap") (r "^1") (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.25") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-lite") (r "^1") (d #t) (k 0)) (d (n "futures-rustls") (r "^0.26") (d #t) (k 0)) (d (n "glommio") (r "^0.9") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("serde"))) (d #t) (k 0)) (d (n "httparse") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metrics") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "metrics-util") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "mimalloc") (r "^0.1") (o #t) (k 0)) (d (n "privdrop") (r "^0.5") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "rustls") (r "^0.23") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "slotmap") (r "^1") (d #t) (k 0)) (d (n "socket2") (r "^0.5") (f (quote ("all"))) (d #t) (k 0)) (d (n "tungstenite") (r "^0.21") (d #t) (k 0)))) (h "1yiisabma86ny33m1gbdp02r110qrpcq9laz2kqhw45469l2kb1n") (f (quote (("prometheus" "metrics" "aquatic_common/prometheus") ("default" "prometheus" "mimalloc")))) (s 2) (e (quote (("mimalloc" "dep:mimalloc") ("metrics" "dep:metrics" "dep:metrics-util")))) (r "1.70")))

