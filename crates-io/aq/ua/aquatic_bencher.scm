(define-module (crates-io aq ua aquatic_bencher) #:use-module (crates-io))

(define-public crate-aquatic_bencher-0.9.0 (c (n "aquatic_bencher") (v "0.9.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "aquatic_udp") (r "^0.9.0") (f (quote ("io-uring"))) (o #t) (d #t) (k 0)) (d (n "aquatic_udp_load_test") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "humanize-bytes") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "indoc") (r "^2") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "nonblock") (r "^0.2") (d #t) (k 0)) (d (n "num-format") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "toml") (r "^0.8") (d #t) (k 0)))) (h "1a4pklc3jgav8809wxj25904wf2hcn2mfk76wwn38dmv25k2v57n") (f (quote (("udp" "aquatic_udp" "aquatic_udp_load_test") ("default" "udp")))) (r "1.64")))

