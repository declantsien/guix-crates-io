(define-module (crates-io aq ua aquatic_udp) #:use-module (crates-io))

(define-public crate-aquatic_udp-0.1.0 (c (n "aquatic_udp") (v "0.1.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "aquatic_cli_helpers") (r "^0.1.0") (d #t) (k 0)) (d (n "aquatic_common") (r "^0.1.0") (d #t) (k 0)) (d (n "aquatic_udp_protocol") (r "^0.1.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "hashbrown") (r "^0.9") (d #t) (k 0)) (d (n "histogram") (r "^0.6") (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1") (k 0)) (d (n "mio") (r "^0.7") (f (quote ("udp" "os-poll" "os-util"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "privdrop") (r "^0.3") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "socket2") (r "^0.3") (f (quote ("reuseport"))) (d #t) (k 0)))) (h "1qk0q51wgh8z4vz9kzr66kfjh0w9qhavkjshml5bxa24ppjkylyv")))

(define-public crate-aquatic_udp-0.2.0 (c (n "aquatic_udp") (v "0.2.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "aquatic_cli_helpers") (r "^0.2.0") (d #t) (k 0)) (d (n "aquatic_common") (r "^0.2.0") (d #t) (k 0)) (d (n "aquatic_toml_config") (r "^0.2.0") (d #t) (k 0)) (d (n "aquatic_udp_protocol") (r "^0.2.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1") (k 0)) (d (n "mio") (r "^0.8") (f (quote ("net" "os-poll"))) (d #t) (k 0)) (d (n "num-format") (r "^0.4") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "socket2") (r "^0.4") (f (quote ("all"))) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (k 0)) (d (n "tinytemplate") (r "^1") (d #t) (k 0)))) (h "1i4kgw7q8i6wqcyjxhffis4gfckb0sc1r4iq9k19kyn9mcfa2fw4") (f (quote (("cpu-pinning" "aquatic_common/cpu-pinning"))))))

(define-public crate-aquatic_udp-0.8.0 (c (n "aquatic_udp") (v "0.8.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "aquatic_common") (r "^0.8.0") (d #t) (k 0)) (d (n "aquatic_toml_config") (r "^0.8.0") (d #t) (k 0)) (d (n "aquatic_udp_protocol") (r "^0.8.0") (d #t) (k 0)) (d (n "blake3") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13") (k 0)) (d (n "hdrhistogram") (r "^7") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "io-uring") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.11") (f (quote ("http-listener"))) (o #t) (k 0)) (d (n "mimalloc") (r "^0.1") (k 0)) (d (n "mio") (r "^0.8") (f (quote ("net" "os-poll"))) (d #t) (k 0)) (d (n "num-format") (r "^0.4") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "socket2") (r "^0.4") (f (quote ("all"))) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (k 0)) (d (n "tinytemplate") (r "^1") (d #t) (k 0)))) (h "0awqvc1w2ccknl6vslyhbz9cqclbw3l3vhwaxcjm4pzqr4gkl5s6") (f (quote (("prometheus" "metrics" "metrics-exporter-prometheus") ("default" "prometheus") ("cpu-pinning" "aquatic_common/hwloc")))) (s 2) (e (quote (("io-uring" "dep:io-uring")))) (r "1.64")))

(define-public crate-aquatic_udp-0.9.0 (c (n "aquatic_udp") (v "0.9.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "aquatic_common") (r "^0.9.0") (d #t) (k 0)) (d (n "aquatic_toml_config") (r "^0.9.0") (d #t) (k 0)) (d (n "aquatic_udp_protocol") (r "^0.9.0") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "blake3") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "compact_str") (r "^0.7") (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.3") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (k 0)) (d (n "hdrhistogram") (r "^7") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "io-uring") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metrics") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "mimalloc") (r "^0.1") (o #t) (k 0)) (d (n "mio") (r "^0.8") (f (quote ("net" "os-poll"))) (d #t) (k 0)) (d (n "num-format") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "socket2") (r "^0.5") (f (quote ("all"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (k 0)) (d (n "tinytemplate") (r "^1") (d #t) (k 0)))) (h "0cd4pwr41j0qzv9s12gpss9vi1x7dfr6msnnz0gwqy481h9j4w25") (f (quote (("prometheus" "metrics" "aquatic_common/prometheus") ("default" "prometheus" "mimalloc")))) (s 2) (e (quote (("mimalloc" "dep:mimalloc") ("io-uring" "dep:io-uring")))) (r "1.64")))

