(define-module (crates-io ko rd kord) #:use-module (crates-io))

(define-public crate-kord-0.1.0 (c (n "kord") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "clap") (r "^4.0.29") (f (quote ("derive"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 0)) (d (n "pest") (r "^2.5.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.5.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rodio") (r "^0.16.0") (d #t) (k 0)))) (h "13p0c6zm5gq5hdnlal3fw5cfbx7qqjb0vj6rn3lyi4f4wckz6026")))

(define-public crate-kord-0.1.1 (c (n "kord") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "clap") (r "^4.0.29") (f (quote ("derive"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 0)) (d (n "pest") (r "^2.5.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.5.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rodio") (r "^0.16.0") (d #t) (k 0)))) (h "14chh1k282r2ydfbvgh2bsnybdw5xi96l36yi45ldjqw0bxqf1a4")))

(define-public crate-kord-0.1.2 (c (n "kord") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "clap") (r "^4.0.29") (f (quote ("derive"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 0)) (d (n "pest") (r "^2.5.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.5.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rodio") (r "^0.16.0") (d #t) (k 0)))) (h "1d21z1578685gw6cd6l93sp0ilmny4nipnabv2wi45xhl7nxzi1p")))

(define-public crate-kord-0.1.3 (c (n "kord") (v "0.1.3") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "clap") (r "^4.0.29") (f (quote ("derive"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 0)) (d (n "pest") (r "^2.5.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.5.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rodio") (r "^0.16.0") (d #t) (k 0)))) (h "10ds372dp4x0n0nrfqsxyfvvm9p1cf71vgzvqgw58k1099f3q1r8")))

(define-public crate-kord-0.1.4 (c (n "kord") (v "0.1.4") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "clap") (r "^4.0.29") (f (quote ("derive"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 0)) (d (n "pest") (r "^2.5.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.5.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rodio") (r "^0.16.0") (d #t) (k 0)))) (h "17971b7idlnicxrzpy4ps9z9p67lqm3dxf9p5xgj7icfc72n0nr3")))

(define-public crate-kord-0.2.0 (c (n "kord") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "clap") (r "^4.0.29") (f (quote ("derive"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 0)) (d (n "pest") (r "^2.5.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.5.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rodio") (r "^0.16.0") (d #t) (k 0)))) (h "10705vk7vnm6sn5sb2wi2vbd8w5nyxwsxdn86wgkd8rvz7z2mh7h")))

(define-public crate-kord-0.2.1 (c (n "kord") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "clap") (r "^4.0.29") (f (quote ("derive"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 0)) (d (n "pest") (r "^2.5.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.5.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rodio") (r "^0.16.0") (d #t) (k 0)))) (h "1x91klyxn9dsd67g5k3v00c8nz6nh6kd5k9cyyxkj7swvh2jshr6")))

(define-public crate-kord-0.2.2 (c (n "kord") (v "0.2.2") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "clap") (r "^4.0.29") (f (quote ("derive"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 0)) (d (n "pest") (r "^2.5.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.5.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rodio") (r "^0.16.0") (d #t) (k 0)))) (h "1wdimnwqi8plq5jb575i1g4cc1jjsg5qkiqzjs7h83kwa69713mk")))

(define-public crate-kord-0.3.0 (c (n "kord") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "clap") (r "^4.0.29") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 0)) (d (n "pest") (r "^2.5.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.5.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rodio") (r "^0.16.0") (d #t) (k 0)))) (h "1433mhsypxpfnsjap87y6zx38h9sh9y6b0gih2947pc1l4rjy86h") (f (quote (("default" "cli") ("cli" "clap"))))))

(define-public crate-kord-0.3.1 (c (n "kord") (v "0.3.1") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "clap") (r "^4.0.29") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 0)) (d (n "pest") (r "^2.5.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.5.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rodio") (r "^0.16.0") (o #t) (k 0)))) (h "16kqldyfqd20rqga6m2p1d0vhhxb0n4s9jzhzw106b8k2v1wj4a8") (f (quote (("wasm" "rodio/wasm-bindgen") ("playback" "rodio") ("default" "cli" "playback") ("cli" "clap"))))))

(define-public crate-kord-0.4.0 (c (n "kord") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "clap") (r "^4.0.29") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "cpal") (r "^0.14.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 0)) (d (n "pest") (r "^2.5.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.5.1") (d #t) (k 0)) (d (n "plotters") (r "^0.3.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rodio") (r "^0.16.0") (o #t) (k 0)) (d (n "rustfft") (r "^6.1.0") (o #t) (d #t) (k 0)))) (h "0c7w5032xf7zaanzzg4nv2cywnbyfkgwq1n9ib1qh8ry6pc9mqnw") (f (quote (("wasm" "rodio/wasm-bindgen") ("default" "cli" "audio") ("cli" "clap" "futures") ("audio" "rodio" "cpal" "rustfft" "futures-timer"))))))

(define-public crate-kord-0.4.1 (c (n "kord") (v "0.4.1") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "clap") (r "^4.0.29") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "cpal") (r "^0.14.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 0)) (d (n "pest") (r "^2.5.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.5.1") (d #t) (k 0)) (d (n "plotters") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rodio") (r "^0.16.0") (o #t) (k 0)) (d (n "rustfft") (r "^6.1.0") (o #t) (d #t) (k 0)))) (h "0j701fy5qd0mqzyk3grsfri2lwi3qqhdmhsyh1jhs99lwnhxqgg1") (f (quote (("wasm" "rodio/wasm-bindgen") ("plot" "plotters") ("default" "cli" "audio") ("cli" "clap" "futures") ("audio" "rodio" "cpal" "rustfft" "futures-timer"))))))

(define-public crate-kord-0.4.2 (c (n "kord") (v "0.4.2") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "clap") (r "^4.0.29") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "cpal") (r "^0.14.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 0)) (d (n "pest") (r "^2.5.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.5.1") (d #t) (k 0)) (d (n "plotters") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rodio") (r "^0.16.0") (o #t) (k 0)) (d (n "rustfft") (r "^6.1.0") (o #t) (d #t) (k 0)))) (h "07f7qdyn2nvc3jldy62pngg39vbqcgmsapiiwbwq8ccajhybppdi") (f (quote (("wasm" "rodio/wasm-bindgen") ("plot" "plotters") ("default" "cli" "audio") ("cli" "clap" "futures") ("audio" "rodio" "cpal" "rustfft" "futures-timer"))))))

(define-public crate-kord-0.5.3 (c (n "kord") (v "0.5.3") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.64") (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.2") (f (quote ("alloc" "serde"))) (o #t) (k 0)) (d (n "burn") (r "^0.6.0") (o #t) (k 0)) (d (n "burn-autodiff") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "burn-ndarray") (r "^0.6.0") (o #t) (k 0)) (d (n "burn-tch") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.0.29") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "cpal") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parse_duration0") (r "^3.0.0") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 0)) (d (n "pest") (r "^2.5.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.5.1") (d #t) (k 0)) (d (n "plotters") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "rodio") (r "^0.16.0") (f (quote ("symphonia"))) (o #t) (k 0)) (d (n "rustfft") (r "^6.1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "symphonia") (r "^0.5.2") (o #t) (d #t) (k 0)))) (h "14802c0fh4gviiq48phldyc5pmh0c0gc63aczl3cqlicccwzp610") (f (quote (("wasm" "rodio/wasm-bindgen") ("plot" "plotters") ("ml_train" "ml_base" "rand" "rayon" "burn-autodiff" "burn/train" "burn/std" "burn-ndarray/std") ("ml_infer" "ml_base" "burn" "burn-ndarray") ("ml_gpu" "ml_train" "burn-tch") ("ml_base" "serde" "byteorder" "bincode") ("ml" "ml_train" "ml_infer") ("default" "cli" "analyze" "audio") ("cli" "clap" "futures") ("audio" "rodio") ("analyze_mic" "analyze_base" "rodio" "cpal" "futures-timer") ("analyze_file_mp3" "symphonia/mp3") ("analyze_file_alac" "symphonia/alac" "symphonia/isomp4") ("analyze_file_aac" "symphonia/aac" "symphonia/isomp4") ("analyze_file" "analyze_base" "rodio" "symphonia" "parse_duration0") ("analyze_base" "rustfft") ("analyze" "analyze_mic" "analyze_file"))))))

(define-public crate-kord-0.5.16 (c (n "kord") (v "0.5.16") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.64") (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.2") (f (quote ("alloc" "serde"))) (o #t) (k 0)) (d (n "burn") (r "^0.6.0") (o #t) (k 0)) (d (n "burn-autodiff") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "burn-ndarray") (r "^0.6.0") (o #t) (k 0)) (d (n "burn-tch") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.0.29") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "cpal") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "gloo-timers") (r "^0.2.6") (f (quote ("futures"))) (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.61") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parse_duration0") (r "^3.0.0") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 0)) (d (n "pest") (r "^2.5.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.5.1") (d #t) (k 0)) (d (n "plotters") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "rodio") (r "^0.17.1") (f (quote ("symphonia"))) (o #t) (k 0)) (d (n "rustfft") (r "^6.1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "symphonia") (r "^0.5.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.84") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.34") (o #t) (d #t) (k 0)) (d (n "wee_alloc") (r "^0.4.5") (o #t) (d #t) (k 0)))) (h "1m9hiwjvnn8s7m7njjsd2sd6kd9zd8rbcff5dwavf7mgs52s21id") (f (quote (("wasm" "rodio/wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures" "js-sys" "console_error_panic_hook" "wee_alloc" "gloo-timers") ("plot" "plotters") ("ml_train" "ml_base" "rand" "rayon" "burn-autodiff" "burn/train" "burn/std" "burn-ndarray/std") ("ml_infer" "ml_base" "burn" "burn-ndarray") ("ml_gpu" "ml_train" "burn-tch") ("ml_base" "serde" "byteorder" "bincode") ("ml" "ml_train" "ml_infer") ("default" "cli" "analyze" "audio") ("cli" "clap" "futures") ("audio" "rodio") ("analyze_mic" "analyze_base" "rodio" "cpal" "futures-timer") ("analyze_file_mp3" "symphonia/mp3") ("analyze_file_alac" "symphonia/alac" "symphonia/isomp4") ("analyze_file_aac" "symphonia/aac" "symphonia/isomp4") ("analyze_file" "analyze_base" "rodio" "symphonia" "parse_duration0") ("analyze_base" "rustfft") ("analyze" "analyze_mic" "analyze_file"))))))

(define-public crate-kord-0.6.0 (c (n "kord") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.64") (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.2") (f (quote ("alloc" "serde"))) (o #t) (k 0)) (d (n "burn") (r "^0.6.0") (o #t) (k 0)) (d (n "burn-autodiff") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "burn-ndarray") (r "^0.6.0") (o #t) (k 0)) (d (n "burn-tch") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.0.29") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "cpal") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "gloo-timers") (r "^0.2.6") (f (quote ("futures"))) (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.61") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parse_duration0") (r "^3.0.0") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 0)) (d (n "pest") (r "^2.5.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.5.1") (d #t) (k 0)) (d (n "plotters") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "rodio") (r "^0.17.1") (f (quote ("symphonia"))) (o #t) (k 0)) (d (n "rustfft") (r "^6.1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "symphonia") (r "^0.5.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.84") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.34") (o #t) (d #t) (k 0)) (d (n "wee_alloc") (r "^0.4.5") (o #t) (d #t) (k 0)))) (h "0h2c2ihaq88psh12ihfc27rl3bahc3bjbz4bfhhgif3x2bh011qx") (f (quote (("wasm" "rodio/wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures" "js-sys" "console_error_panic_hook" "wee_alloc" "gloo-timers") ("plot" "plotters") ("ml_train" "ml_base" "rand" "rayon" "burn-autodiff" "burn/train" "burn/std" "burn-ndarray/std") ("ml_infer" "ml_base" "burn" "burn-ndarray") ("ml_gpu" "ml_train" "burn-tch") ("ml_base" "serde" "byteorder" "bincode") ("ml" "ml_train" "ml_infer") ("default" "cli" "analyze" "audio") ("cli" "clap" "futures") ("audio" "rodio") ("analyze_mic" "analyze_base" "rodio" "cpal" "futures-timer") ("analyze_file_mp3" "symphonia/mp3") ("analyze_file_alac" "symphonia/alac" "symphonia/isomp4") ("analyze_file_aac" "symphonia/aac" "symphonia/isomp4") ("analyze_file" "analyze_base" "rodio" "symphonia" "parse_duration0") ("analyze_base" "rustfft") ("analyze" "analyze_mic" "analyze_file"))))))

(define-public crate-kord-0.6.1 (c (n "kord") (v "0.6.1") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.64") (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.2") (f (quote ("alloc" "serde"))) (o #t) (k 0)) (d (n "burn") (r "^0.6.0") (o #t) (k 0)) (d (n "burn-autodiff") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "burn-ndarray") (r "^0.6.0") (o #t) (k 0)) (d (n "burn-tch") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.0.29") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "cpal") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "gloo-timers") (r "^0.2.6") (f (quote ("futures"))) (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.61") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parse_duration0") (r "^3.0.0") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 0)) (d (n "pest") (r "^2.5.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.5.1") (d #t) (k 0)) (d (n "plotters") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "rodio") (r "^0.17.1") (f (quote ("symphonia"))) (o #t) (k 0)) (d (n "rustfft") (r "^6.1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "symphonia") (r "^0.5.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.84") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.34") (o #t) (d #t) (k 0)) (d (n "wee_alloc") (r "^0.4.5") (o #t) (d #t) (k 0)))) (h "1y6d6251iw26rgmbxira45kgkrh3xrar63j2i5nsgjg0hlj8a2y6") (f (quote (("wasm" "rodio/wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures" "js-sys" "console_error_panic_hook" "wee_alloc" "gloo-timers") ("plot" "plotters") ("ml_train" "ml_base" "rand" "rayon" "burn-autodiff" "burn/train" "burn/std" "burn-ndarray/std") ("ml_infer" "ml_base" "burn" "burn-ndarray") ("ml_gpu" "ml_train" "burn-tch") ("ml_base" "serde" "byteorder" "bincode") ("ml" "ml_train" "ml_infer") ("default" "cli" "analyze" "audio") ("cli" "clap" "futures") ("audio" "rodio") ("analyze_mic" "analyze_base" "rodio" "cpal" "futures-timer") ("analyze_file_mp3" "symphonia/mp3") ("analyze_file_alac" "symphonia/alac" "symphonia/isomp4") ("analyze_file_aac" "symphonia/aac" "symphonia/isomp4") ("analyze_file" "analyze_base" "rodio" "symphonia" "parse_duration0") ("analyze_base" "rustfft") ("analyze" "analyze_mic" "analyze_file"))))))

(define-public crate-kord-0.7.1 (c (n "kord") (v "0.7.1") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.64") (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.2") (f (quote ("alloc" "serde"))) (o #t) (k 0)) (d (n "burn") (r "^0.11.1") (o #t) (k 0)) (d (n "burn-autodiff") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "burn-ndarray") (r "^0.11.1") (o #t) (k 0)) (d (n "burn-tch") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "burn-wgpu") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.0.29") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "cpal") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (o #t) (d #t) (k 0)) (d (n "gloo-timers") (r "^0.2.6") (f (quote ("futures"))) (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.61") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parse_duration0") (r "^3.0.0") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 0)) (d (n "pest") (r "^2.5.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.5.1") (d #t) (k 0)) (d (n "plotters") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0.60") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "rodio") (r "^0.17.1") (f (quote ("symphonia"))) (o #t) (k 0)) (d (n "rustfft") (r "^6.1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "symphonia") (r "^0.5.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.84") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.34") (o #t) (d #t) (k 0)) (d (n "wee_alloc") (r "^0.4.5") (o #t) (d #t) (k 0)))) (h "1hbjh5vmwdqwyxwa99zax4kvgm1j90fx3zs2qfp11bb6c4hnl7kr") (f (quote (("wasm" "rodio/wasm-bindgen" "wasm-bindgen" "wasm-bindgen-futures" "js-sys" "console_error_panic_hook" "wee_alloc" "gloo-timers" "burn/wasm-sync") ("wasi" "burn/wasm-sync") ("plot" "plotters") ("ml_train" "ml_base" "rand" "rayon" "burn-autodiff" "burn/train" "burn/std" "burn/wgpu" "burn/metrics" "burn-ndarray/std") ("ml_infer" "ml_base" "burn" "burn-ndarray" "burn-ndarray/std") ("ml_gpu" "ml_train" "burn-tch" "burn-wgpu" "burn/tui") ("ml_base" "serde" "byteorder" "bincode") ("ml" "ml_train" "ml_infer") ("default" "cli" "analyze" "audio" "ml_infer") ("cli" "clap" "futures") ("audio" "rodio") ("analyze_mic" "analyze_base" "rodio" "cpal" "futures-timer") ("analyze_file_mp3" "symphonia/mp3") ("analyze_file_alac" "symphonia/alac" "symphonia/isomp4") ("analyze_file_aac" "symphonia/aac" "symphonia/isomp4") ("analyze_file" "analyze_base" "rodio" "symphonia" "parse_duration0") ("analyze_base" "rustfft") ("analyze" "analyze_mic" "analyze_file"))))))

