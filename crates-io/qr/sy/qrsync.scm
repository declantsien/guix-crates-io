(define-module (crates-io qr sy qrsync) #:use-module (crates-io))

(define-public crate-qrsync-0.1.0 (c (n "qrsync") (v "0.1.0") (d (list (d (n "clap") (r "~3.0.0-beta.1") (f (quote ("suggestions" "color"))) (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pnet") (r "^0.26") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "qr2term") (r "^0.2") (d #t) (k 0)) (d (n "rocket") (r "^0.4.4") (d #t) (k 0)) (d (n "rocket-multipart-form-data") (r "^0.8") (d #t) (k 0)) (d (n "rocket_contrib") (r "^0.4.4") (f (quote ("tera_templates"))) (k 0)) (d (n "signal-hook") (r "^0.1") (d #t) (k 0)))) (h "05d3xcxv3ynp4hiki7ardba9qxdvmhx3rlpc552z90iwkhr3v4bk")))

(define-public crate-qrsync-0.1.1 (c (n "qrsync") (v "0.1.1") (d (list (d (n "clap") (r "~3.0.0-beta.1") (f (quote ("suggestions" "color"))) (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pnet") (r "^0.26") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "qr2term") (r "^0.2") (d #t) (k 0)) (d (n "rocket") (r "^0.4.4") (d #t) (k 0)) (d (n "rocket-multipart-form-data") (r "^0.8") (d #t) (k 0)) (d (n "rocket_contrib") (r "^0.4.4") (d #t) (k 0)) (d (n "signal-hook") (r "^0.1") (d #t) (k 0)))) (h "1nx5hjzy85dsr54agvd3q7byxgsajnz0isxdr79m6dbnw6pf5m86")))

(define-public crate-qrsync-0.1.2 (c (n "qrsync") (v "0.1.2") (d (list (d (n "clap") (r "~3.0.0-beta.1") (f (quote ("suggestions" "color"))) (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pnet") (r "^0.26") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "qr2term") (r "^0.2") (d #t) (k 0)) (d (n "rocket") (r "^0.4.4") (d #t) (k 0)) (d (n "rocket-multipart-form-data") (r "^0.8") (d #t) (k 0)) (d (n "rocket_contrib") (r "^0.4.4") (d #t) (k 0)) (d (n "signal-hook") (r "^0.1") (d #t) (k 0)))) (h "1pv0x29a8dykp5mi9507dvwcn7lf21y0k30rn3p7j9gxln5inmm1")))

(define-public crate-qrsync-0.1.3 (c (n "qrsync") (v "0.1.3") (d (list (d (n "base64") (r "^0") (d #t) (k 0)) (d (n "clap") (r "~3.0.0-beta.1") (d #t) (k 0)) (d (n "get_if_addrs") (r "^0.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pnet") (r "^0.26") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "qr2term") (r "^0.2") (d #t) (k 0)) (d (n "rocket") (r "^0.4.4") (d #t) (k 0)) (d (n "rocket-multipart-form-data") (r "^0.8") (d #t) (k 0)) (d (n "rocket_contrib") (r "^0.4.4") (d #t) (k 0)) (d (n "signal-hook") (r "^0.1") (d #t) (k 0)))) (h "128hsaax65rbd45m8gv7jm7nx5n4b0hyhy6dc7nca0vb5xfkb810")))

(define-public crate-qrsync-0.1.4 (c (n "qrsync") (v "0.1.4") (d (list (d (n "base64") (r "^0") (d #t) (k 0)) (d (n "clap") (r "~3.0.0-beta.1") (d #t) (k 0)) (d (n "ctrlc") (r "^3") (f (quote ("termination"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pnet") (r "^0.26") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "qr2term") (r "^0.2") (d #t) (k 0)) (d (n "rocket") (r "^0.4.4") (d #t) (k 0)) (d (n "rocket-multipart-form-data") (r "^0.8") (d #t) (k 0)) (d (n "rocket_contrib") (r "^0.4.4") (d #t) (k 0)))) (h "1k2hcvv6yvq031j793md96n2lv30yg6ch5zyfs9hmzlhyly3hvr6")))

(define-public crate-qrsync-0.1.5 (c (n "qrsync") (v "0.1.5") (d (list (d (n "base64") (r "^0") (d #t) (k 0)) (d (n "clap") (r "~3.0.0-beta.1") (d #t) (k 0)) (d (n "ctrlc") (r "^3") (f (quote ("termination"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pnet") (r "^0.26") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "qr2term") (r "^0.2") (d #t) (k 0)) (d (n "rocket") (r "^0.4.4") (d #t) (k 0)) (d (n "rocket-multipart-form-data") (r "^0.8") (d #t) (k 0)) (d (n "rocket_contrib") (r "^0.4.4") (d #t) (k 0)))) (h "0min3a0sg1n0k8fgh80painwppvfb7v354vv0mdmgksbh1kd9blm")))

(define-public crate-qrsync-0.1.6 (c (n "qrsync") (v "0.1.6") (d (list (d (n "base64") (r "^0") (d #t) (k 0)) (d (n "clap") (r "~3.0.0-beta.1") (d #t) (k 0)) (d (n "ctrlc") (r "^3") (f (quote ("termination"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pnet") (r "^0.26") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "qr2term") (r "^0.2") (d #t) (k 0)) (d (n "rocket") (r "^0.4.4") (d #t) (k 0)) (d (n "rocket-download-response") (r "^0.4") (d #t) (k 0)) (d (n "rocket-multipart-form-data") (r "^0.8") (d #t) (k 0)) (d (n "rocket_contrib") (r "^0.4.4") (d #t) (k 0)))) (h "06rnzxq5w6dwyzc5k52vdrcd423732mgjrbchpg96cnyspgmaj9g")))

(define-public crate-qrsync-0.1.7 (c (n "qrsync") (v "0.1.7") (d (list (d (n "base64") (r "^0") (d #t) (k 0)) (d (n "clap") (r "~3.0.0-beta.4") (d #t) (k 0)) (d (n "ctrlc") (r "^3") (f (quote ("termination"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pnet") (r "^0.28") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "qr2term") (r "^0.2") (d #t) (k 0)) (d (n "rocket") (r "^0.4.10") (d #t) (k 0)) (d (n "rocket-download-response") (r "^0.4") (d #t) (k 0)) (d (n "rocket-multipart-form-data") (r "^0.8") (d #t) (k 0)) (d (n "rocket_contrib") (r "^0.4.10") (d #t) (k 0)))) (h "0lswx0scrz3d1rkv1421ds3mg7qdaxby4ds25lbgimnfqj8k2jqa")))

(define-public crate-qrsync-0.1.8 (c (n "qrsync") (v "0.1.8") (d (list (d (n "base64") (r "^0") (d #t) (k 0)) (d (n "clap") (r "~3.0.0-beta.4") (d #t) (k 0)) (d (n "ctrlc") (r "^3") (f (quote ("termination"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pnet") (r "^0.28") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "qr2term") (r "^0.2") (d #t) (k 0)) (d (n "rocket") (r "^0.4.10") (d #t) (k 0)) (d (n "rocket-download-response") (r "^0.4") (d #t) (k 0)) (d (n "rocket-multipart-form-data") (r "^0.8") (d #t) (k 0)) (d (n "rocket_contrib") (r "^0.4.10") (d #t) (k 0)))) (h "000610wyd2dfpr4p69xppwfcq7m2h8amkrx4jfj0gj5d0frr3gaj")))

(define-public crate-qrsync-0.2.0 (c (n "qrsync") (v "0.2.0") (d (list (d (n "axum") (r "^0.5") (f (quote ("multipart"))) (d #t) (k 0)) (d (n "base64") (r "^0") (d #t) (k 0)) (d (n "clap") (r "^3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "ctrlc") (r "^3") (f (quote ("termination"))) (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "pnet") (r "^0.29") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2") (d #t) (k 2)) (d (n "qr2term") (r "^0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4") (d #t) (k 0)) (d (n "tower-http") (r "^0.3") (f (quote ("trace"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "134zc5p1bxpl57qwlia858b40g3dr5gim7qf8zx7p3dklvi7sq5h")))

(define-public crate-qrsync-0.2.1 (c (n "qrsync") (v "0.2.1") (d (list (d (n "axum") (r "^0.5") (f (quote ("multipart"))) (d #t) (k 0)) (d (n "base64") (r "^0") (d #t) (k 0)) (d (n "clap") (r "^3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "ctrlc") (r "^3") (f (quote ("termination"))) (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "pnet") (r "^0.30") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2") (d #t) (k 2)) (d (n "qr2term") (r "^0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4") (d #t) (k 0)) (d (n "tower-http") (r "^0.3") (f (quote ("trace"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "1xs2z2k5pbxm396sjy6x3drhil8jvgwjrzflaakai8x3sxf2a2qk")))

(define-public crate-qrsync-0.2.2 (c (n "qrsync") (v "0.2.2") (d (list (d (n "axum") (r "^0.5") (f (quote ("multipart"))) (d #t) (k 0)) (d (n "base64") (r "^0") (d #t) (k 0)) (d (n "clap") (r "^3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "ctrlc") (r "^3") (f (quote ("termination"))) (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "pnet") (r "^0.30") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2") (d #t) (k 2)) (d (n "qr2term") (r "^0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4") (d #t) (k 0)) (d (n "tower-http") (r "^0.3") (f (quote ("trace"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "14i0kwsza2rpnsgq33jfg4czn12cni24k419rjgprn9phhwd4d57") (r "1.60")))

(define-public crate-qrsync-0.2.3 (c (n "qrsync") (v "0.2.3") (d (list (d (n "axum") (r "^0.5") (f (quote ("multipart"))) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "clap") (r "^3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "ctrlc") (r "^3") (f (quote ("termination"))) (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "pnet") (r "^0.30") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2") (d #t) (k 2)) (d (n "qr2term") (r "^0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4") (d #t) (k 0)) (d (n "tower-http") (r "^0.3") (f (quote ("trace"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "17d7vqn55b45f8gfcx6w0ldj6nh55vfa9jsprj5rfsifh733z6cq") (r "1.60")))

(define-public crate-qrsync-0.3.0 (c (n "qrsync") (v "0.3.0") (d (list (d (n "argh") (r "^0.1") (d #t) (k 0)) (d (n "axum") (r "^0.6") (f (quote ("multipart"))) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "ctrlc") (r "^3") (f (quote ("termination"))) (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "pnet") (r "^0.34") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2") (d #t) (k 2)) (d (n "qr2term") (r "^0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4") (d #t) (k 0)) (d (n "tower-http") (r "^0.4") (f (quote ("limit" "trace"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "1s67qsqplnvk8b0xqx0rvvxnm4wxnz6hrpmss4fbcsbqz1cnk8q3") (r "1.60")))

