(define-module (crates-io of fs offscreen_gl_context) #:use-module (crates-io))

(define-public crate-offscreen_gl_context-0.1.0 (c (n "offscreen_gl_context") (v "0.1.0") (h "03b1vqqg80n5f3mr18z5k41h0dr2hm9d3zk4xn5ihm03idnrlfx2")))

(define-public crate-offscreen_gl_context-0.1.1 (c (n "offscreen_gl_context") (v "0.1.1") (d (list (d (n "cgl") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.2.0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.6.1") (d #t) (k 0)) (d (n "gl_generator") (r "^0.4") (d #t) (k 1)) (d (n "gleam") (r "^0.2") (d #t) (k 0)) (d (n "khronos_api") (r "^1.0") (d #t) (k 1)) (d (n "log") (r "^0.3.3") (d #t) (k 0)) (d (n "serde") (r ">= 0.6.1, < 0.8") (o #t) (d #t) (k 0)) (d (n "serde_macros") (r ">= 0.6.1, < 0.8") (o #t) (d #t) (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (d #t) (t "x86_64-unknown-linux-gnu") (k 0)))) (h "14blv3jcsh5ra4s1dlbny2p7m9czdcradn1fdvmyabhyqpn96qin") (f (quote (("test_egl_in_linux") ("serde_serialization" "serde" "serde_macros") ("default"))))))

(define-public crate-offscreen_gl_context-0.1.2 (c (n "offscreen_gl_context") (v "0.1.2") (d (list (d (n "cgl") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.2.0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.6.1") (d #t) (k 0)) (d (n "gl_generator") (r "^0.4") (d #t) (k 1)) (d (n "gleam") (r "^0.2") (d #t) (k 0)) (d (n "khronos_api") (r "^1.0") (d #t) (k 1)) (d (n "log") (r "^0.3.3") (d #t) (k 0)) (d (n "serde") (r ">= 0.6.1, < 0.8") (o #t) (d #t) (k 0)) (d (n "serde_macros") (r ">= 0.6.1, < 0.8") (o #t) (d #t) (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (d #t) (t "x86_64-unknown-linux-gnu") (k 0)))) (h "0k33z31ws4jzqfcvnxwbm1zmbcnzsm152cxydkyrk58385gs9j4r") (f (quote (("test_egl_in_linux") ("serde_serialization" "serde" "serde_macros") ("default"))))))

(define-public crate-offscreen_gl_context-0.1.3 (c (n "offscreen_gl_context") (v "0.1.3") (d (list (d (n "cgl") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.2.0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.6.1") (d #t) (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "gleam") (r "^0.2") (d #t) (k 0)) (d (n "khronos_api") (r "^1.0") (d #t) (k 1)) (d (n "log") (r "^0.3.3") (d #t) (k 0)) (d (n "serde") (r ">= 0.6.1, < 0.8") (o #t) (d #t) (k 0)) (d (n "serde_macros") (r ">= 0.6.1, < 0.8") (o #t) (d #t) (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (d #t) (t "aarch64-unknown-linux-gnu") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (d #t) (t "arm-unknown-linux-gnueabihf") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (d #t) (t "x86_64-unknown-linux-gnu") (k 0)))) (h "1j6cbfrvhx0kyccdf1glf9jp90s320nbbicqsyg76qnaszgkd5zc") (f (quote (("test_egl_in_linux") ("serde_serialization" "serde" "serde_macros") ("default"))))))

(define-public crate-offscreen_gl_context-0.1.4 (c (n "offscreen_gl_context") (v "0.1.4") (d (list (d (n "cgl") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.2.0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.6.1") (d #t) (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "gleam") (r "^0.2") (d #t) (k 0)) (d (n "khronos_api") (r "^1.0") (d #t) (k 1)) (d (n "log") (r "^0.3.3") (d #t) (k 0)) (d (n "serde") (r ">= 0.6.1, < 0.8") (o #t) (d #t) (k 0)) (d (n "serde_macros") (r ">= 0.6.1, < 0.8") (o #t) (d #t) (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "0nac1nd14ji1kq06dv2pd7iyqfsir6lw6kd4fcxw2hp7imi5s5sf") (f (quote (("test_egl_in_linux") ("serde_serialization" "serde" "serde_macros") ("default"))))))

(define-public crate-offscreen_gl_context-0.1.5 (c (n "offscreen_gl_context") (v "0.1.5") (d (list (d (n "cgl") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.2.0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.6.1") (d #t) (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "gleam") (r "^0.2") (d #t) (k 0)) (d (n "khronos_api") (r "^1.0") (d #t) (k 1)) (d (n "log") (r "^0.3.3") (d #t) (k 0)) (d (n "serde") (r ">= 0.6.1, < 0.8") (o #t) (d #t) (k 0)) (d (n "serde_macros") (r ">= 0.6.1, < 0.8") (o #t) (d #t) (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "1h1wzq8agav7k7wxb6w1yznv6sb7bl7ypqllj5slm5ba9a97wlgk") (f (quote (("test_egl_in_linux") ("serde_serialization" "serde" "serde_macros") ("default"))))))

(define-public crate-offscreen_gl_context-0.1.6 (c (n "offscreen_gl_context") (v "0.1.6") (d (list (d (n "cgl") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.2.0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.6.1") (d #t) (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "gleam") (r "^0.2") (d #t) (k 0)) (d (n "khronos_api") (r "^1.0") (d #t) (k 1)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r ">= 0.6.1, < 0.8") (o #t) (d #t) (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "0bwnc96qk2dl85sccwvpc8yny73lgz6z5m9i93i21ypi6lh1fcxz") (f (quote (("test_egl_in_linux") ("serde_serialization" "serde") ("default"))))))

(define-public crate-offscreen_gl_context-0.1.8 (c (n "offscreen_gl_context") (v "0.1.8") (d (list (d (n "cgl") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.2.0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.6.1") (d #t) (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "gleam") (r "^0.2") (d #t) (k 0)) (d (n "khronos_api") (r "^1.0") (d #t) (k 1)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r ">= 0.6.1, < 0.8") (o #t) (d #t) (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "02049m1vjs59rrzs60j1h0fwy8gpysx3bs5jm289f3082j3dbg0h") (f (quote (("test_egl_in_linux") ("serde_serialization" "serde") ("default"))))))

(define-public crate-offscreen_gl_context-0.1.9 (c (n "offscreen_gl_context") (v "0.1.9") (d (list (d (n "cgl") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.2.0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r ">= 0.6.1, < 0.8") (d #t) (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "gleam") (r "^0.2") (d #t) (k 0)) (d (n "khronos_api") (r "^1.0") (d #t) (k 1)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r ">= 0.6.1, < 0.8") (o #t) (d #t) (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "15vlzlz4nvxgvigfxcmxvj7q8fynyar7gzjr79zrn239hlg9fm6q") (f (quote (("test_egl_in_linux") ("serde_serialization" "serde") ("default"))))))

(define-public crate-offscreen_gl_context-0.2.0 (c (n "offscreen_gl_context") (v "0.2.0") (d (list (d (n "cgl") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.2.0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.8") (d #t) (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "gleam") (r "^0.2") (d #t) (k 0)) (d (n "khronos_api") (r "^1.0") (d #t) (k 1)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r ">= 0.6.1, < 0.8") (o #t) (d #t) (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "00fy2955yq9f3qy495n0lbn9a3wrgqmnn5g2msm81zyiivhhjsv8") (f (quote (("test_egl_in_linux") ("serde_serialization" "serde") ("default"))))))

(define-public crate-offscreen_gl_context-0.3.0 (c (n "offscreen_gl_context") (v "0.3.0") (d (list (d (n "cgl") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.2.0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.9") (d #t) (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "gleam") (r "^0.2") (d #t) (k 0)) (d (n "khronos_api") (r "^1.0") (d #t) (k 1)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "0mbb5105vi1vbvcgdghf9lwqnn167kqymnra9sm8d2rfm0adjs2m") (f (quote (("test_egl_in_linux") ("serde_serialization" "serde") ("default"))))))

(define-public crate-offscreen_gl_context-0.4.0 (c (n "offscreen_gl_context") (v "0.4.0") (d (list (d (n "cgl") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.2.0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.10") (d #t) (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "gleam") (r "^0.2") (d #t) (k 0)) (d (n "khronos_api") (r "^1.0") (d #t) (k 1)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "1n3417sq4shk3ykplvahqrfvjmfgyvc68fs310lfazbk5ij65kqm") (f (quote (("test_egl_in_linux") ("serde_serialization" "serde") ("default"))))))

(define-public crate-offscreen_gl_context-0.4.1 (c (n "offscreen_gl_context") (v "0.4.1") (d (list (d (n "cgl") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.2.0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.10") (d #t) (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "gleam") (r "^0.2") (d #t) (k 0)) (d (n "khronos_api") (r "^1.0") (d #t) (k 1)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "0sh0gw6r48gcppvv12gdnjg0pxb2db47b1m3ks2xa0x3x7lw0ici") (f (quote (("test_egl_in_linux") ("serde_serialization" "serde") ("default"))))))

(define-public crate-offscreen_gl_context-0.4.2 (c (n "offscreen_gl_context") (v "0.4.2") (d (list (d (n "cgl") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.2.0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.10") (d #t) (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "gleam") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "0034f3ag26pfmv9619wln183fsm74ikiznsggzg1m5fx94rv0q08") (f (quote (("test_egl_in_linux") ("serde_serialization" "serde") ("default"))))))

(define-public crate-offscreen_gl_context-0.4.3 (c (n "offscreen_gl_context") (v "0.4.3") (d (list (d (n "cgl") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.2.0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.10") (d #t) (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "gleam") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "0mfngkb8hxxfdvg2nna2a9dz5p70hpmdhimw0fsf5gmvxcms9kgz") (f (quote (("test_osmesa") ("test_egl_in_linux") ("serde_serialization" "serde") ("osmesa" "osmesa-sys") ("default"))))))

(define-public crate-offscreen_gl_context-0.4.4 (c (n "offscreen_gl_context") (v "0.4.4") (d (list (d (n "cgl") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.2.0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.10") (d #t) (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "gleam") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "0annfriapbpkqfapnjy8c2my46304lls89shn51zmrqf62y7v7pa") (f (quote (("test_osmesa") ("test_egl_in_linux") ("serde_serialization" "serde") ("osmesa" "osmesa-sys") ("default"))))))

(define-public crate-offscreen_gl_context-0.4.5 (c (n "offscreen_gl_context") (v "0.4.5") (d (list (d (n "cgl") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.2.0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.10") (d #t) (k 0)) (d (n "gdi32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "gleam") (r "^0.2") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "user32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "172w8zgpck7pfarcr9y3vkrhkak65b9wi6jxfrbi7c2md2v0f0q0") (f (quote (("test_osmesa") ("test_egl_in_linux") ("serde_serialization" "serde") ("osmesa" "osmesa-sys") ("default"))))))

(define-public crate-offscreen_gl_context-0.5.0 (c (n "offscreen_gl_context") (v "0.5.0") (d (list (d (n "cgl") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.2.0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.10") (d #t) (k 0)) (d (n "gdi32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "gleam") (r "^0.2") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "user32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "18rbwr5lgf59a0sl28kcv00b8s25hknw3mg5088wi3wwim9km8wx") (f (quote (("test_osmesa") ("test_egl_in_linux") ("serde_serialization" "serde") ("osmesa" "osmesa-sys") ("default"))))))

(define-public crate-offscreen_gl_context-0.5.1 (c (n "offscreen_gl_context") (v "0.5.1") (d (list (d (n "cgl") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.2.0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.10") (d #t) (k 0)) (d (n "gdi32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "gleam") (r "^0.2") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "user32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "12kjw8vzc49a28s1pj8giq0bynwc2q9nrc8p7bsahvibp9agxqig") (f (quote (("test_osmesa") ("test_egl_in_linux") ("serde_serialization" "serde") ("osmesa" "osmesa-sys") ("default"))))))

(define-public crate-offscreen_gl_context-0.5.2 (c (n "offscreen_gl_context") (v "0.5.2") (d (list (d (n "cgl") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.2.0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.10") (d #t) (k 0)) (d (n "gdi32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "gleam") (r "^0.2") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "user32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "0dxlgzl0laq7xjrzka644j292znszjfyg95yq7jhj9imm4jjp3jn") (f (quote (("test_osmesa") ("test_egl_in_linux") ("serde_serialization" "serde") ("osmesa" "osmesa-sys") ("default"))))))

(define-public crate-offscreen_gl_context-0.5.3 (c (n "offscreen_gl_context") (v "0.5.3") (d (list (d (n "cgl") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.2.0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.10") (d #t) (k 0)) (d (n "gdi32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "gleam") (r "^0.2") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "user32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "15wksq91jb0q9aa402jwr1ivqhg16qn3lhavgh4nllshanxwd4i0") (f (quote (("test_osmesa") ("test_egl_in_linux") ("serde_serialization" "serde") ("osmesa" "osmesa-sys") ("default"))))))

(define-public crate-offscreen_gl_context-0.5.4 (c (n "offscreen_gl_context") (v "0.5.4") (d (list (d (n "cgl") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.3.0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.10") (d #t) (k 0)) (d (n "gdi32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "gleam") (r "^0.2") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "user32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "1n91bp2wqzm3il2dy4x6p8ns9wh692a9hxx7xsz2sqlfh9s5mhb8") (f (quote (("test_osmesa") ("test_egl_in_linux") ("serde_serialization" "serde") ("osmesa" "osmesa-sys") ("default"))))))

(define-public crate-offscreen_gl_context-0.5.5 (c (n "offscreen_gl_context") (v "0.5.5") (d (list (d (n "cgl") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.3.0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.10") (d #t) (k 0)) (d (n "gdi32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "gleam") (r "^0.2.31") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "user32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "1adwsg736aigxvz8nzsilllb7ylsy3dh5i8kkphxm52c3pap87qp") (f (quote (("test_osmesa") ("test_egl_in_linux") ("serde_serialization" "serde") ("osmesa" "osmesa-sys") ("default"))))))

(define-public crate-offscreen_gl_context-0.6.0 (c (n "offscreen_gl_context") (v "0.6.0") (d (list (d (n "cgl") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.3.0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.11") (d #t) (k 0)) (d (n "gdi32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "gleam") (r "^0.2.31") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "user32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "1l17qv0g7kgxrjh2q0z9r7l9gwi3f0rnmqkg8sdya2ym2zy0jcxk") (f (quote (("test_osmesa") ("test_egl_in_linux") ("osmesa" "osmesa-sys") ("default"))))))

(define-public crate-offscreen_gl_context-0.6.1 (c (n "offscreen_gl_context") (v "0.6.1") (d (list (d (n "cgl") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.3.0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.11") (d #t) (k 0)) (d (n "gdi32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "gleam") (r "^0.2.31") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "user32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "1g5i4jdz0gb86ih50jfaamrjn3kagmvp1hy83id6jz8xjpm7bj2a") (f (quote (("test_osmesa") ("test_egl_in_linux") ("osmesa" "osmesa-sys") ("default"))))))

(define-public crate-offscreen_gl_context-0.7.0 (c (n "offscreen_gl_context") (v "0.7.0") (d (list (d (n "cgl") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.3.0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.11") (d #t) (k 0)) (d (n "gdi32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "gleam") (r "^0.3") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "user32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "1x09znnb2d5c7l4f2c38n91p72dkw9a7xmpxhm6v2ac9jswyirk8") (f (quote (("test_osmesa") ("test_egl_in_linux") ("osmesa" "osmesa-sys") ("default"))))))

(define-public crate-offscreen_gl_context-0.7.1 (c (n "offscreen_gl_context") (v "0.7.1") (d (list (d (n "cgl") (r "^0.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.3.0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.11") (d #t) (k 0)) (d (n "gdi32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "gleam") (r "^0.3") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "user32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "1ybdyh0929mc7kx057dbdsrnpbk02cg1iam170nr0qxli2b9m387") (f (quote (("test_osmesa") ("test_egl_in_linux") ("osmesa" "osmesa-sys") ("default"))))))

(define-public crate-offscreen_gl_context-0.8.0 (c (n "offscreen_gl_context") (v "0.8.0") (d (list (d (n "cgl") (r "^0.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.3.0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.11") (d #t) (k 0)) (d (n "gdi32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "gleam") (r "^0.3") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "user32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "1lnj08wkisvd7scf89agkg2j1hwawgxgwl7yn3jvm5d2wjdmfahx") (f (quote (("test_osmesa") ("test_egl_in_linux") ("osmesa" "osmesa-sys") ("default"))))))

(define-public crate-offscreen_gl_context-0.8.1 (c (n "offscreen_gl_context") (v "0.8.1") (d (list (d (n "cgl") (r "^0.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.3.0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.11") (d #t) (k 0)) (d (n "gdi32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "gleam") (r "^0.3") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "user32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "0miv9yj4p9wvha8wj73r5crc7ql9hz1504z2yl7f54dia9nqh1q7") (f (quote (("test_egl_in_linux") ("osmesa" "osmesa-sys") ("default" "x11"))))))

(define-public crate-offscreen_gl_context-0.8.2 (c (n "offscreen_gl_context") (v "0.8.2") (d (list (d (n "cgl") (r "^0.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.3.0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.11") (d #t) (k 0)) (d (n "gdi32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "gleam") (r "^0.4") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "user32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "1y65qpcgzshlhqp8qc92zbf4938hqj5rdvdbmh4fd3sb91vv7gyf") (f (quote (("test_egl_in_linux") ("osmesa" "osmesa-sys") ("default" "x11"))))))

(define-public crate-offscreen_gl_context-0.8.3 (c (n "offscreen_gl_context") (v "0.8.3") (d (list (d (n "cgl") (r "^0.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.3.0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.11") (d #t) (k 0)) (d (n "gdi32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "gleam") (r "^0.4") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "user32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "1d541vy79adcl9bz2cwjdjc6rw8ij7cfr7kq5b6skn12sai5b21f") (f (quote (("test_egl_in_linux") ("osmesa" "osmesa-sys") ("default" "x11"))))))

(define-public crate-offscreen_gl_context-0.8.4 (c (n "offscreen_gl_context") (v "0.8.4") (d (list (d (n "cgl") (r "^0.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.3.0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.11") (d #t) (k 0)) (d (n "gdi32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "gleam") (r "^0.4") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "user32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "1zahzl997j73wdiy7dfqprsa413r8cmhdl3r9kykj2qw9rcibbi1") (f (quote (("test_egl_in_linux") ("osmesa" "osmesa-sys") ("default" "x11"))))))

(define-public crate-offscreen_gl_context-0.8.5 (c (n "offscreen_gl_context") (v "0.8.5") (d (list (d (n "cgl") (r "^0.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.3.0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.11") (d #t) (k 0)) (d (n "gdi32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "gleam") (r "^0.4") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"android\"))") (k 0)) (d (n "lazy_static") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libloading") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "user32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "12zn1j1ajdmf0byryp11fv6w01304yqdbzvr7alpm2abkfc65vxl") (f (quote (("test_egl_in_linux" "libloading" "lazy_static") ("osmesa" "osmesa-sys") ("default" "x11"))))))

(define-public crate-offscreen_gl_context-0.8.6 (c (n "offscreen_gl_context") (v "0.8.6") (d (list (d (n "cgl") (r "^0.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.3.0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.11") (d #t) (k 0)) (d (n "gdi32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "gleam") (r "^0.4") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"android\"))") (k 0)) (d (n "lazy_static") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libloading") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "user32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "1cbhlm719ax6dhlbkpfr7509018y9lfbv3g5gfh9fkwrz35d006f") (f (quote (("test_egl_in_linux" "libloading" "lazy_static") ("osmesa" "osmesa-sys") ("default" "x11"))))))

(define-public crate-offscreen_gl_context-0.8.8 (c (n "offscreen_gl_context") (v "0.8.8") (d (list (d (n "cgl") (r "^0.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.3.0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.11") (d #t) (k 0)) (d (n "gdi32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "gleam") (r "^0.4") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"android\"))") (k 0)) (d (n "lazy_static") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libloading") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "user32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "1vmi0vqqbyfsnv6l3jsvz6xayxrrqmzfjjcc0grln8azhzqmsphx") (f (quote (("test_egl_in_linux" "libloading" "lazy_static") ("osmesa" "osmesa-sys") ("default" "x11"))))))

(define-public crate-offscreen_gl_context-0.8.9 (c (n "offscreen_gl_context") (v "0.8.9") (d (list (d (n "cgl") (r "^0.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.3.0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.11") (d #t) (k 0)) (d (n "gdi32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "gleam") (r "^0.4") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"android\"))") (k 0)) (d (n "lazy_static") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.4") (t "cfg(target_os = \"android\")") (k 0)) (d (n "libloading") (r "^0.4") (o #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "user32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "0a6bqv08z9y7iqxmx6ya1rz2qcdnrdchvfmdigjdg7qkg1ryrb9w") (f (quote (("test_egl_in_linux" "libloading" "lazy_static") ("osmesa" "osmesa-sys") ("default" "x11"))))))

(define-public crate-offscreen_gl_context-0.8.10 (c (n "offscreen_gl_context") (v "0.8.10") (d (list (d (n "cgl") (r "^0.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.3.0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r ">= 0.11, < 0.14") (d #t) (k 0)) (d (n "gdi32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "gleam") (r "^0.4") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"android\"))") (k 0)) (d (n "lazy_static") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.4") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libloading") (r "^0.4") (o #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "user32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "02vpi540a6ysj3vgqm77p7fam15zncmn6f2m7kkpjc172pkhi3l4") (f (quote (("test_egl_in_linux" "libloading" "lazy_static") ("osmesa" "osmesa-sys") ("default" "x11"))))))

(define-public crate-offscreen_gl_context-0.9.0 (c (n "offscreen_gl_context") (v "0.9.0") (d (list (d (n "cgl") (r "^0.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.3.0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.14") (d #t) (k 0)) (d (n "gdi32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "gleam") (r "^0.4") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"android\"))") (k 0)) (d (n "lazy_static") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.4") (t "cfg(target_os = \"android\")") (k 0)) (d (n "libloading") (r "^0.4") (o #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "user32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "0138ww8ji1c98hdnjpvb09xhbw7ylf0qnyz0jqf58s3sp3p1yaqg") (f (quote (("test_egl_in_linux" "libloading" "lazy_static") ("osmesa" "osmesa-sys") ("default" "x11"))))))

(define-public crate-offscreen_gl_context-0.10.0 (c (n "offscreen_gl_context") (v "0.10.0") (d (list (d (n "cgl") (r "^0.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.3.0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.14") (d #t) (k 0)) (d (n "gdi32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "gleam") (r "^0.4") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"android\"))") (k 0)) (d (n "lazy_static") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.4") (t "cfg(target_os = \"android\")") (k 0)) (d (n "libloading") (r "^0.4") (o #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "user32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "0hznahbazmamkxs43v0yaj1zb3vbas4plgirx3qz8d3r13l80dgv") (f (quote (("test_egl_in_linux" "libloading" "lazy_static") ("osmesa" "osmesa-sys") ("default" "x11"))))))

(define-public crate-offscreen_gl_context-0.11.0 (c (n "offscreen_gl_context") (v "0.11.0") (d (list (d (n "cgl") (r "^0.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.3.0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.15") (d #t) (k 0)) (d (n "gdi32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "gleam") (r "^0.4") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"android\"))") (k 0)) (d (n "lazy_static") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.4") (t "cfg(target_os = \"android\")") (k 0)) (d (n "libloading") (r "^0.4") (o #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "user32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "17094xaxmaxaq0jqp3qpkckcq7h6mywn0y8snhwvzwqsx6y6k166") (f (quote (("test_egl_in_linux" "libloading" "lazy_static") ("osmesa" "osmesa-sys") ("default" "x11"))))))

(define-public crate-offscreen_gl_context-0.11.1 (c (n "offscreen_gl_context") (v "0.11.1") (d (list (d (n "cgl") (r "^0.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.3.0") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.15") (d #t) (k 0)) (d (n "gdi32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "gleam") (r "^0.4") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"android\"))") (k 0)) (d (n "lazy_static") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.4") (t "cfg(target_os = \"android\")") (k 0)) (d (n "libloading") (r "^0.4") (o #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "user32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "0q896vrhkq5l3hji5d4l648vp49aa4x3w3kx2v73z4lfv38l0ywd") (f (quote (("test_egl_in_linux" "libloading" "lazy_static") ("osmesa" "osmesa-sys") ("default" "x11"))))))

(define-public crate-offscreen_gl_context-0.11.2 (c (n "offscreen_gl_context") (v "0.11.2") (d (list (d (n "cgl") (r "^0.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.4") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.15") (d #t) (k 0)) (d (n "gdi32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "gleam") (r "^0.4") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"android\"))") (k 0)) (d (n "lazy_static") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.4") (t "cfg(target_os = \"android\")") (k 0)) (d (n "libloading") (r "^0.4") (o #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "user32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "1gg97j2wx0rakqc3z27lpfz7hjqw7yyliw4dixngpqgqi8aif2zf") (f (quote (("test_egl_in_linux" "libloading" "lazy_static") ("osmesa" "osmesa-sys") ("default" "x11"))))))

(define-public crate-offscreen_gl_context-0.12.0 (c (n "offscreen_gl_context") (v "0.12.0") (d (list (d (n "cgl") (r "^0.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.4") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.15") (d #t) (k 0)) (d (n "gdi32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "gleam") (r "^0.4.10") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "lazy_static") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.4") (t "cfg(target_os = \"android\")") (k 0)) (d (n "libloading") (r "^0.4") (t "cfg(target_os = \"ios\")") (k 0)) (d (n "libloading") (r "^0.4") (o #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "user32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"ios\"))))") (k 0)))) (h "1y84hhfnaync58xnx50my682mmfyszciaahy9zb69ihk0lfcq492") (f (quote (("test_egl_in_linux" "libloading" "lazy_static") ("osmesa" "osmesa-sys") ("default" "x11"))))))

(define-public crate-offscreen_gl_context-0.12.1 (c (n "offscreen_gl_context") (v "0.12.1") (d (list (d (n "cgl") (r "^0.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.4") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.15") (d #t) (k 0)) (d (n "gdi32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gl_generator") (r "^0.5") (d #t) (k 1)) (d (n "gleam") (r "^0.4.10") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "lazy_static") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.4") (t "cfg(target_os = \"android\")") (k 0)) (d (n "libloading") (r "^0.4") (t "cfg(target_os = \"ios\")") (k 0)) (d (n "libloading") (r "^0.4") (o #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "user32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"ios\"))))") (k 0)))) (h "1v64kw6q3aw014q9qsxpg4sgpfi6w3cq3n2ab1vs80hp8zy96kd3") (f (quote (("test_egl_in_linux" "libloading" "lazy_static") ("osmesa" "osmesa-sys") ("default" "x11"))))))

(define-public crate-offscreen_gl_context-0.13.0 (c (n "offscreen_gl_context") (v "0.13.0") (d (list (d (n "cgl") (r "^0.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.4") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.15") (d #t) (k 0)) (d (n "gdi32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gl_generator") (r "^0.6") (d #t) (k 1)) (d (n "gleam") (r "^0.4.10") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "lazy_static") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.4") (t "cfg(target_os = \"android\")") (k 0)) (d (n "libloading") (r "^0.4") (t "cfg(target_os = \"ios\")") (k 0)) (d (n "libloading") (r "^0.4") (o #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "user32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"ios\"))))") (k 0)))) (h "1zsiz1swri6a41w4iphg9gwrr5l79jhzdxaf4iia6ydp9h68ns4v") (f (quote (("test_egl_in_linux" "libloading" "lazy_static") ("osmesa" "osmesa-sys") ("default" "x11"))))))

(define-public crate-offscreen_gl_context-0.13.1 (c (n "offscreen_gl_context") (v "0.13.1") (d (list (d (n "cgl") (r "^0.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.4") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.15") (d #t) (k 0)) (d (n "gdi32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gl_generator") (r "^0.6") (d #t) (k 1)) (d (n "gleam") (r "^0.4.10") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.4") (t "cfg(target_os = \"android\")") (k 0)) (d (n "libloading") (r "^0.4") (t "cfg(target_os = \"ios\")") (k 0)) (d (n "libloading") (r "^0.4") (o #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "user32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"ios\"))))") (k 0)))) (h "0p8g2wkjwqwgw3cfp2913sp9rz6daipwl20f97g73nb7aw9i8j7f") (f (quote (("test_egl_in_linux" "libloading" "lazy_static") ("osmesa" "osmesa-sys") ("default" "x11"))))))

(define-public crate-offscreen_gl_context-0.14.0 (c (n "offscreen_gl_context") (v "0.14.0") (d (list (d (n "cgl") (r "^0.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.4") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.16") (d #t) (k 0)) (d (n "gdi32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "gl_generator") (r "^0.6") (d #t) (k 1)) (d (n "gleam") (r "^0.4.10") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.4") (t "cfg(target_os = \"android\")") (k 0)) (d (n "libloading") (r "^0.4") (t "cfg(target_os = \"ios\")") (k 0)) (d (n "libloading") (r "^0.4") (o #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "user32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"ios\"))))") (k 0)))) (h "1ibg64xxqm3jf8n3pjlz848q472gxh3sljmi74m4rm0fwv19jscs") (f (quote (("test_egl_in_linux" "libloading" "lazy_static") ("osmesa" "osmesa-sys") ("default" "x11"))))))

(define-public crate-offscreen_gl_context-0.14.1 (c (n "offscreen_gl_context") (v "0.14.1") (d (list (d (n "cgl") (r "^0.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.4") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.16") (d #t) (k 0)) (d (n "gl_generator") (r "^0.6") (d #t) (k 1)) (d (n "gleam") (r "^0.4.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.4") (t "cfg(target_os = \"android\")") (k 0)) (d (n "libloading") (r "^0.4") (t "cfg(target_os = \"ios\")") (k 0)) (d (n "libloading") (r "^0.4") (o #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("wingdi" "winuser" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"ios\"))))") (k 0)))) (h "1yz6w3vif4l53n1my3nj0gmbznh7cndardr1mm1ip9n47rna1awn") (f (quote (("test_egl_in_linux" "libloading" "lazy_static") ("osmesa" "osmesa-sys") ("default" "x11"))))))

(define-public crate-offscreen_gl_context-0.14.2 (c (n "offscreen_gl_context") (v "0.14.2") (d (list (d (n "cgl") (r "^0.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.4") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.16") (d #t) (k 0)) (d (n "gl_generator") (r "^0.8") (d #t) (k 1)) (d (n "gleam") (r "^0.4.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.4") (t "cfg(target_os = \"android\")") (k 0)) (d (n "libloading") (r "^0.4") (t "cfg(target_os = \"ios\")") (k 0)) (d (n "libloading") (r "^0.4") (o #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("wingdi" "winuser" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"ios\"))))") (k 0)))) (h "041z2wwlc3ckkdqi8ssywzrs74r8a3zhb86ij32x344159lvms35") (f (quote (("test_egl_in_linux" "libloading" "lazy_static") ("osmesa" "osmesa-sys") ("default" "x11"))))))

(define-public crate-offscreen_gl_context-0.14.3 (c (n "offscreen_gl_context") (v "0.14.3") (d (list (d (n "cgl") (r "^0.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.5") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.16") (d #t) (k 0)) (d (n "gl_generator") (r "^0.8") (d #t) (k 1)) (d (n "gleam") (r "^0.4.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.4") (t "cfg(target_os = \"android\")") (k 0)) (d (n "libloading") (r "^0.4") (t "cfg(target_os = \"ios\")") (k 0)) (d (n "libloading") (r "^0.4") (o #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("wingdi" "winuser" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"ios\"))))") (k 0)))) (h "04z9npb1z21snnba6288j61vi2rv6gv2riwlmxk22vzzkxmrrdpf") (f (quote (("test_egl_in_linux" "libloading" "lazy_static") ("osmesa" "osmesa-sys") ("default" "x11"))))))

(define-public crate-offscreen_gl_context-0.14.4 (c (n "offscreen_gl_context") (v "0.14.4") (d (list (d (n "cgl") (r "^0.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.5") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.16") (d #t) (k 0)) (d (n "gl_generator") (r "^0.9") (d #t) (k 1)) (d (n "gleam") (r "^0.4.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.4") (t "cfg(target_os = \"android\")") (k 0)) (d (n "libloading") (r "^0.4") (t "cfg(target_os = \"ios\")") (k 0)) (d (n "libloading") (r "^0.4") (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("wingdi" "winuser" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"ios\"))))") (k 0)))) (h "0c3vas3cl5bjd6mi0rl3jy4khgcxdxswj66agbk0nybfxaj471l1") (f (quote (("test_egl_in_linux" "libloading" "lazy_static") ("osmesa" "osmesa-sys") ("default" "x11"))))))

(define-public crate-offscreen_gl_context-0.15.0 (c (n "offscreen_gl_context") (v "0.15.0") (d (list (d (n "cgl") (r "^0.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.5") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.17") (d #t) (k 0)) (d (n "gl_generator") (r "^0.9") (d #t) (k 1)) (d (n "gleam") (r "^0.4.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.4") (t "cfg(target_os = \"android\")") (k 0)) (d (n "libloading") (r "^0.4") (t "cfg(target_os = \"ios\")") (k 0)) (d (n "libloading") (r "^0.4") (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("wingdi" "winuser" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"ios\"))))") (k 0)))) (h "1kmb0nqrjnibqmbzm05rqdv8hgc9h2c3kzccfjgnmny6sd2qasgp") (f (quote (("test_egl_in_linux" "libloading" "lazy_static") ("osmesa" "osmesa-sys") ("default" "x11"))))))

(define-public crate-offscreen_gl_context-0.15.1 (c (n "offscreen_gl_context") (v "0.15.1") (d (list (d (n "cgl") (r "^0.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.5") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.17") (d #t) (k 0)) (d (n "gl_generator") (r "^0.9") (d #t) (k 1)) (d (n "gleam") (r "^0.4.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.5") (t "cfg(target_os = \"android\")") (k 0)) (d (n "libloading") (r "^0.5") (t "cfg(target_os = \"ios\")") (k 0)) (d (n "libloading") (r "^0.5") (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("wingdi" "winuser" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"ios\"))))") (k 0)))) (h "0ski2mr0rbl003cq96mkf4xx4k6ydf7r706vmnq0lxn5x2sarnmh") (f (quote (("test_egl_in_linux" "libloading" "lazy_static") ("osmesa" "osmesa-sys") ("default" "x11"))))))

(define-public crate-offscreen_gl_context-0.16.0 (c (n "offscreen_gl_context") (v "0.16.0") (d (list (d (n "cgl") (r "^0.2.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.5") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.17") (d #t) (k 0)) (d (n "gl_generator") (r "^0.9") (d #t) (k 1)) (d (n "gleam") (r "^0.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.5") (t "cfg(target_os = \"android\")") (k 0)) (d (n "libloading") (r "^0.5") (t "cfg(target_os = \"ios\")") (k 0)) (d (n "libloading") (r "^0.5") (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("wingdi" "winuser" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"ios\"))))") (k 0)))) (h "0i05pcdabbgdjdwvaxr6x8s8qicskrg8pdkicyppr7nxfj9vxr44") (f (quote (("test_egl_in_linux" "libloading" "lazy_static") ("osmesa" "osmesa-sys") ("default" "x11"))))))

(define-public crate-offscreen_gl_context-0.17.0 (c (n "offscreen_gl_context") (v "0.17.0") (d (list (d (n "cgl") (r "^0.2.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.5") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.17") (d #t) (k 0)) (d (n "gl_generator") (r "^0.9") (d #t) (k 1)) (d (n "gleam") (r "^0.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.5") (t "cfg(target_os = \"android\")") (k 0)) (d (n "libloading") (r "^0.5") (t "cfg(target_os = \"ios\")") (k 0)) (d (n "libloading") (r "^0.5") (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("wingdi" "winuser" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"ios\"))))") (k 0)))) (h "0lygnpqwng1cpnmkszymaj5l2sxh50dd9cmc4m28k4yn6ls4cssf") (f (quote (("test_egl_in_linux" "libloading" "lazy_static") ("osmesa" "osmesa-sys") ("default" "x11"))))))

(define-public crate-offscreen_gl_context-0.18.0 (c (n "offscreen_gl_context") (v "0.18.0") (d (list (d (n "cgl") (r "^0.2.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.17") (d #t) (k 0)) (d (n "gl_generator") (r "^0.9") (d #t) (k 1)) (d (n "gleam") (r "^0.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.5") (t "cfg(target_os = \"android\")") (k 0)) (d (n "libloading") (r "^0.5") (t "cfg(target_os = \"ios\")") (k 0)) (d (n "libloading") (r "^0.5") (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("wingdi" "winuser" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"ios\"))))") (k 0)))) (h "0qav8j3rzbnpcjw0dka25c5g52661xd0h91j3asg6dni0n26q3rp") (f (quote (("test_egl_in_linux" "libloading" "lazy_static") ("osmesa" "osmesa-sys") ("default" "x11"))))))

(define-public crate-offscreen_gl_context-0.19.0 (c (n "offscreen_gl_context") (v "0.19.0") (d (list (d (n "cgl") (r "^0.2.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.18") (d #t) (k 0)) (d (n "gl_generator") (r "^0.9") (d #t) (k 1)) (d (n "gleam") (r "^0.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.5") (t "cfg(target_os = \"android\")") (k 0)) (d (n "libloading") (r "^0.5") (t "cfg(target_os = \"ios\")") (k 0)) (d (n "libloading") (r "^0.5") (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("wingdi" "winuser" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"ios\"))))") (k 0)))) (h "1y9a0wm2i82v9brga532589gq35g786m7qd4yf5knpjmp76c36k3") (f (quote (("test_egl_in_linux" "libloading" "lazy_static") ("osmesa" "osmesa-sys") ("default" "x11"))))))

(define-public crate-offscreen_gl_context-0.20.0 (c (n "offscreen_gl_context") (v "0.20.0") (d (list (d (n "cgl") (r "^0.2.3") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.18") (d #t) (k 0)) (d (n "gl_generator") (r "^0.9") (d #t) (k 1)) (d (n "gleam") (r "^0.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.5") (t "cfg(target_os = \"android\")") (k 0)) (d (n "libloading") (r "^0.5") (t "cfg(target_os = \"ios\")") (k 0)) (d (n "libloading") (r "^0.5") (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("wingdi" "winuser" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"ios\"))))") (k 0)))) (h "1yfnqds3ip5ilvgcpl9dbyq499q251wi5by3y4fb9hl07jqsyckb") (f (quote (("test_egl_in_linux" "libloading" "lazy_static") ("osmesa" "osmesa-sys") ("default" "x11"))))))

(define-public crate-offscreen_gl_context-0.21.0 (c (n "offscreen_gl_context") (v "0.21.0") (d (list (d (n "cgl") (r "^0.2.3") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.19") (d #t) (k 0)) (d (n "gl_generator") (r "^0.9") (d #t) (k 1)) (d (n "gleam") (r "^0.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.5") (t "cfg(target_os = \"android\")") (k 0)) (d (n "libloading") (r "^0.5") (t "cfg(target_os = \"ios\")") (k 0)) (d (n "libloading") (r "^0.5") (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("wingdi" "winuser" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"ios\"))))") (k 0)))) (h "0g6v09n95ydljsbxk0bg7kbfgwg3zvzbcdf8zrf4k5cc7fgf7wlm") (f (quote (("test_egl_in_linux" "libloading" "lazy_static") ("osmesa" "osmesa-sys") ("default" "x11"))))))

(define-public crate-offscreen_gl_context-0.21.1 (c (n "offscreen_gl_context") (v "0.21.1") (d (list (d (n "cgl") (r "^0.2.3") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.19") (d #t) (k 0)) (d (n "gl_generator") (r "^0.10") (d #t) (k 1)) (d (n "gleam") (r "^0.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.5") (t "cfg(target_os = \"android\")") (k 0)) (d (n "libloading") (r "^0.5") (t "cfg(target_os = \"ios\")") (k 0)) (d (n "libloading") (r "^0.5") (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("wingdi" "winuser" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"ios\"))))") (k 0)))) (h "074ssqrs5szlj6b81l4g9iw067f0nmwq04i3ysjj4acn701wk1jy") (f (quote (("test_egl_in_linux" "libloading" "lazy_static") ("osmesa" "osmesa-sys") ("default" "x11"))))))

(define-public crate-offscreen_gl_context-0.22.0 (c (n "offscreen_gl_context") (v "0.22.0") (d (list (d (n "cgl") (r "^0.2.3") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.19") (d #t) (k 0)) (d (n "gl_generator") (r "^0.10") (d #t) (k 1)) (d (n "gleam") (r "^0.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.5") (t "cfg(target_os = \"android\")") (k 0)) (d (n "libloading") (r "^0.5") (t "cfg(target_os = \"ios\")") (k 0)) (d (n "libloading") (r "^0.5") (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("wingdi" "winuser" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"ios\"))))") (k 0)))) (h "1mdgxibcrzy1jiig137v3jjjbzrwg337mzyslx07qqsi4wmaqh9f") (f (quote (("test_egl_in_linux" "libloading" "lazy_static") ("osmesa" "osmesa-sys") ("default" "x11"))))))

(define-public crate-offscreen_gl_context-0.22.1 (c (n "offscreen_gl_context") (v "0.22.1") (d (list (d (n "cgl") (r "^0.2.3") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.19") (d #t) (k 0)) (d (n "gl_generator") (r "^0.11") (d #t) (k 1)) (d (n "gleam") (r "^0.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.5") (t "cfg(target_os = \"android\")") (k 0)) (d (n "libloading") (r "^0.5") (t "cfg(target_os = \"ios\")") (k 0)) (d (n "libloading") (r "^0.5") (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("wingdi" "winuser" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"ios\"))))") (k 0)))) (h "1rjy8lsix13hwlrg358vr21wpnbmjnj2s55m537hzfbpnwarr19q") (f (quote (("test_egl_in_linux" "libloading" "lazy_static") ("osmesa" "osmesa-sys") ("default" "x11"))))))

(define-public crate-offscreen_gl_context-0.22.2 (c (n "offscreen_gl_context") (v "0.22.2") (d (list (d (n "cgl") (r "^0.2.3") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.19") (d #t) (k 0)) (d (n "gl_generator") (r "^0.11") (d #t) (k 1)) (d (n "gleam") (r "^0.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.5") (t "cfg(any(target_os = \"android\", target_os = \"windows\"))") (k 0)) (d (n "libloading") (r "^0.5") (t "cfg(target_os = \"ios\")") (k 0)) (d (n "libloading") (r "^0.5") (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mozangle") (r "^0.2") (f (quote ("egl"))) (d #t) (t "cfg(target_os = \"windows\")") (k 2)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("wingdi" "winuser" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"ios\"))))") (k 0)))) (h "0vw86ysv4parqrzh020iw968ihm336b5zi9s4x24j8av079h8sdc") (f (quote (("test_egl_in_linux" "libloading" "lazy_static") ("osmesa" "osmesa-sys") ("no_wgl") ("default" "x11"))))))

(define-public crate-offscreen_gl_context-0.22.3 (c (n "offscreen_gl_context") (v "0.22.3") (d (list (d (n "cgl") (r "^0.2.3") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.19") (d #t) (k 0)) (d (n "gl_generator") (r "^0.11") (d #t) (k 1)) (d (n "gleam") (r "^0.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.5") (t "cfg(any(target_os = \"android\", target_os = \"windows\"))") (k 0)) (d (n "libloading") (r "^0.5") (t "cfg(target_os = \"ios\")") (k 0)) (d (n "libloading") (r "^0.5") (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mozangle") (r "^0.2") (f (quote ("egl"))) (d #t) (t "cfg(target_os = \"windows\")") (k 2)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("wingdi" "winuser" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"ios\"))))") (k 0)))) (h "14x68kb84n5agc4vaw9cjvws3iksw1j68aqz1xav21sdbjsr20q7") (f (quote (("test_egl_in_linux" "libloading" "lazy_static") ("osmesa" "osmesa-sys") ("no_wgl") ("default" "x11"))))))

(define-public crate-offscreen_gl_context-0.22.4 (c (n "offscreen_gl_context") (v "0.22.4") (d (list (d (n "cgl") (r "^0.2.3") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.19") (d #t) (k 0)) (d (n "gl_generator") (r "^0.11") (d #t) (k 1)) (d (n "gleam") (r "^0.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.5") (t "cfg(any(target_os = \"android\", target_os = \"windows\"))") (k 0)) (d (n "libloading") (r "^0.5") (t "cfg(target_os = \"ios\")") (k 0)) (d (n "libloading") (r "^0.5") (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mozangle") (r "^0.2") (f (quote ("egl"))) (d #t) (t "cfg(target_os = \"windows\")") (k 2)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("wingdi" "winuser" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"ios\"))))") (k 0)))) (h "1awwzr4i5dh05isww9c5fxixg5ckj9m868ai59krjhpmicy94k0m") (f (quote (("test_egl_in_linux" "libloading" "lazy_static") ("osmesa" "osmesa-sys") ("no_wgl") ("default" "x11"))))))

(define-public crate-offscreen_gl_context-0.23.0 (c (n "offscreen_gl_context") (v "0.23.0") (d (list (d (n "cgl") (r "^0.2.3") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.20") (d #t) (k 0)) (d (n "gl_generator") (r "^0.11") (d #t) (k 1)) (d (n "gleam") (r "^0.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.5") (t "cfg(any(target_os = \"android\", target_os = \"windows\"))") (k 0)) (d (n "libloading") (r "^0.5") (t "cfg(target_os = \"ios\")") (k 0)) (d (n "libloading") (r "^0.5") (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mozangle") (r "^0.2") (f (quote ("egl"))) (d #t) (t "cfg(target_os = \"windows\")") (k 2)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("wingdi" "winuser" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"ios\"))))") (k 0)))) (h "1j2bm0y9k9vhwphdls461jfdaca86rxnjczw3dr72ymg8zs1sswv") (f (quote (("test_egl_in_linux" "libloading" "lazy_static") ("osmesa" "osmesa-sys") ("no_wgl") ("default" "x11"))))))

(define-public crate-offscreen_gl_context-0.24.0 (c (n "offscreen_gl_context") (v "0.24.0") (d (list (d (n "cgl") (r "^0.3") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.20") (d #t) (k 0)) (d (n "gl_generator") (r "^0.13") (d #t) (k 1)) (d (n "gleam") (r "^0.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.5") (t "cfg(any(target_os = \"android\", target_os = \"windows\"))") (k 0)) (d (n "libloading") (r "^0.5") (t "cfg(target_os = \"ios\")") (k 0)) (d (n "libloading") (r "^0.5") (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mozangle") (r "^0.2") (f (quote ("egl"))) (d #t) (t "cfg(target_os = \"windows\")") (k 2)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("wingdi" "winuser" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"ios\"))))") (k 0)))) (h "18n7d9rprnnvw8inzdc4r3iw3hw9szjl818igq838vcnhnvbs89p") (f (quote (("test_egl_in_linux" "libloading" "lazy_static") ("osmesa" "osmesa-sys") ("no_wgl") ("default" "x11"))))))

(define-public crate-offscreen_gl_context-0.25.0 (c (n "offscreen_gl_context") (v "0.25.0") (d (list (d (n "cgl") (r "^0.3") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.20") (d #t) (k 0)) (d (n "gl_generator") (r "^0.13") (d #t) (k 1)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.5") (t "cfg(any(target_os = \"android\", target_os = \"windows\"))") (k 0)) (d (n "libloading") (r "^0.5") (t "cfg(target_os = \"ios\")") (k 0)) (d (n "libloading") (r "^0.5") (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mozangle") (r "^0.2") (f (quote ("egl"))) (d #t) (t "cfg(target_os = \"windows\")") (k 2)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sparkle") (r "^0.1.3") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("wingdi" "winuser" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"ios\"))))") (k 0)))) (h "1psy33l3bn9gzzmni7krhjnv8iihnzv2wx0a515b3a1xdfxw99mk") (f (quote (("test_egl_in_linux" "libloading" "lazy_static") ("osmesa" "osmesa-sys") ("no_wgl") ("default" "x11"))))))

(define-public crate-offscreen_gl_context-0.25.1 (c (n "offscreen_gl_context") (v "0.25.1") (d (list (d (n "cgl") (r "^0.3") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.20") (d #t) (k 0)) (d (n "gl_generator") (r "^0.13") (d #t) (k 1)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"windows\", target_os = \"android\", target_os = \"ios\"))") (k 0)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "libloading") (r "^0.5") (t "cfg(any(target_os = \"android\", target_os = \"windows\"))") (k 0)) (d (n "libloading") (r "^0.5") (t "cfg(target_os = \"ios\")") (k 0)) (d (n "libloading") (r "^0.5") (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mozangle") (r "^0.2") (f (quote ("egl"))) (d #t) (t "cfg(target_os = \"windows\")") (k 2)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sparkle") (r "^0.1.3") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("wingdi" "winuser" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"ios\"))))") (k 0)))) (h "0szlc26arfxrs1szkwkz9ydylp4xhx1f3m2jdry0y7hl7xdg4kcg") (f (quote (("test_egl_in_linux" "libloading" "lazy_static") ("osmesa" "osmesa-sys") ("no_wgl") ("default" "x11"))))))

