(define-module (crates-io va pc vapcore-miner) #:use-module (crates-io))

(define-public crate-vapcore-miner-1.12.0 (c (n "vapcore-miner") (v "1.12.0") (d (list (d (n "ansi_term") (r "^0.11") (d #t) (k 0)) (d (n "common-types") (r "^0.1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.5") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "price-info") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "rustc-hex") (r "^1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tetsy-crypto") (r "^0.4.2") (f (quote ("publickey"))) (d #t) (k 2)) (d (n "tetsy-fetch") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "tetsy-keccak-hash") (r "^0.4.0") (d #t) (k 0)) (d (n "tetsy-registrar") (r "^0.0.1") (d #t) (k 0)) (d (n "tetsy-rlp") (r "^0.4.5") (d #t) (k 0)) (d (n "tetsy-runtime") (r "^0.1.0") (d #t) (k 0)) (d (n "tetsy-util-mem") (r "^0.3.0") (d #t) (k 0)) (d (n "trace-time") (r "^0.1") (d #t) (k 0)) (d (n "transaction-pool") (r "^2.0.1") (d #t) (k 0)) (d (n "url") (r "^2") (o #t) (d #t) (k 0)) (d (n "vapabi") (r "^9.0.1") (d #t) (k 0)) (d (n "vapabi-contract") (r "^9.0.0") (d #t) (k 0)) (d (n "vapabi-derive") (r "^9.0.1") (d #t) (k 0)) (d (n "vapash") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "vapcore-call-contract") (r "^0.1.0") (d #t) (k 0)) (d (n "vapory-types") (r "^0.8.0") (d #t) (k 0)))) (h "0ps4gc4kmq4bny7whf1g48zf6621v9r5y6b7mw3dlaj5p3llkyj6") (f (quote (("work-notify" "vapash" "tetsy-fetch" "hyper" "url"))))))

