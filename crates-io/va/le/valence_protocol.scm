(define-module (crates-io va le valence_protocol) #:use-module (crates-io))

(define-public crate-valence_protocol-0.0.1 (c (n "valence_protocol") (v "0.0.1") (h "11349wvcby7al7g7s4f0f7i19gy7649cydgxrf165v2ixn0cih3y")))

(define-public crate-valence_protocol-0.2.0-alpha.1+mc.1.20.1 (c (n "valence_protocol") (v "0.2.0-alpha.1+mc.1.20.1") (d (list (d (n "aes") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.70") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bevy_ecs") (r "^0.11") (f (quote ("multi-threaded"))) (k 0)) (d (n "bitfield-struct") (r "^0.3.1") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "cfb8") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.24") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1.3.1") (d #t) (k 0)) (d (n "valence_generated") (r "^0.2.0-alpha.1") (d #t) (k 0)) (d (n "valence_ident") (r "^0.2.0-alpha.1") (d #t) (k 0)) (d (n "valence_math") (r "^0.2.0-alpha.1") (d #t) (k 0)) (d (n "valence_nbt") (r "^0.6.1") (f (quote ("uuid" "binary"))) (d #t) (k 0)) (d (n "valence_protocol_macros") (r "^0.2.0-alpha.1") (d #t) (k 0)) (d (n "valence_text") (r "^0.2.0-alpha.1") (d #t) (k 0)))) (h "0pjw1w4sy3ybvw9ncp0j8yh7h61icznnbj8dg97qd3cpmzdjyw6v") (s 2) (e (quote (("encryption" "dep:aes" "dep:cfb8") ("compression" "dep:flate2"))))))

