(define-module (crates-io va le valence_entity) #:use-module (crates-io))

(define-public crate-valence_entity-0.2.0-alpha.1+mc.1.20.1 (c (n "valence_entity") (v "0.2.0-alpha.1+mc.1.20.1") (d (list (d (n "anyhow") (r "^1.0.70") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.70") (f (quote ("backtrace"))) (d #t) (k 1)) (d (n "bevy_app") (r "^0.11") (k 0)) (d (n "bevy_ecs") (r "^0.11") (f (quote ("multi-threaded"))) (k 0)) (d (n "bitfield-struct") (r "^0.3.1") (d #t) (k 0)) (d (n "heck") (r "^0.4.0") (d #t) (k 1)) (d (n "paste") (r "^1.0.11") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.56") (d #t) (k 1)) (d (n "quote") (r "^1.0.26") (d #t) (k 1)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (d #t) (k 1)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 1)) (d (n "syn") (r "^2.0.15") (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "uuid") (r "^1.3.1") (d #t) (k 0)) (d (n "valence_build_utils") (r "^0.2.0-alpha.1") (d #t) (k 1)) (d (n "valence_math") (r "^0.2.0-alpha.1") (d #t) (k 0)) (d (n "valence_nbt") (r "^0.6.1") (f (quote ("uuid"))) (d #t) (k 0)) (d (n "valence_protocol") (r "^0.2.0-alpha.1") (d #t) (k 0)) (d (n "valence_server_common") (r "^0.2.0-alpha.1") (d #t) (k 0)))) (h "1fgn223sdcsdqpc247hxx1m50yhp0z0bwdks18zl2wnpy49fw8vn")))

