(define-module (crates-io va de vade-evan-substrate) #:use-module (crates-io))

(define-public crate-vade-evan-substrate-0.1.3 (c (n "vade-evan-substrate") (v "0.1.3") (d (list (d (n "async-trait") (r "^0.1.31") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.18") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.11") (f (quote ("wasm-bindgen" "clock" "js-sys"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (f (quote ("color"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "instant") (r "^0.1") (f (quote ("inaccurate" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "parity_scale_codec") (r "^1.3.0") (d #t) (k 0) (p "parity-scale-codec")) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.3.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("json" "default-tls"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.114") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0.53") (f (quote ("preserve_order" "raw_value"))) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "sha3") (r "^0.8.2") (d #t) (k 0)) (d (n "sp-core") (r "^2.0.0-rc4") (k 0)) (d (n "sp-runtime-interface") (r "^2.0.0-rc4") (f (quote ("disable_target_static_assertions"))) (k 0)) (d (n "sp-std") (r "^2.0.0-rc4") (k 0)) (d (n "sp-storage") (r "^2.0.0-rc4") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "=1.7.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "twox-hash") (r "^1.5.0") (d #t) (k 0)) (d (n "vade") (r "^0.1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.12") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.39") (f (quote ("WebSocket" "Response" "EventTarget" "Event" "MessageEvent" "ErrorEvent" "console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ws") (r "^0.9.1") (f (quote ("ssl"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1bff90ss84lbrc2jmz0sj032g3dj4mqflazzfhvr1j7kdsyc3nlj")))

(define-public crate-vade-evan-substrate-0.2.0 (c (n "vade-evan-substrate") (v "0.2.0") (d (list (d (n "async-trait") (r "^0.1.31") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.18") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.11") (f (quote ("wasm-bindgen" "clock" "js-sys"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (f (quote ("color"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "instant") (r "^0.1") (f (quote ("inaccurate" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "parity_scale_codec") (r "^1.3.0") (d #t) (k 0) (p "parity-scale-codec")) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.3.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (f (quote ("json" "default-tls"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.114") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0.53") (f (quote ("preserve_order" "raw_value"))) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "sha3") (r "^0.8.2") (d #t) (k 0)) (d (n "sp-core") (r "^2.0.0-rc4") (k 0)) (d (n "sp-runtime-interface") (r "^2.0.0-rc4") (f (quote ("disable_target_static_assertions"))) (k 0)) (d (n "sp-std") (r "^2.0.0-rc4") (k 0)) (d (n "sp-storage") (r "^2.0.0-rc4") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "=1.7.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "twox-hash") (r "^1.5.0") (d #t) (k 0)) (d (n "vade") (r "^0.1.0") (d #t) (k 0)) (d (n "vade-signer") (r "^0.0.1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.12") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3.39") (f (quote ("WebSocket" "Response" "EventTarget" "Event" "MessageEvent" "ErrorEvent" "console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ws") (r "^0.9.1") (f (quote ("ssl"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0wspamrp3phk6khx1ayqk7zpqyignwax5am01b5sinnvd17vii2c")))

