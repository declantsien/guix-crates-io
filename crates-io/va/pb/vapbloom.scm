(define-module (crates-io va pb vapbloom) #:use-module (crates-io))

(define-public crate-vapbloom-0.11.0 (c (n "vapbloom") (v "0.11.0") (d (list (d (n "criterion") (r "^0.3.0") (d #t) (k 2)) (d (n "crunchy") (r "^0.2.2") (f (quote ("limit_256"))) (k 0)) (d (n "hex-literal") (r "^0.3.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.0") (d #t) (k 2)) (d (n "tetsy-fixed-hash") (r "^0.7") (k 0)) (d (n "tetsy-impl-codec") (r "^0.5.0") (o #t) (k 0)) (d (n "tetsy-impl-rlp") (r "^0.3") (o #t) (k 0)) (d (n "tetsy-impl-serde") (r "^0.3") (o #t) (k 0)) (d (n "tiny-keccak") (r "^2.0") (f (quote ("keccak"))) (d #t) (k 0)))) (h "1wx4ix30s3zx0s71axl4db6kb3wijqrd9fcm95bmikrdz5icsykk") (f (quote (("tetsy-rlp" "tetsy-impl-rlp") ("std" "tetsy-fixed-hash/std" "crunchy/std") ("serialize" "tetsy-impl-serde") ("rustc-hex" "tetsy-fixed-hash/rustc-hex") ("default" "std" "tetsy-rlp" "serialize" "rustc-hex") ("codec" "tetsy-impl-codec") ("arbitrary" "tetsy-fixed-hash/arbitrary"))))))

(define-public crate-vapbloom-0.8.0 (c (n "vapbloom") (v "0.8.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crunchy") (r "^0.2") (f (quote ("limit_256"))) (k 0)) (d (n "hex-literal") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "tetsy-fixed-hash") (r "^0.5") (k 0)) (d (n "tetsy-impl-rlp") (r "^0.2") (k 0)) (d (n "tetsy-impl-serde") (r "^0.2") (o #t) (k 0)) (d (n "tiny-keccak") (r "^1.5") (d #t) (k 0)))) (h "14a03qjwim44ivdjpy1vjvifv79kx34c37mck3pc1fxz799gap5f") (f (quote (("std" "tetsy-fixed-hash/std" "crunchy/std") ("serialize" "std" "tetsy-impl-serde") ("rustc-hex" "tetsy-fixed-hash/rustc-hex") ("libc" "tetsy-fixed-hash/libc") ("default" "std" "serialize" "libc" "rustc-hex"))))))

(define-public crate-vapbloom-0.10.0 (c (n "vapbloom") (v "0.10.0") (d (list (d (n "criterion") (r "^0.3.0") (d #t) (k 2)) (d (n "crunchy") (r "^0.2.2") (f (quote ("limit_256"))) (k 0)) (d (n "hex-literal") (r "^0.3.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.0") (d #t) (k 2)) (d (n "tetsy-fixed-hash") (r "^0.7.0-alpha") (k 0)) (d (n "tetsy-impl-codec") (r "^0.4.0") (o #t) (k 0)) (d (n "tetsy-impl-rlp") (r "^0.3.0-alpha") (o #t) (k 0)) (d (n "tetsy-impl-serde") (r "^0.3.0") (o #t) (k 0)) (d (n "tiny-keccak") (r "^2.0") (f (quote ("keccak"))) (d #t) (k 0)))) (h "0l5b69bs7sbqv3vhhf902b6m2xnk2bigp7bqy4szfh44x16dh5w6") (f (quote (("std" "tetsy-fixed-hash/std" "crunchy/std") ("serialize" "std" "tetsy-impl-serde") ("rustc-hex" "tetsy-fixed-hash/rustc-hex") ("rlp" "tetsy-impl-rlp") ("default" "std" "rlp" "serialize" "rustc-hex") ("codec" "tetsy-impl-codec") ("arbitrary" "tetsy-fixed-hash/arbitrary"))))))

(define-public crate-vapbloom-0.11.1 (c (n "vapbloom") (v "0.11.1") (d (list (d (n "criterion") (r "^0.3.0") (d #t) (k 2)) (d (n "crunchy") (r "^0.2.2") (f (quote ("limit_256"))) (k 0)) (d (n "hex-literal") (r "^0.3.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.0") (d #t) (k 2)) (d (n "tetsy-fixed-hash") (r "^0.7.1") (k 0)) (d (n "tetsy-impl-codec") (r "^0.5.1") (o #t) (k 0)) (d (n "tetsy-impl-rlp") (r "^0.3.1") (o #t) (k 0)) (d (n "tetsy-impl-serde") (r "^0.3.2") (o #t) (k 0)) (d (n "tiny-keccak") (r "^2.0") (f (quote ("keccak"))) (d #t) (k 0)))) (h "006l1skxrj253jafcm4q1baa80arj63bl67lzma4yzdmr1kgcgwz") (f (quote (("tetsy-rlp" "tetsy-impl-rlp") ("std" "tetsy-fixed-hash/std" "crunchy/std") ("serialize" "tetsy-impl-serde") ("rustc-hex" "tetsy-fixed-hash/rustc-hex") ("default" "std" "tetsy-rlp" "serialize" "rustc-hex") ("codec" "tetsy-impl-codec") ("arbitrary" "tetsy-fixed-hash/arbitrary"))))))

