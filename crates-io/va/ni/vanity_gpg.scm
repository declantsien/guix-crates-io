(define-module (crates-io va ni vanity_gpg) #:use-module (crates-io))

(define-public crate-vanity_gpg-0.1.0 (c (n "vanity_gpg") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (d #t) (k 0)) (d (n "colored") (r "^1.9") (d #t) (k 0)) (d (n "gpgme") (r "^0.9") (d #t) (k 0)) (d (n "indicatif") (r "^0.14") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)))) (h "1s7z0cb9x9j6ak5z8szz9a0fbgqysrfn74ks2smvg0fnz05lpav0")))

(define-public crate-vanity_gpg-0.2.0 (c (n "vanity_gpg") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 0)) (d (n "colored") (r "^1.9") (d #t) (k 0)) (d (n "indicatif") (r "^0.14") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "sequoia-openpgp") (r "^0.19") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0rlpzcrnq7yk72265jwz8lqsfgv3xlhjndxnygygdrha6n2y7yac")))

(define-public crate-vanity_gpg-0.3.0 (c (n "vanity_gpg") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "indicatif") (r "^0.15") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "mimalloc") (r "^0.1") (k 0)) (d (n "nettle") (r "^7.0") (d #t) (k 0)) (d (n "pgp") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "sequoia-openpgp") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.9") (f (quote ("asm" "compress"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0aymnbn2djdql15mmazraf28sbj73h0qlpp4915s7s9z0gwyqmbk") (f (quote (("sequoia" "sequoia-openpgp") ("rpgp" "pgp" "rand" "chrono" "smallvec" "sha-1") ("default" "sequoia"))))))

(define-public crate-vanity_gpg-0.3.2 (c (n "vanity_gpg") (v "0.3.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "cc") (r "^1.0") (d #t) (k 1)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "clap") (r "^3.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "indicatif") (r "^0.16") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "mimalloc") (r "^0.1") (k 0)) (d (n "nettle") (r "^7.2") (d #t) (k 0)) (d (n "pgp") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "sequoia-openpgp") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "sha-1") (r "^0.10") (f (quote ("asm" "compress"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0b9l4gx9ss9cij0xw7kkl3lrqj5fbxjvpnkqr2agclk4dh7vcf6d") (f (quote (("sequoia" "sequoia-openpgp") ("rpgp" "pgp" "rand" "chrono" "smallvec" "sha-1") ("default" "sequoia"))))))

