(define-module (crates-io va po vaporetto) #:use-module (crates-io))

(define-public crate-vaporetto-0.1.0 (c (n "vaporetto") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "fst") (r "^0.4") (d #t) (k 0)) (d (n "liblinear") (r "^1") (o #t) (d #t) (k 0)))) (h "0wy4xplpr67pp8cjrvdn00rw9dqll2n315bib3f1khhbxycx8f7n") (f (quote (("train" "liblinear") ("multithreading" "crossbeam-channel") ("model-quantize") ("kytea") ("default" "model-quantize"))))))

(define-public crate-vaporetto-0.1.1 (c (n "vaporetto") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "fst") (r "^0.4") (d #t) (k 0)) (d (n "liblinear") (r "^1") (o #t) (d #t) (k 0)))) (h "1anqfzi00snh8pav3ivs2044w71hzz5d30ijz68w4vplh59dbl86") (f (quote (("train" "liblinear") ("multithreading" "crossbeam-channel") ("model-quantize") ("kytea") ("default" "model-quantize"))))))

(define-public crate-vaporetto-0.1.2 (c (n "vaporetto") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "fst") (r "^0.4") (d #t) (k 0)) (d (n "liblinear") (r "^1") (o #t) (d #t) (k 0)))) (h "13xam43w02bk8chi8jchicl6mjvwi9y1fpbhwcy9rxvh1z6avk49") (f (quote (("train" "liblinear") ("multithreading" "crossbeam-channel") ("model-quantize") ("kytea") ("default" "model-quantize"))))))

(define-public crate-vaporetto-0.1.3 (c (n "vaporetto") (v "0.1.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "fst") (r "^0.4") (d #t) (k 0)) (d (n "liblinear") (r "^1") (o #t) (d #t) (k 0)))) (h "0h6j7qsmqgqdy2lw0srvfl46s9fqi1g7wzlcff78i6g1jljf8m8k") (f (quote (("train" "liblinear") ("multithreading" "crossbeam-channel") ("model-quantize") ("kytea") ("default" "model-quantize"))))))

(define-public crate-vaporetto-0.1.4 (c (n "vaporetto") (v "0.1.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "daachorse") (r "^0.1.0") (d #t) (k 0)) (d (n "fst") (r "^0.4") (d #t) (k 0)) (d (n "liblinear") (r "^1") (o #t) (d #t) (k 0)))) (h "0v6l18l86hrdmrv27j4arzpwb9v4x9wlrhb16dxiszif8fmpznxq") (f (quote (("train" "liblinear") ("multithreading" "crossbeam-channel") ("model-quantize") ("kytea") ("default" "model-quantize"))))))

(define-public crate-vaporetto-0.1.5 (c (n "vaporetto") (v "0.1.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "daachorse") (r "^0.1.1") (d #t) (k 0)) (d (n "fst") (r "^0.4") (d #t) (k 0)) (d (n "liblinear") (r "^1") (o #t) (d #t) (k 0)))) (h "0a86swikr05zdrljgy4375a9771kcnrsznj6cx82gymr9zgyb5r6") (f (quote (("train" "liblinear") ("multithreading" "crossbeam-channel") ("model-quantize") ("kytea") ("default" "model-quantize"))))))

(define-public crate-vaporetto-0.1.6 (c (n "vaporetto") (v "0.1.6") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "daachorse") (r "^0.2.0") (d #t) (k 0)) (d (n "fst") (r "^0.4") (d #t) (k 0)) (d (n "liblinear") (r "^1") (o #t) (d #t) (k 0)))) (h "06dfvv187kpbj7i6d1662mx29gpfmqxnpn8v08rafw2s3qs88i4x") (f (quote (("train" "liblinear") ("multithreading" "crossbeam-channel") ("model-quantize") ("kytea") ("default" "model-quantize"))))))

(define-public crate-vaporetto-0.2.0 (c (n "vaporetto") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "daachorse") (r "^0.2.0") (d #t) (k 0)) (d (n "liblinear") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)))) (h "1w0xw9y250dmwdhk7chnk8ab5qj3b1dj3w8m4c8cbbdfh4i7y7vc") (f (quote (("train" "liblinear") ("multithreading" "crossbeam-channel") ("model-quantize") ("kytea" "byteorder") ("default" "model-quantize"))))))

(define-public crate-vaporetto-0.3.0 (c (n "vaporetto") (v "0.3.0") (d (list (d (n "daachorse") (r "^0.4.0") (d #t) (k 0)) (d (n "liblinear") (r "^1") (o #t) (d #t) (k 0)))) (h "1sz6fr8y2qrrp5zfcsv0hrv8d0jzmwpz3ssmmcgadxf4sga254i1") (f (quote (("train" "liblinear") ("portable-simd") ("kytea") ("default"))))))

(define-public crate-vaporetto-0.4.0 (c (n "vaporetto") (v "0.4.0") (d (list (d (n "bincode") (r "^2.0.0-rc.1") (f (quote ("alloc" "derive"))) (k 0)) (d (n "daachorse") (r "^0.4.1") (k 0)) (d (n "liblinear") (r "^1") (o #t) (d #t) (k 0)))) (h "07b0s1w6hrq13kcy25bj71zajnd75bm6l9441vq9civrzyqx1wwd") (f (quote (("train" "std" "liblinear") ("tag-prediction" "bincode/atomic") ("std" "bincode/std") ("portable-simd" "fix-weight-length") ("kytea" "std") ("fix-weight-length") ("default" "std" "cache-type-score" "fix-weight-length" "tag-prediction") ("charwise-daachorse") ("cache-type-score"))))))

(define-public crate-vaporetto-0.5.0 (c (n "vaporetto") (v "0.5.0") (d (list (d (n "bincode") (r "^2.0.0-rc.1") (f (quote ("alloc" "derive"))) (k 0)) (d (n "daachorse") (r "^0.4.1") (k 0)) (d (n "hashbrown") (r "^0.12.1") (d #t) (k 0)) (d (n "liblinear") (r "^1") (o #t) (d #t) (k 0)))) (h "13cqg1i9xb19ndks69npvz6c78d5gcb0jiir4w9yd8dc6ppvk97i") (f (quote (("train" "std" "liblinear") ("tag-prediction" "alloc" "bincode/atomic") ("std" "alloc" "bincode/std") ("portable-simd" "fix-weight-length") ("kytea" "std") ("fix-weight-length" "alloc") ("default" "std" "cache-type-score" "fix-weight-length" "tag-prediction" "charwise-pma") ("charwise-pma" "alloc") ("cache-type-score" "alloc") ("alloc"))))))

(define-public crate-vaporetto-0.5.1 (c (n "vaporetto") (v "0.5.1") (d (list (d (n "bincode") (r "^2.0.0-rc.1") (f (quote ("alloc" "derive"))) (k 0)) (d (n "daachorse") (r "^0.4.3") (k 0)) (d (n "hashbrown") (r "^0.12.1") (d #t) (k 0)) (d (n "liblinear") (r "^1") (o #t) (d #t) (k 0)))) (h "1r8fg878qlmyy9885yggj6zkdjbznhb8s9s6495bchlsqjvza68p") (f (quote (("train" "std" "liblinear") ("tag-prediction" "alloc" "bincode/atomic") ("std" "alloc" "bincode/std") ("portable-simd" "fix-weight-length") ("kytea" "std") ("fix-weight-length" "alloc") ("default" "std" "cache-type-score" "fix-weight-length" "tag-prediction" "charwise-pma") ("charwise-pma" "alloc") ("cache-type-score" "alloc") ("alloc")))) (r "1.58")))

(define-public crate-vaporetto-0.6.0 (c (n "vaporetto") (v "0.6.0") (d (list (d (n "bincode") (r "^2.0.0-rc.1") (f (quote ("alloc" "derive"))) (k 0)) (d (n "daachorse") (r "^1.0.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.12.3") (d #t) (k 0)) (d (n "liblinear") (r "^1") (o #t) (d #t) (k 0)))) (h "0gv4zxg4knvwppvz57ifjiwjhkxfw8bl9hnz4z9mcxs6a9p86qch") (f (quote (("train" "std" "liblinear") ("tag-prediction" "alloc" "bincode/atomic") ("std" "alloc" "bincode/std") ("portable-simd" "fix-weight-length") ("kytea" "std") ("fix-weight-length" "alloc") ("default" "std" "cache-type-score" "fix-weight-length" "tag-prediction" "charwise-pma") ("charwise-pma" "alloc") ("cache-type-score" "alloc") ("alloc")))) (r "1.60")))

(define-public crate-vaporetto-0.6.1 (c (n "vaporetto") (v "0.6.1") (d (list (d (n "bincode") (r "^2.0.0-rc.2") (f (quote ("alloc" "derive"))) (k 0)) (d (n "daachorse") (r "^1.0.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.12.3") (d #t) (k 0)) (d (n "liblinear") (r "^1") (o #t) (d #t) (k 0)))) (h "15lfag1ggs68ll4hkz3qmin7g46g0jpy7k65kzcv52afv9gqaijg") (f (quote (("train" "std" "liblinear") ("tag-prediction" "alloc") ("std" "alloc" "bincode/std") ("portable-simd" "fix-weight-length") ("kytea" "std") ("fix-weight-length" "alloc") ("default" "std" "cache-type-score" "fix-weight-length" "tag-prediction" "charwise-pma") ("charwise-pma" "alloc") ("cache-type-score" "alloc") ("alloc")))) (r "1.60")))

(define-public crate-vaporetto-0.6.2 (c (n "vaporetto") (v "0.6.2") (d (list (d (n "bincode") (r "^2.0.0-rc.2") (f (quote ("alloc" "derive"))) (k 0)) (d (n "daachorse") (r "^1.0.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.2") (d #t) (k 0)) (d (n "liblinear") (r "^1") (o #t) (d #t) (k 0)))) (h "0kqqyfa9fvp9yj5d17kgnb1nvprf24w3m99zmd03q5pliw4m7rpr") (f (quote (("train" "std" "liblinear") ("tag-prediction" "alloc") ("std" "alloc" "bincode/std") ("portable-simd" "fix-weight-length") ("kytea" "std") ("fix-weight-length" "alloc") ("default" "std" "cache-type-score" "fix-weight-length" "tag-prediction" "charwise-pma") ("charwise-pma" "alloc") ("cache-type-score" "alloc") ("alloc")))) (r "1.64")))

(define-public crate-vaporetto-0.6.3 (c (n "vaporetto") (v "0.6.3") (d (list (d (n "bincode") (r "^2.0.0-rc.3") (f (quote ("alloc" "derive"))) (k 0)) (d (n "daachorse") (r "^1.0.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.2") (d #t) (k 0)) (d (n "liblinear") (r "^1") (o #t) (d #t) (k 0)))) (h "05zys08mfs4grsa3zchw1rslqp3yc9ba5kwxzgyjf8f3zwgc86af") (f (quote (("train" "std" "liblinear") ("tag-prediction" "alloc") ("std" "alloc" "bincode/std") ("portable-simd" "fix-weight-length") ("kytea" "std") ("fix-weight-length" "alloc") ("default" "std" "cache-type-score" "fix-weight-length" "tag-prediction" "charwise-pma") ("charwise-pma" "alloc") ("cache-type-score" "alloc") ("alloc")))) (r "1.64")))

