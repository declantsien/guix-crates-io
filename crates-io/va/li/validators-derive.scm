(define-module (crates-io va li validators-derive) #:use-module (crates-io))

(define-public crate-validators-derive-0.21.0 (c (n "validators-derive") (v "0.21.0") (d (list (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "enum-ordinalize") (r "^3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "once_cell") (r "^1.4") (d #t) (k 2)) (d (n "phonenumber") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "regex-dep") (r "^1") (o #t) (d #t) (k 0) (p "regex")) (d (n "syn") (r "^1") (d #t) (k 0)) (d (n "validators") (r "^0.21") (d #t) (k 0)) (d (n "validators-options") (r "^0.21") (d #t) (k 0)))) (h "0qz11sp3pffgw3qyhc6nf5asmjpj5b97zbvhk53cqplivbcycrkp") (f (quote (("uuid" "validators/uuid") ("url" "validators/url") ("unsigned_integer" "validators/unsigned_integer") ("text" "validators/text") ("std" "validators/std") ("signed_integer" "validators/signed_integer") ("serde" "validators/serde") ("semver_req" "validators/semver_req") ("semver" "validators/semver") ("rocket" "validators/rocket") ("regex" "validators/regex" "regex-dep") ("phone" "validators/phone" "std" "phonenumber") ("number" "validators/number") ("mac_address" "validators/mac_address") ("line" "validators/line") ("length" "validators/length") ("json" "validators/json") ("ipv6" "validators/ipv6") ("ipv4" "validators/ipv4") ("ip" "validators/ip") ("http_url" "validators/http_url") ("http_ftp_url" "validators/http_ftp_url") ("host" "validators/host") ("full" "base32" "base32_decoded" "base64" "base64_decoded" "base64_url" "base64_url_decoded" "boolean" "domain" "email" "host" "http_url" "http_ftp_url" "ip" "ipv4" "ipv6" "json" "length" "line" "mac_address" "number" "phone" "regex" "semver" "semver_req" "signed_integer" "text" "unsigned_integer" "url" "uuid") ("email" "validators/email") ("domain" "validators/domain") ("default" "full") ("boolean" "validators/boolean") ("base64_url_decoded" "validators/base64_url_decoded") ("base64_url" "validators/base64_url") ("base64_decoded" "validators/base64_decoded") ("base64" "validators/base64") ("base32_decoded" "validators/base32_decoded") ("base32" "validators/base32"))))))

(define-public crate-validators-derive-0.21.1 (c (n "validators-derive") (v "0.21.1") (d (list (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "enum-ordinalize") (r "^3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "once_cell") (r "^1.4") (d #t) (k 2)) (d (n "phonenumber") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "regex-dep") (r "^1") (o #t) (d #t) (k 0) (p "regex")) (d (n "syn") (r "^1") (d #t) (k 0)) (d (n "validators") (r "^0.21") (d #t) (k 0)) (d (n "validators-options") (r "^0.21") (d #t) (k 0)))) (h "0a4pq83j48rcirlsff6dm5kpap331qy71kdcc0rfnznfrw2k3jdh") (f (quote (("uuid" "validators/uuid") ("url" "validators/url") ("unsigned_integer" "validators/unsigned_integer") ("text" "validators/text") ("std" "validators/std") ("signed_integer" "validators/signed_integer") ("serde" "validators/serde") ("semver_req" "validators/semver_req") ("semver" "validators/semver") ("rocket" "validators/rocket") ("regex" "validators/regex" "regex-dep") ("phone" "validators/phone" "std" "phonenumber") ("number" "validators/number") ("mac_address" "validators/mac_address") ("line" "validators/line") ("length" "validators/length") ("json" "validators/json") ("ipv6" "validators/ipv6") ("ipv4" "validators/ipv4") ("ip" "validators/ip") ("http_url" "validators/http_url") ("http_ftp_url" "validators/http_ftp_url") ("host" "validators/host") ("full" "base32" "base32_decoded" "base64" "base64_decoded" "base64_url" "base64_url_decoded" "boolean" "domain" "email" "host" "http_url" "http_ftp_url" "ip" "ipv4" "ipv6" "json" "length" "line" "mac_address" "number" "phone" "regex" "semver" "semver_req" "signed_integer" "text" "unsigned_integer" "url" "uuid") ("email" "validators/email") ("domain" "validators/domain") ("default" "full") ("boolean" "validators/boolean") ("base64_url_decoded" "validators/base64_url_decoded") ("base64_url" "validators/base64_url") ("base64_decoded" "validators/base64_decoded") ("base64" "validators/base64") ("base32_decoded" "validators/base32_decoded") ("base32" "validators/base32"))))))

(define-public crate-validators-derive-0.21.2 (c (n "validators-derive") (v "0.21.2") (d (list (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "enum-ordinalize") (r "^3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "once_cell") (r "^1.4") (d #t) (k 2)) (d (n "phonenumber") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "regex-dep") (r "^1") (o #t) (d #t) (k 0) (p "regex")) (d (n "syn") (r "^1") (d #t) (k 0)) (d (n "validators") (r "^0.21") (d #t) (k 0)) (d (n "validators-options") (r "^0.21") (d #t) (k 0)))) (h "1hcjb9qdyjfqg369a2q4w6gkdhvkdayzs18r1c9kfcc5939xdqxh") (f (quote (("uuid" "validators/uuid") ("url" "validators/url") ("unsigned_integer" "validators/unsigned_integer") ("text" "validators/text") ("std" "validators/std") ("signed_integer" "validators/signed_integer") ("serde" "validators/serde") ("semver_req" "validators/semver_req") ("semver" "validators/semver") ("rocket" "validators/rocket") ("regex" "validators/regex" "regex-dep") ("phone" "validators/phone" "std" "phonenumber") ("number" "validators/number") ("mac_address" "validators/mac_address") ("line" "validators/line") ("length" "validators/length") ("json" "validators/json") ("ipv6" "validators/ipv6") ("ipv4" "validators/ipv4") ("ip" "validators/ip") ("http_url" "validators/http_url") ("http_ftp_url" "validators/http_ftp_url") ("host" "validators/host") ("full" "base32" "base32_decoded" "base64" "base64_decoded" "base64_url" "base64_url_decoded" "boolean" "domain" "email" "host" "http_url" "http_ftp_url" "ip" "ipv4" "ipv6" "json" "length" "line" "mac_address" "number" "phone" "regex" "semver" "semver_req" "signed_integer" "text" "unsigned_integer" "url" "uuid") ("email" "validators/email") ("domain" "validators/domain") ("default" "full") ("boolean" "validators/boolean") ("base64_url_decoded" "validators/base64_url_decoded") ("base64_url" "validators/base64_url") ("base64_decoded" "validators/base64_decoded") ("base64" "validators/base64") ("base32_decoded" "validators/base32_decoded") ("base32" "validators/base32"))))))

(define-public crate-validators-derive-0.21.3 (c (n "validators-derive") (v "0.21.3") (d (list (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "enum-ordinalize") (r "^3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "once_cell") (r "^1.4") (d #t) (k 2)) (d (n "phonenumber") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "regex-dep") (r "^1") (o #t) (d #t) (k 0) (p "regex")) (d (n "syn") (r "^1") (d #t) (k 0)) (d (n "validators") (r "^0.21") (d #t) (k 0)) (d (n "validators-options") (r "^0.21") (d #t) (k 0)))) (h "130lmsywlfm6nwz1pvaj68irxb4ggm02lbdx9lzd4y7g64awxzk5") (f (quote (("uuid" "validators/uuid") ("url" "validators/url") ("unsigned_integer" "validators/unsigned_integer") ("text" "validators/text") ("std" "validators/std") ("signed_integer" "validators/signed_integer") ("serde" "validators/serde") ("semver_req" "validators/semver_req") ("semver" "validators/semver") ("rocket" "validators/rocket") ("regex" "validators/regex" "regex-dep") ("phone" "validators/phone" "std" "phonenumber") ("number" "validators/number") ("mac_address" "validators/mac_address") ("line" "validators/line") ("length" "validators/length") ("json" "validators/json") ("ipv6" "validators/ipv6") ("ipv4" "validators/ipv4") ("ip" "validators/ip") ("http_url" "validators/http_url") ("http_ftp_url" "validators/http_ftp_url") ("host" "validators/host") ("full" "base32" "base32_decoded" "base64" "base64_decoded" "base64_url" "base64_url_decoded" "boolean" "domain" "email" "host" "http_url" "http_ftp_url" "ip" "ipv4" "ipv6" "json" "length" "line" "mac_address" "number" "phone" "regex" "semver" "semver_req" "signed_integer" "text" "unsigned_integer" "url" "uuid") ("email" "validators/email") ("domain" "validators/domain") ("default" "full") ("boolean" "validators/boolean") ("base64_url_decoded" "validators/base64_url_decoded") ("base64_url" "validators/base64_url") ("base64_decoded" "validators/base64_decoded") ("base64" "validators/base64") ("base32_decoded" "validators/base32_decoded") ("base32" "validators/base32"))))))

(define-public crate-validators-derive-0.21.4 (c (n "validators-derive") (v "0.21.4") (d (list (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "enum-ordinalize") (r "^3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "once_cell") (r "^1.4") (d #t) (k 2)) (d (n "phonenumber") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "regex-dep") (r "^1") (o #t) (d #t) (k 0) (p "regex")) (d (n "syn") (r "^1") (d #t) (k 0)) (d (n "validators") (r "^0.21") (d #t) (k 0)) (d (n "validators-options") (r "^0.21") (d #t) (k 0)))) (h "0r9xyvgdf0dd4952sgscmr78gqy8vif4f4dzpnjrj5rin6v5iymh") (f (quote (("uuid" "validators/uuid") ("url" "validators/url") ("unsigned_integer" "validators/unsigned_integer") ("text" "validators/text") ("std" "validators/std") ("signed_integer" "validators/signed_integer") ("serde" "validators/serde") ("semver_req" "validators/semver_req") ("semver" "validators/semver") ("rocket" "validators/rocket") ("regex" "validators/regex" "regex-dep") ("phone" "validators/phone" "std" "phonenumber") ("number" "validators/number") ("mac_address" "validators/mac_address") ("line" "validators/line") ("length" "validators/length") ("json" "validators/json") ("ipv6" "validators/ipv6") ("ipv4" "validators/ipv4") ("ip" "validators/ip") ("http_url" "validators/http_url") ("http_ftp_url" "validators/http_ftp_url") ("host" "validators/host") ("full" "base32" "base32_decoded" "base64" "base64_decoded" "base64_url" "base64_url_decoded" "boolean" "domain" "email" "host" "http_url" "http_ftp_url" "ip" "ipv4" "ipv6" "json" "length" "line" "mac_address" "number" "phone" "regex" "semver" "semver_req" "signed_integer" "text" "unsigned_integer" "url" "uuid") ("email" "validators/email") ("domain" "validators/domain") ("default" "full") ("boolean" "validators/boolean") ("base64_url_decoded" "validators/base64_url_decoded") ("base64_url" "validators/base64_url") ("base64_decoded" "validators/base64_decoded") ("base64" "validators/base64") ("base32_decoded" "validators/base32_decoded") ("base32" "validators/base32"))))))

(define-public crate-validators-derive-0.21.5 (c (n "validators-derive") (v "0.21.5") (d (list (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "enum-ordinalize") (r "^3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "once_cell") (r "^1.4") (d #t) (k 2)) (d (n "phonenumber") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "regex-dep") (r "^1") (o #t) (d #t) (k 0) (p "regex")) (d (n "syn") (r "^1") (d #t) (k 0)) (d (n "validators") (r "^0.21.3") (d #t) (k 0)) (d (n "validators-options") (r "^0.21") (d #t) (k 0)))) (h "1j01kfqy70zq3hfyiknl2p5sssp8f8f4swhpnzdvqr7b2aabgvhj") (f (quote (("uuid" "validators/uuid") ("url" "validators/url") ("unsigned_integer" "validators/unsigned_integer") ("text" "validators/text") ("std" "validators/std") ("signed_integer" "validators/signed_integer") ("serde" "validators/serde") ("semver_req" "validators/semver_req") ("semver" "validators/semver") ("rocket" "validators/rocket") ("regex" "validators/regex" "regex-dep") ("phone" "validators/phone" "std" "phonenumber") ("number" "validators/number") ("mac_address" "validators/mac_address") ("line" "validators/line") ("length" "validators/length") ("json" "validators/json") ("ipv6" "validators/ipv6") ("ipv4" "validators/ipv4") ("ip" "validators/ip") ("http_url" "validators/http_url") ("http_ftp_url" "validators/http_ftp_url") ("host" "validators/host") ("full" "base32" "base32_decoded" "base64" "base64_decoded" "base64_url" "base64_url_decoded" "boolean" "domain" "email" "host" "http_url" "http_ftp_url" "ip" "ipv4" "ipv6" "json" "length" "line" "mac_address" "number" "phone" "regex" "semver" "semver_req" "signed_integer" "text" "unsigned_integer" "url" "uuid") ("email" "validators/email") ("domain" "validators/domain") ("default" "full") ("boolean" "validators/boolean") ("base64_url_decoded" "validators/base64_url_decoded") ("base64_url" "validators/base64_url") ("base64_decoded" "validators/base64_decoded") ("base64" "validators/base64") ("base32_decoded" "validators/base32_decoded") ("base32" "validators/base32"))))))

(define-public crate-validators-derive-0.21.6 (c (n "validators-derive") (v "0.21.6") (d (list (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "enum-ordinalize") (r "^3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "once_cell") (r "^1.4") (d #t) (k 2)) (d (n "phonenumber") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "regex-dep") (r "^1") (o #t) (d #t) (k 0) (p "regex")) (d (n "syn") (r "^1") (d #t) (k 0)) (d (n "validators") (r "^0.21.3") (d #t) (k 0)) (d (n "validators-options") (r "^0.21") (d #t) (k 0)))) (h "1i1ysipib95kjjqj3h7l9kjchkkx7qimaqm1z336vk3jwrlfhzn0") (f (quote (("uuid" "validators/uuid") ("url" "validators/url") ("unsigned_integer" "validators/unsigned_integer") ("text" "validators/text") ("std" "validators/std") ("signed_integer" "validators/signed_integer") ("serde" "validators/serde") ("semver_req" "validators/semver_req") ("semver" "validators/semver") ("rocket" "validators/rocket") ("regex" "validators/regex" "regex-dep") ("phone" "validators/phone" "std" "phonenumber") ("number" "validators/number") ("mac_address" "validators/mac_address") ("line" "validators/line") ("length" "validators/length") ("json" "validators/json") ("ipv6" "validators/ipv6") ("ipv4" "validators/ipv4") ("ip" "validators/ip") ("http_url" "validators/http_url") ("http_ftp_url" "validators/http_ftp_url") ("host" "validators/host") ("full" "base32" "base32_decoded" "base64" "base64_decoded" "base64_url" "base64_url_decoded" "boolean" "domain" "email" "host" "http_url" "http_ftp_url" "ip" "ipv4" "ipv6" "json" "length" "line" "mac_address" "number" "phone" "regex" "semver" "semver_req" "signed_integer" "text" "unsigned_integer" "url" "uuid") ("email" "validators/email") ("domain" "validators/domain") ("default" "full") ("boolean" "validators/boolean") ("base64_url_decoded" "validators/base64_url_decoded") ("base64_url" "validators/base64_url") ("base64_decoded" "validators/base64_decoded") ("base64" "validators/base64") ("base32_decoded" "validators/base32_decoded") ("base32" "validators/base32"))))))

(define-public crate-validators-derive-0.22.0 (c (n "validators-derive") (v "0.22.0") (d (list (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "enum-ordinalize") (r "^3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "once_cell") (r "^1.4") (d #t) (k 2)) (d (n "phonenumber") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "regex-dep") (r "^1") (o #t) (d #t) (k 0) (p "regex")) (d (n "syn") (r "^1") (d #t) (k 0)) (d (n "validators") (r "^0.22") (d #t) (k 0)) (d (n "validators-options") (r "^0.22") (d #t) (k 0)))) (h "1ax073l0pns8l7w74lazswiw2msqknigzpnpxps6fhsayk3frxmj") (f (quote (("uuid" "validators/uuid") ("url" "validators/url") ("unsigned_integer" "validators/unsigned_integer") ("text" "validators/text") ("std" "validators/std") ("signed_integer" "validators/signed_integer") ("serde" "validators/serde") ("semver_req" "validators/semver_req") ("semver" "validators/semver") ("rocket" "validators/rocket") ("regex" "validators/regex" "regex-dep") ("phone" "validators/phone" "std" "phonenumber") ("number" "validators/number") ("mac_address" "validators/mac_address") ("line" "validators/line") ("length" "validators/length") ("json" "validators/json") ("ipv6" "validators/ipv6") ("ipv4" "validators/ipv4") ("ip" "validators/ip") ("http_url" "validators/http_url") ("http_ftp_url" "validators/http_ftp_url") ("host" "validators/host") ("full" "base32" "base32_decoded" "base64" "base64_decoded" "base64_url" "base64_url_decoded" "boolean" "domain" "email" "host" "http_url" "http_ftp_url" "ip" "ipv4" "ipv6" "json" "length" "line" "mac_address" "number" "phone" "regex" "semver" "semver_req" "signed_integer" "text" "unsigned_integer" "url" "uuid") ("email" "validators/email") ("domain" "validators/domain") ("default" "full") ("boolean" "validators/boolean") ("base64_url_decoded" "validators/base64_url_decoded") ("base64_url" "validators/base64_url") ("base64_decoded" "validators/base64_decoded") ("base64" "validators/base64") ("base32_decoded" "validators/base32_decoded") ("base32" "validators/base32")))) (y #t)))

(define-public crate-validators-derive-0.22.1 (c (n "validators-derive") (v "0.22.1") (d (list (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "enum-ordinalize") (r "^3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "once_cell") (r "^1.4") (d #t) (k 2)) (d (n "phonenumber") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "regex-dep") (r "^1") (o #t) (d #t) (k 0) (p "regex")) (d (n "syn") (r "^1") (d #t) (k 0)) (d (n "validators") (r "^0.22") (d #t) (k 0)) (d (n "validators-options") (r "^0.22") (d #t) (k 0)))) (h "12y6f6nzp29k0z3vdwzqfav62bnmf4cwisz5kr3yq4nc11w93g7k") (f (quote (("uuid" "validators/uuid") ("url" "validators/url") ("unsigned_integer" "validators/unsigned_integer") ("text" "validators/text") ("std" "validators/std") ("signed_integer" "validators/signed_integer") ("serde" "validators/serde") ("semver_req" "validators/semver_req") ("semver" "validators/semver") ("rocket" "validators/rocket") ("regex" "validators/regex" "regex-dep") ("phone" "validators/phone" "std" "phonenumber") ("number" "validators/number") ("mac_address" "validators/mac_address") ("line" "validators/line") ("length" "validators/length") ("json" "validators/json") ("ipv6" "validators/ipv6") ("ipv4" "validators/ipv4") ("ip" "validators/ip") ("http_url" "validators/http_url") ("http_ftp_url" "validators/http_ftp_url") ("host" "validators/host") ("full" "base32" "base32_decoded" "base64" "base64_decoded" "base64_url" "base64_url_decoded" "boolean" "domain" "email" "host" "http_url" "http_ftp_url" "ip" "ipv4" "ipv6" "json" "length" "line" "mac_address" "number" "phone" "regex" "semver" "semver_req" "signed_integer" "text" "unsigned_integer" "url" "uuid") ("email" "validators/email") ("domain" "validators/domain") ("default" "full") ("boolean" "validators/boolean") ("base64_url_decoded" "validators/base64_url_decoded") ("base64_url" "validators/base64_url") ("base64_decoded" "validators/base64_decoded") ("base64" "validators/base64") ("base32_decoded" "validators/base32_decoded") ("base32" "validators/base32"))))))

(define-public crate-validators-derive-0.22.2 (c (n "validators-derive") (v "0.22.2") (d (list (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "enum-ordinalize") (r "^3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "once_cell") (r "^1.4") (d #t) (k 2)) (d (n "phonenumber") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "regex-dep") (r "^1") (o #t) (d #t) (k 0) (p "regex")) (d (n "syn") (r "^1") (d #t) (k 0)) (d (n "validators") (r "^0.22.1") (d #t) (k 0)) (d (n "validators-options") (r "^0.22") (d #t) (k 0)))) (h "1jg2ma2vnchcvhmj9ygdw0grp13zi8fjgnzs6fzk93zawnnqh93h") (f (quote (("uuid" "validators/uuid") ("url" "validators/url") ("unsigned_integer" "validators/unsigned_integer") ("text" "validators/text") ("std" "validators/std") ("signed_integer" "validators/signed_integer") ("serde" "validators/serde") ("semver_req" "validators/semver_req") ("semver" "validators/semver") ("rocket" "validators/rocket") ("regex" "validators/regex" "regex-dep") ("phone" "validators/phone" "std" "phonenumber") ("number" "validators/number") ("mac_address" "validators/mac_address") ("line" "validators/line") ("length" "validators/length") ("json" "validators/json") ("ipv6" "validators/ipv6") ("ipv4" "validators/ipv4") ("ip" "validators/ip") ("http_url" "validators/http_url") ("http_ftp_url" "validators/http_ftp_url") ("host" "validators/host") ("full" "base32" "base32_decoded" "base64" "base64_decoded" "base64_url" "base64_url_decoded" "boolean" "domain" "email" "host" "http_url" "http_ftp_url" "ip" "ipv4" "ipv6" "json" "length" "line" "mac_address" "number" "phone" "regex" "semver" "semver_req" "signed_integer" "text" "unsigned_integer" "url" "uuid") ("email" "validators/email") ("domain" "validators/domain") ("default" "full") ("boolean" "validators/boolean") ("base64_url_decoded" "validators/base64_url_decoded") ("base64_url" "validators/base64_url") ("base64_decoded" "validators/base64_decoded") ("base64" "validators/base64") ("base32_decoded" "validators/base32_decoded") ("base32" "validators/base32"))))))

(define-public crate-validators-derive-0.22.3 (c (n "validators-derive") (v "0.22.3") (d (list (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "enum-ordinalize") (r "^3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "once_cell") (r "^1.4") (d #t) (k 2)) (d (n "phonenumber") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "regex-dep") (r "^1") (o #t) (d #t) (k 0) (p "regex")) (d (n "syn") (r "^1") (d #t) (k 0)) (d (n "validators") (r "^0.22.1") (d #t) (k 0)) (d (n "validators-options") (r "^0.22") (d #t) (k 0)))) (h "1mhjh9aavhqpczhy50fsx6vkjfr2l5ix42c2aqgfidisx5yhrd9y") (f (quote (("uuid" "validators/uuid") ("url" "validators/url") ("unsigned_integer" "validators/unsigned_integer") ("text" "validators/text") ("std" "validators/std") ("signed_integer" "validators/signed_integer") ("serde" "validators/serde") ("semver_req" "validators/semver_req") ("semver" "validators/semver") ("rocket" "validators/rocket") ("regex" "validators/regex" "regex-dep") ("phone" "validators/phone" "std" "phonenumber") ("number" "validators/number") ("mac_address" "validators/mac_address") ("line" "validators/line") ("length" "validators/length") ("json" "validators/json") ("ipv6" "validators/ipv6") ("ipv4" "validators/ipv4") ("ip" "validators/ip") ("http_url" "validators/http_url") ("http_ftp_url" "validators/http_ftp_url") ("host" "validators/host") ("full" "base32" "base32_decoded" "base64" "base64_decoded" "base64_url" "base64_url_decoded" "boolean" "domain" "email" "host" "http_url" "http_ftp_url" "ip" "ipv4" "ipv6" "json" "length" "line" "mac_address" "number" "phone" "regex" "semver" "semver_req" "signed_integer" "text" "unsigned_integer" "url" "uuid") ("email" "validators/email") ("domain" "validators/domain") ("default" "full") ("boolean" "validators/boolean") ("base64_url_decoded" "validators/base64_url_decoded") ("base64_url" "validators/base64_url") ("base64_decoded" "validators/base64_decoded") ("base64" "validators/base64") ("base32_decoded" "validators/base32_decoded") ("base32" "validators/base32"))))))

(define-public crate-validators-derive-0.22.4 (c (n "validators-derive") (v "0.22.4") (d (list (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "enum-ordinalize") (r "^3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "once_cell") (r "^1.4") (d #t) (k 2)) (d (n "phonenumber") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "regex-dep") (r "^1") (o #t) (d #t) (k 0) (p "regex")) (d (n "syn") (r "^1") (d #t) (k 0)) (d (n "validators") (r "^0.22.1") (d #t) (k 0)) (d (n "validators-options") (r "^0.22") (d #t) (k 0)))) (h "02hkanhvnplyqs65w8qcills74qsjsj1dl5n1939wz29dni8gxf4") (f (quote (("uuid" "validators/uuid") ("url" "validators/url") ("unsigned_integer" "validators/unsigned_integer") ("text" "validators/text") ("std" "validators/std") ("signed_integer" "validators/signed_integer") ("serde" "validators/serde") ("semver_req" "validators/semver_req") ("semver" "validators/semver") ("rocket" "validators/rocket") ("regex" "validators/regex" "regex-dep") ("phone" "validators/phone" "std" "phonenumber") ("number" "validators/number") ("mac_address" "validators/mac_address") ("line" "validators/line") ("length" "validators/length") ("json" "validators/json") ("ipv6" "validators/ipv6") ("ipv4" "validators/ipv4") ("ip" "validators/ip") ("http_url" "validators/http_url") ("http_ftp_url" "validators/http_ftp_url") ("host" "validators/host") ("full" "base32" "base32_decoded" "base64" "base64_decoded" "base64_url" "base64_url_decoded" "boolean" "domain" "email" "host" "http_url" "http_ftp_url" "ip" "ipv4" "ipv6" "json" "length" "line" "mac_address" "number" "phone" "regex" "semver" "semver_req" "signed_integer" "text" "unsigned_integer" "url" "uuid") ("email" "validators/email") ("domain" "validators/domain") ("default" "full") ("boolean" "validators/boolean") ("base64_url_decoded" "validators/base64_url_decoded") ("base64_url" "validators/base64_url") ("base64_decoded" "validators/base64_decoded") ("base64" "validators/base64") ("base32_decoded" "validators/base32_decoded") ("base32" "validators/base32"))))))

(define-public crate-validators-derive-0.22.5 (c (n "validators-derive") (v "0.22.5") (d (list (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "enum-ordinalize") (r "^3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "once_cell") (r "^1.4") (d #t) (k 2)) (d (n "phonenumber") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "regex-dep") (r "^1") (o #t) (d #t) (k 0) (p "regex")) (d (n "syn") (r "^1") (d #t) (k 0)) (d (n "validators") (r "^0.22.1") (d #t) (k 0)) (d (n "validators-options") (r "^0.22") (d #t) (k 0)))) (h "1xq4fkykh653w33i5bn1z1nbhx4r4xyqzws3cac2kpjag0rf0bqq") (f (quote (("uuid" "validators/uuid") ("url" "validators/url") ("unsigned_integer" "validators/unsigned_integer") ("text" "validators/text") ("std" "validators/std") ("signed_integer" "validators/signed_integer") ("serde" "validators/serde") ("semver_req" "validators/semver_req") ("semver" "validators/semver") ("rocket" "validators/rocket") ("regex" "validators/regex" "regex-dep") ("phone" "validators/phone" "std" "phonenumber") ("number" "validators/number") ("mac_address" "validators/mac_address") ("line" "validators/line") ("length" "validators/length") ("json" "validators/json") ("ipv6" "validators/ipv6") ("ipv4" "validators/ipv4") ("ip" "validators/ip") ("http_url" "validators/http_url") ("http_ftp_url" "validators/http_ftp_url") ("host" "validators/host") ("full" "base32" "base32_decoded" "base64" "base64_decoded" "base64_url" "base64_url_decoded" "boolean" "domain" "email" "host" "http_url" "http_ftp_url" "ip" "ipv4" "ipv6" "json" "length" "line" "mac_address" "number" "phone" "regex" "semver" "semver_req" "signed_integer" "text" "unsigned_integer" "url" "uuid") ("email" "validators/email") ("domain" "validators/domain") ("default" "full") ("boolean" "validators/boolean") ("base64_url_decoded" "validators/base64_url_decoded") ("base64_url" "validators/base64_url") ("base64_decoded" "validators/base64_decoded") ("base64" "validators/base64") ("base32_decoded" "validators/base32_decoded") ("base32" "validators/base32"))))))

(define-public crate-validators-derive-0.23.0 (c (n "validators-derive") (v "0.23.0") (d (list (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "enum-ordinalize") (r "^3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "once_cell") (r "^1.4") (d #t) (k 2)) (d (n "phonenumber") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "regex-dep") (r "^1") (o #t) (d #t) (k 0) (p "regex")) (d (n "syn") (r "^1") (d #t) (k 0)) (d (n "validators") (r "^0.23") (d #t) (k 0)) (d (n "validators-options") (r "^0.23") (d #t) (k 0)))) (h "0i2bac8aw80vq3n2fpvclxlscfz7a63df1nw3xyxp6kajy66wb09") (f (quote (("uuid" "validators/uuid") ("url" "validators/url") ("unsigned_integer" "validators/unsigned_integer") ("text" "validators/text") ("std" "validators/std") ("signed_integer" "validators/signed_integer") ("serde" "validators/serde") ("semver_req" "validators/semver_req") ("semver" "validators/semver") ("rocket" "validators/rocket") ("regex" "validators/regex" "regex-dep") ("phone" "validators/phone" "std" "phonenumber") ("number" "validators/number") ("mac_address" "validators/mac_address") ("line" "validators/line") ("length" "validators/length") ("json" "validators/json") ("ipv6" "validators/ipv6") ("ipv4" "validators/ipv4") ("ip" "validators/ip") ("http_url" "validators/http_url") ("http_ftp_url" "validators/http_ftp_url") ("host" "validators/host") ("full" "base32" "base32_decoded" "base64" "base64_decoded" "base64_url" "base64_url_decoded" "boolean" "domain" "email" "host" "http_url" "http_ftp_url" "ip" "ipv4" "ipv6" "json" "length" "line" "mac_address" "number" "phone" "regex" "semver" "semver_req" "signed_integer" "text" "unsigned_integer" "url" "uuid") ("email" "validators/email") ("domain" "validators/domain") ("default" "full") ("boolean" "validators/boolean") ("base64_url_decoded" "validators/base64_url_decoded") ("base64_url" "validators/base64_url") ("base64_decoded" "validators/base64_decoded") ("base64" "validators/base64") ("base32_decoded" "validators/base32_decoded") ("base32" "validators/base32"))))))

(define-public crate-validators-derive-0.23.1 (c (n "validators-derive") (v "0.23.1") (d (list (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "enum-ordinalize") (r "^3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "once_cell") (r "^1.4") (d #t) (k 2)) (d (n "phonenumber") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "regex-dep") (r "^1") (o #t) (d #t) (k 0) (p "regex")) (d (n "syn") (r "^1") (d #t) (k 0)) (d (n "validators") (r "^0.23.1") (d #t) (k 0)) (d (n "validators-options") (r "^0.23") (d #t) (k 0)))) (h "0xw0i0z6pr6gpdl1arsshldm79jfv549f7hwp12hmw9bn5n0bwnk") (f (quote (("uuid" "validators/uuid") ("url" "validators/url") ("unsigned_integer" "validators/unsigned_integer") ("text" "validators/text") ("std" "validators/std") ("signed_integer" "validators/signed_integer") ("serde" "validators/serde") ("semver_req" "validators/semver_req") ("semver" "validators/semver") ("rocket" "validators/rocket") ("regex" "validators/regex" "regex-dep") ("phone" "validators/phone" "std" "phonenumber") ("number" "validators/number") ("mac_address" "validators/mac_address") ("line" "validators/line") ("length" "validators/length") ("json" "validators/json") ("ipv6" "validators/ipv6") ("ipv4" "validators/ipv4") ("ip" "validators/ip") ("http_url" "validators/http_url") ("http_ftp_url" "validators/http_ftp_url") ("host" "validators/host") ("full" "base32" "base32_decoded" "base64" "base64_decoded" "base64_url" "base64_url_decoded" "boolean" "domain" "email" "host" "http_url" "http_ftp_url" "ip" "ipv4" "ipv6" "json" "length" "line" "mac_address" "number" "phone" "regex" "semver" "semver_req" "signed_integer" "text" "unsigned_integer" "url" "uuid") ("email" "validators/email") ("domain" "validators/domain") ("default" "full") ("boolean" "validators/boolean") ("base64_url_decoded" "validators/base64_url_decoded") ("base64_url" "validators/base64_url") ("base64_decoded" "validators/base64_decoded") ("base64" "validators/base64") ("base32_decoded" "validators/base32_decoded") ("base32" "validators/base32"))))))

(define-public crate-validators-derive-0.24.0 (c (n "validators-derive") (v "0.24.0") (d (list (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "enum-ordinalize") (r "^3.1") (d #t) (k 0)) (d (n "phonenumber") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "regex-dep") (r "^1") (o #t) (d #t) (k 0) (p "regex")) (d (n "syn") (r "^1") (d #t) (k 0)) (d (n "validators-options") (r "^0.24") (d #t) (k 0)))) (h "1fa38ypaw1ibqm0y3kvgqbxsgxpwnfw31mv425z96m07qc4p6rqa") (f (quote (("uuid") ("url") ("unsigned_integer") ("text") ("std") ("signed_integer") ("serde") ("semver_req") ("semver") ("rocket") ("regex" "regex-dep") ("phone" "std" "phonenumber") ("number") ("mac_address") ("line") ("length") ("json") ("ipv6") ("ipv4") ("ip") ("http_url") ("http_ftp_url") ("host") ("email") ("domain") ("boolean") ("base64_url_decoded") ("base64_url") ("base64_decoded") ("base64") ("base32_decoded") ("base32"))))))

(define-public crate-validators-derive-0.24.1 (c (n "validators-derive") (v "0.24.1") (d (list (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "enum-ordinalize") (r "^3.1") (d #t) (k 0)) (d (n "phonenumber") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "regex-dep") (r "^1") (o #t) (d #t) (k 0) (p "regex")) (d (n "syn") (r "^1") (d #t) (k 0)) (d (n "validators-options") (r "^0.24") (d #t) (k 0)))) (h "1g4fwp6ihpbrc7szfaza13rj0kibqfjiflvr5xicdr55yj3mv4q2") (f (quote (("uuid") ("url") ("unsigned_integer") ("text") ("std") ("signed_integer") ("serde") ("semver_req") ("semver") ("rocket") ("regex" "regex-dep") ("phone" "std" "phonenumber") ("number") ("mac_address") ("line") ("length") ("json") ("ipv6") ("ipv4") ("ip") ("http_url") ("http_ftp_url") ("host") ("email") ("domain") ("boolean") ("base64_url_decoded") ("base64_url") ("base64_decoded") ("base64") ("base32_decoded") ("base32"))))))

(define-public crate-validators-derive-0.24.4 (c (n "validators-derive") (v "0.24.4") (d (list (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "enum-ordinalize") (r "^3.1") (d #t) (k 0)) (d (n "phonenumber") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "regex-dep") (r "^1") (o #t) (d #t) (k 0) (p "regex")) (d (n "syn") (r "^1") (d #t) (k 0)) (d (n "validators-options") (r "^0.24") (d #t) (k 0)))) (h "1rmzyqwsv1a971caq2mdgah9y16sf8v3amyzbpay9b2kmwqbm005") (f (quote (("uuid") ("url") ("unsigned_integer") ("text") ("std") ("signed_integer") ("serde") ("semver_req") ("semver") ("rocket") ("regex" "regex-dep") ("phone" "std" "phonenumber") ("number") ("mac_address") ("line") ("length") ("json") ("ipv6") ("ipv4") ("ip") ("http_url") ("http_ftp_url") ("host") ("email") ("domain") ("boolean") ("base64_url_decoded") ("base64_url") ("base64_decoded") ("base64") ("base32_decoded") ("base32")))) (r "1.61")))

(define-public crate-validators-derive-0.24.5 (c (n "validators-derive") (v "0.24.5") (d (list (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "enum-ordinalize") (r "^3.1") (d #t) (k 0)) (d (n "phonenumber") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "regex-dep") (r "^1") (o #t) (d #t) (k 0) (p "regex")) (d (n "syn") (r "^1") (d #t) (k 0)) (d (n "validators-options") (r "^0.24") (d #t) (k 0)))) (h "0d5pfv71p7rf6xac8nm7xz2df7jnnpp8nd8ykvv6d94d0lgbqqgs") (f (quote (("uuid") ("url") ("unsigned_integer") ("text") ("std") ("signed_integer") ("serde") ("semver_req") ("semver") ("rocket") ("regex" "regex-dep") ("phone" "std" "phonenumber") ("number") ("mac_address") ("line") ("length") ("json") ("ipv6") ("ipv4") ("ip") ("http_url") ("http_ftp_url") ("host") ("email") ("domain") ("boolean") ("base64_url_decoded") ("base64_url") ("base64_decoded") ("base64") ("base32_decoded") ("base32")))) (r "1.61")))

(define-public crate-validators-derive-0.25.0 (c (n "validators-derive") (v "0.25.0") (d (list (d (n "educe") (r "^0.5") (f (quote ("Debug"))) (o #t) (k 0)) (d (n "enum-ordinalize") (r "^4.2") (f (quote ("derive"))) (k 0)) (d (n "phonenumber") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "syn") (r "^2") (d #t) (k 0)))) (h "01002pc8wga34kj7anadckrc19cvc4gid6kjva75zzdscqn5plh1") (f (quote (("uuid") ("url") ("unsigned_integer") ("text") ("test") ("std") ("signed_integer") ("serde") ("semver_req") ("semver") ("rocket") ("number") ("mac_address") ("line") ("length") ("json") ("http_url") ("http_ftp_url") ("full" "syn/full") ("byte") ("boolean") ("bit") ("base64_url_decoded") ("base64_url") ("base64_decoded") ("base64") ("base32_decoded") ("base32")))) (s 2) (e (quote (("regex" "dep:regex") ("phone" "dep:phonenumber") ("ipv6" "dep:educe") ("ipv4" "dep:educe") ("ip" "dep:educe") ("host" "dep:educe") ("email" "dep:educe") ("domain" "dep:educe")))) (r "1.69")))

(define-public crate-validators-derive-0.25.1 (c (n "validators-derive") (v "0.25.1") (d (list (d (n "educe") (r "^0.5") (f (quote ("Debug"))) (o #t) (k 0)) (d (n "enum-ordinalize") (r "^4.2") (f (quote ("derive"))) (k 0)) (d (n "phonenumber") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "syn") (r "^2") (d #t) (k 0)))) (h "1sn67gas83dzdmmbx97dfvwl9g0inza76ciim6awfsc4cpc51maw") (f (quote (("uuid") ("url") ("unsigned_integer") ("text") ("test") ("std") ("signed_integer") ("serde") ("semver_req") ("semver") ("rocket") ("number") ("mac_address") ("line") ("length") ("json") ("http_url") ("http_ftp_url") ("full" "syn/full") ("byte") ("boolean") ("bit") ("base64_url_decoded") ("base64_url") ("base64_decoded") ("base64") ("base32_decoded") ("base32")))) (s 2) (e (quote (("regex" "dep:regex") ("phone" "dep:phonenumber") ("ipv6" "dep:educe") ("ipv4" "dep:educe") ("ip" "dep:educe") ("host" "dep:educe") ("email" "dep:educe") ("domain" "dep:educe")))) (r "1.69")))

(define-public crate-validators-derive-0.25.2 (c (n "validators-derive") (v "0.25.2") (d (list (d (n "educe") (r "^0.5") (f (quote ("Debug"))) (o #t) (k 0)) (d (n "enum-ordinalize") (r "^4.2") (f (quote ("derive"))) (k 0)) (d (n "phonenumber") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "syn") (r "^2") (d #t) (k 0)))) (h "1cz6n1dkjp7xmwmfil5y811x9nz2gs7hailx0bjb6hjdhcv7fdvj") (f (quote (("uuid") ("url") ("unsigned_integer") ("text") ("test") ("std") ("signed_integer") ("serde") ("semver_req") ("semver") ("rocket") ("number") ("mac_address") ("line") ("length") ("json") ("http_url") ("http_ftp_url") ("full" "syn/full") ("byte") ("boolean") ("bit") ("base64_url_decoded") ("base64_url") ("base64_decoded") ("base64") ("base32_decoded") ("base32")))) (s 2) (e (quote (("regex" "dep:regex") ("phone" "dep:phonenumber") ("ipv6" "dep:educe") ("ipv4" "dep:educe") ("ip" "dep:educe") ("host" "dep:educe") ("email" "dep:educe") ("domain" "dep:educe")))) (r "1.69")))

