(define-module (crates-io va li validator_derive) #:use-module (crates-io))

(define-public crate-validator_derive-0.1.0 (c (n "validator_derive") (v "0.1.0") (d (list (d (n "compiletest_rs") (r "^0.2") (d #t) (k 2)) (d (n "quote") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.8") (d #t) (k 2)) (d (n "serde_derive") (r "^0.8") (d #t) (k 2)) (d (n "serde_json") (r "^0.8") (d #t) (k 2)) (d (n "syn") (r "^0.10") (d #t) (k 0)) (d (n "validator") (r "^0.1") (d #t) (k 0)))) (h "1rp16mfzhkz7xjls0dsgq7j48nb05jhqwi0ksg31y6srirg7mp50")))

(define-public crate-validator_derive-0.2.0 (c (n "validator_derive") (v "0.2.0") (d (list (d (n "compiletest_rs") (r "^0.2") (d #t) (k 2)) (d (n "quote") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.8") (d #t) (k 2)) (d (n "serde_derive") (r "^0.8") (d #t) (k 2)) (d (n "serde_json") (r "^0.8") (d #t) (k 2)) (d (n "syn") (r "^0.10") (d #t) (k 0)) (d (n "validator") (r "^0.2.0") (d #t) (k 0)))) (h "0jvgafjinknpmi4d8g2cc55kqmq3m9vdkfy9715jybn3vizzr128")))

(define-public crate-validator_derive-0.3.0 (c (n "validator_derive") (v "0.3.0") (d (list (d (n "compiletest_rs") (r "^0.2") (d #t) (k 2)) (d (n "lazy_static") (r "^0.2") (d #t) (k 2)) (d (n "quote") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 2)) (d (n "serde") (r "^0.8") (d #t) (k 2)) (d (n "serde_derive") (r "^0.8") (d #t) (k 2)) (d (n "serde_json") (r "^0.8") (d #t) (k 2)) (d (n "syn") (r "^0.10") (d #t) (k 0)) (d (n "validator") (r "^0.3.0") (d #t) (k 0)))) (h "13b2pjq4s61snckg3ymw3lzjn2y0zb3gwmj5q2077pcrfg3g7l97")))

(define-public crate-validator_derive-0.4.0 (c (n "validator_derive") (v "0.4.0") (d (list (d (n "compiletest_rs") (r "^0.2") (d #t) (k 2)) (d (n "lazy_static") (r "^0.2") (d #t) (k 2)) (d (n "quote") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 2)) (d (n "serde") (r "^0.9") (d #t) (k 2)) (d (n "serde_derive") (r "^0.9") (d #t) (k 2)) (d (n "serde_json") (r "^0.9") (d #t) (k 2)) (d (n "syn") (r "^0.11") (d #t) (k 0)) (d (n "validator") (r "^0.3.0") (d #t) (k 0)))) (h "14fq3c8armi2qylj95i1mgpjn8i98mxlpl5rwd24y95pynx9vzf8")))

(define-public crate-validator_derive-0.4.1 (c (n "validator_derive") (v "0.4.1") (d (list (d (n "compiletest_rs") (r "^0.2") (d #t) (k 2)) (d (n "lazy_static") (r "^0.2") (d #t) (k 2)) (d (n "quote") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 2)) (d (n "serde") (r "^0.9") (d #t) (k 2)) (d (n "serde_derive") (r "^0.9") (d #t) (k 2)) (d (n "serde_json") (r "^0.9") (d #t) (k 2)) (d (n "syn") (r "^0.11") (d #t) (k 0)) (d (n "validator") (r "^0.4.0") (d #t) (k 0)))) (h "0zga40vkj15a3g8v35wlcbzlmpy85rbqd9vp5qzppi5avrg01j9z")))

(define-public crate-validator_derive-0.5.0 (c (n "validator_derive") (v "0.5.0") (d (list (d (n "compiletest_rs") (r "^0.2") (d #t) (k 2)) (d (n "lazy_static") (r "^0.2") (d #t) (k 2)) (d (n "quote") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "syn") (r "^0.11") (d #t) (k 0)) (d (n "validator") (r "^0.4.0") (d #t) (k 0)))) (h "0bxzs4d03liv3d8lj3am030ihhx1s0jyh3ci8ngqbyywx8x9hihw")))

(define-public crate-validator_derive-0.6.0 (c (n "validator_derive") (v "0.6.0") (d (list (d (n "compiletest_rs") (r "^0.2") (d #t) (k 2)) (d (n "if_chain") (r "^0") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 2)) (d (n "quote") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "syn") (r "^0.11") (d #t) (k 0)) (d (n "validator") (r "^0.6.0") (d #t) (k 0)))) (h "13bawr48f0zczs8ln49nizswrw29p17bwz0axy360spkarh6nf1m")))

(define-public crate-validator_derive-0.6.1 (c (n "validator_derive") (v "0.6.1") (d (list (d (n "compiletest_rs") (r "^0.2") (d #t) (k 2)) (d (n "if_chain") (r "^0") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 2)) (d (n "quote") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "syn") (r "^0.11") (d #t) (k 0)) (d (n "validator") (r "^0.6") (d #t) (k 0)))) (h "1mj29b0yv5kz367zmz0hbmb021wblf7myabdgk44a0smpwq140ng") (f (quote (("phone" "validator/phone"))))))

(define-public crate-validator_derive-0.6.2 (c (n "validator_derive") (v "0.6.2") (d (list (d (n "compiletest_rs") (r "^0.3") (d #t) (k 2)) (d (n "if_chain") (r "^0") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "quote") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "syn") (r "^0.12") (f (quote ("extra-traits"))) (d #t) (k 0)) (d (n "validator") (r "^0.6") (d #t) (k 0)))) (h "17jz6xnnpadxx4xikhg46vym19xl3zbz2lfqid4xscg749lrwd5a") (f (quote (("phone" "validator/phone"))))))

(define-public crate-validator_derive-0.6.3 (c (n "validator_derive") (v "0.6.3") (d (list (d (n "compiletest_rs") (r "^0.3") (d #t) (k 2)) (d (n "if_chain") (r "^0") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "quote") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "syn") (r "^0.12") (f (quote ("extra-traits"))) (d #t) (k 0)) (d (n "validator") (r "^0.6") (d #t) (k 0)))) (h "11adiwl6xdiwgianjhx4qlipgpyq3dlxya94wx4wszhjaw78jyvs") (f (quote (("phone" "validator/phone"))))))

(define-public crate-validator_derive-0.6.4 (c (n "validator_derive") (v "0.6.4") (d (list (d (n "compiletest_rs") (r "^0.3") (d #t) (k 2)) (d (n "if_chain") (r "^0") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "quote") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "syn") (r "^0.12") (f (quote ("extra-traits"))) (d #t) (k 0)) (d (n "validator") (r "^0.6") (d #t) (k 0)))) (h "09lpjb1wnz8qhb2kx6vq0vgnv0g3809vhqwa0r2f4kga193bxpvy") (f (quote (("phone" "validator/phone"))))))

(define-public crate-validator_derive-0.6.5 (c (n "validator_derive") (v "0.6.5") (d (list (d (n "compiletest_rs") (r "^0.3") (d #t) (k 2)) (d (n "if_chain") (r "^0") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "quote") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "syn") (r "^0.13") (f (quote ("extra-traits"))) (d #t) (k 0)) (d (n "validator") (r "^0.6") (d #t) (k 0)))) (h "04naliin2rd0j5hhzckjrxcic8xf5242x82l3d5b5zpm4d01qv5c") (f (quote (("phone" "validator/phone"))))))

(define-public crate-validator_derive-0.7.0 (c (n "validator_derive") (v "0.7.0") (d (list (d (n "compiletest_rs") (r "^0.3") (d #t) (k 2)) (d (n "if_chain") (r "^0") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "quote") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "syn") (r "^0.13") (f (quote ("extra-traits"))) (d #t) (k 0)) (d (n "validator") (r "^0.7") (d #t) (k 0)))) (h "0s77kcqllb29h9sfindbfhkc90skmri51vr4xc8jdshlhziw53p9") (f (quote (("phone" "validator/phone") ("card" "validator/card"))))))

(define-public crate-validator_derive-0.7.1 (c (n "validator_derive") (v "0.7.1") (d (list (d (n "compiletest_rs") (r "^0.3") (d #t) (k 2)) (d (n "if_chain") (r "^0") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "proc-macro2") (r "^0.4") (d #t) (k 0)) (d (n "quote") (r "^0.6") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "syn") (r "^0.14") (f (quote ("extra-traits"))) (d #t) (k 0)) (d (n "validator") (r "^0.7") (d #t) (k 0)))) (h "1aqza9wp4z5qj89zpzchpbd00p8v1ffxvqnhjgvrjm330n9yi3kh") (f (quote (("phone" "validator/phone") ("card" "validator/card"))))))

(define-public crate-validator_derive-0.7.2 (c (n "validator_derive") (v "0.7.2") (d (list (d (n "compiletest_rs") (r "^0.3") (d #t) (k 2)) (d (n "if_chain") (r "^0") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "proc-macro2") (r "^0.4") (d #t) (k 0)) (d (n "quote") (r "^0.6") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "syn") (r "^0.14") (f (quote ("extra-traits"))) (d #t) (k 0)) (d (n "validator") (r "^0.7") (d #t) (k 0)))) (h "07mlknlndmhvm0nkh2n6zcs34iwladyxzmdhgpv451sqs5kbfl1b") (f (quote (("phone" "validator/phone") ("card" "validator/card"))))))

(define-public crate-validator_derive-0.8.0 (c (n "validator_derive") (v "0.8.0") (d (list (d (n "compiletest_rs") (r "^0.3") (d #t) (k 2)) (d (n "if_chain") (r "^0") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "proc-macro2") (r "^0.4") (d #t) (k 0)) (d (n "quote") (r "^0.6") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "syn") (r "^0.15") (f (quote ("extra-traits"))) (d #t) (k 0)) (d (n "validator") (r "^0.8") (d #t) (k 0)))) (h "1sfkxi85kgykz3i4a7kfavp1m8ysh1akvyqlvb0w0wj9fpsxcq6k") (f (quote (("phone" "validator/phone") ("card" "validator/card"))))))

(define-public crate-validator_derive-0.9.0 (c (n "validator_derive") (v "0.9.0") (d (list (d (n "compiletest_rs") (r "^0.3") (d #t) (k 2)) (d (n "if_chain") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "proc-macro2") (r "^0.4") (d #t) (k 0)) (d (n "quote") (r "^0.6") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "syn") (r "^0.15") (f (quote ("extra-traits"))) (d #t) (k 0)) (d (n "validator") (r "^0.9") (d #t) (k 0)))) (h "0z59hjsykhmsk9y5q3qxqwcxl95gw1jk6jm7wfp0mpi4rxxdmjwk") (f (quote (("phone" "validator/phone") ("card" "validator/card"))))))

(define-public crate-validator_derive-0.10.0 (c (n "validator_derive") (v "0.10.0") (d (list (d (n "compiletest_rs") (r "^0.3") (d #t) (k 2)) (d (n "if_chain") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "syn") (r "^1") (f (quote ("extra-traits"))) (d #t) (k 0)) (d (n "validator") (r "^0.10") (d #t) (k 0)))) (h "1j8h9bnqwqb727fj47s0xab56yvjwm3i3aik721rn0650p6yjs76") (f (quote (("unic" "validator/unic") ("phone" "validator/phone") ("card" "validator/card"))))))

(define-public crate-validator_derive-0.10.1 (c (n "validator_derive") (v "0.10.1") (d (list (d (n "compiletest_rs") (r "^0.5") (d #t) (k 2)) (d (n "if_chain") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "syn") (r "^1") (f (quote ("extra-traits"))) (d #t) (k 0)) (d (n "validator") (r "^0.10") (d #t) (k 0)))) (h "03y2f9h3yp10r23sqjq6azpr4p4gnqcmlg851df0li59ikxpsmqd") (f (quote (("unic" "validator/unic") ("phone" "validator/phone") ("card" "validator/card"))))))

(define-public crate-validator_derive-0.11.0 (c (n "validator_derive") (v "0.11.0") (d (list (d (n "if_chain") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "proc-macro-error") (r "^1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "syn") (r "^1") (f (quote ("extra-traits"))) (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "validator_types") (r "^0.11") (d #t) (k 0)))) (h "0hdx6gp2pa0pd15fxnp68rqjrd51ais66smbf2qf531yb2cr0lhm") (f (quote (("unic" "validator_types/unic") ("phone" "validator_types/phone") ("card" "validator_types/card"))))))

(define-public crate-validator_derive-0.12.0 (c (n "validator_derive") (v "0.12.0") (d (list (d (n "if_chain") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "lazy_static") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "proc-macro-error") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "proc-macro2") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "quote") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "regex") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "syn") (r ">=1.0.0, <2.0.0") (f (quote ("extra-traits"))) (d #t) (k 0)) (d (n "validator_types") (r ">=0.12.0, <0.13.0") (d #t) (k 0)))) (h "0k8cvfm024mn4bxy64xnd66g3y6m178hmbl9d8kmj3r7gx4v91j2") (f (quote (("unic" "validator_types/unic") ("phone" "validator_types/phone") ("card" "validator_types/card"))))))

(define-public crate-validator_derive-0.13.0 (c (n "validator_derive") (v "0.13.0") (d (list (d (n "if_chain") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "proc-macro-error") (r "^1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("extra-traits"))) (d #t) (k 0)) (d (n "validator_types") (r "^0.12") (d #t) (k 0)))) (h "0m35l7ay251229345cn6xb1zn1xycwar148r4zj4r2g2azklzwb8") (f (quote (("unic" "validator_types/unic") ("phone" "validator_types/phone") ("card" "validator_types/card"))))))

(define-public crate-validator_derive-0.14.0 (c (n "validator_derive") (v "0.14.0") (d (list (d (n "if_chain") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "proc-macro-error") (r "^1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("extra-traits"))) (d #t) (k 0)) (d (n "validator_types") (r "^0.14") (d #t) (k 0)))) (h "1vky5f6cn6ifbvzy7x3vjww1lvr6d50p9c9y1fys24ds9mqkalfq") (f (quote (("unic" "validator_types/unic") ("phone" "validator_types/phone") ("card" "validator_types/card"))))))

(define-public crate-validator_derive-0.15.0 (c (n "validator_derive") (v "0.15.0") (d (list (d (n "if_chain") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "proc-macro-error") (r "^1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("extra-traits"))) (d #t) (k 0)) (d (n "validator_types") (r "^0.15") (d #t) (k 0)))) (h "08vr07anpvgc9i18hyxi4y9si22kl8fqbkn4lrjdssrbrzldazpa") (f (quote (("unic" "validator_types/unic") ("phone" "validator_types/phone") ("card" "validator_types/card"))))))

(define-public crate-validator_derive-0.16.0 (c (n "validator_derive") (v "0.16.0") (d (list (d (n "if_chain") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "proc-macro-error") (r "^1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("extra-traits"))) (d #t) (k 0)) (d (n "validator_types") (r "^0.16") (d #t) (k 0)))) (h "1bv4z03w569x0yiarg897vi6qrrslb341kxfv62a6fxvi0qcli5w") (f (quote (("unic" "validator_types/unic") ("phone" "validator_types/phone") ("card" "validator_types/card"))))))

(define-public crate-validator_derive-0.17.0 (c (n "validator_derive") (v "0.17.0") (d (list (d (n "darling") (r "^0.20") (f (quote ("suggestions"))) (d #t) (k 0)) (d (n "proc-macro-error") (r "^1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (k 0)) (d (n "syn") (r "^2") (d #t) (k 0)))) (h "0k32zq3d9g26i6il70sv3nk5807fq01jz2pz1cimjplg7fi8xs3n")))

(define-public crate-validator_derive-0.18.0 (c (n "validator_derive") (v "0.18.0") (d (list (d (n "darling") (r "^0.20") (f (quote ("suggestions"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "proc-macro-error") (r "^1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "syn") (r "^2") (d #t) (k 0)))) (h "06qwlvzim8g4bfqk7cil98i83qhlsqd945yxi6kac5calzb9p0n1")))

(define-public crate-validator_derive-0.18.1 (c (n "validator_derive") (v "0.18.1") (d (list (d (n "darling") (r "^0.20") (f (quote ("suggestions"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "proc-macro-error") (r "^1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "syn") (r "^2") (d #t) (k 0)))) (h "1v1q4jxqfsck6459xywk66fc2wknmy2acygbs4g5azq0nyci4nam")))

