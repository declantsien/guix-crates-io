(define-module (crates-io va li validator-set) #:use-module (crates-io))

(define-public crate-validator-set-0.0.0 (c (n "validator-set") (v "0.0.0") (h "05j178xggmpswq645fjwi7mb0524czri39g5vnl48g8g1qbgzxdk")))

(define-public crate-validator-set-0.1.0 (c (n "validator-set") (v "0.1.0") (d (list (d (n "call-contract") (r "^0.1.0") (d #t) (k 2) (p "vapcore-call-contract")) (d (n "client-traits") (r "^0.1.0") (d #t) (k 0)) (d (n "common-types") (r "^0.1.0") (d #t) (k 0)) (d (n "enjen") (r "^0.1.0") (d #t) (k 0)) (d (n "enjen") (r "^0.1.0") (f (quote ("test-helpers"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.6.2") (d #t) (k 2)) (d (n "executive-state") (r "^0.1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mashina") (r "^0.1.0") (d #t) (k 0)) (d (n "memory-cache") (r "^0.1.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "rustc-hex") (r "^1.0") (d #t) (k 2)) (d (n "tetsy-bytes") (r "^0.1.0") (d #t) (k 0)) (d (n "tetsy-crypto") (r "^0.4.2") (f (quote ("publickey"))) (d #t) (k 2)) (d (n "tetsy-keccak-hash") (r "^0.4.0") (d #t) (k 0)) (d (n "tetsy-keccak-hash") (r "^0.4.0") (d #t) (k 2)) (d (n "tetsy-kvdb") (r "^0.3.2") (d #t) (k 0)) (d (n "tetsy-rlp") (r "^0.4.5") (d #t) (k 0)) (d (n "tetsy-unexpected") (r "^0.1.0") (d #t) (k 0)) (d (n "tetsy-util-mem") (r "^0.3.0") (d #t) (k 0)) (d (n "tetsy-vm") (r "^0.1.0") (d #t) (k 0)) (d (n "triehash") (r "^0.2") (d #t) (k 0) (p "triehash-vapory")) (d (n "vapabi") (r "^9.0.1") (d #t) (k 0)) (d (n "vapabi-contract") (r "^9.0.0") (d #t) (k 0)) (d (n "vapabi-derive") (r "^9.0.1") (d #t) (k 0)) (d (n "vapjson") (r "^0.1.0") (d #t) (k 0)) (d (n "vapory-types") (r "^0.8.0") (d #t) (k 0)))) (h "182da76b7ki241mky2c5knsiyx6km6xjwdf674mscy9qhf7rls9p") (f (quote (("test-helpers"))))))

