(define-module (crates-io rp c- rpc-it) #:use-module (crates-io))

(define-public crate-rpc-it-0.0.0 (c (n "rpc-it") (v "0.0.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "enum-primitive-derive") (r "^0.2") (d #t) (k 0)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lockfree-object-pool") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typed-builder") (r "^0.12") (d #t) (k 0)))) (h "1b5qkzgk97cncrffmh5kb5jxriwbxriarwkpf65cgrj5fbq2n4hs") (y #t)))

(define-public crate-rpc-it-0.1.0 (c (n "rpc-it") (v "0.1.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-mutex") (r "^1.4") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "enum-primitive-derive") (r "^0.2") (d #t) (k 0)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "futures_ringbuf") (r "^0.3") (d #t) (k 2)) (d (n "lockfree-object-pool") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util"))) (o #t) (k 0)) (d (n "tokio-full") (r "^1") (f (quote ("full"))) (o #t) (d #t) (k 0) (p "tokio")) (d (n "typed-builder") (r "^0.12") (d #t) (k 0)))) (h "0i9k6jnqrwykdhzs4pfwfp3fvs4m26hbbdcz0xvimlk1bms0pqfh") (s 2) (e (quote (("tokio" "dep:tokio") ("futures" "dep:futures") ("dev-tokio-full" "dep:tokio-full"))))))

(define-public crate-rpc-it-0.2.0 (c (n "rpc-it") (v "0.2.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-mutex") (r "^1.4") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "enum-primitive-derive") (r "^0.2") (d #t) (k 0)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "futures_ringbuf") (r "^0.3") (d #t) (k 2)) (d (n "lockfree-object-pool") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "rmp") (r "^0.8") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util"))) (o #t) (k 0)) (d (n "tokio-full") (r "^1") (f (quote ("full"))) (o #t) (d #t) (k 0) (p "tokio")) (d (n "typed-builder") (r "^0.12") (d #t) (k 0)))) (h "1jahfnly8s17w2kpm2c6bl1rwy98wpk4glm443rq6bdyk1989snm") (f (quote (("id-128bit")))) (s 2) (e (quote (("tokio" "dep:tokio") ("futures" "dep:futures") ("dev-tokio-full" "dep:tokio-full"))))))

(define-public crate-rpc-it-0.3.0 (c (n "rpc-it") (v "0.3.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-mutex") (r "^1.4") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "enum-primitive-derive") (r "^0.2") (d #t) (k 0)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "futures_ringbuf") (r "^0.3") (d #t) (k 2)) (d (n "lockfree-object-pool") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "rmp") (r "^0.8") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util"))) (o #t) (k 0)) (d (n "tokio-full") (r "^1") (f (quote ("full"))) (o #t) (d #t) (k 0) (p "tokio")) (d (n "typed-builder") (r "^0.14") (d #t) (k 0)))) (h "1p70aic8kw4lawwgbw6jrvmdri3y0i1c1yfs3bgrin3yaq3mmscx") (f (quote (("id-128bit")))) (s 2) (e (quote (("tokio" "dep:tokio") ("futures" "dep:futures") ("dev-tokio-full" "dep:tokio-full"))))))

(define-public crate-rpc-it-0.3.1 (c (n "rpc-it") (v "0.3.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-mutex") (r "^1.4") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "enum-primitive-derive") (r "^0.2") (d #t) (k 0)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "futures_ringbuf") (r "^0.3") (d #t) (k 2)) (d (n "lockfree-object-pool") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "rmp") (r "^0.8") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util"))) (o #t) (k 0)) (d (n "tokio-full") (r "^1") (f (quote ("full"))) (o #t) (d #t) (k 0) (p "tokio")) (d (n "typed-builder") (r "^0.14") (d #t) (k 0)))) (h "0g3g5r7g2gjlzcsckp0s706g8jhk6jdrbkl0vlhn84lpln68pzc5") (f (quote (("id-128bit")))) (s 2) (e (quote (("tokio" "dep:tokio") ("futures" "dep:futures") ("dev-tokio-full" "dep:tokio-full"))))))

(define-public crate-rpc-it-0.3.2 (c (n "rpc-it") (v "0.3.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-mutex") (r "^1.4") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "enum-primitive-derive") (r "^0.2") (d #t) (k 0)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "futures_ringbuf") (r "^0.3") (d #t) (k 2)) (d (n "lockfree-object-pool") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "rmp") (r "^0.8") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util"))) (o #t) (k 0)) (d (n "tokio-full") (r "^1") (f (quote ("full"))) (o #t) (d #t) (k 0) (p "tokio")) (d (n "typed-builder") (r "^0.14") (d #t) (k 0)))) (h "1jh26j0pz0lskfc2lr96whhnhy61zdf96v32yaz99crm7wgn7mwx") (f (quote (("id-128bit")))) (s 2) (e (quote (("tokio" "dep:tokio") ("futures" "dep:futures") ("dev-tokio-full" "dep:tokio-full"))))))

(define-public crate-rpc-it-0.3.3 (c (n "rpc-it") (v "0.3.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-mutex") (r "^1.4") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "enum-primitive-derive") (r "^0.2") (d #t) (k 0)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "futures_ringbuf") (r "^0.3") (d #t) (k 2)) (d (n "lockfree-object-pool") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util"))) (o #t) (k 0)) (d (n "tokio-full") (r "^1") (f (quote ("full"))) (o #t) (d #t) (k 0) (p "tokio")) (d (n "typed-builder") (r "^0.14") (d #t) (k 0)))) (h "07yp9qyq46gvaggvm7kn83fr0xd9rx5kigwrprq23rjry8qp03gk") (f (quote (("id-128bit")))) (s 2) (e (quote (("tokio" "dep:tokio") ("futures" "dep:futures") ("dev-tokio-full" "dep:tokio-full"))))))

(define-public crate-rpc-it-0.3.4 (c (n "rpc-it") (v "0.3.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-mutex") (r "^1.4") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "enum-primitive-derive") (r "^0.2") (d #t) (k 0)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "futures_ringbuf") (r "^0.3") (d #t) (k 2)) (d (n "lockfree-object-pool") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util"))) (o #t) (k 0)) (d (n "tokio-full") (r "^1") (f (quote ("full"))) (o #t) (d #t) (k 0) (p "tokio")) (d (n "typed-builder") (r "^0.14") (d #t) (k 0)))) (h "1cf6n3c1nlsmr5nyib9m5642xwf8vg3439givvf8djfjajd54xxc") (f (quote (("id-128bit")))) (s 2) (e (quote (("tokio" "dep:tokio") ("futures" "dep:futures") ("dev-tokio-full" "dep:tokio-full"))))))

(define-public crate-rpc-it-0.4.0-alpha.1 (c (n "rpc-it") (v "0.4.0-alpha.1") (d (list (d (n "async-lock") (r "^2.7.0") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "capture-it") (r "^0.4.3") (d #t) (k 0)) (d (n "dashmap") (r "^5.5.0") (d #t) (k 0)) (d (n "derive_setters") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.6.0") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "flume") (r "^0.11") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (f (quote ("io" "sink"))) (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "rmp") (r "^0.8.12") (o #t) (d #t) (k 0)) (d (n "rmp-serde") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("io-util"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("test-util" "tokio-macros" "full"))) (d #t) (k 2)))) (h "1ab9fvy6ghx8s6gzny12318z5hxkba5lji54p06pahd9mnyx1iaa") (f (quote (("wasm-bindgen-ws") ("tokio-tungstenite" "tokio") ("macros") ("in-memory") ("default" "in-memory" "delim-framing" "json-framing" "macros")))) (y #t) (s 2) (e (quote (("tokio" "dep:tokio") ("msgpack-rpc" "dep:rmp" "dep:rmp-serde" "dep:derive_setters") ("jsonrpc" "dep:serde_json") ("json-framing" "dep:memchr") ("delim-framing" "dep:memchr"))))))

(define-public crate-rpc-it-0.4.0-alpha.2 (c (n "rpc-it") (v "0.4.0-alpha.2") (d (list (d (n "async-lock") (r "^2.7.0") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "capture-it") (r "^0.4.3") (d #t) (k 0)) (d (n "dashmap") (r "^5.5.0") (d #t) (k 0)) (d (n "derive_setters") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.6.0") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "flume") (r "^0.11") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (f (quote ("io" "sink"))) (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "rmp") (r "^0.8.12") (o #t) (d #t) (k 0)) (d (n "rmp-serde") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("io-util"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("test-util" "tokio-macros" "full"))) (d #t) (k 2)))) (h "118hhsi9z74n1gaf6x0f1shjhdbjs644vck5fnijsx7yxjrv54hw") (f (quote (("wasm-bindgen-ws") ("tokio-tungstenite" "tokio") ("macros") ("in-memory") ("default" "in-memory" "delim-framing" "json-framing" "macros")))) (y #t) (s 2) (e (quote (("tokio" "dep:tokio") ("msgpack-rpc" "dep:rmp" "dep:rmp-serde" "dep:derive_setters") ("jsonrpc" "dep:serde_json") ("json-framing" "dep:memchr") ("delim-framing" "dep:memchr"))))))

(define-public crate-rpc-it-0.4.0 (c (n "rpc-it") (v "0.4.0") (d (list (d (n "async-lock") (r "^2.7.0") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "capture-it") (r "^0.4.3") (d #t) (k 0)) (d (n "dashmap") (r "^5.5.0") (d #t) (k 0)) (d (n "derive_setters") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.6.0") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "flume") (r "^0.11") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (f (quote ("io" "sink"))) (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "rmp") (r "^0.8.12") (o #t) (d #t) (k 0)) (d (n "rmp-serde") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("io-util"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("test-util" "tokio-macros" "full"))) (d #t) (k 2)))) (h "00k4sc79ibd1a90k66azhy9jaw104d3s7wg2lmd7z0f1f8jnlhvv") (f (quote (("macros") ("in-memory") ("default" "in-memory" "delim-framing" "macros")))) (y #t) (s 2) (e (quote (("tokio" "dep:tokio") ("msgpack-rpc" "dep:rmp" "dep:rmp-serde" "dep:derive_setters") ("jsonrpc" "dep:serde_json") ("delim-framing" "dep:memchr"))))))

(define-public crate-rpc-it-0.4.1 (c (n "rpc-it") (v "0.4.1") (d (list (d (n "async-lock") (r "^2.7.0") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "capture-it") (r "^0.4.3") (d #t) (k 0)) (d (n "dashmap") (r "^5.5.0") (d #t) (k 0)) (d (n "derive_setters") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.6.0") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "flume") (r "^0.11") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (f (quote ("io" "sink"))) (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "rmp") (r "^0.8.12") (o #t) (d #t) (k 0)) (d (n "rmp-serde") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("io-util"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("test-util" "tokio-macros" "full"))) (d #t) (k 2)))) (h "1qz6vxr0xnbgkfzzpr49vnnx6qqnb7ixva3n2ryhj991x3v7662g") (f (quote (("service-macros" "service") ("service") ("macros") ("in-memory") ("default" "in-memory" "delim-framing" "macros")))) (y #t) (s 2) (e (quote (("tokio" "dep:tokio") ("msgpack-rpc" "dep:rmp" "dep:rmp-serde" "dep:derive_setters") ("jsonrpc" "dep:serde_json") ("delim-framing" "dep:memchr"))))))

(define-public crate-rpc-it-0.4.2 (c (n "rpc-it") (v "0.4.2") (d (list (d (n "async-lock") (r "^2.7.0") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "capture-it") (r "^0.4.3") (d #t) (k 0)) (d (n "dashmap") (r "^5.5.0") (d #t) (k 0)) (d (n "derive_setters") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.6.0") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "flume") (r "^0.11") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (f (quote ("io" "sink"))) (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "rmp") (r "^0.8.12") (o #t) (d #t) (k 0)) (d (n "rmp-serde") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "rpc-it-macros") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("io-util"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("test-util" "tokio-macros" "full"))) (d #t) (k 2)))) (h "0w7m342cglpf7czg8jyaz73d6pq282n662p9q0i67fj2sqkmgp33") (f (quote (("service") ("macros") ("in-memory") ("default" "in-memory" "delim-framing" "macros" "service-macros")))) (y #t) (s 2) (e (quote (("tokio" "dep:tokio") ("service-macros" "service" "dep:rpc-it-macros") ("msgpack-rpc" "dep:rmp" "dep:rmp-serde" "dep:derive_setters") ("jsonrpc" "dep:serde_json") ("delim-framing" "dep:memchr"))))))

(define-public crate-rpc-it-0.4.3 (c (n "rpc-it") (v "0.4.3") (d (list (d (n "async-lock") (r "^2.7.0") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "capture-it") (r "^0.4.3") (d #t) (k 0)) (d (n "dashmap") (r "^5.5.0") (d #t) (k 0)) (d (n "derive_setters") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.6.0") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "flume") (r "^0.11") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (f (quote ("io" "sink"))) (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "rmp") (r "^0.8.12") (o #t) (d #t) (k 0)) (d (n "rmp-serde") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "rpc-it-macros") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("io-util"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("test-util" "tokio-macros" "full"))) (d #t) (k 2)))) (h "1hx24i1hs930v0y8mdr009ygmq465h0lfsr5vk5lzmdk295g6l92") (f (quote (("service") ("macros") ("in-memory") ("default" "in-memory" "delim-framing" "macros" "service-macros")))) (s 2) (e (quote (("tokio" "dep:tokio") ("service-macros" "service" "dep:rpc-it-macros") ("msgpack-rpc" "dep:rmp" "dep:rmp-serde" "dep:derive_setters") ("jsonrpc" "dep:serde_json") ("delim-framing" "dep:memchr"))))))

(define-public crate-rpc-it-0.5.0 (c (n "rpc-it") (v "0.5.0") (d (list (d (n "async-lock") (r "^2.7.0") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "capture-it") (r "^0.4.3") (d #t) (k 0)) (d (n "dashmap") (r "^5.5.0") (d #t) (k 0)) (d (n "derive_setters") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.6.0") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "flume") (r "^0.11") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (f (quote ("io" "sink"))) (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "rmp") (r "^0.8.12") (o #t) (d #t) (k 0)) (d (n "rmp-serde") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "rpc-it-macros") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("io-util"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("test-util" "tokio-macros" "full"))) (d #t) (k 2)))) (h "1vhxvzkqmi0zd57r4flrcnsgkkfklwd4z6iwf45i9n6fj3m93vrb") (f (quote (("service") ("macros") ("in-memory") ("default" "in-memory" "delim-framing" "macros" "service-macros")))) (y #t) (s 2) (e (quote (("tokio" "dep:tokio") ("service-macros" "service" "dep:rpc-it-macros") ("msgpack-rpc" "dep:rmp" "dep:rmp-serde" "dep:derive_setters") ("jsonrpc" "dep:serde_json") ("delim-framing" "dep:memchr"))))))

(define-public crate-rpc-it-0.5.1 (c (n "rpc-it") (v "0.5.1") (d (list (d (n "async-lock") (r "^2.7.0") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "capture-it") (r "^0.4.3") (d #t) (k 0)) (d (n "dashmap") (r "^5.5.0") (d #t) (k 0)) (d (n "derive_setters") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.6.0") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "flume") (r "^0.11") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (f (quote ("io" "sink"))) (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "rmp") (r "^0.8.12") (o #t) (d #t) (k 0)) (d (n "rmp-serde") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "rpc-it-macros") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("io-util"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("test-util" "tokio-macros" "full"))) (d #t) (k 2)))) (h "13hxk1ff51grz32i8kaqcwkpnn4pj8h59jdiy28wb5acp18l0043") (f (quote (("service") ("macros") ("in-memory") ("default" "in-memory" "delim-framing" "macros" "service-macros")))) (y #t) (s 2) (e (quote (("tokio" "dep:tokio") ("service-macros" "service" "dep:rpc-it-macros") ("msgpack-rpc" "dep:rmp" "dep:rmp-serde" "dep:derive_setters") ("jsonrpc" "dep:serde_json") ("delim-framing" "dep:memchr"))))))

(define-public crate-rpc-it-0.5.2 (c (n "rpc-it") (v "0.5.2") (d (list (d (n "async-lock") (r "^2.7.0") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "capture-it") (r "^0.4.3") (d #t) (k 0)) (d (n "dashmap") (r "^5.5.0") (d #t) (k 0)) (d (n "derive_setters") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.6.0") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "flume") (r "^0.11") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (f (quote ("io" "sink"))) (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "rmp") (r "^0.8.12") (o #t) (d #t) (k 0)) (d (n "rmp-serde") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "rpc-it-macros") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("io-util"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("test-util" "tokio-macros" "full"))) (d #t) (k 2)))) (h "1x5xl95s1xf24wiw3y4asd4zbi839bmf055s12arpfn3vihyp8c7") (f (quote (("service") ("macros") ("in-memory") ("default" "in-memory" "delim-framing" "macros" "service-macros")))) (y #t) (s 2) (e (quote (("tokio" "dep:tokio") ("service-macros" "service" "dep:rpc-it-macros") ("msgpack-rpc" "dep:rmp" "dep:rmp-serde" "dep:derive_setters") ("jsonrpc" "dep:serde_json") ("delim-framing" "dep:memchr"))))))

(define-public crate-rpc-it-0.5.3 (c (n "rpc-it") (v "0.5.3") (d (list (d (n "async-lock") (r "^2.7.0") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "capture-it") (r "^0.4.3") (d #t) (k 0)) (d (n "dashmap") (r "^5.5.0") (d #t) (k 0)) (d (n "derive_setters") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.6.0") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "flume") (r "^0.11") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (f (quote ("io" "sink"))) (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "rmp") (r "^0.8.12") (o #t) (d #t) (k 0)) (d (n "rmp-serde") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "rpc-it-macros") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("io-util"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("test-util" "tokio-macros" "full"))) (d #t) (k 2)))) (h "1sanc1qvc38xnhbjqkadfwxpxshbg9k681wsbv3ws97lc2zgvb3g") (f (quote (("service") ("macros") ("in-memory") ("default" "in-memory" "delim-framing" "macros" "service-macros")))) (s 2) (e (quote (("tokio" "dep:tokio") ("service-macros" "service" "dep:rpc-it-macros") ("msgpack-rpc" "dep:rmp" "dep:rmp-serde" "dep:derive_setters") ("jsonrpc" "dep:serde_json") ("delim-framing" "dep:memchr"))))))

(define-public crate-rpc-it-0.10.0-alpha.1 (c (n "rpc-it") (v "0.10.0-alpha.1") (d (list (d (n "anyhow") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.79") (d #t) (k 2)) (d (n "assert") (r "^1.1.0") (d #t) (k 0) (p "static_assertions")) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.6.0") (d #t) (k 2)) (d (n "erased-serde") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.3") (d #t) (k 0)) (d (n "mpsc") (r "^2") (d #t) (k 0) (p "async-channel")) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "postcard") (r "^1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rmp") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rmp-serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "rpc-it-macros") (r "^0.10.0-alpha.1") (o #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "085vq5s0b7pwcc984439374sa37b7xm5n91b4d6vaaffy7dvdm2a") (f (quote (("full" "jsonrpc" "msgpack-rpc" "dynamic-codec" "in-memory-io" "rawrpc") ("default" "proc-macro" "detailed-parse-errors")))) (s 2) (e (quote (("rawrpc" "dep:postcard") ("proc-macro" "dep:rpc-it-macros") ("msgpack-rpc" "dep:rmp" "dep:rmp-serde") ("jsonrpc" "dep:serde_json") ("in-memory-io" "dep:crossbeam-queue") ("dynamic-codec" "dep:erased-serde") ("detailed-parse-errors" "dep:anyhow"))))))

