(define-module (crates-io rp pa rppal) #:use-module (crates-io))

(define-public crate-rppal-0.1.0 (c (n "rppal") (v "0.1.0") (d (list (d (n "enum_primitive") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "num") (r "^0.1") (k 0)) (d (n "quick-error") (r "^1.1") (d #t) (k 0)))) (h "12jp3lkm5yjrd1kqn2bnai5db15a0m1ls0kryw9d2a2qdkvvsxvn")))

(define-public crate-rppal-0.1.1 (c (n "rppal") (v "0.1.1") (d (list (d (n "enum_primitive") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "num") (r "^0.1") (k 0)) (d (n "quick-error") (r "^1.1") (d #t) (k 0)))) (h "0r46x90kidi8q9lb4x63jpzwii0xgvg5sn0qvwq2y4wrf1jyjc84")))

(define-public crate-rppal-0.1.2 (c (n "rppal") (v "0.1.2") (d (list (d (n "enum_primitive") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "num") (r "^0.1") (k 0)) (d (n "quick-error") (r "^1.1") (d #t) (k 0)))) (h "1yswxngpwvkrbkfq5yj0ysgls9vj6x854ll3kvszy7188wd0dl7j")))

(define-public crate-rppal-0.1.3 (c (n "rppal") (v "0.1.3") (d (list (d (n "enum_primitive") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "num") (r "^0.1") (k 0)) (d (n "quick-error") (r "^1.1") (d #t) (k 0)))) (h "0bcwqc172jxxhf5rvib8i7dwr9zxal486rxcminrfbwpjksrr99d")))

(define-public crate-rppal-0.2.0 (c (n "rppal") (v "0.2.0") (d (list (d (n "enum_primitive") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "num") (r "^0.1") (k 0)) (d (n "quick-error") (r "^1.1") (d #t) (k 0)))) (h "1q8dwdsdp3vg0qnq8r2lg271wm04zxdiygrlm79v7xykd1a41d3k")))

(define-public crate-rppal-0.3.0 (c (n "rppal") (v "0.3.0") (d (list (d (n "enum_primitive") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "num") (r "^0.1") (k 0)) (d (n "quick-error") (r "^1.1") (d #t) (k 0)))) (h "0xaff6gcpvjayv8jfzxl4wmh825yq12wkcawj50n070xamhfg8yh")))

(define-public crate-rppal-0.4.0 (c (n "rppal") (v "0.4.0") (d (list (d (n "enum_primitive") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "num") (r "^0.1") (k 0)) (d (n "quick-error") (r "^1.1") (d #t) (k 0)))) (h "1zqcx9zljh3884jm26l77jv0ib612b2ys8la2n5ii3vdwxqi68s2")))

(define-public crate-rppal-0.5.0 (c (n "rppal") (v "0.5.0") (d (list (d (n "enum_primitive") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "mio-extras") (r "^2.0") (d #t) (k 0)) (d (n "num") (r "^0.1") (k 0)) (d (n "quick-error") (r "^1.1") (d #t) (k 0)) (d (n "users") (r "^0.6") (d #t) (k 0)))) (h "0svgvf2939d511j6245qzin8icsri0qmj66rsd8aw2dc4w2x7sr4")))

(define-public crate-rppal-0.5.1 (c (n "rppal") (v "0.5.1") (d (list (d (n "enum_primitive") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "mio-extras") (r "^2.0") (d #t) (k 0)) (d (n "num") (r "^0.1") (k 0)) (d (n "quick-error") (r "^1.1") (d #t) (k 0)) (d (n "users") (r "^0.6") (d #t) (k 0)))) (h "0iaq45dh6zjnqilhihvhpg55wrqis611dhlycpkn64y6j0b7gkl4")))

(define-public crate-rppal-0.6.0 (c (n "rppal") (v "0.6.0") (d (list (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "mio-extras") (r "^2.0") (d #t) (k 0)) (d (n "quick-error") (r "^1.1") (d #t) (k 0)))) (h "1z2ppv6mr84c30i3zzvgsnjx4xdc4ddfdjzpjipgnl2f159d8q28")))

(define-public crate-rppal-0.7.0 (c (n "rppal") (v "0.7.0") (d (list (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "quick-error") (r "^1.1") (d #t) (k 0)))) (h "0lxcw7mfnz903650saxyvqm20g9svvl9dizl73s03m0hs5ydzgpq")))

(define-public crate-rppal-0.7.1 (c (n "rppal") (v "0.7.1") (d (list (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "quick-error") (r "^1.1") (d #t) (k 0)))) (h "08waijc673s28i0i91227fxvi5bsjd67i3j3naxdd6i2aqnimjif")))

(define-public crate-rppal-0.8.0 (c (n "rppal") (v "0.8.0") (d (list (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "quick-error") (r "^1.1") (d #t) (k 0)))) (h "1fnrxlrvx683z6shv1vcmfxxc37k6f1plpbq2fjp92scbqg01sw1")))

(define-public crate-rppal-0.8.1 (c (n "rppal") (v "0.8.1") (d (list (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "quick-error") (r "^1.1") (d #t) (k 0)))) (h "0y0qcmiwwarf7agkia1vwdxsc56xcawv5x1b5ar7fxny4laiy26z")))

(define-public crate-rppal-0.9.0 (c (n "rppal") (v "0.9.0") (d (list (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "quick-error") (r "^1.1") (d #t) (k 0)))) (h "0l1n5laisgiddz073bmphm2pl927bysg2yic0g8bkzc7gd5xym0i")))

(define-public crate-rppal-0.10.0 (c (n "rppal") (v "0.10.0") (d (list (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "simple-signal") (r "^1.1") (d #t) (k 2)))) (h "1v4nxrzqq6w61bdjfcr59s23is9na3pw6pk3jj61r6whcy9rr66n")))

(define-public crate-rppal-0.11.0 (c (n "rppal") (v "0.11.0") (d (list (d (n "embedded-hal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nb") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "simple-signal") (r "^1.1") (d #t) (k 2)))) (h "0ajq3jdwb2wwk469d8v9mcp8h2qxv2wfg6pp63pnrq55lpkjlqna") (f (quote (("hal" "nb" "embedded-hal") ("default"))))))

(define-public crate-rppal-0.11.1 (c (n "rppal") (v "0.11.1") (d (list (d (n "embedded-hal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nb") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "simple-signal") (r "^1.1") (d #t) (k 2)))) (h "001vvhccqrlb4l44sbciw4gzrzwcxvw1ahrxgzs94aagsc4kxyj7") (f (quote (("hal" "nb" "embedded-hal") ("default"))))))

(define-public crate-rppal-0.11.2 (c (n "rppal") (v "0.11.2") (d (list (d (n "embedded-hal") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.50") (d #t) (k 0)) (d (n "nb") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "simple-signal") (r "^1.1.1") (d #t) (k 2)) (d (n "void") (r "^1.0.2") (o #t) (d #t) (k 0)))) (h "0gwfyrz5g4m4lyyp0plfad1x3nlvzlw2hw6adfayv1wdk9089009") (f (quote (("hal-unproven" "nb" "embedded-hal/unproven" "hal") ("hal" "nb" "void" "embedded-hal") ("default"))))))

(define-public crate-rppal-0.11.3 (c (n "rppal") (v "0.11.3") (d (list (d (n "embedded-hal") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.50") (d #t) (k 0)) (d (n "nb") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "simple-signal") (r "^1.1.1") (d #t) (k 2)) (d (n "void") (r "^1.0.2") (o #t) (d #t) (k 0)))) (h "1qfvdn299f8rjg7k9w2i2mdbp9dw25mcvhx4rlkslzc6zfhvnz8k") (f (quote (("hal-unproven" "nb" "embedded-hal/unproven" "hal") ("hal" "nb" "void" "embedded-hal") ("default"))))))

(define-public crate-rppal-0.12.0 (c (n "rppal") (v "0.12.0") (d (list (d (n "embedded-hal") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.50") (d #t) (k 0)) (d (n "nb") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "simple-signal") (r "^1.1.1") (d #t) (k 2)) (d (n "void") (r "^1.0.2") (o #t) (d #t) (k 0)))) (h "070j4312kx2fh3hh8wmk6s73hx8z4pj6kxdfyjr3fj0vi267a9pb") (f (quote (("hal-unproven" "nb" "embedded-hal/unproven" "hal") ("hal" "nb" "void" "embedded-hal") ("default"))))))

(define-public crate-rppal-0.13.0 (c (n "rppal") (v "0.13.0") (d (list (d (n "embedded-hal") (r "=1.0.0-alpha.5") (o #t) (d #t) (k 0)) (d (n "embedded-hal-0") (r "^0.2.6") (o #t) (d #t) (k 0) (p "embedded-hal")) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.50") (d #t) (k 0)) (d (n "nb") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "simple-signal") (r "^1.1.1") (d #t) (k 2)) (d (n "spin_sleep") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0.2") (o #t) (d #t) (k 0)))) (h "0y9n681whm9biv35hr7wl4wqbq0y0qq8z8sabdj09qvsicdd099j") (f (quote (("hal-unproven" "nb" "embedded-hal-0/unproven" "hal") ("hal" "nb" "embedded-hal" "embedded-hal-0" "spin_sleep" "void") ("default"))))))

(define-public crate-rppal-0.13.1 (c (n "rppal") (v "0.13.1") (d (list (d (n "embedded-hal") (r "=1.0.0-alpha.5") (o #t) (d #t) (k 0)) (d (n "embedded-hal-0") (r "^0.2.6") (o #t) (d #t) (k 0) (p "embedded-hal")) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.50") (d #t) (k 0)) (d (n "nb") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "simple-signal") (r "^1.1.1") (d #t) (k 2)) (d (n "spin_sleep") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0.2") (o #t) (d #t) (k 0)))) (h "0kxx1fd1hgw3k1wvj8fwhy5g8ph5f7vdh6dn8xvk6kfy91i9r368") (f (quote (("hal-unproven" "nb" "embedded-hal-0/unproven" "hal") ("hal" "nb" "embedded-hal" "embedded-hal-0" "spin_sleep" "void") ("default"))))))

(define-public crate-rppal-0.14.0 (c (n "rppal") (v "0.14.0") (d (list (d (n "embedded-hal") (r "=1.0.0-alpha.9") (o #t) (d #t) (k 0)) (d (n "embedded-hal-0") (r "^0.2.7") (o #t) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-hal-nb") (r "=1.0.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nb") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "simple-signal") (r "^1.1.1") (d #t) (k 2)) (d (n "spin_sleep") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0.2") (o #t) (d #t) (k 0)))) (h "1d6s0r2dnymxqhjs8pijmqg1i06ahp375j4yc6fddjk7rh7r1xdn") (f (quote (("hal-unproven" "nb" "embedded-hal-0/unproven" "hal") ("hal" "nb" "embedded-hal" "embedded-hal-nb" "embedded-hal-0" "spin_sleep" "void") ("default")))) (r "1.56")))

(define-public crate-rppal-0.14.1 (c (n "rppal") (v "0.14.1") (d (list (d (n "embedded-hal") (r "=1.0.0-alpha.9") (o #t) (d #t) (k 0)) (d (n "embedded-hal-0") (r "^0.2.7") (o #t) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-hal-nb") (r "=1.0.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nb") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "simple-signal") (r "^1.1.1") (d #t) (k 2)) (d (n "spin_sleep") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0.2") (o #t) (d #t) (k 0)))) (h "1fnahf3cqcy4ry6gi7kws11swwxpabz36r3wcm3a420zw8i1lbk1") (f (quote (("hal-unproven" "nb" "embedded-hal-0/unproven" "hal") ("hal" "nb" "embedded-hal" "embedded-hal-nb" "embedded-hal-0" "spin_sleep" "void") ("default")))) (r "1.56")))

(define-public crate-rppal-0.15.0 (c (n "rppal") (v "0.15.0") (d (list (d (n "embedded-hal") (r "=1.0.0-alpha.9") (o #t) (d #t) (k 0)) (d (n "embedded-hal-0") (r "^0.2.7") (o #t) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-hal-nb") (r "=1.0.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nb") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "simple-signal") (r "^1.1.1") (d #t) (k 2)) (d (n "spin_sleep") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0.2") (o #t) (d #t) (k 0)))) (h "0g25p5sz57azc58czi8c5gz7q01r9xx5y5bpi68qk70vkssm6ll1") (f (quote (("hal-unproven" "nb" "embedded-hal-0/unproven" "hal") ("hal" "nb" "embedded-hal" "embedded-hal-nb" "embedded-hal-0" "spin_sleep" "void") ("default")))) (r "1.56")))

(define-public crate-rppal-0.16.0 (c (n "rppal") (v "0.16.0") (d (list (d (n "embedded-hal") (r "=1.0.0-rc.2") (o #t) (d #t) (k 0)) (d (n "embedded-hal-0") (r "^0.2.7") (o #t) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-hal-nb") (r "=1.0.0-rc.2") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nb") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "simple-signal") (r "^1.1.1") (d #t) (k 2)) (d (n "spin_sleep") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0.2") (o #t) (d #t) (k 0)))) (h "1cwi426bmzq2qvwrmdnzjv9szaz23psfkfq11070n3kv2wpggbr3") (f (quote (("hal-unproven" "nb" "embedded-hal-0/unproven" "hal") ("hal" "nb" "embedded-hal" "embedded-hal-nb" "embedded-hal-0" "spin_sleep" "void") ("default")))) (r "1.60")))

(define-public crate-rppal-0.16.1 (c (n "rppal") (v "0.16.1") (d (list (d (n "embedded-hal") (r "=1.0.0-rc.2") (o #t) (d #t) (k 0)) (d (n "embedded-hal-0") (r "^0.2.7") (o #t) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-hal-nb") (r "=1.0.0-rc.2") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nb") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "simple-signal") (r "^1.1.1") (d #t) (k 2)) (d (n "spin_sleep") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0.2") (o #t) (d #t) (k 0)))) (h "0jjfs6d28rdkab8ac13x9yw61w6jwm37dimwnrmj81sbzrwnn4wd") (f (quote (("hal-unproven" "nb" "embedded-hal-0/unproven" "hal") ("hal" "nb" "embedded-hal" "embedded-hal-nb" "embedded-hal-0" "spin_sleep" "void") ("default")))) (r "1.60")))

(define-public crate-rppal-0.17.0 (c (n "rppal") (v "0.17.0") (d (list (d (n "embedded-hal") (r "^1") (o #t) (d #t) (k 0)) (d (n "embedded-hal-0") (r "^0.2.7") (o #t) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-hal-nb") (r "^1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nb") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "simple-signal") (r "^1.1.1") (d #t) (k 2)) (d (n "spin_sleep") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0.2") (o #t) (d #t) (k 0)))) (h "1zf5ylw8n3cq457ygdhndh76wfwlnw7fz25lj23ilgjzklhgl47s") (f (quote (("hal-unproven" "embedded-hal-0/unproven" "hal") ("hal" "embedded-hal-0" "embedded-hal" "embedded-hal-nb") ("default")))) (s 2) (e (quote (("embedded-hal-nb" "dep:embedded-hal-nb" "embedded-hal") ("embedded-hal-0" "dep:embedded-hal-0" "dep:void" "embedded-hal-nb" "nb") ("embedded-hal" "dep:embedded-hal" "dep:spin_sleep")))) (r "1.60")))

(define-public crate-rppal-0.17.1 (c (n "rppal") (v "0.17.1") (d (list (d (n "embedded-hal") (r "^1") (o #t) (d #t) (k 0)) (d (n "embedded-hal-0") (r "^0.2.7") (o #t) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-hal-nb") (r "^1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nb") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "simple-signal") (r "^1.1.1") (d #t) (k 2)) (d (n "spin_sleep") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0.2") (o #t) (d #t) (k 0)))) (h "0c8k3i6blqixdcfvpylzznnva7ygq9c7r4cdw5r43c15wfxp3h8x") (f (quote (("hal-unproven" "embedded-hal-0/unproven" "hal") ("hal" "embedded-hal-0" "embedded-hal" "embedded-hal-nb") ("default")))) (s 2) (e (quote (("embedded-hal-nb" "dep:embedded-hal-nb" "embedded-hal") ("embedded-hal-0" "dep:embedded-hal-0" "dep:void" "embedded-hal-nb" "nb") ("embedded-hal" "dep:embedded-hal" "dep:spin_sleep")))) (r "1.60")))

(define-public crate-rppal-0.18.0 (c (n "rppal") (v "0.18.0") (d (list (d (n "embedded-hal") (r "^1") (o #t) (d #t) (k 0)) (d (n "embedded-hal-0") (r "^0.2.7") (o #t) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-hal-nb") (r "^1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nb") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "simple-signal") (r "^1.1.1") (d #t) (k 2)) (d (n "spin_sleep") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0.2") (o #t) (d #t) (k 0)))) (h "1ff56n46agq06rz3yyq75ha3nlywm5ibc8jdh13q12fhkdvxni5f") (f (quote (("hal-unproven" "embedded-hal-0/unproven" "hal") ("hal" "embedded-hal-0" "embedded-hal" "embedded-hal-nb") ("default")))) (s 2) (e (quote (("embedded-hal-nb" "dep:embedded-hal-nb" "embedded-hal") ("embedded-hal-0" "dep:embedded-hal-0" "dep:void" "embedded-hal-nb" "nb") ("embedded-hal" "dep:embedded-hal" "dep:spin_sleep")))) (r "1.60")))

