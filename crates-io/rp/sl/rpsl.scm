(define-module (crates-io rp sl rpsl) #:use-module (crates-io))

(define-public crate-rpsl-0.1.0-alpha.1 (c (n "rpsl") (v "0.1.0-alpha.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ipnet") (r "^2.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nom") (r "^7.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1") (d #t) (k 0)) (d (n "proptest") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)))) (h "0i9bbavia6wxnihr2f8z4ws5ln9ql77q5k6cw2dk2jvhgv8pxc55") (f (quote (("arbitrary" "proptest" "regex"))))))

(define-public crate-rpsl-0.1.0-rc.1 (c (n "rpsl") (v "0.1.0-rc.1") (d (list (d (n "generic-ip") (r "^0.1.0-rc.2") (d #t) (k 0)) (d (n "generic-ip") (r "^0.1.0-rc.2") (f (quote ("arbitrary"))) (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "paste") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1") (d #t) (k 0)) (d (n "proptest") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "strum") (r "^0.21") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "parsing" "macros"))) (d #t) (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)))) (h "0iizm4zpy2lnff043cwsqcys3hbcbxjhg35mha5kw4pjlf9h3571") (f (quote (("arbitrary" "paste" "proptest" "regex" "generic-ip/arbitrary"))))))

(define-public crate-rpsl-0.1.0-rc.2 (c (n "rpsl") (v "0.1.0-rc.2") (d (list (d (n "generic-ip") (r "^0.1.0") (d #t) (k 0)) (d (n "generic-ip") (r "^0.1.0") (f (quote ("arbitrary"))) (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "paste") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1") (d #t) (k 0)) (d (n "proptest") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "strum") (r "^0.26") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "parsing" "macros"))) (d #t) (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)))) (h "0mgznzkz6v7i790bcyfpncrd8q2a7fnjm0p1qzil4h4crgrhrckc") (f (quote (("arbitrary" "paste" "proptest" "regex" "generic-ip/arbitrary"))))))

(define-public crate-rpsl-0.1.0 (c (n "rpsl") (v "0.1.0") (d (list (d (n "generic-ip") (r "^0.1.0") (d #t) (k 0)) (d (n "generic-ip") (r "^0.1.0") (f (quote ("arbitrary"))) (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "paste") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1") (d #t) (k 0)) (d (n "proptest") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "strum") (r "^0.26") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "parsing" "macros"))) (d #t) (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)))) (h "00ic0qr3nd174idw2b7zsanwx0kxd0cggzv7nn7g2cp0wy7xf0v9") (f (quote (("arbitrary" "paste" "proptest" "regex" "generic-ip/arbitrary"))))))

(define-public crate-rpsl-0.1.1 (c (n "rpsl") (v "0.1.1") (d (list (d (n "generic-ip") (r "^0.1") (d #t) (k 0)) (d (n "generic-ip") (r "^0.1") (f (quote ("arbitrary"))) (d #t) (k 2)) (d (n "paste") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1") (d #t) (k 0)) (d (n "proptest") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 2)) (d (n "strum") (r "^0.26") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "parsing" "macros"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)))) (h "1n3s47i5dsgl2jgl999szd3qxrq55xbkhp9n13y2qqlirpdhfsrc") (f (quote (("arbitrary" "paste" "proptest" "regex" "generic-ip/arbitrary"))))))

