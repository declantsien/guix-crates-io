(define-module (crates-io fo ur four-bar) #:use-module (crates-io))

(define-public crate-four-bar-0.1.0 (c (n "four-bar") (v "0.1.0") (d (list (d (n "efd") (r "^0.5.3") (d #t) (k 0)) (d (n "indicatif") (r "^0.16") (d #t) (k 2)) (d (n "metaheuristics-nature") (r "^0.16") (f (quote ("parallel"))) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "plotters") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "0k1nzywcvjps4vvalkm7cbglh8d3rqg3q6lwwi63x3kl3db6b3pj")))

(define-public crate-four-bar-0.2.0 (c (n "four-bar") (v "0.2.0") (d (list (d (n "efd") (r "^0.5.3") (d #t) (k 0)) (d (n "indicatif") (r "^0.16") (d #t) (k 2)) (d (n "metaheuristics-nature") (r "^0.17") (f (quote ("parallel"))) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "plotters") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "16g2h7nq7iga7870zjgx46bd3b1wk307q2gbxy614i3rxdcq7407")))

(define-public crate-four-bar-0.3.0 (c (n "four-bar") (v "0.3.0") (d (list (d (n "efd") (r "^0.6") (d #t) (k 0)) (d (n "indicatif") (r "^0.16") (d #t) (k 2)) (d (n "metaheuristics-nature") (r "^0.21") (f (quote ("parallel"))) (d #t) (k 0)) (d (n "plotters") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "ron") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "0skbygaara9cyq9gv7n73bhj35h3x619fa94m7dljmirbw4knz12")))

(define-public crate-four-bar-0.4.0 (c (n "four-bar") (v "0.4.0") (d (list (d (n "efd") (r "^0.11") (d #t) (k 0)) (d (n "indicatif") (r "^0.16") (d #t) (k 2)) (d (n "metaheuristics-nature") (r "^0.23") (f (quote ("parallel"))) (d #t) (k 0)) (d (n "plotly") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "ron") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "1gjppdh4fxib2sy6ix9garcqkj2j6dvcyaxf19in9xzg6gswr2qr") (f (quote (("plot_export" "plot" "plotly/kaleido") ("plot" "plotly"))))))

(define-public crate-four-bar-0.4.1 (c (n "four-bar") (v "0.4.1") (d (list (d (n "efd") (r "^0.11") (d #t) (k 0)) (d (n "indicatif") (r "^0.16") (d #t) (k 2)) (d (n "metaheuristics-nature") (r "^0.23") (f (quote ("parallel"))) (d #t) (k 0)) (d (n "plotly") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "ron") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "1ymn1im1w0zn27bd8s0g66kc4xli8wag40sl6bjnwq3six7wb5gb") (f (quote (("plot_export" "plot" "plotly/kaleido") ("plot" "plotly"))))))

(define-public crate-four-bar-0.5.0 (c (n "four-bar") (v "0.5.0") (d (list (d (n "efd") (r "^0.11") (d #t) (k 0)) (d (n "indicatif") (r "^0.16") (d #t) (k 2)) (d (n "metaheuristics-nature") (r "^0.23") (f (quote ("parallel"))) (d #t) (k 0)) (d (n "plotly") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "ron") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "0kf0iqp6ayqarm54220qy5f93rwinjark5lc8qsf82n29lp983pb") (f (quote (("plot_export" "plot" "plotly/kaleido") ("plot" "plotly"))))))

(define-public crate-four-bar-0.5.1 (c (n "four-bar") (v "0.5.1") (d (list (d (n "efd") (r "^0.11") (d #t) (k 0)) (d (n "indicatif") (r "^0.16") (d #t) (k 2)) (d (n "metaheuristics-nature") (r "^0.23") (f (quote ("parallel"))) (d #t) (k 0)) (d (n "plotly") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "ron") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "0cpypq5m8v89xsl3iyl5k74n5n4g5vvv528ci0amqiiq3h92nzkx") (f (quote (("plot_export" "plot" "plotly/kaleido") ("plot" "plotly"))))))

(define-public crate-four-bar-0.6.0 (c (n "four-bar") (v "0.6.0") (d (list (d (n "efd") (r "^0.11") (d #t) (k 0)) (d (n "indicatif") (r "^0.16") (d #t) (k 2)) (d (n "metaheuristics-nature") (r "^0.23") (f (quote ("parallel"))) (d #t) (k 0)) (d (n "plotly") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "ron") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "1qwja0lizj97kp8751j1bi8x28w7c4iz1arnbddsd6pd05g9ps70") (f (quote (("plot_export" "plot" "plotly/kaleido") ("plot" "plotly"))))))

(define-public crate-four-bar-0.6.1 (c (n "four-bar") (v "0.6.1") (d (list (d (n "efd") (r "^0.11") (d #t) (k 0)) (d (n "indicatif") (r "^0.16") (d #t) (k 2)) (d (n "metaheuristics-nature") (r "^0.23") (f (quote ("parallel"))) (d #t) (k 0)) (d (n "plotly") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "ron") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "0r9yd23x23dxz4749gb2yd2pd15qxnapr7hmz201ay9yk5mnjc57") (f (quote (("plot_export" "plot" "plotly/kaleido") ("plot" "plotly"))))))

(define-public crate-four-bar-0.6.2 (c (n "four-bar") (v "0.6.2") (d (list (d (n "efd") (r "^0.11") (d #t) (k 0)) (d (n "indicatif") (r "^0.16") (d #t) (k 2)) (d (n "metaheuristics-nature") (r "^0.23") (f (quote ("parallel"))) (d #t) (k 0)) (d (n "plotly") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "ron") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "1azgsfdajbvaxp7kn1rqi810fq37c5mln5dycrjdrx1mxs87zpqm") (f (quote (("plot_export" "plot" "plotly/kaleido") ("plot" "plotly"))))))

(define-public crate-four-bar-1.0.0 (c (n "four-bar") (v "1.0.0") (d (list (d (n "efd") (r "^0.11") (d #t) (k 0)) (d (n "indicatif") (r "^0.16") (d #t) (k 2)) (d (n "metaheuristics-nature") (r "^1") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "plotters") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ron") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "01lj99jsln4wg7hpmjnrlh9b46y74lfamasb5gxb7llp23c5n6cz") (f (quote (("plot" "plotters")))) (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-four-bar-1.1.0 (c (n "four-bar") (v "1.1.0") (d (list (d (n "efd") (r "^0.11") (d #t) (k 0)) (d (n "indicatif") (r "^0.16") (d #t) (k 2)) (d (n "metaheuristics-nature") (r "^1") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "plotters") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ron") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "08mm6smazm0vb1b7kqn5l19xxphmd48jk80dp8fip5wdhxd6571s") (f (quote (("plot" "plotters")))) (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-four-bar-1.2.0 (c (n "four-bar") (v "1.2.0") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "efd") (r "^0.11") (d #t) (k 0)) (d (n "indicatif") (r "^0.16") (d #t) (k 2)) (d (n "metaheuristics-nature") (r "^1") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "plotters") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ron") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "1aik9ygw0n3p3iwlrysv4yb8g8499x2l4fzkj2pxqjmpq8mnggk7") (f (quote (("plot" "plotters" "anyhow")))) (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-four-bar-1.3.0 (c (n "four-bar") (v "1.3.0") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "efd") (r "^0.11") (d #t) (k 0)) (d (n "indicatif") (r "^0.16") (d #t) (k 2)) (d (n "metaheuristics-nature") (r "^1") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "plotters") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ron") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "1i0n289rxrfx14wmimzkg3w7xcpf39cinfb6az56g96sqda8s6fs") (f (quote (("plot" "plotters" "anyhow")))) (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-four-bar-2.0.0 (c (n "four-bar") (v "2.0.0") (d (list (d (n "efd") (r "^0.21") (d #t) (k 0)) (d (n "metaheuristics-nature") (r "^2") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "plotters") (r "^0.3") (f (quote ("svg_backend" "all_series" "all_elements"))) (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "0fys4iwlykq657pc7b2qbmv2h14nv8sxmf2ddhh0wl75dlq3ircd") (f (quote (("rayon" "metaheuristics-nature/rayon") ("plot" "plotters") ("default") ("codebook" "ndarray-npy")))) (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-four-bar-3.0.0 (c (n "four-bar") (v "3.0.0") (d (list (d (n "efd") (r "^0.23") (d #t) (k 0)) (d (n "metaheuristics-nature") (r "^7") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "plotters") (r "^0.3") (f (quote ("svg_backend" "all_series" "all_elements"))) (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "0vm15dfxa9chwf4gxjsp4ksgyn3p9ih36z1gpamdh7cymc3xdnhw") (f (quote (("rayon" "metaheuristics-nature/rayon") ("plot" "plotters") ("default") ("codebook" "ndarray-npy")))) (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-four-bar-3.1.0 (c (n "four-bar") (v "3.1.0") (d (list (d (n "efd") (r "^0.24") (d #t) (k 0)) (d (n "metaheuristics-nature") (r "^7") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "plotters") (r "^0.3") (f (quote ("svg_backend" "all_series" "all_elements"))) (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "1lqmg91pddhl9ks4lzgvzxxcb8vh560zh8jkb67vccn9gw2n9yyx") (f (quote (("rayon" "metaheuristics-nature/rayon") ("plot" "plotters") ("default") ("codebook" "ndarray-npy")))) (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-four-bar-4.0.0 (c (n "four-bar") (v "4.0.0") (d (list (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "clap") (r "^4") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (o #t) (d #t) (k 0)) (d (n "efd") (r "^2.2") (d #t) (k 0)) (d (n "metaheuristics-nature") (r "^8") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "plotters") (r "^0.3") (f (quote ("svg_backend" "all_series" "all_elements"))) (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "0p4mfr62i6n39nrkq4459vza8gf96bzc03hvghv7wszgaqbkx6p9") (f (quote (("rayon" "metaheuristics-nature/rayon") ("plot" "plotters") ("default") ("codebook" "ndarray-npy")))) (s 2) (e (quote (("serde" "dep:serde" "metaheuristics-nature/serde") ("csv" "dep:csv" "serde") ("clap" "dep:clap" "metaheuristics-nature/clap"))))))

(define-public crate-four-bar-5.0.0 (c (n "four-bar") (v "5.0.0") (d (list (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "clap") (r "^4") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (o #t) (d #t) (k 0)) (d (n "efd") (r "^3.1") (d #t) (k 0)) (d (n "metaheuristics-nature") (r "^9.2.2") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "plotters") (r "^0.3") (f (quote ("svg_backend" "all_series" "all_elements" "full_palette"))) (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "1g0nlv272cgq92jwgpxr3h3p8wn1dr4d8fslyh6aij4nzk1f4pzv") (f (quote (("rayon" "metaheuristics-nature/rayon") ("plot" "plotters") ("default") ("codebook" "ndarray-npy")))) (s 2) (e (quote (("serde" "dep:serde" "metaheuristics-nature/serde") ("csv" "dep:csv" "serde") ("clap" "dep:clap" "metaheuristics-nature/clap"))))))

(define-public crate-four-bar-5.1.0 (c (n "four-bar") (v "5.1.0") (d (list (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "clap") (r "^4") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (o #t) (d #t) (k 0)) (d (n "efd") (r "^4") (d #t) (k 0)) (d (n "metaheuristics-nature") (r "^9.2.2") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "plotters") (r "^0.3") (f (quote ("svg_backend" "all_series" "all_elements" "full_palette"))) (o #t) (k 0)) (d (n "plotters-backend") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "0cwpx10lgqfwvanm9i719b91iixlvmdcjas5bgiwyp0a4r6nl686") (f (quote (("rayon" "metaheuristics-nature/rayon") ("plot" "plotters" "plotters-backend") ("default") ("codebook" "ndarray-npy")))) (s 2) (e (quote (("serde" "dep:serde" "metaheuristics-nature/serde") ("csv" "dep:csv" "serde") ("clap" "dep:clap" "metaheuristics-nature/clap"))))))

(define-public crate-four-bar-6.0.0 (c (n "four-bar") (v "6.0.0") (d (list (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "clap") (r "^4") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (o #t) (d #t) (k 0)) (d (n "efd") (r "^5") (d #t) (k 0)) (d (n "metaheuristics-nature") (r "^9.2.2") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "plotters") (r "^0.3") (f (quote ("svg_backend" "all_series" "all_elements" "full_palette"))) (o #t) (k 0)) (d (n "plotters-backend") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "1blzd4lzyjqxmpg8nzgqjvmyas3qld03c8wbii46yj3w29z052mr") (f (quote (("rayon" "metaheuristics-nature/rayon") ("plot" "plotters" "plotters-backend") ("default") ("atlas" "ndarray-npy")))) (s 2) (e (quote (("serde" "dep:serde" "metaheuristics-nature/serde") ("csv" "dep:csv" "serde") ("clap" "dep:clap" "metaheuristics-nature/clap"))))))

(define-public crate-four-bar-6.1.0 (c (n "four-bar") (v "6.1.0") (d (list (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "clap") (r "^4") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (o #t) (d #t) (k 0)) (d (n "efd") (r "^5") (d #t) (k 0)) (d (n "metaheuristics-nature") (r "^9.2.2") (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "plotters") (r "^0.3") (f (quote ("svg_backend" "all_series" "all_elements" "full_palette"))) (o #t) (k 0)) (d (n "plotters-backend") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "0gdnac0v7a8nk87bia68684lkl2rd38mrb5krizdpk341bmprx6g") (f (quote (("rayon" "metaheuristics-nature/rayon") ("plot" "plotters" "plotters-backend") ("default") ("atlas" "ndarray-npy")))) (s 2) (e (quote (("serde" "dep:serde" "metaheuristics-nature/serde") ("csv" "dep:csv" "serde") ("clap" "dep:clap" "metaheuristics-nature/clap"))))))

(define-public crate-four-bar-7.0.0 (c (n "four-bar") (v "7.0.0") (d (list (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "clap") (r "^4") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (o #t) (d #t) (k 0)) (d (n "efd") (r "^10.1") (d #t) (k 0)) (d (n "fmtastic") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mh") (r "^10.1") (d #t) (k 0) (p "metaheuristics-nature")) (d (n "ndarray") (r "^0.15") (f (quote ("rayon"))) (o #t) (d #t) (k 0)) (d (n "ndarray-npy") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "plotters") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "plotters-backend") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "0sx7biyzdxai7am44bzl48sqq83bf975rfiljlg460gj5ifgzx9k") (f (quote (("rayon" "mh/rayon") ("plot" "plotters" "plotters-backend" "fmtastic") ("default") ("atlas" "ndarray" "ndarray-npy")))) (s 2) (e (quote (("serde" "dep:serde" "mh/serde") ("csv" "dep:csv" "serde") ("clap" "dep:clap" "mh/clap"))))))

