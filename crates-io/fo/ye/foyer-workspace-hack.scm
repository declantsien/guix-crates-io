(define-module (crates-io fo ye foyer-workspace-hack) #:use-module (crates-io))

(define-public crate-foyer-workspace-hack-0.1.0 (c (n "foyer-workspace-hack") (v "0.1.0") (d (list (d (n "cc") (r "^1") (f (quote ("parallel"))) (k 1)) (d (n "crossbeam-utils") (r "^0.8") (d #t) (k 0)) (d (n "either") (r "^1") (f (quote ("use_std"))) (k 0)) (d (n "either") (r "^1") (f (quote ("use_std"))) (k 1)) (d (n "futures-channel") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-sink") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("async-await-macro" "channel" "io" "sink"))) (k 0)) (d (n "libc") (r "^0.2") (f (quote ("extra_traits"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "memchr") (r "^2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("arc_lock" "deadlock_detection"))) (d #t) (k 0)) (d (n "parking_lot_core") (r "^0.9") (f (quote ("deadlock_detection"))) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-std" "io-util" "macros" "net" "rt-multi-thread" "signal" "sync" "time" "tracing"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec" "io"))) (d #t) (k 0)) (d (n "tower") (r "^0.4") (f (quote ("balance" "buffer" "limit" "timeout" "util"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)) (d (n "tracing-core") (r "^0.1") (d #t) (k 0)))) (h "0wjhhxz6lmcd4h73qyjhc8z1i1bx7jz1hr8rs49nrrx9hdm9qsbj")))

(define-public crate-foyer-workspace-hack-0.1.1 (c (n "foyer-workspace-hack") (v "0.1.1") (d (list (d (n "cc") (r "^1") (f (quote ("parallel"))) (k 1)) (d (n "crossbeam-utils") (r "^0.8") (d #t) (k 0)) (d (n "either") (r "^1") (f (quote ("use_std"))) (k 0)) (d (n "either") (r "^1") (f (quote ("use_std"))) (k 1)) (d (n "futures-channel") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-sink") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("async-await-macro" "channel" "io" "sink"))) (k 0)) (d (n "libc") (r "^0.2") (f (quote ("extra_traits"))) (d #t) (k 0)) (d (n "memchr") (r "^2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("arc_lock" "deadlock_detection"))) (d #t) (k 0)) (d (n "parking_lot_core") (r "^0.9") (f (quote ("deadlock_detection"))) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 1)) (d (n "quote") (r "^1") (d #t) (k 1)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("extra-traits" "full" "visit-mut"))) (d #t) (k 1)) (d (n "tokio") (r "^1") (f (quote ("io-std" "io-util" "macros" "net" "rt-multi-thread" "signal" "sync" "time" "tracing"))) (d #t) (k 0)) (d (n "tracing-core") (r "^0.1") (d #t) (k 0)))) (h "0saf2ipk46fk3b94x34z9qwkmjhdkybicfbqmh5k792krmc4x4p1")))

(define-public crate-foyer-workspace-hack-0.2.0 (c (n "foyer-workspace-hack") (v "0.2.0") (d (list (d (n "cc") (r "^1") (f (quote ("parallel"))) (k 1)) (d (n "crossbeam-utils") (r "^0.8") (d #t) (k 0)) (d (n "either") (r "^1") (f (quote ("use_std"))) (k 0)) (d (n "either") (r "^1") (f (quote ("use_std"))) (k 1)) (d (n "futures-channel") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-sink") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("async-await-macro" "channel" "io" "sink"))) (k 0)) (d (n "libc") (r "^0.2") (f (quote ("extra_traits"))) (d #t) (k 0)) (d (n "memchr") (r "^2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("arc_lock" "deadlock_detection"))) (d #t) (k 0)) (d (n "parking_lot_core") (r "^0.9") (f (quote ("deadlock_detection"))) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 1)) (d (n "quote") (r "^1") (d #t) (k 1)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("extra-traits" "full" "visit-mut"))) (d #t) (k 1)) (d (n "tokio") (r "^1") (f (quote ("io-std" "io-util" "macros" "net" "rt-multi-thread" "signal" "sync" "time" "tracing"))) (d #t) (k 0)) (d (n "tracing-core") (r "^0.1") (d #t) (k 0)))) (h "1sav0x02css82n3vn77vvy39amkgd8pcmcj5x8cqhpjbqif5x3js")))

(define-public crate-foyer-workspace-hack-0.3.0 (c (n "foyer-workspace-hack") (v "0.3.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "cc") (r "^1") (f (quote ("parallel"))) (k 1)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8") (d #t) (k 0)) (d (n "either") (r "^1") (f (quote ("use_std"))) (k 0)) (d (n "either") (r "^1") (f (quote ("use_std"))) (k 1)) (d (n "futures-channel") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-sink") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("async-await-macro" "channel" "io" "sink"))) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw"))) (d #t) (k 0)) (d (n "libc") (r "^0.2") (f (quote ("extra_traits"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("arc_lock" "deadlock_detection"))) (d #t) (k 0)) (d (n "parking_lot_core") (r "^0.9") (f (quote ("deadlock_detection"))) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 1)) (d (n "quote") (r "^1") (d #t) (k 1)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "smallvec") (r "^1") (f (quote ("const_new"))) (k 0)) (d (n "syn") (r "^2") (f (quote ("extra-traits" "full" "visit-mut"))) (d #t) (k 1)) (d (n "tokio") (r "^1") (f (quote ("fs" "io-std" "io-util" "macros" "net" "rt-multi-thread" "signal" "sync" "time" "tracing"))) (d #t) (k 0)) (d (n "tracing-core") (r "^0.1") (d #t) (k 0)))) (h "01syim1yjpm19438if0n720rjx3w34rsyi7x68r8klchp1dfx9bp")))

(define-public crate-foyer-workspace-hack-0.4.0 (c (n "foyer-workspace-hack") (v "0.4.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "allocator-api2") (r "^0.2") (d #t) (k 0)) (d (n "cc") (r "^1") (f (quote ("parallel"))) (k 1)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "crossbeam-epoch") (r "^0.9") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8") (d #t) (k 0)) (d (n "either") (r "^1") (f (quote ("use_std"))) (k 0)) (d (n "either") (r "^1") (f (quote ("use_std"))) (k 1)) (d (n "futures-channel") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-sink") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("async-await-macro" "channel" "io" "sink"))) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 1)) (d (n "libc") (r "^0.2") (f (quote ("extra_traits"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("arc_lock" "deadlock_detection"))) (d #t) (k 0)) (d (n "parking_lot_core") (r "^0.9") (f (quote ("deadlock_detection"))) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 1)) (d (n "quote") (r "^1") (d #t) (k 1)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "smallvec") (r "^1") (f (quote ("const_new"))) (k 0)) (d (n "syn") (r "^2") (f (quote ("extra-traits" "full" "visit-mut"))) (d #t) (k 1)) (d (n "tokio") (r "^1") (f (quote ("fs" "io-std" "io-util" "macros" "net" "rt-multi-thread" "signal" "sync" "time" "tracing"))) (d #t) (k 0)) (d (n "tracing-core") (r "^0.1") (d #t) (k 0)))) (h "0j74ksrprn8kw1am0wma1my9ajdzpsdm9bww95r9xl66wk9xy9dw")))

(define-public crate-foyer-workspace-hack-0.5.0 (c (n "foyer-workspace-hack") (v "0.5.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "allocator-api2") (r "^0.2") (d #t) (k 0)) (d (n "cc") (r "^1") (f (quote ("parallel"))) (k 1)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "crossbeam-epoch") (r "^0.9") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 1)) (d (n "futures-channel") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-sink") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("async-await-macro" "channel" "io" "sink"))) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("std"))) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 1)) (d (n "nix") (r "^0.28") (f (quote ("fs" "mman" "uio"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("arc_lock" "deadlock_detection"))) (d #t) (k 0)) (d (n "parking_lot_core") (r "^0.9") (f (quote ("deadlock_detection"))) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 1)) (d (n "quote") (r "^1") (d #t) (k 1)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "smallvec") (r "^1") (f (quote ("const_new"))) (k 0)) (d (n "syn") (r "^2") (f (quote ("extra-traits" "full" "visit-mut"))) (d #t) (k 1)) (d (n "tokio") (r "^1") (f (quote ("fs" "io-std" "io-util" "macros" "net" "rt-multi-thread" "signal" "sync" "time" "tracing"))) (d #t) (k 0)) (d (n "tracing-core") (r "^0.1") (d #t) (k 0)))) (h "000y67wz7qz082ff4p161myjgimc6is4xcbn3xzlidjaf0ghxqyl")))

(define-public crate-foyer-workspace-hack-0.5.1 (c (n "foyer-workspace-hack") (v "0.5.1") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "allocator-api2") (r "^0.2") (d #t) (k 0)) (d (n "cc") (r "^1") (f (quote ("parallel"))) (k 1)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "crossbeam-epoch") (r "^0.9") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 1)) (d (n "futures-channel") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-sink") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("async-await-macro" "channel" "io" "sink"))) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("std"))) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 1)) (d (n "nix") (r "^0.28") (f (quote ("fs" "mman"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("arc_lock" "deadlock_detection"))) (d #t) (k 0)) (d (n "parking_lot_core") (r "^0.9") (f (quote ("deadlock_detection"))) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 1)) (d (n "quote") (r "^1") (d #t) (k 1)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "smallvec") (r "^1") (f (quote ("const_new"))) (k 0)) (d (n "syn") (r "^2") (f (quote ("extra-traits" "full" "visit-mut"))) (d #t) (k 1)) (d (n "tokio") (r "^1") (f (quote ("fs" "io-std" "io-util" "macros" "net" "rt-multi-thread" "signal" "sync" "time" "tracing"))) (d #t) (k 0)) (d (n "tracing-core") (r "^0.1") (d #t) (k 0)))) (h "01xq0j549i7xzk92xdgg34qy82fg1wnakb9ads3qz9842r9y3hax")))

(define-public crate-foyer-workspace-hack-0.5.2 (c (n "foyer-workspace-hack") (v "0.5.2") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "cc") (r "^1") (f (quote ("parallel"))) (k 1)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "crossbeam-epoch") (r "^0.9") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 1)) (d (n "futures-channel") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-sink") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("async-await-macro" "channel" "io" "sink"))) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("std"))) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 1)) (d (n "nix") (r "^0.28") (f (quote ("fs" "mman"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("arc_lock" "deadlock_detection"))) (d #t) (k 0)) (d (n "parking_lot_core") (r "^0.9") (f (quote ("deadlock_detection"))) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 1)) (d (n "quote") (r "^1") (d #t) (k 1)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "smallvec") (r "^1") (f (quote ("const_new"))) (k 0)) (d (n "syn") (r "^2") (f (quote ("extra-traits" "full" "visit-mut"))) (d #t) (k 1)) (d (n "tokio") (r "^1") (f (quote ("fs" "io-std" "io-util" "macros" "net" "rt-multi-thread" "signal" "sync" "time" "tracing"))) (d #t) (k 0)) (d (n "tracing-core") (r "^0.1") (d #t) (k 0)))) (h "12vdc85van47gxcxg6nnqs38jd8gvk6dbwf4vxhbv31za5sz6jkq")))

