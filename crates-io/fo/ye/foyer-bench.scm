(define-module (crates-io fo ye foyer-bench) #:use-module (crates-io))

(define-public crate-foyer-bench-0.1.0 (c (n "foyer-bench") (v "0.1.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytesize") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console-subscriber") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "foyer") (r "^0.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hdrhistogram") (r "^7") (d #t) (k 0)) (d (n "itertools") (r "^0.13") (d #t) (k 0)) (d (n "metrics") (r "^0.22") (d #t) (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.14") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.22") (f (quote ("rt-tokio" "trace"))) (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.14") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt" "rt-multi-thread" "sync" "macros" "time" "signal" "fs"))) (d #t) (k 0) (p "madsim-tokio")) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "zipf") (r "^7") (d #t) (k 0)))) (h "08zgphxfcjih8khcxvvl4ia707icdcqhi9rw71ry1sza72va58vp") (f (quote (("trace" "opentelemetry" "opentelemetry_sdk" "opentelemetry-otlp" "tracing-opentelemetry" "opentelemetry-semantic-conventions") ("tokio-console" "console-subscriber") ("deadlock" "parking_lot/deadlock_detection" "foyer/deadlock"))))))

(define-public crate-foyer-bench-0.1.1 (c (n "foyer-bench") (v "0.1.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytesize") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console-subscriber") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "foyer") (r "^0.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hdrhistogram") (r "^7") (d #t) (k 0)) (d (n "itertools") (r "^0.13") (d #t) (k 0)) (d (n "metrics") (r "^0.23") (d #t) (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.15") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.23") (f (quote ("rt-tokio" "trace"))) (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.14") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt" "rt-multi-thread" "sync" "macros" "time" "signal" "fs"))) (d #t) (k 0) (p "madsim-tokio")) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.24") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "zipf") (r "^7") (d #t) (k 0)))) (h "11w449fpbyg9ra9dsb38crjjhn94w42kfap6v5zksiifwp8m98z1") (f (quote (("trace" "opentelemetry" "opentelemetry_sdk" "opentelemetry-otlp" "tracing-opentelemetry" "opentelemetry-semantic-conventions") ("tokio-console" "console-subscriber") ("strict_assertions" "foyer/strict_assertions") ("sanity" "foyer/sanity") ("deadlock" "parking_lot/deadlock_detection" "foyer/deadlock"))))))

(define-public crate-foyer-bench-0.1.2 (c (n "foyer-bench") (v "0.1.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytesize") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console-subscriber") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "foyer") (r "^0.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hdrhistogram") (r "^7") (d #t) (k 0)) (d (n "itertools") (r "^0.13") (d #t) (k 0)) (d (n "metrics") (r "^0.23") (d #t) (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.15") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.23") (f (quote ("rt-tokio" "trace"))) (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.14") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (o #t) (d #t) (t "cfg(not(target_env = \"msvc\"))") (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt" "rt-multi-thread" "sync" "macros" "time" "signal" "fs"))) (d #t) (k 0) (p "madsim-tokio")) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.24") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "zipf") (r "^7") (d #t) (k 0)))) (h "1v95kwx9mwpqgis4m6ygl1zrrg8142cn3m0b02is7z9wllck9h6s") (f (quote (("trace" "opentelemetry" "opentelemetry_sdk" "opentelemetry-otlp" "tracing-opentelemetry" "opentelemetry-semantic-conventions") ("tokio-console" "console-subscriber") ("strict_assertions" "foyer/strict_assertions") ("sanity" "foyer/sanity") ("jemalloc" "tikv-jemallocator") ("deadlock" "parking_lot/deadlock_detection" "foyer/deadlock"))))))

(define-public crate-foyer-bench-0.1.3 (c (n "foyer-bench") (v "0.1.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytesize") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console-subscriber") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "foyer") (r "^0.9.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hdrhistogram") (r "^7") (d #t) (k 0)) (d (n "itertools") (r "^0.13") (d #t) (k 0)) (d (n "metrics") (r "^0.23") (d #t) (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.15") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.23") (f (quote ("rt-tokio" "trace"))) (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.14") (d #t) (k 0)) (d (n "tikv-jemallocator") (r "^0.5") (o #t) (d #t) (t "cfg(not(target_env = \"msvc\"))") (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt" "rt-multi-thread" "sync" "macros" "time" "signal" "fs"))) (d #t) (k 0) (p "madsim-tokio")) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.24") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "zipf") (r "^7") (d #t) (k 0)))) (h "0y7nkxwjbqhw70cmqc76vr7z32paghc7mwg2b04k1a2c76jdllyx") (f (quote (("trace" "opentelemetry" "opentelemetry_sdk" "opentelemetry-otlp" "tracing-opentelemetry" "opentelemetry-semantic-conventions") ("tokio-console" "console-subscriber") ("strict_assertions" "foyer/strict_assertions") ("sanity" "foyer/sanity") ("jemalloc" "tikv-jemallocator") ("deadlock" "parking_lot/deadlock_detection" "foyer/deadlock"))))))

