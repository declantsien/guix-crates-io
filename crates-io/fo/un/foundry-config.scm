(define-module (crates-io fo un foundry-config) #:use-module (crates-io))

(define-public crate-foundry-config-0.0.0 (c (n "foundry-config") (v "0.0.0") (h "0m192mwcqvpzcvifv9d6mnwhj4i18cqf1hhlgrl88cl5igjhmjbh")))

(define-public crate-foundry-config-0.2.0 (c (n "foundry-config") (v "0.2.0") (d (list (d (n "Inflector") (r "^0.11") (d #t) (k 0)) (d (n "dirs-next") (r "^2") (d #t) (k 0)) (d (n "ethers-core") (r "^2.0") (k 0)) (d (n "ethers-etherscan") (r "^2.0") (k 0)) (d (n "ethers-solc") (r "^2.0") (f (quote ("async" "svm-solc"))) (k 0)) (d (n "eyre") (r "^0.6") (d #t) (k 0)) (d (n "figment") (r "^0.10") (f (quote ("toml" "env"))) (d #t) (k 0)) (d (n "figment") (r "^0.10") (f (quote ("test"))) (d #t) (k 2)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "number_prefix") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "open-fastrlp") (r "^0.1") (d #t) (k 0)) (d (n "path-slash") (r "^0.2.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (k 0)) (d (n "revm-primitives") (r "^1") (k 0)) (d (n "semver") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_regex") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.7") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "toml_edit") (r "^0.19") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1mdbnd4l8d6rcf8ggbm24qi8znvmwqagzf130nalvss7mnysjr3a") (r "1.72")))

