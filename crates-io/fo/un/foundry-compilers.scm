(define-module (crates-io fo un foundry-compilers) #:use-module (crates-io))

(define-public crate-foundry-compilers-0.1.0 (c (n "foundry-compilers") (v "0.1.0") (d (list (d (n "alloy-json-abi") (r "^0.4") (f (quote ("std" "serde_json"))) (k 0)) (d (n "alloy-primitives") (r "^0.4") (f (quote ("std" "serde" "rand"))) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "fs_extra") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 0)) (d (n "hex") (r "^1.6") (f (quote ("hex"))) (d #t) (k 0) (p "const-hex")) (d (n "home") (r "^0.5.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "md-5") (r "^0.10.5") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "path-slash") (r "^0.2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (o #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (k 0)) (d (n "svm") (r "^0.3") (f (quote ("blocking"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.8.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)) (d (n "yansi") (r "^0.5.1") (d #t) (k 0)))) (h "0q6vl6ip49890jz5gxn9sckh4iyxgz4z4493mf4jk7yn1npv7ksx") (f (quote (("tests") ("svm-solc" "svm" "svm-builds" "sha2") ("project-util" "tempfile" "fs_extra" "rand") ("full" "async" "svm-solc") ("default" "rustls") ("async" "tokio/process" "tokio/io-util" "tokio/fs" "tokio/time" "futures-util")))) (s 2) (e (quote (("rustls" "svm?/rustls") ("openssl" "svm?/openssl")))) (r "1.65")))

(define-public crate-foundry-compilers-0.1.1 (c (n "foundry-compilers") (v "0.1.1") (d (list (d (n "alloy-json-abi") (r "^0.5") (f (quote ("std" "serde_json"))) (k 0)) (d (n "alloy-primitives") (r "^0.5") (f (quote ("std" "serde" "rand"))) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "fs_extra") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 0)) (d (n "hex") (r "^1.6") (f (quote ("hex"))) (d #t) (k 0) (p "const-hex")) (d (n "home") (r "^0.5.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "md-5") (r "^0.10.5") (d #t) (k 0)) (d (n "memmap2") (r "^0.9.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "path-slash") (r "^0.2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (o #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (k 0)) (d (n "svm") (r "^0.3") (f (quote ("blocking"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.8.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)) (d (n "yansi") (r "^0.5.1") (d #t) (k 0)))) (h "06n0pkx0zq1vbfc0x639bprv24ygjnjshbjywjd51l3svzcrzv0y") (f (quote (("tests") ("svm-solc" "svm" "svm-builds" "sha2") ("project-util" "tempfile" "fs_extra" "rand") ("full" "async" "svm-solc") ("default" "rustls") ("async" "tokio/process" "tokio/io-util" "tokio/fs" "tokio/time" "futures-util")))) (s 2) (e (quote (("rustls" "svm?/rustls") ("openssl" "svm?/openssl")))) (r "1.65")))

(define-public crate-foundry-compilers-0.1.2 (c (n "foundry-compilers") (v "0.1.2") (d (list (d (n "alloy-json-abi") (r "^0.5") (f (quote ("std" "serde_json"))) (k 0)) (d (n "alloy-primitives") (r "^0.5") (f (quote ("std" "serde" "rand"))) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "fs_extra") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 0)) (d (n "hex") (r "^1.6") (f (quote ("hex"))) (d #t) (k 0) (p "const-hex")) (d (n "home") (r "^0.5.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "md-5") (r "^0.10.5") (d #t) (k 0)) (d (n "memmap2") (r "^0.9.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "path-slash") (r "^0.2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (o #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (k 0)) (d (n "svm") (r "^0.3") (f (quote ("blocking"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.8.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)) (d (n "yansi") (r "^0.5.1") (d #t) (k 0)))) (h "0fxq3g03zh20i7g979vzfmcd1spnid7g5hvkx2v4jdzay0z3qbfq") (f (quote (("tests") ("svm-solc" "svm" "svm-builds" "sha2") ("project-util" "tempfile" "fs_extra" "rand") ("full" "async" "svm-solc") ("default" "rustls") ("async" "tokio/process" "tokio/io-util" "tokio/fs" "tokio/time" "futures-util")))) (s 2) (e (quote (("rustls" "svm?/rustls") ("openssl" "svm?/openssl")))) (r "1.65")))

(define-public crate-foundry-compilers-0.1.3 (c (n "foundry-compilers") (v "0.1.3") (d (list (d (n "alloy-json-abi") (r "^0.5") (f (quote ("std" "serde_json"))) (k 0)) (d (n "alloy-primitives") (r "^0.5") (f (quote ("std" "serde" "rand"))) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "fs_extra") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 0)) (d (n "hex") (r "^1.6") (f (quote ("hex"))) (d #t) (k 0) (p "const-hex")) (d (n "home") (r "^0.5.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "md-5") (r "^0.10.5") (d #t) (k 0)) (d (n "memmap2") (r "^0.9.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "path-slash") (r "^0.2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (o #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (k 0)) (d (n "svm") (r "^0.3") (f (quote ("blocking"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.8.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)) (d (n "yansi") (r "^0.5.1") (d #t) (k 0)))) (h "0675xqmnqsm0zgzll46225s2xhcprfjj2vjwda1sky86dfs8hcbj") (f (quote (("tests") ("svm-solc" "svm" "svm-builds" "sha2") ("project-util" "tempfile" "fs_extra" "rand") ("full" "async" "svm-solc") ("default" "rustls") ("async" "tokio/process" "tokio/io-util" "tokio/fs" "tokio/time" "futures-util")))) (s 2) (e (quote (("rustls" "svm?/rustls") ("openssl" "svm?/openssl")))) (r "1.65")))

(define-public crate-foundry-compilers-0.1.4 (c (n "foundry-compilers") (v "0.1.4") (d (list (d (n "alloy-json-abi") (r "^0.5") (f (quote ("std" "serde_json"))) (k 0)) (d (n "alloy-primitives") (r "^0.5") (f (quote ("std" "serde" "rand"))) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "fs_extra") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 0)) (d (n "hex") (r "^1.6") (f (quote ("hex"))) (d #t) (k 0) (p "const-hex")) (d (n "home") (r "^0.5.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "md-5") (r "^0.10.5") (d #t) (k 0)) (d (n "memmap2") (r "^0.9.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "path-slash") (r "^0.2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (o #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (k 0)) (d (n "svm") (r "^0.3") (f (quote ("blocking"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.8.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)) (d (n "yansi") (r "^0.5.1") (d #t) (k 0)))) (h "1p3kkgqlkj6iw6341pxd4v54h6a2p9bisrzm27zy5wisfd0rg7qw") (f (quote (("tests") ("svm-solc" "svm" "svm-builds" "sha2") ("project-util" "tempfile" "fs_extra" "rand") ("full" "async" "svm-solc") ("default" "rustls") ("async" "tokio/process" "tokio/io-util" "tokio/fs" "tokio/time" "futures-util")))) (s 2) (e (quote (("rustls" "svm?/rustls") ("openssl" "svm?/openssl")))) (r "1.65")))

(define-public crate-foundry-compilers-0.2.0 (c (n "foundry-compilers") (v "0.2.0") (d (list (d (n "alloy-json-abi") (r "^0.6") (f (quote ("std" "serde_json"))) (k 0)) (d (n "alloy-primitives") (r "^0.6") (f (quote ("std" "serde" "rand"))) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "fs_extra") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 0)) (d (n "hex") (r "^1.6") (f (quote ("hex"))) (d #t) (k 0) (p "const-hex")) (d (n "home") (r "^0.5.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "md-5") (r "^0.10.5") (d #t) (k 0)) (d (n "memmap2") (r "^0.9.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "path-slash") (r "^0.2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (o #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (k 0)) (d (n "svm") (r "^0.3") (f (quote ("blocking"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.8.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)) (d (n "yansi") (r "^0.5.1") (d #t) (k 0)))) (h "1si608mfv53k5mpbmbmbx8ns4ws9yzffnyyhv1mskf3rh6bjrzvw") (f (quote (("tests") ("svm-solc" "svm" "svm-builds" "sha2") ("project-util" "tempfile" "fs_extra" "rand") ("full" "async" "svm-solc") ("default" "rustls") ("async" "tokio/process" "tokio/io-util" "tokio/fs" "tokio/time" "futures-util")))) (s 2) (e (quote (("rustls" "svm?/rustls") ("openssl" "svm?/openssl")))) (r "1.65")))

(define-public crate-foundry-compilers-0.2.1 (c (n "foundry-compilers") (v "0.2.1") (d (list (d (n "alloy-json-abi") (r "^0.6") (f (quote ("std" "serde_json"))) (k 0)) (d (n "alloy-primitives") (r "^0.6") (f (quote ("std" "serde" "rand"))) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "fs_extra") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 0)) (d (n "hex") (r "^1.6") (f (quote ("hex"))) (d #t) (k 0) (p "const-hex")) (d (n "home") (r "^0.5.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "md-5") (r "^0.10.5") (d #t) (k 0)) (d (n "memmap2") (r "^0.9.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "path-slash") (r "^0.2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (o #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (k 0)) (d (n "svm") (r "^0.3") (f (quote ("blocking"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.8.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)) (d (n "yansi") (r "^0.5.1") (d #t) (k 0)))) (h "1rd0360b5kczbgnaf6fhrb4kj74d8dp3pp2zpws6ach98y9l3vi0") (f (quote (("tests") ("svm-solc" "svm" "svm-builds" "sha2") ("project-util" "tempfile" "fs_extra" "rand") ("full" "async" "svm-solc") ("default" "rustls") ("async" "tokio/process" "tokio/io-util" "tokio/fs" "tokio/time" "futures-util")))) (s 2) (e (quote (("rustls" "svm?/rustls") ("openssl" "svm?/openssl")))) (r "1.65")))

(define-public crate-foundry-compilers-0.2.2 (c (n "foundry-compilers") (v "0.2.2") (d (list (d (n "alloy-json-abi") (r "^0.6") (f (quote ("std" "serde_json"))) (k 0)) (d (n "alloy-primitives") (r "^0.6") (f (quote ("std" "serde" "rand"))) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "fs_extra") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 0)) (d (n "hex") (r "^1.6") (f (quote ("hex"))) (d #t) (k 0) (p "const-hex")) (d (n "home") (r "^0.5.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "md-5") (r "^0.10.5") (d #t) (k 0)) (d (n "memmap2") (r "^0.9.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "path-slash") (r "^0.2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (o #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (k 0)) (d (n "svm") (r "^0.3") (f (quote ("blocking"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.8.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)) (d (n "yansi") (r "^0.5.1") (d #t) (k 0)))) (h "0dqwwk9j38yh5izvjz9r3vi4lg2y2g6j0v3qq5qbwdi80dfxf2al") (f (quote (("tests") ("svm-solc" "svm" "svm-builds" "sha2") ("project-util" "tempfile" "fs_extra" "rand") ("full" "async" "svm-solc") ("default" "rustls") ("async" "tokio/process" "tokio/io-util" "tokio/fs" "tokio/time" "futures-util")))) (s 2) (e (quote (("rustls" "svm?/rustls") ("openssl" "svm?/openssl")))) (r "1.65")))

(define-public crate-foundry-compilers-0.2.3 (c (n "foundry-compilers") (v "0.2.3") (d (list (d (n "alloy-json-abi") (r "^0.6") (f (quote ("std" "serde_json"))) (k 0)) (d (n "alloy-primitives") (r "^0.6") (f (quote ("std" "serde" "rand"))) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "fs_extra") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 0)) (d (n "hex") (r "^1.6") (f (quote ("hex"))) (d #t) (k 0) (p "const-hex")) (d (n "home") (r "^0.5.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "md-5") (r "^0.10.5") (d #t) (k 0)) (d (n "memmap2") (r "^0.9.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "path-slash") (r "^0.2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (o #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (k 0)) (d (n "svm") (r "^0.3") (f (quote ("blocking"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.8.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)) (d (n "yansi") (r "^0.5.1") (d #t) (k 0)))) (h "19xwcjh0hr8j2awamrik26yjikdmbdh1azrmw4k6sy73xyk30d9l") (f (quote (("tests") ("svm-solc" "svm" "svm-builds" "sha2") ("project-util" "tempfile" "fs_extra" "rand") ("full" "async" "svm-solc") ("default" "rustls") ("async" "tokio/process" "tokio/io-util" "tokio/fs" "tokio/time" "futures-util")))) (s 2) (e (quote (("rustls" "svm?/rustls") ("openssl" "svm?/openssl")))) (r "1.65")))

(define-public crate-foundry-compilers-0.2.4 (c (n "foundry-compilers") (v "0.2.4") (d (list (d (n "alloy-json-abi") (r "^0.6") (f (quote ("std" "serde_json"))) (k 0)) (d (n "alloy-primitives") (r "^0.6") (f (quote ("std" "serde" "rand"))) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "fs_extra") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 0)) (d (n "hex") (r "^1.6") (f (quote ("hex"))) (d #t) (k 0) (p "const-hex")) (d (n "home") (r "^0.5.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "md-5") (r "^0.10.5") (d #t) (k 0)) (d (n "memmap2") (r "^0.9.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "path-slash") (r "^0.2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (o #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (k 0)) (d (n "svm") (r "^0.3") (f (quote ("blocking"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.8.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)) (d (n "yansi") (r "^0.5.1") (d #t) (k 0)))) (h "1bii5w12n0h8620mmbk9g4brl8npjj4rsvzd5f2mr5d9m5md41ji") (f (quote (("tests") ("svm-solc" "svm" "svm-builds" "sha2") ("project-util" "tempfile" "fs_extra" "rand") ("full" "async" "svm-solc") ("default" "rustls") ("async" "tokio/process" "tokio/io-util" "tokio/fs" "tokio/time" "futures-util")))) (s 2) (e (quote (("rustls" "svm?/rustls") ("openssl" "svm?/openssl")))) (r "1.65")))

(define-public crate-foundry-compilers-0.2.5 (c (n "foundry-compilers") (v "0.2.5") (d (list (d (n "alloy-json-abi") (r "^0.6") (f (quote ("std" "serde_json"))) (k 0)) (d (n "alloy-primitives") (r "^0.6") (f (quote ("std" "serde" "rand"))) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "fs_extra") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 0)) (d (n "hex") (r "^1.6") (f (quote ("hex"))) (d #t) (k 0) (p "const-hex")) (d (n "home") (r "^0.5.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "md-5") (r "^0.10.5") (d #t) (k 0)) (d (n "memmap2") (r "^0.9.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "path-slash") (r "^0.2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (o #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (k 0)) (d (n "svm") (r "^0.3") (f (quote ("blocking"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.8.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)) (d (n "yansi") (r "^0.5.1") (d #t) (k 0)))) (h "1m78w53da9il11nggcw19az0a5kxsf650s4a0drw5fq648mf8yf2") (f (quote (("tests") ("svm-solc" "svm" "svm-builds" "sha2") ("project-util" "tempfile" "fs_extra" "rand") ("full" "async" "svm-solc") ("default" "rustls") ("async" "tokio/process" "tokio/io-util" "tokio/fs" "tokio/time" "futures-util")))) (s 2) (e (quote (("rustls" "svm?/rustls") ("openssl" "svm?/openssl")))) (r "1.65")))

(define-public crate-foundry-compilers-0.3.0 (c (n "foundry-compilers") (v "0.3.0") (d (list (d (n "alloy-json-abi") (r "^0.6") (f (quote ("serde_json"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.6") (f (quote ("serde" "rand"))) (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "fs_extra") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "memmap2") (r "^0.9") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "path-slash") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (k 0)) (d (n "svm") (r "^0.3") (o #t) (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.3") (o #t) (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.9") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.4") (d #t) (k 0)) (d (n "yansi") (r "^0.5") (d #t) (k 0)))) (h "0rq637nghh1yygihrimykrxs16v1v29p2y143f14z6qjsdv4vmy2") (f (quote (("full" "async" "svm-solc") ("default" "rustls")))) (s 2) (e (quote (("svm-solc" "dep:svm" "dep:svm-builds" "dep:sha2" "dep:tokio") ("rustls" "svm?/rustls") ("project-util" "dep:tempfile" "dep:fs_extra" "dep:rand") ("openssl" "svm?/openssl") ("async" "dep:futures-util" "dep:tokio" "tokio/fs" "tokio/process" "tokio/io-util")))) (r "1.65")))

(define-public crate-foundry-compilers-0.3.1 (c (n "foundry-compilers") (v "0.3.1") (d (list (d (n "alloy-json-abi") (r "^0.6") (f (quote ("serde_json"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.6") (f (quote ("serde" "rand"))) (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "fs_extra") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "memmap2") (r "^0.9") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "path-slash") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (k 0)) (d (n "svm") (r "^0.3") (o #t) (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.3") (o #t) (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.9") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.4") (d #t) (k 0)) (d (n "yansi") (r "^0.5") (d #t) (k 0)))) (h "0afg89m1i68g6d655ibd57gws0nzy3rg0zs12nr1ff0bhz097mkz") (f (quote (("full" "async" "svm-solc") ("default" "rustls")))) (s 2) (e (quote (("svm-solc" "dep:svm" "dep:svm-builds" "dep:sha2" "dep:tokio") ("rustls" "svm?/rustls") ("project-util" "dep:tempfile" "dep:fs_extra" "dep:rand") ("openssl" "svm?/openssl") ("async" "dep:futures-util" "dep:tokio" "tokio/fs" "tokio/process" "tokio/io-util")))) (r "1.65")))

(define-public crate-foundry-compilers-0.3.2 (c (n "foundry-compilers") (v "0.3.2") (d (list (d (n "alloy-json-abi") (r "^0.6") (f (quote ("serde_json"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.6") (f (quote ("serde" "rand"))) (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "fs_extra") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "memmap2") (r "^0.9") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "path-slash") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (k 0)) (d (n "svm") (r "^0.3") (o #t) (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.3") (o #t) (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.9") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.4") (d #t) (k 0)) (d (n "yansi") (r "^0.5") (d #t) (k 0)))) (h "1ia8yyd6y9yzd58x82s5c59sws22w4a4n18ibfncyj4qicpkk22x") (f (quote (("full" "async" "svm-solc") ("default" "rustls")))) (s 2) (e (quote (("svm-solc" "dep:svm" "dep:svm-builds" "dep:sha2" "dep:tokio") ("rustls" "svm?/rustls") ("project-util" "dep:tempfile" "dep:fs_extra" "dep:rand") ("openssl" "svm?/openssl") ("async" "dep:futures-util" "dep:tokio" "tokio/fs" "tokio/process" "tokio/io-util")))) (r "1.65")))

(define-public crate-foundry-compilers-0.3.3 (c (n "foundry-compilers") (v "0.3.3") (d (list (d (n "alloy-json-abi") (r "^0.6") (f (quote ("serde_json"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.6") (f (quote ("serde" "rand"))) (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "fs_extra") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "memmap2") (r "^0.9") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "path-slash") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (k 0)) (d (n "svm") (r "^0.3") (o #t) (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.3") (o #t) (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.9") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.4") (d #t) (k 0)) (d (n "yansi") (r "^0.5") (d #t) (k 0)))) (h "07gpmw9m451jdajas311zxag0gwhri7s4a5aykw61vvljw4flppz") (f (quote (("full" "async" "svm-solc") ("default" "rustls")))) (s 2) (e (quote (("svm-solc" "dep:svm" "dep:svm-builds" "dep:sha2" "dep:tokio") ("rustls" "svm?/rustls") ("project-util" "dep:tempfile" "dep:fs_extra" "dep:rand") ("openssl" "svm?/openssl") ("async" "dep:futures-util" "dep:tokio" "tokio/fs" "tokio/process" "tokio/io-util")))) (r "1.65")))

(define-public crate-foundry-compilers-0.3.4 (c (n "foundry-compilers") (v "0.3.4") (d (list (d (n "alloy-json-abi") (r "^0.6") (f (quote ("serde_json"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.6") (f (quote ("serde" "rand"))) (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "fs_extra") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "memmap2") (r "^0.9") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "path-slash") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (k 0)) (d (n "svm") (r "^0.3") (o #t) (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.3") (o #t) (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.9") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.4") (d #t) (k 0)) (d (n "yansi") (r "^0.5") (d #t) (k 0)))) (h "1hr0484jz38szk0hb8nqaijykmgfvpf9xwvwljgjq7kfighgd6lv") (f (quote (("full" "async" "svm-solc") ("default" "rustls")))) (s 2) (e (quote (("svm-solc" "dep:svm" "dep:svm-builds" "dep:sha2" "dep:tokio") ("rustls" "svm?/rustls") ("project-util" "dep:tempfile" "dep:fs_extra" "dep:rand") ("openssl" "svm?/openssl") ("async" "dep:futures-util" "dep:tokio" "tokio/fs" "tokio/process" "tokio/io-util")))) (r "1.65")))

(define-public crate-foundry-compilers-0.3.5 (c (n "foundry-compilers") (v "0.3.5") (d (list (d (n "alloy-json-abi") (r "^0.6") (f (quote ("serde_json"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.6") (f (quote ("serde" "rand"))) (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "fs_extra") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "memmap2") (r "^0.9") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "path-slash") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (k 0)) (d (n "svm") (r "^0.3") (o #t) (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.3") (o #t) (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.9") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.4") (d #t) (k 0)) (d (n "yansi") (r "^0.5") (d #t) (k 0)))) (h "0v1zfqpw2iv6f40v7l6v9qf1ycanp44c1i6rzskpagqadyvvxk3s") (f (quote (("full" "async" "svm-solc") ("default" "rustls")))) (s 2) (e (quote (("svm-solc" "dep:svm" "dep:svm-builds" "dep:sha2" "dep:tokio") ("rustls" "svm?/rustls") ("project-util" "dep:tempfile" "dep:fs_extra" "dep:rand") ("openssl" "svm?/openssl") ("async" "dep:futures-util" "dep:tokio" "tokio/fs" "tokio/process" "tokio/io-util")))) (r "1.65")))

(define-public crate-foundry-compilers-0.3.6 (c (n "foundry-compilers") (v "0.3.6") (d (list (d (n "alloy-json-abi") (r "^0.6") (f (quote ("serde_json"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.6") (f (quote ("serde" "rand"))) (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "fs_extra") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "memmap2") (r "^0.9") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "path-slash") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (k 0)) (d (n "svm") (r "^0.3") (o #t) (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.3") (o #t) (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.9") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.4") (d #t) (k 0)) (d (n "yansi") (r "^0.5") (d #t) (k 0)))) (h "09dvbr8vrr7hc5gdzkbvy56ax1fnn8ys4awvhr0r3npb956m0r5s") (f (quote (("full" "async" "svm-solc") ("default" "rustls")))) (s 2) (e (quote (("svm-solc" "dep:svm" "dep:svm-builds" "dep:sha2" "dep:tokio") ("rustls" "svm?/rustls") ("project-util" "dep:tempfile" "dep:fs_extra" "dep:rand") ("openssl" "svm?/openssl") ("async" "dep:futures-util" "dep:tokio" "tokio/fs" "tokio/process" "tokio/io-util")))) (r "1.65")))

(define-public crate-foundry-compilers-0.3.7 (c (n "foundry-compilers") (v "0.3.7") (d (list (d (n "alloy-json-abi") (r "^0.6") (f (quote ("serde_json"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.6") (f (quote ("serde" "rand"))) (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "fs_extra") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "memmap2") (r "^0.9") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "path-slash") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (k 0)) (d (n "svm") (r "^0.3") (o #t) (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.3") (o #t) (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.9") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.4") (d #t) (k 0)) (d (n "yansi") (r "^0.5") (d #t) (k 0)))) (h "10nyinn5yi2jmvkvcm4yl3pvi920rzh0jy6n9p4h46j3wzmilvgq") (f (quote (("full" "async" "svm-solc") ("default" "rustls")))) (s 2) (e (quote (("svm-solc" "dep:svm" "dep:svm-builds" "dep:sha2" "dep:tokio") ("rustls" "svm?/rustls") ("project-util" "dep:tempfile" "dep:fs_extra" "dep:rand") ("openssl" "svm?/openssl") ("async" "dep:futures-util" "dep:tokio" "tokio/fs" "tokio/process" "tokio/io-util")))) (r "1.65")))

(define-public crate-foundry-compilers-0.3.8 (c (n "foundry-compilers") (v "0.3.8") (d (list (d (n "alloy-json-abi") (r "^0.6") (f (quote ("serde_json"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.6") (f (quote ("serde" "rand"))) (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "fs_extra") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "memmap2") (r "^0.9") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "path-slash") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (k 0)) (d (n "svm") (r "^0.3") (o #t) (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.3") (o #t) (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.9") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.4") (d #t) (k 0)) (d (n "yansi") (r "^0.5") (d #t) (k 0)))) (h "11fscgcs9266ngm5lc2r2hnwqa22cinfmbr4aw1d4dpxmkck41q4") (f (quote (("full" "async" "svm-solc") ("default" "rustls")))) (s 2) (e (quote (("svm-solc" "dep:svm" "dep:svm-builds" "dep:sha2" "dep:tokio") ("rustls" "svm?/rustls") ("project-util" "dep:tempfile" "dep:fs_extra" "dep:rand") ("openssl" "svm?/openssl") ("async" "dep:futures-util" "dep:tokio" "tokio/fs" "tokio/process" "tokio/io-util")))) (r "1.65")))

(define-public crate-foundry-compilers-0.3.9 (c (n "foundry-compilers") (v "0.3.9") (d (list (d (n "alloy-json-abi") (r "^0.6") (f (quote ("serde_json"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.6") (f (quote ("serde" "rand"))) (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "fs_extra") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "memmap2") (r "^0.9") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "path-slash") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (k 0)) (d (n "svm") (r "^0.3") (o #t) (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.3") (o #t) (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.9") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.4") (d #t) (k 0)) (d (n "yansi") (r "^0.5") (d #t) (k 0)))) (h "1d2pq6kpvjfs2ar2wshfrs6l6flsh336yhiqmbfh5zwvwyaprdyi") (f (quote (("full" "async" "svm-solc") ("default" "rustls")))) (s 2) (e (quote (("svm-solc" "dep:svm" "dep:svm-builds" "dep:sha2" "dep:tokio") ("rustls" "svm?/rustls") ("project-util" "dep:tempfile" "dep:fs_extra" "dep:rand") ("openssl" "svm?/openssl") ("async" "dep:futures-util" "dep:tokio" "tokio/fs" "tokio/process" "tokio/io-util")))) (r "1.65")))

(define-public crate-foundry-compilers-0.3.10 (c (n "foundry-compilers") (v "0.3.10") (d (list (d (n "alloy-json-abi") (r "^0.6") (f (quote ("serde_json"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.6") (f (quote ("serde" "rand"))) (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "fs_extra") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "memmap2") (r "^0.9") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "path-slash") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (k 0)) (d (n "svm") (r "^0.3") (o #t) (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.3") (o #t) (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.9") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.4") (d #t) (k 0)) (d (n "yansi") (r "^0.5") (d #t) (k 0)))) (h "0sbxqpriwhvdg3sy72kn9867dafjbj1ay2padz4l9s0xv3znsnkz") (f (quote (("full" "async" "svm-solc") ("default" "rustls")))) (s 2) (e (quote (("svm-solc" "dep:svm" "dep:svm-builds" "dep:sha2" "dep:tokio") ("rustls" "svm?/rustls") ("project-util" "dep:tempfile" "dep:fs_extra" "dep:rand") ("openssl" "svm?/openssl") ("async" "dep:futures-util" "dep:tokio" "tokio/fs" "tokio/process" "tokio/io-util")))) (r "1.65")))

(define-public crate-foundry-compilers-0.3.11 (c (n "foundry-compilers") (v "0.3.11") (d (list (d (n "alloy-json-abi") (r "^0.6") (f (quote ("serde_json"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.6") (f (quote ("serde" "rand"))) (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "fs_extra") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "memmap2") (r "^0.9") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "path-slash") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (k 0)) (d (n "svm") (r "^0.3") (o #t) (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.3") (o #t) (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.9") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.4") (d #t) (k 0)) (d (n "yansi") (r "^0.5") (d #t) (k 0)))) (h "0y5lxhvl1753wm6pdqavjzfjxhhnxsy4510vsrnrvr185d13ph0w") (f (quote (("full" "async" "svm-solc") ("default" "rustls")))) (s 2) (e (quote (("svm-solc" "dep:svm" "dep:svm-builds" "dep:sha2" "dep:tokio") ("rustls" "svm?/rustls") ("project-util" "dep:tempfile" "dep:fs_extra" "dep:rand") ("openssl" "svm?/openssl") ("async" "dep:futures-util" "dep:tokio" "tokio/fs" "tokio/process" "tokio/io-util")))) (r "1.65")))

(define-public crate-foundry-compilers-0.3.12 (c (n "foundry-compilers") (v "0.3.12") (d (list (d (n "alloy-json-abi") (r "^0.6") (f (quote ("serde_json"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.6") (f (quote ("serde" "rand"))) (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "fs_extra") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "memmap2") (r "^0.9") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "path-slash") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (k 0)) (d (n "svm") (r "^0.3") (o #t) (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.3") (o #t) (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.9") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.4") (d #t) (k 0)) (d (n "yansi") (r "^0.5") (d #t) (k 0)))) (h "0sdzpzbyl3nvc6gkqsh48sbijqahi3jqkvjdv5240dbd0lra7vi1") (f (quote (("full" "async" "svm-solc") ("default" "rustls")))) (s 2) (e (quote (("svm-solc" "dep:svm" "dep:svm-builds" "dep:sha2" "dep:tokio") ("rustls" "svm?/rustls") ("project-util" "dep:tempfile" "dep:fs_extra" "dep:rand") ("openssl" "svm?/openssl") ("async" "dep:futures-util" "dep:tokio" "tokio/fs" "tokio/process" "tokio/io-util")))) (r "1.65")))

(define-public crate-foundry-compilers-0.3.13 (c (n "foundry-compilers") (v "0.3.13") (d (list (d (n "alloy-json-abi") (r "^0.6") (f (quote ("serde_json"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.6") (f (quote ("serde" "rand"))) (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "fs_extra") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "memmap2") (r "^0.9") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "path-slash") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (k 0)) (d (n "svm") (r "^0.4") (o #t) (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.4") (o #t) (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.9") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.4") (d #t) (k 0)) (d (n "yansi") (r "^0.5") (d #t) (k 0)))) (h "0pqsxcq3bxcdl88irfhngisbbld233qcq5dagk3gxq4k40ddm6h7") (f (quote (("full" "async" "svm-solc") ("default" "rustls")))) (s 2) (e (quote (("svm-solc" "dep:svm" "dep:svm-builds" "dep:sha2" "dep:tokio") ("rustls" "svm?/rustls") ("project-util" "dep:tempfile" "dep:fs_extra" "dep:rand") ("openssl" "svm?/openssl") ("async" "dep:futures-util" "dep:tokio" "tokio/fs" "tokio/process" "tokio/io-util")))) (r "1.65")))

(define-public crate-foundry-compilers-0.3.14 (c (n "foundry-compilers") (v "0.3.14") (d (list (d (n "alloy-json-abi") (r "^0.7") (f (quote ("serde_json"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.7") (f (quote ("serde" "rand"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.7") (f (quote ("serde" "rand"))) (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "fs_extra") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "memmap2") (r "^0.9") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "path-slash") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (k 0)) (d (n "svm") (r "^0.4") (o #t) (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.4") (o #t) (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.9") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.4") (d #t) (k 0)) (d (n "yansi") (r "^0.5") (d #t) (k 0)))) (h "0470xyk5kscm71lq4njfw3wzxr5pw73irfwx6ln6l9cz1vwj6cyx") (f (quote (("full" "async" "svm-solc") ("default" "rustls")))) (s 2) (e (quote (("svm-solc" "dep:svm" "dep:svm-builds" "dep:sha2" "dep:tokio") ("rustls" "svm?/rustls") ("project-util" "dep:tempfile" "dep:fs_extra" "dep:rand") ("openssl" "svm?/openssl") ("async" "dep:futures-util" "dep:tokio" "tokio/fs" "tokio/process" "tokio/io-util")))) (r "1.65")))

(define-public crate-foundry-compilers-0.3.15 (c (n "foundry-compilers") (v "0.3.15") (d (list (d (n "alloy-json-abi") (r "^0.7") (f (quote ("serde_json"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.7") (f (quote ("serde" "rand"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.7") (f (quote ("serde" "rand"))) (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "fs_extra") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "memmap2") (r "^0.9") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "path-slash") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (k 0)) (d (n "svm") (r "^0.5") (o #t) (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.5") (o #t) (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.9") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.4") (d #t) (k 0)) (d (n "yansi") (r "^0.5") (d #t) (k 0)))) (h "0zv41w94p77hd6jf70dlwpwm51m6gg7m2sd21pc75sj6fi3r069c") (f (quote (("full" "async" "svm-solc") ("default" "rustls")))) (s 2) (e (quote (("svm-solc" "dep:svm" "dep:svm-builds" "dep:sha2" "dep:tokio") ("rustls" "svm?/rustls") ("project-util" "dep:tempfile" "dep:fs_extra" "dep:rand") ("openssl" "svm?/openssl") ("async" "dep:futures-util" "dep:tokio" "tokio/fs" "tokio/process" "tokio/io-util")))) (r "1.65")))

(define-public crate-foundry-compilers-0.3.16 (c (n "foundry-compilers") (v "0.3.16") (d (list (d (n "alloy-json-abi") (r "^0.7") (f (quote ("serde_json"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.7") (f (quote ("serde" "rand"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.7") (f (quote ("serde" "rand"))) (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "fs_extra") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "memmap2") (r "^0.9") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "path-slash") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (k 0)) (d (n "svm") (r "^0.5") (o #t) (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.5") (o #t) (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.9") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.4") (d #t) (k 0)) (d (n "yansi") (r "^0.5") (d #t) (k 0)))) (h "1sky2l0nbbb4j81v9hpaijm2dwbnd17kapvnwfwp2q8z1dqiw53c") (f (quote (("full" "async" "svm-solc") ("default" "rustls")))) (s 2) (e (quote (("svm-solc" "dep:svm" "dep:svm-builds" "dep:sha2" "dep:tokio") ("rustls" "svm?/rustls") ("project-util" "dep:tempfile" "dep:fs_extra" "dep:rand") ("openssl" "svm?/openssl") ("async" "dep:futures-util" "dep:tokio" "tokio/fs" "tokio/process" "tokio/io-util")))) (r "1.65")))

(define-public crate-foundry-compilers-0.3.17 (c (n "foundry-compilers") (v "0.3.17") (d (list (d (n "alloy-json-abi") (r "^0.7") (f (quote ("serde_json"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.7") (f (quote ("serde" "rand"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.7") (f (quote ("serde" "rand"))) (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "fs_extra") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "memmap2") (r "^0.9") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "path-slash") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (k 0)) (d (n "svm") (r "^0.5") (o #t) (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.5") (o #t) (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.9") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.4") (d #t) (k 0)) (d (n "yansi") (r "^0.5") (d #t) (k 0)))) (h "1wldj65vp1dqp6mni9xj1q9l40s2jgpd72215xfb0ha72xzsdb4c") (f (quote (("full" "async" "svm-solc") ("default" "rustls")))) (s 2) (e (quote (("svm-solc" "dep:svm" "dep:svm-builds" "dep:sha2" "dep:tokio") ("rustls" "svm?/rustls") ("project-util" "dep:tempfile" "dep:fs_extra" "dep:rand") ("openssl" "svm?/openssl") ("async" "dep:futures-util" "dep:tokio" "tokio/fs" "tokio/process" "tokio/io-util")))) (r "1.65")))

(define-public crate-foundry-compilers-0.3.18 (c (n "foundry-compilers") (v "0.3.18") (d (list (d (n "alloy-json-abi") (r "^0.7") (f (quote ("serde_json"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.7") (f (quote ("serde" "rand"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.7") (f (quote ("serde" "rand"))) (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "fs_extra") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "memmap2") (r "^0.9") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "path-slash") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (k 0)) (d (n "svm") (r "^0.5") (o #t) (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.5") (o #t) (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.9") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.4") (d #t) (k 0)) (d (n "yansi") (r "^1.0.1") (d #t) (k 0)))) (h "07bm1zymljx99mfvrywqj4ykp2q80n77iqkrfz7qhd3mqx9359qh") (f (quote (("full" "async" "svm-solc") ("default" "rustls")))) (s 2) (e (quote (("svm-solc" "dep:svm" "dep:svm-builds" "dep:sha2" "dep:tokio") ("rustls" "svm?/rustls") ("project-util" "dep:tempfile" "dep:fs_extra" "dep:rand") ("openssl" "svm?/openssl") ("async" "dep:futures-util" "dep:tokio" "tokio/fs" "tokio/process" "tokio/io-util")))) (r "1.65")))

(define-public crate-foundry-compilers-0.3.19 (c (n "foundry-compilers") (v "0.3.19") (d (list (d (n "alloy-json-abi") (r "^0.7") (f (quote ("serde_json"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.7") (f (quote ("serde" "rand"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.7") (f (quote ("serde" "rand"))) (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "fs_extra") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "memmap2") (r "^0.9") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "path-slash") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (k 0)) (d (n "svm") (r "^0.5") (o #t) (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.5") (o #t) (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.9") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.4") (d #t) (k 0)) (d (n "yansi") (r "^1.0.1") (d #t) (k 0)))) (h "1zalqpckwdcgfvyxl5h41wg9843xbqbwan910n0kzm38yxr1fhp5") (f (quote (("full" "async" "svm-solc") ("default" "rustls")))) (s 2) (e (quote (("svm-solc" "dep:svm" "dep:svm-builds" "dep:sha2" "dep:tokio") ("rustls" "svm?/rustls") ("project-util" "dep:tempfile" "dep:fs_extra" "dep:rand") ("openssl" "svm?/openssl") ("async" "dep:futures-util" "dep:tokio" "tokio/fs" "tokio/process" "tokio/io-util")))) (r "1.65")))

(define-public crate-foundry-compilers-0.3.20 (c (n "foundry-compilers") (v "0.3.20") (d (list (d (n "alloy-json-abi") (r "^0.7") (f (quote ("serde_json"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.7") (f (quote ("serde" "rand"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.7") (f (quote ("serde" "rand"))) (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "fs_extra") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "memmap2") (r "^0.9") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "path-slash") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (k 0)) (d (n "svm") (r "^0.5") (o #t) (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.5") (o #t) (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.9") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.4") (d #t) (k 0)) (d (n "yansi") (r "^1.0.1") (d #t) (k 0)))) (h "01a3fx4plad0a5zvhfih3vb99zg92r5ldj0hnbb7fg96v5sk943p") (f (quote (("full" "async" "svm-solc") ("default" "rustls")))) (s 2) (e (quote (("svm-solc" "dep:svm" "dep:svm-builds" "dep:sha2" "dep:tokio") ("rustls" "svm?/rustls") ("project-util" "dep:tempfile" "dep:fs_extra" "dep:rand") ("openssl" "svm?/openssl") ("async" "dep:futures-util" "dep:tokio" "tokio/fs" "tokio/process" "tokio/io-util")))) (r "1.65")))

(define-public crate-foundry-compilers-0.4.0 (c (n "foundry-compilers") (v "0.4.0") (d (list (d (n "alloy-json-abi") (r "^0.7") (f (quote ("serde_json"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.7") (f (quote ("serde" "rand"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.7") (f (quote ("serde" "rand"))) (d #t) (k 2)) (d (n "auto_impl") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "fd-lock") (r "^4.0.0") (d #t) (k 2)) (d (n "fs_extra") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "memmap2") (r "^0.9") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "path-slash") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (d #t) (k 2)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (k 0)) (d (n "svm") (r "^0.5") (o #t) (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.5") (o #t) (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.9") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.4") (d #t) (k 0)) (d (n "yansi") (r "^1.0.1") (d #t) (k 0)))) (h "13jvf8d5mp0141ab08gd58pkknfrb7nzhkn7mhq0h6hbwbdn6r6p") (f (quote (("full" "async" "svm-solc") ("default" "rustls")))) (s 2) (e (quote (("svm-solc" "dep:svm" "dep:svm-builds" "dep:sha2" "dep:tokio") ("rustls" "svm?/rustls") ("project-util" "dep:tempfile" "dep:fs_extra" "dep:rand" "svm-solc") ("openssl" "svm?/openssl") ("async" "dep:futures-util" "dep:tokio" "tokio/fs" "tokio/process" "tokio/io-util")))) (r "1.65")))

(define-public crate-foundry-compilers-0.4.1 (c (n "foundry-compilers") (v "0.4.1") (d (list (d (n "alloy-json-abi") (r "^0.7") (f (quote ("serde_json"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.7") (f (quote ("serde" "rand"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.7") (f (quote ("serde" "rand"))) (d #t) (k 2)) (d (n "auto_impl") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "fd-lock") (r "^4.0.0") (d #t) (k 2)) (d (n "fs_extra") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "memmap2") (r "^0.9") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "path-slash") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (d #t) (k 2)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (k 0)) (d (n "svm") (r "^0.5") (o #t) (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.5") (o #t) (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.9") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.4") (d #t) (k 0)) (d (n "yansi") (r "^1.0.1") (d #t) (k 0)))) (h "0fifsrkqxwm98077bbs8r1vx43jcb6l1iy1l73qxml0h6kirszzr") (f (quote (("full" "async" "svm-solc") ("default" "rustls")))) (s 2) (e (quote (("svm-solc" "dep:svm" "dep:svm-builds" "dep:sha2" "dep:tokio") ("rustls" "svm?/rustls") ("project-util" "dep:tempfile" "dep:fs_extra" "dep:rand" "svm-solc") ("openssl" "svm?/openssl") ("async" "dep:futures-util" "dep:tokio" "tokio/fs" "tokio/process" "tokio/io-util")))) (r "1.65")))

(define-public crate-foundry-compilers-0.4.2 (c (n "foundry-compilers") (v "0.4.2") (d (list (d (n "alloy-json-abi") (r "^0.7") (f (quote ("serde_json"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.7") (f (quote ("serde" "rand"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.7") (f (quote ("serde" "rand"))) (d #t) (k 2)) (d (n "auto_impl") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "fd-lock") (r "^4.0.0") (d #t) (k 2)) (d (n "fs_extra") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "memmap2") (r "^0.9") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "path-slash") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (d #t) (k 2)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (k 0)) (d (n "svm") (r "^0.5") (o #t) (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.5") (o #t) (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.9") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.4") (d #t) (k 0)) (d (n "yansi") (r "^1.0.1") (d #t) (k 0)))) (h "0ync897m2mmxlkq55ldx9x5z50xya2si2hbyzs0jjjnp8nsh615q") (f (quote (("full" "async" "svm-solc") ("default" "rustls")))) (s 2) (e (quote (("svm-solc" "dep:svm" "dep:svm-builds" "dep:sha2" "dep:tokio") ("rustls" "svm?/rustls") ("project-util" "dep:tempfile" "dep:fs_extra" "dep:rand" "svm-solc") ("openssl" "svm?/openssl") ("async" "dep:futures-util" "dep:tokio" "tokio/fs" "tokio/process" "tokio/io-util")))) (r "1.65")))

(define-public crate-foundry-compilers-0.4.3 (c (n "foundry-compilers") (v "0.4.3") (d (list (d (n "alloy-json-abi") (r "^0.7") (f (quote ("serde_json"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.7") (f (quote ("serde" "rand"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.7") (f (quote ("serde" "rand"))) (d #t) (k 2)) (d (n "auto_impl") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "fd-lock") (r "^4.0.0") (d #t) (k 2)) (d (n "fs_extra") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "memmap2") (r "^0.9") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "path-slash") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (d #t) (k 2)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (k 0)) (d (n "svm") (r "^0.5") (o #t) (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.5") (o #t) (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.9") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.4") (d #t) (k 0)) (d (n "yansi") (r "^1.0.1") (d #t) (k 0)))) (h "06knm16pvm3407rb9px3x32d49mz4lyvlamzvpcxx9cd9adbp83l") (f (quote (("full" "async" "svm-solc") ("default" "rustls")))) (s 2) (e (quote (("svm-solc" "dep:svm" "dep:svm-builds" "dep:sha2" "dep:tokio") ("rustls" "svm?/rustls") ("project-util" "dep:tempfile" "dep:fs_extra" "dep:rand" "svm-solc") ("openssl" "svm?/openssl") ("async" "dep:futures-util" "dep:tokio" "tokio/fs" "tokio/process" "tokio/io-util")))) (r "1.65")))

(define-public crate-foundry-compilers-0.5.0 (c (n "foundry-compilers") (v "0.5.0") (d (list (d (n "alloy-json-abi") (r "^0.7") (f (quote ("serde_json"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.7") (f (quote ("serde" "rand"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.7") (f (quote ("serde" "rand"))) (d #t) (k 2)) (d (n "auto_impl") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "fd-lock") (r "^4.0.0") (d #t) (k 2)) (d (n "fs_extra") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "memmap2") (r "^0.9") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "path-slash") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (d #t) (k 2)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (k 0)) (d (n "svm") (r "^0.5") (o #t) (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.5") (o #t) (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.9") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.4") (d #t) (k 0)) (d (n "winnow") (r "^0.6") (d #t) (k 0)) (d (n "yansi") (r "^1.0.1") (d #t) (k 0)))) (h "03k6ahsa4azmsvsp1416id07mjw7ia0pfrdcfbq2rc9rz455wvqk") (f (quote (("full" "async" "svm-solc") ("default" "rustls")))) (s 2) (e (quote (("svm-solc" "dep:svm" "dep:svm-builds" "dep:sha2" "dep:tokio") ("rustls" "svm?/rustls") ("project-util" "dep:tempfile" "dep:fs_extra" "dep:rand" "svm-solc") ("openssl" "svm?/openssl") ("async" "dep:futures-util" "dep:tokio" "tokio/fs" "tokio/process" "tokio/io-util")))) (r "1.65")))

(define-public crate-foundry-compilers-0.5.1 (c (n "foundry-compilers") (v "0.5.1") (d (list (d (n "alloy-json-abi") (r "^0.7") (f (quote ("serde_json"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.7") (f (quote ("serde" "rand"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.7") (f (quote ("serde" "rand"))) (d #t) (k 2)) (d (n "auto_impl") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "fd-lock") (r "^4.0.0") (d #t) (k 2)) (d (n "fs_extra") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "memmap2") (r "^0.9") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "path-slash") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (d #t) (k 2)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (k 0)) (d (n "svm") (r "^0.5") (o #t) (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.5") (o #t) (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.9") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.4") (d #t) (k 0)) (d (n "winnow") (r "^0.6") (d #t) (k 0)) (d (n "yansi") (r "^1.0.1") (d #t) (k 0)))) (h "1zmi1nzlsxh2x4zy2y7sa0ass18s3ag2haggzb17xba7mxg0pg4g") (f (quote (("full" "async" "svm-solc") ("default" "rustls")))) (s 2) (e (quote (("svm-solc" "dep:svm" "dep:svm-builds" "dep:sha2" "dep:tokio") ("rustls" "svm?/rustls") ("project-util" "dep:tempfile" "dep:fs_extra" "dep:rand" "svm-solc") ("openssl" "svm?/openssl") ("async" "dep:futures-util" "dep:tokio" "tokio/fs" "tokio/process" "tokio/io-util")))) (r "1.65")))

(define-public crate-foundry-compilers-0.5.2 (c (n "foundry-compilers") (v "0.5.2") (d (list (d (n "alloy-json-abi") (r "^0.7") (f (quote ("serde_json"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.7") (f (quote ("serde" "rand"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.7") (f (quote ("serde" "rand"))) (d #t) (k 2)) (d (n "auto_impl") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "fd-lock") (r "^4.0.0") (d #t) (k 2)) (d (n "fs_extra") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "memmap2") (r "^0.9") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "path-slash") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (d #t) (k 2)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (k 0)) (d (n "svm") (r "^0.5") (o #t) (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.5") (o #t) (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.9") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.4") (d #t) (k 0)) (d (n "winnow") (r "^0.6") (d #t) (k 0)) (d (n "yansi") (r "^1.0.1") (d #t) (k 0)))) (h "074g03fnpzypbwmrx6476j0gqi0nwnbbdmb926hx4pb3rn11hmyd") (f (quote (("full" "async" "svm-solc") ("default" "rustls")))) (s 2) (e (quote (("svm-solc" "dep:svm" "dep:svm-builds" "dep:sha2" "dep:tokio") ("rustls" "svm?/rustls") ("project-util" "dep:tempfile" "dep:fs_extra" "dep:rand" "svm-solc") ("openssl" "svm?/openssl") ("async" "dep:futures-util" "dep:tokio" "tokio/fs" "tokio/process" "tokio/io-util")))) (r "1.65")))

(define-public crate-foundry-compilers-0.6.0 (c (n "foundry-compilers") (v "0.6.0") (d (list (d (n "alloy-json-abi") (r "^0.7") (f (quote ("serde_json"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.7") (f (quote ("serde" "rand"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.7") (f (quote ("serde" "rand"))) (d #t) (k 2)) (d (n "auto_impl") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "fd-lock") (r "^4.0.0") (d #t) (k 2)) (d (n "fs_extra") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "itertools") (r "^0.13") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "memmap2") (r "^0.9") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "path-slash") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (d #t) (k 2)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (k 0)) (d (n "svm") (r "^0.5") (o #t) (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.5") (o #t) (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.9") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.4") (d #t) (k 0)) (d (n "winnow") (r "^0.6") (d #t) (k 0)) (d (n "yansi") (r "^1.0.1") (d #t) (k 0)))) (h "0lvzizgrdmnnwj5czni611f9fmjpqpzx9jw2blg8dwf91s3a6w7y") (f (quote (("full" "async" "svm-solc") ("default" "rustls")))) (s 2) (e (quote (("svm-solc" "dep:svm" "dep:svm-builds" "dep:sha2" "dep:tokio") ("rustls" "svm?/rustls") ("project-util" "dep:tempfile" "dep:fs_extra" "dep:rand" "svm-solc") ("openssl" "svm?/openssl") ("async" "dep:futures-util" "dep:tokio" "tokio/fs" "tokio/process" "tokio/io-util")))) (r "1.65")))

(define-public crate-foundry-compilers-0.6.1 (c (n "foundry-compilers") (v "0.6.1") (d (list (d (n "alloy-json-abi") (r "^0.7") (f (quote ("serde_json"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.7") (f (quote ("serde" "rand"))) (d #t) (k 0)) (d (n "alloy-primitives") (r "^0.7") (f (quote ("serde" "rand"))) (d #t) (k 2)) (d (n "auto_impl") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "fd-lock") (r "^4.0.0") (d #t) (k 2)) (d (n "fs_extra") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "itertools") (r "^0.13") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "memmap2") (r "^0.9") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "path-slash") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (d #t) (k 2)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (k 0)) (d (n "svm") (r "^0.5") (o #t) (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.5") (o #t) (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.9") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.4") (d #t) (k 0)) (d (n "winnow") (r "^0.6") (d #t) (k 0)) (d (n "yansi") (r "^1.0.1") (d #t) (k 0)))) (h "0iaa7hprf6197zydi4mangm9ck33ik8ggncwvagklbx4njqv2hvk") (f (quote (("test-utils") ("full" "async" "svm-solc") ("default" "rustls")))) (s 2) (e (quote (("svm-solc" "dep:svm" "dep:svm-builds" "dep:sha2" "dep:tokio") ("rustls" "svm?/rustls") ("project-util" "dep:tempfile" "dep:fs_extra" "dep:rand" "svm-solc") ("openssl" "svm?/openssl") ("async" "dep:futures-util" "dep:tokio" "tokio/fs" "tokio/process" "tokio/io-util")))) (r "1.65")))

