(define-module (crates-io fo g- fog-pack) #:use-module (crates-io))

(define-public crate-fog-pack-0.1.0 (c (n "fog-pack") (v "0.1.0") (d (list (d (n "blake2-rfc") (r "^0.2.18") (d #t) (k 0)) (d (n "bytecount") (r "^0.6.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "colored") (r "^1.7") (d #t) (k 2)) (d (n "constant_time_eq") (r "^0.1.3") (d #t) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 2)) (d (n "ieee754") (r "^0.2.6") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libsodium-sys") (r "^0.2.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.0.8") (d #t) (k 2)) (d (n "unicode-normalization") (r "^0.1.12") (d #t) (k 0)) (d (n "zstd-safe") (r "^2.0") (d #t) (k 0)))) (h "04412wphn3d0k3w05yqavqc4dpqi1bpw3p7hmimpsz4m65wwz79x")))

(define-public crate-fog-pack-0.1.1 (c (n "fog-pack") (v "0.1.1") (d (list (d (n "blake2-rfc") (r "^0.2.18") (d #t) (k 0)) (d (n "bytecount") (r "^0.6.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "colored") (r "^1.7") (d #t) (k 2)) (d (n "constant_time_eq") (r "^0.1.3") (d #t) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 2)) (d (n "ieee754") (r "^0.2.6") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libsodium-sys") (r "^0.2.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.0.8") (d #t) (k 2)) (d (n "unicode-normalization") (r "^0.1.12") (d #t) (k 0)) (d (n "zstd-safe") (r "^2.0") (d #t) (k 0)))) (h "0qkprwxq2rm55lvc5pkv0f8mxhl4d86aklj6a13chq8bwfnz7aqs")))

(define-public crate-fog-pack-0.2.0 (c (n "fog-pack") (v "0.2.0") (d (list (d (n "bytecount") (r "^0.6.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "fog-crypto") (r "^0.4") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1") (d #t) (k 0)) (d (n "zstd-safe") (r "^3.0") (d #t) (k 0)))) (h "031rqbvng3i9z25jkwz74gzb0a34a1bsr1si48qz3sn98kidrpds")))

(define-public crate-fog-pack-0.2.1 (c (n "fog-pack") (v "0.2.1") (d (list (d (n "bytecount") (r "^0.6.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "fog-crypto") (r "^0.4") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1") (d #t) (k 0)) (d (n "zstd-safe") (r "^3.0") (d #t) (k 0)))) (h "0p8ipfy9rbzy327rjr4c6jxcw50xyf37b30nhprkkghg573gxyj6")))

(define-public crate-fog-pack-0.2.2 (c (n "fog-pack") (v "0.2.2") (d (list (d (n "bytecount") (r "^0.6.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "fog-crypto") (r "^0.4") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1") (d #t) (k 0)) (d (n "zstd-safe") (r "^3.0") (d #t) (k 0)))) (h "0ncj6viacmlxdcqhbw5qxykb6kdlnn9104z2ayh9s1c5shq9w6pk")))

(define-public crate-fog-pack-0.3.0 (c (n "fog-pack") (v "0.3.0") (d (list (d (n "bytecount") (r "^0.6.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "fog-crypto") (r "^0.4.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1") (d #t) (k 0)) (d (n "zstd-safe") (r "^6") (d #t) (k 0)))) (h "1c4ldlmv07dchibk2jzn876gy67663i5apxnlw8n9jn1m2q4bv15")))

(define-public crate-fog-pack-0.4.0 (c (n "fog-pack") (v "0.4.0") (d (list (d (n "bytecount") (r "^0.6.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "fog-crypto") (r "^0.4.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1") (d #t) (k 0)) (d (n "zstd-safe") (r "^6") (d #t) (k 0)))) (h "0a493xnpb8zjaj56rqd5gcjpsqbmdq89799ic6abcji9hg3bqlxg")))

(define-public crate-fog-pack-0.4.1 (c (n "fog-pack") (v "0.4.1") (d (list (d (n "bytecount") (r "^0.6.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "fog-crypto") (r "^0.4.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1") (d #t) (k 0)) (d (n "zstd-safe") (r "^6") (d #t) (k 0)))) (h "1wdiip5xyfbhkyi7411glbnqrsh4jmlr58ylic4mkz94qn5y5f8i")))

(define-public crate-fog-pack-0.4.2 (c (n "fog-pack") (v "0.4.2") (d (list (d (n "bytecount") (r "^0.6.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "fog-crypto") (r "^0.4.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1") (d #t) (k 0)) (d (n "zstd-safe") (r "^6") (d #t) (k 0)))) (h "01pcgcb9h5cwgj5y303s950mbgyykla5g844aibdzvgbd2klchqy")))

(define-public crate-fog-pack-0.5.0 (c (n "fog-pack") (v "0.5.0") (d (list (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bytecount") (r "^0.6.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "fog-crypto") (r "^0.5.3") (f (quote ("with-serde"))) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1") (d #t) (k 0)) (d (n "zstd-safe") (r "^6") (d #t) (k 0)))) (h "13jpbmqvsfdnjb26ycbw08n58czams40rzgmhfily5hxig0iqyx1") (f (quote (("getrandom" "fog-crypto/getrandom") ("default" "getrandom"))))))

