(define-module (crates-io fo rm forma-render) #:use-module (crates-io))

(define-public crate-forma-render-0.1.0 (c (n "forma-render") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "bytemuck") (r "^1.12.3") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8.12") (d #t) (k 0)) (d (n "crumsort") (r "^0.1.0") (d #t) (k 0)) (d (n "etagere") (r "^0.2.7") (d #t) (k 0)) (d (n "half") (r "^2.1.0") (d #t) (k 2)) (d (n "pollster") (r "^0.2.5") (d #t) (k 2)) (d (n "ramhorns") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon") (r "^1.5.3") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "wgpu") (r "^0.14.0") (o #t) (d #t) (k 0)))) (h "000n1zjnyv26n0l11bl49cgcm2fmr4bngd2cxd2x9x3nlvw1xj6p") (f (quote (("gpu" "bytemuck" "ramhorns" "wgpu") ("default" "gpu"))))))

(define-public crate-forma-render-0.1.1 (c (n "forma-render") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "bytemuck") (r "^1.12.3") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8.12") (d #t) (k 0)) (d (n "crumsort") (r "^0.1.0") (d #t) (k 0)) (d (n "etagere") (r "^0.2.7") (d #t) (k 0)) (d (n "half") (r "^2.1.0") (d #t) (k 2)) (d (n "pollster") (r "^0.2.5") (d #t) (k 2)) (d (n "ramhorns") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon") (r "^1.5.3") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "wgpu") (r "^0.14.0") (o #t) (d #t) (k 0)))) (h "1r58p534ddw8alywgg0ab48ikxx15gx1kcps5c9088hl4mfiqsxl") (f (quote (("gpu" "bytemuck" "ramhorns" "wgpu") ("default" "gpu"))))))

(define-public crate-forma-render-0.1.2 (c (n "forma-render") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "bytemuck") (r "^1.12.3") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8.12") (d #t) (k 0)) (d (n "crumsort") (r "^0.1.0") (d #t) (k 0)) (d (n "etagere") (r "^0.2.7") (d #t) (k 0)) (d (n "half") (r "^2.1.0") (d #t) (k 2)) (d (n "pollster") (r "^0.2.5") (d #t) (k 2)) (d (n "ramhorns") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon") (r "^1.5.3") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "wgpu") (r "^0.14.0") (o #t) (d #t) (k 0)))) (h "0bizvmg4w878ylz6513g5vy2rvini8x16dj9m4vg430al79l2lf7") (f (quote (("gpu" "bytemuck" "ramhorns" "wgpu") ("default" "gpu"))))))

(define-public crate-forma-render-0.1.3 (c (n "forma-render") (v "0.1.3") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "bytemuck") (r "^1.12.3") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8.12") (d #t) (k 0)) (d (n "crumsort") (r "^0.1.0") (d #t) (k 0)) (d (n "etagere") (r "^0.2.7") (d #t) (k 0)) (d (n "half") (r "^2.1.0") (d #t) (k 2)) (d (n "pollster") (r "^0.2.5") (d #t) (k 2)) (d (n "ramhorns") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon") (r "^1.5.3") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "wgpu") (r "^0.14.0") (o #t) (d #t) (k 0)))) (h "1lj8pxam1n87w82nq2ynlnjqkrni8w9i7qvv0yb2aq3rjxam5wa5") (f (quote (("gpu" "bytemuck" "ramhorns" "wgpu") ("default" "gpu"))))))

