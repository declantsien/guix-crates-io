(define-module (crates-io fo re forensic-adb) #:use-module (crates-io))

(define-public crate-forensic-adb-0.6.0 (c (n "forensic-adb") (v "0.6.0") (d (list (d (n "futures") (r "^0.3.27") (d #t) (k 2)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("perf" "std"))) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.25") (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("net" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "unix_path") (r "^1.0") (d #t) (k 0)) (d (n "uuid") (r "^1.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1hqvf7hskz2sbr990400ddwh3wa4phkcviqnrjyvvwbwazz37sab")))

(define-public crate-forensic-adb-0.6.1 (c (n "forensic-adb") (v "0.6.1") (d (list (d (n "futures") (r "^0.3.27") (d #t) (k 2)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("perf" "std"))) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.25") (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("net" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "unix_path") (r "^1.0") (d #t) (k 0)) (d (n "uuid") (r "^1.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0bn1pqcjjij4njdihnfdxjrfks6mrk58x0jwk4r34g92954kc0c2")))

(define-public crate-forensic-adb-0.6.2 (c (n "forensic-adb") (v "0.6.2") (d (list (d (n "futures") (r "^0.3.27") (d #t) (k 2)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("perf" "std"))) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.25") (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("net" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "unix_path") (r "^1.0") (d #t) (k 0)) (d (n "uuid") (r "^1.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1q4smnc31jq1nryri2yyayvjsz3zslw6vkd085mpfv9z3v1djkbd")))

(define-public crate-forensic-adb-0.7.0 (c (n "forensic-adb") (v "0.7.0") (d (list (d (n "bstr") (r "^1.9.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.27") (d #t) (k 2)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("perf" "std"))) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.25") (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("net" "fs" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "unix_path") (r "^1.0") (d #t) (k 0)) (d (n "uuid") (r "^1.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0q6whrpdaqvr0y89hb8ajqlgx6fq2x1mhblr6xfy8vywrhq2hqyw")))

