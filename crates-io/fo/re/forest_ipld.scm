(define-module (crates-io fo re forest_ipld) #:use-module (crates-io))

(define-public crate-forest_ipld-0.1.0 (c (n "forest_ipld") (v "0.1.0") (d (list (d (n "async-recursion") (r "^0.3.1") (d #t) (k 0)) (d (n "async-std") (r "^1.6.3") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "cid") (r "^0.2") (f (quote ("cbor" "json"))) (d #t) (k 0) (p "forest_cid")) (d (n "db") (r "^0.1") (d #t) (k 2) (p "forest_db")) (d (n "encoding") (r "^0.2") (d #t) (k 0) (p "forest_encoding")) (d (n "indexmap") (r "^1.3.2") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "multibase") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "17y157dqhnawa09pq2f9pk6720wmqv5ll8wcim7s108sj4l3qk9m") (f (quote (("submodule_tests" "json") ("json" "multibase"))))))

(define-public crate-forest_ipld-0.1.1 (c (n "forest_ipld") (v "0.1.1") (d (list (d (n "async-recursion") (r "^0.3.1") (d #t) (k 0)) (d (n "async-std") (r "^1.6.3") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "cid") (r "^0.3") (f (quote ("cbor" "json"))) (d #t) (k 0) (p "forest_cid")) (d (n "encoding") (r "^0.2") (d #t) (k 0) (p "forest_encoding")) (d (n "indexmap") (r "^1.3.2") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "multibase") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1k3jj8ar7pdvr70ilip7l4bdj1n8qkrr9599dp8nhxw05z96szrs") (f (quote (("submodule_tests" "json") ("json" "multibase"))))))

