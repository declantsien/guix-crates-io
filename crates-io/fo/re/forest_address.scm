(define-module (crates-io fo re forest_address) #:use-module (crates-io))

(define-public crate-forest_address-0.1.0 (c (n "forest_address") (v "0.1.0") (d (list (d (n "data-encoding") (r "^2.1.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.7") (d #t) (k 0)) (d (n "encoding") (r "^0.1") (d #t) (k 0) (p "forest_encoding")) (d (n "leb128") (r "^0.2.1") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0l5apb685hmhbz6fzxzlinq4qwg50nnf2g9b1d5ggd38lsf59jsy")))

(define-public crate-forest_address-0.2.0 (c (n "forest_address") (v "0.2.0") (d (list (d (n "data-encoding") (r "^2.1.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.7") (d #t) (k 0)) (d (n "encoding") (r "^0.1") (d #t) (k 0) (p "forest_encoding")) (d (n "leb128") (r "^0.2.1") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "02l9c1klqr2qziz2fd51yydh83w3f6dgb1jfmf7772s433v3fr3g")))

(define-public crate-forest_address-0.2.1 (c (n "forest_address") (v "0.2.1") (d (list (d (n "data-encoding") (r "^2.1.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.7") (d #t) (k 0)) (d (n "encoding") (r "^0.1") (d #t) (k 0) (p "forest_encoding")) (d (n "leb128") (r "^0.2.1") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0kjx6mw2vjk1xp94d0vmnkbfw117zz45mfn1bka2fjkhrc9szxyh")))

(define-public crate-forest_address-0.2.2 (c (n "forest_address") (v "0.2.2") (d (list (d (n "data-encoding") (r "^2.1.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.7") (d #t) (k 0)) (d (n "encoding") (r "^0.1") (d #t) (k 0) (p "forest_encoding")) (d (n "leb128") (r "^0.2.1") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "19j0fk6n1j57qh8ycv6wacvmq94pv0cchbxsxr1ps5jl5mhhf75n")))

(define-public crate-forest_address-0.2.3 (c (n "forest_address") (v "0.2.3") (d (list (d (n "data-encoding") (r "^2.1.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.7") (d #t) (k 0)) (d (n "encoding") (r "^0.1") (d #t) (k 0) (p "forest_encoding")) (d (n "leb128") (r "^0.2.1") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1x02ii9y7r9gzvc2xibzvk3b3fh3fh53j6didgq9087j9rgypywa") (f (quote (("json"))))))

(define-public crate-forest_address-0.3.0 (c (n "forest_address") (v "0.3.0") (d (list (d (n "data-encoding") (r "^2.1.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.7") (d #t) (k 0)) (d (n "encoding") (r "^0.2") (d #t) (k 0) (p "forest_encoding")) (d (n "leb128") (r "^0.2.1") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1azjd3nh8hcc074vmavhvlmf8140qjbr1hgpzpwwnmqab98q8f4p") (f (quote (("json"))))))

(define-public crate-forest_address-0.3.1 (c (n "forest_address") (v "0.3.1") (d (list (d (n "data-encoding") (r "^2.1.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.7") (d #t) (k 0)) (d (n "encoding") (r "^0.2.1") (d #t) (k 0) (p "forest_encoding")) (d (n "forest_json_utils") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "leb128") (r "^0.2.1") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1xp6v5mb65swvixdgsld5sziklrg8apsc80pb2cnvkc2218v7mhd") (f (quote (("json" "forest_json_utils"))))))

(define-public crate-forest_address-0.3.2 (c (n "forest_address") (v "0.3.2") (d (list (d (n "data-encoding") (r "^2.1.2") (d #t) (k 0)) (d (n "data-encoding-macro") (r "^0.1.7") (d #t) (k 0)) (d (n "encoding") (r "^0.2.1") (d #t) (k 0) (p "forest_encoding")) (d (n "forest_json_utils") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "leb128") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1vpqswi20wmg7r2wj35jc8x1slnx4szaaqrw98zdkxq5i2y7ssz3") (f (quote (("testnet") ("json" "forest_json_utils"))))))

