(define-module (crates-io fo re forest_crypto) #:use-module (crates-io))

(define-public crate-forest_crypto-0.1.0 (c (n "forest_crypto") (v "0.1.0") (d (list (d (n "address") (r "^0.1") (d #t) (k 0) (p "forest_address")) (d (n "bls-signatures") (r "^0.6.0") (d #t) (k 0)) (d (n "encoding") (r "^0.1") (d #t) (k 0) (p "forest_encoding")) (d (n "libsecp256k1") (r "^0.3.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1hgpc822g2y51h8c0qwn5v31fr9bizl421j46rnxzy2i75vjsp45")))

(define-public crate-forest_crypto-0.2.0 (c (n "forest_crypto") (v "0.2.0") (d (list (d (n "address") (r "^0.2") (d #t) (k 0) (p "forest_address")) (d (n "bls-signatures") (r "^0.6.0") (d #t) (k 0)) (d (n "encoding") (r "^0.1") (d #t) (k 0) (p "forest_encoding")) (d (n "libsecp256k1") (r "^0.3.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "09b8vzvr0mgaxaq449w15748x98bpnjryzzx27q6v1i48q8ymd4z")))

(define-public crate-forest_crypto-0.2.1 (c (n "forest_crypto") (v "0.2.1") (d (list (d (n "address") (r "^0.2") (d #t) (k 0) (p "forest_address")) (d (n "base64") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "bls-signatures") (r "^0.6.0") (d #t) (k 0)) (d (n "encoding") (r "^0.1.1") (d #t) (k 0) (p "forest_encoding")) (d (n "libsecp256k1") (r "^0.3.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1l2j4azrifp1l6qxwwhr1j9yl0lm5j798m8jv74607s4zbgb0zil") (f (quote (("json" "base64"))))))

(define-public crate-forest_crypto-0.3.0 (c (n "forest_crypto") (v "0.3.0") (d (list (d (n "address") (r "^0.2") (d #t) (k 0) (p "forest_address")) (d (n "base64") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "bls-signatures") (r "^0.6.0") (d #t) (k 0)) (d (n "encoding") (r "^0.1.1") (d #t) (k 0) (p "forest_encoding")) (d (n "libsecp256k1") (r "^0.3.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1cbqrpkvh2rxhc2zacp5sarring8yjpp2va6zq88xxw86kjc9spa") (f (quote (("json" "base64"))))))

(define-public crate-forest_crypto-0.3.1 (c (n "forest_crypto") (v "0.3.1") (d (list (d (n "address") (r "^0.2") (d #t) (k 0) (p "forest_address")) (d (n "base64") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "bls-signatures") (r "^0.6.0") (d #t) (k 0)) (d (n "encoding") (r "^0.1.1") (d #t) (k 0) (p "forest_encoding")) (d (n "libsecp256k1") (r "^0.3.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1gsh7iqdwxzhba42w9iyigdnakicjgcava2kc9w2wwbafis69jbx") (f (quote (("json" "base64"))))))

(define-public crate-forest_crypto-0.3.2 (c (n "forest_crypto") (v "0.3.2") (d (list (d (n "address") (r "^0.3") (d #t) (k 0) (p "forest_address")) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bls-signatures") (r "^0.6.1") (d #t) (k 0)) (d (n "encoding") (r "^0.2") (d #t) (k 0) (p "forest_encoding")) (d (n "libsecp256k1") (r "^0.3.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0f8qfvqsi13gizca1f4icsh6754w17pzb4cksiz6gczysjjq3198") (f (quote (("json" "base64")))) (y #t)))

(define-public crate-forest_crypto-0.4.0 (c (n "forest_crypto") (v "0.4.0") (d (list (d (n "address") (r "^0.3") (d #t) (k 0) (p "forest_address")) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bls-signatures") (r "^0.6.1") (d #t) (k 0)) (d (n "encoding") (r "^0.2") (d #t) (k 0) (p "forest_encoding")) (d (n "libsecp256k1") (r "^0.3.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "11mddmhpgg7l3vjp003vy4ydxjz69vnd7nldi3c8p8snbiyhv2va") (f (quote (("json" "base64"))))))

(define-public crate-forest_crypto-0.4.1 (c (n "forest_crypto") (v "0.4.1") (d (list (d (n "address") (r "^0.3") (d #t) (k 0) (p "forest_address")) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bls-signatures") (r "^0.6.1") (d #t) (k 0)) (d (n "encoding") (r "^0.2.1") (d #t) (k 0) (p "forest_encoding")) (d (n "libsecp256k1") (r "^0.3.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0vxfdkw0ia0022gcs7d0c0fry5h820dc3k8f42vfjqk3nddmy0s0") (f (quote (("json" "base64"))))))

(define-public crate-forest_crypto-0.5.0 (c (n "forest_crypto") (v "0.5.0") (d (list (d (n "address") (r "^0.3") (d #t) (k 0) (p "forest_address")) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bls-signatures") (r "^0.7") (f (quote ("blst"))) (k 0)) (d (n "encoding") (r "^0.2.1") (d #t) (k 0) (p "forest_encoding")) (d (n "libsecp256k1") (r "^0.3.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1fg27pgp59gai0b1drw0rgi1gqrzw6r4yzzg53l04d8x0yjvl47v") (f (quote (("json" "base64"))))))

(define-public crate-forest_crypto-0.5.1 (c (n "forest_crypto") (v "0.5.1") (d (list (d (n "address") (r "^0.3") (d #t) (k 0) (p "forest_address")) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bls-signatures") (r "^0.7") (k 0)) (d (n "encoding") (r "^0.2.1") (d #t) (k 0) (p "forest_encoding")) (d (n "libsecp256k1") (r "^0.3.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "06a290h7bfqcffzj1cygwm7kpyhmc5cz0racc1sdwrg9vilfklv0") (f (quote (("pairing" "bls-signatures/pairing") ("json" "base64") ("default" "blst") ("blst" "bls-signatures/blst"))))))

(define-public crate-forest_crypto-0.5.2 (c (n "forest_crypto") (v "0.5.2") (d (list (d (n "address") (r "^0.3") (d #t) (k 0) (p "forest_address")) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bls-signatures") (r "^0.9") (k 0)) (d (n "encoding") (r "^0.2.1") (d #t) (k 0) (p "forest_encoding")) (d (n "libsecp256k1") (r "^0.3.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "12sjz3cwmll9dw8bdm9dcfz93361j3c5a02gq6l0z7hslv1a1iq4") (f (quote (("pairing" "bls-signatures/pairing") ("json" "base64") ("default" "blst") ("blst" "bls-signatures/blst"))))))

(define-public crate-forest_crypto-0.5.3 (c (n "forest_crypto") (v "0.5.3") (d (list (d (n "address") (r "^0.3") (d #t) (k 0) (p "forest_address")) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bls-signatures") (r "^0.9") (k 0)) (d (n "encoding") (r "^0.2.1") (d #t) (k 0) (p "forest_encoding")) (d (n "libsecp256k1") (r "^0.6") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "09rc2fsp2g04yhzlgkk6ffmj09qrv0rlbryd7mjaaskz1ghi5zpc") (f (quote (("pairing" "bls-signatures/pairing") ("json" "base64") ("default" "blst") ("blst" "bls-signatures/blst"))))))

