(define-module (crates-io fo re forest_message) #:use-module (crates-io))

(define-public crate-forest_message-0.1.0 (c (n "forest_message") (v "0.1.0") (d (list (d (n "address") (r "^0.1") (d #t) (k 0) (p "forest_address")) (d (n "cid") (r "^0.1") (d #t) (k 0) (p "forest_cid")) (d (n "crypto") (r "^0.1") (d #t) (k 0) (p "forest_crypto")) (d (n "derive_builder") (r "^0.9") (d #t) (k 0)) (d (n "encoding") (r "^0.1") (d #t) (k 0) (p "forest_encoding")) (d (n "num-bigint") (r "^0.1") (d #t) (k 0) (p "forest_bigint")) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "vm") (r "^0.1") (d #t) (k 0) (p "forest_vm")))) (h "0g1ca8bjh5876s41kp0fy57bshw3z5ymxl1sl4mspgnv5340ml71")))

(define-public crate-forest_message-0.2.0 (c (n "forest_message") (v "0.2.0") (d (list (d (n "address") (r "^0.2") (d #t) (k 0) (p "forest_address")) (d (n "cid") (r "^0.1") (d #t) (k 0) (p "forest_cid")) (d (n "crypto") (r "^0.2") (d #t) (k 0) (p "forest_crypto")) (d (n "derive_builder") (r "^0.9") (d #t) (k 0)) (d (n "encoding") (r "^0.1") (d #t) (k 0) (p "forest_encoding")) (d (n "num-bigint") (r "^0.1") (d #t) (k 0) (p "forest_bigint")) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "vm") (r "^0.2") (d #t) (k 0) (p "forest_vm")))) (h "1gkl493s73iv8lvgsqqc3i3xfmnmgd2s0mp8zn141z2dyl6dd4p9")))

(define-public crate-forest_message-0.3.0 (c (n "forest_message") (v "0.3.0") (d (list (d (n "address") (r "^0.2") (d #t) (k 0) (p "forest_address")) (d (n "base64") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "cid") (r "^0.1") (d #t) (k 0) (p "forest_cid")) (d (n "crypto") (r "^0.2.1") (d #t) (k 0) (p "forest_crypto")) (d (n "derive_builder") (r "^0.9") (d #t) (k 0)) (d (n "encoding") (r "^0.1") (d #t) (k 0) (p "forest_encoding")) (d (n "num-bigint") (r "^0.1") (d #t) (k 0) (p "forest_bigint")) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "vm") (r "^0.2") (d #t) (k 0) (p "forest_vm")))) (h "1znjhn10ifzrihkd2rilp48jvrypm8xsasxphhf7hbr17qdjg873") (f (quote (("json" "base64" "crypto/json"))))))

(define-public crate-forest_message-0.4.0 (c (n "forest_message") (v "0.4.0") (d (list (d (n "address") (r "^0.2.3") (d #t) (k 0) (p "forest_address")) (d (n "base64") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "cid") (r "^0.1.1") (d #t) (k 0) (p "forest_cid")) (d (n "crypto") (r "^0.3") (d #t) (k 0) (p "forest_crypto")) (d (n "derive_builder") (r "^0.9") (d #t) (k 0)) (d (n "encoding") (r "^0.1.2") (d #t) (k 0) (p "forest_encoding")) (d (n "forest_json_utils") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.1") (d #t) (k 0) (p "forest_bigint")) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "vm") (r "^0.2.1") (d #t) (k 0) (p "forest_vm")))) (h "01lgp9zqc6nrd9qm9z1ss0ayv0sxf4pp0m9wdnvh9s9lzgz4r0y9") (f (quote (("json" "base64" "crypto/json" "forest_json_utils"))))))

(define-public crate-forest_message-0.4.1 (c (n "forest_message") (v "0.4.1") (d (list (d (n "address") (r "^0.2.3") (d #t) (k 0) (p "forest_address")) (d (n "base64") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "cid") (r "^0.1.1") (d #t) (k 0) (p "forest_cid")) (d (n "crypto") (r "^0.3") (d #t) (k 0) (p "forest_crypto")) (d (n "derive_builder") (r "^0.9") (d #t) (k 0)) (d (n "encoding") (r "^0.1.2") (d #t) (k 0) (p "forest_encoding")) (d (n "forest_json_utils") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.1") (d #t) (k 0) (p "forest_bigint")) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "vm") (r "^0.2.1") (d #t) (k 0) (p "forest_vm")))) (h "03nmhc589djfxc43kkr9nx0q9qm6i09w8s182f9gb0k578ynidni") (f (quote (("json" "base64" "crypto/json" "forest_json_utils"))))))

(define-public crate-forest_message-0.5.0 (c (n "forest_message") (v "0.5.0") (d (list (d (n "address") (r "^0.2.3") (d #t) (k 0) (p "forest_address")) (d (n "base64") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "cid") (r "^0.1.1") (d #t) (k 0) (p "forest_cid")) (d (n "crypto") (r "^0.3.1") (d #t) (k 0) (p "forest_crypto")) (d (n "derive_builder") (r "^0.9") (d #t) (k 0)) (d (n "encoding") (r "^0.1.2") (d #t) (k 0) (p "forest_encoding")) (d (n "forest_json_utils") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.1") (d #t) (k 0) (p "forest_bigint")) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "vm") (r "^0.2.1") (d #t) (k 0) (p "forest_vm")))) (h "13gnii25swbpwgv8s8h6sv43n3aj9qgqgp589xks06awc453jcar") (f (quote (("json" "base64" "crypto/json" "forest_json_utils"))))))

(define-public crate-forest_message-0.6.0 (c (n "forest_message") (v "0.6.0") (d (list (d (n "address") (r "^0.3") (d #t) (k 0) (p "forest_address")) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "cid") (r "^0.2") (d #t) (k 0) (p "forest_cid")) (d (n "crypto") (r "^0.4") (d #t) (k 0) (p "forest_crypto")) (d (n "derive_builder") (r "^0.9") (d #t) (k 0)) (d (n "encoding") (r "^0.2") (d #t) (k 0) (p "forest_encoding")) (d (n "fil_types") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "forest_json_utils") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.1.1") (d #t) (k 0) (p "forest_bigint")) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "vm") (r "^0.3") (d #t) (k 0) (p "forest_vm")))) (h "1fxvmrs2cxa5km4q0c7wxsza2xq2g1yv1ixaz4pdgb9kc5gprmyc") (f (quote (("proofs" "fil_types") ("json" "base64" "crypto/json" "forest_json_utils"))))))

(define-public crate-forest_message-0.6.1 (c (n "forest_message") (v "0.6.1") (d (list (d (n "address") (r "^0.3") (d #t) (k 0) (p "forest_address")) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "cid") (r "^0.3") (d #t) (k 0) (p "forest_cid")) (d (n "crypto") (r "^0.4") (d #t) (k 0) (p "forest_crypto")) (d (n "derive_builder") (r "^0.9") (d #t) (k 0)) (d (n "encoding") (r "^0.2") (d #t) (k 0) (p "forest_encoding")) (d (n "fil_types") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "forest_json_utils") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.1.1") (f (quote ("json"))) (d #t) (k 0) (p "forest_bigint")) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "vm") (r "^0.3") (d #t) (k 0) (p "forest_vm")))) (h "0x6wy42rldbg3ikcdfvglq94zrvva4lc5iqcqns48w503mmh6da9") (f (quote (("proofs" "fil_types") ("json" "base64" "crypto/json" "forest_json_utils" "cid/json"))))))

(define-public crate-forest_message-0.7.0 (c (n "forest_message") (v "0.7.0") (d (list (d (n "address") (r "^0.3") (d #t) (k 0) (p "forest_address")) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "cid") (r "^0.3") (d #t) (k 0) (p "forest_cid")) (d (n "crypto") (r "^0.5") (d #t) (k 0) (p "forest_crypto")) (d (n "derive_builder") (r "^0.9") (d #t) (k 0)) (d (n "encoding") (r "^0.2.1") (d #t) (k 0) (p "forest_encoding")) (d (n "fil_types") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "forest_json_utils") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.1.1") (d #t) (k 0) (p "forest_bigint")) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "vm") (r "^0.3") (d #t) (k 0) (p "forest_vm")))) (h "1qcvcdnj8dk4580va0714c7wjm57yx5kp9fbi38k62gryirs3qxk") (f (quote (("proofs" "fil_types") ("json" "base64" "crypto/json" "forest_json_utils" "cid/json" "num-bigint/json"))))))

(define-public crate-forest_message-0.7.1 (c (n "forest_message") (v "0.7.1") (d (list (d (n "address") (r "^0.3") (d #t) (k 0) (p "forest_address")) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "cid") (r "^0.3") (d #t) (k 0) (p "forest_cid")) (d (n "crypto") (r "^0.5") (d #t) (k 0) (p "forest_crypto")) (d (n "derive_builder") (r "^0.9") (d #t) (k 0)) (d (n "encoding") (r "^0.2.1") (d #t) (k 0) (p "forest_encoding")) (d (n "fil_types") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "forest_json_utils") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.1.1") (d #t) (k 0) (p "forest_bigint")) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "vm") (r "^0.3") (d #t) (k 0) (p "forest_vm")))) (h "0dlygz7wkd7k0nz7x6hd5wcz1n3mqrsx26hqni5i1d2vjr4kzcxd") (f (quote (("proofs" "fil_types") ("pairing" "crypto/pairing") ("json" "base64" "crypto/json" "forest_json_utils" "cid/json" "num-bigint/json") ("default" "blst") ("blst" "crypto/blst"))))))

(define-public crate-forest_message-0.7.2 (c (n "forest_message") (v "0.7.2") (d (list (d (n "address") (r "^0.3") (d #t) (k 0) (p "forest_address")) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "cid") (r "^0.3") (d #t) (k 0) (p "forest_cid")) (d (n "crypto") (r "^0.5") (k 0) (p "forest_crypto")) (d (n "derive_builder") (r "^0.9") (d #t) (k 0)) (d (n "encoding") (r "^0.2.1") (d #t) (k 0) (p "forest_encoding")) (d (n "fil_types") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "forest_json_utils") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.1.1") (d #t) (k 0) (p "forest_bigint")) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "vm") (r "^0.3") (d #t) (k 0) (p "forest_vm")))) (h "0c2xnf1c94gc6k9n67wckgcvg1waaqraw44cr6xyccgapagjnlac") (f (quote (("proofs" "fil_types") ("pairing" "crypto/pairing") ("json" "base64" "crypto/json" "forest_json_utils" "cid/json" "num-bigint/json") ("default" "blst") ("blst" "crypto/blst"))))))

