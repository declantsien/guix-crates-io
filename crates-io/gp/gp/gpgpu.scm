(define-module (crates-io gp gp gpgpu) #:use-module (crates-io))

(define-public crate-gpgpu-0.0.0 (c (n "gpgpu") (v "0.0.0") (d (list (d (n "bytemuck") (r "^1.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("executor"))) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "wgpu") (r "^0.10") (f (quote ("spirv"))) (d #t) (k 0)))) (h "1bcyy7rghhgj2g1mv05iyvd84mplfznazngs87lg193wcmvmagzg")))

(define-public crate-gpgpu-0.1.0 (c (n "gpgpu") (v "0.1.0") (d (list (d (n "bytemuck") (r "^1.7") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("executor"))) (k 0)) (d (n "image") (r "^0.23") (o #t) (k 0)) (d (n "image") (r "^0.23.14") (f (quote ("jpeg" "png"))) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "minifb") (r "^0.19.3") (d #t) (k 2)) (d (n "nokhwa") (r "^0.8.0") (f (quote ("input-v4l" "input-msmf"))) (d #t) (k 2)) (d (n "wgpu") (r "^0.11") (f (quote ("spirv"))) (d #t) (k 0)))) (h "0gbnjlqqyjqgdmkz0cdg1p02bg0lw3vzbjng5iq41j3cvy2pxiwa") (f (quote (("integrate-image" "image"))))))

(define-public crate-gpgpu-0.2.0 (c (n "gpgpu") (v "0.2.0") (d (list (d (n "bytemuck") (r "^1.7") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("executor"))) (k 0)) (d (n "image") (r "^0.23") (o #t) (k 0)) (d (n "image") (r "^0.23.14") (f (quote ("jpeg" "png"))) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "minifb") (r "^0.20.0") (d #t) (k 2)) (d (n "ndarray") (r "^0.15") (f (quote ("std"))) (o #t) (k 0)) (d (n "nokhwa") (r "^0.9.1") (f (quote ("input-v4l" "input-msmf"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wgpu") (r "^0.12") (f (quote ("spirv"))) (d #t) (k 0)))) (h "0sfpilp95yinly3iznl1b0mwm3r8s9q45ibvc7vcc1iaxklm4pl5") (f (quote (("integrate-ndarray" "ndarray") ("integrate-image" "image"))))))

