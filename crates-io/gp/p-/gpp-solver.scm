(define-module (crates-io gp p- gpp-solver) #:use-module (crates-io))

(define-public crate-gpp-solver-0.1.0 (c (n "gpp-solver") (v "0.1.0") (d (list (d (n "derive_more") (r "^0.99.16") (f (quote ("from" "into"))) (k 0)) (d (n "petgraph") (r "^0.6.0") (k 2)) (d (n "void") (r "^1.0.2") (d #t) (k 2)))) (h "11ph41j6hrs0yg9bs22q8gblbvvxbzbzcjmysjz3gz9v2s4hnd10") (f (quote (("std") ("default" "std"))))))

(define-public crate-gpp-solver-0.2.0 (c (n "gpp-solver") (v "0.2.0") (d (list (d (n "async-lock") (r "^2.4.0") (o #t) (k 0)) (d (n "async-std") (r "^1.10.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.51") (k 0)) (d (n "derive_more") (r "^0.99.16") (f (quote ("from" "into"))) (k 0)) (d (n "futures") (r "^0.3.18") (f (quote ("std"))) (k 0)) (d (n "futures-test") (r "^0.3.18") (f (quote ("std"))) (k 2)) (d (n "petgraph") (r "^0.6.0") (k 2)) (d (n "tokio") (r "^1.14.0") (f (quote ("sync"))) (o #t) (k 0)) (d (n "tokio") (r "^1.14.0") (f (quote ("rt-multi-thread" "macros"))) (k 2)) (d (n "void") (r "^1.0.2") (k 2)))) (h "0fycr1v9llc4r1r22hsl1i5d3micwcim4iy3jm4i3fv40b650s8v") (f (quote (("tokio-lock" "tokio") ("std") ("futures-lock") ("default" "std" "futures-lock") ("async-std-lock" "async-lock"))))))

(define-public crate-gpp-solver-0.2.1 (c (n "gpp-solver") (v "0.2.1") (d (list (d (n "async-lock") (r "^2.4.0") (o #t) (k 0)) (d (n "async-std") (r "^1.10.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.51") (k 0)) (d (n "derive_more") (r "^0.99.16") (f (quote ("from" "into"))) (k 0)) (d (n "futures") (r "^0.3.18") (f (quote ("std"))) (k 0)) (d (n "futures-test") (r "^0.3.18") (f (quote ("std"))) (k 2)) (d (n "js-sys") (r "^0.3.55") (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "petgraph") (r "^0.6.0") (k 2)) (d (n "serde-wasm-bindgen") (r "^0.3.1") (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "tokio") (r "^1.14.0") (f (quote ("sync"))) (o #t) (k 0)) (d (n "tokio") (r "^1.14.0") (f (quote ("rt-multi-thread" "macros"))) (k 2)) (d (n "void") (r "^1.0.2") (k 2)) (d (n "wasm-bindgen") (r "^0.2.78") (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.28") (k 2)))) (h "09a0ln6fb495xbgv2qc7987m6l77vf344s95dkji1jynrv98y8cw") (f (quote (("tokio-lock" "tokio") ("std" "wasm-bindgen/std") ("js-bindings") ("futures-lock") ("default" "std" "futures-lock" "js-bindings") ("async-std-lock" "async-lock"))))))

(define-public crate-gpp-solver-0.2.2 (c (n "gpp-solver") (v "0.2.2") (d (list (d (n "async-lock") (r "^2.4.0") (o #t) (k 0)) (d (n "async-std") (r "^1.10.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.52") (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "into"))) (k 0)) (d (n "futures") (r "^0.3.19") (f (quote ("std"))) (k 0)) (d (n "futures-test") (r "^0.3.19") (f (quote ("std"))) (k 2)) (d (n "js-sys") (r "^0.3.55") (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "petgraph") (r "^0.6.0") (k 2)) (d (n "serde-wasm-bindgen") (r "^0.4.1") (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "tokio") (r "^1.15.0") (f (quote ("sync"))) (o #t) (k 0)) (d (n "tokio") (r "^1.15.0") (f (quote ("rt-multi-thread" "macros"))) (k 2)) (d (n "void") (r "^1.0.2") (k 2)) (d (n "wasm-bindgen") (r "^0.2.78") (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.28") (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.28") (k 2)))) (h "0bqczqdyy1xiajpz5wqiah087qjcnmq732ij3i0n11bd5cqhb34i") (f (quote (("tokio-lock" "tokio") ("std" "wasm-bindgen/std") ("js-bindings") ("futures-lock") ("default" "std" "futures-lock" "js-bindings") ("async-std-lock" "async-lock"))))))

