(define-module (crates-io g1 -c g1-common) #:use-module (crates-io))

(define-public crate-g1-common-0.1.0-alpha.3 (c (n "g1-common") (v "0.1.0-alpha.3") (d (list (d (n "async-trait") (r "^0.1.21") (d #t) (k 0)) (d (n "bytes") (r "^0.5.2") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "lalrpop") (r "^0.17.2") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.17.2") (d #t) (k 0)) (d (n "logos") (r "^0.9.7") (d #t) (k 0)) (d (n "mime") (r "^0.3.14") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^0.9.4") (d #t) (k 2)) (d (n "serde") (r "^1.0.102") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.4") (f (quote ("fs" "io-util"))) (d #t) (k 0)) (d (n "topological-sort") (r "^0.1.0") (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1rjnaiymmf2iv528zd5fp5x0cxhaibzmwijj7f5c5bvaiffn7mg9")))

