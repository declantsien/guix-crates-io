(define-module (crates-io gh -w gh-workflow-parser) #:use-module (crates-io))

(define-public crate-gh-workflow-parser-0.1.0 (c (n "gh-workflow-parser") (v "0.1.0") (d (list (d (n "clap") (r "^4.5.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4.5.0") (d #t) (k 0)) (d (n "distance") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (d #t) (k 0)) (d (n "stderrlog") (r "^0.6.0") (d #t) (k 0)) (d (n "which") (r "^6.0.0") (d #t) (k 0)))) (h "1k0in8wvvqb1nbfmnrm3xf76j1n3xhrkjsdijm8vygsgzb3slv0x")))

(define-public crate-gh-workflow-parser-0.1.1 (c (n "gh-workflow-parser") (v "0.1.1") (d (list (d (n "clap") (r "^4.5.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4.5.0") (d #t) (k 0)) (d (n "distance") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "semver") (r "^1.0.21") (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (d #t) (k 0)) (d (n "stderrlog") (r "^0.6.0") (d #t) (k 0)) (d (n "which") (r "^6.0.0") (d #t) (k 0)))) (h "06h2kj1hvp3xm7jbnqh4ygf3sbn9zma8scnxc6b08pdv1knqfx4p")))

(define-public crate-gh-workflow-parser-0.2.1 (c (n "gh-workflow-parser") (v "0.2.1") (d (list (d (n "bzip2") (r "^0.4.4") (d #t) (k 0)) (d (n "bzip2") (r "^0.4.4") (d #t) (k 1)) (d (n "clap") (r "^4.5.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4.5.0") (d #t) (k 0)) (d (n "distance") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "semver") (r "^1.0.21") (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (d #t) (k 0)) (d (n "stderrlog") (r "^0.6.0") (d #t) (k 0)) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "which") (r "^6.0.0") (d #t) (k 0)))) (h "0wrgz577ajx1jcq7q0db3lmfzmmdbfff438p3rsjvcvyngbq4hx2")))

(define-public crate-gh-workflow-parser-0.3.0 (c (n "gh-workflow-parser") (v "0.3.0") (d (list (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "assert_fs") (r "^1.0.13") (d #t) (k 2)) (d (n "bzip2") (r "^0.4.4") (d #t) (k 0)) (d (n "bzip2") (r "^0.4.4") (d #t) (k 1)) (d (n "clap") (r "^4.5.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4.5.0") (d #t) (k 0)) (d (n "distance") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "semver") (r "^1.0.21") (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (d #t) (k 0)) (d (n "stderrlog") (r "^0.6.0") (d #t) (k 0)) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "which") (r "^6.0.0") (d #t) (k 0)))) (h "01bdglasz1637g10df0rcjcqv1sd8xc1r5x15vvc5kcl8h1p3a12")))

(define-public crate-gh-workflow-parser-0.4.0 (c (n "gh-workflow-parser") (v "0.4.0") (d (list (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "assert_fs") (r "^1.0.13") (d #t) (k 2)) (d (n "bzip2") (r "^0.4.4") (d #t) (k 0)) (d (n "bzip2") (r "^0.4.4") (d #t) (k 1)) (d (n "clap") (r "^4.5.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4.5.0") (d #t) (k 0)) (d (n "distance") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "semver") (r "^1.0.21") (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (d #t) (k 0)) (d (n "stderrlog") (r "^0.6.0") (d #t) (k 0)) (d (n "strum") (r "^0.26") (f (quote ("derive"))) (d #t) (k 0)) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "which") (r "^6.0.0") (d #t) (k 0)))) (h "1cb9i2d1ij7r212sr73w3qy9fn4pwizamqhx2qgxlqlc5hhhvm8h")))

(define-public crate-gh-workflow-parser-0.5.0 (c (n "gh-workflow-parser") (v "0.5.0") (d (list (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "assert_fs") (r "^1.0.13") (d #t) (k 2)) (d (n "bzip2") (r "^0.4.4") (d #t) (k 0)) (d (n "bzip2") (r "^0.4.4") (d #t) (k 1)) (d (n "clap") (r "^4.5.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4.5.0") (d #t) (k 0)) (d (n "distance") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "semver") (r "^1.0.21") (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (d #t) (k 0)) (d (n "stderrlog") (r "^0.6.0") (d #t) (k 0)) (d (n "strum") (r "^0.26") (f (quote ("derive"))) (d #t) (k 0)) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "which") (r "^6.0.0") (d #t) (k 0)))) (h "02vb2qr34zbzcq6qpvmfabfjqpm3lvb36f3x2lrjvl0sxn47pirq")))

(define-public crate-gh-workflow-parser-0.5.1 (c (n "gh-workflow-parser") (v "0.5.1") (d (list (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "assert_fs") (r "^1.0.13") (d #t) (k 2)) (d (n "bzip2") (r "^0.4.4") (d #t) (k 0)) (d (n "bzip2") (r "^0.4.4") (d #t) (k 1)) (d (n "clap") (r "^4.5.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4.5.0") (d #t) (k 0)) (d (n "distance") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "semver") (r "^1.0.21") (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (d #t) (k 0)) (d (n "stderrlog") (r "^0.6.0") (d #t) (k 0)) (d (n "strum") (r "^0.26") (f (quote ("derive"))) (d #t) (k 0)) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "which") (r "^6.0.0") (d #t) (k 0)))) (h "1kqm0rnkc2lqhr2994krj52qf4cnrxrpdvmydkc53db3cyyabsqq")))

(define-public crate-gh-workflow-parser-0.5.2 (c (n "gh-workflow-parser") (v "0.5.2") (d (list (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "assert_fs") (r "^1.0.13") (d #t) (k 2)) (d (n "bzip2") (r "^0.4.4") (d #t) (k 0)) (d (n "bzip2") (r "^0.4.4") (d #t) (k 1)) (d (n "clap") (r "^4.5.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4.5.0") (d #t) (k 0)) (d (n "distance") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "semver") (r "^1.0.21") (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (d #t) (k 0)) (d (n "stderrlog") (r "^0.6.0") (d #t) (k 0)) (d (n "strum") (r "^0.26") (f (quote ("derive"))) (d #t) (k 0)) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "which") (r "^6.0.0") (d #t) (k 0)))) (h "1zz1xz5sbxd7l0z5piwp55c25kychqzrsprdwdaqx3ry7kapx0x6")))

(define-public crate-gh-workflow-parser-0.5.3 (c (n "gh-workflow-parser") (v "0.5.3") (d (list (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "assert_fs") (r "^1.0.13") (d #t) (k 2)) (d (n "bzip2") (r "^0.4.4") (d #t) (k 0)) (d (n "bzip2") (r "^0.4.4") (d #t) (k 1)) (d (n "clap") (r "^4.5.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4.5.0") (d #t) (k 0)) (d (n "distance") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "semver") (r "^1.0.21") (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (d #t) (k 0)) (d (n "stderrlog") (r "^0.6.0") (d #t) (k 0)) (d (n "strum") (r "^0.26") (f (quote ("derive"))) (d #t) (k 0)) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "which") (r "^6.0.0") (d #t) (k 0)))) (h "0xil60l0i56yd3a7r4cjwzwzsyrx6hicw7h3lz5n7wi8ns6njga2")))

(define-public crate-gh-workflow-parser-0.5.4 (c (n "gh-workflow-parser") (v "0.5.4") (d (list (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "assert_fs") (r "^1.0.13") (d #t) (k 2)) (d (n "bzip2") (r "^0.4.4") (d #t) (k 0)) (d (n "bzip2") (r "^0.4.4") (d #t) (k 1)) (d (n "clap") (r "^4.5.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4.5.0") (d #t) (k 0)) (d (n "distance") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "semver") (r "^1.0.21") (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (d #t) (k 0)) (d (n "stderrlog") (r "^0.6.0") (d #t) (k 0)) (d (n "strum") (r "^0.26") (f (quote ("derive"))) (d #t) (k 0)) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "which") (r "^6.0.0") (d #t) (k 0)))) (h "0kd9nvky5gajs73whi1hxg5lsm6mqrzmdmnbkfga30cmmfsgdfg7")))

