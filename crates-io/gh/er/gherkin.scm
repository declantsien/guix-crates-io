(define-module (crates-io gh er gherkin) #:use-module (crates-io))

(define-public crate-gherkin-0.0.1 (c (n "gherkin") (v "0.0.1") (h "04jfbrrjcfwn5np8khw7z0d8a9l37izbxz3mfsz5zvjj5nwcb1ma")))

(define-public crate-gherkin-0.11.0 (c (n "gherkin") (v "0.11.0") (d (list (d (n "async-trait") (r "^0.1.40") (d #t) (k 2)) (d (n "cucumber") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 2)) (d (n "heck") (r "^0.3") (d #t) (k 1)) (d (n "juniper") (r "^0.15.3") (o #t) (k 0)) (d (n "peg") (r "^0.6.3") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "syn") (r "^1.0") (d #t) (k 1)) (d (n "textwrap") (r "^0.12.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "typed-builder") (r "^0.7") (o #t) (d #t) (k 0)))) (h "08m32g8kr5d7l2k7qdr2hpgqrv0xwim7wjc6nzm89yfl59g9y4lv") (f (quote (("parser" "typed-builder") ("default" "parser"))))))

(define-public crate-gherkin-0.11.1 (c (n "gherkin") (v "0.11.1") (d (list (d (n "async-trait") (r "^0.1.40") (d #t) (k 2)) (d (n "cucumber") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 2)) (d (n "heck") (r "^0.3") (d #t) (k 1)) (d (n "juniper") (r "^0.15.3") (o #t) (k 0)) (d (n "peg") (r "^0.6.3") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "syn") (r "^1.0") (d #t) (k 1)) (d (n "textwrap") (r "^0.12.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "typed-builder") (r "^0.7") (o #t) (d #t) (k 0)))) (h "14pigsc77nmpnh84gxz6yxpvmr8q7gwz6r231ggwsbpmcpw9b3lh") (f (quote (("parser" "typed-builder") ("default" "parser"))))))

(define-public crate-gherkin-0.11.2 (c (n "gherkin") (v "0.11.2") (d (list (d (n "async-trait") (r "^0.1.40") (d #t) (k 2)) (d (n "cucumber") (r "^0.11") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 2)) (d (n "heck") (r "^0.3") (d #t) (k 1)) (d (n "juniper") (r "^0.15.3") (o #t) (k 0)) (d (n "peg") (r "^0.6.3") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "syn") (r "^1.0") (d #t) (k 1)) (d (n "textwrap") (r "^0.12.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "typed-builder") (r "^0.7") (o #t) (d #t) (k 0)))) (h "1b8na1h3fas8giqx3f2cingznin3v5zvwbynn81pka0gqqy6p4gp") (f (quote (("parser" "typed-builder") ("default" "parser"))))))

(define-public crate-gherkin-0.12.0 (c (n "gherkin") (v "0.12.0") (d (list (d (n "async-trait") (r "^0.1.40") (d #t) (k 2)) (d (n "cucumber") (r "^0.12") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 2)) (d (n "heck") (r "^0.3") (d #t) (k 1)) (d (n "juniper") (r "^0.15.3") (o #t) (k 0)) (d (n "peg") (r "^0.6.3") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0.78") (d #t) (k 2)) (d (n "syn") (r "^1.0") (d #t) (k 1)) (d (n "textwrap") (r "^0.12.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "typed-builder") (r "^0.7") (o #t) (d #t) (k 0)))) (h "1asqjk75y6b8d799zhj798jpw4pbk8i02f0klny4yz2vhsxigawq") (f (quote (("parser" "typed-builder") ("default" "parser"))))))

(define-public crate-gherkin-0.13.0 (c (n "gherkin") (v "0.13.0") (d (list (d (n "cucumber") (r "^0.15") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 2)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "juniper") (r "^0.15.10") (o #t) (k 0)) (d (n "peg") (r "^0.6.3") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0.78") (d #t) (k 2)) (d (n "syn") (r "^1.0") (d #t) (k 1)) (d (n "textwrap") (r "^0.16") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "typed-builder") (r "^0.10") (o #t) (d #t) (k 0)))) (h "13m3nppj1bzf6q3iq8xavgq9x26l62zz76adrhifqixmn94qz3wy") (f (quote (("parser" "typed-builder") ("default" "parser"))))))

(define-public crate-gherkin-0.14.0 (c (n "gherkin") (v "0.14.0") (d (list (d (n "cucumber") (r "^0.20") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 2)) (d (n "heck") (r "^0.4") (d #t) (k 1)) (d (n "juniper") (r "^0.15.10") (o #t) (k 0)) (d (n "peg") (r "^0.6.3") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0.78") (d #t) (k 2)) (d (n "syn") (r "^2.0") (d #t) (k 1)) (d (n "textwrap") (r "^0.16") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "typed-builder") (r "^0.15") (o #t) (d #t) (k 0)))) (h "0mbparwi38zm0zsziwz0x5nbj77nb2ljz6h878gnslyzq0h9idr0") (f (quote (("default" "parser")))) (s 2) (e (quote (("parser" "dep:typed-builder")))) (r "1.65")))

