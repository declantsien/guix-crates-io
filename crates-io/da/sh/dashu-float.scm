(define-module (crates-io da sh dashu-float) #:use-module (crates-io))

(define-public crate-dashu-float-0.2.0 (c (n "dashu-float") (v "0.2.0") (d (list (d (n "dashu-base") (r "^0.2.0") (k 0)) (d (n "dashu-int") (r "^0.2.0") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "1i2h1fbggj384xfy31ksi7rkybykgp8c8y2lf3jdssc6qv2jcgfj") (f (quote (("std" "dashu-base/std" "dashu-int/std") ("default" "std")))) (r "1.61")))

(define-public crate-dashu-float-0.2.1 (c (n "dashu-float") (v "0.2.1") (d (list (d (n "dashu-base") (r "^0.2.1") (k 0)) (d (n "dashu-int") (r "^0.2.1") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "0rd167m2h5bccqp7ahbjlmnc8k5x99y416phwfnjy8kqn7y6scci") (f (quote (("std" "dashu-base/std" "dashu-int/std") ("default" "std")))) (r "1.61")))

(define-public crate-dashu-float-0.3.0 (c (n "dashu-float") (v "0.3.0") (d (list (d (n "dashu-base") (r "^0.3.0") (k 0)) (d (n "dashu-int") (r "^0.3.0") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "0xga321p28qkj4p8sgld6kz26h15x2fh918ppyi8nqps9d0h1lwk") (f (quote (("std" "dashu-base/std" "dashu-int/std") ("default" "std")))) (r "1.61")))

(define-public crate-dashu-float-0.3.1 (c (n "dashu-float") (v "0.3.1") (d (list (d (n "_bytes") (r "^1.0") (o #t) (k 0) (p "bytes")) (d (n "dashu-base") (r "^0.3.1") (k 0)) (d (n "dashu-int") (r "^0.3.1") (k 0)) (d (n "diesel_v1") (r "^1.4.0") (f (quote ("postgres"))) (o #t) (k 0) (p "diesel")) (d (n "diesel_v2") (r "^2.0.0") (f (quote ("postgres_backend"))) (o #t) (k 0) (p "diesel")) (d (n "num-traits_v02") (r "^0.2.15") (o #t) (k 0) (p "num-traits")) (d (n "postcard") (r "^1.0.2") (f (quote ("alloc"))) (d #t) (k 2)) (d (n "postgres") (r "^0.19.4") (d #t) (k 2)) (d (n "postgres-types_v02") (r "^0.2.4") (o #t) (k 0) (p "postgres-types")) (d (n "rand_v08") (r "^0.8.3") (o #t) (k 0) (p "rand")) (d (n "rand_v08") (r "^0.8.3") (d #t) (k 2) (p "rand")) (d (n "serde") (r "^1.0.130") (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.130") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "zeroize") (r "^1.5.7") (o #t) (k 0)))) (h "099clrrfnd500wwbmksw3q477jk178xsk365li7k92s64c6ci5dw") (f (quote (("std" "dashu-base/std" "dashu-int/std") ("rand" "rand_v08") ("postgres-types" "postgres-types_v02") ("num-traits" "num-traits_v02") ("diesel" "diesel_v2") ("default" "std" "rand" "num-traits")))) (s 2) (e (quote (("zeroize" "dep:zeroize" "dashu-int/zeroize") ("serde" "dep:serde" "dashu-int/serde") ("rand_v08" "dep:rand_v08" "dashu-int/rand_v08") ("postgres-types_v02" "dep:postgres-types_v02" "dep:_bytes" "std") ("num-traits_v02" "dep:num-traits_v02" "dashu-int/num-traits_v02")))) (r "1.61")))

(define-public crate-dashu-float-0.3.2 (c (n "dashu-float") (v "0.3.2") (d (list (d (n "_bytes") (r "^1.0") (o #t) (k 0) (p "bytes")) (d (n "dashu-base") (r "^0.3.1") (k 0)) (d (n "dashu-int") (r "^0.3.1") (k 0)) (d (n "diesel_v1") (r "^1.4.0") (f (quote ("postgres"))) (o #t) (k 0) (p "diesel")) (d (n "diesel_v2") (r "^2.0.0") (f (quote ("postgres_backend"))) (o #t) (k 0) (p "diesel")) (d (n "num-traits_v02") (r "^0.2.15") (o #t) (k 0) (p "num-traits")) (d (n "postcard") (r "^1.0.2") (f (quote ("alloc"))) (d #t) (k 2)) (d (n "postgres") (r "^0.19.4") (d #t) (k 2)) (d (n "postgres-types_v02") (r "^0.2.4") (o #t) (k 0) (p "postgres-types")) (d (n "rand_v08") (r "^0.8.3") (o #t) (k 0) (p "rand")) (d (n "rand_v08") (r "^0.8.3") (d #t) (k 2) (p "rand")) (d (n "serde") (r "^1.0.130") (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.130") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "zeroize") (r "^1.5.7") (o #t) (k 0)))) (h "07rdjy55z6sasr7hz6jyzysml95kr03i4dqsqc1vdyhli4rqy5ks") (f (quote (("std" "dashu-base/std" "dashu-int/std") ("rand" "rand_v08") ("postgres-types" "postgres-types_v02") ("num-traits" "num-traits_v02") ("diesel" "diesel_v2") ("default" "std" "rand" "num-traits")))) (s 2) (e (quote (("zeroize" "dep:zeroize" "dashu-int/zeroize") ("serde" "dep:serde" "dashu-int/serde") ("rand_v08" "dep:rand_v08" "dashu-int/rand_v08") ("postgres-types_v02" "dep:postgres-types_v02" "dep:_bytes" "std") ("num-traits_v02" "dep:num-traits_v02" "dashu-int/num-traits_v02")))) (r "1.61")))

(define-public crate-dashu-float-0.4.0 (c (n "dashu-float") (v "0.4.0") (d (list (d (n "_bytes") (r "^1.0") (o #t) (k 0) (p "bytes")) (d (n "_num-modular") (r "^0.6.1") (o #t) (k 0) (p "num-modular")) (d (n "dashu-base") (r "^0.4.0") (k 0)) (d (n "dashu-int") (r "^0.4.0") (k 0)) (d (n "diesel_v1") (r "^1.4.0") (f (quote ("postgres"))) (o #t) (k 0) (p "diesel")) (d (n "diesel_v2") (r "^2.0.0") (f (quote ("postgres_backend"))) (o #t) (k 0) (p "diesel")) (d (n "num-order") (r "^1.2.0") (o #t) (k 0)) (d (n "num-traits_v02") (r "^0.2.15") (o #t) (k 0) (p "num-traits")) (d (n "postcard") (r "^1.0.2") (f (quote ("alloc"))) (d #t) (k 2)) (d (n "postgres") (r "^0.19.4") (d #t) (k 2)) (d (n "postgres-types_v02") (r "^0.2.4") (o #t) (k 0) (p "postgres-types")) (d (n "rand_v08") (r "^0.8.3") (o #t) (k 0) (p "rand")) (d (n "rand_v08") (r "^0.8.3") (d #t) (k 2) (p "rand")) (d (n "serde") (r "^1.0.130") (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.130") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "zeroize") (r "^1.5.7") (o #t) (k 0)))) (h "0prm3y06pl2q33px1dr63130dyxs7cappli92rxhbbihmxsncsd7") (f (quote (("std" "dashu-base/std" "dashu-int/std") ("rand" "rand_v08") ("postgres-types" "postgres-types_v02") ("num-traits" "num-traits_v02") ("diesel" "diesel_v2") ("default" "std" "num-order")))) (s 2) (e (quote (("zeroize" "dep:zeroize" "dashu-int/zeroize") ("serde" "dep:serde" "dashu-int/serde") ("rand_v08" "dep:rand_v08" "dashu-int/rand_v08") ("postgres-types_v02" "dep:postgres-types_v02" "dep:_bytes" "std") ("num-traits_v02" "dep:num-traits_v02" "dashu-int/num-traits_v02") ("num-order" "dep:num-order" "dep:_num-modular")))) (r "1.61")))

(define-public crate-dashu-float-0.4.1 (c (n "dashu-float") (v "0.4.1") (d (list (d (n "_bytes") (r "^1.0") (o #t) (k 0) (p "bytes")) (d (n "_num-modular") (r "^0.6.1") (o #t) (k 0) (p "num-modular")) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dashu-base") (r "^0.4.0") (k 0)) (d (n "dashu-int") (r "^0.4.0") (k 0)) (d (n "diesel_v1") (r "^1.4.0") (f (quote ("postgres"))) (o #t) (k 0) (p "diesel")) (d (n "diesel_v2") (r "^2.0.0") (f (quote ("postgres_backend"))) (o #t) (k 0) (p "diesel")) (d (n "num-order") (r "^1.2.0") (o #t) (k 0)) (d (n "num-traits_v02") (r "^0.2.15") (o #t) (k 0) (p "num-traits")) (d (n "postcard") (r "^1.0.2") (f (quote ("alloc"))) (d #t) (k 2)) (d (n "postgres") (r "^0.19.4") (d #t) (k 2)) (d (n "postgres-types_v02") (r "^0.2.4") (o #t) (k 0) (p "postgres-types")) (d (n "rand_v08") (r "^0.8.3") (o #t) (k 0) (p "rand")) (d (n "rand_v08") (r "^0.8.3") (d #t) (k 2) (p "rand")) (d (n "serde") (r "^1.0.130") (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.130") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "zeroize") (r "^1.5.7") (o #t) (k 0)))) (h "1796nq0h9vjs8d3yy7dv1qzkrsrik2l77ncjjqkwhcs0wv2xswm6") (f (quote (("std" "dashu-base/std" "dashu-int/std") ("rand" "rand_v08") ("postgres-types" "postgres-types_v02") ("num-traits" "num-traits_v02") ("diesel" "diesel_v2") ("default" "std" "num-order")))) (s 2) (e (quote (("zeroize" "dep:zeroize" "dashu-int/zeroize") ("serde" "dep:serde" "dashu-int/serde") ("rand_v08" "dep:rand_v08" "dashu-int/rand_v08") ("postgres-types_v02" "dep:postgres-types_v02" "dep:_bytes" "std") ("num-traits_v02" "dep:num-traits_v02" "dashu-int/num-traits_v02") ("num-order" "dep:num-order" "dep:_num-modular")))) (r "1.61")))

(define-public crate-dashu-float-0.4.2 (c (n "dashu-float") (v "0.4.2") (d (list (d (n "_bytes") (r "^1.0") (o #t) (k 0) (p "bytes")) (d (n "_num-modular") (r "^0.6.1") (o #t) (k 0) (p "num-modular")) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dashu-base") (r "^0.4.0") (k 0)) (d (n "dashu-int") (r "^0.4.1") (k 0)) (d (n "diesel_v1") (r "^1.4.0") (f (quote ("postgres"))) (o #t) (k 0) (p "diesel")) (d (n "diesel_v2") (r "^2.0.0") (f (quote ("postgres_backend"))) (o #t) (k 0) (p "diesel")) (d (n "num-order") (r "^1.2.0") (o #t) (k 0)) (d (n "num-traits_v02") (r "^0.2.15") (o #t) (k 0) (p "num-traits")) (d (n "postcard") (r "^1.0.2") (f (quote ("alloc"))) (d #t) (k 2)) (d (n "postgres") (r "^0.19.4") (d #t) (k 2)) (d (n "postgres-types_v02") (r "^0.2.4") (o #t) (k 0) (p "postgres-types")) (d (n "rand_v08") (r "^0.8.3") (o #t) (k 0) (p "rand")) (d (n "rand_v08") (r "^0.8.3") (d #t) (k 2) (p "rand")) (d (n "rustversion") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.130") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "zeroize") (r "^1.5.7") (o #t) (k 0)))) (h "0ki0vkh35946vmicqd3rrqbz34qjmnfdx0950nvyhphylvhpjpc7") (f (quote (("std" "dashu-base/std" "dashu-int/std") ("rand" "rand_v08") ("postgres-types" "postgres-types_v02") ("num-traits" "num-traits_v02") ("diesel" "diesel_v2") ("default" "std" "num-order")))) (s 2) (e (quote (("zeroize" "dep:zeroize" "dashu-int/zeroize") ("serde" "dep:serde" "dashu-int/serde") ("rand_v08" "dep:rand_v08" "dashu-int/rand_v08") ("postgres-types_v02" "dep:postgres-types_v02" "dep:_bytes" "std") ("num-traits_v02" "dep:num-traits_v02" "dashu-int/num-traits_v02") ("num-order" "dep:num-order" "dep:_num-modular")))) (r "1.61")))

(define-public crate-dashu-float-0.4.3 (c (n "dashu-float") (v "0.4.3") (d (list (d (n "_bytes") (r "^1.0") (o #t) (k 0) (p "bytes")) (d (n "_num-modular") (r "^0.6.1") (o #t) (k 0) (p "num-modular")) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dashu-base") (r "^0.4.1") (k 0)) (d (n "dashu-int") (r "^0.4.1") (k 0)) (d (n "diesel_v1") (r "^1.4.0") (f (quote ("postgres"))) (o #t) (k 0) (p "diesel")) (d (n "diesel_v2") (r "^2.0.0") (f (quote ("postgres_backend"))) (o #t) (k 0) (p "diesel")) (d (n "num-order") (r "^1.2.0") (o #t) (k 0)) (d (n "num-traits_v02") (r "^0.2.15") (o #t) (k 0) (p "num-traits")) (d (n "postcard") (r "^1.0.2") (f (quote ("alloc"))) (d #t) (k 2)) (d (n "postgres") (r "^0.19.4") (d #t) (k 2)) (d (n "postgres-types_v02") (r "^0.2.4") (o #t) (k 0) (p "postgres-types")) (d (n "rand_v08") (r "^0.8.3") (o #t) (k 0) (p "rand")) (d (n "rand_v08") (r "^0.8.3") (d #t) (k 2) (p "rand")) (d (n "rustversion") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.130") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "zeroize") (r "^1.5.7") (o #t) (k 0)))) (h "1rv323visgbwr9w9n31zchrx7f1d6mpq2jph46yy3lnvm12q81w5") (f (quote (("std" "dashu-base/std" "dashu-int/std") ("rand" "rand_v08") ("postgres-types" "postgres-types_v02") ("num-traits" "num-traits_v02") ("diesel" "diesel_v2") ("default" "std" "num-order")))) (s 2) (e (quote (("zeroize" "dep:zeroize" "dashu-int/zeroize") ("serde" "dep:serde" "dashu-int/serde") ("rand_v08" "dep:rand_v08" "dashu-int/rand_v08") ("postgres-types_v02" "dep:postgres-types_v02" "dep:_bytes" "std") ("num-traits_v02" "dep:num-traits_v02" "dashu-int/num-traits_v02") ("num-order" "dep:num-order" "dep:_num-modular")))) (r "1.61")))

