(define-module (crates-io da sh dashu-int) #:use-module (crates-io))

(define-public crate-dashu-int-0.1.0 (c (n "dashu-int") (v "0.1.0") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dashu-base") (r "^0.1.0") (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (k 0)) (d (n "rand") (r "^0.8.3") (o #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_test") (r "^1.0.130") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "00zaf5hy3rp8wwmxmd44l7fqw8x614934vihgzv74rxx4mfhcvz0") (f (quote (("std" "dashu-base/std") ("default" "std" "rand" "num-traits"))))))

(define-public crate-dashu-int-0.1.1 (c (n "dashu-int") (v "0.1.1") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dashu-base") (r "^0.1.1") (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (k 0)) (d (n "rand") (r "^0.8.3") (o #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_test") (r "^1.0.130") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "10xmnd24s1649290nhf8dc4q1xmy8q3p9298k3rpplm4ccpslakm") (f (quote (("std" "dashu-base/std") ("default" "std" "rand" "num-traits"))))))

(define-public crate-dashu-int-0.2.0 (c (n "dashu-int") (v "0.2.0") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dashu-base") (r "^0.2.0") (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (k 0)) (d (n "rand") (r "^0.8.3") (o #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_test") (r "^1.0.130") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "0lzn0rr67szpkmyp1m93zh4myawkwrm90xqm021nvy44bcq58q0q") (f (quote (("std" "dashu-base/std") ("default" "std" "rand" "num-traits")))) (r "1.61")))

(define-public crate-dashu-int-0.2.1 (c (n "dashu-int") (v "0.2.1") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dashu-base") (r "^0.2.1") (k 0)) (d (n "num-integer") (r "^0.1.45") (o #t) (k 0)) (d (n "num-order") (r "^1.0.4") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (k 0)) (d (n "rand") (r "^0.8.3") (o #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_test") (r "^1.0.130") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "zeroize") (r "^1.5.7") (o #t) (k 0)))) (h "1zayp80h47wl169y1953kdq7zx124aim7gvkcf32hivn6mn6g5f3") (f (quote (("std" "dashu-base/std") ("default" "std" "rand" "num-traits" "num-integer" "num-order")))) (r "1.61")))

(define-public crate-dashu-int-0.3.0 (c (n "dashu-int") (v "0.3.0") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dashu-base") (r "^0.3.0") (k 0)) (d (n "num-integer") (r "^0.1.45") (o #t) (k 0)) (d (n "num-order") (r "^1.0.4") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (o #t) (k 0)) (d (n "rand") (r "^0.8.3") (o #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_test") (r "^1.0.130") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "zeroize") (r "^1.5.7") (o #t) (k 0)))) (h "0ghqnnb2csqwb3a17psz11jpnim5i5rms48qi6abzfshi6lm44qb") (f (quote (("std" "dashu-base/std") ("default" "std" "rand" "num-traits" "num-order")))) (r "1.61")))

(define-public crate-dashu-int-0.3.1 (c (n "dashu-int") (v "0.3.1") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dashu-base") (r "^0.3.1") (k 0)) (d (n "num-integer_v01") (r "^0.1.45") (o #t) (k 0) (p "num-integer")) (d (n "num-order") (r "^1.0.4") (o #t) (k 0)) (d (n "num-traits_v02") (r "^0.2.14") (o #t) (k 0) (p "num-traits")) (d (n "rand_v08") (r "^0.8.3") (o #t) (k 0) (p "rand")) (d (n "rand_v08") (r "^0.8.3") (d #t) (k 2) (p "rand")) (d (n "serde") (r "^1.0.130") (o #t) (k 0)) (d (n "serde_test") (r "^1.0.130") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "zeroize") (r "^1.5.7") (o #t) (k 0)))) (h "0xbralpq6a0ydnavijs5w588f9vmqkc7spkwjx7cdi707jd018ap") (f (quote (("std" "dashu-base/std") ("rand" "rand_v08") ("num-traits" "num-traits_v02") ("num-integer" "num-integer_v01") ("default" "std" "rand" "num-traits" "num-order")))) (r "1.61")))

(define-public crate-dashu-int-0.4.0 (c (n "dashu-int") (v "0.4.0") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dashu-base") (r "^0.4.0") (k 0)) (d (n "num-integer_v01") (r "^0.1.45") (o #t) (k 0) (p "num-integer")) (d (n "num-modular") (r "^0.6.1") (d #t) (k 0)) (d (n "num-order") (r "^1.2.0") (o #t) (k 0)) (d (n "num-traits_v02") (r "^0.2.14") (o #t) (k 0) (p "num-traits")) (d (n "postcard") (r "^1.0.2") (f (quote ("alloc"))) (d #t) (k 2)) (d (n "rand_v08") (r "^0.8.3") (o #t) (k 0) (p "rand")) (d (n "rand_v08") (r "^0.8.3") (d #t) (k 2) (p "rand")) (d (n "serde") (r "^1.0.130") (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.130") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "zeroize") (r "^1.5.7") (o #t) (k 0)))) (h "1smqwc2p579cbsbpdykdz47xlssdrdnj5xvzawd9m31y9f47l9fc") (f (quote (("std" "dashu-base/std") ("rand" "rand_v08") ("num-traits" "num-traits_v02") ("num-integer" "num-integer_v01") ("default" "std" "num-order")))) (r "1.61")))

(define-public crate-dashu-int-0.4.1 (c (n "dashu-int") (v "0.4.1") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dashu-base") (r "^0.4.0") (k 0)) (d (n "num-integer_v01") (r "^0.1.45") (o #t) (k 0) (p "num-integer")) (d (n "num-modular") (r "^0.6.1") (d #t) (k 0)) (d (n "num-order") (r "^1.2.0") (o #t) (k 0)) (d (n "num-traits_v02") (r "^0.2.14") (o #t) (k 0) (p "num-traits")) (d (n "postcard") (r "^1.0.2") (f (quote ("alloc"))) (d #t) (k 2)) (d (n "rand_v08") (r "^0.8.3") (o #t) (k 0) (p "rand")) (d (n "rand_v08") (r "^0.8.3") (d #t) (k 2) (p "rand")) (d (n "rustversion") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.130") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "zeroize") (r "^1.5.7") (o #t) (k 0)))) (h "1gwzvgzm21kw324s30lcknxm934vzwfv5fzg8k8a8d6a660d16gf") (f (quote (("std" "dashu-base/std") ("rand" "rand_v08") ("num-traits" "num-traits_v02") ("num-integer" "num-integer_v01") ("default" "std" "num-order")))) (r "1.61")))

