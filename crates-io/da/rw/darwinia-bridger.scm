(define-module (crates-io da rw darwinia-bridger) #:use-module (crates-io))

(define-public crate-darwinia-bridger-0.0.1 (c (n "darwinia-bridger") (v "0.0.1") (d (list (d (n "async-trait") (r "^0.1.40") (d #t) (k 0)) (d (n "dirs") (r "^3.0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 0)) (d (n "etc") (r "^0.1.11") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "primitives") (r "^0.0.6") (d #t) (k 0) (p "darwinia-bridge-primitives")) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "sp-keyring") (r "^2.0.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.18") (d #t) (k 0)) (d (n "substrate-subxt") (r "^0.12.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("full"))) (d #t) (k 0) (p "tokio")) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "web3") (r "^0.13.0") (d #t) (k 0)))) (h "17gpi4kfi9aizy7qz8n6wr5n48bj18ld97fvidv9kbvcl7j44yxy")))

(define-public crate-darwinia-bridger-0.0.2 (c (n "darwinia-bridger") (v "0.0.2") (d (list (d (n "async-trait") (r "^0.1.40") (d #t) (k 0)) (d (n "dirs") (r "^3.0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 0)) (d (n "etc") (r "^0.1.11") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "primitives") (r "^0.0.8") (f (quote ("runtime"))) (d #t) (k 0) (p "darwinia-bridge-primitives")) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sp-keyring") (r "^2.0.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.18") (d #t) (k 0)) (d (n "substrate-subxt") (r "^0.12.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("full"))) (d #t) (k 0) (p "tokio")) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "web3") (r "^0.13.0") (d #t) (k 0)))) (h "0d321f91z8aszqy18vassgalypnjjbp2cw8n6rc2m874i1sis1d3")))

(define-public crate-darwinia-bridger-0.0.3 (c (n "darwinia-bridger") (v "0.0.3") (d (list (d (n "async-trait") (r "^0.1.40") (d #t) (k 0)) (d (n "dirs") (r "^3.0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 0)) (d (n "etc") (r "^0.1.11") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "primitives") (r "^0.0.12") (f (quote ("runtime"))) (d #t) (k 0) (p "darwinia-bridge-primitives")) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sp-keyring") (r "^2.0.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.18") (d #t) (k 0)) (d (n "substrate-subxt") (r "^0.13.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("full"))) (d #t) (k 0) (p "tokio")) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "web3") (r "^0.13.0") (d #t) (k 0)))) (h "05hi7962w567965f38cppyj9mj19if6xmy494n14d2phxhbzg0vj")))

(define-public crate-darwinia-bridger-0.0.14 (c (n "darwinia-bridger") (v "0.0.14") (d (list (d (n "async-trait") (r "^0.1.40") (d #t) (k 0)) (d (n "dirs") (r "^3.0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 0)) (d (n "etc") (r "^0.1.11") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "primitives") (r "^0.0.14") (f (quote ("runtime"))) (d #t) (k 0) (p "darwinia-bridge-primitives")) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sp-keyring") (r "^2.0.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.18") (d #t) (k 0)) (d (n "substrate-subxt") (r "^0.13.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("full"))) (d #t) (k 0) (p "tokio")) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "web3") (r "^0.13.0") (d #t) (k 0)))) (h "00m2yi47gqnmnf5yg1rw1yj6728lw2b4najsqd1vlvc156li1b4g")))

(define-public crate-darwinia-bridger-0.0.15 (c (n "darwinia-bridger") (v "0.0.15") (d (list (d (n "async-trait") (r "^0.1.40") (d #t) (k 0)) (d (n "dirs") (r "^3.0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 0)) (d (n "etc") (r "^0.1.11") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "primitives") (r "^0.0.15") (f (quote ("runtime"))) (d #t) (k 0) (p "darwinia-bridge-primitives")) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sp-keyring") (r "^2.0.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.18") (d #t) (k 0)) (d (n "substrate-subxt") (r "^0.13.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("full"))) (d #t) (k 0) (p "tokio")) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "web3") (r "^0.13.0") (d #t) (k 0)))) (h "0hdn6ksfx82d2frqrriab07kimiiycnjynj3hmm5x5f02hgnk1qc")))

(define-public crate-darwinia-bridger-0.1.1 (c (n "darwinia-bridger") (v "0.1.1") (d (list (d (n "async-trait") (r "^0.1.40") (d #t) (k 0)) (d (n "dirs") (r "^3.0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 0)) (d (n "etc") (r "^0.1.11") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "primitives") (r "^0.1.1") (f (quote ("runtime"))) (d #t) (k 0) (p "darwinia-bridge-primitives")) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sp-keyring") (r "^2.0.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.18") (d #t) (k 0)) (d (n "substrate-subxt") (r "^0.13.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("full"))) (d #t) (k 0) (p "tokio")) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "web3") (r "^0.13.0") (d #t) (k 0)))) (h "0b5nz5sgb1q5jdlafs8rqgqi83f2x6f37ldyd0mnzj81piq5g1nm")))

(define-public crate-darwinia-bridger-0.1.2 (c (n "darwinia-bridger") (v "0.1.2") (d (list (d (n "async-trait") (r "^0.1.40") (d #t) (k 0)) (d (n "dirs") (r "^3.0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 0)) (d (n "etc") (r "^0.1.11") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "primitives") (r "^0.1.2") (f (quote ("runtime" "rpc"))) (d #t) (k 0) (p "darwinia-bridge-primitives")) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sp-keyring") (r "^2.0.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.18") (d #t) (k 0)) (d (n "substrate-subxt") (r "^0.13.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("full"))) (d #t) (k 0) (p "tokio")) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "web3") (r "^0.13.0") (d #t) (k 0)))) (h "01x638xascy1vs7llddcyvcxr6xx1hqb7lynl589f7c5hjqsnjbd")))

(define-public crate-darwinia-bridger-0.1.3 (c (n "darwinia-bridger") (v "0.1.3") (d (list (d (n "async-trait") (r "^0.1.40") (d #t) (k 0)) (d (n "dirs") (r "^3.0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 0)) (d (n "etc") (r "^0.1.11") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "primitives") (r "^0.1.3") (f (quote ("runtime" "rpc"))) (d #t) (k 0) (p "darwinia-bridge-primitives")) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sp-keyring") (r "^2.0.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.18") (d #t) (k 0)) (d (n "substrate-subxt") (r "^0.13.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("full"))) (d #t) (k 0) (p "tokio")) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "web3") (r "^0.13.0") (d #t) (k 0)))) (h "0c6xax40m9h79mavw56r6wqadcgvp6vi74jsfslgdhcim9gi494v")))

(define-public crate-darwinia-bridger-0.1.4 (c (n "darwinia-bridger") (v "0.1.4") (d (list (d (n "async-trait") (r "^0.1.40") (d #t) (k 0)) (d (n "dirs") (r "^3.0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 0)) (d (n "etc") (r "^0.1.11") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "primitives") (r "^0.1.4") (f (quote ("runtime" "rpc"))) (d #t) (k 0) (p "darwinia-bridge-primitives")) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sp-keyring") (r "^2.0.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.18") (d #t) (k 0)) (d (n "substrate-subxt") (r "^0.13.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("full"))) (d #t) (k 0) (p "tokio")) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "web3") (r "^0.13.0") (d #t) (k 0)))) (h "1kc1sn50xxv6n7g78kvgm0jgk0hrwxfv43z16wgxqi9i7ki27xb0")))

