(define-module (crates-io da rw darwinia-bridge-primitives) #:use-module (crates-io))

(define-public crate-darwinia-bridge-primitives-0.0.1 (c (n "darwinia-bridge-primitives") (v "0.0.1") (d (list (d (n "parity-scale-codec") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "parity-scale-codec")) (d (n "rlp") (r "^0.4.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "uint") (r "^0.8.5") (d #t) (k 0)))) (h "15zbdqwd5hfj8xwzhxqry7a2h3kr7jcnccjw244ywmq508dx1qyi")))

(define-public crate-darwinia-bridge-primitives-0.0.2 (c (n "darwinia-bridge-primitives") (v "0.0.2") (d (list (d (n "async-trait") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "parity-scale-codec") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "parity-scale-codec")) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "rlp") (r "^0.4.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "uint") (r "^0.8.5") (d #t) (k 0)))) (h "1fjk8p2n7yz5pv00qrqbjs4r8fqxifyrba9aifkymwagjg4ssmqd") (f (quote (("rpc") ("default"))))))

(define-public crate-darwinia-bridge-primitives-0.0.3 (c (n "darwinia-bridge-primitives") (v "0.0.3") (d (list (d (n "async-trait") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "parity-scale-codec") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "parity-scale-codec")) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "rlp") (r "^0.4.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "uint") (r "^0.8.5") (d #t) (k 0)))) (h "0ihk9rq9mgpv6hfdy3gk2q1y645a0wgp52n106kmpwwymfnzpraw") (f (quote (("rpc") ("default"))))))

(define-public crate-darwinia-bridge-primitives-0.0.4 (c (n "darwinia-bridge-primitives") (v "0.0.4") (d (list (d (n "async-trait") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "parity-scale-codec") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "parity-scale-codec")) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "rlp") (r "^0.4.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "uint") (r "^0.8.5") (d #t) (k 0)))) (h "1glcry1x81jg8wvmkb0rimpkc80rcgy06bjn21v5c0v61ibpjr8h") (f (quote (("rpc") ("default"))))))

(define-public crate-darwinia-bridge-primitives-0.0.5 (c (n "darwinia-bridge-primitives") (v "0.0.5") (d (list (d (n "async-trait") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "parity-scale-codec") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "parity-scale-codec")) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "rlp") (r "^0.4.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "uint") (r "^0.8.5") (d #t) (k 0)))) (h "0ncgdskrqczc195drg5ddmz6yfvvn7nikxj1b7lk00xn3jx5jp9r") (f (quote (("rpc" "async-trait" "reqwest" "serde_json") ("default"))))))

(define-public crate-darwinia-bridge-primitives-0.0.6 (c (n "darwinia-bridge-primitives") (v "0.0.6") (d (list (d (n "async-trait") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "parity-scale-codec") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "parity-scale-codec")) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "rlp") (r "^0.4.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "uint") (r "^0.8.5") (d #t) (k 0)))) (h "1q2ciz0c58s984rnlx1xr298vg8xx4x2wll3shhch17j9dbzhjmd") (f (quote (("rpc" "async-trait" "reqwest" "serde_json") ("default"))))))

(define-public crate-darwinia-bridge-primitives-0.0.7 (c (n "darwinia-bridge-primitives") (v "0.0.7") (d (list (d (n "async-trait") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "codec") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "parity-scale-codec")) (d (n "frame-support") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-im-online") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-indices") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "rlp") (r "^0.4.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "uint") (r "^0.8.5") (d #t) (k 0)))) (h "16b7yg90s377bkfq21a2dl1dcvaah5bry2pigasp2l643351jagg") (f (quote (("runtime" "substrate-subxt" "frame-support" "pallet-indices" "pallet-im-online") ("rpc" "async-trait" "reqwest" "serde_json") ("default"))))))

(define-public crate-darwinia-bridge-primitives-0.0.8 (c (n "darwinia-bridge-primitives") (v "0.0.8") (d (list (d (n "async-trait") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "codec") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "parity-scale-codec")) (d (n "frame-support") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-im-online") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-indices") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "rlp") (r "^0.4.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt-proc-macro") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "uint") (r "^0.8.5") (d #t) (k 0)))) (h "137pxfshr78j341d9v6bph944phn72hpqwz9dsmynral54qnw7mh") (f (quote (("runtime" "substrate-subxt" "substrate-subxt-proc-macro" "frame-support" "pallet-indices" "pallet-im-online") ("rpc" "async-trait" "reqwest" "serde_json") ("default"))))))

(define-public crate-darwinia-bridge-primitives-0.0.10 (c (n "darwinia-bridge-primitives") (v "0.0.10") (d (list (d (n "async-trait") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "codec") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "parity-scale-codec")) (d (n "frame-support") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-im-online") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-indices") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "rlp") (r "^0.4.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt-proc-macro") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "uint") (r "^0.8.5") (d #t) (k 0)))) (h "03784swdmy761x5zhlbv36hzygr3pvpilvny517v4658y7fz3bgs") (f (quote (("runtime" "substrate-subxt" "substrate-subxt-proc-macro" "frame-support" "pallet-indices" "pallet-im-online") ("rpc" "async-trait" "reqwest" "serde_json") ("default"))))))

(define-public crate-darwinia-bridge-primitives-0.0.11 (c (n "darwinia-bridge-primitives") (v "0.0.11") (d (list (d (n "async-trait") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "codec") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "parity-scale-codec")) (d (n "frame-support") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-im-online") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-indices") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "rlp") (r "^0.4.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt-proc-macro") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "uint") (r "^0.8.5") (d #t) (k 0)))) (h "00jkn652sfkhrgkm7vp3ybyc3jhwiscnnlgnlnkp9bg8z8wypfh3") (f (quote (("runtime" "substrate-subxt" "substrate-subxt-proc-macro" "frame-support" "pallet-indices" "pallet-im-online") ("rpc" "async-trait" "reqwest" "serde_json") ("default"))))))

(define-public crate-darwinia-bridge-primitives-0.0.12 (c (n "darwinia-bridge-primitives") (v "0.0.12") (d (list (d (n "async-trait") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "codec") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "parity-scale-codec")) (d (n "frame-support") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-im-online") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-indices") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "rlp") (r "^0.4.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt-proc-macro") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "uint") (r "^0.8.5") (d #t) (k 0)))) (h "1jl1q8c8xnsjqk4hf3jvahxv8xvkyrlhzbzmrqvl83j3yc26bnvq") (f (quote (("runtime" "substrate-subxt" "substrate-subxt-proc-macro" "frame-support" "pallet-indices" "pallet-im-online") ("rpc" "async-trait" "reqwest" "serde_json") ("default"))))))

(define-public crate-darwinia-bridge-primitives-0.0.14 (c (n "darwinia-bridge-primitives") (v "0.0.14") (d (list (d (n "async-trait") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "codec") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "parity-scale-codec")) (d (n "frame-support") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-im-online") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-indices") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "rlp") (r "^0.4.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt-proc-macro") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "uint") (r "^0.8.5") (d #t) (k 0)))) (h "1fqw7lmmxya3y2v50j57n6s878frn27khmiyzb8nqpgcsglbgnyx") (f (quote (("runtime" "substrate-subxt" "substrate-subxt-proc-macro" "frame-support" "pallet-indices" "pallet-im-online") ("rpc" "async-trait" "reqwest" "serde_json") ("default"))))))

(define-public crate-darwinia-bridge-primitives-0.0.15 (c (n "darwinia-bridge-primitives") (v "0.0.15") (d (list (d (n "async-trait") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "codec") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "parity-scale-codec")) (d (n "frame-support") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-im-online") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-indices") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "rlp") (r "^0.4.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt-proc-macro") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "uint") (r "^0.8.5") (d #t) (k 0)))) (h "1zjb0vl24s071mzx1gcfa11v55jczzi7jr8iajjpqwaqzpsm4dkk") (f (quote (("runtime" "substrate-subxt" "substrate-subxt-proc-macro" "frame-support" "pallet-indices" "pallet-im-online") ("rpc" "async-trait" "reqwest" "serde_json") ("default"))))))

(define-public crate-darwinia-bridge-primitives-0.1.1 (c (n "darwinia-bridge-primitives") (v "0.1.1") (d (list (d (n "async-trait") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "codec") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "parity-scale-codec")) (d (n "frame-support") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-im-online") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-indices") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "rlp") (r "^0.4.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt-proc-macro") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "uint") (r "^0.8.5") (d #t) (k 0)))) (h "1v4lrqj950xvbpilvb7yydmrf3klsbhkcifl6bm4v8zls7vy9x5a") (f (quote (("runtime" "substrate-subxt" "substrate-subxt-proc-macro" "frame-support" "pallet-indices" "pallet-im-online") ("rpc" "async-trait" "reqwest" "serde_json") ("default"))))))

(define-public crate-darwinia-bridge-primitives-0.1.2-alpha.0 (c (n "darwinia-bridge-primitives") (v "0.1.2-alpha.0") (d (list (d (n "async-trait") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "codec") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "parity-scale-codec")) (d (n "frame-support") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-im-online") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-indices") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "rlp") (r "^0.4.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt-proc-macro") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "uint") (r "^0.8.5") (d #t) (k 0)))) (h "13667xsph46yy2m229vhvyksv75fjp966zhmklrvwjsziwcfdfym") (f (quote (("runtime" "substrate-subxt" "substrate-subxt-proc-macro" "frame-support" "pallet-indices" "pallet-im-online") ("rpc" "async-trait" "reqwest" "serde_json") ("default"))))))

(define-public crate-darwinia-bridge-primitives-0.1.2 (c (n "darwinia-bridge-primitives") (v "0.1.2") (d (list (d (n "async-trait") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "codec") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "parity-scale-codec")) (d (n "frame-support") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-im-online") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-indices") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "rlp") (r "^0.4.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt-proc-macro") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "uint") (r "^0.8.5") (d #t) (k 0)))) (h "0cwz5m3vpq8s7j5k2a0bhalyydxlzm43kjp29znhr5sk71r0c6ma") (f (quote (("runtime" "substrate-subxt" "substrate-subxt-proc-macro" "frame-support" "pallet-indices" "pallet-im-online") ("rpc" "async-trait" "reqwest" "serde_json") ("default"))))))

(define-public crate-darwinia-bridge-primitives-0.1.3 (c (n "darwinia-bridge-primitives") (v "0.1.3") (d (list (d (n "async-trait") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "codec") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "parity-scale-codec")) (d (n "frame-support") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-im-online") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-indices") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "rlp") (r "^0.4.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt-proc-macro") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "uint") (r "^0.8.5") (d #t) (k 0)))) (h "0m3nqislprkhd7ab8kgbxbca3993768d43m0j1r60zvm5zadvfrz") (f (quote (("runtime" "substrate-subxt" "substrate-subxt-proc-macro" "frame-support" "pallet-indices" "pallet-im-online") ("rpc" "async-trait" "reqwest" "serde_json") ("default"))))))

(define-public crate-darwinia-bridge-primitives-0.1.4-alpha.0 (c (n "darwinia-bridge-primitives") (v "0.1.4-alpha.0") (d (list (d (n "async-trait") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "codec") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "parity-scale-codec")) (d (n "frame-support") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-im-online") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-indices") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "rlp") (r "^0.4.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt-proc-macro") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "uint") (r "^0.8.5") (d #t) (k 0)))) (h "1wd6d4hkqlaxhszw5b28fy6f4vhhvar4k2xmjj94kwdxn2h3dv53") (f (quote (("runtime" "substrate-subxt" "substrate-subxt-proc-macro" "frame-support" "pallet-indices" "pallet-im-online") ("rpc" "async-trait" "reqwest" "serde_json") ("default"))))))

(define-public crate-darwinia-bridge-primitives-0.1.4-alpha.1 (c (n "darwinia-bridge-primitives") (v "0.1.4-alpha.1") (d (list (d (n "async-trait") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "codec") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "parity-scale-codec")) (d (n "frame-support") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-im-online") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-indices") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "rlp") (r "^0.4.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt-proc-macro") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "uint") (r "^0.8.5") (d #t) (k 0)))) (h "1dajj3gabjmd0q8cqbc8fhjdf0v9rhw2djzn4p0lrjj97x7viqbg") (f (quote (("runtime" "substrate-subxt" "substrate-subxt-proc-macro" "frame-support" "pallet-indices" "pallet-im-online") ("rpc" "async-trait" "reqwest" "serde_json") ("default"))))))

(define-public crate-darwinia-bridge-primitives-0.1.4-alpha.2 (c (n "darwinia-bridge-primitives") (v "0.1.4-alpha.2") (d (list (d (n "async-trait") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "codec") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "parity-scale-codec")) (d (n "frame-support") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-im-online") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-indices") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "rlp") (r "^0.4.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt-proc-macro") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "uint") (r "^0.8.5") (d #t) (k 0)))) (h "0a0w0dfa4z06j2y889mdvx8i6r28qgg22nrckma462188j5gwkfy") (f (quote (("runtime" "substrate-subxt" "substrate-subxt-proc-macro" "frame-support" "pallet-indices" "pallet-im-online") ("rpc" "async-trait" "reqwest" "serde_json") ("default"))))))

(define-public crate-darwinia-bridge-primitives-0.1.4 (c (n "darwinia-bridge-primitives") (v "0.1.4") (d (list (d (n "async-trait") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "codec") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "parity-scale-codec")) (d (n "frame-support") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-im-online") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-indices") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "rlp") (r "^0.4.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt-proc-macro") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "uint") (r "^0.8.5") (d #t) (k 0)))) (h "1ahkga80i5salya1xivywrhy4h7apxlhl8psxnl7ndsby7p8m6kd") (f (quote (("runtime" "substrate-subxt" "substrate-subxt-proc-macro" "frame-support" "pallet-indices" "pallet-im-online") ("rpc" "async-trait" "reqwest" "serde_json") ("default"))))))

(define-public crate-darwinia-bridge-primitives-0.1.5 (c (n "darwinia-bridge-primitives") (v "0.1.5") (d (list (d (n "async-trait") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "codec") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "parity-scale-codec")) (d (n "frame-support") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-im-online") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-indices") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "rlp") (r "^0.4.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt-proc-macro") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "uint") (r "^0.8.5") (d #t) (k 0)))) (h "13yjmjax95vb8kmiajd1kff0d4hd02nal7pq0n5wvvhl8i2wakbh") (f (quote (("runtime" "substrate-subxt" "substrate-subxt-proc-macro" "frame-support" "pallet-indices" "pallet-im-online") ("rpc" "async-trait" "reqwest" "serde_json") ("default"))))))

(define-public crate-darwinia-bridge-primitives-0.1.5-alpha.1 (c (n "darwinia-bridge-primitives") (v "0.1.5-alpha.1") (d (list (d (n "async-trait") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "codec") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "parity-scale-codec")) (d (n "frame-support") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-im-online") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-indices") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "rlp") (r "^0.4.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt-proc-macro") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "uint") (r "^0.8.5") (d #t) (k 0)))) (h "1p8vv7w95ncby8b21fhhxznz6krl91nyqcbw7yhj35i68c5r03g5") (f (quote (("runtime" "substrate-subxt" "substrate-subxt-proc-macro" "frame-support" "pallet-indices" "pallet-im-online") ("rpc" "async-trait" "reqwest" "serde_json") ("default"))))))

(define-public crate-darwinia-bridge-primitives-0.1.5-alpha.2 (c (n "darwinia-bridge-primitives") (v "0.1.5-alpha.2") (d (list (d (n "async-trait") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "codec") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "parity-scale-codec")) (d (n "frame-support") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-im-online") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-indices") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "rlp") (r "^0.4.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt-proc-macro") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "uint") (r "^0.8.5") (d #t) (k 0)))) (h "14l5qgmb56yhhcv5w5md8vsgl4r0by9q2jav4g58360gp2b3rkcd") (f (quote (("runtime" "substrate-subxt" "substrate-subxt-proc-macro" "frame-support" "pallet-indices" "pallet-im-online") ("rpc" "async-trait" "reqwest" "serde_json") ("default"))))))

(define-public crate-darwinia-bridge-primitives-0.1.5-alpha.3 (c (n "darwinia-bridge-primitives") (v "0.1.5-alpha.3") (d (list (d (n "async-trait") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "codec") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "parity-scale-codec")) (d (n "frame-support") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-im-online") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-indices") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "rlp") (r "^0.4.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt-proc-macro") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "uint") (r "^0.8.5") (d #t) (k 0)))) (h "16j68fqgy2l2yda69i2pxspsx3ps2yimf90c4r0ngzjymz4zwwhq") (f (quote (("runtime" "substrate-subxt" "substrate-subxt-proc-macro" "frame-support" "pallet-indices" "pallet-im-online") ("rpc" "async-trait" "reqwest" "serde_json") ("default"))))))

(define-public crate-darwinia-bridge-primitives-0.1.6 (c (n "darwinia-bridge-primitives") (v "0.1.6") (d (list (d (n "async-trait") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "codec") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "parity-scale-codec")) (d (n "frame-support") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-im-online") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-indices") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "rlp") (r "^0.4.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt-proc-macro") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "uint") (r "^0.8.5") (d #t) (k 0)))) (h "1b5lhcmy466jhb1gp2yf70rcvrqq4svjw6dfvfpjihvzmwaisb2h") (f (quote (("runtime" "substrate-subxt" "substrate-subxt-proc-macro" "frame-support" "pallet-indices" "pallet-im-online") ("rpc" "async-trait" "reqwest" "serde_json") ("default"))))))

(define-public crate-darwinia-bridge-primitives-0.1.8 (c (n "darwinia-bridge-primitives") (v "0.1.8") (d (list (d (n "async-trait") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "codec") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "parity-scale-codec")) (d (n "frame-support") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-im-online") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-indices") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "rlp") (r "^0.4.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt-proc-macro") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "uint") (r "^0.8.5") (d #t) (k 0)))) (h "1qwqjn65wgj01i5dgy81x5dsg07f53bzilwblkxkxh6vl1j37hs2") (f (quote (("runtime" "substrate-subxt" "substrate-subxt-proc-macro" "frame-support" "pallet-indices" "pallet-im-online") ("rpc" "async-trait" "reqwest" "serde_json") ("default"))))))

(define-public crate-darwinia-bridge-primitives-0.1.9 (c (n "darwinia-bridge-primitives") (v "0.1.9") (d (list (d (n "async-trait") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "codec") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "parity-scale-codec")) (d (n "frame-support") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-im-online") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-indices") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "rlp") (r "^0.4.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt-proc-macro") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "uint") (r "^0.8.5") (d #t) (k 0)))) (h "0bdx8xmk2srwvi5yxczmmmp351rldcbmdys9yfbawzx4bzgsfh3g") (f (quote (("runtime" "substrate-subxt" "substrate-subxt-proc-macro" "frame-support" "pallet-indices" "pallet-im-online") ("rpc" "async-trait" "reqwest" "serde_json") ("default"))))))

(define-public crate-darwinia-bridge-primitives-0.1.10 (c (n "darwinia-bridge-primitives") (v "0.1.10") (d (list (d (n "async-trait") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "codec") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "parity-scale-codec")) (d (n "frame-support") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-im-online") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-indices") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "rlp") (r "^0.4.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt-proc-macro") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "uint") (r "^0.8.5") (d #t) (k 0)))) (h "1gxf6vplmc91y26z54f9wjh80qcyhk9yvq06nhv2ap72s0h8qc01") (f (quote (("runtime" "substrate-subxt" "substrate-subxt-proc-macro" "frame-support" "pallet-indices" "pallet-im-online") ("rpc" "async-trait" "reqwest" "serde_json") ("default"))))))

(define-public crate-darwinia-bridge-primitives-0.1.11 (c (n "darwinia-bridge-primitives") (v "0.1.11") (d (list (d (n "async-trait") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "codec") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "parity-scale-codec")) (d (n "frame-support") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-im-online") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-indices") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "rlp") (r "^0.4.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt-proc-macro") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "uint") (r "^0.8.5") (d #t) (k 0)))) (h "088l7yr0hir2wr23i7fl1zcm7hcr9jzg0dwa65rvcdcxyirxs0dr") (f (quote (("runtime" "substrate-subxt" "substrate-subxt-proc-macro" "frame-support" "pallet-indices" "pallet-im-online") ("rpc" "async-trait" "reqwest" "serde_json") ("default"))))))

(define-public crate-darwinia-bridge-primitives-0.1.12 (c (n "darwinia-bridge-primitives") (v "0.1.12") (d (list (d (n "async-trait") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "codec") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "parity-scale-codec")) (d (n "frame-support") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-im-online") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-indices") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "rlp") (r "^0.4.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt-proc-macro") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "uint") (r "^0.8.5") (d #t) (k 0)))) (h "0rhf6yd2lrm6wpf4vmjs02cl1rcakwf87h5b9bkdv2f8s0m2bfzs") (f (quote (("runtime" "substrate-subxt" "substrate-subxt-proc-macro" "frame-support" "pallet-indices" "pallet-im-online") ("rpc" "async-trait" "reqwest" "serde_json") ("default"))))))

(define-public crate-darwinia-bridge-primitives-0.1.13 (c (n "darwinia-bridge-primitives") (v "0.1.13") (d (list (d (n "async-trait") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "codec") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "parity-scale-codec")) (d (n "frame-support") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-im-online") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-indices") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "rlp") (r "^0.4.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt-proc-macro") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "uint") (r "^0.8.5") (d #t) (k 0)))) (h "1i0n906ymbx7ql56yq7kr5vbwn0wqz7sa5skxaqh17y239rr8v3w") (f (quote (("runtime" "substrate-subxt" "substrate-subxt-proc-macro" "frame-support" "pallet-indices" "pallet-im-online") ("rpc" "async-trait" "reqwest" "serde_json") ("default"))))))

(define-public crate-darwinia-bridge-primitives-0.2.2 (c (n "darwinia-bridge-primitives") (v "0.2.2") (d (list (d (n "async-trait") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "codec") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "parity-scale-codec")) (d (n "frame-support") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-im-online") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-indices") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "rlp") (r "^0.4.4") (d #t) (k 0) (p "rlp")) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt-proc-macro") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "uint") (r "^0.8.5") (d #t) (k 0)))) (h "1j7j6bfalapzcpjdr9hbsxk9kar82ww2l3yq95pk0bv2dayq77dz") (f (quote (("runtime" "substrate-subxt" "substrate-subxt-proc-macro" "frame-support" "pallet-indices" "pallet-im-online") ("rpc" "async-trait" "reqwest" "serde_json") ("default"))))))

(define-public crate-darwinia-bridge-primitives-0.3.0 (c (n "darwinia-bridge-primitives") (v "0.3.0") (d (list (d (n "async-trait") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "codec") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "parity-scale-codec")) (d (n "frame-support") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-im-online") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-indices") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "rlp") (r "^0.4.4") (d #t) (k 0) (p "rlp")) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt-proc-macro") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "uint") (r "^0.8.5") (d #t) (k 0)))) (h "025x6md3b8h0133jq6d9yk0kv30nzqjdmr655ch9ayfiaz3c8laq") (f (quote (("runtime" "substrate-subxt" "substrate-subxt-proc-macro" "frame-support" "pallet-indices" "pallet-im-online") ("rpc" "async-trait" "reqwest" "serde_json") ("default"))))))

(define-public crate-darwinia-bridge-primitives-0.3.2 (c (n "darwinia-bridge-primitives") (v "0.3.2") (d (list (d (n "async-trait") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "codec") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "parity-scale-codec")) (d (n "frame-support") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-im-online") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-indices") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "rlp") (r "^0.4.4") (d #t) (k 0) (p "rlp")) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt-proc-macro") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "uint") (r "^0.8.5") (d #t) (k 0)))) (h "0dya66w2j7qbvk58ph9r9n579dmhviw6wyjhxsiv5fkcldx52gf2") (f (quote (("runtime" "substrate-subxt" "substrate-subxt-proc-macro" "frame-support" "pallet-indices" "pallet-im-online") ("rpc" "async-trait" "reqwest" "serde_json") ("default"))))))

(define-public crate-darwinia-bridge-primitives-0.3.3 (c (n "darwinia-bridge-primitives") (v "0.3.3") (d (list (d (n "async-trait") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "codec") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "parity-scale-codec")) (d (n "frame-support") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-im-online") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "pallet-indices") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "rlp") (r "^0.4.4") (d #t) (k 0) (p "rlp")) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "substrate-subxt-proc-macro") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "uint") (r "^0.8.5") (d #t) (k 0)))) (h "03hjjlb72lk8zq6qhrw9666wngfh7sbb5zsbz1zkksibkkkx4kn2") (f (quote (("runtime" "substrate-subxt" "substrate-subxt-proc-macro" "frame-support" "pallet-indices" "pallet-im-online") ("rpc" "async-trait" "reqwest" "serde_json") ("default"))))))

