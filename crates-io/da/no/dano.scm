(define-module (crates-io da no dano) #:use-module (crates-io))

(define-public crate-dano-0.4.4 (c (n "dano") (v "0.4.4") (d (list (d (n "clap") (r "^3.2.8") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.0") (k 0)) (d (n "rayon") (r "^1.5.1") (k 0)) (d (n "rug") (r "^1.17.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.143") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (d #t) (k 0)) (d (n "which") (r "^4.2.4") (k 0)) (d (n "xattr") (r "^0.2.3") (k 0)))) (h "1hznn17j5r75l6bb9r1gpwnw4z8vl7z7npnj701wd2njhnz0j6r6")))

(define-public crate-dano-0.4.5 (c (n "dano") (v "0.4.5") (d (list (d (n "clap") (r "^3.2.8") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.0") (k 0)) (d (n "rayon") (r "^1.5.1") (k 0)) (d (n "rug") (r "^1.17.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.143") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (d #t) (k 0)) (d (n "which") (r "^4.2.4") (k 0)) (d (n "xattr") (r "^0.2.3") (k 0)))) (h "1yvin4fmkmiyrdn2zdclmjas3cbvb2ahpiy9m6rrc2csbxy6ga5j")))

(define-public crate-dano-0.4.6 (c (n "dano") (v "0.4.6") (d (list (d (n "clap") (r "^3.2.8") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.0") (k 0)) (d (n "rayon") (r "^1.5.1") (k 0)) (d (n "rug") (r "^1.17.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.143") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (d #t) (k 0)) (d (n "which") (r "^4.2.4") (k 0)) (d (n "xattr") (r "^0.2.3") (k 0)))) (h "0bnqqv9ga9cj9v9cp1bx0k68h1hp349sa91zr0iviz53m80xc0f7")))

(define-public crate-dano-0.4.7 (c (n "dano") (v "0.4.7") (d (list (d (n "clap") (r "^3.2.8") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.0") (k 0)) (d (n "rayon") (r "^1.5.1") (k 0)) (d (n "rug") (r "^1.17.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.143") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (d #t) (k 0)) (d (n "which") (r "^4.2.4") (k 0)) (d (n "xattr") (r "^0.2.3") (k 0)))) (h "1l58n4h5nk5sdx782cq3y1wlrbqw0fff05iy5sr2f3gjgj8hhn6v")))

(define-public crate-dano-0.4.8 (c (n "dano") (v "0.4.8") (d (list (d (n "clap") (r "^3.2.8") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.0") (k 0)) (d (n "rayon") (r "^1.5.1") (k 0)) (d (n "rug") (r "^1.17.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.143") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (d #t) (k 0)) (d (n "which") (r "^4.2.4") (k 0)) (d (n "xattr") (r "^0.2.3") (k 0)))) (h "0cpjxdn5h7m3d4g0sgxv60cq33a5rzp5k93gvi09gcl80sz217ah")))

(define-public crate-dano-0.4.9 (c (n "dano") (v "0.4.9") (d (list (d (n "clap") (r "^3.2.8") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.0") (k 0)) (d (n "rayon") (r "^1.5.1") (k 0)) (d (n "rug") (r "^1.17.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.143") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (d #t) (k 0)) (d (n "which") (r "^4.2.4") (k 0)) (d (n "xattr") (r "^0.2.3") (k 0)))) (h "0hymavshxsc4nbw0kz6nj2km8fs7zx2q1q39nkc39973xy78fgwp")))

(define-public crate-dano-0.4.10 (c (n "dano") (v "0.4.10") (d (list (d (n "clap") (r "^3.2.8") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.0") (k 0)) (d (n "rayon") (r "^1.5.1") (k 0)) (d (n "rug") (r "^1.17.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.143") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (d #t) (k 0)) (d (n "which") (r "^4.2.4") (k 0)) (d (n "xattr") (r "^0.2.3") (k 0)))) (h "12spxk3iifj9gr8azg35xsdxg2c7jm2qsbxpzsw9ly909pczgkr8")))

(define-public crate-dano-0.5.0 (c (n "dano") (v "0.5.0") (d (list (d (n "clap") (r "^3.2.8") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.0") (k 0)) (d (n "rayon") (r "^1.5.1") (k 0)) (d (n "rug") (r "^1.17.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.143") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (d #t) (k 0)) (d (n "which") (r "^4.2.4") (k 0)) (d (n "xattr") (r "^0.2.3") (k 0)))) (h "10x3r6rnb5rf25hsdhmfyx29fskfpwrgrn16fhdiwd0bgg634ng1")))

(define-public crate-dano-0.5.1 (c (n "dano") (v "0.5.1") (d (list (d (n "clap") (r "^3.2.8") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.0") (k 0)) (d (n "rayon") (r "^1.5.1") (k 0)) (d (n "rug") (r "^1.17.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.143") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (d #t) (k 0)) (d (n "which") (r "^4.2.4") (k 0)) (d (n "xattr") (r "^0.2.3") (k 0)))) (h "0ab72cdwlnnv7jfx1gz1qcwvljzmdn1fjkr4b0xw0p1mqrd847lw")))

(define-public crate-dano-0.6.0 (c (n "dano") (v "0.6.0") (d (list (d (n "clap") (r "^3.2.8") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "num_cpus") (r "^1.14") (k 0)) (d (n "rayon") (r "^1.6.1") (k 0)) (d (n "rug") (r "^1.18.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.151") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "which") (r "^4.3.0") (k 0)) (d (n "xattr") (r "^1.0.0") (k 0)))) (h "0z57dw3cy9zmnamgl7jp1v3i21l0x8pcvys60284a4m3h86j8153")))

(define-public crate-dano-0.6.2 (c (n "dano") (v "0.6.2") (d (list (d (n "clap") (r "^3.2.8") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "num_cpus") (r "^1.14") (k 0)) (d (n "primitive-types") (r "^0.12.1") (k 0)) (d (n "rayon") (r "^1.6.1") (k 0)) (d (n "serde") (r "^1.0.151") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "which") (r "^4.3.0") (k 0)) (d (n "xattr") (r "^1.0.0") (k 0)))) (h "00iwlinfy5bjkj8xndk4mp38x70cn8mw6cvapvvlnp2nxl97b1lb")))

(define-public crate-dano-0.6.3 (c (n "dano") (v "0.6.3") (d (list (d (n "clap") (r "^3.2.8") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "num_cpus") (r "^1.14") (k 0)) (d (n "primitive-types") (r "^0.12.1") (k 0)) (d (n "rayon") (r "^1.6.1") (k 0)) (d (n "serde") (r "^1.0.151") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "which") (r "^4.3.0") (k 0)) (d (n "xattr") (r "^1.0.0") (k 0)))) (h "1nbrcc099wpcz31fx8xgmlpfsnyq6iix8j7cqjwpxs91m0wckpcm")))

(define-public crate-dano-0.7.1 (c (n "dano") (v "0.7.1") (d (list (d (n "clap") (r "^3.2.8") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "num_cpus") (r "^1.14") (k 0)) (d (n "primitive-types") (r "^0.12.1") (k 0)) (d (n "rayon") (r "^1.6.1") (k 0)) (d (n "serde") (r "^1.0.151") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "which") (r "^4.3.0") (k 0)) (d (n "xattr") (r "^1.0.0") (k 0)))) (h "1q2yzgynl5vhr40x1039h8ldc2ljvhzy5qbw43ch7dyn19yicgn6")))

(define-public crate-dano-0.7.2 (c (n "dano") (v "0.7.2") (d (list (d (n "clap") (r "^3.2.8") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "num_cpus") (r "^1.15") (k 0)) (d (n "primitive-types") (r "^0.12.1") (k 0)) (d (n "rayon") (r "^1.7.0") (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "which") (r "^4.4.0") (k 0)) (d (n "xattr") (r "^1.0.0") (k 0)))) (h "11q4j2zw4f0wjr4jp1akzfy874avsfrcxwsbl4bjpbzjdfj0lw7p")))

(define-public crate-dano-0.8.0 (c (n "dano") (v "0.8.0") (d (list (d (n "clap") (r "^3.2.8") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "num_cpus") (r "^1.15") (k 0)) (d (n "primitive-types") (r "^0.12.1") (k 0)) (d (n "rayon") (r "^1.7.0") (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "which") (r "^4.4.0") (k 0)) (d (n "xattr") (r "^1.0.0") (k 0)))) (h "0cgc522vpjfv7x68wl4wrrva7s13vbskgjxkph5vjwl87whzcd2w")))

(define-public crate-dano-0.8.1 (c (n "dano") (v "0.8.1") (d (list (d (n "clap") (r "^3.2.8") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "num_cpus") (r "^1.15") (k 0)) (d (n "primitive-types") (r "^0.12.1") (k 0)) (d (n "rayon") (r "^1.7.0") (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "which") (r "^4.4.0") (k 0)) (d (n "xattr") (r "^1.0.0") (k 0)))) (h "0yhqz5qw7bj4k5g7ifdz99zl1gv1qx62h5kpajms92lp3ffgd7p7")))

(define-public crate-dano-0.8.2 (c (n "dano") (v "0.8.2") (d (list (d (n "clap") (r "^3.2.8") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "num_cpus") (r "^1.15") (k 0)) (d (n "primitive-types") (r "^0.12.1") (k 0)) (d (n "rayon") (r "^1.7.0") (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "which") (r "^4.4.0") (k 0)) (d (n "xattr") (r "^1.0.0") (k 0)))) (h "0zn3v2xzk4ryikkncb6vqw31cl5pd8hmkkmjkrzpgz8amwxci3jh")))

(define-public crate-dano-0.8.3 (c (n "dano") (v "0.8.3") (d (list (d (n "clap") (r "^3.2.8") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.10") (f (quote ("std"))) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.15") (k 0)) (d (n "primitive-types") (r "^0.12.1") (k 0)) (d (n "rayon") (r "^1.7.0") (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "which") (r "^5.0.0") (k 0)) (d (n "xattr") (r "^1.0.0") (k 0)))) (h "051j320gkjrjfiv1k858injglcxdvkbk2nmgih8zhy8l3c1z3hw1")))

(define-public crate-dano-0.9.0 (c (n "dano") (v "0.9.0") (d (list (d (n "clap") (r "^3.2.8") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.12") (f (quote ("std"))) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (k 0)) (d (n "primitive-types") (r "^0.12.2") (k 0)) (d (n "rayon") (r "^1.10.0") (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.116") (d #t) (k 0)) (d (n "which") (r "^6.0.1") (k 0)) (d (n "xattr") (r "^1.3.1") (k 0)))) (h "0w6mrjkryxg8kwsrrxm5f4shh69z4gzbdmhvy8lxyc93zjylahp3")))

