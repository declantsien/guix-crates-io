(define-module (crates-io da cq dacquiri) #:use-module (crates-io))

(define-public crate-dacquiri-0.1.0 (c (n "dacquiri") (v "0.1.0") (h "11dqqw19kwbwqm0yki8vifnwi2q0v58pph9azbyqc9i8jpgag7v2")))

(define-public crate-dacquiri-0.1.1 (c (n "dacquiri") (v "0.1.1") (h "1cdaimdq6kp0nqghhw6431ii9paj79nlx322nw9arzyb6k1sy985")))

(define-public crate-dacquiri-0.2.0 (c (n "dacquiri") (v "0.2.0") (d (list (d (n "dacquiri_derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "trybuild") (r "^1") (d #t) (k 2)))) (h "0zh8p00al5ywqdqqffb5kxxxwra3w9v26vm04y96zy0473qabsrk") (f (quote (("derive" "dacquiri_derive") ("default" "derive"))))))

(define-public crate-dacquiri-0.2.1 (c (n "dacquiri") (v "0.2.1") (d (list (d (n "dacquiri_derive") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "trybuild") (r "^1") (d #t) (k 2)))) (h "1pkkx3w5rg8gw4ya2krbajp43kbl13s8r7z219r0p8fs8i4m5s1s") (f (quote (("derive" "dacquiri_derive") ("default" "derive"))))))

(define-public crate-dacquiri-0.2.2 (c (n "dacquiri") (v "0.2.2") (d (list (d (n "dacquiri_derive") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "trybuild") (r "^1") (d #t) (k 2)))) (h "1849vfr52567i64klbj4x3h62njwd7cvpmkb6cgngkjcfvf70vf4") (f (quote (("derive" "dacquiri_derive") ("default" "derive"))))))

(define-public crate-dacquiri-0.3.0 (c (n "dacquiri") (v "0.3.0") (d (list (d (n "async-trait") (r "^0") (d #t) (k 0)) (d (n "async-trait") (r "^0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "dacquiri_derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "trybuild") (r "^1") (d #t) (k 2)))) (h "0s9p3sgivkxy2z69mv0cp9d7hj21s19xdvhp1bk4rp6zy1072cma") (f (quote (("derive" "dacquiri_derive") ("default" "derive"))))))

(define-public crate-dacquiri-0.3.1 (c (n "dacquiri") (v "0.3.1") (d (list (d (n "async-trait") (r "^0") (d #t) (k 0)) (d (n "async-trait") (r "^0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "dacquiri_derive") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "trybuild") (r "^1") (d #t) (k 2)))) (h "047c0yavc1kx9hyaknjr4zsli39hnmch3jgijpbgbmz6wm2j2caf") (f (quote (("derive" "dacquiri_derive") ("default" "derive"))))))

(define-public crate-dacquiri-0.4.0 (c (n "dacquiri") (v "0.4.0") (d (list (d (n "async-trait") (r "^0") (d #t) (k 0)) (d (n "async-trait") (r "^0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "dacquiri_derive") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "trybuild") (r "^1") (d #t) (k 2)))) (h "0vm7p130qvm6anpk4f6f3gay54h956az4x54i7xc9ff7y99cl0bb") (f (quote (("derive" "dacquiri_derive") ("default" "derive"))))))

(define-public crate-dacquiri-0.4.2 (c (n "dacquiri") (v "0.4.2") (d (list (d (n "async-trait") (r "^0") (d #t) (k 0)) (d (n "async-trait") (r "^0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "dacquiri_derive") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "fxhash") (r "^0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 2)) (d (n "trybuild") (r "^1") (d #t) (k 2)))) (h "17g31l0q8zfq115wflygnahyzrg7w2jhqm5vwqz3dy6b2jbips8r") (f (quote (("derive" "dacquiri_derive") ("default" "derive"))))))

(define-public crate-dacquiri-0.4.3 (c (n "dacquiri") (v "0.4.3") (d (list (d (n "async-trait") (r "^0") (d #t) (k 0)) (d (n "async-trait") (r "^0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "dacquiri_derive") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "fxhash") (r "^0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 2)) (d (n "trybuild") (r "^1") (d #t) (k 2)))) (h "0yldjhcm4iqn0swfmg2kvg1xna5lg9kvhvrrq15spk20ibz024zq") (f (quote (("derive" "dacquiri_derive") ("default" "derive"))))))

(define-public crate-dacquiri-0.4.4 (c (n "dacquiri") (v "0.4.4") (d (list (d (n "async-trait") (r "^0") (d #t) (k 0)) (d (n "async-trait") (r "^0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "dacquiri_derive") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "fxhash") (r "^0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 2)) (d (n "trybuild") (r "^1") (d #t) (k 2)))) (h "0bhwpzdj4y4h4fkazf4qyyaf9w11cxp47lwmiqrvr82fafr5zspl") (f (quote (("derive" "dacquiri_derive") ("default" "derive"))))))

(define-public crate-dacquiri-0.5.0-rc1 (c (n "dacquiri") (v "0.5.0-rc1") (d (list (d (n "async-trait") (r "^0") (d #t) (k 0)) (d (n "async-trait") (r "^0") (d #t) (k 2)) (d (n "dacquiri_derive") (r "^0.5.0-rc1") (o #t) (d #t) (k 0)) (d (n "fxhash") (r "^0") (d #t) (k 0)) (d (n "parking_lot") (r "^0") (d #t) (k 2)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "trybuild") (r "^1") (d #t) (k 2)))) (h "0pcm4vx08iz0jxvi9p4vm3y3cmq1zq4nypj474ms205czmxz04rx") (f (quote (("derive" "dacquiri_derive") ("default" "derive"))))))

(define-public crate-dacquiri-0.5.0 (c (n "dacquiri") (v "0.5.0") (d (list (d (n "async-trait") (r "^0") (d #t) (k 0)) (d (n "dacquiri_derive") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "fxhash") (r "^0") (d #t) (k 0)) (d (n "parking_lot") (r "^0") (d #t) (k 2)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "trybuild") (r "^1") (d #t) (k 2)))) (h "1ccid5pzgp56hwn5v7pmpwmya9w2881ijwqiv8n2a45fhx88midn") (f (quote (("derive" "dacquiri_derive") ("default" "derive"))))))

(define-public crate-dacquiri-0.5.1 (c (n "dacquiri") (v "0.5.1") (d (list (d (n "async-trait") (r "^0") (d #t) (k 0)) (d (n "dacquiri_derive") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fxhash") (r "^0") (d #t) (k 0)) (d (n "parking_lot") (r "^0") (d #t) (k 2)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "trybuild") (r "^1") (d #t) (k 2)))) (h "0is8jna1avsi82s9zx24mlin023hx8n3cg519x359s9cli4nx603") (f (quote (("derive" "dacquiri_derive") ("default" "derive"))))))

