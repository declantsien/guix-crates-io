(define-module (crates-io da o- dao-testing) #:use-module (crates-io))

(define-public crate-dao-testing-0.1.0 (c (n "dao-testing") (v "0.1.0") (d (list (d (n "cosmwasm-std") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cw-multi-test") (r "^0.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dao-voting") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1308ggbqn06njlj7jaj6d8rfm76sphg1yllpy79vwif4rsf3jqy8") (y #t)))

(define-public crate-dao-testing-2.1.0 (c (n "dao-testing") (v "2.1.0") (d (list (d (n "cosmwasm-schema") (r "^1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cosmwasm-std") (r "^1.1") (f (quote ("ibc3"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cw-core-v1") (r "^0.1.0") (f (quote ("library"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "cw-core")) (d (n "cw-hooks") (r "^2.0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cw-multi-test") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cw-proposal-single-v1") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "cw-proposal-single")) (d (n "cw-utils") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cw-vesting") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cw2") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cw20") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cw20-base") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cw20-stake") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cw4") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cw4-group") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cw721-base") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dao-dao") (r "^0.0.1") (f (quote ("library"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dao-interface") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dao-pre-propose-multiple") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dao-pre-propose-single") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dao-proposal-condorcet") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dao-proposal-single") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dao-voting") (r "^2.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dao-voting-cw20-balance") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dao-voting-cw20-staked") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dao-voting-cw4") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dao-voting-cw721-staked") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dao-voting-native-staked") (r "^2.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "stake-cw20-v03") (r "^0.2.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "stake-cw20")) (d (n "voting-v1") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "dao-voting")))) (h "1d80lz5dk97p2w9a6675pb8pa36m6qkpqbfxmpzijd21d9jbxzaw") (y #t)))

(define-public crate-dao-testing-2.1.3 (c (n "dao-testing") (v "2.1.3") (d (list (d (n "cosmwasm-schema") (r "^1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cosmwasm-std") (r "^1.1") (f (quote ("ibc3"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cw-core-v1") (r "^0.1.0") (f (quote ("library"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "cw-core")) (d (n "cw-hooks") (r "^2.1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cw-multi-test") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cw-proposal-single-v1") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "cw-proposal-single")) (d (n "cw-utils") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cw-vesting") (r "^2.1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cw2") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cw20") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cw20-base") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cw20-stake") (r "^2.1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cw4") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cw4-group") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cw721-base") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dao-dao") (r "^2.1.3") (f (quote ("library"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dao-interface") (r "^2.1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dao-pre-propose-multiple") (r "^2.1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dao-pre-propose-single") (r "^2.1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dao-proposal-condorcet") (r "^2.1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dao-proposal-single") (r "^2.1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dao-voting") (r "^2.1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dao-voting-cw20-balance") (r "^2.1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dao-voting-cw20-staked") (r "^2.1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dao-voting-cw4") (r "^2.1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dao-voting-cw721-staked") (r "^2.1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dao-voting-native-staked") (r "^2.1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "stake-cw20-v03") (r "^0.2.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "stake-cw20")) (d (n "voting-v1") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "dao-voting")))) (h "02nmw1qdnrafvicaib95b8nkhc8xkfdknswia3pvpjcbwfydgcnk") (y #t)))

(define-public crate-dao-testing-2.1.5 (c (n "dao-testing") (v "2.1.5") (d (list (d (n "cosmwasm-schema") (r "^1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cosmwasm-std") (r "^1.1") (f (quote ("ibc3"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cw-core-v1") (r "^0.1.0") (f (quote ("library"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "cw-core")) (d (n "cw-hooks") (r "^2.1.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cw-multi-test") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cw-proposal-single-v1") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "cw-proposal-single")) (d (n "cw-utils") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cw-vesting") (r "^2.1.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cw2") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cw20") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cw20-base") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cw20-stake") (r "^2.1.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cw4") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cw4-group") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cw721-base") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dao-dao") (r "^2.1.5") (f (quote ("library"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dao-interface") (r "^2.1.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dao-pre-propose-multiple") (r "^2.1.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dao-pre-propose-single") (r "^2.1.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dao-proposal-condorcet") (r "^2.1.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dao-proposal-single") (r "^2.1.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dao-voting") (r "^2.1.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dao-voting-cw20-balance") (r "^2.1.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dao-voting-cw20-staked") (r "^2.1.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dao-voting-cw4") (r "^2.1.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dao-voting-cw721-staked") (r "^2.1.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dao-voting-native-staked") (r "^2.1.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "stake-cw20-v03") (r "^0.2.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "stake-cw20")) (d (n "voting-v1") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "dao-voting")))) (h "0l3b8k63k4nwqg0rkgq2nfc95rs226fzqnyfy275mx1hpccv07xb") (y #t)))

(define-public crate-dao-testing-2.2.0 (c (n "dao-testing") (v "2.2.0") (d (list (d (n "cosmwasm-schema") (r "^1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cosmwasm-std") (r "^1.1") (f (quote ("ibc3"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cw-core-v1") (r "^0.1.0") (f (quote ("library"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "cw-core")) (d (n "cw-hooks") (r "^2.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cw-multi-test") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cw-proposal-single-v1") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "cw-proposal-single")) (d (n "cw-utils") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cw-vesting") (r "^2.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cw2") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cw20") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cw20-base") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cw20-stake") (r "^2.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cw4") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cw4-group") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cw721-base") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dao-dao-core") (r "^2.2.0") (f (quote ("library"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dao-interface") (r "^2.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dao-pre-propose-multiple") (r "^2.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dao-pre-propose-single") (r "^2.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dao-proposal-condorcet") (r "^2.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dao-proposal-single") (r "^2.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dao-voting") (r "^2.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dao-voting-cw20-balance") (r "^2.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dao-voting-cw20-staked") (r "^2.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dao-voting-cw4") (r "^2.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dao-voting-cw721-staked") (r "^2.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dao-voting-native-staked") (r "^2.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "stake-cw20-v03") (r "^0.2.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "stake-cw20")) (d (n "voting-v1") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "dao-voting")))) (h "15an14j16klp4bzp1b6afli6wbpvnxq6ij1xc0vvn0v2iskinlcc")))

