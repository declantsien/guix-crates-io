(define-module (crates-io da lf dalfs) #:use-module (crates-io))

(define-public crate-dalfs-0.0.1 (c (n "dalfs") (v "0.0.1") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "chrono") (r "^0.4.30") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "fuse") (r "^0.3.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "opendal") (r "^0.40") (d #t) (k 0)) (d (n "sequence_trie") (r "^0.0.13") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)))) (h "1n05n65rkal6d08skmx43ishihw22dnlq6q11m3q6nw6m9azsz9b")))

(define-public crate-dalfs-0.0.2 (c (n "dalfs") (v "0.0.2") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "chrono") (r "^0.4.30") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "fuse") (r "^0.3.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "opendal") (r "^0.40") (d #t) (k 0)) (d (n "sequence_trie") (r "^0.0.13") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)))) (h "0gxx1gi9g3i49hys6drhccfx5g4ss1zzjs8p1q27dzl1dklgrqc2")))

(define-public crate-dalfs-0.1.0 (c (n "dalfs") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "chrono") (r "^0.4.30") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "fuser") (r "^0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "opendal") (r "^0.40") (d #t) (k 0)) (d (n "sequence_trie") (r "^0.0.13") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)))) (h "1scv4dvl9xpnrd1hms445zvciphyxr589ra0439rg8zl6d3jd0dq")))

