(define-module (crates-io da ta datafusion-physical-expr) #:use-module (crates-io))

(define-public crate-datafusion-physical-expr-8.0.0 (c (n "datafusion-physical-expr") (v "8.0.0") (d (list (d (n "ahash") (r "^0.7") (k 0)) (d (n "arrow") (r "^13") (f (quote ("prettyprint"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "blake3") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "datafusion-common") (r "^8.0.0") (d #t) (k 0)) (d (n "datafusion-expr") (r "^8.0.0") (d #t) (k 0)) (d (n "datafusion-row") (r "^8.0.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (f (quote ("raw"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "ordered-float") (r "^3.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (o #t) (d #t) (k 0)))) (h "0vpspl4zsc730c4ccrbyww655nc22ws553jv1m1icwmm435q745d") (f (quote (("unicode_expressions" "unicode-segmentation") ("regex_expressions" "regex") ("default" "crypto_expressions" "regex_expressions" "unicode_expressions") ("crypto_expressions" "md-5" "sha2" "blake2" "blake3")))) (r "1.59")))

(define-public crate-datafusion-physical-expr-9.0.0 (c (n "datafusion-physical-expr") (v "9.0.0") (d (list (d (n "ahash") (r "^0.7") (k 0)) (d (n "arrow") (r "^15.0.0") (f (quote ("prettyprint"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "blake3") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "datafusion-common") (r "^9.0.0") (d #t) (k 0)) (d (n "datafusion-expr") (r "^9.0.0") (d #t) (k 0)) (d (n "datafusion-row") (r "^9.0.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (f (quote ("raw"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "ordered-float") (r "^3.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (o #t) (d #t) (k 0)))) (h "0zbcdjfg2rvxml45vlcdwzj66lg65y0ffa1rdd01yy9r2l4xj3na") (f (quote (("unicode_expressions" "unicode-segmentation") ("regex_expressions" "regex") ("default" "crypto_expressions" "regex_expressions" "unicode_expressions") ("crypto_expressions" "md-5" "sha2" "blake2" "blake3")))) (r "1.59")))

(define-public crate-datafusion-physical-expr-10.0.0 (c (n "datafusion-physical-expr") (v "10.0.0") (d (list (d (n "ahash") (r "^0.7") (k 0)) (d (n "arrow") (r "^18.0.0") (f (quote ("prettyprint"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "blake3") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "datafusion-common") (r "^10.0.0") (d #t) (k 0)) (d (n "datafusion-expr") (r "^10.0.0") (d #t) (k 0)) (d (n "datafusion-row") (r "^10.0.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (f (quote ("raw"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "ordered-float") (r "^3.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (o #t) (d #t) (k 0)))) (h "1nkwy1p4i8n4n1wfaxyish181pdnamp5wi793cwld75807ls0a13") (f (quote (("unicode_expressions" "unicode-segmentation") ("regex_expressions" "regex") ("default" "crypto_expressions" "regex_expressions" "unicode_expressions") ("crypto_expressions" "md-5" "sha2" "blake2" "blake3")))) (r "1.59")))

(define-public crate-datafusion-physical-expr-11.0.0 (c (n "datafusion-physical-expr") (v "11.0.0") (d (list (d (n "ahash") (r "^0.7") (k 0)) (d (n "arrow") (r "^20.0.0") (f (quote ("prettyprint"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "blake3") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "datafusion-common") (r "^11.0.0") (d #t) (k 0)) (d (n "datafusion-expr") (r "^11.0.0") (d #t) (k 0)) (d (n "datafusion-row") (r "^11.0.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (f (quote ("raw"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "ordered-float") (r "^3.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (o #t) (d #t) (k 0)))) (h "10cbliqyfwmyd47vimyh6zhmhr75gxh2zd3p6yrl29zb5sgjjrd4") (f (quote (("unicode_expressions" "unicode-segmentation") ("regex_expressions" "regex") ("default" "crypto_expressions" "regex_expressions" "unicode_expressions") ("crypto_expressions" "md-5" "sha2" "blake2" "blake3")))) (r "1.62")))

(define-public crate-datafusion-physical-expr-12.0.0 (c (n "datafusion-physical-expr") (v "12.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (k 0)) (d (n "arrow") (r "^22.0.0") (f (quote ("prettyprint"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "blake3") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "datafusion-common") (r "^12.0.0") (d #t) (k 0)) (d (n "datafusion-expr") (r "^12.0.0") (d #t) (k 0)) (d (n "datafusion-row") (r "^12.0.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (f (quote ("raw"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "ordered-float") (r "^3.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (o #t) (d #t) (k 0)))) (h "1xx9f9sl3zg471y09gz4xi17mcc6id0hbgv3zgm9y40a48w4370h") (f (quote (("unicode_expressions" "unicode-segmentation") ("regex_expressions" "regex") ("default" "crypto_expressions" "regex_expressions" "unicode_expressions") ("crypto_expressions" "md-5" "sha2" "blake2" "blake3")))) (r "1.62")))

(define-public crate-datafusion-physical-expr-13.0.0 (c (n "datafusion-physical-expr") (v "13.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (k 0)) (d (n "arrow") (r "^24.0.0") (f (quote ("prettyprint"))) (d #t) (k 0)) (d (n "blake2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "blake3") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "datafusion-common") (r "^13.0.0") (d #t) (k 0)) (d (n "datafusion-expr") (r "^13.0.0") (d #t) (k 0)) (d (n "datafusion-row") (r "^13.0.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (f (quote ("raw"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "ordered-float") (r "^3.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (o #t) (d #t) (k 0)))) (h "1axrni9095kii4qp2dpjn989j94xnbflzzbla6l53lv1x1x3pgz9") (f (quote (("unicode_expressions" "unicode-segmentation") ("regex_expressions" "regex") ("default" "crypto_expressions" "regex_expressions" "unicode_expressions") ("crypto_expressions" "md-5" "sha2" "blake2" "blake3")))) (r "1.62")))

(define-public crate-datafusion-physical-expr-14.0.0 (c (n "datafusion-physical-expr") (v "14.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (k 0)) (d (n "arrow") (r "^26.0.0") (f (quote ("prettyprint"))) (d #t) (k 0)) (d (n "arrow-buffer") (r "^26.0.0") (d #t) (k 0)) (d (n "arrow-schema") (r "^26.0.0") (d #t) (k 0)) (d (n "blake2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "blake3") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "datafusion-common") (r "^14.0.0") (d #t) (k 0)) (d (n "datafusion-expr") (r "^14.0.0") (d #t) (k 0)) (d (n "datafusion-row") (r "^14.0.0") (d #t) (k 0)) (d (n "half") (r "^2.1") (k 0)) (d (n "hashbrown") (r "^0.12") (f (quote ("raw"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (f (quote ("use_std"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "ordered-float") (r "^3.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "08xfx99gsqkrr5b1nxwcrk64kpjqhyg62x0xmpn1gczfx1pqn40d") (f (quote (("unicode_expressions" "unicode-segmentation") ("regex_expressions" "regex") ("default" "crypto_expressions" "regex_expressions" "unicode_expressions") ("crypto_expressions" "md-5" "sha2" "blake2" "blake3")))) (r "1.62")))

(define-public crate-datafusion-physical-expr-15.0.0 (c (n "datafusion-physical-expr") (v "15.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (k 0)) (d (n "arrow") (r "^28.0.0") (f (quote ("prettyprint" "dyn_cmp_dict"))) (d #t) (k 0)) (d (n "arrow-buffer") (r "^28.0.0") (d #t) (k 0)) (d (n "arrow-schema") (r "^28.0.0") (d #t) (k 0)) (d (n "blake2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "blake3") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "datafusion-common") (r "^15.0.0") (d #t) (k 0)) (d (n "datafusion-expr") (r "^15.0.0") (d #t) (k 0)) (d (n "datafusion-row") (r "^15.0.0") (d #t) (k 0)) (d (n "half") (r "^2.1") (k 0)) (d (n "hashbrown") (r "^0.13") (f (quote ("raw"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (f (quote ("use_std"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "1gxhcng115lx0md19cai63m31q7xwwmyynplrnn4171gdhzbap7k") (f (quote (("unicode_expressions" "unicode-segmentation") ("regex_expressions" "regex") ("default" "crypto_expressions" "regex_expressions" "unicode_expressions") ("crypto_expressions" "md-5" "sha2" "blake2" "blake3")))) (r "1.62")))

(define-public crate-datafusion-physical-expr-16.0.0 (c (n "datafusion-physical-expr") (v "16.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (k 0)) (d (n "arrow") (r "^29.0.0") (f (quote ("prettyprint" "dyn_cmp_dict"))) (d #t) (k 0)) (d (n "arrow-buffer") (r "^29.0.0") (d #t) (k 0)) (d (n "arrow-schema") (r "^29.0.0") (d #t) (k 0)) (d (n "blake2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "blake3") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "datafusion-common") (r "^16.0.0") (d #t) (k 0)) (d (n "datafusion-expr") (r "^16.0.0") (d #t) (k 0)) (d (n "datafusion-row") (r "^16.0.0") (d #t) (k 0)) (d (n "half") (r "^2.1") (k 0)) (d (n "hashbrown") (r "^0.13") (f (quote ("raw"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (f (quote ("use_std"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "1mzf78c71p181kqb2cbi7ni6gzhp8kqkppizm2cbc7nnwhnf3mqg") (f (quote (("unicode_expressions" "unicode-segmentation") ("regex_expressions" "regex") ("default" "crypto_expressions" "regex_expressions" "unicode_expressions") ("crypto_expressions" "md-5" "sha2" "blake2" "blake3")))) (r "1.62")))

(define-public crate-datafusion-physical-expr-16.1.0 (c (n "datafusion-physical-expr") (v "16.1.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (k 0)) (d (n "arrow") (r "^29.0.0") (f (quote ("prettyprint" "dyn_cmp_dict"))) (d #t) (k 0)) (d (n "arrow-buffer") (r "^29.0.0") (d #t) (k 0)) (d (n "arrow-schema") (r "^29.0.0") (d #t) (k 0)) (d (n "blake2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "blake3") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "datafusion-common") (r "^16.1.0") (d #t) (k 0)) (d (n "datafusion-expr") (r "^16.1.0") (d #t) (k 0)) (d (n "datafusion-row") (r "^16.1.0") (d #t) (k 0)) (d (n "half") (r "^2.1") (k 0)) (d (n "hashbrown") (r "^0.13") (f (quote ("raw"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (f (quote ("use_std"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "18722ndgh29d6a7lb9yx95pxy2ilwsf2l325k5azfxn8b2p4sxbw") (f (quote (("unicode_expressions" "unicode-segmentation") ("regex_expressions" "regex") ("default" "crypto_expressions" "regex_expressions" "unicode_expressions") ("crypto_expressions" "md-5" "sha2" "blake2" "blake3")))) (r "1.62")))

(define-public crate-datafusion-physical-expr-17.0.0 (c (n "datafusion-physical-expr") (v "17.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (k 0)) (d (n "arrow") (r "^31.0.0") (f (quote ("prettyprint"))) (d #t) (k 0)) (d (n "arrow-buffer") (r "^31.0.0") (d #t) (k 0)) (d (n "arrow-schema") (r "^31.0.0") (d #t) (k 0)) (d (n "blake2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "blake3") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "datafusion-common") (r "^17.0.0") (d #t) (k 0)) (d (n "datafusion-expr") (r "^17.0.0") (d #t) (k 0)) (d (n "datafusion-row") (r "^17.0.0") (d #t) (k 0)) (d (n "half") (r "^2.1") (k 0)) (d (n "hashbrown") (r "^0.13") (f (quote ("raw"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (f (quote ("use_std"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "0842bj4kfbgg2fa21454kcr3kv0lg6fh75g5sx5w41cml08zm2m3") (f (quote (("unicode_expressions" "unicode-segmentation") ("regex_expressions" "regex") ("dictionary_expressions" "arrow/dyn_cmp_dict" "arrow/dyn_arith_dict") ("default" "crypto_expressions" "regex_expressions" "unicode_expressions") ("crypto_expressions" "md-5" "sha2" "blake2" "blake3")))) (r "1.62")))

(define-public crate-datafusion-physical-expr-18.0.0 (c (n "datafusion-physical-expr") (v "18.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (k 0)) (d (n "arrow") (r "^32.0.0") (f (quote ("prettyprint"))) (d #t) (k 0)) (d (n "arrow-buffer") (r "^32.0.0") (d #t) (k 0)) (d (n "arrow-schema") (r "^32.0.0") (d #t) (k 0)) (d (n "blake2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "blake3") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "datafusion-common") (r "^18.0.0") (d #t) (k 0)) (d (n "datafusion-expr") (r "^18.0.0") (d #t) (k 0)) (d (n "datafusion-row") (r "^18.0.0") (d #t) (k 0)) (d (n "half") (r "^2.1") (k 0)) (d (n "hashbrown") (r "^0.13") (f (quote ("raw"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (f (quote ("use_std"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "0w7hqx09asc89xr6y6z8l7mximy4x4nl3kgagk1mlvqgdwsl4gll") (f (quote (("unicode_expressions" "unicode-segmentation") ("regex_expressions" "regex") ("dictionary_expressions" "arrow/dyn_cmp_dict" "arrow/dyn_arith_dict") ("default" "crypto_expressions" "regex_expressions" "unicode_expressions") ("crypto_expressions" "md-5" "sha2" "blake2" "blake3")))) (r "1.62")))

(define-public crate-datafusion-physical-expr-19.0.0 (c (n "datafusion-physical-expr") (v "19.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (k 0)) (d (n "arrow") (r "^33.0.0") (f (quote ("prettyprint"))) (d #t) (k 0)) (d (n "arrow-buffer") (r "^33.0.0") (d #t) (k 0)) (d (n "arrow-schema") (r "^33.0.0") (d #t) (k 0)) (d (n "blake2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "blake3") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "datafusion-common") (r "^19.0.0") (d #t) (k 0)) (d (n "datafusion-expr") (r "^19.0.0") (d #t) (k 0)) (d (n "datafusion-row") (r "^19.0.0") (d #t) (k 0)) (d (n "half") (r "^2.1") (k 0)) (d (n "hashbrown") (r "^0.13") (f (quote ("raw"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (f (quote ("use_std"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "0pr44nffscmqcqm31zhrp5dsq8npifs3ncj357zi1f5gxzwfh040") (f (quote (("unicode_expressions" "unicode-segmentation") ("regex_expressions" "regex") ("dictionary_expressions" "arrow/dyn_cmp_dict" "arrow/dyn_arith_dict") ("default" "crypto_expressions" "regex_expressions" "unicode_expressions") ("crypto_expressions" "md-5" "sha2" "blake2" "blake3")))) (r "1.62")))

(define-public crate-datafusion-physical-expr-20.0.0 (c (n "datafusion-physical-expr") (v "20.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (k 0)) (d (n "arrow") (r "^34.0.0") (f (quote ("prettyprint"))) (d #t) (k 0)) (d (n "arrow-buffer") (r "^34.0.0") (d #t) (k 0)) (d (n "arrow-schema") (r "^34.0.0") (d #t) (k 0)) (d (n "blake2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "blake3") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "datafusion-common") (r "^20.0.0") (d #t) (k 0)) (d (n "datafusion-expr") (r "^20.0.0") (d #t) (k 0)) (d (n "datafusion-row") (r "^20.0.0") (d #t) (k 0)) (d (n "half") (r "^2.1") (k 0)) (d (n "hashbrown") (r "^0.13") (f (quote ("raw"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (f (quote ("use_std"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.16.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "0g1sa32j8lm1bh5hfgghjj7jmjps481yxy4jkqp5vhndq3v07c6f") (f (quote (("unicode_expressions" "unicode-segmentation") ("regex_expressions" "regex") ("dictionary_expressions" "arrow/dyn_cmp_dict" "arrow/dyn_arith_dict") ("default" "crypto_expressions" "regex_expressions" "unicode_expressions") ("crypto_expressions" "md-5" "sha2" "blake2" "blake3")))) (r "1.64")))

(define-public crate-datafusion-physical-expr-21.0.0 (c (n "datafusion-physical-expr") (v "21.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (k 0)) (d (n "arrow") (r "^34.0.0") (f (quote ("prettyprint"))) (d #t) (k 0)) (d (n "arrow-buffer") (r "^34.0.0") (d #t) (k 0)) (d (n "arrow-schema") (r "^34.0.0") (d #t) (k 0)) (d (n "blake2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "blake3") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "datafusion-common") (r "^21.0.0") (d #t) (k 0)) (d (n "datafusion-expr") (r "^21.0.0") (d #t) (k 0)) (d (n "datafusion-row") (r "^21.0.0") (d #t) (k 0)) (d (n "half") (r "^2.1") (k 0)) (d (n "hashbrown") (r "^0.13") (f (quote ("raw"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (f (quote ("use_std"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.17.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "0vlh0pmrqh09z4khm2x9n5qajxp1mlfbppqqggwmjbgrxm3i1ah8") (f (quote (("unicode_expressions" "unicode-segmentation") ("regex_expressions" "regex") ("dictionary_expressions" "arrow/dyn_cmp_dict" "arrow/dyn_arith_dict") ("default" "crypto_expressions" "regex_expressions" "unicode_expressions") ("crypto_expressions" "md-5" "sha2" "blake2" "blake3")))) (r "1.64")))

(define-public crate-datafusion-physical-expr-21.1.0 (c (n "datafusion-physical-expr") (v "21.1.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (k 0)) (d (n "arrow") (r "^34.0.0") (f (quote ("prettyprint"))) (d #t) (k 0)) (d (n "arrow-buffer") (r "^34.0.0") (k 0)) (d (n "arrow-schema") (r "^34.0.0") (k 0)) (d (n "blake2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "blake3") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "datafusion-common") (r "^21.1.0") (d #t) (k 0)) (d (n "datafusion-expr") (r "^21.1.0") (d #t) (k 0)) (d (n "datafusion-row") (r "^21.1.0") (d #t) (k 0)) (d (n "half") (r "^2.1") (k 0)) (d (n "hashbrown") (r "^0.13") (f (quote ("raw"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (f (quote ("use_std"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.17.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "1w0qysl5g4l54bcwqbvfvbfvinpn2jadkpaah4kl2lb8fk8ybdkj") (f (quote (("unicode_expressions" "unicode-segmentation") ("regex_expressions" "regex") ("dictionary_expressions" "arrow/dyn_cmp_dict" "arrow/dyn_arith_dict") ("default" "crypto_expressions" "regex_expressions" "unicode_expressions") ("crypto_expressions" "md-5" "sha2" "blake2" "blake3")))) (r "1.64")))

(define-public crate-datafusion-physical-expr-22.0.0 (c (n "datafusion-physical-expr") (v "22.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (k 0)) (d (n "arrow") (r "^36.0.0") (f (quote ("prettyprint"))) (d #t) (k 0)) (d (n "arrow-array") (r "^36.0.0") (f (quote ("chrono-tz"))) (k 0)) (d (n "arrow-buffer") (r "^36.0.0") (k 0)) (d (n "arrow-schema") (r "^36.0.0") (k 0)) (d (n "blake2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "blake3") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "datafusion-common") (r "^22.0.0") (d #t) (k 0)) (d (n "datafusion-expr") (r "^22.0.0") (d #t) (k 0)) (d (n "datafusion-row") (r "^22.0.0") (d #t) (k 0)) (d (n "half") (r "^2.1") (k 0)) (d (n "hashbrown") (r "^0.13") (f (quote ("raw"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (f (quote ("use_std"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.17.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "0ycg5xl2x8s2d33bbvpz578mn0xiy44mjzg1lfrb21qamfjqxkc0") (f (quote (("unicode_expressions" "unicode-segmentation") ("regex_expressions" "regex") ("dictionary_expressions" "arrow/dyn_cmp_dict" "arrow/dyn_arith_dict") ("default" "crypto_expressions" "regex_expressions" "unicode_expressions") ("crypto_expressions" "md-5" "sha2" "blake2" "blake3")))) (r "1.64")))

(define-public crate-datafusion-physical-expr-23.0.0 (c (n "datafusion-physical-expr") (v "23.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (k 0)) (d (n "arrow") (r "^37.0.0") (f (quote ("prettyprint"))) (d #t) (k 0)) (d (n "arrow-array") (r "^37.0.0") (f (quote ("chrono-tz"))) (k 0)) (d (n "arrow-buffer") (r "^37.0.0") (k 0)) (d (n "arrow-schema") (r "^37.0.0") (k 0)) (d (n "blake2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "blake3") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "datafusion-common") (r "^23.0.0") (d #t) (k 0)) (d (n "datafusion-expr") (r "^23.0.0") (d #t) (k 0)) (d (n "datafusion-row") (r "^23.0.0") (d #t) (k 0)) (d (n "half") (r "^2.1") (k 0)) (d (n "hashbrown") (r "^0.13") (f (quote ("raw"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (f (quote ("use_std"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.140") (d #t) (k 0)) (d (n "md-5") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.17.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "0ix3s1qb731kbgx7rpzg518380n65lyzx4wfny67bwhjnclg4k6z") (f (quote (("unicode_expressions" "unicode-segmentation") ("regex_expressions" "regex") ("dictionary_expressions" "arrow/dyn_cmp_dict" "arrow/dyn_arith_dict") ("default" "crypto_expressions" "regex_expressions" "unicode_expressions") ("crypto_expressions" "md-5" "sha2" "blake2" "blake3")))) (r "1.64")))

(define-public crate-datafusion-physical-expr-24.0.0 (c (n "datafusion-physical-expr") (v "24.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (k 0)) (d (n "arrow") (r "^38.0.0") (f (quote ("prettyprint"))) (d #t) (k 0)) (d (n "arrow-array") (r "^38.0.0") (f (quote ("chrono-tz"))) (k 0)) (d (n "arrow-buffer") (r "^38.0.0") (k 0)) (d (n "arrow-schema") (r "^38.0.0") (k 0)) (d (n "blake2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "blake3") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "datafusion-common") (r "^24.0.0") (d #t) (k 0)) (d (n "datafusion-expr") (r "^24.0.0") (d #t) (k 0)) (d (n "datafusion-row") (r "^24.0.0") (d #t) (k 0)) (d (n "half") (r "^2.1") (k 0)) (d (n "hashbrown") (r "^0.13") (f (quote ("raw"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (f (quote ("use_std"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.140") (d #t) (k 0)) (d (n "md-5") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.17.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "0nnsj6mkks52rwlxk3gd0w5dami97fkipx7zclwl9qgyd23fnd4y") (f (quote (("unicode_expressions" "unicode-segmentation") ("regex_expressions" "regex") ("dictionary_expressions" "arrow/dyn_cmp_dict" "arrow/dyn_arith_dict") ("default" "crypto_expressions" "regex_expressions" "unicode_expressions") ("crypto_expressions" "md-5" "sha2" "blake2" "blake3")))) (r "1.64")))

(define-public crate-datafusion-physical-expr-25.0.0 (c (n "datafusion-physical-expr") (v "25.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (k 0)) (d (n "arrow") (r "^39.0.0") (f (quote ("prettyprint"))) (d #t) (k 0)) (d (n "arrow-array") (r "^39.0.0") (f (quote ("chrono-tz"))) (k 0)) (d (n "arrow-buffer") (r "^39.0.0") (k 0)) (d (n "arrow-schema") (r "^39.0.0") (k 0)) (d (n "blake2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "blake3") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "datafusion-common") (r "^25.0.0") (d #t) (k 0)) (d (n "datafusion-expr") (r "^25.0.0") (d #t) (k 0)) (d (n "datafusion-row") (r "^25.0.0") (d #t) (k 0)) (d (n "half") (r "^2.1") (k 0)) (d (n "hashbrown") (r "^0.13") (f (quote ("raw"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (f (quote ("use_std"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.140") (d #t) (k 0)) (d (n "md-5") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.17.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "0bibvjgbmly3jl3m96xbc8yhl7zgjbifhl4n36i4in95wa9gv75l") (f (quote (("unicode_expressions" "unicode-segmentation") ("regex_expressions" "regex") ("dictionary_expressions" "arrow/dyn_cmp_dict" "arrow/dyn_arith_dict") ("default" "crypto_expressions" "regex_expressions" "unicode_expressions") ("crypto_expressions" "md-5" "sha2" "blake2" "blake3")))) (r "1.64")))

(define-public crate-datafusion-physical-expr-26.0.0 (c (n "datafusion-physical-expr") (v "26.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (k 0)) (d (n "arrow") (r "^40.0.0") (f (quote ("prettyprint"))) (d #t) (k 0)) (d (n "arrow-array") (r "^40.0.0") (f (quote ("chrono-tz"))) (k 0)) (d (n "arrow-buffer") (r "^40.0.0") (k 0)) (d (n "arrow-schema") (r "^40.0.0") (k 0)) (d (n "blake2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "blake3") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "datafusion-common") (r "^26.0.0") (d #t) (k 0)) (d (n "datafusion-expr") (r "^26.0.0") (d #t) (k 0)) (d (n "datafusion-row") (r "^26.0.0") (d #t) (k 0)) (d (n "half") (r "^2.1") (k 0)) (d (n "hashbrown") (r "^0.13") (f (quote ("raw"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (f (quote ("use_std"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.140") (d #t) (k 0)) (d (n "md-5") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.17.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "0xn8is0387br3xcar5h13n5p3qka8hny3nalxqvfzza06gsy63pn") (f (quote (("unicode_expressions" "unicode-segmentation") ("regex_expressions" "regex") ("dictionary_expressions" "arrow/dyn_cmp_dict" "arrow/dyn_arith_dict") ("default" "crypto_expressions" "regex_expressions" "unicode_expressions") ("crypto_expressions" "md-5" "sha2" "blake2" "blake3")))) (r "1.64")))

(define-public crate-datafusion-physical-expr-27.0.0 (c (n "datafusion-physical-expr") (v "27.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (k 0)) (d (n "arrow") (r "^42.0.0") (f (quote ("prettyprint" "dyn_cmp_dict"))) (d #t) (k 0)) (d (n "arrow-array") (r "^42.0.0") (f (quote ("chrono-tz"))) (k 0)) (d (n "arrow-buffer") (r "^42.0.0") (k 0)) (d (n "arrow-schema") (r "^42.0.0") (k 0)) (d (n "blake2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "blake3") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "datafusion-common") (r "^27.0.0") (d #t) (k 0)) (d (n "datafusion-expr") (r "^27.0.0") (d #t) (k 0)) (d (n "datafusion-row") (r "^27.0.0") (d #t) (k 0)) (d (n "half") (r "^2.1") (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "itertools") (r "^0.11") (f (quote ("use_std"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.140") (d #t) (k 0)) (d (n "md-5") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.17.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "0kfav1acyjxgagqkszsiy6ynsd60hh49blwaf7krx0jb9yi95j3c") (f (quote (("unicode_expressions" "unicode-segmentation") ("regex_expressions" "regex") ("dictionary_expressions" "arrow/dyn_cmp_dict" "arrow/dyn_arith_dict") ("default" "crypto_expressions" "regex_expressions" "unicode_expressions") ("crypto_expressions" "md-5" "sha2" "blake2" "blake3")))) (r "1.64")))

(define-public crate-datafusion-physical-expr-28.0.0 (c (n "datafusion-physical-expr") (v "28.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (k 0)) (d (n "arrow") (r "^43.0.0") (f (quote ("prettyprint" "dyn_cmp_dict"))) (d #t) (k 0)) (d (n "arrow-array") (r "^43.0.0") (f (quote ("chrono-tz"))) (k 0)) (d (n "arrow-buffer") (r "^43.0.0") (k 0)) (d (n "arrow-schema") (r "^43.0.0") (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "blake3") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "datafusion-common") (r "^28.0.0") (d #t) (k 0)) (d (n "datafusion-expr") (r "^28.0.0") (d #t) (k 0)) (d (n "half") (r "^2.1") (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "itertools") (r "^0.11") (f (quote ("use_std"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.140") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "1axyd1dh92iw9v7r2h43bwibdycrzm35z4wddi64nnxhm5fn6b0g") (f (quote (("unicode_expressions" "unicode-segmentation") ("regex_expressions" "regex") ("encoding_expressions" "base64" "hex") ("dictionary_expressions" "arrow/dyn_cmp_dict") ("default" "crypto_expressions" "regex_expressions" "unicode_expressions" "encoding_expressions") ("crypto_expressions" "md-5" "sha2" "blake2" "blake3")))) (r "1.64")))

(define-public crate-datafusion-physical-expr-29.0.0 (c (n "datafusion-physical-expr") (v "29.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (k 0)) (d (n "arrow") (r "^45.0.0") (f (quote ("prettyprint" "dyn_cmp_dict"))) (d #t) (k 0)) (d (n "arrow-array") (r "^45.0.0") (f (quote ("chrono-tz"))) (k 0)) (d (n "arrow-buffer") (r "^45.0.0") (k 0)) (d (n "arrow-schema") (r "^45.0.0") (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "blake3") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "datafusion-common") (r "^29.0.0") (d #t) (k 0)) (d (n "datafusion-expr") (r "^29.0.0") (d #t) (k 0)) (d (n "half") (r "^2.1") (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "itertools") (r "^0.11") (f (quote ("use_std"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.140") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "0cc1d1hmkalas7yzwbb07ksxhcngv00v29y60pzk75y82dlhr2i2") (f (quote (("unicode_expressions" "unicode-segmentation") ("regex_expressions" "regex") ("encoding_expressions" "base64" "hex") ("dictionary_expressions" "arrow/dyn_cmp_dict") ("default" "crypto_expressions" "regex_expressions" "unicode_expressions" "encoding_expressions") ("crypto_expressions" "md-5" "sha2" "blake2" "blake3")))) (y #t) (r "1.70")))

(define-public crate-datafusion-physical-expr-30.0.0 (c (n "datafusion-physical-expr") (v "30.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (k 0)) (d (n "arrow") (r "^45.0.0") (f (quote ("prettyprint" "dyn_cmp_dict"))) (d #t) (k 0)) (d (n "arrow-array") (r "^45.0.0") (f (quote ("chrono-tz"))) (k 0)) (d (n "arrow-buffer") (r "^45.0.0") (k 0)) (d (n "arrow-schema") (r "^45.0.0") (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "blake3") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "datafusion-common") (r "^30.0.0") (d #t) (k 0)) (d (n "datafusion-expr") (r "^30.0.0") (d #t) (k 0)) (d (n "half") (r "^2.1") (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "itertools") (r "^0.11") (f (quote ("use_std"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.140") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "0la4fh9n9jm0yc14x8j7kr0sn7bswd6zhdb50vz79lw828b1jk4n") (f (quote (("unicode_expressions" "unicode-segmentation") ("regex_expressions" "regex") ("encoding_expressions" "base64" "hex") ("dictionary_expressions" "arrow/dyn_cmp_dict") ("default" "crypto_expressions" "regex_expressions" "unicode_expressions" "encoding_expressions") ("crypto_expressions" "md-5" "sha2" "blake2" "blake3")))) (r "1.70")))

(define-public crate-datafusion-physical-expr-31.0.0 (c (n "datafusion-physical-expr") (v "31.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (k 0)) (d (n "arrow") (r "^46.0.0") (f (quote ("prettyprint" "dyn_cmp_dict"))) (d #t) (k 0)) (d (n "arrow-array") (r "^46.0.0") (f (quote ("chrono-tz"))) (k 0)) (d (n "arrow-buffer") (r "^46.0.0") (k 0)) (d (n "arrow-schema") (r "^46.0.0") (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "blake3") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.27") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "datafusion-common") (r "^31.0.0") (d #t) (k 0)) (d (n "datafusion-expr") (r "^31.0.0") (d #t) (k 0)) (d (n "half") (r "^2.1") (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "itertools") (r "^0.11") (f (quote ("use_std"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.140") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "0b4kq46zwx9zar7xa61sxgdcwjbh1kj8zv7yhjvxrfy9h9q5cv3n") (f (quote (("unicode_expressions" "unicode-segmentation") ("regex_expressions" "regex") ("encoding_expressions" "base64" "hex") ("dictionary_expressions" "arrow/dyn_cmp_dict") ("default" "crypto_expressions" "regex_expressions" "unicode_expressions" "encoding_expressions") ("crypto_expressions" "md-5" "sha2" "blake2" "blake3")))) (r "1.70")))

(define-public crate-datafusion-physical-expr-32.0.0 (c (n "datafusion-physical-expr") (v "32.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (k 0)) (d (n "arrow") (r "^47.0.0") (f (quote ("prettyprint"))) (d #t) (k 0)) (d (n "arrow-array") (r "^47.0.0") (f (quote ("chrono-tz"))) (k 0)) (d (n "arrow-buffer") (r "^47.0.0") (k 0)) (d (n "arrow-schema") (r "^47.0.0") (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "blake3") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "datafusion-common") (r "^32.0.0") (k 0)) (d (n "datafusion-expr") (r "^32.0.0") (d #t) (k 0)) (d (n "half") (r "^2.1") (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "itertools") (r "^0.11") (f (quote ("use_std"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.140") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "1zfxcgp0g65vqfh4lkj6byr2c80f50psidsddi3w13crka79dd2p") (f (quote (("unicode_expressions" "unicode-segmentation") ("regex_expressions" "regex") ("encoding_expressions" "base64" "hex") ("default" "crypto_expressions" "regex_expressions" "unicode_expressions" "encoding_expressions") ("crypto_expressions" "md-5" "sha2" "blake2" "blake3")))) (r "1.70")))

(define-public crate-datafusion-physical-expr-33.0.0 (c (n "datafusion-physical-expr") (v "33.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (k 0)) (d (n "arrow") (r "~48.0.1") (f (quote ("prettyprint"))) (d #t) (k 0)) (d (n "arrow-array") (r "~48.0.1") (f (quote ("chrono-tz"))) (k 0)) (d (n "arrow-buffer") (r "~48.0.1") (k 0)) (d (n "arrow-ord") (r "~48.0.1") (k 0)) (d (n "arrow-schema") (r "~48.0.1") (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "blake3") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "datafusion-common") (r "^33.0.0") (d #t) (k 0)) (d (n "datafusion-expr") (r "^33.0.0") (d #t) (k 0)) (d (n "half") (r "^2.1") (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "itertools") (r "^0.11") (f (quote ("use_std"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.140") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "02159w764vfmdzw8kqkv9smhkz619a2b6gwv390k4snimms8aazk") (f (quote (("unicode_expressions" "unicode-segmentation") ("regex_expressions" "regex") ("encoding_expressions" "base64" "hex") ("default" "crypto_expressions" "regex_expressions" "unicode_expressions" "encoding_expressions") ("crypto_expressions" "md-5" "sha2" "blake2" "blake3")))) (r "1.70")))

(define-public crate-datafusion-physical-expr-34.0.0 (c (n "datafusion-physical-expr") (v "34.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (k 0)) (d (n "arrow") (r "^49.0.0") (f (quote ("prettyprint"))) (d #t) (k 0)) (d (n "arrow-array") (r "^49.0.0") (f (quote ("chrono-tz"))) (k 0)) (d (n "arrow-buffer") (r "^49.0.0") (k 0)) (d (n "arrow-ord") (r "^49.0.0") (k 0)) (d (n "arrow-schema") (r "^49.0.0") (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "blake3") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "datafusion-common") (r "^34.0.0") (d #t) (k 0)) (d (n "datafusion-expr") (r "^34.0.0") (d #t) (k 0)) (d (n "half") (r "^2.1") (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (f (quote ("use_std"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "0dcpl1ri8nir1flw09gy3bwwq0sb0n95ndy20v2rsbx2bkisf74y") (f (quote (("unicode_expressions" "unicode-segmentation") ("regex_expressions" "regex") ("encoding_expressions" "base64" "hex") ("default" "crypto_expressions" "regex_expressions" "unicode_expressions" "encoding_expressions") ("crypto_expressions" "md-5" "sha2" "blake2" "blake3")))) (r "1.70")))

(define-public crate-datafusion-physical-expr-35.0.0 (c (n "datafusion-physical-expr") (v "35.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (k 0)) (d (n "arrow") (r "^50.0.0") (f (quote ("prettyprint"))) (d #t) (k 0)) (d (n "arrow-array") (r "^50.0.0") (f (quote ("chrono-tz"))) (k 0)) (d (n "arrow-buffer") (r "^50.0.0") (k 0)) (d (n "arrow-ord") (r "^50.0.0") (k 0)) (d (n "arrow-schema") (r "^50.0.0") (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "blake3") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "datafusion-common") (r "^35.0.0") (d #t) (k 0)) (d (n "datafusion-expr") (r "^35.0.0") (d #t) (k 0)) (d (n "half") (r "^2.1") (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (f (quote ("use_std"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "1l3qi3ij489w7rxca41y9m0jf0r9v14p8xqly3l596n816kbq4g9") (f (quote (("unicode_expressions" "unicode-segmentation") ("regex_expressions" "regex") ("encoding_expressions" "base64" "hex") ("default" "crypto_expressions" "regex_expressions" "unicode_expressions" "encoding_expressions") ("crypto_expressions" "md-5" "sha2" "blake2" "blake3")))) (r "1.70")))

(define-public crate-datafusion-physical-expr-36.0.0 (c (n "datafusion-physical-expr") (v "36.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (k 0)) (d (n "arrow") (r "^50.0.0") (f (quote ("prettyprint"))) (d #t) (k 0)) (d (n "arrow-array") (r "^50.0.0") (f (quote ("chrono-tz"))) (k 0)) (d (n "arrow-buffer") (r "^50.0.0") (k 0)) (d (n "arrow-ord") (r "^50.0.0") (k 0)) (d (n "arrow-schema") (r "^50.0.0") (k 0)) (d (n "arrow-string") (r "^50.0.0") (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "blake3") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.34") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "datafusion") (r "^36.0.0") (d #t) (k 2)) (d (n "datafusion-common") (r "^36.0.0") (d #t) (k 0)) (d (n "datafusion-execution") (r "^36.0.0") (d #t) (k 0)) (d (n "datafusion-expr") (r "^36.0.0") (d #t) (k 0)) (d (n "half") (r "^2.1") (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (f (quote ("use_std"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.36") (f (quote ("macros" "rt" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.7.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "0svdgyb9w7q011zgkfjmkz24j8xxaj4bckvmkk53nsppkv6j1rnx") (f (quote (("unicode_expressions" "unicode-segmentation") ("regex_expressions" "regex") ("encoding_expressions" "base64" "hex") ("default" "crypto_expressions" "regex_expressions" "unicode_expressions" "encoding_expressions") ("crypto_expressions" "md-5" "sha2" "blake2" "blake3")))) (r "1.72")))

(define-public crate-datafusion-physical-expr-37.0.0 (c (n "datafusion-physical-expr") (v "37.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (k 0)) (d (n "arrow") (r "^51.0.0") (f (quote ("prettyprint"))) (d #t) (k 0)) (d (n "arrow-array") (r "^51.0.0") (f (quote ("chrono-tz"))) (k 0)) (d (n "arrow-buffer") (r "^51.0.0") (k 0)) (d (n "arrow-ord") (r "^51.0.0") (k 0)) (d (n "arrow-schema") (r "^51.0.0") (k 0)) (d (n "arrow-string") (r "^51.0.0") (k 0)) (d (n "base64") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "blake3") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.34") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "datafusion-common") (r "^37.0.0") (d #t) (k 0)) (d (n "datafusion-execution") (r "^37.0.0") (d #t) (k 0)) (d (n "datafusion-expr") (r "^37.0.0") (d #t) (k 0)) (d (n "half") (r "^2.2.1") (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (f (quote ("use_std"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.36") (f (quote ("macros" "rt" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.7.1") (o #t) (d #t) (k 0)))) (h "1nsa6ja99pq51ck6lpwa3aw1d3y1bygrgjwzxqca95da3apin04f") (f (quote (("unicode_expressions" "unicode-segmentation") ("regex_expressions" "regex") ("encoding_expressions" "base64" "hex") ("default" "crypto_expressions" "regex_expressions" "unicode_expressions" "encoding_expressions") ("crypto_expressions" "md-5" "sha2" "blake2" "blake3")))) (r "1.72")))

(define-public crate-datafusion-physical-expr-37.1.0 (c (n "datafusion-physical-expr") (v "37.1.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (k 0)) (d (n "arrow") (r "^51.0.0") (f (quote ("prettyprint"))) (d #t) (k 0)) (d (n "arrow-array") (r "^51.0.0") (f (quote ("chrono-tz"))) (k 0)) (d (n "arrow-buffer") (r "^51.0.0") (k 0)) (d (n "arrow-ord") (r "^51.0.0") (k 0)) (d (n "arrow-schema") (r "^51.0.0") (k 0)) (d (n "arrow-string") (r "^51.0.0") (k 0)) (d (n "base64") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "blake3") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.34") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "datafusion-common") (r "^37.1.0") (d #t) (k 0)) (d (n "datafusion-execution") (r "^37.1.0") (d #t) (k 0)) (d (n "datafusion-expr") (r "^37.1.0") (d #t) (k 0)) (d (n "half") (r "^2.2.1") (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (f (quote ("use_std"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.36") (f (quote ("macros" "rt" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.7.1") (o #t) (d #t) (k 0)))) (h "15izk5pfwcd3q1jvz3750kxx5zy94dig24i18wdypxd0mbcw1asw") (f (quote (("unicode_expressions" "unicode-segmentation") ("regex_expressions" "regex") ("encoding_expressions" "base64" "hex") ("default" "crypto_expressions" "regex_expressions" "unicode_expressions" "encoding_expressions") ("crypto_expressions" "md-5" "sha2" "blake2" "blake3")))) (r "1.72")))

(define-public crate-datafusion-physical-expr-38.0.0 (c (n "datafusion-physical-expr") (v "38.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (k 0)) (d (n "arrow") (r "^51.0.0") (f (quote ("prettyprint"))) (d #t) (k 0)) (d (n "arrow") (r "^51.0.0") (f (quote ("prettyprint" "test_utils"))) (d #t) (k 2)) (d (n "arrow-array") (r "^51.0.0") (f (quote ("chrono-tz"))) (k 0)) (d (n "arrow-buffer") (r "^51.0.0") (k 0)) (d (n "arrow-ord") (r "^51.0.0") (k 0)) (d (n "arrow-schema") (r "^51.0.0") (k 0)) (d (n "arrow-string") (r "^51.0.0") (k 0)) (d (n "base64") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.34") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "datafusion-common") (r "^38.0.0") (d #t) (k 0)) (d (n "datafusion-execution") (r "^38.0.0") (d #t) (k 0)) (d (n "datafusion-expr") (r "^38.0.0") (d #t) (k 0)) (d (n "datafusion-functions-aggregate") (r "^38.0.0") (d #t) (k 0)) (d (n "datafusion-physical-expr-common") (r "^38.0.0") (k 0)) (d (n "half") (r "^2.2.1") (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (f (quote ("use_std"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.19.0") (d #t) (k 2)) (d (n "tokio") (r "^1.36") (f (quote ("macros" "rt" "sync" "rt-multi-thread"))) (d #t) (k 2)))) (h "1y1gpbfqni4shcdwj19c0qg2k6rw9p4vd7p007gjvx8n4yqqxpws") (f (quote (("regex_expressions" "regex") ("encoding_expressions" "base64" "hex") ("default" "regex_expressions" "encoding_expressions")))) (r "1.73")))

