(define-module (crates-io da ta datacake) #:use-module (crates-io))

(define-public crate-datacake-0.1.0 (c (n "datacake") (v "0.1.0") (d (list (d (n "datacake-cluster") (r "^0.1") (d #t) (k 0)) (d (n "datacake-crdt") (r "^0.3") (d #t) (k 0)) (d (n "datacake-sqlite") (r "^0.1") (d #t) (k 0)))) (h "1hffvl7gvxl4apxwlazg4nsbv5dpkmj6rzsg7iz25772kf3rb0kn") (f (quote (("test-utils" "datacake-cluster/test-utils") ("rkyv" "datacake-crdt/rkyv-support"))))))

(define-public crate-datacake-0.2.0 (c (n "datacake") (v "0.2.0") (d (list (d (n "datacake-cluster") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "datacake-crdt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "datacake-rpc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "datacake-sqlite") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0zhcyh9m40sxm9226a3nmgbkxz9f1b9kb4f228hbbam433v0mwyp") (f (quote (("test-utils" "datacake-cluster/test-utils") ("rkyv" "datacake-crdt/rkyv-support") ("default" "datacake-crdt" "datacake-rpc" "datacake-cluster" "datacake-sqlite"))))))

(define-public crate-datacake-0.3.0 (c (n "datacake") (v "0.3.0") (d (list (d (n "datacake-cluster") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "datacake-crdt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "datacake-rpc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "datacake-sqlite") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1p26c33zmschsvzkrzj9r7cbg8nprhfl616avwfphf910npyvvb2") (f (quote (("test-utils" "datacake-cluster/test-utils") ("rkyv" "datacake-crdt/rkyv-support") ("default" "datacake-crdt" "datacake-rpc" "datacake-cluster" "datacake-sqlite"))))))

(define-public crate-datacake-0.4.0 (c (n "datacake") (v "0.4.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "datacake-crdt") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "datacake-eventual-consistency") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "datacake-node") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "datacake-rpc") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "datacake-sqlite") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt"))) (d #t) (k 2)))) (h "0a6zzghdv7d82sz90lg4h8lpjm15a3lxr123v0m28y5fn7xlpqlz") (f (quote (("test-utils" "datacake-eventual-consistency/test-utils") ("rkyv" "datacake-crdt/rkyv-support") ("default" "datacake-crdt" "datacake-rpc" "datacake-eventual-consistency" "datacake-sqlite" "datacake-node"))))))

(define-public crate-datacake-0.6.0 (c (n "datacake") (v "0.6.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "datacake-crdt") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "datacake-eventual-consistency") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "datacake-node") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "datacake-rpc") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "datacake-sqlite") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt"))) (d #t) (k 2)))) (h "1m83kxnvzlxcyj5jj4hvic3g71msww7865dm30cazaighydzpsq3") (f (quote (("test-utils" "datacake-eventual-consistency/test-utils") ("simulation" "datacake-rpc/simulation") ("rkyv" "datacake-crdt/rkyv-support") ("default" "datacake-crdt" "datacake-rpc" "datacake-eventual-consistency" "datacake-sqlite" "datacake-node"))))))

(define-public crate-datacake-0.7.1 (c (n "datacake") (v "0.7.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "datacake-crdt") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "datacake-eventual-consistency") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "datacake-lmdb") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "datacake-node") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "datacake-rpc") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "datacake-sqlite") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt"))) (d #t) (k 2)))) (h "0821fdmjg8f0q6233wwckdb7whahzabn1lcvc6avqg1w4mvsdbzd") (f (quote (("test-utils" "datacake-eventual-consistency/test-utils") ("simulation" "datacake-rpc/simulation") ("rkyv" "datacake-crdt/rkyv-support") ("default" "datacake-crdt" "datacake-rpc" "datacake-eventual-consistency" "datacake-node"))))))

