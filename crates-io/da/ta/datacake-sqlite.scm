(define-module (crates-io da ta datacake-sqlite) #:use-module (crates-io))

(define-public crate-datacake-sqlite-0.1.0 (c (n "datacake-sqlite") (v "0.1.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.59") (d #t) (k 0)) (d (n "datacake-cluster") (r "^0.1") (d #t) (k 0)) (d (n "datacake-cluster") (r "^0.1") (f (quote ("test-utils"))) (d #t) (k 2)) (d (n "datacake-crdt") (r "^0.3") (d #t) (k 0)) (d (n "flume") (r "^0.10.14") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt"))) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 2)))) (h "1gaz20k5sfhyic2fxqs8nalv34va64b78jiabwilarb0jhjx2x94") (f (quote (("default" "bundled") ("bundled" "rusqlite/bundled"))))))

(define-public crate-datacake-sqlite-0.3.0 (c (n "datacake-sqlite") (v "0.3.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.59") (d #t) (k 0)) (d (n "datacake-crdt") (r "^0.4") (d #t) (k 0)) (d (n "datacake-eventual-consistency") (r "^0.2") (d #t) (k 0)) (d (n "datacake-eventual-consistency") (r "^0.2") (f (quote ("test-utils"))) (d #t) (k 2)) (d (n "datacake-node") (r "^0.1") (d #t) (k 2)) (d (n "flume") (r "^0.10.14") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt"))) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 2)))) (h "11hdv3c6fnhfw4ybpnfnzw8hpim5iaj0jd5b1apl5qin930h2sfd") (f (quote (("default" "bundled") ("bundled" "rusqlite/bundled"))))))

(define-public crate-datacake-sqlite-0.4.0 (c (n "datacake-sqlite") (v "0.4.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.59") (d #t) (k 0)) (d (n "datacake-crdt") (r "^0.4") (d #t) (k 0)) (d (n "datacake-eventual-consistency") (r "^0.4") (d #t) (k 0)) (d (n "datacake-eventual-consistency") (r "^0.4") (f (quote ("test-utils"))) (d #t) (k 2)) (d (n "datacake-node") (r "^0.3") (d #t) (k 2)) (d (n "flume") (r "^0.10.14") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt"))) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 2)))) (h "08vhappw4sp0qk7nqxc2z9rp2kx1f6m0mxfvx8dpx58zfiv0d5wi") (f (quote (("default" "bundled") ("bundled" "rusqlite/bundled"))))))

(define-public crate-datacake-sqlite-0.5.0 (c (n "datacake-sqlite") (v "0.5.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.59") (d #t) (k 0)) (d (n "datacake-crdt") (r "^0.4") (d #t) (k 0)) (d (n "datacake-eventual-consistency") (r "^0.5") (d #t) (k 0)) (d (n "datacake-eventual-consistency") (r "^0.5") (f (quote ("test-utils"))) (d #t) (k 2)) (d (n "datacake-node") (r "^0.4") (d #t) (k 2)) (d (n "flume") (r "^0.10.14") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt"))) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 2)))) (h "1ka7chasx5anzkn5c045fbq2frh37439qrxcpw1ga0d7qhgdn1g2") (f (quote (("default" "bundled") ("bundled" "rusqlite/bundled"))))))

