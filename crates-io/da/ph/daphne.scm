(define-module (crates-io da ph daphne) #:use-module (crates-io))

(define-public crate-daphne-0.0.1 (c (n "daphne") (v "0.0.1") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "clap") (r "^3.2.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hpke") (r "^0.8.0") (f (quote ("std" "serde_impls"))) (d #t) (k 0)) (d (n "matchit") (r "^0.6.0") (d #t) (k 0)) (d (n "prio") (r "=0.8.2") (f (quote ("prio2"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.11") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("macros" "rt"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "worker") (r "^0.0.10") (d #t) (k 0)))) (h "1ijwxwv5w6xrnj6y1svzdhgpw35sbil9a4nv90f7prnxn3v62436") (y #t)))

(define-public crate-daphne-0.1.0 (c (n "daphne") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "clap") (r "^3.2.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hpke") (r "^0.8.0") (f (quote ("std" "serde_impls"))) (d #t) (k 0)) (d (n "matchit") (r "^0.6.0") (d #t) (k 0)) (d (n "prio") (r "=0.8.2") (f (quote ("prio2"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.11") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("macros" "rt"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "worker") (r "^0.0.10") (d #t) (k 0)))) (h "07j4xkmr79n46ngmd32cld6a0ja917qymjcxwyh0r5w41vmbjjw8") (y #t)))

(define-public crate-daphne-0.1.1 (c (n "daphne") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "clap") (r "^3.2.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hpke") (r "^0.8.0") (f (quote ("std" "serde_impls"))) (d #t) (k 0)) (d (n "matchit") (r "^0.6.0") (d #t) (k 0)) (d (n "prio") (r "=0.8.2") (f (quote ("prio2"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.11") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("macros" "rt"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1l2cz3fjpp5h9kx70rkgih7a95a85pf171ln6qi0dvdz8miamhds") (y #t)))

(define-public crate-daphne-0.1.2 (c (n "daphne") (v "0.1.2") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hpke") (r "^0.8.0") (f (quote ("std" "serde_impls"))) (d #t) (k 0)) (d (n "matchit") (r "^0.6.0") (d #t) (k 0)) (d (n "prio") (r "=0.8.2") (f (quote ("prio2"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0zd1rfxqmj75kkc8dsc1b8ryclli0l4srhi1y6pwnzyzw6v4a2qm")))

(define-public crate-daphne-0.2.0 (c (n "daphne") (v "0.2.0") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.58") (d #t) (k 0)) (d (n "base64") (r "^0.13.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.8") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hpke") (r "^0.10.0") (f (quote ("std" "serde_impls"))) (d #t) (k 0)) (d (n "matchit") (r "^0.6.0") (d #t) (k 0)) (d (n "prio") (r "^0.10.0") (f (quote ("prio2"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tokio") (r "^1.21.2") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)))) (h "175yga03j96fq47rnkp7cjhawv1vg8f8radmy01j22jl9xsy2lq2")))

