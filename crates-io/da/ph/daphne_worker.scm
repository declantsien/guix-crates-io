(define-module (crates-io da ph daphne_worker) #:use-module (crates-io))

(define-public crate-daphne_worker-0.1.0 (c (n "daphne_worker") (v "0.1.0") (d (list (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "daphne") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hpke") (r "^0.8.0") (f (quote ("std" "serde_impls"))) (d #t) (k 0)) (d (n "matchit") (r "^0.6.0") (d #t) (k 0)) (d (n "prio") (r "=0.8.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest-wasm") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "worker") (r "^0.0.10") (d #t) (k 0)))) (h "1cplhw17l2h72x540filhhmk6h3a9r88mwaap958aqw6qx6jzcdk") (y #t)))

(define-public crate-daphne_worker-0.1.1 (c (n "daphne_worker") (v "0.1.1") (d (list (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "daphne") (r "^0.1.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hpke") (r "^0.8.0") (f (quote ("std" "serde_impls"))) (d #t) (k 0)) (d (n "matchit") (r "^0.6.0") (d #t) (k 0)) (d (n "prio") (r "=0.8.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest-wasm") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "worker") (r "^0.0.11") (d #t) (k 0)))) (h "0q7pibk0hi0773wrvmcwagyz8sp0dwgrvzjwn28x32sllsb00vy4") (y #t)))

(define-public crate-daphne_worker-0.1.2 (c (n "daphne_worker") (v "0.1.2") (d (list (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "daphne") (r "^0.1.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hpke") (r "^0.8.0") (f (quote ("std" "serde_impls"))) (d #t) (k 0)) (d (n "matchit") (r "^0.6.0") (d #t) (k 0)) (d (n "prio") (r "=0.8.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest-wasm") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "worker") (r "^0.0.11") (d #t) (k 0)))) (h "04cd9lx7gc0hkg5d4kihh6ih4h7dsc5jqwi801pbdwdxi52is3qy")))

(define-public crate-daphne_worker-0.2.0 (c (n "daphne_worker") (v "0.2.0") (d (list (d (n "async-trait") (r "^0.1.58") (d #t) (k 0)) (d (n "base64") (r "^0.13.1") (d #t) (k 0)) (d (n "daphne") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.8") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hpke") (r "^0.10.0") (f (quote ("std" "serde_impls"))) (d #t) (k 0)) (d (n "matchit") (r "^0.6.0") (d #t) (k 0)) (d (n "prio") (r "^0.10.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest-wasm") (r "^0.11.15") (f (quote ("json"))) (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "worker") (r "^0.0.11") (d #t) (k 0)))) (h "14jwr0c0j1b7y9xm7dwf6w4a8mv9mc0hx1dc0c746w2sj12rgjw9")))

