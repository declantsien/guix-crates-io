(define-module (crates-io da rk darklua) #:use-module (crates-io))

(define-public crate-darklua-0.1.0 (c (n "darklua") (v "0.1.0") (d (list (d (n "insta") (r "^0.12") (d #t) (k 2)) (d (n "luaparser") (r "^0.1.0") (k 0)) (d (n "structopt") (r "^0.3.9") (d #t) (k 0)))) (h "1cscayf20gp3vx6lyxxml9wxigglrmqb5jx4k9d1vhbqzwpdvpn5")))

(define-public crate-darklua-0.2.0 (c (n "darklua") (v "0.2.0") (d (list (d (n "insta") (r "^0.12") (d #t) (k 2)) (d (n "json5") (r "^0.2") (d #t) (k 0)) (d (n "luaparser") (r "^0.1.0") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.9") (d #t) (k 0)))) (h "01mlffsmrzf2xxas0bg0ir3r4f18an9xbp1flx05rv48g2rssri5")))

(define-public crate-darklua-0.2.1 (c (n "darklua") (v "0.2.1") (d (list (d (n "insta") (r "^0.12") (d #t) (k 2)) (d (n "json5") (r "^0.2") (d #t) (k 0)) (d (n "luaparser") (r "^0.1.1") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.9") (d #t) (k 0)))) (h "0my9s5hc0x2l3lxdbbpfsnxds7k34qw3bl8mn0d5my61mz4bx281")))

(define-public crate-darklua-0.2.2 (c (n "darklua") (v "0.2.2") (d (list (d (n "insta") (r "^0.12") (d #t) (k 2)) (d (n "json5") (r "^0.2") (d #t) (k 0)) (d (n "luaparser") (r "^0.1.1") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.9") (d #t) (k 0)))) (h "0zpgb5wmcgdr0k9vp4zsqhxk4y0bpazlhyky2idbd49c8hi6vhl3")))

(define-public crate-darklua-0.2.3 (c (n "darklua") (v "0.2.3") (d (list (d (n "insta") (r "^0.12") (d #t) (k 2)) (d (n "json5") (r "^0.2") (d #t) (k 0)) (d (n "luaparser") (r "^0.1.1") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.9") (d #t) (k 0)))) (h "1qh1qplj508bmi1khws8pvnlzchl74cvhpa75w7arfhbrs696wh0")))

(define-public crate-darklua-0.3.0 (c (n "darklua") (v "0.3.0") (d (list (d (n "insta") (r "^0.12") (d #t) (k 2)) (d (n "json5") (r "^0.2") (d #t) (k 0)) (d (n "luaparser") (r "^0.1.1") (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.9") (d #t) (k 0)))) (h "13ncf1f5gvdmd33zv34h4q5kja4vg2fvr1n172cd1alzvn6sysck")))

(define-public crate-darklua-0.3.1 (c (n "darklua") (v "0.3.1") (d (list (d (n "insta") (r "^0.12") (d #t) (k 2)) (d (n "json5") (r "^0.2") (d #t) (k 0)) (d (n "luaparser") (r "^0.1.1") (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.9") (d #t) (k 0)))) (h "07pdvrbicafiz9vazpspzgc9427w84mp4pfr8gasc3s7i70pra3r")))

(define-public crate-darklua-0.3.2 (c (n "darklua") (v "0.3.2") (d (list (d (n "insta") (r "^0.12") (d #t) (k 2)) (d (n "json5") (r "^0.2") (d #t) (k 0)) (d (n "luaparser") (r "^0.1.1") (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.9") (d #t) (k 0)))) (h "165h4kxaajwx841rbwq3qmn86fh4g6s1myvxm73v412a8z4amy6l")))

(define-public crate-darklua-0.3.3 (c (n "darklua") (v "0.3.3") (d (list (d (n "insta") (r "^0.12") (d #t) (k 2)) (d (n "json5") (r "^0.2") (d #t) (k 0)) (d (n "luaparser") (r "^0.1.1") (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.9") (d #t) (k 0)))) (h "1izv63ikpl4wyqi5k2yqjibsi51mjy1i2d3ix3zjfjszw42xa5w8")))

(define-public crate-darklua-0.3.4 (c (n "darklua") (v "0.3.4") (d (list (d (n "insta") (r "^0.12") (d #t) (k 2)) (d (n "json5") (r "^0.2") (d #t) (k 0)) (d (n "luaparser") (r "^0.1.1") (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.9") (d #t) (k 0)))) (h "17bnh8z296s3pzblhxgqqx2y5l8hkzghf10b9ykds3q8wgygappr")))

(define-public crate-darklua-0.3.5 (c (n "darklua") (v "0.3.5") (d (list (d (n "insta") (r "^0.12") (d #t) (k 2)) (d (n "json5") (r "^0.2") (d #t) (k 0)) (d (n "luaparser") (r "^0.1.1") (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.9") (d #t) (k 0)))) (h "0ry7shqm6zvlgmrm49fic9sfc5ji9vd69kf4jb2j7b2nv6plhsx6")))

(define-public crate-darklua-0.3.6 (c (n "darklua") (v "0.3.6") (d (list (d (n "insta") (r "^0.12") (d #t) (k 2)) (d (n "json5") (r "^0.2") (d #t) (k 0)) (d (n "luaparser") (r "^0.1.1") (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.9") (d #t) (k 0)))) (h "0miabx42y6ha0crp5axp65vg0ji3nqvhl8ncrsx3qd2b5slymgw0")))

(define-public crate-darklua-0.4.0 (c (n "darklua") (v "0.4.0") (d (list (d (n "insta") (r "^0.12") (d #t) (k 2)) (d (n "json5") (r "^0.2") (d #t) (k 0)) (d (n "luaparser") (r "^0.1.1") (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.9") (d #t) (k 0)))) (h "1rqqyw59k0g67g3f8qmfy6k35ghibka5dfrh2rlr9ykbqcpv72p0")))

(define-public crate-darklua-0.4.1 (c (n "darklua") (v "0.4.1") (d (list (d (n "insta") (r "^1.7.1") (d #t) (k 2)) (d (n "json5") (r "^0.2") (d #t) (k 0)) (d (n "luaparser") (r "^0.1.1") (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3.9") (d #t) (k 0)))) (h "16pl8889spbi80bk7rpn9h5qdynnpi7dxhrfrddnp4szvigfgbfg")))

(define-public crate-darklua-0.5.0 (c (n "darklua") (v "0.5.0") (d (list (d (n "full_moon") (r "^0.13.1") (f (quote ("roblox"))) (d #t) (k 0)) (d (n "insta") (r "^1.7.1") (d #t) (k 2)) (d (n "json5") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3.9") (d #t) (k 0)))) (h "0zn7ki108jaj4yiyzmyshbjpayf6ivc2p9vk9wpn6a9k308jarg3")))

(define-public crate-darklua-0.6.0 (c (n "darklua") (v "0.6.0") (d (list (d (n "full_moon") (r "^0.13.1") (f (quote ("roblox"))) (d #t) (k 0)) (d (n "insta") (r "^1.7.1") (d #t) (k 2)) (d (n "json5") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3.9") (d #t) (k 0)))) (h "18y379zvadiyf5fp73dgqii2x10gl2zqvs30p1drdqs5ddhqmfhh")))

(define-public crate-darklua-0.6.1 (c (n "darklua") (v "0.6.1") (d (list (d (n "full_moon") (r "^0.13.1") (f (quote ("roblox"))) (d #t) (k 0)) (d (n "insta") (r "^1.7.1") (d #t) (k 2)) (d (n "json5") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3.9") (d #t) (k 0)))) (h "0akk704lssmbvdvi84ww577an878smwn0d8vx3ij5a80jh3ck275")))

(define-public crate-darklua-0.7.0 (c (n "darklua") (v "0.7.0") (d (list (d (n "durationfmt") (r "^0.1.1") (d #t) (k 0)) (d (n "full_moon") (r "^0.13.1") (f (quote ("roblox"))) (d #t) (k 0)) (d (n "insta") (r "^1.7.1") (d #t) (k 2)) (d (n "json5") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3.25") (d #t) (k 0)))) (h "1gcgb1ascq5did2cibdv060idk4wgykplkfamgaypb178c6wvhd8")))

(define-public crate-darklua-0.8.0 (c (n "darklua") (v "0.8.0") (d (list (d (n "assert_cmd") (r "^2.0.4") (d #t) (k 2)) (d (n "durationfmt") (r "^0.1.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "full_moon") (r "^0.15.1") (f (quote ("roblox"))) (d #t) (k 0)) (d (n "insta") (r "^1.7.1") (d #t) (k 2)) (d (n "json5") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2.2") (d #t) (k 2)) (d (n "regex") (r "^1.5.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3.25") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)))) (h "08ym3c0dikx169bxlh22pq45nlmgn2i5mbnfnzqn92844br8axc4")))

(define-public crate-darklua-0.9.0 (c (n "darklua") (v "0.9.0") (d (list (d (n "assert_cmd") (r "^2.0.4") (d #t) (k 2)) (d (n "clap") (r "^4.1.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "durationfmt") (r "^0.1.1") (d #t) (k 0)) (d (n "elsa") (r "^1.7.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "full_moon") (r "^0.16.2") (f (quote ("roblox"))) (d #t) (k 0)) (d (n "include_dir") (r "^0.7.3") (d #t) (k 2)) (d (n "insta") (r "^1.29.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "json5") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "node-sys") (r "^0.4.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2.2") (d #t) (k 2)) (d (n "regex") (r "^1.5.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.5.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 2)) (d (n "tracing-tracy") (r "^0.10.1") (d #t) (k 2)) (d (n "web-sys") (r "^0.3.60") (f (quote ("Window" "Performance"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "081bvxw9jpigp3adcsjmkmysini0n1gxk9va7r57ifhc31mnxhy7") (s 2) (e (quote (("tracing" "dep:tracing"))))))

(define-public crate-darklua-0.10.0 (c (n "darklua") (v "0.10.0") (d (list (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "clap") (r "^4.3.11") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "durationfmt") (r "^0.1.1") (d #t) (k 0)) (d (n "elsa") (r "^1.8.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "full_moon") (r "^0.18.1") (f (quote ("roblox" "stacker"))) (d #t) (k 0)) (d (n "include_dir") (r "^0.7.3") (d #t) (k 2)) (d (n "insta") (r "^1.30.0") (f (quote ("json" "filters"))) (d #t) (k 2)) (d (n "json5") (r "^0.4.1") (d #t) (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "node-sys") (r "^0.4.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "paste") (r "^1.0.13") (d #t) (k 2)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.11") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.102") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.22") (d #t) (k 0)) (d (n "tempfile") (r "^3.6.0") (d #t) (k 2)) (d (n "toml") (r "^0.7.2") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 2)) (d (n "tracing-tracy") (r "^0.10.1") (d #t) (k 2)) (d (n "wax") (r "^0.5.0") (d #t) (k 0)) (d (n "web-sys") (r "^0.3.60") (f (quote ("Window" "Performance"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0am68rn9n90ngr7jjp91dm4b9a5aid730mdizklmmidjn6l9qrb6") (s 2) (e (quote (("tracing" "dep:tracing"))))))

(define-public crate-darklua-0.10.1 (c (n "darklua") (v "0.10.1") (d (list (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "clap") (r "^4.3.11") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "durationfmt") (r "^0.1.1") (d #t) (k 0)) (d (n "elsa") (r "^1.8.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "full_moon") (r "^0.18.1") (f (quote ("roblox" "stacker"))) (d #t) (k 0)) (d (n "include_dir") (r "^0.7.3") (d #t) (k 2)) (d (n "insta") (r "^1.30.0") (f (quote ("json" "filters"))) (d #t) (k 2)) (d (n "json5") (r "^0.4.1") (d #t) (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "node-sys") (r "^0.4.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "paste") (r "^1.0.13") (d #t) (k 2)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.11") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.102") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.22") (d #t) (k 0)) (d (n "tempfile") (r "^3.6.0") (d #t) (k 2)) (d (n "toml") (r "^0.7.2") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 2)) (d (n "tracing-tracy") (r "^0.10.1") (d #t) (k 2)) (d (n "wax") (r "^0.5.0") (d #t) (k 0)) (d (n "web-sys") (r "^0.3.60") (f (quote ("Window" "Performance"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "09pvbz90adl77pd2ly0qi2im7a7jxbbfa5fd4kyhj5bbl0sxn5n6") (s 2) (e (quote (("tracing" "dep:tracing"))))))

(define-public crate-darklua-0.10.2 (c (n "darklua") (v "0.10.2") (d (list (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "clap") (r "^4.3.11") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "durationfmt") (r "^0.1.1") (d #t) (k 0)) (d (n "elsa") (r "^1.8.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "full_moon") (r "^0.18.1") (f (quote ("roblox" "stacker"))) (d #t) (k 0)) (d (n "include_dir") (r "^0.7.3") (d #t) (k 2)) (d (n "insta") (r "^1.30.0") (f (quote ("json" "filters"))) (d #t) (k 2)) (d (n "json5") (r "^0.4.1") (d #t) (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "node-sys") (r "^0.4.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "paste") (r "^1.0.13") (d #t) (k 2)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.11") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.102") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.22") (d #t) (k 0)) (d (n "tempfile") (r "^3.6.0") (d #t) (k 2)) (d (n "toml") (r "^0.7.2") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 2)) (d (n "tracing-tracy") (r "^0.10.1") (d #t) (k 2)) (d (n "wax") (r "^0.5.0") (d #t) (k 0)) (d (n "web-sys") (r "^0.3.60") (f (quote ("Window" "Performance"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1yl054606q9s8sd89y49bvqb4n4l74hz3viqqpw01w8yhb55mzf0") (s 2) (e (quote (("tracing" "dep:tracing"))))))

(define-public crate-darklua-0.11.0 (c (n "darklua") (v "0.11.0") (d (list (d (n "assert_cmd") (r "^2.0.12") (d #t) (k 2)) (d (n "clap") (r "^4.4.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "ctrlc") (r "^3.4.1") (f (quote ("termination"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "durationfmt") (r "^0.1.1") (d #t) (k 0)) (d (n "elsa") (r "^1.9.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "full_moon") (r "^0.18.1") (f (quote ("roblox"))) (d #t) (k 0)) (d (n "include_dir") (r "^0.7.3") (d #t) (k 2)) (d (n "insta") (r "^1.34.0") (f (quote ("json" "filters"))) (d #t) (k 2)) (d (n "json5") (r "^0.4.1") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "node-sys") (r "^0.4.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "notify") (r "^6.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "notify-debouncer-mini") (r "^0.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 2)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.25") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 2)) (d (n "toml") (r "^0.8.2") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 2)) (d (n "tracing-tracy") (r "^0.10.1") (d #t) (k 2)) (d (n "wax") (r "^0.5.0") (d #t) (k 0)) (d (n "web-sys") (r "^0.3.64") (f (quote ("Window" "Performance"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1bzaggjlyf6wlrrqqwcgkg8rxb2zcfggvqxzyjn0fcgbh7c90y1p") (f (quote (("stacker" "full_moon/stacker") ("default" "stacker")))) (s 2) (e (quote (("tracing" "dep:tracing"))))))

(define-public crate-darklua-0.11.1 (c (n "darklua") (v "0.11.1") (d (list (d (n "assert_cmd") (r "^2.0.12") (d #t) (k 2)) (d (n "clap") (r "^4.4.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "ctrlc") (r "^3.4.1") (f (quote ("termination"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "durationfmt") (r "^0.1.1") (d #t) (k 0)) (d (n "elsa") (r "^1.9.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "full_moon") (r "^0.18.1") (f (quote ("roblox"))) (d #t) (k 0)) (d (n "include_dir") (r "^0.7.3") (d #t) (k 2)) (d (n "insta") (r "^1.34.0") (f (quote ("json" "filters"))) (d #t) (k 2)) (d (n "json5") (r "^0.4.1") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "node-sys") (r "^0.4.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "notify") (r "^6.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "notify-debouncer-mini") (r "^0.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 2)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.25") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 2)) (d (n "toml") (r "^0.8.2") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 2)) (d (n "tracing-tracy") (r "^0.10.1") (d #t) (k 2)) (d (n "wax") (r "^0.5.0") (d #t) (k 0)) (d (n "web-sys") (r "^0.3.64") (f (quote ("Window" "Performance"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "02r65b47sawksc0hxb6gp8k6m009k8y4pvyp7my5gcm30cj8qxyw") (f (quote (("stacker" "full_moon/stacker") ("default" "stacker")))) (s 2) (e (quote (("tracing" "dep:tracing"))))))

(define-public crate-darklua-0.11.2 (c (n "darklua") (v "0.11.2") (d (list (d (n "assert_cmd") (r "^2.0.12") (d #t) (k 2)) (d (n "clap") (r "^4.4.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "ctrlc") (r "^3.4.1") (f (quote ("termination"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "durationfmt") (r "^0.1.1") (d #t) (k 0)) (d (n "elsa") (r "^1.9.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "full_moon") (r "^0.18.1") (f (quote ("roblox"))) (d #t) (k 0)) (d (n "include_dir") (r "^0.7.3") (d #t) (k 2)) (d (n "insta") (r "^1.34.0") (f (quote ("json" "filters"))) (d #t) (k 2)) (d (n "json5") (r "^0.4.1") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "node-sys") (r "^0.4.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "notify") (r "^6.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "notify-debouncer-mini") (r "^0.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 2)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.25") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 2)) (d (n "toml") (r "^0.8.2") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 2)) (d (n "tracing-tracy") (r "^0.10.1") (d #t) (k 2)) (d (n "wax") (r "^0.5.0") (d #t) (k 0)) (d (n "web-sys") (r "^0.3.64") (f (quote ("Window" "Performance"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "13p3jg2362sxay9i1fm3i2hhlnsc3kyhjsxxblr5n2b7l4xvm3nv") (f (quote (("stacker" "full_moon/stacker") ("default" "stacker")))) (s 2) (e (quote (("tracing" "dep:tracing"))))))

(define-public crate-darklua-0.11.3 (c (n "darklua") (v "0.11.3") (d (list (d (n "assert_cmd") (r "^2.0.12") (d #t) (k 2)) (d (n "clap") (r "^4.4.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "ctrlc") (r "^3.4.1") (f (quote ("termination"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "durationfmt") (r "^0.1.1") (d #t) (k 0)) (d (n "elsa") (r "^1.9.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "full_moon") (r "^0.18.1") (f (quote ("roblox"))) (d #t) (k 0)) (d (n "include_dir") (r "^0.7.3") (d #t) (k 2)) (d (n "insta") (r "^1.34.0") (f (quote ("json" "filters"))) (d #t) (k 2)) (d (n "json5") (r "^0.4.1") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "node-sys") (r "^0.4.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "notify") (r "^6.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "notify-debouncer-mini") (r "^0.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 2)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.25") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 2)) (d (n "toml") (r "^0.8.2") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 2)) (d (n "tracing-tracy") (r "^0.10.1") (d #t) (k 2)) (d (n "wax") (r "^0.5.0") (d #t) (k 0)) (d (n "web-sys") (r "^0.3.64") (f (quote ("Window" "Performance"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0q9fkpmjhrwlv895y4iaffj32f576nkrjpfbynks2lnf386jfrm5") (f (quote (("stacker" "full_moon/stacker") ("default" "stacker")))) (s 2) (e (quote (("tracing" "dep:tracing"))))))

(define-public crate-darklua-0.12.0 (c (n "darklua") (v "0.12.0") (d (list (d (n "assert_cmd") (r "^2.0.12") (d #t) (k 2)) (d (n "clap") (r "^4.4.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "ctrlc") (r "^3.4.1") (f (quote ("termination"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "durationfmt") (r "^0.1.1") (d #t) (k 0)) (d (n "elsa") (r "^1.9.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "full_moon") (r "^0.19.0") (f (quote ("roblox"))) (d #t) (k 0)) (d (n "include_dir") (r "^0.7.3") (d #t) (k 2)) (d (n "insta") (r "^1.34.0") (f (quote ("json" "filters"))) (d #t) (k 2)) (d (n "json5") (r "^0.4.1") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "node-sys") (r "^0.4.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "notify") (r "^6.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "notify-debouncer-mini") (r "^0.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 2)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.25") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 2)) (d (n "toml") (r "^0.8.2") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 2)) (d (n "tracing-tracy") (r "^0.10.1") (d #t) (k 2)) (d (n "wax") (r "^0.5.0") (d #t) (k 0)) (d (n "web-sys") (r "^0.3.64") (f (quote ("Window" "Performance"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1cd8dr83ymv209wz5rgffiwsydm6ds5y5sg117gpr17ym54rkvbw") (f (quote (("stacker" "full_moon/stacker") ("default" "stacker")))) (s 2) (e (quote (("tracing" "dep:tracing"))))))

(define-public crate-darklua-0.12.1 (c (n "darklua") (v "0.12.1") (d (list (d (n "assert_cmd") (r "^2.0.12") (d #t) (k 2)) (d (n "clap") (r "^4.4.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "ctrlc") (r "^3.4.1") (f (quote ("termination"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "durationfmt") (r "^0.1.1") (d #t) (k 0)) (d (n "elsa") (r "^1.9.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "full_moon") (r "^0.19.0") (f (quote ("roblox"))) (d #t) (k 0)) (d (n "include_dir") (r "^0.7.3") (d #t) (k 2)) (d (n "insta") (r "^1.34.0") (f (quote ("json" "filters"))) (d #t) (k 2)) (d (n "json5") (r "^0.4.1") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "node-sys") (r "^0.4.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "notify") (r "^6.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "notify-debouncer-mini") (r "^0.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 2)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.25") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 2)) (d (n "toml") (r "^0.8.2") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 2)) (d (n "tracing-tracy") (r "^0.10.1") (d #t) (k 2)) (d (n "wax") (r "^0.5.0") (d #t) (k 0)) (d (n "web-sys") (r "^0.3.64") (f (quote ("Window" "Performance"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0a0chqx47g08nfvg1zh611l1bzqnnmnnr5bvp6z9n7nffjqjyd1k") (f (quote (("stacker" "full_moon/stacker") ("default" "stacker")))) (s 2) (e (quote (("tracing" "dep:tracing"))))))

(define-public crate-darklua-0.13.0 (c (n "darklua") (v "0.13.0") (d (list (d (n "anstyle") (r "^1.0.6") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.14") (d #t) (k 2)) (d (n "clap") (r "^4.5.3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "ctrlc") (r "^3.4.4") (f (quote ("termination"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "durationfmt") (r "^0.1.1") (d #t) (k 0)) (d (n "elsa") (r "^1.10.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.11.3") (d #t) (k 0)) (d (n "full_moon") (r "^0.19.0") (f (quote ("roblox"))) (d #t) (k 0)) (d (n "include_dir") (r "^0.7.3") (d #t) (k 2)) (d (n "insta") (r "^1.36.1") (f (quote ("json" "filters"))) (d #t) (k 2)) (d (n "json5") (r "^0.4.1") (d #t) (k 0)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "node-sys") (r "^0.4.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "notify") (r "^6.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "notify-debouncer-mini") (r "^0.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 2)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.14") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.32") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 2)) (d (n "toml") (r "^0.8.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (d #t) (k 2)) (d (n "tracing-tracy") (r "^0.11.0") (d #t) (k 2)) (d (n "wax") (r "^0.5.0") (d #t) (k 0)) (d (n "web-sys") (r "^0.3.69") (f (quote ("Window" "Performance"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "15h29ki1naq3z1cqsbjxc4xihhx5y0p313jc873kvr58v4gjp7d1") (f (quote (("stacker" "full_moon/stacker") ("default" "stacker")))) (s 2) (e (quote (("tracing" "dep:tracing"))))))

(define-public crate-darklua-0.13.1 (c (n "darklua") (v "0.13.1") (d (list (d (n "anstyle") (r "^1.0.6") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.14") (d #t) (k 2)) (d (n "clap") (r "^4.5.3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "ctrlc") (r "^3.4.4") (f (quote ("termination"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "durationfmt") (r "^0.1.1") (d #t) (k 0)) (d (n "elsa") (r "^1.10.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.11.3") (d #t) (k 0)) (d (n "full_moon") (r "^0.19.0") (f (quote ("roblox"))) (d #t) (k 0)) (d (n "include_dir") (r "^0.7.3") (d #t) (k 2)) (d (n "insta") (r "^1.36.1") (f (quote ("json" "filters"))) (d #t) (k 2)) (d (n "json5") (r "^0.4.1") (d #t) (k 0)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "node-sys") (r "^0.4.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "notify") (r "^6.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "notify-debouncer-mini") (r "^0.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 2)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 2)) (d (n "regex") (r "^1.10.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.14") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.32") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 2)) (d (n "toml") (r "^0.8.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (d #t) (k 2)) (d (n "tracing-tracy") (r "^0.11.0") (d #t) (k 2)) (d (n "wax") (r "^0.5.0") (d #t) (k 0)) (d (n "web-sys") (r "^0.3.69") (f (quote ("Window" "Performance"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0j14lfy19n5hjy0iyr3q7yfa1pbr887rlbvkf97bgqqqnjp1xway") (f (quote (("stacker" "full_moon/stacker") ("default" "stacker")))) (s 2) (e (quote (("tracing" "dep:tracing"))))))

