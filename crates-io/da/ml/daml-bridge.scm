(define-module (crates-io da ml daml-bridge) #:use-module (crates-io))

(define-public crate-daml-bridge-0.1.0 (c (n "daml-bridge") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.55") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.55") (d #t) (k 2)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.2") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "daml-grpc") (r "^0.1.0") (d #t) (k 0)) (d (n "daml-json") (r "^0.1.0") (d #t) (k 0)) (d (n "daml-lf") (r "^0.1.0") (d #t) (k 0)) (d (n "daml-util") (r "^0.1.0") (f (quote ("sandbox"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.9") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "warp") (r "^0.3.2") (k 0)))) (h "02iwisnnsbmqinn4d53gk88pkx48ycmbmisprfy9clv70zyz73q0") (r "1.59.0")))

(define-public crate-daml-bridge-0.1.1 (c (n "daml-bridge") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.55") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.55") (d #t) (k 2)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.2") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "daml-grpc") (r "^0.1.1") (d #t) (k 0)) (d (n "daml-json") (r "^0.1.1") (d #t) (k 0)) (d (n "daml-lf") (r "^0.1.1") (d #t) (k 0)) (d (n "daml-util") (r "^0.1.1") (f (quote ("sandbox"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.9") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "warp") (r "^0.3.2") (k 0)))) (h "148h9gj1fqkw5f3cj48f56fx7wyg4bqxmwkj4arrhy4mvzih5h63") (r "1.59.0")))

(define-public crate-daml-bridge-0.2.0 (c (n "daml-bridge") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.55") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.55") (d #t) (k 2)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.2") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "daml-grpc") (r "^0.2.0") (d #t) (k 0)) (d (n "daml-json") (r "^0.2.0") (d #t) (k 0)) (d (n "daml-lf") (r "^0.2.0") (d #t) (k 0)) (d (n "daml-util") (r "^0.2.0") (f (quote ("sandbox"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.9") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "warp") (r "^0.3.2") (k 0)))) (h "0wyg3s7vzrqrw7bw44nldxy09z6dxq20kyjv0h1ag1zk7l3hz7wx") (r "1.59.0")))

(define-public crate-daml-bridge-0.2.1 (c (n "daml-bridge") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0.55") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.55") (d #t) (k 2)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.2") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "daml-grpc") (r "^0.2.1") (d #t) (k 0)) (d (n "daml-json") (r "^0.2.1") (d #t) (k 0)) (d (n "daml-lf") (r "^0.2.1") (d #t) (k 0)) (d (n "daml-util") (r "^0.2.1") (f (quote ("sandbox"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.9") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "warp") (r "^0.3.2") (k 0)))) (h "05gv3bvy216j68awr6gpkrxc148xhy9sqnf9nyi8gbvi40f436z4") (r "1.59.0")))

(define-public crate-daml-bridge-0.2.2 (c (n "daml-bridge") (v "0.2.2") (d (list (d (n "anyhow") (r "^1.0.55") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.55") (d #t) (k 2)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.2") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "daml-grpc") (r "^0.2.2") (d #t) (k 0)) (d (n "daml-json") (r "^0.2.2") (d #t) (k 0)) (d (n "daml-lf") (r "^0.2.2") (d #t) (k 0)) (d (n "daml-util") (r "^0.2.2") (f (quote ("sandbox"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.31") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.9") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "warp") (r "^0.3.2") (k 0)))) (h "02sxpxnjnbkqv5cjzz8kk0is9s2jlrm831zl5qmk3hp7zyjhrb83") (r "1.59.0")))

