(define-module (crates-io i2 p_ i2p_snow) #:use-module (crates-io))

(define-public crate-i2p_snow-0.3.1 (c (n "i2p_snow") (v "0.3.1") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chacha20-poly1305-aead") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2.0") (d #t) (k 2)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1") (d #t) (k 0)) (d (n "hacl-star") (r "= 0.0.11") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^0.6.3") (d #t) (k 0)) (d (n "static_slice") (r "^0.0.3") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.2.1") (f (quote ("std" "u64_backend"))) (o #t) (k 0)))) (h "017hfrdrvkczb52197c57v8j4gwxgb5j7ykh0k2hfjjdbc95pcnx") (f (quote (("vector-tests") ("ring-resolver" "ring") ("ring-accelerated" "ring-resolver" "default-resolver") ("nightly" "blake2-rfc/simd_opt" "chacha20-poly1305-aead/simd_opt" "x25519-dalek/nightly") ("hacl-star-resolver" "hacl-star") ("hacl-star-accelerated" "hacl-star-resolver" "default-resolver") ("default-resolver" "chacha20-poly1305-aead" "blake2-rfc" "rust-crypto" "x25519-dalek" "rand") ("default" "default-resolver"))))))

(define-public crate-i2p_snow-0.4.0 (c (n "i2p_snow") (v "0.4.0") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chacha20-poly1305-aead") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2.0") (d #t) (k 2)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1") (d #t) (k 0)) (d (n "hacl-star") (r "= 0.0.11") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^0.6.3") (d #t) (k 0)) (d (n "static_slice") (r "^0.0.3") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.3") (f (quote ("std" "u64_backend"))) (o #t) (k 0)))) (h "0ggc6pb8yp03vzllvy1iyl9gz664lyphy8hnqlqgr3lrkb0jpxzq") (f (quote (("vector-tests") ("ring-resolver" "ring") ("ring-accelerated" "ring-resolver" "default-resolver") ("nightly" "blake2-rfc/simd_opt" "chacha20-poly1305-aead/simd_opt" "x25519-dalek/nightly") ("hacl-star-resolver" "hacl-star") ("hacl-star-accelerated" "hacl-star-resolver" "default-resolver") ("default-resolver" "chacha20-poly1305-aead" "blake2-rfc" "rust-crypto" "x25519-dalek" "rand") ("default" "default-resolver"))))))

(define-public crate-i2p_snow-0.5.1 (c (n "i2p_snow") (v "0.5.1") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chacha20-poly1305-aead") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1") (d #t) (k 0)) (d (n "hacl-star") (r "^0.0.13") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.2") (d #t) (k 2)) (d (n "rand") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.4") (d #t) (k 0)) (d (n "ring") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^0.6.3") (d #t) (k 0)) (d (n "static_slice") (r "^0.0.3") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.4") (f (quote ("std" "u64_backend"))) (o #t) (k 0)))) (h "15k0whgf9i3d4z8y09rgqjrkiriisyb9hj76vxvsyrf80w0pakkl") (f (quote (("vector-tests") ("ring-resolver" "ring") ("ring-accelerated" "ring-resolver" "default-resolver") ("nightly" "blake2-rfc/simd_opt" "chacha20-poly1305-aead/simd_opt" "x25519-dalek/nightly") ("hacl-star-resolver" "hacl-star") ("hacl-star-accelerated" "hacl-star-resolver" "default-resolver") ("default-resolver" "chacha20-poly1305-aead" "blake2-rfc" "rust-crypto" "x25519-dalek" "rand") ("default" "default-resolver"))))))

