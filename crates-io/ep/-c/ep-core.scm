(define-module (crates-io ep -c ep-core) #:use-module (crates-io))

(define-public crate-ep-core-1.2.0 (c (n "ep-core") (v "1.2.0") (d (list (d (n "array-bytes") (r "^6.1.0") (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "fixed") (r "^0.5.9") (k 0) (p "substrate-fixed")) (d (n "impl-serde") (r "^0.3.2") (o #t) (k 0)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 2)) (d (n "sp-arithmetic") (r "^18.0.0") (k 0)) (d (n "sp-core") (r "^23.0.0") (k 0)) (d (n "sp-runtime") (r "^26.0.0") (k 0)) (d (n "sp-std") (r "^10.0.0") (k 0)))) (h "0rwvka5kjnhw30gsj31nwwad9my1gk9f5s5r56dg1bbqfnnm8x0z") (f (quote (("std" "codec/std" "impl-serde/std" "fixed/std" "scale-info/std" "serde/std" "sp-arithmetic/std" "sp-std/std" "sp-core/std" "sp-runtime/std") ("serde_derive" "impl-serde" "fixed/serde" "serde") ("default" "std" "serde_derive"))))))

(define-public crate-ep-core-1.2.1 (c (n "ep-core") (v "1.2.1") (d (list (d (n "array-bytes") (r "^6.1.0") (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "fixed") (r "^0.5.9") (k 0) (p "substrate-fixed")) (d (n "impl-serde") (r "^0.4.0") (o #t) (k 0)) (d (n "scale-info") (r "^2.9.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 2)) (d (n "sp-arithmetic") (r "^18.0.0") (k 0)) (d (n "sp-core") (r "^23.0.0") (k 0)) (d (n "sp-runtime") (r "^26.0.0") (k 0)) (d (n "sp-std") (r "^10.0.0") (k 0)))) (h "0jrs1xlqcbgj4jhm6crx4hkb3fv9byrzq2l1v48c92zkfw8aby6l") (f (quote (("std" "codec/std" "impl-serde/std" "fixed/std" "scale-info/std" "serde/std" "sp-arithmetic/std" "sp-std/std" "sp-core/std" "sp-runtime/std") ("serde_derive" "impl-serde" "fixed/serde" "serde") ("default" "std" "serde_derive"))))))

(define-public crate-ep-core-2.0.0 (c (n "ep-core") (v "2.0.0") (d (list (d (n "array-bytes") (r "^6.1.0") (d #t) (k 0)) (d (n "codec") (r "^3.6.4") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "fixed") (r "^0.5.9") (k 0) (p "substrate-fixed")) (d (n "impl-serde") (r "^0.4.0") (o #t) (k 0)) (d (n "scale-info") (r "^2.9.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 2)) (d (n "sp-arithmetic") (r "^19.0.0") (k 0)) (d (n "sp-core") (r "^24.0.0") (k 0)) (d (n "sp-runtime") (r "^27.0.0") (k 0)) (d (n "sp-std") (r "^11.0.0") (k 0)))) (h "0difb9fmqq452f0mbmg222ychy4indmgfzwqqxzjqifmdmlfqfzv") (f (quote (("std" "codec/std" "impl-serde/std" "fixed/std" "scale-info/std" "serde/std" "sp-arithmetic/std" "sp-std/std" "sp-core/std" "sp-runtime/std") ("serde_derive" "impl-serde" "fixed/serde" "serde") ("default" "std" "serde_derive"))))))

(define-public crate-ep-core-3.0.0 (c (n "ep-core") (v "3.0.0") (d (list (d (n "array-bytes") (r "^6.1.0") (d #t) (k 0)) (d (n "codec") (r "^3.6.4") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "fixed") (r "^0.5.9") (k 0) (p "substrate-fixed")) (d (n "impl-serde") (r "^0.4.0") (o #t) (k 0)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 2)) (d (n "sp-arithmetic") (r "^19.0.0") (k 0)) (d (n "sp-core") (r "^25.0.0") (k 0)) (d (n "sp-runtime") (r "^28.0.0") (k 0)) (d (n "sp-std") (r "^12.0.0") (k 0)))) (h "06kcl4rm8ldlfxkbzpfljqb0ap1yzmcr12samm3vhn4sizl0c46c") (f (quote (("std" "codec/std" "impl-serde/std" "fixed/std" "scale-info/std" "serde/std" "sp-arithmetic/std" "sp-std/std" "sp-core/std" "sp-runtime/std") ("serde_derive" "impl-serde" "fixed/serde" "serde") ("default" "std" "serde_derive"))))))

(define-public crate-ep-core-3.0.1 (c (n "ep-core") (v "3.0.1") (d (list (d (n "array-bytes") (r "^6.1.0") (d #t) (k 0)) (d (n "codec") (r "^3.6.4") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "fixed") (r "^0.5.9") (k 0) (p "substrate-fixed")) (d (n "impl-serde") (r "^0.4.0") (o #t) (k 0)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 2)) (d (n "sp-arithmetic") (r "^20.0.0") (k 0)) (d (n "sp-core") (r "^25.0.0") (k 0)) (d (n "sp-runtime") (r "^28.0.0") (k 0)) (d (n "sp-std") (r "^12.0.0") (k 0)))) (h "0149ic6n3lbpjjlgqbry6lwgr3fc65dm9bq3nws6r0fsbdnbgj6b") (f (quote (("std" "codec/std" "fixed/std" "impl-serde/std" "scale-info/std" "serde/std" "sp-arithmetic/std" "sp-core/std" "sp-runtime/std" "sp-std/std") ("serde_derive" "fixed/serde" "impl-serde" "serde") ("default" "serde_derive" "std"))))))

(define-public crate-ep-core-3.0.2 (c (n "ep-core") (v "3.0.2") (d (list (d (n "array-bytes") (r "^6.1.0") (d #t) (k 0)) (d (n "codec") (r "^3.6.4") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "fixed") (r "^0.5.9") (k 0) (p "substrate-fixed")) (d (n "impl-serde") (r "^0.4.0") (o #t) (k 0)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 2)) (d (n "sp-arithmetic") (r "^20.0.0") (k 0)) (d (n "sp-core") (r "^25.0.0") (k 0)) (d (n "sp-runtime") (r "^28.0.0") (k 0)) (d (n "sp-std") (r "^12.0.0") (k 0)))) (h "1fn6dwl4bld7kr1qczq2f3p2r0ljz3x802yglr3rb9nbd4w4rypd") (f (quote (("std" "codec/std" "fixed/std" "impl-serde/std" "scale-info/std" "serde/std" "sp-arithmetic/std" "sp-core/std" "sp-runtime/std" "sp-std/std") ("serde_derive" "fixed/serde" "impl-serde" "serde") ("default" "serde_derive" "std"))))))

(define-public crate-ep-core-5.0.0 (c (n "ep-core") (v "5.0.0") (d (list (d (n "array-bytes") (r "^6.1.0") (d #t) (k 0)) (d (n "fixed") (r "^0.5.9") (k 0) (p "substrate-fixed")) (d (n "impl-serde") (r "^0.4.0") (o #t) (k 0)) (d (n "parity-scale-codec") (r "^3.6.5") (f (quote ("derive" "max-encoded-len"))) (k 0)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 2)) (d (n "sp-arithmetic") (r "^23.0.0") (k 0)) (d (n "sp-core") (r "^28.0.0") (k 0)) (d (n "sp-runtime") (r "^31.0.0") (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)))) (h "096iw0pblf657vj719wdq2xjcz8yxni78c2yisidbs915yawgsl4") (f (quote (("std" "fixed/std" "impl-serde/std" "parity-scale-codec/std" "scale-info/std" "serde/std" "sp-arithmetic/std" "sp-core/std" "sp-runtime/std" "sp-std/std") ("serde_derive" "fixed/serde" "impl-serde" "serde") ("default" "serde_derive" "std"))))))

(define-public crate-ep-core-6.0.0 (c (n "ep-core") (v "6.0.0") (d (list (d (n "array-bytes") (r "^6.1.0") (d #t) (k 0)) (d (n "fixed") (r "^0.5.9") (k 0) (p "substrate-fixed")) (d (n "impl-serde") (r "^0.4.0") (o #t) (k 0)) (d (n "parity-scale-codec") (r "^3.6.5") (f (quote ("derive" "max-encoded-len"))) (k 0)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 2)) (d (n "sp-arithmetic") (r "^24.0.0") (k 0)) (d (n "sp-core") (r "^29.0.0") (k 0)) (d (n "sp-runtime") (r "^32.0.0") (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)))) (h "0n8jk9rcmlb68g97w7i6affawr4xz5dhacq5rdmi0kn5k2vg680b") (f (quote (("std" "fixed/std" "impl-serde/std" "parity-scale-codec/std" "scale-info/std" "serde/std" "sp-arithmetic/std" "sp-core/std" "sp-runtime/std" "sp-std/std") ("serde_derive" "fixed/serde" "impl-serde" "serde") ("default" "serde_derive" "std"))))))

(define-public crate-ep-core-7.0.0 (c (n "ep-core") (v "7.0.0") (d (list (d (n "array-bytes") (r "^6.1.0") (d #t) (k 0)) (d (n "fixed") (r "^0.5.9") (k 0) (p "substrate-fixed")) (d (n "impl-serde") (r "^0.4.0") (o #t) (k 0)) (d (n "parity-scale-codec") (r "^3.6.5") (f (quote ("derive" "max-encoded-len"))) (k 0)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 2)) (d (n "sp-arithmetic") (r "^25.0.0") (k 0)) (d (n "sp-core") (r "^30.0.0") (k 0)) (d (n "sp-runtime") (r "^33.0.0") (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)))) (h "1npcx25z0ikl5kafb196mn1j9yacgdjlh4xscxrghf2gi0ay04bp") (f (quote (("std" "fixed/std" "impl-serde/std" "parity-scale-codec/std" "scale-info/std" "serde/std" "sp-arithmetic/std" "sp-core/std" "sp-runtime/std" "sp-std/std") ("serde_derive" "fixed/serde" "impl-serde" "serde") ("default" "serde_derive" "std"))))))

(define-public crate-ep-core-10.0.0 (c (n "ep-core") (v "10.0.0") (d (list (d (n "array-bytes") (r "^6.1.0") (d #t) (k 0)) (d (n "fixed") (r "^0.5.9") (k 0) (p "substrate-fixed")) (d (n "impl-serde") (r "^0.4.0") (o #t) (k 0)) (d (n "parity-scale-codec") (r "^3.6.5") (f (quote ("derive" "max-encoded-len"))) (k 0)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 2)) (d (n "sp-arithmetic") (r "^26.0.0") (k 0)) (d (n "sp-core") (r "^32.0.0") (k 0)) (d (n "sp-runtime") (r "^36.0.0") (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)))) (h "17k72jvamp49h6lj6yig7vb1gx2f3yw58jh563dlzdnwpsh42bww") (f (quote (("std" "fixed/std" "impl-serde/std" "parity-scale-codec/std" "scale-info/std" "serde/std" "sp-arithmetic/std" "sp-core/std" "sp-runtime/std" "sp-std/std") ("serde_derive" "fixed/serde" "impl-serde" "serde") ("default" "serde_derive" "std"))))))

