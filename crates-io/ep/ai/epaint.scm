(define-module (crates-io ep ai epaint) #:use-module (crates-io))

(define-public crate-epaint-0.8.0 (c (n "epaint") (v "0.8.0") (d (list (d (n "ahash") (r "^0.6") (f (quote ("std"))) (k 0)) (d (n "atomic_refcell") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "emath") (r "^0.8.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "rusttype") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "10rwnxq52mvqk4k51ai2dccbvks0h8cbaa0ajnnl6sl96pdpznwz") (f (quote (("single_threaded" "atomic_refcell") ("persistence" "serde" "emath/serde") ("multi_threaded" "parking_lot") ("default_fonts") ("default" "multi_threaded" "default_fonts"))))))

(define-public crate-epaint-0.9.0 (c (n "epaint") (v "0.9.0") (d (list (d (n "ahash") (r "^0.7") (f (quote ("std"))) (k 0)) (d (n "atomic_refcell") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "emath") (r "^0.9.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "rusttype") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "0kn1jfck1pfmbzh2njqni37q1z90gbaixgsq2dmzhzcqccrzzj62") (f (quote (("single_threaded" "atomic_refcell") ("persistence" "serde" "emath/serde") ("multi_threaded" "parking_lot") ("default_fonts") ("default" "multi_threaded" "default_fonts"))))))

(define-public crate-epaint-0.10.0 (c (n "epaint") (v "0.10.0") (d (list (d (n "ahash") (r "^0.7") (f (quote ("std"))) (k 0)) (d (n "atomic_refcell") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "emath") (r "^0.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "rusttype") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "1fkjl9c6cha9jr52myl1v4hz1pycwx7bnrlf6inhsgvdcxnxi76j") (f (quote (("single_threaded" "atomic_refcell") ("persistence" "serde" "emath/serde") ("multi_threaded" "parking_lot") ("default_fonts") ("default" "multi_threaded" "default_fonts"))))))

(define-public crate-epaint-0.11.0 (c (n "epaint") (v "0.11.0") (d (list (d (n "ahash") (r "^0.7") (f (quote ("std"))) (k 0)) (d (n "atomic_refcell") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "emath") (r "^0.11.0") (d #t) (k 0)) (d (n "ordered-float") (r "^2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "rusttype") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "0qh15nm1r10nbhwdq9yp6acfmhg01gh3nsg4mgjxnkj567vfy69a") (f (quote (("single_threaded" "atomic_refcell") ("persistence" "serde" "emath/serde") ("multi_threaded" "parking_lot") ("default_fonts") ("default" "multi_threaded" "default_fonts"))))))

(define-public crate-epaint-0.12.0 (c (n "epaint") (v "0.12.0") (d (list (d (n "ahash") (r "^0.7") (f (quote ("std"))) (k 0)) (d (n "atomic_refcell") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "emath") (r "^0.12.0") (d #t) (k 0)) (d (n "ordered-float") (r "^2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "rusttype") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "16fbikkm8sb7vac8mwzaymia89rr0qxbqa86m3fhn8q111jdpql0") (f (quote (("single_threaded" "atomic_refcell") ("persistence" "serde" "emath/serde") ("multi_threaded" "parking_lot") ("mint" "emath/mint") ("default_fonts") ("default" "multi_threaded" "default_fonts"))))))

(define-public crate-epaint-0.13.0 (c (n "epaint") (v "0.13.0") (d (list (d (n "ab_glyph") (r "^0.2.11") (d #t) (k 0)) (d (n "ahash") (r "^0.7") (f (quote ("std"))) (k 0)) (d (n "atomic_refcell") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "cint") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "emath") (r "^0.13.0") (d #t) (k 0)) (d (n "ordered-float") (r "^2") (k 0)) (d (n "parking_lot") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "1klg4pilw81lb2y53ykrqc1qa1kxfzg158baw0pjbynrhga30bhk") (f (quote (("single_threaded" "atomic_refcell") ("persistence" "serde" "emath/serde") ("multi_threaded" "parking_lot") ("mint" "emath/mint") ("extra_debug_asserts" "emath/extra_debug_asserts") ("extra_asserts" "emath/extra_asserts") ("default_fonts") ("default" "multi_threaded" "default_fonts"))))))

(define-public crate-epaint-0.14.0 (c (n "epaint") (v "0.14.0") (d (list (d (n "ab_glyph") (r "^0.2.11") (d #t) (k 0)) (d (n "ahash") (r "^0.7") (f (quote ("std"))) (k 0)) (d (n "atomic_refcell") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "cint") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "emath") (r "^0.14.0") (d #t) (k 0)) (d (n "ordered-float") (r "^2") (k 0)) (d (n "parking_lot") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "0jirhg7vxy1ypbm8i29vq1fzwz9lvlvp28dqzny84qcjva47svhk") (f (quote (("single_threaded" "atomic_refcell") ("persistence" "serde" "emath/serde") ("multi_threaded" "parking_lot") ("mint" "emath/mint") ("extra_debug_asserts" "emath/extra_debug_asserts") ("extra_asserts" "emath/extra_asserts") ("default_fonts") ("default" "multi_threaded" "default_fonts"))))))

(define-public crate-epaint-0.15.0 (c (n "epaint") (v "0.15.0") (d (list (d (n "ab_glyph") (r "^0.2.11") (d #t) (k 0)) (d (n "ahash") (r "^0.7") (f (quote ("std"))) (k 0)) (d (n "atomic_refcell") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "cint") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "emath") (r "^0.15.0") (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "0c82zq2b3r7idjp5ixs2nw4nv2vyav4gwpiakp4k5ldvicxlvfqn") (f (quote (("single_threaded" "atomic_refcell") ("serialize" "serde" "ahash/serde" "emath/serde") ("multi_threaded" "parking_lot") ("mint" "emath/mint") ("extra_debug_asserts" "emath/extra_debug_asserts") ("extra_asserts" "emath/extra_asserts") ("default_fonts") ("default" "default_fonts" "multi_threaded") ("convert_bytemuck" "bytemuck" "emath/bytemuck"))))))

(define-public crate-epaint-0.16.0 (c (n "epaint") (v "0.16.0") (d (list (d (n "ab_glyph") (r "^0.2.11") (d #t) (k 0)) (d (n "ahash") (r "^0.7") (f (quote ("std"))) (k 0)) (d (n "atomic_refcell") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "cint") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "emath") (r "^0.16.0") (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "1hhnhd4xf6x03sh06vf8i7r2kyyjlvn5v3hf3kj04agryyb95zdd") (f (quote (("single_threaded" "atomic_refcell") ("serialize" "serde" "ahash/serde" "emath/serde") ("multi_threaded" "parking_lot") ("mint" "emath/mint") ("extra_debug_asserts" "emath/extra_debug_asserts") ("extra_asserts" "emath/extra_asserts") ("default_fonts") ("default" "default_fonts" "multi_threaded") ("convert_bytemuck" "bytemuck" "emath/bytemuck")))) (r "1.56")))

(define-public crate-epaint-0.17.0 (c (n "epaint") (v "0.17.0") (d (list (d (n "ab_glyph") (r "^0.2.11") (d #t) (k 0)) (d (n "ahash") (r "^0.7") (f (quote ("std"))) (k 0)) (d (n "atomic_refcell") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "cint") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "emath") (r "^0.17.0") (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "1nz2ps72a4xxyhhxlj1v5iickdvaxsr5s6qylw1qxw2rc2294ch3") (f (quote (("single_threaded" "atomic_refcell") ("serialize" "serde" "ahash/serde" "emath/serde") ("multi_threaded" "parking_lot") ("mint" "emath/mint") ("extra_debug_asserts" "emath/extra_debug_asserts") ("extra_asserts" "emath/extra_asserts") ("default_fonts") ("default" "default_fonts" "multi_threaded") ("convert_bytemuck" "bytemuck" "emath/bytemuck")))) (r "1.56")))

(define-public crate-epaint-0.18.0 (c (n "epaint") (v "0.18.0") (d (list (d (n "ab_glyph") (r "^0.2.11") (d #t) (k 0)) (d (n "ahash") (r "^0.7") (f (quote ("std"))) (k 0)) (d (n "atomic_refcell") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "cint") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "emath") (r "^0.18.0") (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "1vhx82fzzmi7i0lplfr536cnys0f5zpsbizizii9fd5xjzq8xzad") (f (quote (("mint" "emath/mint") ("extra_debug_asserts" "emath/extra_debug_asserts") ("extra_asserts" "emath/extra_asserts") ("default_fonts") ("default" "default_fonts")))) (s 2) (e (quote (("serde" "dep:serde" "ahash/serde" "emath/serde") ("bytemuck" "dep:bytemuck" "emath/bytemuck")))) (r "1.60")))

(define-public crate-epaint-0.18.1 (c (n "epaint") (v "0.18.1") (d (list (d (n "ab_glyph") (r "^0.2.11") (d #t) (k 0)) (d (n "ahash") (r "^0.7") (f (quote ("std"))) (k 0)) (d (n "atomic_refcell") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "cint") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "emath") (r "^0.18.0") (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "12afbvb0dynfbggfz7nnp3mhf0l2vhnvn6znx31qm3l8i1q5ca8c") (f (quote (("mint" "emath/mint") ("extra_debug_asserts" "emath/extra_debug_asserts") ("extra_asserts" "emath/extra_asserts") ("default_fonts") ("default" "default_fonts")))) (s 2) (e (quote (("serde" "dep:serde" "ahash/serde" "emath/serde") ("bytemuck" "dep:bytemuck" "emath/bytemuck")))) (r "1.60")))

(define-public crate-epaint-0.19.0 (c (n "epaint") (v "0.19.0") (d (list (d (n "ab_glyph") (r "^0.2.11") (d #t) (k 0)) (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "atomic_refcell") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "cint") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "color-hex") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "document-features") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "emath") (r "^0.19.0") (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "001k94l6p57q2hlcaq990fklhng4rj1113xjl6qh4rkzpr0lg82v") (f (quote (("mint" "emath/mint") ("extra_debug_asserts" "emath/extra_debug_asserts") ("extra_asserts" "emath/extra_asserts") ("default_fonts") ("default" "default_fonts")))) (s 2) (e (quote (("serde" "dep:serde" "ahash/serde" "emath/serde") ("deadlock_detection" "dep:backtrace") ("bytemuck" "dep:bytemuck" "emath/bytemuck")))) (r "1.61")))

(define-public crate-epaint-0.20.0 (c (n "epaint") (v "0.20.0") (d (list (d (n "ab_glyph") (r "^0.2.11") (d #t) (k 0)) (d (n "ahash") (r "^0.8.1") (f (quote ("no-rng" "std"))) (k 0)) (d (n "atomic_refcell") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "document-features") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "ecolor") (r "^0.20.0") (d #t) (k 0)) (d (n "emath") (r "^0.20.0") (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "0nkhrca5ialps3h4qv3dav85dc33r2rbxa3piw2y08z4wmgvc56y") (f (quote (("mint" "emath/mint") ("extra_debug_asserts" "emath/extra_debug_asserts" "ecolor/extra_debug_asserts") ("extra_asserts" "emath/extra_asserts" "ecolor/extra_asserts") ("default_fonts") ("default" "default_fonts") ("color-hex" "ecolor/color-hex") ("cint" "ecolor/cint")))) (s 2) (e (quote (("serde" "dep:serde" "ahash/serde" "emath/serde" "ecolor/serde") ("deadlock_detection" "dep:backtrace") ("bytemuck" "dep:bytemuck" "emath/bytemuck" "ecolor/bytemuck")))) (r "1.65")))

(define-public crate-epaint-0.21.0 (c (n "epaint") (v "0.21.0") (d (list (d (n "ab_glyph") (r "^0.2.11") (d #t) (k 0)) (d (n "ahash") (r "^0.8.1") (f (quote ("no-rng" "std"))) (k 0)) (d (n "atomic_refcell") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "document-features") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "ecolor") (r "^0.21.0") (d #t) (k 0)) (d (n "emath") (r "^0.21.0") (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "159wf4pqm7klkzi53cn949j6686fmp9asinmz4hzdxx1b1f8prqj") (f (quote (("unity") ("mint" "emath/mint") ("extra_debug_asserts" "emath/extra_debug_asserts" "ecolor/extra_debug_asserts") ("extra_asserts" "emath/extra_asserts" "ecolor/extra_asserts") ("default_fonts") ("default" "default_fonts") ("color-hex" "ecolor/color-hex") ("cint" "ecolor/cint")))) (s 2) (e (quote (("serde" "dep:serde" "ahash/serde" "emath/serde" "ecolor/serde") ("deadlock_detection" "dep:backtrace") ("bytemuck" "dep:bytemuck" "emath/bytemuck" "ecolor/bytemuck")))) (r "1.65")))

(define-public crate-epaint-0.22.0 (c (n "epaint") (v "0.22.0") (d (list (d (n "ab_glyph") (r "^0.2.11") (d #t) (k 0)) (d (n "ahash") (r "^0.8.1") (f (quote ("no-rng" "std"))) (k 0)) (d (n "atomic_refcell") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "document-features") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "ecolor") (r "^0.22.0") (d #t) (k 0)) (d (n "emath") (r "^0.22.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "0fsgqv2r2m5kcvczxp44n450f5j7xnjkrfiqafl40zymsij3jcq9") (f (quote (("unity") ("mint" "emath/mint") ("extra_debug_asserts" "emath/extra_debug_asserts" "ecolor/extra_debug_asserts") ("extra_asserts" "emath/extra_asserts" "ecolor/extra_asserts") ("default_fonts") ("default" "default_fonts") ("color-hex" "ecolor/color-hex") ("cint" "ecolor/cint")))) (s 2) (e (quote (("serde" "dep:serde" "ahash/serde" "emath/serde" "ecolor/serde") ("log" "dep:log") ("deadlock_detection" "dep:backtrace") ("bytemuck" "dep:bytemuck" "emath/bytemuck" "ecolor/bytemuck")))) (r "1.65")))

(define-public crate-epaint-0.23.0 (c (n "epaint") (v "0.23.0") (d (list (d (n "ab_glyph") (r "^0.2.11") (d #t) (k 0)) (d (n "ahash") (r "^0.8.1") (f (quote ("no-rng" "std"))) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "document-features") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "ecolor") (r "^0.23.0") (d #t) (k 0)) (d (n "emath") (r "^0.23.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "0pjrw6qrpag0mhbsa4bw3lqdhm6hvswdrn4i9n9l74801n27n1jq") (f (quote (("unity") ("mint" "emath/mint") ("extra_debug_asserts" "emath/extra_debug_asserts" "ecolor/extra_debug_asserts") ("extra_asserts" "emath/extra_asserts" "ecolor/extra_asserts") ("default_fonts") ("default" "default_fonts") ("color-hex" "ecolor/color-hex") ("cint" "ecolor/cint")))) (s 2) (e (quote (("serde" "dep:serde" "ahash/serde" "emath/serde" "ecolor/serde") ("log" "dep:log") ("deadlock_detection" "dep:backtrace") ("bytemuck" "dep:bytemuck" "emath/bytemuck" "ecolor/bytemuck")))) (r "1.70")))

(define-public crate-epaint-0.24.0 (c (n "epaint") (v "0.24.0") (d (list (d (n "ab_glyph") (r "^0.2.11") (d #t) (k 0)) (d (n "ahash") (r "^0.8.1") (f (quote ("no-rng" "std"))) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "document-features") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "ecolor") (r "^0.24.0") (d #t) (k 0)) (d (n "emath") (r "^0.24.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "1i126b8fqjmd2v7cx19q5whb1938pyrg6x1i4hsw4ps37ssp1wqj") (f (quote (("unity") ("mint" "emath/mint") ("extra_debug_asserts" "emath/extra_debug_asserts" "ecolor/extra_debug_asserts") ("extra_asserts" "emath/extra_asserts" "ecolor/extra_asserts") ("default_fonts") ("default" "default_fonts") ("color-hex" "ecolor/color-hex") ("cint" "ecolor/cint")))) (s 2) (e (quote (("serde" "dep:serde" "ahash/serde" "emath/serde" "ecolor/serde") ("log" "dep:log") ("deadlock_detection" "dep:backtrace") ("bytemuck" "dep:bytemuck" "emath/bytemuck" "ecolor/bytemuck")))) (r "1.72")))

(define-public crate-epaint-0.24.1 (c (n "epaint") (v "0.24.1") (d (list (d (n "ab_glyph") (r "^0.2.11") (d #t) (k 0)) (d (n "ahash") (r "^0.8.1") (f (quote ("no-rng" "std"))) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "document-features") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "ecolor") (r "^0.24.1") (d #t) (k 0)) (d (n "emath") (r "^0.24.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "1f7szv3waqb5jcip4v3zfwzqpqjvfkvzjy6f6nsvkfi11l09w6vx") (f (quote (("unity") ("mint" "emath/mint") ("extra_debug_asserts" "emath/extra_debug_asserts" "ecolor/extra_debug_asserts") ("extra_asserts" "emath/extra_asserts" "ecolor/extra_asserts") ("default_fonts") ("default" "default_fonts") ("color-hex" "ecolor/color-hex") ("cint" "ecolor/cint")))) (s 2) (e (quote (("serde" "dep:serde" "ahash/serde" "emath/serde" "ecolor/serde") ("log" "dep:log") ("deadlock_detection" "dep:backtrace") ("bytemuck" "dep:bytemuck" "emath/bytemuck" "ecolor/bytemuck")))) (r "1.72")))

(define-public crate-epaint-0.25.0 (c (n "epaint") (v "0.25.0") (d (list (d (n "ab_glyph") (r "^0.2.11") (d #t) (k 0)) (d (n "ahash") (r "^0.8.1") (f (quote ("no-rng" "std"))) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (k 2)) (d (n "document-features") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "ecolor") (r "^0.25.0") (d #t) (k 0)) (d (n "emath") (r "^0.25.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "1rrd81dg351a6p01k3ynqxwj591ls77icc8lnsxh62gzdc3cnf76") (f (quote (("unity") ("mint" "emath/mint") ("extra_debug_asserts" "emath/extra_debug_asserts" "ecolor/extra_debug_asserts") ("extra_asserts" "emath/extra_asserts" "ecolor/extra_asserts") ("default_fonts") ("default" "default_fonts") ("color-hex" "ecolor/color-hex") ("cint" "ecolor/cint")))) (s 2) (e (quote (("serde" "dep:serde" "ahash/serde" "emath/serde" "ecolor/serde") ("log" "dep:log") ("deadlock_detection" "dep:backtrace") ("bytemuck" "dep:bytemuck" "emath/bytemuck" "ecolor/bytemuck")))) (r "1.72")))

(define-public crate-epaint-0.26.0-alpha.1 (c (n "epaint") (v "0.26.0-alpha.1") (d (list (d (n "ab_glyph") (r "^0.2.11") (d #t) (k 0)) (d (n "ahash") (r "^0.8.1") (f (quote ("no-rng" "std"))) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (k 2)) (d (n "document-features") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "ecolor") (r "^0.26.0-alpha.1") (k 0)) (d (n "emath") (r "^0.26.0-alpha.1") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "puffin") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "10xrch36r0f32xh1kh1013ki21dlgs3sj8dfa56yf5qdh1rif26x") (f (quote (("unity") ("mint" "emath/mint") ("extra_debug_asserts" "emath/extra_debug_asserts" "ecolor/extra_debug_asserts") ("extra_asserts" "emath/extra_asserts" "ecolor/extra_asserts") ("default_fonts") ("default" "default_fonts") ("color-hex" "ecolor/color-hex") ("cint" "ecolor/cint")))) (s 2) (e (quote (("serde" "dep:serde" "ahash/serde" "emath/serde" "ecolor/serde") ("rayon" "dep:rayon") ("puffin" "dep:puffin") ("log" "dep:log") ("deadlock_detection" "dep:backtrace") ("bytemuck" "dep:bytemuck" "emath/bytemuck" "ecolor/bytemuck")))) (r "1.72")))

(define-public crate-epaint-0.26.0-alpha.2 (c (n "epaint") (v "0.26.0-alpha.2") (d (list (d (n "ab_glyph") (r "^0.2.11") (d #t) (k 0)) (d (n "ahash") (r "^0.8.1") (f (quote ("no-rng" "std"))) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (k 2)) (d (n "document-features") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "ecolor") (r "^0.26.0-alpha.2") (d #t) (k 0)) (d (n "emath") (r "^0.26.0-alpha.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "puffin") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "0jqzv6p9n671c5xamlx06027ga89b95kbvdblyl07ilgcivz7jyf") (f (quote (("unity") ("mint" "emath/mint") ("extra_debug_asserts" "emath/extra_debug_asserts" "ecolor/extra_debug_asserts") ("extra_asserts" "emath/extra_asserts" "ecolor/extra_asserts") ("default_fonts") ("default" "default_fonts") ("color-hex" "ecolor/color-hex") ("cint" "ecolor/cint")))) (s 2) (e (quote (("serde" "dep:serde" "ahash/serde" "emath/serde" "ecolor/serde") ("rayon" "dep:rayon") ("puffin" "dep:puffin") ("log" "dep:log") ("deadlock_detection" "dep:backtrace") ("bytemuck" "dep:bytemuck" "emath/bytemuck" "ecolor/bytemuck")))) (r "1.72")))

(define-public crate-epaint-0.26.0 (c (n "epaint") (v "0.26.0") (d (list (d (n "ab_glyph") (r "^0.2.11") (d #t) (k 0)) (d (n "ahash") (r "^0.8.6") (f (quote ("no-rng" "std"))) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (k 2)) (d (n "document-features") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "ecolor") (r "^0.26.0") (k 0)) (d (n "emath") (r "^0.26.0") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "puffin") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "1g4vd4rvjwhcmi6yrpyq8dd81msfmd0s12qsbwm310byid5768xq") (f (quote (("unity") ("mint" "emath/mint") ("extra_debug_asserts" "emath/extra_debug_asserts" "ecolor/extra_debug_asserts") ("extra_asserts" "emath/extra_asserts" "ecolor/extra_asserts") ("default_fonts") ("default" "default_fonts") ("color-hex" "ecolor/color-hex") ("cint" "ecolor/cint")))) (s 2) (e (quote (("serde" "dep:serde" "ahash/serde" "emath/serde" "ecolor/serde") ("rayon" "dep:rayon") ("puffin" "dep:puffin") ("log" "dep:log") ("deadlock_detection" "dep:backtrace") ("bytemuck" "dep:bytemuck" "emath/bytemuck" "ecolor/bytemuck")))) (r "1.72")))

(define-public crate-epaint-0.26.1 (c (n "epaint") (v "0.26.1") (d (list (d (n "ab_glyph") (r "^0.2.11") (d #t) (k 0)) (d (n "ahash") (r "^0.8.6") (f (quote ("no-rng" "std"))) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (k 2)) (d (n "document-features") (r "^0.2.8") (o #t) (d #t) (k 0)) (d (n "ecolor") (r "^0.26.1") (k 0)) (d (n "emath") (r "^0.26.1") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "puffin") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "05biplbc1bix9p3d6z2shvl804nlg86wkyx7aqw2dw30m6f8rb1n") (f (quote (("unity") ("mint" "emath/mint") ("extra_debug_asserts" "emath/extra_debug_asserts" "ecolor/extra_debug_asserts") ("extra_asserts" "emath/extra_asserts" "ecolor/extra_asserts") ("default_fonts") ("default" "default_fonts") ("color-hex" "ecolor/color-hex") ("cint" "ecolor/cint")))) (s 2) (e (quote (("serde" "dep:serde" "ahash/serde" "emath/serde" "ecolor/serde") ("rayon" "dep:rayon") ("puffin" "dep:puffin") ("log" "dep:log") ("deadlock_detection" "dep:backtrace") ("bytemuck" "dep:bytemuck" "emath/bytemuck" "ecolor/bytemuck")))) (r "1.72")))

(define-public crate-epaint-0.26.2 (c (n "epaint") (v "0.26.2") (d (list (d (n "ab_glyph") (r "^0.2.11") (d #t) (k 0)) (d (n "ahash") (r "^0.8.6") (f (quote ("no-rng" "std"))) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (k 2)) (d (n "document-features") (r "^0.2.8") (o #t) (d #t) (k 0)) (d (n "ecolor") (r "^0.26.2") (k 0)) (d (n "emath") (r "^0.26.2") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "puffin") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "1bs7davjnss4v93hbm1i13g0qwqz52hy9sg6r2q5hzyx2zvgvfbp") (f (quote (("unity") ("mint" "emath/mint") ("extra_debug_asserts" "emath/extra_debug_asserts" "ecolor/extra_debug_asserts") ("extra_asserts" "emath/extra_asserts" "ecolor/extra_asserts") ("default_fonts") ("default" "default_fonts") ("color-hex" "ecolor/color-hex") ("cint" "ecolor/cint")))) (s 2) (e (quote (("serde" "dep:serde" "ahash/serde" "emath/serde" "ecolor/serde") ("rayon" "dep:rayon") ("puffin" "dep:puffin") ("log" "dep:log") ("deadlock_detection" "dep:backtrace") ("bytemuck" "dep:bytemuck" "emath/bytemuck" "ecolor/bytemuck")))) (r "1.72")))

(define-public crate-epaint-0.27.0 (c (n "epaint") (v "0.27.0") (d (list (d (n "ab_glyph") (r "^0.2.11") (d #t) (k 0)) (d (n "ahash") (r "^0.8.6") (f (quote ("no-rng" "std"))) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (k 2)) (d (n "document-features") (r "^0.2.8") (o #t) (d #t) (k 0)) (d (n "ecolor") (r "^0.27.0") (k 0)) (d (n "emath") (r "^0.27.0") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "puffin") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "1kqbj9vdc1lhlzifrz8zf72mwxv3jcfzdx38qb6asgxisvbcqbir") (f (quote (("unity") ("mint" "emath/mint") ("extra_debug_asserts" "emath/extra_debug_asserts" "ecolor/extra_debug_asserts") ("extra_asserts" "emath/extra_asserts" "ecolor/extra_asserts") ("default_fonts") ("default" "default_fonts") ("color-hex" "ecolor/color-hex") ("cint" "ecolor/cint")))) (s 2) (e (quote (("serde" "dep:serde" "ahash/serde" "emath/serde" "ecolor/serde") ("rayon" "dep:rayon") ("puffin" "dep:puffin") ("log" "dep:log") ("deadlock_detection" "dep:backtrace") ("bytemuck" "dep:bytemuck" "emath/bytemuck" "ecolor/bytemuck")))) (r "1.72")))

(define-public crate-epaint-0.27.1 (c (n "epaint") (v "0.27.1") (d (list (d (n "ab_glyph") (r "^0.2.11") (d #t) (k 0)) (d (n "ahash") (r "^0.8.6") (f (quote ("no-rng" "std"))) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (k 2)) (d (n "document-features") (r "^0.2.8") (o #t) (d #t) (k 0)) (d (n "ecolor") (r "^0.27.1") (k 0)) (d (n "emath") (r "^0.27.1") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "puffin") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "1zm5y4mxnz76cw2ihlngmr04ihwba08wqfby1ylbsjg9arqw6qxx") (f (quote (("unity") ("mint" "emath/mint") ("extra_debug_asserts" "emath/extra_debug_asserts" "ecolor/extra_debug_asserts") ("extra_asserts" "emath/extra_asserts" "ecolor/extra_asserts") ("default_fonts") ("default" "default_fonts") ("color-hex" "ecolor/color-hex") ("cint" "ecolor/cint")))) (s 2) (e (quote (("serde" "dep:serde" "ahash/serde" "emath/serde" "ecolor/serde") ("rayon" "dep:rayon") ("puffin" "dep:puffin") ("log" "dep:log") ("deadlock_detection" "dep:backtrace") ("bytemuck" "dep:bytemuck" "emath/bytemuck" "ecolor/bytemuck")))) (r "1.72")))

(define-public crate-epaint-0.27.2 (c (n "epaint") (v "0.27.2") (d (list (d (n "ab_glyph") (r "^0.2.11") (d #t) (k 0)) (d (n "ahash") (r "^0.8.6") (f (quote ("no-rng" "std"))) (k 0)) (d (n "backtrace") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bytemuck") (r "^1.7.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (k 2)) (d (n "document-features") (r "^0.2.8") (o #t) (d #t) (k 0)) (d (n "ecolor") (r "^0.27.2") (k 0)) (d (n "emath") (r "^0.27.2") (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "puffin") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "0xj16dv8vqc4vz27z0f1mv2dab7k74c3b5bhhg7llyk596qzi0dk") (f (quote (("unity") ("mint" "emath/mint") ("extra_debug_asserts" "emath/extra_debug_asserts" "ecolor/extra_debug_asserts") ("extra_asserts" "emath/extra_asserts" "ecolor/extra_asserts") ("default_fonts") ("default" "default_fonts") ("color-hex" "ecolor/color-hex") ("cint" "ecolor/cint")))) (s 2) (e (quote (("serde" "dep:serde" "ahash/serde" "emath/serde" "ecolor/serde") ("rayon" "dep:rayon") ("puffin" "dep:puffin") ("log" "dep:log") ("deadlock_detection" "dep:backtrace") ("bytemuck" "dep:bytemuck" "emath/bytemuck" "ecolor/bytemuck")))) (r "1.72")))

