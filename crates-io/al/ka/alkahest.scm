(define-module (crates-io al ka alkahest) #:use-module (crates-io))

(define-public crate-alkahest-0.0.0 (c (n "alkahest") (v "0.0.0") (h "0py1v0gvz0rds649i4z3qa7x396qg6ag9g4cmvab0pn971yhd8ff")))

(define-public crate-alkahest-0.1.0 (c (n "alkahest") (v "0.1.0") (d (list (d (n "alkahest-proc") (r "=0.1.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "bytemuck") (r "^1.0") (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "102d646jphqpi2qafljysiyqzkxq1x68vln0n90w25s77n5zfzxk") (f (quote (("derive" "alkahest-proc"))))))

(define-public crate-alkahest-0.1.1 (c (n "alkahest") (v "0.1.1") (d (list (d (n "alkahest-proc") (r "=0.1.1") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "bytemuck") (r "^1.0") (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1xavv7wsk9sclgkxm5rfb1zx3psm080w17682501hir2xznw7s5y") (f (quote (("derive" "alkahest-proc"))))))

(define-public crate-alkahest-0.1.2 (c (n "alkahest") (v "0.1.2") (d (list (d (n "alkahest-proc") (r "=0.1.2") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "bytemuck") (r "^1.0") (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "03a7ahxb29wi9lxbx18051i8w2m01p09lkfaxc5zwd95vw5a8k23") (f (quote (("derive" "alkahest-proc"))))))

(define-public crate-alkahest-0.1.3 (c (n "alkahest") (v "0.1.3") (d (list (d (n "alkahest-proc") (r "=0.1.3") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "bytemuck") (r "^1.0") (f (quote ("min_const_generics"))) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "05qgxbnbkqh1qyvwihby847kcjkl808hqcih4sr5yr17491k5ia1") (f (quote (("nightly") ("derive" "alkahest-proc"))))))

(define-public crate-alkahest-0.1.4 (c (n "alkahest") (v "0.1.4") (d (list (d (n "alkahest-proc") (r "=0.1.4") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "bytemuck") (r "^1.0") (f (quote ("min_const_generics"))) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "16bycsq2f476bp61m37kjh3a3rk55klbcs92dihxh0j9phv91jpd") (f (quote (("nightly") ("derive" "alkahest-proc"))))))

(define-public crate-alkahest-0.1.5 (c (n "alkahest") (v "0.1.5") (d (list (d (n "alkahest-proc") (r "=0.1.4") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "bytemuck") (r "^1.0") (f (quote ("min_const_generics"))) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "06qyihr6fylsjykg1qx0i1g8shic229khajmna5mar0s7q50q6k3") (f (quote (("nightly") ("derive" "alkahest-proc"))))))

(define-public crate-alkahest-0.2.0-rc.1 (c (n "alkahest") (v "0.2.0-rc.1") (d (list (d (n "alkahest-proc") (r "=0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)))) (h "1nbaad7152vapcw9gh9i1bb4b3lwkadaz5schkbh4jcywkdllwaz") (f (quote (("serde-bincode" "bincode" "serde" "alloc") ("fixed8") ("fixed64") ("fixed32") ("fixed16") ("derive" "alkahest-proc") ("default" "alloc" "fixed32") ("alloc"))))))

(define-public crate-alkahest-0.2.0-rc.2 (c (n "alkahest") (v "0.2.0-rc.2") (d (list (d (n "alkahest-proc") (r "=0.2.0-rc.2") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)))) (h "1vc28g817h3b2kdqq3kga97h0rvi7mlrfflwkipzhdc9gf7ijp30") (f (quote (("serde-bincode" "bincode" "serde" "alloc") ("fixed8") ("fixed64") ("fixed32") ("fixed16") ("derive" "alkahest-proc") ("default" "alloc" "fixed32") ("alloc"))))))

(define-public crate-alkahest-0.2.0-rc.4 (c (n "alkahest") (v "0.2.0-rc.4") (d (list (d (n "alkahest-proc") (r "=0.2.0-rc.2") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)))) (h "0v4mffrag432zmf37qs6crcvlprshvzlckhfck0j341a0x3966iy") (f (quote (("serde-bincode" "bincode" "serde" "alloc") ("fixed8") ("fixed64") ("fixed32") ("fixed16") ("derive" "alkahest-proc") ("default" "alloc" "fixed32") ("alloc"))))))

(define-public crate-alkahest-0.2.0-rc.5 (c (n "alkahest") (v "0.2.0-rc.5") (d (list (d (n "alkahest-proc") (r "=0.2.0-rc.2") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)))) (h "0zywmavw500lkcl16njldjfsqn6csx56w8c359abcpqkpg436a61") (f (quote (("serde-bincode" "bincode" "serde" "alloc") ("fixed8") ("fixed64") ("fixed32") ("fixed16") ("derive" "alkahest-proc") ("default" "alloc" "fixed32") ("alloc"))))))

(define-public crate-alkahest-0.2.0-rc.6 (c (n "alkahest") (v "0.2.0-rc.6") (d (list (d (n "alkahest-proc") (r "=0.2.0-rc.6") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)))) (h "16m6l0vk37qs4h257a8zjkyh276kpj7ycv0gl3qvnrgksw8bgly4") (f (quote (("serde-bincode" "bincode" "serde" "alloc") ("fixed8") ("fixed64") ("fixed32") ("fixed16") ("derive" "alkahest-proc") ("default" "alloc" "fixed32") ("alloc"))))))

(define-public crate-alkahest-0.2.0-rc.7 (c (n "alkahest") (v "0.2.0-rc.7") (d (list (d (n "alkahest-proc") (r "=0.2.0-rc.6") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)))) (h "0y9bw5f889y7ij8ana135fqx1axh8gdf5v911z193c4hb5c0xl7a") (f (quote (("serde-bincode" "bincode" "serde" "alloc") ("fixed8") ("fixed64") ("fixed32") ("fixed16") ("derive" "alkahest-proc") ("default" "alloc" "fixed32") ("alloc"))))))

(define-public crate-alkahest-0.2.0-rc.8 (c (n "alkahest") (v "0.2.0-rc.8") (d (list (d (n "alkahest-proc") (r "=0.2.0-rc.8") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)))) (h "1n31v3gc5qdfbbs60sx5hncp9w825c3spyp38slx4nvcls59ycc2") (f (quote (("std" "alloc") ("fixed8") ("fixed64") ("fixed32") ("fixed16") ("derive" "alkahest-proc") ("default" "alloc" "fixed32") ("bincoded" "bincode" "serde" "std") ("alloc"))))))

(define-public crate-alkahest-0.2.0 (c (n "alkahest") (v "0.2.0") (d (list (d (n "alkahest-proc") (r "=0.2.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)))) (h "1iczq22q3af4w4n71lvmlzyr63bgyn652wxjkrxbxqmnmwhraqn4") (f (quote (("std" "alloc") ("fixed8") ("fixed64") ("fixed32") ("fixed16") ("derive" "alkahest-proc") ("default" "std" "fixed32") ("bincoded" "bincode" "serde" "std") ("alloc"))))))

(define-public crate-alkahest-0.3.0 (c (n "alkahest") (v "0.3.0") (d (list (d (n "alkahest-proc") (r "=0.3.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)))) (h "05lnb9ysx856vgh8cjagdjbs9h78g03vi6q1jajjpr24sd9v9byk") (f (quote (("std" "alloc") ("inline-more") ("fixed8") ("fixed64") ("fixed32") ("fixed16") ("derive" "alkahest-proc") ("default" "alloc" "fixed32" "inline-more") ("bincoded" "bincode" "serde" "std") ("alloc"))))))

