(define-module (crates-io al ky alkyn) #:use-module (crates-io))

(define-public crate-alkyn-0.0.1 (c (n "alkyn") (v "0.0.1") (d (list (d (n "cortex-m") (r "^0.7.3") (f (quote ("inline-asm"))) (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.7.0") (d #t) (k 0)) (d (n "critical-section") (r "^0.2.4") (f (quote ("custom-impl"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (f (quote ("alloc"))) (k 0)) (d (n "defmt") (r "^0.3.0") (d #t) (k 0)) (d (n "defmt-rtt") (r "^0.3.0") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.5") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-time") (r "^0.12.0") (d #t) (k 0)) (d (n "linked_list_allocator") (r "^0.8.11") (f (quote ("const_mut_refs"))) (k 0)) (d (n "panic-probe") (r "^0.3.0") (f (quote ("print-defmt"))) (d #t) (k 0)) (d (n "rp2040-boot2") (r "^0.2") (d #t) (k 0)) (d (n "rp2040-hal") (r "^0.4") (f (quote ("rt"))) (d #t) (k 0)))) (h "1y8adfv6kzqscbks0x87h6wch16imv74csznrrhmvq74j8cbfc4q")))

(define-public crate-alkyn-0.0.2 (c (n "alkyn") (v "0.0.2") (d (list (d (n "cortex-m") (r "^0.7.3") (f (quote ("inline-asm"))) (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.7.0") (d #t) (k 0)) (d (n "critical-section") (r "^0.2.4") (f (quote ("custom-impl"))) (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (f (quote ("alloc"))) (k 0)) (d (n "defmt") (r "^0.3.0") (d #t) (k 0)) (d (n "defmt-rtt") (r "^0.3.0") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.5") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-time") (r "^0.12.0") (d #t) (k 0)) (d (n "linked_list_allocator") (r "^0.8.11") (f (quote ("const_mut_refs"))) (k 0)) (d (n "panic-probe") (r "^0.3.0") (f (quote ("print-defmt"))) (d #t) (k 0)) (d (n "rp2040-boot2") (r "^0.2") (d #t) (k 0)) (d (n "rp2040-hal") (r "^0.4") (f (quote ("rt"))) (d #t) (k 0)))) (h "02cx6zq0ij6fwm4abnsa10r8vxmwj1sij24gah0kkfr7y354h58d")))

(define-public crate-alkyn-0.0.3 (c (n "alkyn") (v "0.0.3") (d (list (d (n "cortex-m") (r "^0.7.3") (f (quote ("inline-asm"))) (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.7.0") (d #t) (k 0)) (d (n "critical-section") (r "^0.2.4") (f (quote ("custom-impl"))) (d #t) (k 0)) (d (n "defmt") (r "^0.3.0") (d #t) (k 0)) (d (n "defmt-rtt") (r "^0.3.0") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.5") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-time") (r "^0.12.0") (d #t) (k 0)) (d (n "linked_list_allocator") (r "^0.8.11") (f (quote ("const_mut_refs"))) (k 0)) (d (n "panic-probe") (r "^0.3.0") (f (quote ("print-defmt"))) (d #t) (k 0)) (d (n "rp2040-boot2") (r "^0.2") (d #t) (k 0)) (d (n "rp2040-hal") (r "^0.4") (f (quote ("rt"))) (d #t) (k 0)))) (h "1ppd5ybfdpwm16nksma2b1jan7kicszphcrvzrmfizgf41h84z4y")))

(define-public crate-alkyn-0.0.4 (c (n "alkyn") (v "0.0.4") (d (list (d (n "cortex-m") (r "^0.7.3") (f (quote ("inline-asm"))) (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.7.0") (d #t) (k 0)) (d (n "critical-section") (r "^0.2.4") (f (quote ("custom-impl"))) (d #t) (k 0)) (d (n "defmt") (r "^0.3.0") (d #t) (k 0)) (d (n "defmt-rtt") (r "^0.3.0") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.5") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-time") (r "^0.12.0") (d #t) (k 0)) (d (n "linked_list_allocator") (r "^0.8.11") (f (quote ("const_mut_refs"))) (k 0)) (d (n "panic-probe") (r "^0.3.0") (f (quote ("print-defmt"))) (d #t) (k 0)) (d (n "rp2040-boot2") (r "^0.2") (d #t) (k 0)) (d (n "rp2040-hal") (r "^0.4") (f (quote ("rt"))) (d #t) (k 0)))) (h "0lrk74n8pf58n8vfkpnrpgwfalh5spxc2z6ifabvrqlm4y2mgkm0")))

(define-public crate-alkyn-0.0.5 (c (n "alkyn") (v "0.0.5") (d (list (d (n "cortex-m") (r "^0.7.3") (f (quote ("inline-asm"))) (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.7.0") (d #t) (k 0)) (d (n "critical-section") (r "^0.2.4") (f (quote ("custom-impl"))) (d #t) (k 0)) (d (n "defmt") (r "^0.3.0") (d #t) (k 0)) (d (n "defmt-rtt") (r "^0.3.0") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.5") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-time") (r "^0.12.0") (d #t) (k 0)) (d (n "linked_list_allocator") (r "^0.8.11") (f (quote ("const_mut_refs"))) (k 0)) (d (n "panic-probe") (r "^0.3.0") (f (quote ("print-defmt"))) (d #t) (k 0)) (d (n "rp2040-boot2") (r "^0.2") (d #t) (k 0)) (d (n "rp2040-hal") (r "^0.4") (f (quote ("rt"))) (d #t) (k 0)))) (h "1vwkfwl872l8p0cwj85bynv1v96cavxgbzdmkncw23x6zh6j4ijp")))

