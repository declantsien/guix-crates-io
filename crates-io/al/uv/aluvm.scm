(define-module (crates-io al uv aluvm) #:use-module (crates-io))

(define-public crate-aluvm-0.1.0 (c (n "aluvm") (v "0.1.0") (d (list (d (n "amplify_derive") (r "^2.7.1") (d #t) (k 0)) (d (n "amplify_num") (r "^0.1") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.9.6") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.1") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "secp256k1") (r "^0.20.2") (o #t) (d #t) (k 0)))) (h "1ryx9gryvnnf8x6b508qiww2b13y1gi039br84kbr4sk700nc5a7") (f (quote (("std" "amplify_num/std" "amplify_num/hex") ("default") ("curve25519" "curve25519-dalek") ("all" "std" "secp256k1" "curve25519"))))))

(define-public crate-aluvm-0.2.0 (c (n "aluvm") (v "0.2.0") (d (list (d (n "amplify_derive") (r "^2.7.1") (d #t) (k 0)) (d (n "amplify_num") (r "^0.1") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.9.6") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^1.7.1") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "rustc_apfloat") (r "^0.1.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.20.2") (o #t) (d #t) (k 0)))) (h "0yp32wczpwwqchcs4jlb43s5296lz7k36i0chqrzkmprz4fyq1yv") (f (quote (("std" "amplify_num/std" "amplify_num/hex") ("default") ("curve25519" "curve25519-dalek") ("all" "std" "secp256k1" "curve25519"))))))

(define-public crate-aluvm-0.2.1 (c (n "aluvm") (v "0.2.1") (d (list (d (n "amplify_derive") (r "^2.7.1") (d #t) (k 0)) (d (n "amplify_num") (r "^0.1") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.9.6") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^1.7.1") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "rustc_apfloat") (r "^0.1.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.20.2") (o #t) (d #t) (k 0)))) (h "17d92f2yvvkrca90xs4c4bkz8acd5vipzj71mjy0ifp45xcd18b1") (f (quote (("std" "amplify_num/std" "amplify_num/hex") ("default" "std" "secp256k1" "curve25519") ("curve25519" "curve25519-dalek") ("all" "std" "secp256k1" "curve25519"))))))

(define-public crate-aluvm-0.3.0 (c (n "aluvm") (v "0.3.0") (d (list (d (n "amplify") (r "^3.7.1") (f (quote ("derive"))) (k 0)) (d (n "bech32") (r "^0.8.1") (k 0)) (d (n "bitcoin_hashes") (r "^0.9.6") (k 0)) (d (n "curve25519-dalek") (r "^3.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^1.7.1") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "rustc_apfloat") (r "^0.1.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.20.2") (f (quote ("global-context"))) (o #t) (d #t) (k 0)))) (h "0mjir7khzawpb76nrg221yfi6ngbf47gsp04f7qxhqmg22jdcr0x") (f (quote (("std" "amplify/std" "bitcoin_hashes/std" "secp256k1/std" "curve25519-dalek/std" "curve25519-dalek/alloc" "bech32/std") ("default") ("curve25519" "curve25519-dalek") ("all" "std" "secp256k1" "curve25519"))))))

(define-public crate-aluvm-0.4.0 (c (n "aluvm") (v "0.4.0") (d (list (d (n "amplify") (r "^3.7.1") (f (quote ("derive"))) (k 0)) (d (n "bech32") (r "^0.8.1") (k 0)) (d (n "bitcoin_hashes") (r "^0.9.6") (k 0)) (d (n "curve25519-dalek") (r "^3.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^1.7.1") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "rustc_apfloat") (r "^0.1.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.20.2") (f (quote ("global-context"))) (o #t) (d #t) (k 0)))) (h "023j5927xh07jx087299xmc33d9dmzjk29a3wgbhi680by4lhwa4") (f (quote (("std" "amplify/std" "bitcoin_hashes/std" "secp256k1/std" "curve25519-dalek/std" "curve25519-dalek/alloc" "bech32/std") ("default") ("curve25519" "curve25519-dalek") ("all" "std" "secp256k1" "curve25519"))))))

(define-public crate-aluvm-0.5.0 (c (n "aluvm") (v "0.5.0") (d (list (d (n "amplify") (r "^3.12.0") (f (quote ("apfloat" "derive" "hex"))) (k 0)) (d (n "bech32") (r "^0.9.0") (k 0)) (d (n "bitcoin_hashes") (r "^0.10.0") (k 0)) (d (n "curve25519-dalek") (r "^3.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^1.7.1") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "secp256k1") (r "^0.22.1") (f (quote ("global-context"))) (o #t) (d #t) (k 0)))) (h "0789r4ja15lpnlwhkzhfwdrl9mm1z4yhr402941pxcl0d0cv1676") (f (quote (("std" "amplify/std" "bitcoin_hashes/std" "secp256k1/std" "curve25519-dalek/std" "curve25519-dalek/alloc" "bech32/std") ("default") ("curve25519" "curve25519-dalek") ("all" "std" "secp256k1" "curve25519"))))))

(define-public crate-aluvm-0.6.0 (c (n "aluvm") (v "0.6.0") (d (list (d (n "amplify") (r "^3.12.0") (f (quote ("apfloat" "derive" "hex"))) (k 0)) (d (n "bech32") (r "^0.9.0") (k 0)) (d (n "bitcoin_hashes") (r "^0.10.0") (k 0)) (d (n "curve25519-dalek") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "half") (r "^1.8.2") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "secp256k1") (r "^0.22.1") (f (quote ("global-context"))) (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_with") (r "^1.14") (o #t) (d #t) (k 0)) (d (n "strict_encoding") (r "^1.8.7") (f (quote ("float" "derive"))) (o #t) (k 0)))) (h "0kh192y2pwy8mqvxpyxxdnbihfa8g5239mz74mghfa6j0gm4m4km") (f (quote (("std" "amplify/std" "bitcoin_hashes/std" "secp256k1/std" "curve25519-dalek/std" "curve25519-dalek/alloc" "bech32/std") ("serde" "serde_crate" "serde_with" "amplify/serde" "bitcoin_hashes/serde" "std" "secp256k1/std" "curve25519-dalek/serde") ("default") ("curve25519" "curve25519-dalek") ("all" "std" "secp256k1" "curve25519" "strict_encoding" "serde"))))))

(define-public crate-aluvm-0.7.0 (c (n "aluvm") (v "0.7.0") (d (list (d (n "amplify") (r "^3.12.1") (f (quote ("apfloat" "derive" "hex"))) (k 0)) (d (n "bech32") (r "^0.9.0") (k 0)) (d (n "bitcoin_hashes") (r "^0.10.0") (k 0)) (d (n "curve25519-dalek") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "half") (r "^1.8.2") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "secp256k1") (r "^0.22.1") (f (quote ("global-context"))) (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_with") (r "^1.14") (o #t) (d #t) (k 0)) (d (n "strict_encoding") (r "^0.8.0") (f (quote ("float" "derive"))) (o #t) (k 0)))) (h "1m72cw6h8yk4c10p1hk79b4v0n6fwzq974c7wl4jb2ap9a5pfljd") (f (quote (("std" "amplify/std" "bitcoin_hashes/std" "secp256k1/std" "curve25519-dalek/std" "curve25519-dalek/alloc" "bech32/std") ("serde" "serde_crate" "serde_with" "amplify/serde" "bitcoin_hashes/serde" "std" "secp256k1/std" "curve25519-dalek/serde") ("default") ("curve25519" "curve25519-dalek") ("all" "std" "secp256k1" "curve25519" "strict_encoding" "serde"))))))

(define-public crate-aluvm-0.9.0-rc.1 (c (n "aluvm") (v "0.9.0-rc.1") (d (list (d (n "amplify") (r "^3.13.0") (f (quote ("apfloat" "derive" "hex"))) (k 0)) (d (n "bech32") (r "^0.9.1") (k 0)) (d (n "bitcoin_hashes") (r "^0.11.0") (k 0)) (d (n "curve25519-dalek") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.1.0") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "secp256k1") (r "^0.24.2") (f (quote ("global-context"))) (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_with") (r "^1.14") (o #t) (d #t) (k 0)) (d (n "strict_encoding") (r "^0.9.0-rc.1") (f (quote ("float" "derive"))) (o #t) (k 0)))) (h "15id0j496jf0p2n0kq0ja7l4qjwlmm90qv4p2pvwwg8xj7dnn8vd") (f (quote (("std" "amplify/std" "bitcoin_hashes/std" "secp256k1/std" "curve25519-dalek/std" "curve25519-dalek/alloc" "bech32/std") ("serde" "serde_crate" "serde_with" "amplify/serde" "bitcoin_hashes/serde" "std" "secp256k1/std" "curve25519-dalek/serde") ("default") ("curve25519" "curve25519-dalek") ("all" "std" "secp256k1" "curve25519" "strict_encoding" "serde"))))))

(define-public crate-aluvm-0.9.0-rc.2 (c (n "aluvm") (v "0.9.0-rc.2") (d (list (d (n "amplify") (r "^3.13.0") (f (quote ("apfloat" "derive" "hex"))) (k 0)) (d (n "bech32") (r "^0.9.1") (k 0)) (d (n "bitcoin_hashes") (r "^0.11.0") (k 0)) (d (n "curve25519-dalek") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.1.0") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "secp256k1") (r "^0.24.2") (f (quote ("global-context"))) (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_with") (r "^1.14") (o #t) (d #t) (k 0)) (d (n "strict_encoding") (r "^0.9.0-rc.2") (f (quote ("float" "derive"))) (o #t) (k 0)))) (h "09pkjv2p4kvrdrqwm5wg6r602vzbpbmq6y62wfbl70p985p2rv0r") (f (quote (("std" "amplify/std" "bitcoin_hashes/std" "secp256k1/std" "curve25519-dalek/std" "curve25519-dalek/alloc" "bech32/std") ("serde" "serde_crate" "serde_with" "amplify/serde" "bitcoin_hashes/serde" "std" "secp256k1/std" "curve25519-dalek/serde") ("default") ("curve25519" "curve25519-dalek") ("all" "std" "secp256k1" "curve25519" "strict_encoding" "serde"))))))

(define-public crate-aluvm-0.9.0 (c (n "aluvm") (v "0.9.0") (d (list (d (n "amplify") (r "^3.13.0") (f (quote ("apfloat" "derive" "hex"))) (k 0)) (d (n "bech32") (r "^0.9.1") (k 0)) (d (n "bitcoin_hashes") (r "^0.11.0") (k 0)) (d (n "curve25519-dalek") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.1.0") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "secp256k1") (r "^0.24.2") (f (quote ("global-context"))) (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_with") (r "^1.14") (o #t) (d #t) (k 0)) (d (n "strict_encoding") (r "^0.9.0") (f (quote ("float" "derive"))) (o #t) (k 0)))) (h "18869yaqq8gkbq7kpiz22nahv49bj7ksvq0pl1vrs93x99g0ycp6") (f (quote (("std" "amplify/std" "bitcoin_hashes/std" "secp256k1/std" "curve25519-dalek/std" "curve25519-dalek/alloc" "bech32/std") ("serde" "serde_crate" "serde_with" "amplify/serde" "bitcoin_hashes/serde" "std" "secp256k1/std" "curve25519-dalek/serde") ("default") ("curve25519" "curve25519-dalek") ("all" "std" "secp256k1" "curve25519" "strict_encoding" "serde"))))))

(define-public crate-aluvm-0.10.0-alpha.1 (c (n "aluvm") (v "0.10.0-alpha.1") (d (list (d (n "amplify") (r "^4.0.0-beta.11") (f (quote ("apfloat" "derive" "hex"))) (k 0)) (d (n "bech32") (r "^0.9.1") (k 0)) (d (n "bitcoin_hashes") (r "^0.11.0") (k 0)) (d (n "curve25519-dalek") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.1.0") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "secp256k1") (r "^0.26.0") (f (quote ("global-context"))) (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (o #t) (d #t) (k 0) (p "serde")) (d (n "strict_encoding") (r "^2.0.0-beta.5") (f (quote ("float" "derive"))) (o #t) (k 0)))) (h "0ryh3cqwsnc4mf44vhm8bm0czfgvc6sh4dxd1xyfc1gjk1x72vfx") (f (quote (("std" "amplify/std" "bitcoin_hashes/std" "secp256k1/std" "curve25519-dalek/std" "curve25519-dalek/alloc" "bech32/std") ("serde" "serde_crate" "amplify/serde" "bitcoin_hashes/serde" "std" "secp256k1/std" "curve25519-dalek/serde") ("default") ("curve25519" "curve25519-dalek") ("all" "std" "secp256k1" "curve25519" "strict_encoding" "serde")))) (r "1.66")))

(define-public crate-aluvm-0.10.0-beta.1 (c (n "aluvm") (v "0.10.0-beta.1") (d (list (d (n "amplify") (r "^4.0.0-beta.19") (f (quote ("apfloat" "derive" "hex"))) (k 0)) (d (n "baid58") (r "^0.2.0") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.11.0") (k 0)) (d (n "blake3") (r "^1.3.3") (k 0)) (d (n "curve25519-dalek") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.1.0") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "secp256k1") (r "^0.26.0") (f (quote ("global-context"))) (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (o #t) (d #t) (k 0) (p "serde")) (d (n "strict_encoding") (r "^2.0.0-rc.2") (f (quote ("float" "derive"))) (k 0)) (d (n "strict_types") (r "^1.0.0-beta.4") (o #t) (d #t) (k 0)))) (h "0hjscpm15296vn5qz0vjdg8m42agyysr5k4dbffhc668l86s2d9d") (f (quote (("stl" "strict_types/base64" "std") ("std" "amplify/std" "bitcoin_hashes/std" "blake3/std") ("serde" "serde_crate" "amplify/serde" "std") ("default") ("curve25519" "curve25519-dalek") ("all" "stl" "std" "secp256k1" "curve25519" "serde")))) (r "1.66")))

(define-public crate-aluvm-0.10.0-beta.2 (c (n "aluvm") (v "0.10.0-beta.2") (d (list (d (n "amplify") (r "^4.0.0-beta.19") (f (quote ("apfloat" "derive" "hex"))) (k 0)) (d (n "baid58") (r "^0.2.0") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.12.0") (k 0)) (d (n "blake3") (r "^1.3.3") (k 0)) (d (n "curve25519-dalek") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.1.0") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("global-context"))) (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (o #t) (d #t) (k 0) (p "serde")) (d (n "strict_encoding") (r "^2.0.0-rc.2") (f (quote ("float" "derive"))) (k 0)) (d (n "strict_types") (r "^1.0.0-beta.4") (o #t) (d #t) (k 0)))) (h "0ald7zim7w0h3x42fhlyirf5hdasycjjb0q2naq0m2a6kfbhdlxw") (f (quote (("stl" "strict_types/base64" "std") ("std" "amplify/std" "bitcoin_hashes/std" "blake3/std") ("serde" "serde_crate" "amplify/serde" "std") ("default") ("curve25519" "curve25519-dalek") ("all" "stl" "std" "secp256k1" "curve25519" "serde")))) (r "1.66")))

(define-public crate-aluvm-0.10.0-rc.1 (c (n "aluvm") (v "0.10.0-rc.1") (d (list (d (n "amplify") (r "^4.0.0-beta.20") (f (quote ("apfloat" "derive" "hex"))) (k 0)) (d (n "baid58") (r "^0.2.0") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.12.0") (k 0)) (d (n "blake3") (r "^1.3.3") (k 0)) (d (n "curve25519-dalek") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.1.0") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("global-context"))) (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (o #t) (d #t) (k 0) (p "serde")) (d (n "strict_encoding") (r "^2.0.0") (f (quote ("float" "derive"))) (k 0)) (d (n "strict_types") (r "^1.0.0-rc.1") (o #t) (d #t) (k 0)))) (h "0imvjzb95m62j98mi6d9ww8qsn23qv9i54f44ahpnrpjy7x332wc") (f (quote (("stl" "strict_types/base64" "std") ("std" "amplify/std" "bitcoin_hashes/std" "blake3/std") ("serde" "serde_crate" "amplify/serde" "std") ("default") ("curve25519" "curve25519-dalek") ("all" "stl" "std" "secp256k1" "curve25519" "serde")))) (r "1.66")))

(define-public crate-aluvm-0.10.0 (c (n "aluvm") (v "0.10.0") (d (list (d (n "amplify") (r "^4.0.0-beta.22") (f (quote ("apfloat" "derive" "hex"))) (k 0)) (d (n "baid58") (r "^0.3.0") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.12.0") (k 0)) (d (n "blake3") (r "^1.3.3") (k 0)) (d (n "curve25519-dalek") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.1.0") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("global-context"))) (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (o #t) (d #t) (k 0) (p "serde")) (d (n "strict_encoding") (r "^2.0.0") (f (quote ("float" "derive"))) (k 0)) (d (n "strict_types") (r "^1.0.0") (o #t) (d #t) (k 0)))) (h "1fc6bws076v21spvcd7hambxpgfqh27qda743nmklbbzr92zwk5x") (f (quote (("stl" "strict_types/base64" "std") ("std" "amplify/std" "bitcoin_hashes/std" "blake3/std") ("serde" "serde_crate" "amplify/serde" "std") ("default" "std") ("curve25519" "curve25519-dalek") ("all" "stl" "std" "secp256k1" "curve25519" "serde")))) (r "1.66")))

(define-public crate-aluvm-0.9.1 (c (n "aluvm") (v "0.9.1") (d (list (d (n "amplify") (r "^3.13.0") (f (quote ("apfloat" "derive" "hex"))) (k 0)) (d (n "bech32") (r "^0.9.1") (k 0)) (d (n "bitcoin_hashes") (r "^0.11.0") (k 0)) (d (n "curve25519-dalek") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.1.0") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "secp256k1") (r "^0.24.2") (f (quote ("global-context"))) (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_with") (r "^1.14") (o #t) (d #t) (k 0)) (d (n "strict_encoding") (r "^0.9.0") (f (quote ("float" "derive"))) (o #t) (k 0)))) (h "1c7khrflcmviwp02na7zfmza3c6cz2l08srh4k855cqj6yigx06z") (f (quote (("std" "amplify/std" "bitcoin_hashes/std" "secp256k1/std" "curve25519-dalek/std" "curve25519-dalek/alloc" "bech32/std") ("serde" "serde_crate" "serde_with" "amplify/serde" "bitcoin_hashes/serde" "std" "secp256k1/std" "curve25519-dalek/serde") ("default") ("curve25519" "curve25519-dalek") ("all" "std" "secp256k1" "curve25519" "strict_encoding" "serde")))) (y #t)))

(define-public crate-aluvm-0.9.2 (c (n "aluvm") (v "0.9.2") (d (list (d (n "amplify") (r "^3.13.0") (f (quote ("apfloat" "derive" "hex"))) (k 0)) (d (n "bech32") (r "^0.9.1") (k 0)) (d (n "bitcoin_hashes") (r "^0.11.0") (k 0)) (d (n "curve25519-dalek") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.1.0") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "secp256k1") (r "^0.24.2") (f (quote ("global-context"))) (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_with") (r "^1.14") (o #t) (d #t) (k 0)) (d (n "strict_encoding") (r "^0.9.0") (f (quote ("float" "derive"))) (o #t) (k 0)))) (h "15hfgglsb9wc0x24jsa7y8ddwhv3xxxk310f1jjmx0blw6qbfhf2") (f (quote (("std" "amplify/std" "bitcoin_hashes/std" "secp256k1/std" "curve25519-dalek/std" "curve25519-dalek/alloc" "bech32/std") ("serde" "serde_crate" "serde_with" "amplify/serde" "bitcoin_hashes/serde" "std" "secp256k1/std" "curve25519-dalek/serde") ("default") ("curve25519" "curve25519-dalek") ("all" "std" "secp256k1" "curve25519" "strict_encoding" "serde"))))))

(define-public crate-aluvm-0.10.1 (c (n "aluvm") (v "0.10.1") (d (list (d (n "amplify") (r "^4.0.0") (f (quote ("apfloat" "derive" "hex"))) (k 0)) (d (n "baid58") (r "^0.3.1") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.12.0") (k 0)) (d (n "blake3") (r "^1.3.3") (k 0)) (d (n "curve25519-dalek") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.1.0") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("global-context"))) (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (o #t) (d #t) (k 0) (p "serde")) (d (n "strict_encoding") (r "^2.1.0") (f (quote ("float" "derive"))) (k 0)) (d (n "strict_types") (r "^1.1.0") (o #t) (d #t) (k 0)))) (h "19rlhj74ida9acdda6snih42dmz8r3jp63x0j27xqmcrz47za6js") (f (quote (("stl" "strict_types/base64" "std") ("std" "amplify/std" "bitcoin_hashes/std" "blake3/std") ("serde" "serde_crate" "amplify/serde" "std") ("default" "std") ("curve25519" "curve25519-dalek") ("all" "stl" "std" "secp256k1" "curve25519" "serde")))) (r "1.66")))

(define-public crate-aluvm-0.10.2 (c (n "aluvm") (v "0.10.2") (d (list (d (n "amplify") (r "^4.0.0") (f (quote ("apfloat" "derive" "hex"))) (k 0)) (d (n "baid58") (r "^0.3.1") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.12.0") (k 0)) (d (n "blake3") (r "^1.3.3") (k 0)) (d (n "curve25519-dalek") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.1.0") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("global-context"))) (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (o #t) (d #t) (k 0) (p "serde")) (d (n "strict_encoding") (r "^2.2.0") (f (quote ("float" "derive"))) (k 0)) (d (n "strict_types") (r "^1.2.0") (o #t) (d #t) (k 0)))) (h "00pm9s017zyhx5yy7iwikim83bxgynypya64frs4d6sw94pidfry") (f (quote (("stl" "strict_types/base64" "std") ("std" "amplify/std" "bitcoin_hashes/std" "blake3/std") ("serde" "serde_crate" "amplify/serde" "std") ("default" "std") ("curve25519" "curve25519-dalek") ("all" "stl" "std" "secp256k1" "curve25519" "serde")))) (r "1.66")))

(define-public crate-aluvm-0.10.3 (c (n "aluvm") (v "0.10.3") (d (list (d (n "amplify") (r "^4.0.0") (f (quote ("apfloat" "derive" "hex"))) (k 0)) (d (n "baid58") (r "^0.3.2") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.1.0") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "ripemd") (r "^0.1.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("global-context"))) (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (o #t) (d #t) (k 0) (p "serde")) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "strict_encoding") (r "^2.3.0") (f (quote ("float" "derive"))) (k 0)) (d (n "strict_types") (r "^1.3.0") (o #t) (d #t) (k 0)))) (h "1sj4q5kfcdw5vc2vmq2mv7k5bm0ykkkcaafaw7sibq0bdsaaz1b3") (f (quote (("stl" "strict_types/base64" "std") ("std" "amplify/std") ("serde" "serde_crate" "amplify/serde" "std") ("default" "std") ("curve25519" "curve25519-dalek") ("alloc" "amplify/alloc") ("all" "stl" "std" "secp256k1" "curve25519" "serde")))) (r "1.66")))

(define-public crate-aluvm-0.10.4 (c (n "aluvm") (v "0.10.4") (d (list (d (n "amplify") (r "^4.0.0") (f (quote ("apfloat" "derive" "hex"))) (k 0)) (d (n "baid58") (r "^0.3.2") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "half") (r "~2.2.0") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ripemd") (r "^0.1.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("global-context"))) (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (o #t) (d #t) (k 0) (p "serde")) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "strict_encoding") (r "^2.5.0") (f (quote ("float" "derive"))) (k 0)) (d (n "strict_types") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1kjljga6gd7yh560qaa4jb359dmfj9p6a6a19jsa9j13pvj6x1gk") (f (quote (("stl" "strict_types/base64" "std") ("std" "amplify/std") ("serde" "serde_crate" "amplify/serde" "std") ("default" "std") ("curve25519" "curve25519-dalek") ("alloc" "amplify/alloc") ("all" "stl" "std" "secp256k1" "curve25519" "serde")))) (r "1.67")))

(define-public crate-aluvm-0.10.5 (c (n "aluvm") (v "0.10.5") (d (list (d (n "amplify") (r "^4.0.0") (f (quote ("apfloat" "derive" "hex"))) (k 0)) (d (n "baid58") (r "^0.4.1") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "half") (r "~2.2.0") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ripemd") (r "^0.1.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("global-context"))) (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (o #t) (d #t) (k 0) (p "serde")) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "strict_encoding") (r "^2.5.0") (f (quote ("float" "derive"))) (k 0)) (d (n "strict_types") (r "^1.6.0") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1gvig2w21la929sac9d8xam3h0i5n9kw2ibii5g44naxgrjn1za9") (f (quote (("stl" "strict_types/base64" "std") ("std" "amplify/std") ("serde" "serde_crate" "amplify/serde" "std") ("default" "std") ("curve25519" "curve25519-dalek") ("alloc" "amplify/alloc") ("all" "stl" "std" "secp256k1" "curve25519" "serde")))) (r "1.67")))

(define-public crate-aluvm-0.10.6 (c (n "aluvm") (v "0.10.6") (d (list (d (n "amplify") (r "^4.5.0") (f (quote ("apfloat" "derive" "hex"))) (k 0)) (d (n "baid58") (r "^0.4.4") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "half") (r "~2.2.0") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ripemd") (r "^0.1.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("global-context"))) (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (o #t) (d #t) (k 0) (p "serde")) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "strict_encoding") (r "^2.6.1") (f (quote ("float" "derive"))) (k 0)) (d (n "strict_types") (r "^1.6.3") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1prkf83l64j4m60m13h7ia047mgvn3zh89p493d28kzmx80ac976") (f (quote (("stl" "strict_types/base64" "std") ("std" "amplify/std") ("serde" "serde_crate" "amplify/serde" "std") ("default" "std") ("curve25519" "curve25519-dalek") ("alloc" "amplify/alloc") ("all" "stl" "std" "secp256k1" "curve25519" "serde")))) (r "1.67")))

(define-public crate-aluvm-0.11.0-alpha.1 (c (n "aluvm") (v "0.11.0-alpha.1") (d (list (d (n "amplify") (r "^4.5.0") (f (quote ("apfloat" "derive" "hex"))) (k 0)) (d (n "baid58") (r "^0.4.4") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "half") (r "~2.2.0") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ripemd") (r "^0.1.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.28.0") (f (quote ("global-context"))) (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (o #t) (d #t) (k 0) (p "serde")) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "strict_encoding") (r "^2.6.1") (f (quote ("float" "derive"))) (k 0)) (d (n "strict_types") (r "^1.6.3") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1xhjgwql9xfvmxb5lp4jld5xaq79azb2n30l94vrfx2vnrc97a8l") (f (quote (("stl" "strict_types/base64" "std") ("std" "amplify/std") ("serde" "serde_crate" "amplify/serde" "std") ("default" "std") ("curve25519" "curve25519-dalek") ("alloc" "amplify/alloc") ("all" "stl" "std" "secp256k1" "curve25519" "serde")))) (r "1.67")))

(define-public crate-aluvm-0.11.0-beta.1 (c (n "aluvm") (v "0.11.0-beta.1") (d (list (d (n "amplify") (r "^4.5.0") (f (quote ("apfloat" "derive" "hex"))) (k 0)) (d (n "baid58") (r "^0.4.4") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "half") (r "~2.2.0") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ripemd") (r "^0.1.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.28.0") (f (quote ("global-context"))) (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (o #t) (d #t) (k 0) (p "serde")) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "strict_encoding") (r "^2.6.1") (f (quote ("float" "derive"))) (k 0)) (d (n "strict_types") (r "^1.6.3") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "18829gqq44qd3j7769fbll29pjafsg3h3ib9kjivran68bhr6jhk") (f (quote (("stl" "strict_types/base64" "std") ("std" "amplify/std") ("serde" "serde_crate" "amplify/serde" "std") ("default" "std") ("curve25519" "curve25519-dalek") ("alloc" "amplify/alloc") ("all" "stl" "std" "secp256k1" "curve25519" "serde")))) (r "1.67")))

(define-public crate-aluvm-0.11.0-beta.2 (c (n "aluvm") (v "0.11.0-beta.2") (d (list (d (n "amplify") (r "^4.5.0") (f (quote ("apfloat" "derive" "hex"))) (k 0)) (d (n "baid58") (r "^0.4.4") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "half") (r "~2.2.0") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ripemd") (r "^0.1.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.28.0") (f (quote ("global-context"))) (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (o #t) (d #t) (k 0) (p "serde")) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "strict_encoding") (r "^2.6.1") (f (quote ("float" "derive"))) (k 0)) (d (n "strict_types") (r "^1.6.3") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0krr5rca6vfbkimw8abq357s1jgzfrgl2nma08cpw943nf3y22z1") (f (quote (("stl" "strict_types/base64" "std") ("std" "amplify/std") ("serde" "serde_crate" "amplify/serde" "std") ("default" "std") ("curve25519" "curve25519-dalek") ("alloc" "amplify/alloc") ("all" "stl" "std" "secp256k1" "curve25519" "serde")))) (r "1.67")))

(define-public crate-aluvm-0.11.0-beta.3 (c (n "aluvm") (v "0.11.0-beta.3") (d (list (d (n "amplify") (r "^4.6.0") (f (quote ("apfloat" "derive" "hex"))) (k 0)) (d (n "baid58") (r "^0.4.4") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "half") (r "~2.2.0") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ripemd") (r "^0.1.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.28.2") (f (quote ("global-context"))) (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (o #t) (d #t) (k 0) (p "serde")) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "strict_encoding") (r "^2.7.0-beta.1") (f (quote ("float" "derive"))) (k 0)) (d (n "strict_types") (r "^2.7.0-beta.1") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1x289sk9asl6askryd9yx9b5p91lgrjalyrqh8hvkqqaf8qmdgb0") (f (quote (("stl" "strict_types/base85" "std") ("std" "amplify/std") ("serde" "serde_crate" "amplify/serde" "std") ("default" "std") ("curve25519" "curve25519-dalek") ("alloc" "amplify/alloc") ("all" "stl" "std" "secp256k1" "curve25519" "serde")))) (r "1.69.0")))

(define-public crate-aluvm-0.11.0-beta.4 (c (n "aluvm") (v "0.11.0-beta.4") (d (list (d (n "amplify") (r "^4.6.0") (f (quote ("apfloat" "derive" "hex"))) (k 0)) (d (n "baid58") (r "^0.4.4") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "half") (r "~2.2.0") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ripemd") (r "^0.1.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.28.2") (f (quote ("global-context"))) (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (o #t) (d #t) (k 0) (p "serde")) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "strict_encoding") (r "^2.7.0-beta.1") (f (quote ("float" "derive"))) (k 0)) (d (n "strict_types") (r "^2.7.0-beta.1") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0f3wlrac4h712741fka4frlnxgvvyym16krz8c3clzibw1rqh9z0") (f (quote (("stl" "strict_types/base85" "std") ("std" "amplify/std") ("serde" "serde_crate" "amplify/serde" "std") ("log" "std") ("default" "std") ("curve25519" "curve25519-dalek") ("alloc" "amplify/alloc") ("all" "stl" "std" "log" "secp256k1" "curve25519" "serde")))) (r "1.69.0")))

(define-public crate-aluvm-0.11.0-beta.5 (c (n "aluvm") (v "0.11.0-beta.5") (d (list (d (n "amplify") (r "^4.6.0") (f (quote ("apfloat" "derive" "hex"))) (k 0)) (d (n "ascii-armor") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "baid58") (r "^0.4.4") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "half") (r "~2.2.0") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ripemd") (r "^0.1.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.28.2") (f (quote ("global-context"))) (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (o #t) (d #t) (k 0) (p "serde")) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "strict_encoding") (r "^2.7.0-beta.1") (f (quote ("float" "derive"))) (k 0)) (d (n "strict_types") (r "^2.7.0-beta.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0x9j9hmszihl0dzdlsk97zzsqw9n4xmq9fgg2xib503bzl9x4ci0") (f (quote (("stl" "strict_types/armor" "std") ("std" "amplify/std") ("serde" "serde_crate" "amplify/serde" "std") ("log" "std") ("default" "std") ("curve25519" "curve25519-dalek") ("alloc" "amplify/alloc") ("all" "stl" "std" "log" "secp256k1" "curve25519" "serde" "ascii-armor")))) (r "1.69.0")))

(define-public crate-aluvm-0.10.7 (c (n "aluvm") (v "0.10.7") (d (list (d (n "amplify") (r "^4.5.0") (f (quote ("apfloat" "derive" "hex"))) (k 0)) (d (n "baid58") (r "^0.4.4") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "half") (r "~2.2.0") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ripemd") (r "^0.1.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("global-context"))) (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (o #t) (d #t) (k 0) (p "serde")) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "strict_encoding") (r "^2.6.1") (f (quote ("float" "derive"))) (k 0)) (d (n "strict_types") (r "^1.6.3") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1f5lg7bby8cq80vwss56fksw2smdyqqipcp2nhpji5gkcj8jhmsq") (f (quote (("stl" "strict_types/base64" "std") ("std" "amplify/std") ("serde" "serde_crate" "amplify/serde" "std") ("default" "std") ("curve25519" "curve25519-dalek") ("alloc" "amplify/alloc") ("all" "stl" "std" "secp256k1" "curve25519" "serde")))) (r "1.67")))

(define-public crate-aluvm-0.11.0-beta.6 (c (n "aluvm") (v "0.11.0-beta.6") (d (list (d (n "amplify") (r "^4.6.0") (f (quote ("apfloat" "derive" "hex"))) (k 0)) (d (n "ascii-armor") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "baid64") (r "^0.2.0") (d #t) (k 0)) (d (n "blake3") (r "^1.5.1") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "half") (r "^2.4.1") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ripemd") (r "^0.1.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.29.0") (f (quote ("global-context"))) (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1") (o #t) (d #t) (k 0) (p "serde")) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "strict_encoding") (r "^2.7.0-beta.4") (f (quote ("float" "derive"))) (k 0)) (d (n "strict_types") (r "^2.7.0-beta.4") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "02nr8h6wz7zh666rljmhv1nrzlfqa2vd418y5mlklnc2z2c5g84p") (f (quote (("stl" "strict_types/armor" "std") ("std" "amplify/std") ("serde" "serde_crate" "amplify/serde" "std" "strict_encoding/serde") ("log" "std") ("default" "std") ("curve25519" "curve25519-dalek") ("alloc" "amplify/alloc") ("all" "stl" "std" "log" "secp256k1" "curve25519" "serde" "ascii-armor")))) (r "1.70.0")))

