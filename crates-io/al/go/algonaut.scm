(define-module (crates-io al go algonaut) #:use-module (crates-io))

(define-public crate-algonaut-0.1.0 (c (n "algonaut") (v "0.1.0") (h "0jv3w98fx1lzfdzqdpgmnmw7l3l741xqgiw6b3lsip02ql07wf2b")))

(define-public crate-algonaut-0.2.0 (c (n "algonaut") (v "0.2.0") (d (list (d (n "algonaut_client") (r "^0.2.0") (d #t) (k 0)) (d (n "algonaut_core") (r "^0.2.0") (d #t) (k 0)) (d (n "algonaut_crypto") (r "^0.2.0") (d #t) (k 0)) (d (n "algonaut_encoding") (r "^0.2.0") (d #t) (k 0)) (d (n "algonaut_transaction") (r "^0.2.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.9") (d #t) (k 2)) (d (n "dirs") (r "^2.0") (d #t) (k 2)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "rmp-serde") (r "^0.14.0") (d #t) (k 2)))) (h "0vyqhylzrjm738wc8z8n595z2advlrrrk9swndk7cnr5nnzld72z")))

(define-public crate-algonaut-0.3.0 (c (n "algonaut") (v "0.3.0") (d (list (d (n "algonaut_client") (r "^0.3.0") (d #t) (k 0)) (d (n "algonaut_core") (r "^0.3.0") (d #t) (k 0)) (d (n "algonaut_crypto") (r "^0.3.0") (d #t) (k 0)) (d (n "algonaut_encoding") (r "^0.3.0") (d #t) (k 0)) (d (n "algonaut_model") (r "^0.3.0") (d #t) (k 0)) (d (n "algonaut_transaction") (r "^0.3.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.9") (d #t) (k 2)) (d (n "data-encoding") (r "^2.3.1") (d #t) (k 2)) (d (n "dirs") (r "^3.0") (d #t) (k 2)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "getrandom") (r "^0.2.2") (f (quote ("js"))) (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "rmp-serde") (r "^0.15.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "tokio") (r "^1.6.0") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)))) (h "0si76vd9ig6srmsdd6vm0dyd8dsk80l486b71dkj5bhmgpj70g69")))

(define-public crate-algonaut-0.4.0 (c (n "algonaut") (v "0.4.0") (d (list (d (n "algonaut_abi") (r "^0.4.0") (d #t) (k 0)) (d (n "algonaut_client") (r "^0.4.0") (k 0)) (d (n "algonaut_core") (r "^0.4.0") (d #t) (k 0)) (d (n "algonaut_crypto") (r "^0.4.0") (d #t) (k 0)) (d (n "algonaut_encoding") (r "^0.4.0") (d #t) (k 0)) (d (n "algonaut_model") (r "^0.4.0") (d #t) (k 0)) (d (n "algonaut_transaction") (r "^0.4.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 2)) (d (n "cucumber") (r "^0.13.0") (d #t) (k 2)) (d (n "data-encoding") (r "^2.3.1") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.2") (f (quote ("js"))) (d #t) (k 2)) (d (n "gloo-timers") (r "^0.2.4") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "instant") (r "^0.1") (f (quote ("now"))) (d #t) (k 0)) (d (n "instant") (r "^0.1") (f (quote ("now" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "rmp-serde") (r "^1.0.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "tokio") (r "^1.6.0") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)))) (h "05sp7k5mqyri78iiybr4n652dmrwljg6qb9zmvgpr384vbda9l4f") (f (quote (("rustls" "algonaut_client/rustls") ("native" "algonaut_client/native") ("default" "native"))))))

(define-public crate-algonaut-0.4.1 (c (n "algonaut") (v "0.4.1") (d (list (d (n "algonaut_abi") (r "^0.4.1") (d #t) (k 0)) (d (n "algonaut_client") (r "^0.4.1") (k 0)) (d (n "algonaut_core") (r "^0.4.1") (d #t) (k 0)) (d (n "algonaut_crypto") (r "^0.4.1") (d #t) (k 0)) (d (n "algonaut_encoding") (r "^0.4.1") (d #t) (k 0)) (d (n "algonaut_model") (r "^0.4.1") (d #t) (k 0)) (d (n "algonaut_transaction") (r "^0.4.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 2)) (d (n "cucumber") (r "^0.13.0") (d #t) (k 2)) (d (n "data-encoding") (r "^2.3.1") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.2") (f (quote ("js"))) (d #t) (k 2)) (d (n "gloo-timers") (r "^0.2.4") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "instant") (r "^0.1") (f (quote ("now"))) (d #t) (k 0)) (d (n "instant") (r "^0.1") (f (quote ("now" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "rmp-serde") (r "^1.0.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "tokio") (r "^1.6.0") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)))) (h "05w90a6bxdvw3kii3nxvkp731si491ma6yhvzb7chpq29qin42xv") (f (quote (("rustls" "algonaut_client/rustls") ("native" "algonaut_client/native") ("default" "native"))))))

(define-public crate-algonaut-0.4.2 (c (n "algonaut") (v "0.4.2") (d (list (d (n "algonaut_abi") (r "^0.4.2") (d #t) (k 0)) (d (n "algonaut_client") (r "^0.4.2") (k 0)) (d (n "algonaut_core") (r "^0.4.2") (d #t) (k 0)) (d (n "algonaut_crypto") (r "^0.4.2") (d #t) (k 0)) (d (n "algonaut_encoding") (r "^0.4.2") (d #t) (k 0)) (d (n "algonaut_model") (r "^0.4.2") (d #t) (k 0)) (d (n "algonaut_transaction") (r "^0.4.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 2)) (d (n "cucumber") (r "^0.13.0") (d #t) (k 2)) (d (n "data-encoding") (r "^2.3.1") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.2") (f (quote ("js"))) (d #t) (k 2)) (d (n "gloo-timers") (r "^0.2.4") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "instant") (r "^0.1") (f (quote ("now"))) (d #t) (k 0)) (d (n "instant") (r "^0.1") (f (quote ("now" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "rmp-serde") (r "^1.0.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "tokio") (r "^1.6.0") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)))) (h "1zq2g6p86mgglyh7nr1l7ldnadjhcs7lp0dfkqqimzlaf77lj8j8") (f (quote (("rustls" "algonaut_client/rustls") ("native" "algonaut_client/native") ("default" "native"))))))

