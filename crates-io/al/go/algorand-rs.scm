(define-module (crates-io al go algorand-rs) #:use-module (crates-io))

(define-public crate-algorand-rs-0.1.0 (c (n "algorand-rs") (v "0.1.0") (d (list (d (n "chrono") (r "^0.4.9") (d #t) (k 2)) (d (n "data-encoding") (r "^2.3.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "dirs") (r "^2.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.6.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.20") (d #t) (k 0)) (d (n "ring") (r "^0.16.19") (d #t) (k 0)) (d (n "rmp") (r "^0.8.8") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)) (d (n "static_assertions") (r "^0.3.4") (d #t) (k 0)) (d (n "url") (r "^2.2.0") (d #t) (k 0)))) (h "0bj8mxqi1lj1v8px50203371c2d226pjk3kml2k51wd9zql28g93")))

