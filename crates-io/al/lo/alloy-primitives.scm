(define-module (crates-io al lo alloy-primitives) #:use-module (crates-io))

(define-public crate-alloy-primitives-0.1.0 (c (n "alloy-primitives") (v "0.1.0") (d (list (d (n "alloy-rlp") (r "^0.1.0") (o #t) (k 0)) (d (n "arbitrary") (r "^1.3") (f (quote ("derive"))) (o #t) (k 0)) (d (n "bytes") (r "^1.4") (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hex") (r ">=1.5") (f (quote ("alloc"))) (k 0) (p "const-hex")) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "itoa") (r "^1") (d #t) (k 0)) (d (n "proptest") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ruint") (r "^1.9.0") (f (quote ("serde"))) (k 0) (p "ruint2")) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 2)) (d (n "tiny-keccak") (r "^2.0") (f (quote ("keccak"))) (d #t) (k 0)))) (h "0cih7szwqgcl0mjxvk3hr9jfgzqvz0xscdpx7vyy1ncdj5lpac8s") (f (quote (("default" "std" "rlp" "serde")))) (s 2) (e (quote (("std" "bytes/std" "hex/std" "alloy-rlp?/std" "proptest?/std" "serde/std") ("serde" "dep:serde" "bytes/serde" "hex/serde" "ruint/serde") ("rlp" "dep:alloy-rlp" "ruint/alloy-rlp") ("getrandom" "dep:getrandom") ("arbitrary" "std" "ruint/arbitrary" "ruint/proptest" "dep:arbitrary" "dep:proptest" "dep:proptest-derive")))) (r "1.65")))

(define-public crate-alloy-primitives-0.2.0 (c (n "alloy-primitives") (v "0.2.0") (d (list (d (n "alloy-rlp") (r "^0.2.0") (o #t) (k 0)) (d (n "arbitrary") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.4") (k 0)) (d (n "derive_arbitrary") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hex") (r ">=1.5") (f (quote ("alloc"))) (k 0) (p "const-hex")) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "itoa") (r "^1") (d #t) (k 0)) (d (n "proptest") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ruint") (r "^1.9.0") (k 0) (p "ruint2")) (d (n "serde") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 2)) (d (n "tiny-keccak") (r "^2.0") (f (quote ("keccak"))) (d #t) (k 0)))) (h "1ir5ymbm3gn6dw7sywharqwa5wlh6c4ka7j03zsg4g1m476x62cz") (f (quote (("default" "std")))) (s 2) (e (quote (("std" "bytes/std" "hex/std" "alloy-rlp?/std" "proptest?/std" "serde?/std") ("serde" "dep:serde" "bytes/serde" "hex/serde" "ruint/serde") ("rlp" "dep:alloy-rlp" "ruint/alloy-rlp") ("getrandom" "dep:getrandom") ("arbitrary" "std" "ruint/arbitrary" "ruint/proptest" "dep:arbitrary" "dep:derive_arbitrary" "dep:proptest" "dep:proptest-derive")))) (r "1.65")))

(define-public crate-alloy-primitives-0.3.0 (c (n "alloy-primitives") (v "0.3.0") (d (list (d (n "alloy-rlp") (r "^0.3.0") (o #t) (k 0)) (d (n "arbitrary") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.4") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "derive_arbitrary") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hex") (r ">=1.5") (f (quote ("alloc"))) (k 0) (p "const-hex")) (d (n "hex-literal") (r "^0.4") (d #t) (k 0)) (d (n "itoa") (r "^1") (d #t) (k 0)) (d (n "proptest") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ruint") (r "^1.9.0") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 2)) (d (n "tiny-keccak") (r "^2.0") (f (quote ("keccak"))) (d #t) (k 0)))) (h "0gnxzw7l8imwk2pbv92cb3f9dk0k34dc92s4yxlrwf1v68cy5z1g") (f (quote (("tiny-keccak") ("native-keccak") ("default" "std")))) (s 2) (e (quote (("std" "bytes/std" "hex/std" "alloy-rlp?/std" "proptest?/std" "serde?/std") ("serde" "dep:serde" "bytes/serde" "hex/serde" "ruint/serde") ("rlp" "dep:alloy-rlp" "ruint/alloy-rlp") ("getrandom" "dep:getrandom") ("arbitrary" "std" "ruint/arbitrary" "ruint/proptest" "dep:arbitrary" "dep:derive_arbitrary" "dep:proptest" "dep:proptest-derive")))) (r "1.65")))

(define-public crate-alloy-primitives-0.3.1 (c (n "alloy-primitives") (v "0.3.1") (d (list (d (n "alloy-rlp") (r "^0.3.0") (o #t) (k 0)) (d (n "arbitrary") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.4") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "derive_arbitrary") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hex") (r ">=1.5") (f (quote ("alloc"))) (k 0) (p "const-hex")) (d (n "hex-literal") (r "^0.4") (d #t) (k 0)) (d (n "itoa") (r "^1") (d #t) (k 0)) (d (n "proptest") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ruint") (r "^1.10.1") (f (quote ("alloc"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 2)) (d (n "tiny-keccak") (r "^2.0") (f (quote ("keccak"))) (d #t) (k 0)))) (h "1qhkw3jjrmfv3f9dj9rj1nha1k775w41vyw87mvbpy7vvh8kzxv6") (f (quote (("tiny-keccak") ("native-keccak") ("default" "std")))) (s 2) (e (quote (("std" "bytes/std" "hex/std" "alloy-rlp?/std" "proptest?/std" "serde?/std") ("serde" "dep:serde" "bytes/serde" "hex/serde" "ruint/serde") ("rlp" "dep:alloy-rlp" "ruint/alloy-rlp") ("getrandom" "dep:getrandom") ("arbitrary" "std" "ruint/arbitrary" "ruint/proptest" "dep:arbitrary" "dep:derive_arbitrary" "dep:proptest" "dep:proptest-derive")))) (r "1.65")))

(define-public crate-alloy-primitives-0.3.2 (c (n "alloy-primitives") (v "0.3.2") (d (list (d (n "alloy-rlp") (r "^0.3.0") (o #t) (k 0)) (d (n "arbitrary") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "bytes") (r "^1.4") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "derive_arbitrary") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hex") (r ">=1.5") (f (quote ("alloc"))) (k 0) (p "const-hex")) (d (n "hex-literal") (r "^0.4") (d #t) (k 0)) (d (n "itoa") (r "^1") (d #t) (k 0)) (d (n "proptest") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ruint") (r "^1.10.1") (f (quote ("alloc"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 2)) (d (n "tiny-keccak") (r "^2.0") (f (quote ("keccak"))) (d #t) (k 0)))) (h "17zi7r65a6cxvvf5sl1sfxx1yjbg9h6cdmlnsn6378rmigfqwsnn") (f (quote (("tiny-keccak") ("native-keccak") ("default" "std")))) (s 2) (e (quote (("std" "bytes/std" "hex/std" "alloy-rlp?/std" "proptest?/std" "serde?/std") ("serde" "dep:serde" "bytes/serde" "hex/serde" "ruint/serde") ("rlp" "dep:alloy-rlp" "ruint/alloy-rlp") ("getrandom" "dep:getrandom") ("arbitrary" "std" "ruint/arbitrary" "ruint/proptest" "dep:arbitrary" "dep:derive_arbitrary" "dep:proptest" "dep:proptest-derive")))) (r "1.65")))

(define-public crate-alloy-primitives-0.3.3 (c (n "alloy-primitives") (v "0.3.3") (d (list (d (n "alloy-rlp") (r "^0.3.0") (o #t) (k 0)) (d (n "arbitrary") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "bytes") (r "^1.4") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "derive_arbitrary") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hex") (r ">=1.5") (f (quote ("alloc"))) (k 0) (p "const-hex")) (d (n "hex-literal") (r "^0.4") (d #t) (k 0)) (d (n "itoa") (r "^1") (d #t) (k 0)) (d (n "proptest") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ruint") (r "^1.10.1") (f (quote ("alloc"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 2)) (d (n "tiny-keccak") (r "^2.0") (f (quote ("keccak"))) (d #t) (k 0)))) (h "0r9yn3r9dyfkjkjjhxvcnwar8w6njp1kaiyr6ayjwffkhhq905p4") (f (quote (("tiny-keccak") ("native-keccak") ("hex-compat" "hex/hex") ("default" "std")))) (s 2) (e (quote (("std" "bytes/std" "hex/std" "alloy-rlp?/std" "proptest?/std" "serde?/std") ("serde" "dep:serde" "bytes/serde" "hex/serde" "ruint/serde") ("rlp" "dep:alloy-rlp" "ruint/alloy-rlp") ("getrandom" "dep:getrandom") ("arbitrary" "std" "ruint/arbitrary" "ruint/proptest" "dep:arbitrary" "dep:derive_arbitrary" "dep:proptest" "dep:proptest-derive")))) (r "1.65")))

(define-public crate-alloy-primitives-0.4.0 (c (n "alloy-primitives") (v "0.4.0") (d (list (d (n "alloy-rlp") (r "^0.3") (o #t) (k 0)) (d (n "arbitrary") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "bytes") (r "^1") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "derive_arbitrary") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^1.5") (f (quote ("alloc"))) (k 0) (p "const-hex")) (d (n "hex-literal") (r "^0.4") (d #t) (k 0)) (d (n "itoa") (r "^1") (d #t) (k 0)) (d (n "proptest") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("getrandom"))) (o #t) (k 0)) (d (n "ruint") (r "^1.10.1") (f (quote ("alloc"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 2)) (d (n "tiny-keccak") (r "^2.0") (f (quote ("keccak"))) (d #t) (k 0)))) (h "1q34ms0bbfb4fy542rhfsvbqp1m10xy862chbfwxamvjkf3q8h3b") (f (quote (("tiny-keccak") ("native-keccak") ("hex-compat" "hex/hex") ("default" "std")))) (s 2) (e (quote (("std" "bytes/std" "hex/std" "alloy-rlp?/std" "proptest?/std" "rand?/std" "serde?/std") ("serde" "dep:serde" "bytes/serde" "hex/serde" "ruint/serde") ("rlp" "dep:alloy-rlp" "ruint/alloy-rlp") ("rand" "dep:rand" "getrandom") ("getrandom" "dep:getrandom") ("arbitrary" "std" "ruint/arbitrary" "ruint/proptest" "dep:arbitrary" "dep:derive_arbitrary" "dep:proptest" "dep:proptest-derive")))) (r "1.65")))

(define-public crate-alloy-primitives-0.4.1 (c (n "alloy-primitives") (v "0.4.1") (d (list (d (n "alloy-rlp") (r "^0.3") (o #t) (k 0)) (d (n "arbitrary") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "bytes") (r "^1") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "derive_arbitrary") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^1.5") (f (quote ("alloc"))) (k 0) (p "const-hex")) (d (n "hex-literal") (r "^0.4") (d #t) (k 0)) (d (n "itoa") (r "^1") (d #t) (k 0)) (d (n "proptest") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("getrandom"))) (o #t) (k 0)) (d (n "ruint") (r "^1.10.1") (f (quote ("alloc"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 2)) (d (n "tiny-keccak") (r "^2.0") (f (quote ("keccak"))) (d #t) (k 0)))) (h "043bk2jb49c3agi4wph0kmjm8zvlw09jbj2sb3y5g0psh2lc38kj") (f (quote (("tiny-keccak") ("native-keccak") ("hex-compat" "hex/hex") ("default" "std")))) (y #t) (s 2) (e (quote (("std" "bytes/std" "hex/std" "ruint/std" "alloy-rlp?/std" "proptest?/std" "rand?/std" "serde?/std") ("serde" "dep:serde" "bytes/serde" "hex/serde" "ruint/serde") ("rlp" "dep:alloy-rlp" "ruint/alloy-rlp") ("rand" "dep:rand" "getrandom") ("getrandom" "dep:getrandom") ("arbitrary" "std" "ruint/arbitrary" "ruint/proptest" "dep:arbitrary" "dep:derive_arbitrary" "dep:proptest" "dep:proptest-derive")))) (r "1.65")))

(define-public crate-alloy-primitives-0.4.2 (c (n "alloy-primitives") (v "0.4.2") (d (list (d (n "alloy-rlp") (r "^0.3") (o #t) (k 0)) (d (n "arbitrary") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "bytes") (r "^1") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "derive_arbitrary") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^1.5") (f (quote ("alloc"))) (k 0) (p "const-hex")) (d (n "hex-literal") (r "^0.4") (d #t) (k 0)) (d (n "itoa") (r "^1") (d #t) (k 0)) (d (n "proptest") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("getrandom"))) (o #t) (k 0)) (d (n "ruint") (r "^1.10.1") (f (quote ("alloc"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 2)) (d (n "tiny-keccak") (r "^2.0") (f (quote ("keccak"))) (d #t) (k 0)))) (h "0y1vn3clc1d24lrq50xdwj7cxgr35yqiggmn1cvv762vpb08wqm0") (f (quote (("tiny-keccak") ("native-keccak") ("hex-compat" "hex/hex") ("default" "std")))) (s 2) (e (quote (("std" "bytes/std" "hex/std" "ruint/std" "alloy-rlp?/std" "proptest?/std" "rand?/std" "serde?/std") ("serde" "dep:serde" "bytes/serde" "hex/serde" "ruint/serde") ("rlp" "dep:alloy-rlp" "ruint/alloy-rlp") ("rand" "dep:rand" "getrandom") ("getrandom" "dep:getrandom") ("arbitrary" "std" "ruint/arbitrary" "ruint/proptest" "dep:arbitrary" "dep:derive_arbitrary" "dep:proptest" "dep:proptest-derive")))) (r "1.65")))

(define-public crate-alloy-primitives-0.5.0 (c (n "alloy-primitives") (v "0.5.0") (d (list (d (n "alloy-rlp") (r "^0.3") (o #t) (k 0)) (d (n "arbitrary") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "bytes") (r "^1") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "derive_arbitrary") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ethereum_ssz") (r "^0.5.3") (o #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^1.5") (f (quote ("alloc"))) (k 0) (p "const-hex")) (d (n "hex-literal") (r "^0.4") (d #t) (k 0)) (d (n "itoa") (r "^1") (d #t) (k 0)) (d (n "proptest") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("getrandom"))) (o #t) (k 0)) (d (n "ruint") (r "^1.11.1") (f (quote ("alloc"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 2)) (d (n "tiny-keccak") (r "^2.0") (f (quote ("keccak"))) (d #t) (k 0)))) (h "1x4i1swdqsss9a3czp6barpz4kkd4iii1b7f6zmfg3xvw6sz9ppm") (f (quote (("tiny-keccak") ("native-keccak") ("hex-compat" "hex/hex") ("default" "std")))) (s 2) (e (quote (("std" "bytes/std" "hex/std" "ruint/std" "alloy-rlp?/std" "proptest?/std" "rand?/std" "serde?/std") ("ssz" "dep:ethereum_ssz" "std" "ruint/ssz") ("serde" "dep:serde" "bytes/serde" "hex/serde" "ruint/serde") ("rlp" "dep:alloy-rlp" "ruint/alloy-rlp") ("rand" "dep:rand" "getrandom" "ruint/rand") ("getrandom" "dep:getrandom") ("arbitrary" "std" "dep:arbitrary" "dep:derive_arbitrary" "dep:proptest" "dep:proptest-derive" "ruint/arbitrary" "ruint/proptest" "ethereum_ssz?/arbitrary")))) (r "1.65")))

(define-public crate-alloy-primitives-0.5.1 (c (n "alloy-primitives") (v "0.5.1") (d (list (d (n "alloy-rlp") (r "^0.3") (o #t) (k 0)) (d (n "arbitrary") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "bytes") (r "^1") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "derive_arbitrary") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ethereum_ssz") (r "^0.5.3") (o #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^1.5") (f (quote ("alloc"))) (k 0) (p "const-hex")) (d (n "hex-literal") (r "^0.4") (d #t) (k 0)) (d (n "itoa") (r "^1") (d #t) (k 0)) (d (n "proptest") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("getrandom"))) (o #t) (k 0)) (d (n "ruint") (r "^1.11.1") (f (quote ("alloc"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 2)) (d (n "tiny-keccak") (r "^2.0") (f (quote ("keccak"))) (d #t) (k 0)))) (h "0fvhavlqc1jj6caliv7pkggywkja7bil7aq1glvdjx3lzai7ff1s") (f (quote (("tiny-keccak") ("native-keccak") ("hex-compat" "hex/hex") ("default" "std")))) (s 2) (e (quote (("std" "bytes/std" "hex/std" "ruint/std" "alloy-rlp?/std" "proptest?/std" "rand?/std" "serde?/std") ("ssz" "dep:ethereum_ssz" "std" "ruint/ssz") ("serde" "dep:serde" "bytes/serde" "hex/serde" "ruint/serde") ("rlp" "dep:alloy-rlp" "ruint/alloy-rlp") ("rand" "dep:rand" "getrandom" "ruint/rand") ("getrandom" "dep:getrandom") ("arbitrary" "std" "dep:arbitrary" "dep:derive_arbitrary" "dep:proptest" "dep:proptest-derive" "ruint/arbitrary" "ruint/proptest" "ethereum_ssz?/arbitrary")))) (r "1.65")))

(define-public crate-alloy-primitives-0.5.2 (c (n "alloy-primitives") (v "0.5.2") (d (list (d (n "alloy-rlp") (r "^0.3") (o #t) (k 0)) (d (n "arbitrary") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "bytes") (r "^1") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "derive_arbitrary") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ethereum_ssz") (r "^0.5.3") (o #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^1.5") (f (quote ("alloc"))) (k 0) (p "const-hex")) (d (n "hex-literal") (r "^0.4") (d #t) (k 0)) (d (n "itoa") (r "^1") (d #t) (k 0)) (d (n "proptest") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("getrandom"))) (o #t) (k 0)) (d (n "ruint") (r "^1.11.1") (f (quote ("alloc"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 2)) (d (n "tiny-keccak") (r "^2.0") (f (quote ("keccak"))) (d #t) (k 0)))) (h "0gpmdiks8x6jpgnfzq4ci4y9vy8s1vm840v2rfjlh5cisl4jrjh8") (f (quote (("tiny-keccak") ("native-keccak") ("hex-compat" "hex/hex") ("default" "std")))) (s 2) (e (quote (("std" "bytes/std" "hex/std" "ruint/std" "alloy-rlp?/std" "proptest?/std" "rand?/std" "serde?/std") ("ssz" "dep:ethereum_ssz" "std" "ruint/ssz") ("serde" "dep:serde" "bytes/serde" "hex/serde" "ruint/serde") ("rlp" "dep:alloy-rlp" "ruint/alloy-rlp") ("rand" "dep:rand" "getrandom" "ruint/rand") ("getrandom" "dep:getrandom") ("arbitrary" "std" "dep:arbitrary" "dep:derive_arbitrary" "dep:proptest" "dep:proptest-derive" "ruint/arbitrary" "ruint/proptest" "ethereum_ssz?/arbitrary")))) (r "1.65")))

(define-public crate-alloy-primitives-0.5.3 (c (n "alloy-primitives") (v "0.5.3") (d (list (d (n "alloy-rlp") (r "^0.3") (o #t) (k 0)) (d (n "arbitrary") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "bytes") (r "^1") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "derive_arbitrary") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ethereum_ssz") (r "^0.5.3") (o #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^1.5") (f (quote ("alloc"))) (k 0) (p "const-hex")) (d (n "hex-literal") (r "^0.4") (d #t) (k 0)) (d (n "itoa") (r "^1") (d #t) (k 0)) (d (n "proptest") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("getrandom"))) (o #t) (k 0)) (d (n "ruint") (r "^1.11.1") (f (quote ("alloc"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 2)) (d (n "tiny-keccak") (r "^2.0") (f (quote ("keccak"))) (d #t) (k 0)))) (h "1yh39gg3giz8bf8qmw2jiidcxzpmw37snbc2ag2k830fzxh5w3kc") (f (quote (("tiny-keccak") ("native-keccak") ("hex-compat" "hex/hex") ("default" "std")))) (s 2) (e (quote (("std" "bytes/std" "hex/std" "ruint/std" "alloy-rlp?/std" "proptest?/std" "rand?/std" "serde?/std") ("ssz" "dep:ethereum_ssz" "std" "ruint/ssz") ("serde" "dep:serde" "bytes/serde" "hex/serde" "ruint/serde") ("rlp" "dep:alloy-rlp" "ruint/alloy-rlp") ("rand" "dep:rand" "getrandom" "ruint/rand") ("getrandom" "dep:getrandom") ("arbitrary" "std" "dep:arbitrary" "dep:derive_arbitrary" "dep:proptest" "dep:proptest-derive" "ruint/arbitrary" "ruint/proptest" "ethereum_ssz?/arbitrary")))) (r "1.65")))

(define-public crate-alloy-primitives-0.5.4 (c (n "alloy-primitives") (v "0.5.4") (d (list (d (n "alloy-rlp") (r "^0.3") (o #t) (k 0)) (d (n "arbitrary") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "bytes") (r "^1") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "derive_arbitrary") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ethereum_ssz") (r "^0.5.3") (o #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^1.5") (f (quote ("alloc"))) (k 0) (p "const-hex")) (d (n "hex-literal") (r "^0.4") (d #t) (k 0)) (d (n "itoa") (r "^1") (d #t) (k 0)) (d (n "keccak-asm") (r "^0.1.0") (o #t) (k 0)) (d (n "postgres-types") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("getrandom"))) (o #t) (k 0)) (d (n "ruint") (r "^1.11.1") (f (quote ("alloc"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 2)) (d (n "tiny-keccak") (r "^2.0") (f (quote ("keccak"))) (d #t) (k 0)))) (h "161qz3bmq22smkydw4fr3y71s3myn8cj9y0ga4jg41s70a94y8ww") (f (quote (("tiny-keccak") ("native-keccak") ("hex-compat" "hex/hex") ("default" "std")))) (s 2) (e (quote (("std" "bytes/std" "hex/std" "ruint/std" "alloy-rlp?/std" "keccak-asm?/std" "proptest?/std" "rand?/std" "serde?/std") ("ssz" "dep:ethereum_ssz" "std" "ruint/ssz") ("serde" "dep:serde" "bytes/serde" "hex/serde" "ruint/serde") ("rlp" "dep:alloy-rlp" "ruint/alloy-rlp") ("rand" "dep:rand" "getrandom" "ruint/rand") ("postgres" "dep:postgres-types" "std" "ruint/postgres") ("getrandom" "dep:getrandom") ("asm-keccak" "dep:keccak-asm") ("arbitrary" "std" "dep:arbitrary" "dep:derive_arbitrary" "dep:proptest" "dep:proptest-derive" "ruint/arbitrary" "ruint/proptest" "ethereum_ssz?/arbitrary")))) (r "1.65")))

(define-public crate-alloy-primitives-0.6.0 (c (n "alloy-primitives") (v "0.6.0") (d (list (d (n "alloy-rlp") (r "^0.3") (o #t) (k 0)) (d (n "arbitrary") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "bytes") (r "^1") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "derive_arbitrary") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ethereum_ssz") (r "^0.5.3") (o #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^1.10") (f (quote ("alloc"))) (k 0) (p "const-hex")) (d (n "hex-literal") (r "^0.4") (d #t) (k 0)) (d (n "itoa") (r "^1") (d #t) (k 0)) (d (n "k256") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "keccak-asm") (r "^0.1.0") (o #t) (k 0)) (d (n "postgres-types") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("getrandom"))) (o #t) (k 0)) (d (n "ruint") (r "^1.11.1") (f (quote ("alloc"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 2)) (d (n "tiny-keccak") (r "^2.0") (f (quote ("keccak"))) (d #t) (k 0)))) (h "04gqdm01kv3m3zvsdvmrr47lkcyyyjf0y1vfir7bqsgkf8h16a9p") (f (quote (("tiny-keccak") ("native-keccak") ("hex-compat" "hex/hex") ("default" "std")))) (s 2) (e (quote (("std" "bytes/std" "hex/std" "ruint/std" "alloy-rlp?/std" "keccak-asm?/std" "proptest?/std" "rand?/std" "serde?/std" "k256?/std") ("ssz" "dep:ethereum_ssz" "std" "ruint/ssz") ("serde" "dep:serde" "bytes/serde" "hex/serde" "ruint/serde") ("rlp" "dep:alloy-rlp" "ruint/alloy-rlp") ("rand" "dep:rand" "getrandom" "ruint/rand") ("postgres" "dep:postgres-types" "std" "ruint/postgres") ("k256" "dep:k256") ("getrandom" "dep:getrandom") ("asm-keccak" "dep:keccak-asm") ("arbitrary" "std" "dep:arbitrary" "dep:derive_arbitrary" "dep:proptest" "dep:proptest-derive" "ruint/arbitrary" "ruint/proptest" "ethereum_ssz?/arbitrary")))) (r "1.65")))

(define-public crate-alloy-primitives-0.6.1 (c (n "alloy-primitives") (v "0.6.1") (d (list (d (n "alloy-rlp") (r "^0.3") (o #t) (k 0)) (d (n "arbitrary") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "bytes") (r "^1") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "derive_arbitrary") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ethereum_ssz") (r "^0.5.3") (o #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^1.10") (f (quote ("alloc"))) (k 0) (p "const-hex")) (d (n "hex-literal") (r "^0.4") (d #t) (k 0)) (d (n "itoa") (r "^1") (d #t) (k 0)) (d (n "k256") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "keccak-asm") (r "^0.1.0") (o #t) (k 0)) (d (n "postgres-types") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("getrandom"))) (o #t) (k 0)) (d (n "ruint") (r "^1.11.1") (f (quote ("alloc"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 2)) (d (n "tiny-keccak") (r "^2.0") (f (quote ("keccak"))) (d #t) (k 0)))) (h "1p88yr9y12vi14n1n9p9hkc9ngfmfmc8bcwn57wfpv2c8pbq1f5z") (f (quote (("tiny-keccak") ("native-keccak") ("hex-compat" "hex/hex") ("default" "std")))) (s 2) (e (quote (("std" "bytes/std" "hex/std" "ruint/std" "alloy-rlp?/std" "keccak-asm?/std" "proptest?/std" "rand?/std" "serde?/std" "k256?/std") ("ssz" "dep:ethereum_ssz" "std" "ruint/ssz") ("serde" "dep:serde" "bytes/serde" "hex/serde" "ruint/serde") ("rlp" "dep:alloy-rlp" "ruint/alloy-rlp") ("rand" "dep:rand" "getrandom" "ruint/rand") ("postgres" "dep:postgres-types" "std" "ruint/postgres") ("k256" "dep:k256") ("getrandom" "dep:getrandom") ("asm-keccak" "dep:keccak-asm") ("arbitrary" "std" "dep:arbitrary" "dep:derive_arbitrary" "dep:proptest" "dep:proptest-derive" "ruint/arbitrary" "ruint/proptest" "ethereum_ssz?/arbitrary")))) (r "1.65")))

(define-public crate-alloy-primitives-0.6.2 (c (n "alloy-primitives") (v "0.6.2") (d (list (d (n "alloy-rlp") (r "^0.3") (o #t) (k 0)) (d (n "arbitrary") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "bytes") (r "^1") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "derive_arbitrary") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ethereum_ssz") (r "^0.5.3") (o #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^1.10") (f (quote ("alloc"))) (k 0) (p "const-hex")) (d (n "hex-literal") (r "^0.4") (d #t) (k 0)) (d (n "itoa") (r "^1") (d #t) (k 0)) (d (n "k256") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "keccak-asm") (r "^0.1.0") (o #t) (k 0)) (d (n "postgres-types") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("getrandom"))) (o #t) (k 0)) (d (n "ruint") (r "^1.11.1") (f (quote ("alloc"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 2)) (d (n "tiny-keccak") (r "^2.0") (f (quote ("keccak"))) (d #t) (k 0)))) (h "1n5h3vfsbc15zlmviy8axqmjag7n6y4r0zyv2gaj7wig8cmzpdpl") (f (quote (("tiny-keccak") ("native-keccak") ("hex-compat" "hex/hex") ("default" "std")))) (s 2) (e (quote (("std" "bytes/std" "hex/std" "ruint/std" "alloy-rlp?/std" "keccak-asm?/std" "proptest?/std" "rand?/std" "serde?/std" "k256?/std") ("ssz" "dep:ethereum_ssz" "std" "ruint/ssz") ("serde" "dep:serde" "bytes/serde" "hex/serde" "ruint/serde") ("rlp" "dep:alloy-rlp" "ruint/alloy-rlp") ("rand" "dep:rand" "getrandom" "ruint/rand") ("postgres" "dep:postgres-types" "std" "ruint/postgres") ("k256" "dep:k256") ("getrandom" "dep:getrandom") ("asm-keccak" "dep:keccak-asm") ("arbitrary" "std" "dep:arbitrary" "dep:derive_arbitrary" "dep:proptest" "dep:proptest-derive" "ruint/arbitrary" "ruint/proptest" "ethereum_ssz?/arbitrary")))) (r "1.65")))

(define-public crate-alloy-primitives-0.6.3 (c (n "alloy-primitives") (v "0.6.3") (d (list (d (n "alloy-rlp") (r "^0.3") (o #t) (k 0)) (d (n "arbitrary") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "bytes") (r "^1") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "derive_arbitrary") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ethereum_ssz") (r "^0.5.3") (o #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^1.10") (f (quote ("alloc"))) (k 0) (p "const-hex")) (d (n "hex-literal") (r "^0.4") (d #t) (k 0)) (d (n "itoa") (r "^1") (d #t) (k 0)) (d (n "k256") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "keccak-asm") (r "^0.1.0") (o #t) (k 0)) (d (n "postgres-types") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("getrandom"))) (o #t) (k 0)) (d (n "ruint") (r "^1.11.1") (f (quote ("alloc"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 2)) (d (n "tiny-keccak") (r "^2.0") (f (quote ("keccak"))) (d #t) (k 0)))) (h "0z8frgblyhlxh12gbwm6yj9c30h8gyqr12xh7h064jf6a2r7w6gg") (f (quote (("tiny-keccak") ("native-keccak") ("hex-compat" "hex/hex") ("default" "std")))) (s 2) (e (quote (("std" "bytes/std" "hex/std" "ruint/std" "alloy-rlp?/std" "keccak-asm?/std" "proptest?/std" "rand?/std" "serde?/std" "k256?/std") ("ssz" "std" "dep:ethereum_ssz" "ruint/ssz") ("serde" "dep:serde" "bytes/serde" "hex/serde" "ruint/serde") ("rlp" "dep:alloy-rlp" "ruint/alloy-rlp") ("rand" "dep:rand" "getrandom" "ruint/rand") ("postgres" "std" "dep:postgres-types" "ruint/postgres") ("k256" "dep:k256") ("getrandom" "dep:getrandom") ("asm-keccak" "dep:keccak-asm") ("arbitrary" "std" "dep:arbitrary" "dep:derive_arbitrary" "dep:proptest" "dep:proptest-derive" "ruint/arbitrary" "ruint/proptest" "ethereum_ssz?/arbitrary")))) (r "1.65")))

(define-public crate-alloy-primitives-0.6.4 (c (n "alloy-primitives") (v "0.6.4") (d (list (d (n "allocative") (r "^0.3.2") (o #t) (k 0)) (d (n "alloy-rlp") (r "^0.3") (o #t) (k 0)) (d (n "arbitrary") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "bytes") (r "^1") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "derive_arbitrary") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ethereum_ssz") (r "^0.5.3") (o #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^1.10") (f (quote ("alloc"))) (k 0) (p "const-hex")) (d (n "hex-literal") (r "^0.4") (d #t) (k 0)) (d (n "itoa") (r "^1") (d #t) (k 0)) (d (n "k256") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "keccak-asm") (r "^0.1.0") (o #t) (k 0)) (d (n "postgres-types") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("getrandom"))) (o #t) (k 0)) (d (n "ruint") (r "^1.11.1") (f (quote ("alloc"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 2)) (d (n "tiny-keccak") (r "^2.0") (f (quote ("keccak"))) (d #t) (k 0)))) (h "1w46pvniwl2c8b2shy3blcff0mykncilw2cwj1nkpql1vvc383b0") (f (quote (("tiny-keccak") ("native-keccak") ("hex-compat" "hex/hex") ("default" "std")))) (s 2) (e (quote (("std" "bytes/std" "hex/std" "ruint/std" "alloy-rlp?/std" "keccak-asm?/std" "proptest?/std" "rand?/std" "serde?/std" "k256?/std") ("ssz" "std" "dep:ethereum_ssz" "ruint/ssz") ("serde" "dep:serde" "bytes/serde" "hex/serde" "ruint/serde") ("rlp" "dep:alloy-rlp" "ruint/alloy-rlp") ("rand" "dep:rand" "getrandom" "ruint/rand") ("postgres" "std" "dep:postgres-types" "ruint/postgres") ("k256" "dep:k256") ("getrandom" "dep:getrandom") ("asm-keccak" "dep:keccak-asm") ("arbitrary" "std" "dep:arbitrary" "dep:derive_arbitrary" "dep:proptest" "dep:proptest-derive" "ruint/arbitrary" "ruint/proptest" "ethereum_ssz?/arbitrary") ("allocative" "dep:allocative")))) (r "1.65")))

(define-public crate-alloy-primitives-0.7.0 (c (n "alloy-primitives") (v "0.7.0") (d (list (d (n "allocative") (r "^0.3.2") (o #t) (k 0)) (d (n "alloy-rlp") (r "^0.3") (o #t) (k 0)) (d (n "arbitrary") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "bytes") (r "^1") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "derive_arbitrary") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ethereum_ssz") (r "^0.5.3") (o #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^1.10") (f (quote ("alloc"))) (k 0) (p "const-hex")) (d (n "hex-literal") (r "^0.4") (d #t) (k 0)) (d (n "itoa") (r "^1") (d #t) (k 0)) (d (n "k256") (r "^0.13") (f (quote ("ecdsa"))) (o #t) (k 0)) (d (n "keccak-asm") (r "^0.1.0") (o #t) (k 0)) (d (n "postgres-types") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("getrandom"))) (o #t) (k 0)) (d (n "ruint") (r "^1.11.1") (f (quote ("alloc"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 2)) (d (n "tiny-keccak") (r "^2.0") (f (quote ("keccak"))) (d #t) (k 0)))) (h "0fhzxqc465q3bdv1g5lp1gh09vyrmkyvppdmq6pg93jqdc5avfwr") (f (quote (("tiny-keccak") ("native-keccak") ("hex-compat" "hex/hex") ("default" "std")))) (s 2) (e (quote (("std" "bytes/std" "hex/std" "ruint/std" "alloy-rlp?/std" "keccak-asm?/std" "proptest?/std" "rand?/std" "serde?/std" "k256?/std") ("ssz" "std" "dep:ethereum_ssz" "ruint/ssz") ("serde" "dep:serde" "bytes/serde" "hex/serde" "ruint/serde") ("rlp" "dep:alloy-rlp" "ruint/alloy-rlp") ("rand" "dep:rand" "getrandom" "ruint/rand") ("postgres" "std" "dep:postgres-types" "ruint/postgres") ("k256" "dep:k256") ("getrandom" "dep:getrandom") ("asm-keccak" "dep:keccak-asm") ("arbitrary" "std" "dep:arbitrary" "dep:derive_arbitrary" "dep:proptest" "dep:proptest-derive" "ruint/arbitrary" "ruint/proptest" "ethereum_ssz?/arbitrary") ("allocative" "dep:allocative")))) (r "1.65")))

(define-public crate-alloy-primitives-0.7.1 (c (n "alloy-primitives") (v "0.7.1") (d (list (d (n "allocative") (r "^0.3.2") (o #t) (k 0)) (d (n "alloy-rlp") (r "^0.3") (o #t) (k 0)) (d (n "arbitrary") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "bytes") (r "^1") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "derive_arbitrary") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ethereum_ssz") (r "^0.5.3") (o #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^1.10") (f (quote ("alloc"))) (k 0) (p "const-hex")) (d (n "hex-literal") (r "^0.4") (d #t) (k 0)) (d (n "itoa") (r "^1") (d #t) (k 0)) (d (n "k256") (r "^0.13") (f (quote ("ecdsa"))) (o #t) (k 0)) (d (n "keccak-asm") (r "^0.1.0") (o #t) (k 0)) (d (n "postgres-types") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("getrandom"))) (o #t) (k 0)) (d (n "ruint") (r "^1.11.1") (f (quote ("alloc"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 2)) (d (n "tiny-keccak") (r "^2.0") (f (quote ("keccak"))) (d #t) (k 0)))) (h "0yv3xqk01qnir54czliaq0f0zvz26pysp7g75gis3bq5jwj1bish") (f (quote (("tiny-keccak") ("native-keccak") ("hex-compat" "hex/hex") ("default" "std")))) (s 2) (e (quote (("std" "bytes/std" "hex/std" "ruint/std" "alloy-rlp?/std" "keccak-asm?/std" "proptest?/std" "rand?/std" "serde?/std" "k256?/std") ("ssz" "std" "dep:ethereum_ssz" "ruint/ssz") ("serde" "dep:serde" "bytes/serde" "hex/serde" "ruint/serde") ("rlp" "dep:alloy-rlp" "ruint/alloy-rlp") ("rand" "dep:rand" "getrandom" "ruint/rand") ("postgres" "std" "dep:postgres-types" "ruint/postgres") ("k256" "dep:k256") ("getrandom" "dep:getrandom") ("asm-keccak" "dep:keccak-asm") ("arbitrary" "std" "dep:arbitrary" "dep:derive_arbitrary" "dep:proptest" "dep:proptest-derive" "ruint/arbitrary" "ruint/proptest" "ethereum_ssz?/arbitrary") ("allocative" "dep:allocative")))) (r "1.65")))

(define-public crate-alloy-primitives-0.7.2 (c (n "alloy-primitives") (v "0.7.2") (d (list (d (n "allocative") (r "^0.3.2") (o #t) (k 0)) (d (n "alloy-rlp") (r "^0.3") (o #t) (k 0)) (d (n "arbitrary") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "bytes") (r "^1") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "derive_arbitrary") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ethereum_ssz") (r "^0.5.3") (o #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^1.10") (f (quote ("alloc"))) (k 0) (p "const-hex")) (d (n "hex-literal") (r "^0.4") (d #t) (k 0)) (d (n "itoa") (r "^1") (d #t) (k 0)) (d (n "k256") (r "^0.13") (f (quote ("ecdsa"))) (o #t) (k 0)) (d (n "keccak-asm") (r "^0.1.0") (o #t) (k 0)) (d (n "postgres-types") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("getrandom"))) (o #t) (k 0)) (d (n "ruint") (r "^1.11.1") (f (quote ("alloc"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 2)) (d (n "tiny-keccak") (r "^2.0") (f (quote ("keccak"))) (d #t) (k 0)))) (h "1cz6r9ja572032mj7avq8r1mwbxz65b19a6hz780vdy1mzv4hm2j") (f (quote (("tiny-keccak") ("native-keccak") ("hex-compat" "hex/hex") ("default" "std")))) (s 2) (e (quote (("std" "bytes/std" "hex/std" "ruint/std" "alloy-rlp?/std" "keccak-asm?/std" "proptest?/std" "rand?/std" "serde?/std" "k256?/std") ("ssz" "std" "dep:ethereum_ssz" "ruint/ssz") ("serde" "dep:serde" "bytes/serde" "hex/serde" "ruint/serde") ("rlp" "dep:alloy-rlp" "ruint/alloy-rlp") ("rand" "dep:rand" "getrandom" "ruint/rand") ("postgres" "std" "dep:postgres-types" "ruint/postgres") ("k256" "dep:k256") ("getrandom" "dep:getrandom") ("asm-keccak" "dep:keccak-asm") ("arbitrary" "std" "dep:arbitrary" "dep:derive_arbitrary" "dep:proptest" "dep:proptest-derive" "ruint/arbitrary" "ruint/proptest" "ethereum_ssz?/arbitrary") ("allocative" "dep:allocative")))) (r "1.65")))

(define-public crate-alloy-primitives-0.7.3 (c (n "alloy-primitives") (v "0.7.3") (d (list (d (n "allocative") (r "^0.3.2") (o #t) (k 0)) (d (n "alloy-rlp") (r "^0.3") (o #t) (k 0)) (d (n "arbitrary") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "bytes") (r "^1") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "derive_arbitrary") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ethereum_ssz") (r "^0.5.3") (o #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^1.10") (f (quote ("alloc"))) (k 0) (p "const-hex")) (d (n "hex-literal") (r "^0.4") (d #t) (k 0)) (d (n "itoa") (r "^1") (d #t) (k 0)) (d (n "k256") (r "^0.13") (f (quote ("ecdsa"))) (o #t) (k 0)) (d (n "keccak-asm") (r "^0.1.0") (o #t) (k 0)) (d (n "postgres-types") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("getrandom"))) (o #t) (k 0)) (d (n "ruint") (r "^1.11.1") (f (quote ("alloc"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 2)) (d (n "tiny-keccak") (r "^2.0") (f (quote ("keccak"))) (d #t) (k 0)))) (h "0f0rgjjbh499ziya4fqzlzkhm9f05grdkz15x60sqaq3ii46yijw") (f (quote (("tiny-keccak") ("native-keccak") ("hex-compat" "hex/hex") ("default" "std")))) (s 2) (e (quote (("std" "bytes/std" "hex/std" "ruint/std" "alloy-rlp?/std" "keccak-asm?/std" "proptest?/std" "rand?/std" "serde?/std" "k256?/std") ("ssz" "std" "dep:ethereum_ssz" "ruint/ssz") ("serde" "dep:serde" "bytes/serde" "hex/serde" "ruint/serde") ("rlp" "dep:alloy-rlp" "ruint/alloy-rlp") ("rand" "dep:rand" "getrandom" "ruint/rand") ("postgres" "std" "dep:postgres-types" "ruint/postgres") ("k256" "dep:k256") ("getrandom" "dep:getrandom") ("asm-keccak" "dep:keccak-asm") ("arbitrary" "std" "dep:arbitrary" "dep:derive_arbitrary" "dep:proptest" "dep:proptest-derive" "ruint/arbitrary" "ruint/proptest" "ethereum_ssz?/arbitrary") ("allocative" "dep:allocative")))) (r "1.65")))

(define-public crate-alloy-primitives-0.7.4 (c (n "alloy-primitives") (v "0.7.4") (d (list (d (n "allocative") (r "^0.3.2") (o #t) (k 0)) (d (n "alloy-rlp") (r "^0.3") (o #t) (k 0)) (d (n "arbitrary") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "bytes") (r "^1") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "derive_arbitrary") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "ethereum_ssz") (r "^0.5.3") (o #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^1.10") (f (quote ("alloc"))) (k 0) (p "const-hex")) (d (n "hex-literal") (r "^0.4") (d #t) (k 0)) (d (n "itoa") (r "^1") (d #t) (k 0)) (d (n "k256") (r "^0.13") (f (quote ("ecdsa"))) (o #t) (k 0)) (d (n "keccak-asm") (r "^0.1.0") (o #t) (k 0)) (d (n "postgres-types") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("getrandom"))) (o #t) (k 0)) (d (n "ruint") (r "^1.11.1") (f (quote ("alloc"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 2)) (d (n "tiny-keccak") (r "^2.0") (f (quote ("keccak"))) (d #t) (k 0)))) (h "06r3ink2knzkb59m5c80knf291x7mvw6ldd921l37v27wrrsk2nv") (f (quote (("tiny-keccak") ("native-keccak") ("hex-compat" "hex/hex") ("default" "std")))) (s 2) (e (quote (("std" "bytes/std" "hex/std" "ruint/std" "alloy-rlp?/std" "keccak-asm?/std" "proptest?/std" "rand?/std" "serde?/std" "k256?/std") ("ssz" "std" "dep:ethereum_ssz" "ruint/ssz") ("serde" "dep:serde" "bytes/serde" "hex/serde" "ruint/serde") ("rlp" "dep:alloy-rlp" "ruint/alloy-rlp") ("rand" "dep:rand" "getrandom" "ruint/rand") ("postgres" "std" "dep:postgres-types" "ruint/postgres") ("k256" "dep:k256") ("getrandom" "dep:getrandom") ("asm-keccak" "dep:keccak-asm") ("arbitrary" "std" "dep:arbitrary" "dep:derive_arbitrary" "dep:proptest" "dep:proptest-derive" "ruint/arbitrary" "ruint/proptest" "ethereum_ssz?/arbitrary") ("allocative" "dep:allocative")))) (r "1.65")))

