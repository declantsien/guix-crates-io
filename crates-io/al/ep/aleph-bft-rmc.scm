(define-module (crates-io al ep aleph-bft-rmc) #:use-module (crates-io))

(define-public crate-aleph-bft-rmc-0.2.0 (c (n "aleph-bft-rmc") (v "0.2.0") (d (list (d (n "aleph-bft-crypto") (r "^0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "codec") (r "^2") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "tokio") (r "^1.6.1") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 2)))) (h "1dpwrjda69hibn835ln71z748j7i2p8qmsqgzsvs8s7hzqg02xxq")))

(define-public crate-aleph-bft-rmc-0.3.0 (c (n "aleph-bft-rmc") (v "0.3.0") (d (list (d (n "aleph-bft-crypto") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "codec") (r "^3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "tokio") (r "^1.6.1") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 2)))) (h "0b1zmj56cg9v73wa87ibh259hrvkdmkn19rwxg36796asnzbi935")))

(define-public crate-aleph-bft-rmc-0.3.1 (c (n "aleph-bft-rmc") (v "0.3.1") (d (list (d (n "aleph-bft-crypto") (r "^0.4") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "codec") (r "^3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "tokio") (r "^1.6.1") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 2)))) (h "0h37yn7k9fhgzc5y0nmmkf67cvc1nlag6d227yv98k8w6srpw44j") (y #t)))

(define-public crate-aleph-bft-rmc-0.4.0 (c (n "aleph-bft-rmc") (v "0.4.0") (d (list (d (n "aleph-bft-crypto") (r "^0.4") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "codec") (r "^3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "tokio") (r "^1.6.1") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 2)))) (h "0532mnp5g54an5rny97fs7hj77i1hpkmf4lwms270ri96yf3pfql")))

(define-public crate-aleph-bft-rmc-0.5.0 (c (n "aleph-bft-rmc") (v "0.5.0") (d (list (d (n "aleph-bft-crypto") (r "^0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "codec") (r "^3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "tokio") (r "^1.6.1") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 2)))) (h "11qbk5w6sk7pbd7nxa2gk3zmqgpgal2hjw6c13hc1yphss7rbnzi")))

(define-public crate-aleph-bft-rmc-0.5.1 (c (n "aleph-bft-rmc") (v "0.5.1") (d (list (d (n "aleph-bft-crypto") (r "^0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "codec") (r "^3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "tokio") (r "^1.6.1") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 2)))) (h "1g2kh4n3zhqhbahpvgkhs4ygkr83av04b6la647vs99cmyrag40i")))

(define-public crate-aleph-bft-rmc-0.5.2 (c (n "aleph-bft-rmc") (v "0.5.2") (d (list (d (n "aleph-bft-crypto") (r "^0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "codec") (r "^3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "tokio") (r "^1.6.1") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 2)))) (h "02b2nvpxn4jylhnw9k4126z5b6x8lwzg7j02zl494nvw3b6ighrq")))

(define-public crate-aleph-bft-rmc-0.6.0 (c (n "aleph-bft-rmc") (v "0.6.0") (d (list (d (n "aleph-bft-crypto") (r "^0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "codec") (r "^3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "tokio") (r "^1.6.1") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 2)))) (h "0hlg5vp81z8bfg0diwnfnz7pws2qfg5v0lmlfvgrf97q8m9fchr9")))

(define-public crate-aleph-bft-rmc-0.6.1 (c (n "aleph-bft-rmc") (v "0.6.1") (d (list (d (n "aleph-bft-crypto") (r "^0.6") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "codec") (r "^3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "tokio") (r "^1.6.1") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 2)))) (h "0q9hfn9lvkjf29ki66gpsdzc3l3g4nz98hi2q10gcpfpqd34b8z1")))

(define-public crate-aleph-bft-rmc-0.10.0 (c (n "aleph-bft-rmc") (v "0.10.0") (d (list (d (n "aleph-bft-crypto") (r "^0.7") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "codec") (r "^3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "1lnxag8d25fxnpfchpylrgr45kdc4n0j1is537g36a90c0f6fw24")))

(define-public crate-aleph-bft-rmc-0.11.0 (c (n "aleph-bft-rmc") (v "0.11.0") (d (list (d (n "aleph-bft-crypto") (r "^0.8") (d #t) (k 0)) (d (n "aleph-bft-types") (r "^0.11") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "codec") (r "^3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "0s9hp2l2w4anx920m5h9f6v7jkcv9jprh49qn2qm08n0sbas1091")))

(define-public crate-aleph-bft-rmc-0.11.1 (c (n "aleph-bft-rmc") (v "0.11.1") (d (list (d (n "aleph-bft-crypto") (r "^0.8") (d #t) (k 0)) (d (n "aleph-bft-types") (r "^0.11") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "codec") (r "^3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "1sv1dbanxwjj97gipm4jbp5vscaqgbdmjmw75nbh0d0z3ihjvjdx")))

(define-public crate-aleph-bft-rmc-0.12.0 (c (n "aleph-bft-rmc") (v "0.12.0") (d (list (d (n "aleph-bft-crypto") (r "^0.9") (d #t) (k 0)) (d (n "aleph-bft-types") (r "^0.12") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "codec") (r "^3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "1y20mcihfn1zggqmgm9hc151vprbxfg02mcxjb2ch5q8m4c496jy")))

(define-public crate-aleph-bft-rmc-0.13.0 (c (n "aleph-bft-rmc") (v "0.13.0") (d (list (d (n "aleph-bft-crypto") (r "^0.9") (d #t) (k 0)) (d (n "aleph-bft-types") (r "^0.13") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "codec") (r "^3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "0d4yw3i284i6wyyhj0f98qgzla48bcr24ahnc85zr6p0gbqli2c7")))

