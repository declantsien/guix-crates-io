(define-module (crates-io al ep aleph-bft) #:use-module (crates-io))

(define-public crate-aleph-bft-0.3.0 (c (n "aleph-bft") (v "0.3.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bit-vec") (r "^0.6") (d #t) (k 0)) (d (n "codec") (r "^2") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "libp2p") (r "^0.38") (f (quote ("mdns" "tcp-tokio"))) (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "tokio") (r "^1.6.1") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 2)))) (h "18zxz81830n71pxlprfaapy6gfxxa1g6xnrn8iamjyfb93ddx5vd")))

(define-public crate-aleph-bft-0.3.1 (c (n "aleph-bft") (v "0.3.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bit-vec") (r "^0.6") (d #t) (k 0)) (d (n "codec") (r "^2") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "libp2p") (r "^0.38") (f (quote ("mdns" "tcp-tokio"))) (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "tokio") (r "^1.6.1") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 2)))) (h "1hw2141jrq245a3v4a9jlvxs0851v156zjxl7lcfadaxhr3nr62b")))

(define-public crate-aleph-bft-0.5.2 (c (n "aleph-bft") (v "0.5.2") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bit-vec") (r "^0.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "codec") (r "^2") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "libp2p") (r "^0.39") (f (quote ("mdns" "tcp-tokio"))) (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 2)) (d (n "tokio") (r "^1.6.1") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "unsigned-varint") (r "^0.7.0") (f (quote ("futures" "asynchronous_codec"))) (d #t) (k 2)))) (h "0q6lf3vqsp6798ywdnwjh6lhpgw1l93zhncm7zhyspinar4yrlq0")))

(define-public crate-aleph-bft-0.6.1 (c (n "aleph-bft") (v "0.6.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bit-vec") (r "^0.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "codec") (r "^2") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "libp2p") (r "^0.39") (f (quote ("mdns" "tcp-tokio"))) (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 2)) (d (n "tokio") (r "^1.6.1") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "unsigned-varint") (r "^0.7.0") (f (quote ("futures" "asynchronous_codec"))) (d #t) (k 2)))) (h "0zvvih76mp1m2skx64nvvmw4ak3br4b3c70qpkf750z38svh8ycp")))

(define-public crate-aleph-bft-0.6.4 (c (n "aleph-bft") (v "0.6.4") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bit-vec") (r "^0.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "codec") (r "^2") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "libp2p") (r "^0.39") (f (quote ("mdns" "tcp-tokio"))) (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 2)) (d (n "tokio") (r "^1.6.1") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "unsigned-varint") (r "^0.7.0") (f (quote ("futures" "asynchronous_codec"))) (d #t) (k 2)))) (h "1p3jfd0ldd77qhx687zcwp8ji72qss6d9bggm0krw8bi9kn887g1")))

(define-public crate-aleph-bft-0.7.0 (c (n "aleph-bft") (v "0.7.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bit-vec") (r "^0.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "codec") (r "^2") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "libp2p") (r "^0.39") (f (quote ("mdns" "tcp-tokio"))) (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 2)) (d (n "tokio") (r "^1.6.1") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "unsigned-varint") (r "^0.7.0") (f (quote ("futures" "asynchronous_codec"))) (d #t) (k 2)))) (h "1pxg166ii5wd8qb2dkg1z6aagfy428n3gkng0y40bypaf4xx2zgc")))

(define-public crate-aleph-bft-0.7.1 (c (n "aleph-bft") (v "0.7.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bit-vec") (r "^0.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "codec") (r "^2") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "libp2p") (r "^0.39") (f (quote ("mdns" "tcp-tokio"))) (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 2)) (d (n "tokio") (r "^1.6.1") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "unsigned-varint") (r "^0.7.0") (f (quote ("futures" "asynchronous_codec"))) (d #t) (k 2)))) (h "026sis59r4l2ws5d5d0r67h63kz1g4nm9ypnz352dpa2wb8c6b4p")))

(define-public crate-aleph-bft-0.8.0 (c (n "aleph-bft") (v "0.8.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bit-vec") (r "^0.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "codec") (r "^2") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "libp2p") (r "^0.39") (f (quote ("mdns" "tcp-tokio"))) (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 2)) (d (n "tokio") (r "^1.6.1") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "unsigned-varint") (r "^0.7.0") (f (quote ("futures" "asynchronous_codec"))) (d #t) (k 2)))) (h "1whdlmfl474qwh1226gpb8zkvmh24vb4rdz0irjhnayvmz4442jl")))

(define-public crate-aleph-bft-0.8.3 (c (n "aleph-bft") (v "0.8.3") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bit-vec") (r "^0.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "codec") (r "^2") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "libp2p") (r "^0.39") (f (quote ("mdns" "tcp-tokio"))) (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 2)) (d (n "tokio") (r "^1.6.1") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "unsigned-varint") (r "^0.7.0") (f (quote ("futures" "asynchronous_codec"))) (d #t) (k 2)))) (h "0y175ddjmyr4nlv2x25hqrih605fsa51f6p74c6qxxnqfygvhmis")))

(define-public crate-aleph-bft-0.8.4 (c (n "aleph-bft") (v "0.8.4") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bit-vec") (r "^0.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "codec") (r "^2") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "libp2p") (r "^0.39") (f (quote ("mdns" "tcp-tokio"))) (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "sha3") (r "^0.9.1") (d #t) (k 2)) (d (n "tokio") (r "^1.6.1") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "unsigned-varint") (r "^0.7.0") (f (quote ("futures" "asynchronous_codec"))) (d #t) (k 2)))) (h "0fdd9vq5f2872syv1czpd6w6cin5cs0yvbxp3l9rn022k3njd3ak")))

(define-public crate-aleph-bft-0.12.1 (c (n "aleph-bft") (v "0.12.1") (d (list (d (n "aleph-bft-rmc") (r "^0.2") (d #t) (k 0)) (d (n "aleph-bft-types") (r "^0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "codec") (r "^2") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "tokio") (r "^1.6.1") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 2)))) (h "1y8yzv8y3qfkadka4imv5fss1x5ljmafc2zn7z9qn06awqlqljpv") (f (quote (("initial_unit_collection") ("default" "initial_unit_collection"))))))

(define-public crate-aleph-bft-0.12.2 (c (n "aleph-bft") (v "0.12.2") (d (list (d (n "aleph-bft-rmc") (r "^0.2") (d #t) (k 0)) (d (n "aleph-bft-types") (r "^0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "codec") (r "^2") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "tokio") (r "^1.6.1") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 2)))) (h "0hjg1wpk2d8pij7fdrzzd0qdmpdn278kzz483imjm4ic2w06slrm") (f (quote (("initial_unit_collection") ("default" "initial_unit_collection"))))))

(define-public crate-aleph-bft-0.13.0 (c (n "aleph-bft") (v "0.13.0") (d (list (d (n "aleph-bft-rmc") (r "^0.3") (d #t) (k 0)) (d (n "aleph-bft-types") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "codec") (r "^3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "tokio") (r "^1.6.1") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 2)))) (h "0l0d9g8qa21d5qljdinv6js9b9cq9k24728bv999l3h9w8x3miq5") (f (quote (("initial_unit_collection") ("default" "initial_unit_collection"))))))

(define-public crate-aleph-bft-0.13.1 (c (n "aleph-bft") (v "0.13.1") (d (list (d (n "aleph-bft-rmc") (r "^0.3") (d #t) (k 0)) (d (n "aleph-bft-types") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "codec") (r "^3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "tokio") (r "^1.6.1") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 2)))) (h "01cfnf0hr7klhw5kns9f0a19mdrbl9lwgm9rx8yld7nlx9xn38hc") (f (quote (("initial_unit_collection") ("default" "initial_unit_collection"))))))

(define-public crate-aleph-bft-0.14.0 (c (n "aleph-bft") (v "0.14.0") (d (list (d (n "aleph-bft-rmc") (r "^0.3") (d #t) (k 0)) (d (n "aleph-bft-types") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "codec") (r "^3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "tokio") (r "^1.6.1") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 2)))) (h "1cg6c0h3ha4mapqkk7xp6vhw1i1280ypjzchn2nwm9syrd1k6gpj") (f (quote (("initial_unit_collection") ("default" "initial_unit_collection"))))))

(define-public crate-aleph-bft-0.14.1 (c (n "aleph-bft") (v "0.14.1") (d (list (d (n "aleph-bft-rmc") (r "^0.3") (d #t) (k 0)) (d (n "aleph-bft-types") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "codec") (r "^3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "tokio") (r "^1.6.1") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 2)))) (h "012ka26yfdj6hmgn6775jnbhy5xif9kbm27zxhja3dd93q4zaqdd") (f (quote (("initial_unit_collection") ("default" "initial_unit_collection"))))))

(define-public crate-aleph-bft-0.14.2 (c (n "aleph-bft") (v "0.14.2") (d (list (d (n "aleph-bft-rmc") (r "^0.3") (d #t) (k 0)) (d (n "aleph-bft-types") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "codec") (r "^3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "tokio") (r "^1.6.1") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 2)))) (h "1340c6dgsjhg8hi96mcrdvjkk36l3z6pcalhprxzahvwrv2gzbjh") (f (quote (("initial_unit_collection") ("default" "initial_unit_collection"))))))

(define-public crate-aleph-bft-0.15.0 (c (n "aleph-bft") (v "0.15.0") (d (list (d (n "aleph-bft-rmc") (r "^0.3") (d #t) (k 0)) (d (n "aleph-bft-types") (r "^0.4") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "codec") (r "^3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "tokio") (r "^1.6.1") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 2)))) (h "14nfnq72dgiswny4gn5g2ghbn6qyvqv6j9lqadimh2prmdl0glsh") (f (quote (("initial_unit_collection") ("default" "initial_unit_collection"))))))

(define-public crate-aleph-bft-0.15.1 (c (n "aleph-bft") (v "0.15.1") (d (list (d (n "aleph-bft-rmc") (r "^0.3") (d #t) (k 0)) (d (n "aleph-bft-types") (r "^0.4") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "codec") (r "^3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "tokio") (r "^1.6.1") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 2)))) (h "18lm5f8hnfzx8x3yvvxy2f4bblfgg8mrjbgh5pkw1swm14k5qxa7") (f (quote (("initial_unit_collection") ("default" "initial_unit_collection"))))))

(define-public crate-aleph-bft-0.16.0 (c (n "aleph-bft") (v "0.16.0") (d (list (d (n "aleph-bft-rmc") (r "^0.3") (d #t) (k 0)) (d (n "aleph-bft-types") (r "^0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "codec") (r "^3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "tokio") (r "^1.6.1") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 2)))) (h "1cgwpzfagrnzszyy22m4yilyqg3rndwdn7blk3r3nw5v0xm42bhn") (f (quote (("initial_unit_collection") ("default" "initial_unit_collection"))))))

(define-public crate-aleph-bft-0.17.0 (c (n "aleph-bft") (v "0.17.0") (d (list (d (n "aleph-bft-rmc") (r "^0.4") (d #t) (k 0)) (d (n "aleph-bft-types") (r "^0.6") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "codec") (r "^3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "tokio") (r "^1.6.1") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 2)))) (h "163ildkr5v96adygrraf3vinj5d3dcqxjb6byfjk853wfw5wlnlm") (f (quote (("initial_unit_collection") ("default" "initial_unit_collection"))))))

(define-public crate-aleph-bft-0.18.0 (c (n "aleph-bft") (v "0.18.0") (d (list (d (n "aleph-bft-rmc") (r "^0.4") (d #t) (k 0)) (d (n "aleph-bft-types") (r "^0.6") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "codec") (r "^3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.8.0") (d #t) (k 2)) (d (n "tokio") (r "^1.6.1") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 2)))) (h "07lbjy5cfjpc3dc50awg6pd7h701sb5zvkg7cmdqidkvxcsxd8r2") (f (quote (("initial_unit_collection") ("default" "initial_unit_collection"))))))

(define-public crate-aleph-bft-0.18.1 (c (n "aleph-bft") (v "0.18.1") (d (list (d (n "aleph-bft-rmc") (r "^0.4") (d #t) (k 0)) (d (n "aleph-bft-types") (r "^0.6") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "codec") (r "^3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.8.0") (d #t) (k 2)) (d (n "tokio") (r "^1.6.1") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 2)))) (h "144g5jm2w5py2mnc76j9zxnvmjpzgnrwhax3glwrsc665am85yp5") (f (quote (("initial_unit_collection") ("default" "initial_unit_collection"))))))

(define-public crate-aleph-bft-0.18.2 (c (n "aleph-bft") (v "0.18.2") (d (list (d (n "aleph-bft-rmc") (r "^0.4") (d #t) (k 0)) (d (n "aleph-bft-types") (r "^0.6") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "codec") (r "^3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.8.0") (d #t) (k 2)) (d (n "tokio") (r "^1.6.1") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 2)))) (h "0333chaa1rzx9j4gb99hzhvpbbkfhrip98lmr3ssrca09nygh0nq") (f (quote (("initial_unit_collection") ("default" "initial_unit_collection"))))))

(define-public crate-aleph-bft-0.19.0 (c (n "aleph-bft") (v "0.19.0") (d (list (d (n "aleph-bft-rmc") (r "^0.5") (d #t) (k 0)) (d (n "aleph-bft-types") (r "^0.7") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "codec") (r "^3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.8.0") (d #t) (k 2)) (d (n "tokio") (r "^1.6.1") (f (quote ("macros" "rt" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "1lsyid4bmwxn3vn095ff71788hin6s03bvns1xdnbyyamabh4mir") (f (quote (("initial_unit_collection") ("default" "initial_unit_collection"))))))

(define-public crate-aleph-bft-0.19.1 (c (n "aleph-bft") (v "0.19.1") (d (list (d (n "aleph-bft-rmc") (r "^0.5") (d #t) (k 0)) (d (n "aleph-bft-types") (r "^0.7") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "codec") (r "^3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.8.0") (d #t) (k 2)) (d (n "tokio") (r "^1.6.1") (f (quote ("macros" "rt" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "0y24nyp773qyy9930aw7z47zv9d81j3g5nrpdl8fch7wz35jyibz") (f (quote (("initial_unit_collection") ("default" "initial_unit_collection"))))))

(define-public crate-aleph-bft-0.19.2 (c (n "aleph-bft") (v "0.19.2") (d (list (d (n "aleph-bft-rmc") (r "^0.5") (d #t) (k 0)) (d (n "aleph-bft-types") (r "^0.7") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "codec") (r "^3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.8.0") (d #t) (k 2)) (d (n "tokio") (r "^1.6.1") (f (quote ("macros" "rt" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "172br6vvpp67m7g0ddjy0zyizmwhl0f1nywyli03va1y8z00q6c1") (f (quote (("initial_unit_collection") ("default" "initial_unit_collection"))))))

(define-public crate-aleph-bft-0.19.3 (c (n "aleph-bft") (v "0.19.3") (d (list (d (n "aleph-bft-rmc") (r "^0.5") (d #t) (k 0)) (d (n "aleph-bft-types") (r "^0.7") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "codec") (r "^3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.8.0") (d #t) (k 2)) (d (n "tokio") (r "^1.6.1") (f (quote ("macros" "rt" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "0b9yffyk1q9wz0wvglfmx8k2xaagjs1hvm2hwdm2n205bvqp3ilw") (f (quote (("initial_unit_collection") ("default" "initial_unit_collection"))))))

(define-public crate-aleph-bft-0.20.0 (c (n "aleph-bft") (v "0.20.0") (d (list (d (n "aleph-bft-rmc") (r "^0.5") (d #t) (k 0)) (d (n "aleph-bft-types") (r "^0.7") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "codec") (r "^3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.8.0") (d #t) (k 2)) (d (n "tokio") (r "^1.6.1") (f (quote ("macros" "rt" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "1ial9rv1cmp01pq24vcr11prrrh7q5ym8gvpd53nls5qlln3x2h5") (f (quote (("initial_unit_collection") ("default" "initial_unit_collection"))))))

(define-public crate-aleph-bft-0.20.1 (c (n "aleph-bft") (v "0.20.1") (d (list (d (n "aleph-bft-rmc") (r "^0.5") (d #t) (k 0)) (d (n "aleph-bft-types") (r "^0.7") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "codec") (r "^3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.8.0") (d #t) (k 2)) (d (n "tokio") (r "^1.6.1") (f (quote ("macros" "rt" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "0shfss218ry89k9ysq7f9vx4p84gncs54fq9v4kp7x3v8ma0l5l1") (f (quote (("initial_unit_collection") ("default" "initial_unit_collection"))))))

(define-public crate-aleph-bft-0.20.2 (c (n "aleph-bft") (v "0.20.2") (d (list (d (n "aleph-bft-rmc") (r "^0.6") (d #t) (k 0)) (d (n "aleph-bft-types") (r "^0.7") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "codec") (r "^3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.8.0") (d #t) (k 2)) (d (n "tokio") (r "^1.6.1") (f (quote ("macros" "rt" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "0rk0njgjniyyiv7l2qmizq24h45zq6hnk9i970xax8gqwdz63rmg") (f (quote (("initial_unit_collection") ("default" "initial_unit_collection"))))))

(define-public crate-aleph-bft-0.20.3 (c (n "aleph-bft") (v "0.20.3") (d (list (d (n "aleph-bft-rmc") (r "^0.6") (d #t) (k 0)) (d (n "aleph-bft-types") (r "^0.8") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "codec") (r "^3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.8.0") (d #t) (k 2)) (d (n "tokio") (r "^1.6.1") (f (quote ("macros" "rt" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "1vjv831rq0nd3lank4kh26cv943l4g85fjhr3yfizhbyw5gmg18h") (f (quote (("initial_unit_collection") ("default" "initial_unit_collection"))))))

(define-public crate-aleph-bft-0.20.4 (c (n "aleph-bft") (v "0.20.4") (d (list (d (n "aleph-bft-rmc") (r "^0.6") (d #t) (k 0)) (d (n "aleph-bft-types") (r "^0.8") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "codec") (r "^3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.8.0") (d #t) (k 2)) (d (n "tokio") (r "^1.6.1") (f (quote ("macros" "rt" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "13z5hrz84rsd50rxx2yvnrzj60r7jmzhiky0ldhlry17scf8lwkb") (f (quote (("initial_unit_collection") ("default" "initial_unit_collection"))))))

(define-public crate-aleph-bft-0.20.5 (c (n "aleph-bft") (v "0.20.5") (d (list (d (n "aleph-bft-rmc") (r "^0.6") (d #t) (k 0)) (d (n "aleph-bft-types") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "codec") (r "^3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^0.8.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.6.1") (f (quote ("macros" "rt" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "0kfwbfxi5x1k2h5c33vkzkb1fxrp4z873kxgrsa127s8slbh3rx3") (f (quote (("initial_unit_collection") ("default" "initial_unit_collection"))))))

(define-public crate-aleph-bft-0.30.0 (c (n "aleph-bft") (v "0.30.0") (d (list (d (n "aleph-bft-rmc") (r "^0.10") (d #t) (k 0)) (d (n "aleph-bft-types") (r "^0.10") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "codec") (r "^3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "0mkfyhcj2ivd5l4rrjbk28csdb06f5g1lrh1sva8m1hv3280h1dv") (f (quote (("initial_unit_collection") ("default" "initial_unit_collection"))))))

(define-public crate-aleph-bft-0.33.0 (c (n "aleph-bft") (v "0.33.0") (d (list (d (n "aleph-bft-rmc") (r "^0.11") (d #t) (k 0)) (d (n "aleph-bft-types") (r "^0.11") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "codec") (r "^3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "0b5zbbg23aidz2cwfy11avy71fcljyp923vir9i7hviq1cnnga30") (f (quote (("initial_unit_collection") ("default" "initial_unit_collection"))))))

(define-public crate-aleph-bft-0.33.1 (c (n "aleph-bft") (v "0.33.1") (d (list (d (n "aleph-bft-rmc") (r "^0.11") (d #t) (k 0)) (d (n "aleph-bft-types") (r "^0.11") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "codec") (r "^3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^3.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "0qbvsqirf68sc9ggfmly99mxxarb2ryrqs8vm3d6q9rqh5jc5nr1") (f (quote (("initial_unit_collection") ("default" "initial_unit_collection"))))))

(define-public crate-aleph-bft-0.33.2 (c (n "aleph-bft") (v "0.33.2") (d (list (d (n "aleph-bft-rmc") (r "^0.11") (d #t) (k 0)) (d (n "aleph-bft-types") (r "^0.11") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "codec") (r "^3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^3.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "07fzln613cr8cjxl520w2n3pgf6dinxnizkbpykd4m4vsx28zcav") (f (quote (("initial_unit_collection") ("default" "initial_unit_collection"))))))

(define-public crate-aleph-bft-0.34.0 (c (n "aleph-bft") (v "0.34.0") (d (list (d (n "aleph-bft-rmc") (r "^0.11") (d #t) (k 0)) (d (n "aleph-bft-types") (r "^0.11") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "codec") (r "^3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^3.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "1grj74qhgfl8l85z0n26gm7jikpchj05yb9iz0zvqc3iv29vc2z4") (f (quote (("initial_unit_collection") ("default" "initial_unit_collection"))))))

(define-public crate-aleph-bft-0.34.1 (c (n "aleph-bft") (v "0.34.1") (d (list (d (n "aleph-bft-rmc") (r "^0.11") (d #t) (k 0)) (d (n "aleph-bft-types") (r "^0.11") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "codec") (r "^3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^3.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "00g6p82y20lx8yc430ki0cvlvd4kiavsyd33182a13d6qg3h1byw") (f (quote (("initial_unit_collection") ("default" "initial_unit_collection"))))))

(define-public crate-aleph-bft-0.35.0 (c (n "aleph-bft") (v "0.35.0") (d (list (d (n "aleph-bft-rmc") (r "^0.12") (d #t) (k 0)) (d (n "aleph-bft-types") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "codec") (r "^3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^3.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "19ihdzv6rf1sj1adqd0ha743xy1mii7rdd0yc3345p6w64cr9yxk") (f (quote (("initial_unit_collection") ("default" "initial_unit_collection"))))))

(define-public crate-aleph-bft-0.36.5 (c (n "aleph-bft") (v "0.36.5") (d (list (d (n "aleph-bft-rmc") (r "^0.13") (d #t) (k 0)) (d (n "aleph-bft-types") (r "^0.13") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "codec") (r "^3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serial_test") (r "^3.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt" "rt-multi-thread" "time"))) (d #t) (k 2)))) (h "1kmlfny9b7lhvsc549vdvad9825bbcpyczif88rnbdm6sk0b8c7r") (f (quote (("initial_unit_collection") ("default" "initial_unit_collection"))))))

