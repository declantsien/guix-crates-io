(define-module (crates-io al te alternate) #:use-module (crates-io))

(define-public crate-alternate-0.0.0 (c (n "alternate") (v "0.0.0") (d (list (d (n "anyhow") (r "^1.0.82") (d #t) (k 0)) (d (n "bytes") (r "^1.6.0") (d #t) (k 0)) (d (n "callee") (r "^0.1.4") (d #t) (k 0)) (d (n "clap") (r "^4.5.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.27.0") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "flume") (r "^0.11.0") (d #t) (k 0)) (d (n "portable-pty") (r "^0.8.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.59") (d #t) (k 0)) (d (n "time") (r "^0.3.36") (f (quote ("macros" "formatting"))) (d #t) (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("full" "process" "fs"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.36") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("time" "std" "fmt"))) (d #t) (k 0)) (d (n "tui") (r "^0.26.2") (d #t) (k 0) (p "ratatui")) (d (n "tui-term") (r "^0.1.10") (d #t) (k 0)))) (h "1manh9mb7l1p18dw13qzxs0mlbcynrjv47b53p2nvx8qwlrq27gi")))

