(define-module (crates-io al fr alfred-workflow-rust-project) #:use-module (crates-io))

(define-public crate-alfred-workflow-rust-project-0.0.1-alpha (c (n "alfred-workflow-rust-project") (v "0.0.1-alpha") (d (list (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "security-framework") (r "^2.6.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "1kl0apdaac18a6nzp866s8n85s4vgjw7rfn47kb2l696wpfizip0")))

(define-public crate-alfred-workflow-rust-project-0.0.2-alpha (c (n "alfred-workflow-rust-project") (v "0.0.2-alpha") (d (list (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "log4rs") (r "^1.0.0") (f (quote ("rolling_file_appender"))) (d #t) (k 0)) (d (n "nix") (r "^0.9.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.10") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "rusqlite") (r "^0.27.0") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "security-framework") (r "^2.6.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "1sdcbip009alxw6jmiwy8hipjjd2fcvyg4j1chaglwpgxyyhn9c8")))

(define-public crate-alfred-workflow-rust-project-0.0.3-alpha (c (n "alfred-workflow-rust-project") (v "0.0.3-alpha") (d (list (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "log4rs") (r "^1.0.0") (f (quote ("rolling_file_appender"))) (d #t) (k 0)) (d (n "nix") (r "^0.9.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.10") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "rusqlite") (r "^0.27.0") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "security-framework") (r "^2.6.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "1i4k2sr1hy4r1sagwjdkvpmk0jvsdn1w2ki21msg8jy0kllddc81")))

