(define-module (crates-io al ex alexa-verifier) #:use-module (crates-io))

(define-public crate-alexa-verifier-0.1.0 (c (n "alexa-verifier") (v "0.1.0") (d (list (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "der-parser") (r "^2.1") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.9") (d #t) (k 0)) (d (n "ring") (r "^0.16") (f (quote ("std"))) (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^2.0") (d #t) (k 0)) (d (n "x509-parser") (r "^0.5") (d #t) (k 0)))) (h "1fywsis8lyg3f3aqqv6bv6lc463b01awyihdpyq6i3vgmf9nva5h") (y #t)))

(define-public crate-alexa-verifier-0.1.1 (c (n "alexa-verifier") (v "0.1.1") (d (list (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "der-parser") (r "^2.1") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.9") (d #t) (k 0)) (d (n "ring") (r "^0.16") (f (quote ("std"))) (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^2.0") (d #t) (k 0)) (d (n "x509-parser") (r "^0.5") (d #t) (k 0)))) (h "1r9ldc2lr41h5lm90dp18n5c2764dr8r7gksscjqc7mmcfsgvk06")))

(define-public crate-alexa-verifier-0.1.2 (c (n "alexa-verifier") (v "0.1.2") (d (list (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "der-parser") (r "^2.1") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.9") (d #t) (k 0)) (d (n "ring") (r "^0.16") (f (quote ("std"))) (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^2.0") (d #t) (k 0)) (d (n "x509-parser") (r "^0.5") (d #t) (k 0)))) (h "1kh4fzrdmfd5az58zmbspq8zgr0s8is0g62py2gdb322hk0azs6w")))

(define-public crate-alexa-verifier-0.2.0 (c (n "alexa-verifier") (v "0.2.0") (d (list (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "der-parser") (r "^2.1") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.0-alpha.2") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "ring") (r "^0.16") (f (quote ("std"))) (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^2.0") (d #t) (k 0)) (d (n "x509-parser") (r "^0.5") (d #t) (k 0)))) (h "143drby7npv88g6np53n5fra3ysmfcv0yv4ng1407ak1gj5bi3cy") (f (quote (("sync") ("default" "sync" "async") ("async" "futures-util")))) (y #t)))

(define-public crate-alexa-verifier-0.2.1 (c (n "alexa-verifier") (v "0.2.1") (d (list (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "der-parser") (r "^2.1") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.0-alpha.2") (d #t) (k 0)) (d (n "ring") (r "^0.16") (f (quote ("std"))) (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^2.0") (d #t) (k 0)) (d (n "x509-parser") (r "^0.5") (d #t) (k 0)))) (h "0lhycz2j9j4pylh4kd6fsnid7aixxq6p0dixsx60ixnw283isyy3") (f (quote (("sync" "reqwest/blocking") ("default" "sync" "async") ("async" "futures-util"))))))

