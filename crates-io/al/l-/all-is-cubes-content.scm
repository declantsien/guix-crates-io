(define-module (crates-io al l- all-is-cubes-content) #:use-module (crates-io))

(define-public crate-all-is-cubes-content-0.3.0 (c (n "all-is-cubes-content") (v "0.3.0") (d (list (d (n "all-is-cubes") (r "^0.3.0") (d #t) (k 0)) (d (n "instant") (r "^0.1.9") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (k 0)) (d (n "noise") (r "^0.7.0") (k 0)) (d (n "rand") (r "^0.8.2") (k 0)) (d (n "rand_xoshiro") (r "^0.6.0") (d #t) (k 0)) (d (n "strum") (r "^0.21.0") (f (quote ("derive"))) (d #t) (k 0)))) (h "1q9m8r9gcd3mrrwvga55m7nhlp8finqsgk4i25xcwv2aknnyx2bf")))

(define-public crate-all-is-cubes-content-0.4.0 (c (n "all-is-cubes-content") (v "0.4.0") (d (list (d (n "all-is-cubes") (r "^0.4.0") (d #t) (k 0)) (d (n "arbitrary-crate") (r "^1.0.1") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "arbitrary")) (d (n "futures-core") (r "^0.3.17") (f (quote ("alloc"))) (k 0)) (d (n "futures-executor") (r "^0.3.17") (f (quote ("std"))) (k 2)) (d (n "instant") (r "^0.1.9") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (k 0)) (d (n "macro_rules_attribute") (r "^0.0.2") (d #t) (k 0)) (d (n "maze_generator") (r "^1.1.1") (d #t) (k 0)) (d (n "noise") (r "^0.7.0") (k 0)) (d (n "ordered-float") (r "^2.10.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.2") (k 0)) (d (n "rand_xoshiro") (r "^0.6.0") (d #t) (k 0)) (d (n "strum") (r "^0.23.0") (f (quote ("derive"))) (k 0)))) (h "0lxzazx33321rz1mprlnncb345k9dk6s1dd38yvcnsnhn7cp20dv") (f (quote (("arbitrary" "arbitrary-crate" "all-is-cubes/arbitrary" "rand/std" "rand/std_rng")))) (r "1.56")))

(define-public crate-all-is-cubes-content-0.5.0 (c (n "all-is-cubes-content") (v "0.5.0") (d (list (d (n "all-is-cubes") (r "^0.5.0") (d #t) (k 0)) (d (n "all-is-cubes-ui") (r "^0.5.0") (d #t) (k 0)) (d (n "arbitrary") (r "^1.1.6") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("async_futures" "cargo_bench_support" "html_reports"))) (d #t) (k 2)) (d (n "exhaust") (r "^0.1.0") (d #t) (k 0)) (d (n "futures-core") (r "^0.3.17") (f (quote ("alloc"))) (k 0)) (d (n "futures-executor") (r "^0.3.17") (f (quote ("std"))) (k 2)) (d (n "image") (r "^0.24.2") (k 0)) (d (n "instant") (r "^0.1.9") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (f (quote ("use_alloc"))) (k 0)) (d (n "log") (r "^0.4.14") (k 0)) (d (n "macro_rules_attribute") (r "^0.1.0") (d #t) (k 0)) (d (n "maze_generator") (r "^2.0.0") (d #t) (k 0)) (d (n "noise") (r "^0.8.2") (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.2") (f (quote ("graphmap"))) (k 0)) (d (n "pretty_assertions") (r "^1.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.2") (k 0)) (d (n "rand_xoshiro") (r "^0.6.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (f (quote ("derive"))) (k 0)))) (h "0w6gh84ppgczfh3z8r4v6lxpw9knryivib0ywzas74sfvhai31l4") (s 2) (e (quote (("arbitrary" "dep:arbitrary" "all-is-cubes/arbitrary" "rand/std" "rand/std_rng")))) (r "1.65")))

(define-public crate-all-is-cubes-content-0.6.0 (c (n "all-is-cubes-content") (v "0.6.0") (d (list (d (n "all-is-cubes") (r "^0.6.0") (d #t) (k 0)) (d (n "all-is-cubes-ui") (r "^0.6.0") (d #t) (k 0)) (d (n "arbitrary") (r "^1.1.6") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("cargo_bench_support" "html_reports" "async_futures"))) (d #t) (k 2)) (d (n "exhaust") (r "^0.1.0") (d #t) (k 0)) (d (n "futures-core") (r "^0.3.28") (f (quote ("alloc"))) (k 0)) (d (n "image") (r "^0.24.6") (k 0)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (f (quote ("use_alloc"))) (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "macro_rules_attribute") (r "^0.2.0") (d #t) (k 0)) (d (n "maze_generator") (r "^2.0.0") (d #t) (k 0)) (d (n "noise") (r "^0.8.2") (k 0)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.2") (f (quote ("graphmap"))) (k 0)) (d (n "pretty_assertions") (r "^1.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.2") (k 0)) (d (n "rand_xoshiro") (r "^0.6.0") (d #t) (k 0)) (d (n "strum") (r "^0.25.0") (f (quote ("derive" "derive"))) (k 0)) (d (n "tokio") (r "^1.28.0") (f (quote ("macros" "rt"))) (k 2)))) (h "055n74890v5ymhbjfqji06gj631dp3kkylzlmjn9b2snrahyh36q") (s 2) (e (quote (("arbitrary" "dep:arbitrary" "all-is-cubes/arbitrary")))) (r "1.65")))

(define-public crate-all-is-cubes-content-0.7.0 (c (n "all-is-cubes-content") (v "0.7.0") (d (list (d (n "all-is-cubes") (r "^0.7.0") (d #t) (k 0)) (d (n "all-is-cubes-ui") (r "^0.7.0") (d #t) (k 0)) (d (n "arbitrary") (r "^1.1.6") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio" "cargo_bench_support" "html_reports" "async_futures"))) (d #t) (k 2)) (d (n "exhaust") (r "^0.1.0") (k 0)) (d (n "futures-core") (r "^0.3.28") (f (quote ("alloc"))) (k 0)) (d (n "hashbrown") (r "^0.14.0") (f (quote ("ahash" "inline-more"))) (k 0)) (d (n "itertools") (r "^0.12.0") (f (quote ("use_alloc"))) (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "macro_rules_attribute") (r "^0.2.0") (d #t) (k 0)) (d (n "noise") (r "^0.8.2") (k 0)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.2") (f (quote ("graphmap"))) (k 0)) (d (n "pretty_assertions") (r "^1.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (k 0)) (d (n "rand_xoshiro") (r "^0.6.0") (d #t) (k 0)) (d (n "strum") (r "^0.25.0") (f (quote ("derive" "derive"))) (k 0)) (d (n "tokio") (r "^1.28.0") (f (quote ("macros" "rt"))) (k 2)) (d (n "yield-progress") (r "^0.1.5") (k 2)))) (h "1ifkbjbmrwlw7qd3hy8jfxxvgb5xs6m7k60xw8m0ji6lmliysvxw") (s 2) (e (quote (("arbitrary" "dep:arbitrary" "all-is-cubes/arbitrary")))) (r "1.65")))

