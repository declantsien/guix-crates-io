(define-module (crates-io al iy aliyun-openapi-core-rust-sdk) #:use-module (crates-io))

(define-public crate-aliyun-openapi-core-rust-sdk-0.1.0 (c (n "aliyun-openapi-core-rust-sdk") (v "0.1.0") (d (list (d (n "base64") (r "^0.10.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.20") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2.36") (d #t) (k 0)) (d (n "url") (r "^2.1.0") (d #t) (k 0)))) (h "1w23xanhd5lpyc03xajd1caz0200m90qn6jwccjzhi553kg387r2")))

(define-public crate-aliyun-openapi-core-rust-sdk-0.2.0 (c (n "aliyun-openapi-core-rust-sdk") (v "0.2.0") (d (list (d (n "base64") (r "^0.10.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.20") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2.36") (d #t) (k 0)) (d (n "url") (r "^2.1.0") (d #t) (k 0)))) (h "0dli5ba5idfbx6xcjyp7z45i9b28cihvpi03cc9mwsd1myj6s7qx")))

(define-public crate-aliyun-openapi-core-rust-sdk-0.3.0 (c (n "aliyun-openapi-core-rust-sdk") (v "0.3.0") (d (list (d (n "base64") (r "^0.10.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.20") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2.36") (d #t) (k 0)) (d (n "url") (r "^2.1.0") (d #t) (k 0)))) (h "0fzxasqhmxqj2wmjfw7szxbwbjxky0zi38ka482fpv972rplhsh2")))

(define-public crate-aliyun-openapi-core-rust-sdk-1.0.0 (c (n "aliyun-openapi-core-rust-sdk") (v "1.0.0") (d (list (d (n "anyhow") (r "^1.0.30") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base16ct") (r "^0.1") (f (quote ("std"))) (d #t) (k 0)) (d (n "base64") (r "^0.12.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("io-util" "rt" "sync" "time" "macros"))) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 0)) (d (n "uuid") (r "^1.3") (f (quote ("v4" "fast-rng"))) (d #t) (k 0)))) (h "0jgraziqzzs4ma3i0fgadvq75954k60q09gsk3w6kryhjv139gx8")))

(define-public crate-aliyun-openapi-core-rust-sdk-1.1.0 (c (n "aliyun-openapi-core-rust-sdk") (v "1.1.0") (d (list (d (n "anyhow") (r "^1.0.30") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base16ct") (r "^0.2") (f (quote ("std"))) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("io-util" "rt" "sync" "time" "macros"))) (k 2)) (d (n "url") (r "^2.1.1") (d #t) (k 0)) (d (n "uuid") (r "^1.3") (f (quote ("v4" "fast-rng"))) (d #t) (k 0)))) (h "0hzi55q28ab4vzfbddjgddfi41gz3mv5knwpz7ji574j69kh061i")))

