(define-module (crates-io al iy aliyun-openapi) #:use-module (crates-io))

(define-public crate-aliyun-openapi-0.1.0 (c (n "aliyun-openapi") (v "0.1.0") (d (list (d (n "anyhow") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "base64") (r ">=0.13.0, <0.14.0") (d #t) (k 0)) (d (n "bytes") (r ">=0.5.0, <0.6.0") (d #t) (k 0)) (d (n "chrono") (r ">=0.4.0, <0.5.0") (d #t) (k 0)) (d (n "futures") (r ">=0.3.5, <0.4.0") (d #t) (k 0)) (d (n "lazy_static") (r ">=1.4.0, <2.0.0") (d #t) (k 0)) (d (n "reqwest") (r ">=0.10.0, <0.11.0") (f (quote ("json"))) (d #t) (k 0)) (d (n "rust-crypto") (r ">=0.2.0, <0.3.0") (d #t) (k 0)) (d (n "serde") (r ">=1.0.0, <2.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r ">=1.0.0, <2.0.0") (f (quote ("alloc"))) (k 0)) (d (n "tokio") (r ">=0.2.0, <0.3.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r ">=2.2.0, <3.0.0") (d #t) (k 0)))) (h "1xvy89bqma0qky3md1xmkvasj2swh7vlkr9mljckgfrg93y8vss2")))

(define-public crate-aliyun-openapi-0.2.0 (c (n "aliyun-openapi") (v "0.2.0") (d (list (d (n "anyhow") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "base64") (r ">=0.13.0, <0.14.0") (d #t) (k 0)) (d (n "bytes") (r ">=0.5.0, <0.6.0") (d #t) (k 0)) (d (n "chrono") (r ">=0.4.0, <0.5.0") (d #t) (k 0)) (d (n "futures") (r ">=0.3.5, <0.4.0") (d #t) (k 0)) (d (n "lazy_static") (r ">=1.4.0, <2.0.0") (d #t) (k 0)) (d (n "reqwest") (r ">=0.10.0, <0.11.0") (f (quote ("json"))) (d #t) (k 0)) (d (n "rust-crypto") (r ">=0.2.0, <0.3.0") (d #t) (k 0)) (d (n "serde") (r ">=1.0.0, <2.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r ">=1.0.0, <2.0.0") (f (quote ("alloc"))) (k 0)) (d (n "tokio") (r ">=0.2.0, <0.3.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r ">=2.2.0, <3.0.0") (d #t) (k 0)))) (h "0w8di4n3akykkzvqqlrga5ni5y7k78mifmwhbsqybfrv1r6lbc3j")))

(define-public crate-aliyun-openapi-0.3.0 (c (n "aliyun-openapi") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2.2.0") (d #t) (k 0)))) (h "0p0ym1xdsa2d01zyghwqhblplindirb2llcw7bcd10pf1bg2i2hf")))

