(define-module (crates-io al iy aliyun-oss-client) #:use-module (crates-io))

(define-public crate-aliyun-oss-client-0.1.0 (c (n "aliyun-oss-client") (v "0.1.0") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "quick-xml") (r "^0.22.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.10") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "sha1") (r "^0.10.1") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "03j1h7ql89ikd7fn7m6f7zfla7l2mi7vjam4svlf2l61giyrhr66") (y #t)))

(define-public crate-aliyun-oss-client-0.2.0 (c (n "aliyun-oss-client") (v "0.2.0") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "infer") (r "^0.8.0") (d #t) (k 0)) (d (n "quick-xml") (r "^0.22.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.10") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "sha1") (r "^0.10.1") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "19p8p124104iri4gvahimr1828x70v4xsxjy4sy9c2kvay53i694") (y #t)))

(define-public crate-aliyun-oss-client-0.2.1 (c (n "aliyun-oss-client") (v "0.2.1") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "infer") (r "^0.8.0") (d #t) (k 0)) (d (n "quick-xml") (r "^0.22.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.10") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "sha1") (r "^0.10.1") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "1abdx2allfxxw8hya4aibsmd7v4divjkd0xksxm5k0iz9dqg6602") (y #t)))

(define-public crate-aliyun-oss-client-0.2.2 (c (n "aliyun-oss-client") (v "0.2.2") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "infer") (r "^0.8.0") (d #t) (k 0)) (d (n "quick-xml") (r "^0.22.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.10") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "sha1") (r "^0.10.1") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "0gbqwhjfnb967yg39a54cb1bb4n178ykfvkqiq8bjsxp8r0j57fp") (y #t)))

(define-public crate-aliyun-oss-client-0.2.4 (c (n "aliyun-oss-client") (v "0.2.4") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "infer") (r "^0.8.0") (d #t) (k 0)) (d (n "quick-xml") (r "^0.22.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.10") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "sha1") (r "^0.10.1") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "12ld7550nnq1r8v2iwzkk1mghljp65avz6gq6fm3rlzhc2qip5bb") (y #t)))

(define-public crate-aliyun-oss-client-0.2.5 (c (n "aliyun-oss-client") (v "0.2.5") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "infer") (r "^0.8.0") (d #t) (k 0)) (d (n "quick-xml") (r "^0.23.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.10") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "sha1") (r "^0.10.1") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "0y2ghhdvhrf81bixbl5vl44g0rzhsljs17rkhxdkz19raalg23n6") (y #t)))

(define-public crate-aliyun-oss-client-0.2.6 (c (n "aliyun-oss-client") (v "0.2.6") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "infer") (r "^0.8.0") (d #t) (k 0)) (d (n "quick-xml") (r "^0.23.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.10") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "sha1") (r "^0.10.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "0vjg49hg1xj7wlkkrb4m8dfgnz0pylf01q2439xbm530ag6fyq78") (y #t)))

(define-public crate-aliyun-oss-client-0.3.0 (c (n "aliyun-oss-client") (v "0.3.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "infer") (r "^0.8") (d #t) (k 0)) (d (n "quick-xml") (r "^0.23") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "0w6fmc8q4wqr0qhlzbf5d1d3kpkrcf3x4b9mkh7x569c06wazspi") (y #t)))

(define-public crate-aliyun-oss-client-0.3.1 (c (n "aliyun-oss-client") (v "0.3.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "infer") (r "^0.8") (d #t) (k 0)) (d (n "quick-xml") (r "^0.23") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "0ma3j1s7v088bl9q17g2k8rq3dbjxg6rkbf177xsv4shk4b8my7q") (y #t)))

(define-public crate-aliyun-oss-client-0.4.0 (c (n "aliyun-oss-client") (v "0.4.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "infer") (r "^0.8") (d #t) (k 0)) (d (n "quick-xml") (r "^0.23") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "0s9ml4mb2n4jxjy9nf2kdnl9qxw7inqzf8jc380ax3yk67f00qii") (y #t)))

(define-public crate-aliyun-oss-client-0.4.1 (c (n "aliyun-oss-client") (v "0.4.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "infer") (r "^0.8") (d #t) (k 0)) (d (n "quick-xml") (r "^0.23") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "0dpndy30ilpf7854a0078mfh43965qjfrdm79wxq858yan2h1gcr") (y #t)))

(define-public crate-aliyun-oss-client-0.4.2 (c (n "aliyun-oss-client") (v "0.4.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "infer") (r "^0.8") (d #t) (k 0)) (d (n "quick-xml") (r "^0.23") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "0wvwx5arknalw7b4klabafach94y7md14j881nfir1ajf400x9a9") (y #t)))

(define-public crate-aliyun-oss-client-0.4.3 (c (n "aliyun-oss-client") (v "0.4.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "infer") (r "^0.8") (d #t) (k 0)) (d (n "quick-xml") (r "^0.23") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "16c9qsynww7jw4g4hvk88qdsjfkiy60c76wsnb67fm04sx3zpqs4") (y #t)))

(define-public crate-aliyun-oss-client-0.4.4 (c (n "aliyun-oss-client") (v "0.4.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "infer") (r "^0.8") (d #t) (k 0)) (d (n "quick-xml") (r "^0.23") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "17hhlmsxcadawvp7c29p1cj5gqkvz0zdjvdgcnidb6jm5n0rn57j") (y #t)))

(define-public crate-aliyun-oss-client-0.5.0 (c (n "aliyun-oss-client") (v "0.5.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "infer") (r "^0.8") (d #t) (k 0)) (d (n "quick-xml") (r "^0.23") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0dici79chsniy0ssx29rp2k5x8q013jyjnzkwzy3jfsm2cl101dv") (f (quote (("plugin") ("default" "plugin"))))))

(define-public crate-aliyun-oss-client-0.6.0 (c (n "aliyun-oss-client") (v "0.6.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "infer") (r "^0.8") (d #t) (k 0)) (d (n "quick-xml") (r "^0.23") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("rt" "macros"))) (d #t) (k 2)))) (h "0prgjzvad0sfn14b0s280zb1szhlvxys8ydhipcjy7n3alrr5sil") (f (quote (("plugin") ("default" "plugin") ("blocking" "reqwest/blocking"))))))

(define-public crate-aliyun-oss-client-0.7.0 (c (n "aliyun-oss-client") (v "0.7.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "infer") (r "^0.8") (d #t) (k 0)) (d (n "quick-xml") (r "^0.23") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("rt" "macros"))) (d #t) (k 2)))) (h "07ppvww5ldhsh7xbykqrh8vgm1id3lazp8jsh5v9ny3nv0slhipb") (f (quote (("plugin") ("default" "plugin") ("blocking" "reqwest/blocking"))))))

(define-public crate-aliyun-oss-client-0.7.1 (c (n "aliyun-oss-client") (v "0.7.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "infer") (r "^0.8") (d #t) (k 0)) (d (n "quick-xml") (r "^0.23") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("rt" "macros"))) (d #t) (k 2)))) (h "17cc6b8qw3p9ca3q2zgxz6zshyw9bvvg05rrqsmr6m2lssirwnwq") (f (quote (("plugin") ("default" "plugin") ("blocking" "reqwest/blocking"))))))

(define-public crate-aliyun-oss-client-0.7.2 (c (n "aliyun-oss-client") (v "0.7.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "infer") (r "^0.8") (d #t) (k 0)) (d (n "quick-xml") (r "^0.23") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("rt" "macros"))) (d #t) (k 2)))) (h "1ik2jgz7iwg3zda2925my6n9xpa2542krvmkd9riprflwa0rdcaf") (f (quote (("plugin") ("default" "plugin") ("blocking" "reqwest/blocking"))))))

(define-public crate-aliyun-oss-client-0.7.3 (c (n "aliyun-oss-client") (v "0.7.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "infer") (r "^0.8") (d #t) (k 0)) (d (n "quick-xml") (r "^0.23") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("rt" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "urlencoding") (r "^2.1.0") (d #t) (k 0)))) (h "1vmzdssqaql5v8dk694700jyj9rki1sl1mx03k6y8i5ybs44iv3s") (f (quote (("plugin") ("default" "plugin") ("blocking" "reqwest/blocking"))))))

(define-public crate-aliyun-oss-client-0.7.4 (c (n "aliyun-oss-client") (v "0.7.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "infer") (r "^0.8") (d #t) (k 0)) (d (n "quick-xml") (r "^0.23") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("rt" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "urlencoding") (r "^2.1.0") (d #t) (k 0)))) (h "1adg82k9h7jcym4jjsxpszjws3smykkjir3whi9cxfjpnsp8l4kr") (f (quote (("plugin") ("default" "plugin") ("blocking" "reqwest/blocking"))))))

(define-public crate-aliyun-oss-client-0.7.5 (c (n "aliyun-oss-client") (v "0.7.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "infer") (r "^0.8") (d #t) (k 0)) (d (n "quick-xml") (r "^0.23") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("rt" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "urlencoding") (r "^2.1.0") (d #t) (k 0)))) (h "1amab8zqdc5x2pvcm254f3qyc9yb5v0f6sfdk66p8wgfkvp8y89j") (f (quote (("plugin") ("default" "plugin") ("blocking" "reqwest/blocking"))))))

(define-public crate-aliyun-oss-client-0.7.6 (c (n "aliyun-oss-client") (v "0.7.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "infer") (r "^0.9") (d #t) (k 0)) (d (n "quick-xml") (r "^0.24") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("rt" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "urlencoding") (r "^2") (d #t) (k 0)))) (h "1ic7my7hdaz3pg8yha9jpbcn8bcfsj4dfxlniq22igfdpvlw14fs") (f (quote (("plugin") ("default" "plugin") ("blocking" "reqwest/blocking"))))))

(define-public crate-aliyun-oss-client-0.8.0 (c (n "aliyun-oss-client") (v "0.8.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "infer") (r "^0.11") (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (d #t) (k 2)) (d (n "mockall_double") (r "^0.3.0") (d #t) (k 2)) (d (n "quick-xml") (r "^0.26") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("rt" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "urlencoding") (r "^2") (d #t) (k 0)))) (h "1nr508xz0nr81waygc7v3vpfw6ih20fsagx16qybgkjl6fk7qkqs") (f (quote (("sts") ("default" "sts") ("blocking" "reqwest/blocking" "futures"))))))

(define-public crate-aliyun-oss-client-0.9.0 (c (n "aliyun-oss-client") (v "0.9.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "infer") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (d #t) (k 2)) (d (n "mockall_double") (r "^0.3.0") (d #t) (k 2)) (d (n "quick-xml") (r "^0.26") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("rt" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "urlencoding") (r "^2") (d #t) (k 0)))) (h "1f9kxg99wqkgpqkvli5d6011izs9sypzz3914phsfpifndqiw3zc") (f (quote (("sts") ("put_file" "infer") ("default" "sts" "put_file") ("blocking" "reqwest/blocking" "futures")))) (r "1.62")))

(define-public crate-aliyun-oss-client-0.9.1 (c (n "aliyun-oss-client") (v "0.9.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "infer") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (d #t) (k 2)) (d (n "mockall_double") (r "^0.3.0") (d #t) (k 2)) (d (n "quick-xml") (r "^0.26") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("rt" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "urlencoding") (r "^2") (d #t) (k 0)))) (h "1s7a0zpchna3yp8dhxgs3s65hjq6fsyy5z2mjd9ac9jfxd1h7pzh") (f (quote (("sts") ("put_file" "infer") ("default" "sts" "put_file") ("blocking" "reqwest/blocking" "futures")))) (r "1.62")))

(define-public crate-aliyun-oss-client-0.9.2 (c (n "aliyun-oss-client") (v "0.9.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "infer") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (d #t) (k 2)) (d (n "mockall_double") (r "^0.3.0") (d #t) (k 2)) (d (n "quick-xml") (r "^0.26") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("rt" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "urlencoding") (r "^2") (d #t) (k 0)))) (h "15vhpmhh633vszvhnkwjggf855y1j8zgh112sjz4r73xfvv43kdh") (f (quote (("sts") ("put_file" "infer") ("default" "sts" "put_file") ("blocking" "reqwest/blocking" "futures")))) (r "1.62")))

(define-public crate-aliyun-oss-client-0.9.3 (c (n "aliyun-oss-client") (v "0.9.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "infer") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (d #t) (k 2)) (d (n "mockall_double") (r "^0.3.0") (d #t) (k 2)) (d (n "quick-xml") (r "^0.26") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("rt" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "urlencoding") (r "^2") (d #t) (k 0)))) (h "1g628dirh6i9m3dw1n4c4mq6imcylrag0bnmm1sqcp3yzb1p51zm") (f (quote (("sts") ("put_file" "infer") ("default" "sts" "put_file") ("blocking" "reqwest/blocking" "futures")))) (r "1.62")))

(define-public crate-aliyun-oss-client-0.8.1 (c (n "aliyun-oss-client") (v "0.8.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "infer") (r "^0.11") (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (d #t) (k 2)) (d (n "mockall_double") (r "^0.3.0") (d #t) (k 2)) (d (n "quick-xml") (r "^0.26") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("rt" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "urlencoding") (r "^2") (d #t) (k 0)))) (h "1pwrnyib66r51iwg6vmpl56v7m9rdmxymyllmclh2q8wfgsjz04i") (f (quote (("sts") ("default" "sts") ("blocking" "reqwest/blocking" "futures"))))))

(define-public crate-aliyun-oss-client-0.9.4 (c (n "aliyun-oss-client") (v "0.9.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "infer") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (d #t) (k 2)) (d (n "mockall_double") (r "^0.3.0") (d #t) (k 2)) (d (n "oss_derive") (r "^0.9.4") (d #t) (k 0)) (d (n "quick-xml") (r "^0.26") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("rt" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "urlencoding") (r "^2") (d #t) (k 0)))) (h "0mnyj1qr6kak8x704vvwkymq8vsikf8sqxyaq9q09ri7qq8j4x1r") (f (quote (("sts") ("put_file" "infer") ("default" "sts" "put_file") ("blocking" "reqwest/blocking")))) (r "1.62")))

(define-public crate-aliyun-oss-client-0.9.5 (c (n "aliyun-oss-client") (v "0.9.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "infer") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (d #t) (k 2)) (d (n "mockall_double") (r "^0.3.0") (d #t) (k 2)) (d (n "oss_derive") (r "^0.9.5") (d #t) (k 0)) (d (n "quick-xml") (r "^0.26") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("rt" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "urlencoding") (r "^2") (d #t) (k 0)))) (h "1shfh4k9n5kc051x8pix7fvcglklx1kxq65klcx440b42w1qp6cw") (f (quote (("sts") ("put_file" "infer") ("default" "sts" "put_file") ("blocking" "reqwest/blocking") ("bench")))) (r "1.62")))

(define-public crate-aliyun-oss-client-0.9.6 (c (n "aliyun-oss-client") (v "0.9.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "infer") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (d #t) (k 2)) (d (n "mockall_double") (r "^0.3.0") (d #t) (k 2)) (d (n "oss_derive") (r "^0.9.6") (d #t) (k 0)) (d (n "quick-xml") (r "^0.26") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("rt" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "urlencoding") (r "^2") (d #t) (k 0)))) (h "1p5cdrnw12swpn40wzjn7jxds2lf33r1zcqzz81cpfs94n3npi8b") (f (quote (("sts") ("put_file" "infer") ("default" "sts" "put_file") ("blocking" "reqwest/blocking") ("bench")))) (r "1.62")))

(define-public crate-aliyun-oss-client-0.9.7 (c (n "aliyun-oss-client") (v "0.9.7") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "infer") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (d #t) (k 2)) (d (n "mockall_double") (r "^0.3.0") (d #t) (k 2)) (d (n "oss_derive") (r "^0.9.6") (d #t) (k 0)) (d (n "quick-xml") (r "^0.26") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("rt" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "urlencoding") (r "^2") (d #t) (k 0)))) (h "1vi1fbqzr863r9hrpci54k1inpaixs1yk0fk7dr000swz2c9vqh4") (f (quote (("sts") ("put_file" "infer") ("default" "sts" "put_file") ("blocking" "reqwest/blocking")))) (r "1.62")))

(define-public crate-aliyun-oss-client-0.10.0 (c (n "aliyun-oss-client") (v "0.10.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "infer") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (d #t) (k 2)) (d (n "mockall_double") (r "^0.3.0") (d #t) (k 2)) (d (n "oss_derive") (r "^0.9.6") (d #t) (k 0)) (d (n "quick-xml") (r "^0.26") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("rt" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "urlencoding") (r "^2") (d #t) (k 0)))) (h "00cqy3khacx6lkvdg91q9ry52kkwm305j2735rk12np54c88pshm") (f (quote (("sts") ("put_file" "infer") ("default" "sts" "put_file") ("blocking" "reqwest/blocking")))) (r "1.62")))

(define-public crate-aliyun-oss-client-0.10.1 (c (n "aliyun-oss-client") (v "0.10.1") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "infer") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (d #t) (k 2)) (d (n "mockall_double") (r "^0.3.0") (d #t) (k 2)) (d (n "oss_derive") (r "^0.9.6") (d #t) (k 0)) (d (n "quick-xml") (r "^0.26") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("rt" "macros" "rt-multi-thread"))) (d #t) (k 2)))) (h "0ih85d6pg1qx3k2x4br79z3m7qi9y59rajfpi93pwj6khz0frp70") (f (quote (("sts") ("put_file" "infer") ("default" "sts" "put_file") ("blocking" "reqwest/blocking")))) (r "1.62")))

(define-public crate-aliyun-oss-client-0.11.0 (c (n "aliyun-oss-client") (v "0.11.0") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "infer") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (d #t) (k 2)) (d (n "mockall_double") (r "^0.3.0") (d #t) (k 2)) (d (n "oss_derive") (r "^0.9.7") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.27") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "sha1") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 2)) (d (n "tokio") (r "^1.19.2") (f (quote ("rt" "macros" "rt-multi-thread"))) (d #t) (k 2)))) (h "0jcyc9g56qh05js5drlda7n4sw9bhk06xjba36f06qr80iq139kd") (f (quote (("sts" "core" "auth") ("put_file" "core" "infer") ("default" "core" "sts" "put_file") ("decode" "quick-xml" "oss_derive") ("core" "reqwest" "async-trait" "futures" "futures-core" "async-stream" "thiserror" "chrono" "http" "oss_derive" "auth" "decode") ("blocking" "core" "reqwest/blocking") ("auth" "hmac" "sha1" "base64" "http" "chrono")))) (r "1.62")))

(define-public crate-aliyun-oss-client-0.11.1 (c (n "aliyun-oss-client") (v "0.11.1") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "infer") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (d #t) (k 2)) (d (n "mockall_double") (r "^0.3.0") (d #t) (k 2)) (d (n "oss_derive") (r "^0.9.7") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.27") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "sha1") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 2)) (d (n "tokio") (r "^1.19.2") (f (quote ("rt" "macros" "rt-multi-thread"))) (d #t) (k 2)))) (h "1l8ziizw2x1fmfblxpn222gxvs53gyixsprvc2j57phnqygiycdr") (f (quote (("sts" "core" "auth") ("put_file" "core" "infer") ("default" "core" "sts" "put_file") ("decode" "quick-xml" "oss_derive") ("core" "reqwest" "async-trait" "futures" "futures-core" "async-stream" "thiserror" "chrono" "http" "oss_derive" "auth" "decode") ("blocking" "core" "reqwest/blocking") ("auth" "hmac" "sha1" "base64" "http" "chrono")))) (r "1.62")))

(define-public crate-aliyun-oss-client-0.11.2 (c (n "aliyun-oss-client") (v "0.11.2") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "infer") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (d #t) (k 2)) (d (n "mockall_double") (r "^0.3.0") (d #t) (k 2)) (d (n "oss_derive") (r "^0.9.7") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.27") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "sha1") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 2)) (d (n "tokio") (r "^1.19.2") (f (quote ("rt" "macros" "rt-multi-thread"))) (d #t) (k 2)))) (h "0r6a38cvp67zd6z2ncj1aqqagr5ja6srmg2ih372j7w6m95phqam") (f (quote (("sts" "core" "auth") ("put_file" "core" "infer") ("default" "core" "sts" "put_file") ("decode" "quick-xml" "oss_derive") ("core" "reqwest" "async-trait" "futures" "futures-core" "async-stream" "thiserror" "chrono" "http" "oss_derive" "auth" "decode") ("blocking" "core" "reqwest/blocking") ("auth" "hmac" "sha1" "base64" "http" "chrono")))) (r "1.62")))

(define-public crate-aliyun-oss-client-0.11.3 (c (n "aliyun-oss-client") (v "0.11.3") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "infer") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (d #t) (k 2)) (d (n "mockall_double") (r "^0.3.0") (d #t) (k 2)) (d (n "oss_derive") (r "^0.9.7") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.27") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "sha1") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 2)) (d (n "tokio") (r "^1.19.2") (f (quote ("rt" "macros" "rt-multi-thread"))) (d #t) (k 2)))) (h "0v3k1i0qgk1jczzsjxvci2222a05zim5ijgvkmb61482vkgyjrs3") (f (quote (("sts" "core" "auth") ("put_file" "core" "infer") ("default" "core" "sts" "put_file") ("decode" "quick-xml" "oss_derive") ("core" "reqwest" "async-trait" "futures" "futures-core" "async-stream" "thiserror" "chrono" "http" "oss_derive" "auth" "decode") ("blocking" "core" "reqwest/blocking") ("auth" "hmac" "sha1" "base64" "http" "chrono")))) (r "1.62")))

(define-public crate-aliyun-oss-client-0.11.4 (c (n "aliyun-oss-client") (v "0.11.4") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "infer") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (d #t) (k 2)) (d (n "mockall_double") (r "^0.3.0") (d #t) (k 2)) (d (n "oss_derive") (r "^0.9.7") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.27") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "sha1") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 2)) (d (n "tokio") (r "^1.19.2") (f (quote ("rt" "macros" "rt-multi-thread"))) (d #t) (k 2)))) (h "1mmviss3rdampjp7r155527nxcsmbg59wpi7lm69c7j1la7ckvck") (f (quote (("sts" "core" "auth") ("put_file" "core" "infer") ("default" "core" "sts" "put_file") ("decode" "quick-xml" "oss_derive") ("core" "reqwest" "async-trait" "futures" "futures-core" "async-stream" "thiserror" "chrono" "http" "oss_derive" "auth" "decode") ("blocking" "core" "reqwest/blocking") ("auth" "hmac" "sha1" "base64" "http" "chrono")))) (r "1.62")))

(define-public crate-aliyun-oss-client-0.11.5 (c (n "aliyun-oss-client") (v "0.11.5") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "infer") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (d #t) (k 2)) (d (n "mockall_double") (r "^0.3.0") (d #t) (k 2)) (d (n "oss_derive") (r "^0.9.7") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.27") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "sha1") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 2)) (d (n "tokio") (r "^1.19.2") (f (quote ("rt" "macros" "rt-multi-thread"))) (d #t) (k 2)))) (h "0xmyfbbh7wc9w6m007p4gl2919cc11ylwp56y0hnzdgxpkd4wm1s") (f (quote (("sts" "core" "auth") ("put_file" "core" "infer") ("default" "core" "sts" "put_file") ("decode" "quick-xml" "oss_derive") ("core" "reqwest" "async-trait" "futures" "futures-core" "async-stream" "thiserror" "chrono" "http" "oss_derive" "auth" "decode") ("blocking" "core" "reqwest/blocking") ("auth" "hmac" "sha1" "base64" "http" "chrono")))) (r "1.62")))

(define-public crate-aliyun-oss-client-0.11.6 (c (n "aliyun-oss-client") (v "0.11.6") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "infer") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (d #t) (k 2)) (d (n "mockall_double") (r "^0.3.0") (d #t) (k 2)) (d (n "oss_derive") (r "^0.9.7") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.27") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "sha1") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 2)) (d (n "tokio") (r "^1.19.2") (f (quote ("rt" "macros" "rt-multi-thread"))) (d #t) (k 2)))) (h "0k69a59b6c68plwjfl48c2l8xza7n5gz5gy8im8vngamraimxq6z") (f (quote (("sts" "core" "auth") ("put_file" "core" "infer") ("default" "core" "sts" "put_file") ("decode" "quick-xml" "oss_derive") ("core" "reqwest" "async-trait" "futures" "futures-core" "async-stream" "thiserror" "chrono" "http" "oss_derive" "auth" "decode") ("blocking" "core" "reqwest/blocking") ("auth" "hmac" "sha1" "base64" "http" "chrono")))) (r "1.62")))

(define-public crate-aliyun-oss-client-0.11.7 (c (n "aliyun-oss-client") (v "0.11.7") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "infer") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (d #t) (k 2)) (d (n "mockall_double") (r "^0.3.0") (d #t) (k 2)) (d (n "oss_derive") (r "^0.9.7") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.27") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "sha1") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 2)) (d (n "tokio") (r "^1.19.2") (f (quote ("rt" "macros" "rt-multi-thread"))) (d #t) (k 2)))) (h "0ha6qbpn1icd36xwmx27wq0pv7byn8bvdmnj6wz40d90b35b7341") (f (quote (("sts" "core" "auth") ("put_file" "core" "infer") ("default" "core" "sts" "put_file") ("decode" "quick-xml" "oss_derive") ("core" "reqwest" "async-trait" "futures" "futures-core" "async-stream" "thiserror" "chrono" "http" "oss_derive" "auth" "decode") ("blocking" "core" "reqwest/blocking") ("auth" "hmac" "sha1" "base64" "http" "chrono")))) (r "1.62")))

(define-public crate-aliyun-oss-client-0.11.8 (c (n "aliyun-oss-client") (v "0.11.8") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "infer") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (d #t) (k 2)) (d (n "mockall_double") (r "^0.3.0") (d #t) (k 2)) (d (n "oss_derive") (r "^0.9.7") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.27") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "sha1") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 2)) (d (n "tokio") (r "^1.19.2") (f (quote ("rt" "macros" "rt-multi-thread"))) (d #t) (k 2)))) (h "1hp4zc8rzli8nng5ddy74388av8b4vjb4yg4ws4ngnmzha3zpsw7") (f (quote (("sts" "core" "auth") ("put_file" "core" "infer") ("default" "core" "sts" "put_file") ("decode" "quick-xml" "oss_derive") ("core" "reqwest" "async-trait" "futures" "futures-core" "async-stream" "thiserror" "chrono" "http" "oss_derive" "auth" "decode") ("blocking" "core" "reqwest/blocking") ("auth" "hmac" "sha1" "base64" "http" "chrono")))) (r "1.62")))

(define-public crate-aliyun-oss-client-0.11.9 (c (n "aliyun-oss-client") (v "0.11.9") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "infer") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (d #t) (k 2)) (d (n "mockall_double") (r "^0.3.0") (d #t) (k 2)) (d (n "oss_derive") (r "^0.9.7") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.27") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "sha1") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 2)) (d (n "tokio") (r "^1.19.2") (f (quote ("rt" "macros" "rt-multi-thread"))) (d #t) (k 2)))) (h "0kk2ii04f5mfmib3qnh4hhkxh9wzs4mxgyiyr09qbsbp4xkzrkm3") (f (quote (("sts" "core" "auth") ("put_file" "core" "infer") ("default" "core" "sts" "put_file") ("decode" "quick-xml" "oss_derive") ("core" "reqwest" "async-trait" "futures" "futures-core" "async-stream" "thiserror" "chrono" "http" "oss_derive" "auth" "decode") ("blocking" "core" "reqwest/blocking") ("auth" "hmac" "sha1" "base64" "http" "chrono")))) (r "1.62")))

(define-public crate-aliyun-oss-client-0.12.0 (c (n "aliyun-oss-client") (v "0.12.0") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 2)) (d (n "infer") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (d #t) (k 2)) (d (n "mockall_double") (r "^0.3.0") (d #t) (k 2)) (d (n "oss_derive") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.2.0") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 2)) (d (n "tokio") (r "^1.19.2") (f (quote ("rt" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 2)))) (h "1dlm07047b5s6wxv5mmpf7qc3ciq186jv42wy5d8m9x11435r53s") (f (quote (("sts" "core" "auth") ("put_file" "core" "infer") ("default" "core" "sts" "put_file") ("decode" "quick-xml" "oss_derive") ("core" "reqwest" "async-trait" "futures-core" "async-stream" "thiserror" "oss_derive" "auth" "decode") ("blocking" "core" "reqwest/blocking") ("auth" "reqwest" "percent-encoding")))) (r "1.62")))

(define-public crate-aliyun-oss-client-0.12.1 (c (n "aliyun-oss-client") (v "0.12.1") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 2)) (d (n "infer") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (d #t) (k 2)) (d (n "mockall_double") (r "^0.3.0") (d #t) (k 2)) (d (n "oss_derive") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.2.0") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 2)) (d (n "tokio") (r "^1.19.2") (f (quote ("rt" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 2)))) (h "18khrd4xd09vp3bzcssaczi5yzfn6b95frhbbp6crk0kmgcwzzzn") (f (quote (("sts" "core" "auth") ("put_file" "core" "infer") ("default" "core" "sts" "put_file") ("decode" "quick-xml" "oss_derive") ("core" "reqwest" "async-trait" "futures-core" "async-stream" "thiserror" "oss_derive" "auth" "decode") ("blocking" "core" "reqwest/blocking") ("auth" "reqwest" "percent-encoding")))) (r "1.62")))

(define-public crate-aliyun-oss-client-0.12.2 (c (n "aliyun-oss-client") (v "0.12.2") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 2)) (d (n "infer") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (d #t) (k 2)) (d (n "mockall_double") (r "^0.3.0") (d #t) (k 2)) (d (n "oss_derive") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.2.0") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 2)) (d (n "tokio") (r "^1.19.2") (f (quote ("rt" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 2)))) (h "0pm66zplrps0sqzwaar2h7xpj0sss5jm2rc8lswap2r3z0v01qk5") (f (quote (("sts" "core" "auth") ("put_file" "core" "infer") ("default" "core" "sts" "put_file") ("decode" "quick-xml" "oss_derive") ("core" "reqwest" "async-trait" "futures-core" "async-stream" "thiserror" "oss_derive" "auth" "decode") ("blocking" "core" "reqwest/blocking") ("auth" "reqwest" "percent-encoding")))) (r "1.62")))

(define-public crate-aliyun-oss-client-0.12.3 (c (n "aliyun-oss-client") (v "0.12.3") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 2)) (d (n "infer") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (d #t) (k 2)) (d (n "mockall_double") (r "^0.3.0") (d #t) (k 2)) (d (n "oss_derive") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.2.0") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 2)) (d (n "tokio") (r "^1.19.2") (f (quote ("rt" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 2)))) (h "0iliv3m3l155dklwkgi4afzbyi8dlbhmppx8r9vfvv62vwxg8j5x") (f (quote (("sts" "core" "auth") ("put_file" "core" "infer") ("default" "core" "sts" "put_file") ("decode" "quick-xml" "oss_derive") ("core" "reqwest" "async-trait" "futures-core" "async-stream" "thiserror" "oss_derive" "auth" "decode") ("blocking" "core" "reqwest/blocking") ("auth" "reqwest" "percent-encoding")))) (r "1.62")))

(define-public crate-aliyun-oss-client-0.12.4 (c (n "aliyun-oss-client") (v "0.12.4") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 2)) (d (n "infer") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (d #t) (k 2)) (d (n "mockall_double") (r "^0.3.0") (d #t) (k 2)) (d (n "oss_derive") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.2.0") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 2)) (d (n "tokio") (r "^1.19.2") (f (quote ("rt" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 2)))) (h "05zf7pdriw3x82rcap1p75h2nn9mlcvrwhcp9njf5sibvly21w0n") (f (quote (("sts" "core" "auth") ("put_file" "core" "infer") ("default" "core" "sts" "put_file") ("decode" "quick-xml" "oss_derive") ("core" "reqwest" "async-trait" "futures-core" "async-stream" "thiserror" "oss_derive" "auth" "decode") ("blocking" "core" "reqwest/blocking") ("auth" "reqwest" "percent-encoding")))) (r "1.62")))

(define-public crate-aliyun-oss-client-0.12.5 (c (n "aliyun-oss-client") (v "0.12.5") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 2)) (d (n "infer") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (d #t) (k 2)) (d (n "mockall_double") (r "^0.3.0") (d #t) (k 2)) (d (n "oss_derive") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.2.0") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 2)) (d (n "tokio") (r "^1.19.2") (f (quote ("rt" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 2)))) (h "1ikkh5v6py8y1vxc78nqqxcl2r5d265kp41xnacl58z1fqcs5hy1") (f (quote (("sts" "core" "auth") ("put_file" "core" "infer") ("default" "core" "sts" "put_file") ("decode" "quick-xml" "oss_derive") ("core" "reqwest" "async-trait" "futures-core" "async-stream" "thiserror" "oss_derive" "auth" "decode") ("blocking" "core" "reqwest/blocking") ("auth" "reqwest" "percent-encoding")))) (r "1.62")))

(define-public crate-aliyun-oss-client-0.12.6 (c (n "aliyun-oss-client") (v "0.12.6") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 2)) (d (n "infer") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (d #t) (k 2)) (d (n "mockall_double") (r "^0.3.0") (d #t) (k 2)) (d (n "oss_derive") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.2.0") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 2)) (d (n "tokio") (r "^1.19.2") (f (quote ("rt" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 2)))) (h "0b3x637p3sk9jqmfb4ymdgb1s5nby8x40h3z9bbid4pgq1qzqmyx") (f (quote (("sts" "core" "auth") ("put_file" "core" "infer") ("default" "core" "sts" "put_file") ("decode" "quick-xml" "oss_derive") ("core" "reqwest" "async-trait" "futures-core" "async-stream" "thiserror" "oss_derive" "auth" "decode") ("blocking" "core" "reqwest/blocking") ("auth" "reqwest" "percent-encoding")))) (r "1.62")))

(define-public crate-aliyun-oss-client-0.12.7 (c (n "aliyun-oss-client") (v "0.12.7") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 2)) (d (n "infer") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (d #t) (k 2)) (d (n "mockall_double") (r "^0.3.0") (d #t) (k 2)) (d (n "oss_derive") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.2.0") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.30") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 2)) (d (n "tokio") (r "^1.19.2") (f (quote ("rt" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 2)))) (h "1vr20287i2ixyf0bns24nwlakdqms3w318sal6agngc9wb0bx7a6") (f (quote (("sts" "core" "auth") ("put_file" "core" "infer") ("default" "core" "sts" "put_file") ("decode" "quick-xml" "oss_derive") ("core" "reqwest" "async-trait" "futures-core" "async-stream" "thiserror" "oss_derive" "auth" "decode") ("blocking" "core" "reqwest/blocking") ("auth" "reqwest" "percent-encoding")))) (r "1.62")))

(define-public crate-aliyun-oss-client-0.12.8 (c (n "aliyun-oss-client") (v "0.12.8") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 2)) (d (n "infer") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (d #t) (k 2)) (d (n "mockall_double") (r "^0.3.0") (d #t) (k 2)) (d (n "oss_derive") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.2.0") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 2)) (d (n "tokio") (r "^1.19.2") (f (quote ("rt" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 2)))) (h "1acbnvq1na1v9p3hyv89fdwx1sq6zxjypys43and3ys4ay4aqyva") (f (quote (("sts" "core" "auth") ("put_file" "core" "infer") ("env_test") ("default" "core" "sts" "put_file") ("decode" "quick-xml" "oss_derive") ("core" "reqwest" "async-trait" "futures" "futures-core" "async-stream" "thiserror" "oss_derive" "auth" "decode") ("blocking" "core" "reqwest/blocking") ("auth" "reqwest" "percent-encoding")))) (r "1.62")))

(define-public crate-aliyun-oss-client-0.12.9 (c (n "aliyun-oss-client") (v "0.12.9") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 2)) (d (n "infer") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (d #t) (k 2)) (d (n "mockall_double") (r "^0.3.0") (d #t) (k 2)) (d (n "oss_derive") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.2.0") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 2)) (d (n "tokio") (r "^1.19.2") (f (quote ("rt" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 2)))) (h "0nblhlwf6d9vyr8icg82wmbn57mfnpz22mfkqn1bdsdi2ghgi2ws") (f (quote (("sts" "core" "auth") ("put_file" "core" "infer") ("env_test") ("default" "core" "sts" "put_file") ("decode" "quick-xml" "oss_derive") ("core" "reqwest" "async-trait" "futures" "futures-core" "async-stream" "thiserror" "oss_derive" "auth" "decode") ("blocking" "core" "reqwest/blocking") ("auth" "reqwest" "percent-encoding")))) (r "1.62")))

(define-public crate-aliyun-oss-client-0.12.10 (c (n "aliyun-oss-client") (v "0.12.10") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 2)) (d (n "infer") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (d #t) (k 2)) (d (n "mockall_double") (r "^0.3.0") (d #t) (k 2)) (d (n "oss_derive") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.2.0") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 2)) (d (n "tokio") (r "^1.19.2") (f (quote ("rt" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 2)))) (h "15y7bnfl43ba5kslkyy7jgrf9swgz4hfk9ib3pw6kr0p8n9j37y8") (f (quote (("sts" "core" "auth") ("put_file" "core" "infer") ("env_test") ("default" "core" "sts" "put_file") ("decode" "quick-xml" "oss_derive") ("core" "reqwest" "async-trait" "futures" "futures-core" "async-stream" "thiserror" "oss_derive" "auth" "decode") ("blocking" "core" "reqwest/blocking") ("auth" "reqwest" "percent-encoding")))) (r "1.62")))

(define-public crate-aliyun-oss-client-0.13.0-alpha (c (n "aliyun-oss-client") (v "0.13.0-alpha") (d (list (d (n "base64") (r "^0.22") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("rt" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "0nqpal8ppxv3vcmkry5ykw7ipb0k36216fns99f2h80wg29wgd77")))

(define-public crate-aliyun-oss-client-0.13.0-alpha2 (c (n "aliyun-oss-client") (v "0.13.0-alpha2") (d (list (d (n "base64") (r "^0.22") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("rt" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "1dni6vqykw3ylq64968k7f9lnxcd2jad5q69kbviciinh6mbb39x")))

(define-public crate-aliyun-oss-client-0.13.0-alpha3 (c (n "aliyun-oss-client") (v "0.13.0-alpha3") (d (list (d (n "base64") (r "^0.22") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("rt" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "0lakl0bk9d8g3a4ggm05lrr6wak9120n1lfa8i0xx9a0ck7fgvak")))

(define-public crate-aliyun-oss-client-0.13.0-alpha4 (c (n "aliyun-oss-client") (v "0.13.0-alpha4") (d (list (d (n "base64") (r "^0.22") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("rt" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "1my1z0lwlz05606i28jjkxzbjji7rmdp7rwwy2ln49i9cgl1q9v0")))

