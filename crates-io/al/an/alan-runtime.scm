(define-module (crates-io al an alan-runtime) #:use-module (crates-io))

(define-public crate-alan-runtime-0.1.0 (c (n "alan-runtime") (v "0.1.0") (d (list (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "clap") (r "^2.33.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "hyper") (r "^0.13") (d #t) (k 0)) (d (n "num_cpus") (r "^1.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rayon") (r "^1.3") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "macros" "sync" "time"))) (d #t) (k 0)) (d (n "twox-hash") (r "^1.5.0") (d #t) (k 0)))) (h "0kczy51p7krambf02cgf0qzhzfnfxlq4j4wdsc7a5vzcvzvpck46")))

(define-public crate-alan-runtime-0.1.1 (c (n "alan-runtime") (v "0.1.1") (d (list (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "clap") (r "^2.33.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "hyper") (r "^0.13") (d #t) (k 0)) (d (n "num_cpus") (r "^1.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rayon") (r "^1.3") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "macros" "sync" "time"))) (d #t) (k 0)) (d (n "twox-hash") (r "^1.5.0") (d #t) (k 0)))) (h "1z57az6mqf9l21iz7y9wdwcwsqghx3ncybprv48bwndblsq85swq")))

(define-public crate-alan-runtime-0.1.2 (c (n "alan-runtime") (v "0.1.2") (d (list (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "clap") (r "^2.33.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "hyper") (r "^0.13") (d #t) (k 0)) (d (n "num_cpus") (r "^1.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rayon") (r "^1.3") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "macros" "sync" "time"))) (d #t) (k 0)) (d (n "twox-hash") (r "^1.5.0") (d #t) (k 0)))) (h "0mzw3l2gpjjk18sw6c0ds0995q6p53l1wsmn0h0af3agyhnkm97n")))

(define-public crate-alan-runtime-0.1.3 (c (n "alan-runtime") (v "0.1.3") (d (list (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "clap") (r "^2.33.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "hyper") (r "^0.13") (d #t) (k 0)) (d (n "num_cpus") (r "^1.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rayon") (r "^1.3") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "macros" "sync" "time"))) (d #t) (k 0)) (d (n "twox-hash") (r "^1.5.0") (d #t) (k 0)))) (h "1bp5p5snkwdy2vxdq778q5i3ha2qa2wvsncxc7wyz502qz0fsrxl")))

(define-public crate-alan-runtime-0.1.4 (c (n "alan-runtime") (v "0.1.4") (d (list (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "clap") (r "^2.33.1") (d #t) (k 0)) (d (n "dashmap") (r "^3.11.10") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "hyper") (r "^0.13") (d #t) (k 0)) (d (n "num_cpus") (r "^1.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rayon") (r "^1.3") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "macros" "sync" "time"))) (d #t) (k 0)) (d (n "twox-hash") (r "^1.5.0") (d #t) (k 0)))) (h "0kw2p5jzw9dhn20947a5j75hycs7cs7rk3gmajnymymmnis054j9")))

(define-public crate-alan-runtime-0.1.5 (c (n "alan-runtime") (v "0.1.5") (d (list (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "clap") (r "^2.33.1") (d #t) (k 0)) (d (n "dashmap") (r "^3.11.10") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "hyper") (r "^0.13") (d #t) (k 0)) (d (n "num_cpus") (r "^1.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rayon") (r "^1.3") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "macros" "sync" "time"))) (d #t) (k 0)) (d (n "twox-hash") (r "^1.5.0") (d #t) (k 0)))) (h "0pkipxa40g38m0c16b6frln7yx28xviv90l3rwzsv8gga91mhip6")))

