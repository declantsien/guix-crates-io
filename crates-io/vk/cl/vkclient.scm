(define-module (crates-io vk cl vkclient) #:use-module (crates-io))

(define-public crate-vkclient-1.0.0 (c (n "vkclient") (v "1.0.0") (d (list (d (n "awc") (r "^3") (f (quote ("rustls"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)))) (h "0kfshci5i1d6y6bjxfv6hyzz1sqpplcldan34xjkpw2cp8sr12hq")))

(define-public crate-vkclient-1.0.1 (c (n "vkclient") (v "1.0.1") (d (list (d (n "awc") (r "^3") (f (quote ("rustls"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)))) (h "10qgywg8icq2lbbiircmxxmr8g3y9apkjp7dzd4s5c8jjvirgkab")))

(define-public crate-vkclient-2.0.0 (c (n "vkclient") (v "2.0.0") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "flate2") (r "^1") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("client" "http2"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23") (f (quote ("http2"))) (d #t) (k 0)) (d (n "rmp-serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "zstd") (r "^0.11") (o #t) (d #t) (k 0)))) (h "0n83nlgn6c4h5iwi0gdfq06f834pfpnwq5ggpy1i8xwsdxzhjhwc") (f (quote (("encode_msgpack" "rmp-serde") ("encode_json" "serde_json") ("default" "compression_zstd" "compression_gzip" "encode_json" "encode_msgpack") ("compression_zstd" "zstd") ("compression_gzip" "flate2"))))))

(define-public crate-vkclient-2.0.1 (c (n "vkclient") (v "2.0.1") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("client" "http2"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23") (f (quote ("http2"))) (d #t) (k 0)) (d (n "rmp-serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "zstd") (r "^0.11") (o #t) (d #t) (k 0)))) (h "1rgwcpwf8kj8xnsd4s4mss20i78bbmdskf3fjdpaywgly6ys9c6l") (f (quote (("encode_msgpack" "rmp-serde") ("encode_json" "serde_json") ("default" "compression_zstd" "compression_gzip" "encode_json" "encode_msgpack") ("compression_zstd" "zstd") ("compression_gzip" "flate2"))))))

(define-public crate-vkclient-3.0.0 (c (n "vkclient") (v "3.0.0") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("client" "http2"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23") (f (quote ("http2"))) (d #t) (k 0)) (d (n "rmp-serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "zstd") (r "^0.11") (o #t) (d #t) (k 0)))) (h "11dglvkqnlz40l4avwking7l3kbj7i4mm3lg4qijl5fqi3xh1apb") (f (quote (("encode_msgpack" "rmp-serde") ("encode_json" "serde_json") ("default" "compression_zstd" "compression_gzip" "encode_json" "encode_msgpack") ("compression_zstd" "zstd") ("compression_gzip" "flate2"))))))

(define-public crate-vkclient-3.1.0 (c (n "vkclient") (v "3.1.0") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("client" "http2"))) (d #t) (k 0)) (d (n "hyper-multipart-rfc7578") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23") (f (quote ("http2"))) (d #t) (k 0)) (d (n "rmp-serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "zstd") (r "^0.11") (o #t) (d #t) (k 0)))) (h "04mklhmdccrnbnnp33wip9ca2a743j13sv6469lx5kn8pn40yi31") (f (quote (("uploader" "hyper-multipart-rfc7578") ("encode_msgpack" "rmp-serde") ("encode_json" "serde_json") ("default" "compression_zstd" "compression_gzip" "encode_json" "encode_msgpack" "uploader") ("compression_zstd" "zstd") ("compression_gzip" "flate2"))))))

(define-public crate-vkclient-3.1.1 (c (n "vkclient") (v "3.1.1") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("client" "http2"))) (d #t) (k 0)) (d (n "hyper-multipart-rfc7578") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23") (f (quote ("http2"))) (d #t) (k 0)) (d (n "rmp-serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "zstd") (r "^0.11") (o #t) (d #t) (k 0)))) (h "0y9sv89hxa4jkfz22cdpvmfdya7wfwpymqxsnqg91n893dzybzly") (f (quote (("uploader" "hyper-multipart-rfc7578") ("encode_msgpack" "rmp-serde") ("encode_json" "serde_json") ("default" "compression_zstd" "compression_gzip" "encode_json" "encode_msgpack" "uploader") ("compression_zstd" "zstd") ("compression_gzip" "flate2"))))))

(define-public crate-vkclient-3.2.0 (c (n "vkclient") (v "3.2.0") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("client" "http2"))) (d #t) (k 0)) (d (n "hyper-multipart-rfc7578") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23") (f (quote ("http2"))) (d #t) (k 0)) (d (n "rmp-serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "zstd") (r "^0.11") (o #t) (d #t) (k 0)))) (h "13b38mv2xfgrkdddny8y3dq09b4d86glvxwmmrh4qfjqmwqlz8wf") (f (quote (("uploader" "hyper-multipart-rfc7578") ("encode_msgpack" "rmp-serde") ("encode_json" "serde_json") ("default" "compression_zstd" "compression_gzip" "encode_json" "encode_msgpack" "uploader") ("compression_zstd" "zstd") ("compression_gzip" "flate2"))))))

(define-public crate-vkclient-3.2.1 (c (n "vkclient") (v "3.2.1") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("client" "http2"))) (d #t) (k 0)) (d (n "hyper-multipart-rfc7578") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23") (f (quote ("http2"))) (d #t) (k 0)) (d (n "rmp-serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "zstd") (r "^0.11") (o #t) (d #t) (k 0)))) (h "0w46qp834q9gn7lw0ljzy83rwn3naqxamxrbjvm9ih5b9q6w6sy6") (f (quote (("uploader" "hyper-multipart-rfc7578") ("encode_msgpack" "rmp-serde") ("encode_json" "serde_json") ("default" "compression_zstd" "compression_gzip" "encode_json" "encode_msgpack" "uploader") ("compression_zstd" "zstd") ("compression_gzip" "flate2"))))))

(define-public crate-vkclient-3.3.0 (c (n "vkclient") (v "3.3.0") (d (list (d (n "async-stream") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("client" "http2"))) (d #t) (k 0)) (d (n "hyper-multipart-rfc7578") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23") (f (quote ("http2"))) (d #t) (k 0)) (d (n "rmp-serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "zstd") (r "^0.11") (o #t) (d #t) (k 0)))) (h "1sfzy5m0gg0sznws39lr456n6aizngc7a9w2lr1g69vjnwjdlv62") (f (quote (("uploader" "hyper-multipart-rfc7578") ("longpoll_stream" "futures-util" "async-stream") ("longpoll") ("encode_msgpack" "rmp-serde") ("encode_json" "serde_json") ("default" "compression_zstd" "compression_gzip" "encode_json" "encode_msgpack" "uploader" "longpoll" "longpoll_stream") ("compression_zstd" "zstd") ("compression_gzip" "flate2"))))))

(define-public crate-vkclient-4.0.0 (c (n "vkclient") (v "4.0.0") (d (list (d (n "async-stream") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("client" "http2"))) (d #t) (k 0)) (d (n "hyper-multipart-rfc7578") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23") (f (quote ("http2"))) (d #t) (k 0)) (d (n "rmp-serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "zstd") (r "^0.11") (o #t) (d #t) (k 0)))) (h "1fgk36d15jfar06icz28by43gvbm3rz35zdgm9527k9hnfj58ach") (f (quote (("uploader" "hyper-multipart-rfc7578") ("longpoll_stream" "futures-util" "async-stream") ("longpoll") ("encode_msgpack" "rmp-serde") ("encode_json" "serde_json") ("default" "compression_zstd" "compression_gzip" "encode_json" "encode_msgpack" "uploader" "longpoll" "longpoll_stream") ("compression_zstd" "zstd") ("compression_gzip" "flate2"))))))

(define-public crate-vkclient-4.0.1 (c (n "vkclient") (v "4.0.1") (d (list (d (n "async-stream") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("client" "http2"))) (d #t) (k 0)) (d (n "hyper-multipart-rfc7578") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23") (f (quote ("http2"))) (d #t) (k 0)) (d (n "rmp-serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "zstd") (r "^0.11") (o #t) (d #t) (k 0)))) (h "1jrm05x4w0l4vq29yl4c85ki72m21w1lb9176w8xqfjnq5zvqvqc") (f (quote (("uploader" "hyper-multipart-rfc7578") ("longpoll_stream" "futures-util" "async-stream") ("longpoll") ("encode_msgpack" "rmp-serde") ("encode_json" "serde_json") ("default" "compression_zstd" "compression_gzip" "encode_json" "encode_msgpack" "uploader" "longpoll" "longpoll_stream") ("compression_zstd" "zstd") ("compression_gzip" "flate2"))))))

(define-public crate-vkclient-4.0.2 (c (n "vkclient") (v "4.0.2") (d (list (d (n "async-stream") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("client" "http2"))) (d #t) (k 0)) (d (n "hyper-multipart-rfc7578") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23") (f (quote ("http2"))) (d #t) (k 0)) (d (n "rmp-serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "zstd") (r "^0.11") (o #t) (d #t) (k 0)))) (h "17yy10by1lvnzmbga7xikskrxs18rqxvrvmbchsjm5ybffw3ljd3") (f (quote (("uploader" "hyper-multipart-rfc7578") ("longpoll_stream" "futures-util" "async-stream") ("longpoll") ("encode_msgpack" "rmp-serde") ("encode_json" "serde_json") ("default" "compression_zstd" "compression_gzip" "encode_json" "encode_msgpack" "uploader" "longpoll" "longpoll_stream") ("compression_zstd" "zstd") ("compression_gzip" "flate2"))))))

(define-public crate-vkclient-4.0.3 (c (n "vkclient") (v "4.0.3") (d (list (d (n "async-stream") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("client" "http2"))) (d #t) (k 0)) (d (n "hyper-multipart-rfc7578") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23") (f (quote ("http2"))) (d #t) (k 0)) (d (n "rmp-serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "zstd") (r "^0.11") (o #t) (d #t) (k 0)))) (h "0azaynaric7jmq1zbfbwiv1xv7lshbyvr9lir47zxj61m7h0akrq") (f (quote (("uploader" "hyper-multipart-rfc7578") ("longpoll_stream" "futures-util" "async-stream") ("longpoll") ("encode_msgpack" "rmp-serde") ("encode_json" "serde_json") ("default" "compression_zstd" "compression_gzip" "encode_json" "encode_msgpack" "uploader" "longpoll" "longpoll_stream") ("compression_zstd" "zstd") ("compression_gzip" "flate2"))))))

(define-public crate-vkclient-4.0.4 (c (n "vkclient") (v "4.0.4") (d (list (d (n "async-stream") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("client" "http2"))) (d #t) (k 0)) (d (n "hyper-multipart-rfc7578") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24") (f (quote ("http2"))) (d #t) (k 0)) (d (n "rmp-serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "zstd") (r "^0.12") (o #t) (d #t) (k 0)))) (h "18vk1j133a07wn8zjx2xzvgiiqxvp9zjvigqsrg9q1jjk1wzg8hj") (f (quote (("uploader" "hyper-multipart-rfc7578") ("longpoll_stream" "futures-util" "async-stream") ("longpoll") ("encode_msgpack" "rmp-serde") ("encode_json" "serde_json") ("default" "compression_zstd" "compression_gzip" "encode_json" "encode_msgpack" "uploader" "longpoll" "longpoll_stream") ("compression_zstd" "zstd") ("compression_gzip" "flate2"))))))

(define-public crate-vkclient-5.0.0 (c (n "vkclient") (v "5.0.0") (d (list (d (n "async-stream") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("rustls-tls" "charset" "http2" "macos-system-configuration"))) (k 0)) (d (n "rmp-serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "zstd") (r "^0.13") (o #t) (d #t) (k 0)))) (h "05gd44gbqrq1x0q6dm6kwziv7gk0lnvz8nafh2rrxg3a0zkdv35z") (f (quote (("uploader" "reqwest/multipart") ("longpoll_stream" "futures-util" "async-stream") ("longpoll") ("encode_msgpack" "rmp-serde") ("encode_json" "serde_json") ("default" "compression_zstd" "compression_gzip" "encode_json" "encode_msgpack" "uploader" "longpoll" "longpoll_stream") ("compression_zstd" "zstd") ("compression_gzip" "flate2"))))))

(define-public crate-vkclient-5.0.1 (c (n "vkclient") (v "5.0.1") (d (list (d (n "async-stream") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("rustls-tls" "charset" "http2" "macos-system-configuration"))) (k 0)) (d (n "rmp-serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "zstd") (r "^0.13") (o #t) (d #t) (k 0)))) (h "15gyfkjzckf6yf8icvywbq6mj2b17iz9s2czfhdi1sg47c5i8y0f") (f (quote (("uploader" "reqwest/multipart") ("longpoll_stream" "futures-util" "async-stream") ("longpoll") ("encode_msgpack" "rmp-serde") ("encode_json" "serde_json") ("default" "compression_zstd" "compression_gzip" "encode_json" "encode_msgpack" "uploader" "longpoll" "longpoll_stream") ("compression_zstd" "zstd") ("compression_gzip" "flate2"))))))

(define-public crate-vkclient-5.0.2 (c (n "vkclient") (v "5.0.2") (d (list (d (n "async-stream") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("rustls-tls" "charset" "http2" "macos-system-configuration"))) (k 0)) (d (n "rmp-serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "zstd") (r "^0.13") (o #t) (d #t) (k 0)))) (h "04b7zfbyw0qh6p6ifwxg1vwfddaj23wn5cchmhn1bgbfwk3rv304") (f (quote (("uploader" "reqwest/multipart") ("longpoll_stream" "futures-util" "async-stream") ("longpoll") ("encode_msgpack" "rmp-serde") ("encode_json" "serde_json") ("default" "compression_zstd" "compression_gzip" "encode_json" "encode_msgpack" "uploader" "longpoll" "longpoll_stream") ("compression_zstd" "zstd") ("compression_gzip" "flate2"))))))

(define-public crate-vkclient-5.0.3 (c (n "vkclient") (v "5.0.3") (d (list (d (n "async-stream") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("rustls-tls" "charset" "http2" "macos-system-configuration"))) (k 0)) (d (n "rmp-serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "zstd") (r "^0.13") (o #t) (d #t) (k 0)))) (h "1snyggaji6nqiipg06ldwqjn5kp88q39w21bbz4mdpq1rnz7wn65") (f (quote (("uploader" "reqwest/multipart") ("longpoll_stream" "futures-util" "async-stream") ("longpoll") ("encode_msgpack" "rmp-serde") ("encode_json" "serde_json") ("default" "compression_zstd" "compression_gzip" "encode_json" "encode_msgpack" "uploader" "longpoll" "longpoll_stream") ("compression_zstd" "zstd") ("compression_gzip" "flate2"))))))

(define-public crate-vkclient-5.0.5 (c (n "vkclient") (v "5.0.5") (d (list (d (n "async-stream") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("rustls-tls" "charset" "http2" "macos-system-configuration"))) (k 0)) (d (n "rmp-serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "zstd") (r "^0.13") (o #t) (d #t) (k 0)))) (h "1lw6asyd1x97cxjd50bspcjncx2fw4qkf8si38w9ygpzzk4l7v41") (f (quote (("uploader" "reqwest/multipart") ("longpoll_stream" "futures-util" "async-stream") ("longpoll") ("encode_msgpack" "rmp-serde") ("encode_json" "serde_json") ("default" "compression_zstd" "compression_gzip" "encode_json" "encode_msgpack" "uploader" "longpoll" "longpoll_stream") ("compression_zstd" "zstd") ("compression_gzip" "flate2"))))))

(define-public crate-vkclient-5.0.6 (c (n "vkclient") (v "5.0.6") (d (list (d (n "async-stream") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("rustls-tls" "charset" "http2" "macos-system-configuration"))) (k 0)) (d (n "rmp-serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "zstd") (r "^0.13") (o #t) (d #t) (k 0)))) (h "07cxbzlwwmdwym3dvz9wx7a89gazn1d8wqkhiza73zjan7hjrmxl") (f (quote (("uploader" "reqwest/multipart") ("longpoll_stream" "futures-util" "async-stream") ("longpoll") ("encode_msgpack" "rmp-serde") ("encode_json" "serde_json") ("default" "compression_zstd" "compression_gzip" "encode_json" "encode_msgpack" "uploader" "longpoll" "longpoll_stream") ("compression_zstd" "zstd") ("compression_gzip" "flate2"))))))

(define-public crate-vkclient-5.1.0 (c (n "vkclient") (v "5.1.0") (d (list (d (n "async-stream") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("rustls-tls" "charset" "http2" "macos-system-configuration"))) (k 0)) (d (n "rmp-serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "zstd") (r "^0.13") (o #t) (d #t) (k 0)))) (h "0r18ccdha38swrzajkhkb21zfl8hgl4rjk3ybpb0p9bzfnxhghq8") (f (quote (("uploader" "reqwest/multipart") ("longpoll_stream" "futures-util" "async-stream") ("longpoll") ("encode_msgpack" "rmp-serde") ("encode_json" "serde_json") ("default" "compression_zstd" "compression_gzip" "encode_json" "encode_msgpack" "uploader" "longpoll" "longpoll_stream") ("compression_zstd" "zstd") ("compression_gzip" "flate2"))))))

(define-public crate-vkclient-5.1.1 (c (n "vkclient") (v "5.1.1") (d (list (d (n "async-stream") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("rustls-tls" "charset" "http2" "macos-system-configuration"))) (k 0)) (d (n "rmp-serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "zstd") (r "^0.13") (o #t) (d #t) (k 0)))) (h "1zw46qdnzxyxi508wcgsaw4fm9qfpr2npagvv4nydwfl4mq0y3sg") (f (quote (("uploader" "reqwest/multipart") ("longpoll_stream" "futures-util" "async-stream") ("longpoll") ("encode_msgpack" "rmp-serde") ("encode_json" "serde_json") ("default" "compression_zstd" "compression_gzip" "encode_json" "encode_msgpack" "uploader" "longpoll" "longpoll_stream") ("compression_zstd" "zstd") ("compression_gzip" "flate2"))))))

(define-public crate-vkclient-5.1.2 (c (n "vkclient") (v "5.1.2") (d (list (d (n "async-stream") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("rustls-tls" "charset" "http2" "macos-system-configuration"))) (k 0)) (d (n "rmp-serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "zstd") (r "^0.13") (o #t) (d #t) (k 0)))) (h "0iy4ghz9cxkjanw8ba3f7x9260f3rs6vhizw70251ayz1wzlsjbr") (f (quote (("uploader" "reqwest/multipart") ("longpoll_stream" "futures-util" "async-stream") ("longpoll") ("encode_msgpack" "rmp-serde") ("encode_json" "serde_json") ("default" "compression_zstd" "compression_gzip" "encode_json" "encode_msgpack" "uploader" "longpoll" "longpoll_stream") ("compression_zstd" "zstd") ("compression_gzip" "flate2"))))))

