(define-module (crates-io ka fk kafka-rs) #:use-module (crates-io))

(define-public crate-kafka-rs-0.1.0 (c (n "kafka-rs") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.80") (f (quote ("std"))) (k 0)) (d (n "bytes") (r "^1.5.0") (f (quote ("std"))) (k 0)) (d (n "futures") (r "^0.3.30") (f (quote ("std"))) (k 0)) (d (n "kafka-protocol") (r "^0.9") (k 0)) (d (n "socket2") (r "^0.5.6") (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util" "rt" "net" "macros" "sync" "time"))) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("codec" "net" "time" "rt"))) (k 0)) (d (n "tracing") (r "^0.1.40") (f (quote ("std" "log" "attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "registry"))) (d #t) (k 2)))) (h "107p6r07dk8m2pwn65f64dpldqadm3s98386cl8righ8xl41gchs") (y #t) (r "1.76.0")))

(define-public crate-kafka-rs-0.1.1 (c (n "kafka-rs") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.80") (f (quote ("std"))) (k 0)) (d (n "bytes") (r "^1.5.0") (f (quote ("std"))) (k 0)) (d (n "futures") (r "^0.3.30") (f (quote ("std"))) (k 0)) (d (n "kafka-protocol") (r "^0.9") (k 0)) (d (n "socket2") (r "^0.5.6") (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util" "rt" "net" "macros" "sync" "time"))) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("codec" "net" "time" "rt"))) (k 0)) (d (n "tracing") (r "^0.1.40") (f (quote ("std" "log" "attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "registry"))) (d #t) (k 2)))) (h "1zfdb2529dgrf92vavqfprnpxqi10izcmnjgm8va44x7757df3d6") (r "1.76.0")))

(define-public crate-kafka-rs-0.2.0 (c (n "kafka-rs") (v "0.2.0") (d (list (d (n "anyhow") (r "^1") (f (quote ("std"))) (k 0)) (d (n "arc-swap") (r "^1") (k 0)) (d (n "bytes") (r "^1") (f (quote ("std"))) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "now"))) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "kafka-protocol") (r "^0.9") (k 0)) (d (n "socket2") (r "^0.5") (k 0)) (d (n "thiserror") (r "^1") (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util" "rt" "net" "macros" "sync" "time"))) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec" "net" "time" "rt"))) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "log" "attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "registry"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("v4" "std"))) (k 0)))) (h "0rgp2drrv6zckxy4c2ya7px0vrryv82v1flmyvcyhwp4m81kiihq") (y #t) (r "1.76.0")))

(define-public crate-kafka-rs-0.2.1 (c (n "kafka-rs") (v "0.2.1") (d (list (d (n "anyhow") (r "^1") (f (quote ("std"))) (k 0)) (d (n "arc-swap") (r "^1") (k 0)) (d (n "bytes") (r "^1") (f (quote ("std"))) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "now"))) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "kafka-protocol") (r "^0.9") (k 0)) (d (n "socket2") (r "^0.5") (k 0)) (d (n "thiserror") (r "^1") (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util" "rt" "net" "macros" "sync" "time"))) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec" "net" "time" "rt"))) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "log" "attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "registry"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("v4" "std"))) (k 0)))) (h "1z2igimkrzars7r6k25if8l5q0z1151shawmp9vwlfm300gbyzpi") (r "1.76.0")))

(define-public crate-kafka-rs-0.3.0 (c (n "kafka-rs") (v "0.3.0") (d (list (d (n "anyhow") (r "^1") (f (quote ("std"))) (k 0)) (d (n "arc-swap") (r "^1") (k 0)) (d (n "bytes") (r "^1") (f (quote ("std"))) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "now"))) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "kafka-protocol") (r "^0.9") (k 0)) (d (n "socket2") (r "^0.5") (k 0)) (d (n "thiserror") (r "^1") (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util" "rt" "net" "macros" "sync" "time"))) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec" "net" "time" "rt"))) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "log" "attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "registry"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("v4" "std"))) (k 0)))) (h "1pwx37rlx3m25dzhzyar4x2chpiqclxzharcwaw5srpmk0aql2bx") (r "1.76.0")))

(define-public crate-kafka-rs-0.4.0 (c (n "kafka-rs") (v "0.4.0") (d (list (d (n "anyhow") (r "^1") (f (quote ("std"))) (k 0)) (d (n "arc-swap") (r "^1") (k 0)) (d (n "bytes") (r "^1") (f (quote ("std"))) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "now"))) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "kafka-protocol") (r "^0.9") (k 0)) (d (n "socket2") (r "^0.5") (k 0)) (d (n "thiserror") (r "^1") (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util" "rt" "net" "macros" "sync" "time"))) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec" "net" "time" "rt"))) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "log" "attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "registry"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("v4" "std"))) (k 0)))) (h "1g3gkjynwb656xwni1q0mi0kjccclm7fm5f5784lz0p6mvc30z7y") (y #t) (r "1.76.0")))

(define-public crate-kafka-rs-0.4.1 (c (n "kafka-rs") (v "0.4.1") (d (list (d (n "anyhow") (r "^1") (f (quote ("std"))) (k 0)) (d (n "arc-swap") (r "^1") (k 0)) (d (n "bytes") (r "^1") (f (quote ("std"))) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "now"))) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "kafka-protocol") (r "^0.9") (k 0)) (d (n "socket2") (r "^0.5") (k 0)) (d (n "thiserror") (r "^1") (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util" "rt" "net" "macros" "sync" "time"))) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec" "net" "time" "rt"))) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "log" "attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "registry"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("v4" "std"))) (k 0)))) (h "1m6dmir9vrm7r7iask7xd55cnwsh979abd14qkw0c51ahsi74h32") (r "1.76.0")))

(define-public crate-kafka-rs-0.4.2 (c (n "kafka-rs") (v "0.4.2") (d (list (d (n "anyhow") (r "^1") (f (quote ("std"))) (k 0)) (d (n "arc-swap") (r "^1") (k 0)) (d (n "bytes") (r "^1") (f (quote ("std"))) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "now"))) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "kafka-protocol") (r "^0.9") (k 0)) (d (n "socket2") (r "^0.5") (k 0)) (d (n "thiserror") (r "^1") (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util" "rt" "net" "macros" "sync" "time"))) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec" "net" "time" "rt"))) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "log" "attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "registry"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("v4" "std"))) (k 0)))) (h "1xsrksza0yz7lcxy2prc1178kwk9dghzs6w4q4vi5d0sz5g191i1") (r "1.76.0")))

(define-public crate-kafka-rs-0.4.3 (c (n "kafka-rs") (v "0.4.3") (d (list (d (n "anyhow") (r "^1") (f (quote ("std"))) (k 0)) (d (n "arc-swap") (r "^1") (k 0)) (d (n "bytes") (r "^1") (f (quote ("std"))) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "now"))) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "kafka-protocol") (r "^0.9") (k 0)) (d (n "socket2") (r "^0.5") (k 0)) (d (n "thiserror") (r "^1") (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util" "rt" "net" "macros" "sync" "time"))) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec" "net" "time" "rt"))) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "log" "attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "registry"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("v4" "std"))) (k 0)))) (h "0ax6qc067638nzd5df1adxc3xw5lslkrallkllfhxz8r8rk328xa") (r "1.76.0")))

(define-public crate-kafka-rs-0.5.0 (c (n "kafka-rs") (v "0.5.0") (d (list (d (n "anyhow") (r "^1") (f (quote ("std"))) (k 0)) (d (n "arc-swap") (r "^1") (k 0)) (d (n "bytes") (r "^1") (f (quote ("std"))) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "now"))) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "kafka-protocol") (r "^0.10") (k 0)) (d (n "socket2") (r "^0.5") (k 0)) (d (n "thiserror") (r "^1") (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util" "rt" "net" "macros" "sync" "time"))) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec" "net" "time" "rt"))) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "log" "attributes"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "registry"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("v4" "std"))) (k 0)))) (h "15kj4pwka315vcscmhzbjydn7yz7r8wa6irgd81ds45f56kmc58i") (f (quote (("internal") ("default")))) (r "1.76.0")))

