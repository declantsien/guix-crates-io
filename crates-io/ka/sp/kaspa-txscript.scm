(define-module (crates-io ka sp kaspa-txscript) #:use-module (crates-io))

(define-public crate-kaspa-txscript-0.0.0 (c (n "kaspa-txscript") (v "0.0.0") (h "1wjvcinvyn935aizkykzn16yabgkrbv7vvkfvck09rjk78170j4g")))

(define-public crate-kaspa-txscript-0.0.1 (c (n "kaspa-txscript") (v "0.0.1") (d (list (d (n "blake2b_simd") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kaspa-addresses") (r "^0.0.1") (d #t) (k 0)) (d (n "kaspa-consensus-core") (r "^0.0.1") (d #t) (k 0)) (d (n "kaspa-hashes") (r "^0.0.1") (d #t) (k 0)) (d (n "kaspa-txscript-errors") (r "^0.0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "secp256k1") (r "^0.24") (f (quote ("global-context" "rand-std"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "16vybakwg1miak9wh1mj4b0kpbxj5mfz2a29vhlfhdnkyirqjmzd")))

(define-public crate-kaspa-txscript-0.0.2 (c (n "kaspa-txscript") (v "0.0.2") (d (list (d (n "blake2b_simd") (r "^1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kaspa-addresses") (r "^0.0.2") (d #t) (k 0)) (d (n "kaspa-consensus-core") (r "^0.0.2") (d #t) (k 0)) (d (n "kaspa-hashes") (r "^0.0.2") (d #t) (k 0)) (d (n "kaspa-txscript-errors") (r "^0.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "secp256k1") (r "^0.24") (f (quote ("global-context" "rand-std"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (k 0)))) (h "0b3nrx8rg5hlijinsaryny1p13gj25gj6cmy6821y83lf5vr320h")))

(define-public crate-kaspa-txscript-0.0.3 (c (n "kaspa-txscript") (v "0.0.3") (d (list (d (n "blake2b_simd") (r "^1") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kaspa-addresses") (r "^0.0.3") (d #t) (k 0)) (d (n "kaspa-consensus-core") (r "^0.0.3") (d #t) (k 0)) (d (n "kaspa-hashes") (r "^0.0.3") (d #t) (k 0)) (d (n "kaspa-txscript-errors") (r "^0.0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "secp256k1") (r "^0.24") (f (quote ("global-context" "rand-std"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (k 0)))) (h "161xzypkwqxc1fk0ff0ykdddrdbpri5p92ykfy8lb40m05xy1c0j")))

(define-public crate-kaspa-txscript-0.0.4 (c (n "kaspa-txscript") (v "0.0.4") (d (list (d (n "blake2b_simd") (r "^1.0.2") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (k 2)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "kaspa-addresses") (r "^0.0.4") (d #t) (k 0)) (d (n "kaspa-consensus-core") (r "^0.0.4") (d #t) (k 0)) (d (n "kaspa-hashes") (r "^0.0.4") (d #t) (k 0)) (d (n "kaspa-txscript-errors") (r "^0.0.4") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "secp256k1") (r "^0.24.0") (f (quote ("global-context" "rand-std" "serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "smallvec") (r "^1.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.11.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (f (quote ("serde-serialize"))) (d #t) (k 0)))) (h "1byhknpfn8ks3xq1vgdvq5xzfl9linkssplb8y144fdc9xd3s1js")))

(define-public crate-kaspa-txscript-0.13.4 (c (n "kaspa-txscript") (v "0.13.4") (d (list (d (n "blake2b_simd") (r "^1.0.2") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (k 2)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "indexmap") (r "^2.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "kaspa-addresses") (r "^0.13.4") (d #t) (k 0)) (d (n "kaspa-consensus-core") (r "^0.13.4") (d #t) (k 0)) (d (n "kaspa-hashes") (r "^0.13.4") (d #t) (k 0)) (d (n "kaspa-txscript-errors") (r "^0.13.4") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "secp256k1") (r "^0.24.3") (f (quote ("global-context" "rand-std" "serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "smallvec") (r "^1.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.11.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (k 0)))) (h "1mqyyq9l5awwvxnf6iiqj5pbc9f19vva04dwra6zbz5hsdwkvc58")))

