(define-module (crates-io ka sp kaspa-grpc-core) #:use-module (crates-io))

(define-public crate-kaspa-grpc-core-0.0.0 (c (n "kaspa-grpc-core") (v "0.0.0") (h "1kppna9v03c6hmnkg3y5wppg8pqm1zcnl4p5ahy9gpjrcphdyab4")))

(define-public crate-kaspa-grpc-core-0.0.1 (c (n "kaspa-grpc-core") (v "0.0.1") (d (list (d (n "async-channel") (r "^1.8.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "faster-hex") (r "^0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "h2") (r "^0.3") (d #t) (k 0)) (d (n "kaspa-core") (r "^0.0.1") (d #t) (k 0)) (d (n "kaspa-notify") (r "^0.0.1") (d #t) (k 0)) (d (n "kaspa-rpc-core") (r "^0.0.1") (d #t) (k 0)) (d (n "kaspa-utils") (r "^0.0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "paste") (r "^1.0.11") (d #t) (k 0)) (d (n "prost") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt-multi-thread" "macros" "sync" "time"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "tonic") (r "^0.8") (f (quote ("gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8") (d #t) (k 1)) (d (n "triggered") (r "^0.1") (d #t) (k 0)))) (h "1r295dnl8mzr0dypd3vf3v1npm5diydds17zxg3w4sq8cri7hsg6")))

(define-public crate-kaspa-grpc-core-0.0.2 (c (n "kaspa-grpc-core") (v "0.0.2") (d (list (d (n "async-channel") (r "^1.8.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "faster-hex") (r "^0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "h2") (r "^0.3") (d #t) (k 0)) (d (n "kaspa-core") (r "^0.0.2") (d #t) (k 0)) (d (n "kaspa-notify") (r "^0.0.2") (d #t) (k 0)) (d (n "kaspa-rpc-core") (r "^0.0.2") (d #t) (k 0)) (d (n "kaspa-utils") (r "^0.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "paste") (r "^1.0.11") (d #t) (k 0)) (d (n "prost") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt-multi-thread" "macros" "sync" "time"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "tonic") (r "^0.9") (f (quote ("gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9") (d #t) (k 1)) (d (n "triggered") (r "^0.1") (d #t) (k 0)))) (h "02vz36br5a1qira9gss0rc1586ls1k9m90cc8577shlplc58pk3d")))

(define-public crate-kaspa-grpc-core-0.0.3 (c (n "kaspa-grpc-core") (v "0.0.3") (d (list (d (n "async-channel") (r "^1.8.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "faster-hex") (r "^0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "h2") (r "^0.3") (d #t) (k 0)) (d (n "kaspa-core") (r "^0.0.3") (d #t) (k 0)) (d (n "kaspa-notify") (r "^0.0.3") (d #t) (k 0)) (d (n "kaspa-rpc-core") (r "^0.0.3") (d #t) (k 0)) (d (n "kaspa-utils") (r "^0.0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "paste") (r "^1.0.11") (d #t) (k 0)) (d (n "prost") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt-multi-thread" "macros" "sync" "time"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "tonic") (r "^0.9") (f (quote ("gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9") (d #t) (k 1)) (d (n "triggered") (r "^0.1") (d #t) (k 0)))) (h "1q9zqnm785mmqdw5yy7z1idz85rnmsz771p12nkqn2bwlqkn32wa")))

(define-public crate-kaspa-grpc-core-0.0.4 (c (n "kaspa-grpc-core") (v "0.0.4") (d (list (d (n "async-channel") (r "^2.0.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "faster-hex") (r "^0.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "h2") (r "^0.3.21") (d #t) (k 0)) (d (n "kaspa-consensus-core") (r "^0.0.4") (d #t) (k 0)) (d (n "kaspa-core") (r "^0.0.4") (d #t) (k 0)) (d (n "kaspa-notify") (r "^0.0.4") (d #t) (k 0)) (d (n "kaspa-rpc-core") (r "^0.0.4") (d #t) (k 0)) (d (n "kaspa-utils") (r "^0.0.4") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "prost") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("sync" "rt-multi-thread" "rt-multi-thread" "macros" "sync" "time"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (d #t) (k 0)) (d (n "tonic") (r "^0.10.2") (f (quote ("tls" "gzip" "tls" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.10.2") (f (quote ("prost" "prost"))) (d #t) (k 1)) (d (n "triggered") (r "^0.1.2") (d #t) (k 0)) (d (n "workflow-core") (r "^0.8.0") (d #t) (k 0)))) (h "0q7sfz1qrf6a1mlb1h9nf9q6734w26v7mn55548vlvpx7iz4j1r3")))

(define-public crate-kaspa-grpc-core-0.13.4 (c (n "kaspa-grpc-core") (v "0.13.4") (d (list (d (n "async-channel") (r "^2.0.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "faster-hex") (r "^0.6.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "h2") (r "^0.3.21") (d #t) (k 0)) (d (n "kaspa-consensus-core") (r "^0.13.4") (d #t) (k 0)) (d (n "kaspa-core") (r "^0.13.4") (d #t) (k 0)) (d (n "kaspa-notify") (r "^0.13.4") (d #t) (k 0)) (d (n "kaspa-rpc-core") (r "^0.13.4") (d #t) (k 0)) (d (n "kaspa-utils") (r "^0.13.4") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "prost") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("sync" "rt-multi-thread" "rt-multi-thread" "macros" "sync" "time"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (d #t) (k 0)) (d (n "tonic") (r "^0.10.2") (f (quote ("tls" "gzip" "transport" "tls" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.10.2") (f (quote ("prost" "prost"))) (d #t) (k 1)) (d (n "triggered") (r "^0.1.2") (d #t) (k 0)) (d (n "workflow-core") (r "^0.10.3") (d #t) (k 0)))) (h "1x89z0l5mkrv09b1mln352b4qmy9a6gchv0ixr7jy17n4gfbcrnb")))

