(define-module (crates-io ka sp kaspa-rpc-core) #:use-module (crates-io))

(define-public crate-kaspa-rpc-core-0.0.0 (c (n "kaspa-rpc-core") (v "0.0.0") (h "0zww9r49pw3r8kils2ypjv1c3r2b6cvx3bcrrjd6znh8k2s4n9ih")))

(define-public crate-kaspa-rpc-core-0.0.1 (c (n "kaspa-rpc-core") (v "0.0.1") (d (list (d (n "async-channel") (r "^1.8.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "faster-hex") (r "^0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("alloc"))) (k 0)) (d (n "kaspa-addresses") (r "^0.0.1") (d #t) (k 0)) (d (n "kaspa-consensus-core") (r "^0.0.1") (d #t) (k 0)) (d (n "kaspa-consensus-notify") (r "^0.0.1") (d #t) (k 0)) (d (n "kaspa-core") (r "^0.0.1") (d #t) (k 0)) (d (n "kaspa-hashes") (r "^0.0.1") (d #t) (k 0)) (d (n "kaspa-index-core") (r "^0.0.1") (d #t) (k 0)) (d (n "kaspa-math") (r "^0.0.1") (d #t) (k 0)) (d (n "kaspa-notify") (r "^0.0.1") (d #t) (k 0)) (d (n "kaspa-txscript") (r "^0.0.1") (d #t) (k 0)) (d (n "kaspa-utils") (r "^0.0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "paste") (r "^1.0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "triggered") (r "^0.1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "workflow-core") (r "^0.3.14") (d #t) (k 0)))) (h "0sdlqna74i22my79sdb4i8yislhsbqa29hnin0hi3cay21c42qk6")))

(define-public crate-kaspa-rpc-core-0.0.2 (c (n "kaspa-rpc-core") (v "0.0.2") (d (list (d (n "async-channel") (r "^1.8.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "downcast") (r "^0.11.0") (d #t) (k 0)) (d (n "faster-hex") (r "^0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("alloc"))) (k 0)) (d (n "kaspa-addresses") (r "^0.0.2") (d #t) (k 0)) (d (n "kaspa-consensus-core") (r "^0.0.2") (d #t) (k 0)) (d (n "kaspa-consensus-notify") (r "^0.0.2") (d #t) (k 0)) (d (n "kaspa-core") (r "^0.0.2") (d #t) (k 0)) (d (n "kaspa-hashes") (r "^0.0.2") (d #t) (k 0)) (d (n "kaspa-index-core") (r "^0.0.2") (d #t) (k 0)) (d (n "kaspa-math") (r "^0.0.2") (d #t) (k 0)) (d (n "kaspa-mining") (r "^0.0.2") (d #t) (k 0)) (d (n "kaspa-notify") (r "^0.0.2") (d #t) (k 0)) (d (n "kaspa-txscript") (r "^0.0.2") (d #t) (k 0)) (d (n "kaspa-utils") (r "^0.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "paste") (r "^1.0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "triggered") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1.2.2") (f (quote ("v4" "fast-rng"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "workflow-core") (r "^0.3.14") (d #t) (k 0)))) (h "00b7ay4kdymhdm4lbrnwffpb7vajc1fksddi4jjzazbs74q8k5q7")))

(define-public crate-kaspa-rpc-core-0.0.3 (c (n "kaspa-rpc-core") (v "0.0.3") (d (list (d (n "async-channel") (r "^1.8.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "downcast") (r "^0.11.0") (d #t) (k 0)) (d (n "faster-hex") (r "^0.6") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("alloc"))) (k 0)) (d (n "kaspa-addresses") (r "^0.0.3") (d #t) (k 0)) (d (n "kaspa-consensus-core") (r "^0.0.3") (d #t) (k 0)) (d (n "kaspa-consensus-notify") (r "^0.0.3") (d #t) (k 0)) (d (n "kaspa-core") (r "^0.0.3") (d #t) (k 0)) (d (n "kaspa-hashes") (r "^0.0.3") (d #t) (k 0)) (d (n "kaspa-index-core") (r "^0.0.3") (d #t) (k 0)) (d (n "kaspa-math") (r "^0.0.3") (d #t) (k 0)) (d (n "kaspa-mining") (r "^0.0.3") (d #t) (k 0)) (d (n "kaspa-notify") (r "^0.0.3") (d #t) (k 0)) (d (n "kaspa-txscript") (r "^0.0.3") (d #t) (k 0)) (d (n "kaspa-utils") (r "^0.0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "paste") (r "^1.0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "triggered") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1.2.2") (f (quote ("v4" "fast-rng"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "workflow-core") (r "^0.3.14") (d #t) (k 0)))) (h "19wmrrassa3inb2qnxynrcdyp9d28807pbka19cald46536gmp5f")))

(define-public crate-kaspa-rpc-core-0.0.4 (c (n "kaspa-rpc-core") (v "0.0.4") (d (list (d (n "async-channel") (r "^2.0.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "downcast") (r "^0.11.0") (d #t) (k 0)) (d (n "faster-hex") (r "^0.6.0") (d #t) (k 0)) (d (n "kaspa-addresses") (r "^0.0.4") (d #t) (k 0)) (d (n "kaspa-consensus-core") (r "^0.0.4") (d #t) (k 0)) (d (n "kaspa-consensus-notify") (r "^0.0.4") (d #t) (k 0)) (d (n "kaspa-consensus-wasm") (r "^0.0.4") (d #t) (k 0)) (d (n "kaspa-hashes") (r "^0.0.4") (d #t) (k 0)) (d (n "kaspa-index-core") (r "^0.0.4") (d #t) (k 0)) (d (n "kaspa-math") (r "^0.0.4") (d #t) (k 0)) (d (n "kaspa-mining-errors") (r "^0.0.4") (d #t) (k 0)) (d (n "kaspa-notify") (r "^0.0.4") (d #t) (k 0)) (d (n "kaspa-txscript") (r "^0.0.4") (d #t) (k 0)) (d (n "kaspa-utils") (r "^0.0.4") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "smallvec") (r "^1.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "uuid") (r "^1.5.0") (f (quote ("v4" "fast-rng" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "workflow-core") (r "^0.8.0") (d #t) (k 0)) (d (n "workflow-wasm") (r "^0.8.0") (d #t) (k 0)))) (h "143g1qnb4wzx9f659sq2mlsxwqykzpmppn87b2yab80a060n2skl")))

(define-public crate-kaspa-rpc-core-0.13.4 (c (n "kaspa-rpc-core") (v "0.13.4") (d (list (d (n "async-channel") (r "^2.0.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "downcast") (r "^0.11.0") (d #t) (k 0)) (d (n "faster-hex") (r "^0.6.1") (d #t) (k 0)) (d (n "kaspa-addresses") (r "^0.13.4") (d #t) (k 0)) (d (n "kaspa-consensus-core") (r "^0.13.4") (d #t) (k 0)) (d (n "kaspa-consensus-notify") (r "^0.13.4") (d #t) (k 0)) (d (n "kaspa-consensus-wasm") (r "^0.13.4") (d #t) (k 0)) (d (n "kaspa-core") (r "^0.13.4") (d #t) (k 0)) (d (n "kaspa-hashes") (r "^0.13.4") (d #t) (k 0)) (d (n "kaspa-index-core") (r "^0.13.4") (d #t) (k 0)) (d (n "kaspa-math") (r "^0.13.4") (d #t) (k 0)) (d (n "kaspa-mining-errors") (r "^0.13.4") (d #t) (k 0)) (d (n "kaspa-notify") (r "^0.13.4") (d #t) (k 0)) (d (n "kaspa-txscript") (r "^0.13.4") (d #t) (k 0)) (d (n "kaspa-utils") (r "^0.13.4") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "smallvec") (r "^1.11.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "uuid") (r "^1.5.0") (f (quote ("v4" "fast-rng" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "workflow-core") (r "^0.10.3") (d #t) (k 0)) (d (n "workflow-wasm") (r "^0.10.3") (d #t) (k 0)))) (h "0j1dgsm5yg5q24jqzvy24gv1w7gyfdi40p744rdpvbirf5wp365k")))

