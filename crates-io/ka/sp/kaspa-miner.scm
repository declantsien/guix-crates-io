(define-module (crates-io ka sp kaspa-miner) #:use-module (crates-io))

(define-public crate-kaspa-miner-0.2.0 (c (n "kaspa-miner") (v "0.2.0") (d (list (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "keccak") (r "^0.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "keccak") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking") (r "^0.11") (o #t) (d #t) (k 0) (p "parking_lot")) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "shuttle") (r "^0.0.7") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (f (quote ("color"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "tonic") (r "^0.6") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6") (f (quote ("prost" "transport"))) (k 1)))) (h "1cylv2wl974wim8s559j7ii3fldnl1aii1zvh5wvvj70l4wd433v") (f (quote (("parking_lot" "parking" "tokio/parking_lot") ("no-asm" "keccak") ("default" "parking_lot") ("bench"))))))

(define-public crate-kaspa-miner-0.2.3 (c (n "kaspa-miner") (v "0.2.3") (d (list (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "color"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "keccak") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"x86_64\"))") (k 0)) (d (n "keccak") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "parking") (r "^0.12") (o #t) (d #t) (k 0) (p "parking_lot")) (d (n "prost") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 2)) (d (n "shuttle") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "tonic") (r "^0.9") (d #t) (k 0)) (d (n "tonic-build") (r "^0.9") (f (quote ("prost" "transport"))) (k 1)))) (h "1kxrsx2nxn9a6lhnk7dzwnxb4jpqxrfqv4126jij3b3g5jq6frz3") (f (quote (("parking_lot" "parking" "tokio/parking_lot") ("no-asm" "keccak") ("bench")))) (s 2) (e (quote (("default" "keccak?/asm"))))))

(define-public crate-kaspa-miner-0.2.4 (c (n "kaspa-miner") (v "0.2.4") (d (list (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "color"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "keccak") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"x86_64\"))") (k 0)) (d (n "keccak") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "parking") (r "^0.12") (o #t) (d #t) (k 0) (p "parking_lot")) (d (n "prost") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 2)) (d (n "shuttle") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "tonic") (r "^0.10") (d #t) (k 0)) (d (n "tonic-build") (r "^0.10") (f (quote ("prost" "transport"))) (k 1)))) (h "15sk1byzdjym82l98z6w75q98q0y537hz2mj8f7ipwv99v4jq3q5") (f (quote (("parking_lot" "parking" "tokio/parking_lot") ("no-asm" "keccak") ("bench")))) (s 2) (e (quote (("default" "keccak?/asm"))))))

(define-public crate-kaspa-miner-0.2.5 (c (n "kaspa-miner") (v "0.2.5") (d (list (d (n "arc-swap") (r "^1.6.0") (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.0") (d #t) (k 0)) (d (n "cc") (r "^1") (d #t) (k 1)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "color"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "keccak") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"x86_64\"))") (k 0)) (d (n "keccak") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "parking") (r "^0.12") (o #t) (d #t) (k 0) (p "parking_lot")) (d (n "prost") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 2)) (d (n "shuttle") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "tonic") (r "^0.10") (d #t) (k 0)) (d (n "tonic-build") (r "^0.10") (f (quote ("prost" "transport"))) (k 1)))) (h "1ldmaaz0w1wz2brckfd0hjhm3glzqsg8nyfn7gzk8da0s52nwwrs") (f (quote (("parking_lot" "parking" "tokio/parking_lot") ("no-asm" "keccak") ("bench")))) (s 2) (e (quote (("default" "keccak?/asm"))))))

