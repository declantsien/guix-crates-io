(define-module (crates-io ka sp kaspa-wrpc-client) #:use-module (crates-io))

(define-public crate-kaspa-wrpc-client-0.0.0 (c (n "kaspa-wrpc-client") (v "0.0.0") (h "0b48aw9rzgpnzdmly1fck3pvr06z4qfzg3w7z49yy3w20x0pr7nd")))

(define-public crate-kaspa-wrpc-client-0.0.1 (c (n "kaspa-wrpc-client") (v "0.0.1") (d (list (d (n "async-std") (r "^1.12.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.61") (d #t) (k 0)) (d (n "kaspa-addresses") (r "^0.0.1") (d #t) (k 0)) (d (n "kaspa-notify") (r "^0.0.1") (d #t) (k 0)) (d (n "kaspa-rpc-core") (r "^0.0.1") (d #t) (k 0)) (d (n "kaspa-rpc-macros") (r "^0.0.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.11") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (k 0)) (d (n "workflow-core") (r "^0.3.14") (d #t) (k 0)) (d (n "workflow-log") (r "^0.3.14") (d #t) (k 0)) (d (n "workflow-rpc") (r "^0.3.14") (d #t) (k 0)))) (h "08ysjfwirr0lxfbfgxavy5x6ajal8jszy0n2wyi9y1y0v6s28ig6")))

(define-public crate-kaspa-wrpc-client-0.0.2 (c (n "kaspa-wrpc-client") (v "0.0.2") (d (list (d (n "async-std") (r "^1.12.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.61") (d #t) (k 0)) (d (n "kaspa-addresses") (r "^0.0.2") (d #t) (k 0)) (d (n "kaspa-notify") (r "^0.0.2") (d #t) (k 0)) (d (n "kaspa-rpc-core") (r "^0.0.2") (d #t) (k 0)) (d (n "kaspa-rpc-macros") (r "^0.0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0.11") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (k 0)) (d (n "workflow-core") (r "^0.3.14") (d #t) (k 0)) (d (n "workflow-log") (r "^0.3.14") (d #t) (k 0)) (d (n "workflow-rpc") (r "^0.3.14") (d #t) (k 0)))) (h "1splq746fxl2d2mjc3iyvgw6glwv589rkvd6qx8zzq6z2bkiqvg7")))

(define-public crate-kaspa-wrpc-client-0.0.3 (c (n "kaspa-wrpc-client") (v "0.0.3") (d (list (d (n "async-std") (r "^1.12.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.61") (d #t) (k 0)) (d (n "kaspa-addresses") (r "^0.0.3") (d #t) (k 0)) (d (n "kaspa-notify") (r "^0.0.3") (d #t) (k 0)) (d (n "kaspa-rpc-core") (r "^0.0.3") (d #t) (k 0)) (d (n "kaspa-rpc-macros") (r "^0.0.3") (d #t) (k 0)) (d (n "paste") (r "^1.0.11") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (k 0)) (d (n "workflow-core") (r "^0.3.14") (d #t) (k 0)) (d (n "workflow-log") (r "^0.3.14") (d #t) (k 0)) (d (n "workflow-rpc") (r "^0.3.14") (d #t) (k 0)))) (h "1xy3scjnr1ki9z0gdzxcxp148ck56rwcam3rmvm1wcbwv938kpjk")))

(define-public crate-kaspa-wrpc-client-0.0.4 (c (n "kaspa-wrpc-client") (v "0.0.4") (d (list (d (n "async-std") (r "^1.12.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (k 0)) (d (n "kaspa-addresses") (r "^0.0.4") (d #t) (k 0)) (d (n "kaspa-consensus-core") (r "^0.0.4") (d #t) (k 0)) (d (n "kaspa-consensus-wasm") (r "^0.0.4") (d #t) (k 0)) (d (n "kaspa-notify") (r "^0.0.4") (d #t) (k 0)) (d (n "kaspa-rpc-core") (r "^0.0.4") (d #t) (k 0)) (d (n "kaspa-rpc-macros") (r "^0.0.4") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (d #t) (k 0)) (d (n "workflow-core") (r "^0.8.0") (d #t) (k 0)) (d (n "workflow-dom") (r "^0.8.0") (d #t) (k 0)) (d (n "workflow-log") (r "^0.8.0") (d #t) (k 0)) (d (n "workflow-rpc") (r "^0.8.0") (d #t) (k 0)) (d (n "workflow-wasm") (r "^0.8.0") (d #t) (k 0)))) (h "1plccdm8q0kqzl476vprsqd1iv0f095j8k360zh084p9vrng5cdh") (f (quote (("no-unsafe-eval" "workflow-core/no-unsafe-eval" "workflow-rpc/no-unsafe-eval") ("default"))))))

(define-public crate-kaspa-wrpc-client-0.13.4 (c (n "kaspa-wrpc-client") (v "0.13.4") (d (list (d (n "async-std") (r "^1.12.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "borsh") (r "^0.9.1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.64") (d #t) (k 0)) (d (n "kaspa-addresses") (r "^0.13.4") (d #t) (k 0)) (d (n "kaspa-consensus-core") (r "^0.13.4") (d #t) (k 0)) (d (n "kaspa-consensus-wasm") (r "^0.13.4") (d #t) (k 0)) (d (n "kaspa-notify") (r "^0.13.4") (d #t) (k 0)) (d (n "kaspa-rpc-core") (r "^0.13.4") (d #t) (k 0)) (d (n "kaspa-rpc-macros") (r "^0.13.4") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.37") (d #t) (k 0)) (d (n "workflow-core") (r "^0.10.3") (d #t) (k 0)) (d (n "workflow-dom") (r "^0.10.3") (d #t) (k 0)) (d (n "workflow-log") (r "^0.10.3") (d #t) (k 0)) (d (n "workflow-rpc") (r "^0.10.3") (d #t) (k 0)) (d (n "workflow-wasm") (r "^0.10.3") (d #t) (k 0)))) (h "174vgjr095xpsh14kvf5vksy74g2hs8fvs7bvcfy2jnyw2899ysl") (f (quote (("no-unsafe-eval" "workflow-core/no-unsafe-eval" "workflow-rpc/no-unsafe-eval") ("default"))))))

