(define-module (crates-io ka sp kaspa-core) #:use-module (crates-io))

(define-public crate-kaspa-core-0.0.0 (c (n "kaspa-core") (v "0.0.0") (h "02hlbbzfhp29p970azr88977r7z4hg80jkl4jhzpxzbpgaiybg1q")))

(define-public crate-kaspa-core-0.0.1 (c (n "kaspa-core") (v "0.0.1") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "faster-hex") (r "^0.6") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("alloc"))) (k 0)) (d (n "intertrait") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "rt-multi-thread" "rt" "macros" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "workflow-log") (r "^0.3.14") (d #t) (k 0)))) (h "0jmk2036yvjywxskcrr55ay6hfyniigsck322nqzlw1wxlr86sj3")))

(define-public crate-kaspa-core-0.0.2 (c (n "kaspa-core") (v "0.0.2") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "faster-hex") (r "^0.6") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("alloc"))) (k 0)) (d (n "intertrait") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "rt-multi-thread" "rt" "macros" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "workflow-log") (r "^0.3.14") (d #t) (k 0)))) (h "1rc7nhagfh9ibzfy8rn9invqxxvimr14xaym9smz879bbxmqxc2x")))

(define-public crate-kaspa-core-0.0.3 (c (n "kaspa-core") (v "0.0.3") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "faster-hex") (r "^0.6") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("alloc"))) (k 0)) (d (n "intertrait") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "rt-multi-thread" "rt" "macros" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "workflow-log") (r "^0.3.14") (d #t) (k 0)))) (h "006lfhcpqgfrhk8p8addwpq7arby98hw3r64l96pfnr01dj8dhq9")))

(define-public crate-kaspa-core-0.0.4 (c (n "kaspa-core") (v "0.0.4") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.4.1") (f (quote ("termination"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-util") (r "^0.3.29") (f (quote ("alloc"))) (k 0)) (d (n "intertrait") (r "^0.2.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "log4rs") (r "^1.2.0") (f (quote ("all_components" "gzip" "background_rotation"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("sync" "rt-multi-thread" "rt" "macros" "rt-multi-thread" "time"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "triggered") (r "^0.1.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "workflow-log") (r "^0.8.0") (d #t) (k 0)))) (h "13bdbxpnh1gjfp0sfn63jsy6jxx0prkc7bhrh6dcbyk80pvhkhg3")))

(define-public crate-kaspa-core-0.13.4 (c (n "kaspa-core") (v "0.13.4") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.4.1") (f (quote ("termination"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-util") (r "^0.3.29") (f (quote ("alloc"))) (k 0)) (d (n "intertrait") (r "^0.2.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "log4rs") (r "^1.2.0") (f (quote ("all_components" "gzip" "background_rotation"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("sync" "rt-multi-thread" "rt" "macros" "rt-multi-thread" "time"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "triggered") (r "^0.1.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "workflow-log") (r "^0.10.3") (d #t) (k 0)))) (h "19sl0ld702a5bmcpqzd5ysc338kdpyrnp7fx73jj102lbqnhk2bi")))

