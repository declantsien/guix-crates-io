(define-module (crates-io ka sp kaspa-p2p-lib) #:use-module (crates-io))

(define-public crate-kaspa-p2p-lib-0.0.0 (c (n "kaspa-p2p-lib") (v "0.0.0") (h "11cdqgd1qkm0rnbcrv2mmb4khynp56cng7prbvdmxh09bn132lf9")))

(define-public crate-kaspa-p2p-lib-0.0.1 (c (n "kaspa-p2p-lib") (v "0.0.1") (d (list (d (n "ctrlc") (r "^3.2") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (k 0)) (d (n "h2") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kaspa-consensus-core") (r "^0.0.1") (d #t) (k 0)) (d (n "kaspa-core") (r "^0.0.1") (d #t) (k 0)) (d (n "kaspa-hashes") (r "^0.0.1") (d #t) (k 0)) (d (n "kaspa-math") (r "^0.0.1") (d #t) (k 0)) (d (n "kaspa-mining") (r "^0.0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "prost") (r "^0.11") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.21.2") (f (quote ("rt-multi-thread" "macros" "signal"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.11") (f (quote ("net"))) (d #t) (k 0)) (d (n "tonic") (r "^0.8.3") (f (quote ("tls" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8.3") (f (quote ("prost"))) (d #t) (k 1)) (d (n "uuid") (r "^1.2.2") (f (quote ("v4" "fast-rng"))) (d #t) (k 0)))) (h "0adprby7n4s77x8a1iivqaky137vnr0g7hf7kyyak5q8m7rmncw7")))

(define-public crate-kaspa-p2p-lib-0.0.2 (c (n "kaspa-p2p-lib") (v "0.0.2") (d (list (d (n "ctrlc") (r "^3.2") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (k 0)) (d (n "h2") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kaspa-consensus-core") (r "^0.0.2") (d #t) (k 0)) (d (n "kaspa-core") (r "^0.0.2") (d #t) (k 0)) (d (n "kaspa-hashes") (r "^0.0.2") (d #t) (k 0)) (d (n "kaspa-math") (r "^0.0.2") (d #t) (k 0)) (d (n "kaspa-mining") (r "^0.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "prost") (r "^0.11") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.21.2") (f (quote ("rt-multi-thread" "macros" "signal"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.11") (f (quote ("net"))) (d #t) (k 0)) (d (n "tonic") (r "^0.9.1") (f (quote ("tls" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.1") (f (quote ("prost"))) (d #t) (k 1)) (d (n "uuid") (r "^1.2.2") (f (quote ("v4" "fast-rng"))) (d #t) (k 0)))) (h "16l2n99rck6jr2rxv8a8804c5aiyy9q9z5dvx3541zwk52n8cn6n")))

(define-public crate-kaspa-p2p-lib-0.0.3 (c (n "kaspa-p2p-lib") (v "0.0.3") (d (list (d (n "ctrlc") (r "^3.2") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (k 0)) (d (n "h2") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kaspa-consensus-core") (r "^0.0.3") (d #t) (k 0)) (d (n "kaspa-core") (r "^0.0.3") (d #t) (k 0)) (d (n "kaspa-hashes") (r "^0.0.3") (d #t) (k 0)) (d (n "kaspa-math") (r "^0.0.3") (d #t) (k 0)) (d (n "kaspa-mining") (r "^0.0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "prost") (r "^0.11") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.21.2") (f (quote ("rt-multi-thread" "macros" "signal"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.11") (f (quote ("net"))) (d #t) (k 0)) (d (n "tonic") (r "^0.9.1") (f (quote ("tls" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9.1") (f (quote ("prost"))) (d #t) (k 1)) (d (n "uuid") (r "^1.2.2") (f (quote ("v4" "fast-rng"))) (d #t) (k 0)))) (h "01hmcp9522wq9ra3b6sq150ll27fcw1p9wnv6ysfdb8idxkds46r")))

(define-public crate-kaspa-p2p-lib-0.0.4 (c (n "kaspa-p2p-lib") (v "0.0.4") (d (list (d (n "borsh") (r "^0.9.1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "ctrlc") (r "^3.4.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "h2") (r "^0.3.21") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "kaspa-consensus-core") (r "^0.0.4") (d #t) (k 0)) (d (n "kaspa-core") (r "^0.0.4") (d #t) (k 0)) (d (n "kaspa-hashes") (r "^0.0.4") (d #t) (k 0)) (d (n "kaspa-math") (r "^0.0.4") (d #t) (k 0)) (d (n "kaspa-mining-errors") (r "^0.0.4") (d #t) (k 0)) (d (n "kaspa-utils") (r "^0.0.4") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "prost") (r "^0.12.1") (d #t) (k 0)) (d (n "seqlock") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("sync" "rt-multi-thread" "rt-multi-thread" "macros" "signal"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("net"))) (d #t) (k 0)) (d (n "tonic") (r "^0.10.2") (f (quote ("tls" "gzip" "tls" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.10.2") (f (quote ("prost" "prost"))) (d #t) (k 1)) (d (n "uuid") (r "^1.5.0") (f (quote ("v4" "fast-rng" "serde"))) (d #t) (k 0)))) (h "154l4f4a47qszblicqb35yx10nflgik79xkh08zg9s8rbhx3xjyk")))

(define-public crate-kaspa-p2p-lib-0.13.4 (c (n "kaspa-p2p-lib") (v "0.13.4") (d (list (d (n "borsh") (r "^0.9.1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "ctrlc") (r "^3.4.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "h2") (r "^0.3.21") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "kaspa-consensus-core") (r "^0.13.4") (d #t) (k 0)) (d (n "kaspa-core") (r "^0.13.4") (d #t) (k 0)) (d (n "kaspa-hashes") (r "^0.13.4") (d #t) (k 0)) (d (n "kaspa-math") (r "^0.13.4") (d #t) (k 0)) (d (n "kaspa-mining-errors") (r "^0.13.4") (d #t) (k 0)) (d (n "kaspa-utils") (r "^0.13.4") (d #t) (k 0)) (d (n "kaspa-utils-tower") (r "^0.13.4") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "prost") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "seqlock") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("sync" "rt-multi-thread" "rt-multi-thread" "macros" "signal"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("net"))) (d #t) (k 0)) (d (n "tonic") (r "^0.10.2") (f (quote ("tls" "gzip" "transport" "tls" "gzip"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.10.2") (f (quote ("prost" "prost"))) (d #t) (k 1)) (d (n "uuid") (r "^1.5.0") (f (quote ("v4" "fast-rng" "serde"))) (d #t) (k 0)))) (h "1kypp0p2shxdqfj5fz93d5l71bc5sljfcm2caq5p17bg41qf7w46")))

