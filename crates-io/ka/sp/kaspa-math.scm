(define-module (crates-io ka sp kaspa-math) #:use-module (crates-io))

(define-public crate-kaspa-math-0.0.0 (c (n "kaspa-math") (v "0.0.0") (h "174d798hy5r0vcd3yd8h1sqvshmz0mc97kmk84f6nf4hd40jpia8")))

(define-public crate-kaspa-math-0.0.1 (c (n "kaspa-math") (v "0.0.1") (d (list (d (n "borsh") (r "^0.9.1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "faster-hex") (r "^0.6") (d #t) (k 0)) (d (n "malachite-base") (r "^0.3") (d #t) (k 0)) (d (n "malachite-nz") (r "^0.3") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)))) (h "1hvq0k3z68v79r744x9abqzbmsl52xrka59bi6vvzi81fd4q125m")))

(define-public crate-kaspa-math-0.0.2 (c (n "kaspa-math") (v "0.0.2") (d (list (d (n "borsh") (r "^0.9.1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "faster-hex") (r "^0.6") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.61") (d #t) (k 0)) (d (n "malachite-base") (r "^0.3") (d #t) (k 0)) (d (n "malachite-nz") (r "^0.3") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (k 0)))) (h "10q65jcbfs3fafzaxc7kz51gfkb93m8lads6cjg3ikbymmvgwz48")))

(define-public crate-kaspa-math-0.0.3 (c (n "kaspa-math") (v "0.0.3") (d (list (d (n "borsh") (r "^0.9.1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "faster-hex") (r "^0.6") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.61") (d #t) (k 0)) (d (n "malachite-base") (r "^0.3") (d #t) (k 0)) (d (n "malachite-nz") (r "^0.3") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (k 0)))) (h "02q3yqi9gwvvpgi7y3q7x0354rh50x8c50hfm83rivj818dpkykk")))

(define-public crate-kaspa-math-0.0.4 (c (n "kaspa-math") (v "0.0.4") (d (list (d (n "borsh") (r "^0.9.1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (k 2)) (d (n "faster-hex") (r "^0.6.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (k 0)) (d (n "kaspa-utils") (r "^0.0.4") (d #t) (k 0)) (d (n "malachite-base") (r "^0.4.4") (d #t) (k 0)) (d (n "malachite-nz") (r "^0.4.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.190") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "workflow-core") (r "^0.8.0") (d #t) (k 0)) (d (n "workflow-log") (r "^0.8.0") (d #t) (k 0)) (d (n "workflow-wasm") (r "^0.8.0") (d #t) (k 0)))) (h "1h9vhgrp61f0iymkmcplnph3g34rlxiahljlvwxhzxjhsd792yfi")))

(define-public crate-kaspa-math-0.13.4 (c (n "kaspa-math") (v "0.13.4") (d (list (d (n "borsh") (r "^0.9.1") (f (quote ("rc"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (k 2)) (d (n "faster-hex") (r "^0.6.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.64") (d #t) (k 0)) (d (n "kaspa-utils") (r "^0.13.4") (d #t) (k 0)) (d (n "malachite-base") (r "^0.4.4") (d #t) (k 0)) (d (n "malachite-nz") (r "^0.4.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.190") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "workflow-core") (r "^0.10.3") (d #t) (k 0)) (d (n "workflow-log") (r "^0.10.3") (d #t) (k 0)) (d (n "workflow-wasm") (r "^0.10.3") (d #t) (k 0)))) (h "0dih1hx99blp9p269b38s7d5k9z6dh2hwmj6ss5rdadhykxzbas2")))

