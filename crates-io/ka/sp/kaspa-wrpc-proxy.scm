(define-module (crates-io ka sp kaspa-wrpc-proxy) #:use-module (crates-io))

(define-public crate-kaspa-wrpc-proxy-0.0.1 (c (n "kaspa-wrpc-proxy") (v "0.0.1") (d (list (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "clap") (r "^4.0.23") (f (quote ("derive" "string" "cargo"))) (d #t) (k 0)) (d (n "kaspa-consensus-core") (r "^0.0.1") (d #t) (k 0)) (d (n "kaspa-grpc-client") (r "^0.0.1") (d #t) (k 0)) (d (n "kaspa-rpc-core") (r "^0.0.1") (d #t) (k 0)) (d (n "kaspa-rpc-macros") (r "^0.0.1") (d #t) (k 0)) (d (n "kaspa-wrpc-server") (r "^0.0.1") (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "rt-multi-thread"))) (d #t) (k 0)) (d (n "workflow-core") (r "^0.3.14") (d #t) (k 0)) (d (n "workflow-log") (r "^0.3.14") (d #t) (k 0)) (d (n "workflow-rpc") (r "^0.3.14") (d #t) (k 0)))) (h "02m392q51lmzsaszbnx9da7n066xa36ad9pm9rgq6qy7mf7zxymp")))

(define-public crate-kaspa-wrpc-proxy-0.0.2 (c (n "kaspa-wrpc-proxy") (v "0.0.2") (d (list (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "clap") (r "^4.0.23") (f (quote ("derive" "string" "cargo"))) (d #t) (k 0)) (d (n "kaspa-consensus-core") (r "^0.0.2") (d #t) (k 0)) (d (n "kaspa-grpc-client") (r "^0.0.2") (d #t) (k 0)) (d (n "kaspa-rpc-core") (r "^0.0.2") (d #t) (k 0)) (d (n "kaspa-rpc-macros") (r "^0.0.2") (d #t) (k 0)) (d (n "kaspa-wrpc-server") (r "^0.0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "rt-multi-thread"))) (d #t) (k 0)) (d (n "workflow-core") (r "^0.3.14") (d #t) (k 0)) (d (n "workflow-log") (r "^0.3.14") (d #t) (k 0)) (d (n "workflow-rpc") (r "^0.3.14") (d #t) (k 0)))) (h "1iar8i6pw9byk8qp3winv3vijjqx06rh7a73pixczw559xjy7cpl")))

(define-public crate-kaspa-wrpc-proxy-0.0.3 (c (n "kaspa-wrpc-proxy") (v "0.0.3") (d (list (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "clap") (r "^4.0.23") (f (quote ("derive" "string" "cargo"))) (d #t) (k 0)) (d (n "kaspa-consensus-core") (r "^0.0.3") (d #t) (k 0)) (d (n "kaspa-grpc-client") (r "^0.0.3") (d #t) (k 0)) (d (n "kaspa-rpc-core") (r "^0.0.3") (d #t) (k 0)) (d (n "kaspa-rpc-macros") (r "^0.0.3") (d #t) (k 0)) (d (n "kaspa-wrpc-server") (r "^0.0.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "rt-multi-thread"))) (d #t) (k 0)) (d (n "workflow-core") (r "^0.3.14") (d #t) (k 0)) (d (n "workflow-log") (r "^0.3.14") (d #t) (k 0)) (d (n "workflow-rpc") (r "^0.3.14") (d #t) (k 0)))) (h "1smws7fys5mrvqfc3kmyh8jq773ykw1nd48ipnsjdviid3svwrpl")))

(define-public crate-kaspa-wrpc-proxy-0.0.4 (c (n "kaspa-wrpc-proxy") (v "0.0.4") (d (list (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "clap") (r "^4.4.7") (f (quote ("derive" "string" "cargo"))) (d #t) (k 0)) (d (n "kaspa-consensus-core") (r "^0.0.4") (d #t) (k 0)) (d (n "kaspa-grpc-client") (r "^0.0.4") (d #t) (k 0)) (d (n "kaspa-rpc-core") (r "^0.0.4") (d #t) (k 0)) (d (n "kaspa-rpc-macros") (r "^0.0.4") (d #t) (k 0)) (d (n "kaspa-wrpc-core") (r "^0.0.4") (d #t) (k 0)) (d (n "kaspa-wrpc-server") (r "^0.0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("sync" "rt-multi-thread"))) (d #t) (k 0)) (d (n "workflow-core") (r "^0.8.0") (d #t) (k 0)) (d (n "workflow-log") (r "^0.8.0") (d #t) (k 0)) (d (n "workflow-rpc") (r "^0.8.0") (d #t) (k 0)))) (h "1vyf1kxarxd4wsxb71ad5plzjf9sww95qv5pbriv17ia7svf8ycx")))

(define-public crate-kaspa-wrpc-proxy-0.13.4 (c (n "kaspa-wrpc-proxy") (v "0.13.4") (d (list (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "clap") (r "^4.4.7") (f (quote ("derive" "string" "cargo"))) (d #t) (k 0)) (d (n "kaspa-consensus-core") (r "^0.13.4") (d #t) (k 0)) (d (n "kaspa-grpc-client") (r "^0.13.4") (d #t) (k 0)) (d (n "kaspa-rpc-core") (r "^0.13.4") (d #t) (k 0)) (d (n "kaspa-rpc-macros") (r "^0.13.4") (d #t) (k 0)) (d (n "kaspa-wrpc-server") (r "^0.13.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("sync" "rt-multi-thread"))) (d #t) (k 0)) (d (n "workflow-core") (r "^0.10.3") (d #t) (k 0)) (d (n "workflow-log") (r "^0.10.3") (d #t) (k 0)) (d (n "workflow-rpc") (r "^0.10.3") (d #t) (k 0)))) (h "1b11qw8kagw16v4yi6jbbnkcx5zvjiwi2pgn4629wfdkq4dcwb0s")))

