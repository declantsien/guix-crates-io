(define-module (crates-io ka me kamera) #:use-module (crates-io))

(define-public crate-kamera-0.0.1 (c (n "kamera") (v "0.0.1") (d (list (d (n "icrate") (r "^0.0.3") (f (quote ("Foundation" "Foundation_NSArray" "Foundation_NSNumber" "Foundation_NSMutableDictionary"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc2") (r "^0.4.0") (f (quote ("malloc"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "softbuffer") (r "^0.3.0") (d #t) (k 2)) (d (n "windows") (r "^0.43") (f (quote ("Win32_Media_MediaFoundation" "Win32_System_Com" "Win32_Foundation" "Win32_Media_DirectShow" "Win32_Media" "Win32" "Win32_Media_KernelStreaming" "Win32_System_Com_StructuredStorage" "implement"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.27.5") (d #t) (k 2)))) (h "0w3cpny80lx7vagp0wf6r6k0a7kxamcchwfwjv4lv0ckyy1vpdv5")))

(define-public crate-kamera-0.0.2 (c (n "kamera") (v "0.0.2") (d (list (d (n "ffimage") (r "^0.9.0") (d #t) (k 0)) (d (n "ffimage_yuv") (r "^0.9.0") (d #t) (k 0)) (d (n "icrate") (r "^0.0.3") (f (quote ("Foundation" "Foundation_NSArray" "Foundation_NSNumber" "Foundation_NSMutableDictionary"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc2") (r "^0.4.0") (f (quote ("malloc"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "softbuffer") (r "^0.3.0") (d #t) (k 2)) (d (n "v4l") (r "^0.14.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "windows") (r "^0.43") (f (quote ("Win32_Media_MediaFoundation" "Win32_System_Com" "Win32_Foundation" "Win32_Media_DirectShow" "Win32_Media" "Win32" "Win32_Media_KernelStreaming" "Win32_System_Com_StructuredStorage" "implement"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.27.5") (d #t) (k 2)))) (h "1g1a4z4wcrlggaznqy5s2zg1mnqyc11q6159520rr0qnjwsh4f1p")))

