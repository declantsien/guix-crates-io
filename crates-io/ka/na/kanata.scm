(define-module (crates-io ka na kanata) #:use-module (crates-io))

(define-public crate-kanata-1.0.0 (c (n "kanata") (v "1.0.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "encode_unicode") (r "^0.3.6") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "evdev-rs") (r "^0.4.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "kanata-keyberon") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.70") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "native-windows-gui") (r "^1.0.12") (f (quote ("cursor" "embed-resource" "menu" "message-window" "no-styling"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "simplelog") (r "^0.8.0") (d #t) (k 0)) (d (n "uinput-sys") (r "^0.1.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("consoleapi" "wincon"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0013qw2wm8ldzxhh6482xqlx3wc8czpc54p4q2w34d3ibgi4sza9")))

(define-public crate-kanata-1.0.2 (c (n "kanata") (v "1.0.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "encode_unicode") (r "^0.3.6") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "evdev-rs") (r "^0.4.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "kanata-keyberon") (r "^0.2.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.70") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "native-windows-gui") (r "^1.0.12") (f (quote ("cursor" "embed-resource" "menu" "message-window" "no-styling"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "simplelog") (r "^0.8.0") (d #t) (k 0)) (d (n "uinput-sys") (r "^0.1.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("consoleapi" "wincon"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "04lbbdkiiq9r8nnhy4xcx68hma6k43xc3vm7lxygai5kxcrjqcw9")))

(define-public crate-kanata-1.0.5 (c (n "kanata") (v "1.0.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "encode_unicode") (r "^0.3.6") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "evdev-rs") (r "^0.4.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "kanata-keyberon") (r "^0.2.3") (d #t) (k 0)) (d (n "libc") (r "^0.2.70") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "native-windows-gui") (r "^1.0.12") (f (quote ("cursor" "embed-resource" "menu" "message-window" "no-styling"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "simplelog") (r "^0.8.0") (d #t) (k 0)) (d (n "uinput-sys") (r "^0.1.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("consoleapi" "wincon"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0vzdmnydf755qw794ajpfd1dmisxgj0438rya8cv133w3js3zmsx") (f (quote (("cmd"))))))

(define-public crate-kanata-1.0.6 (c (n "kanata") (v "1.0.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "encode_unicode") (r "^0.3.6") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "evdev-rs") (r "^0.6.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "heapless") (r "^0.7.15") (d #t) (k 0)) (d (n "kanata-keyberon") (r "^0.2.4") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mio") (r "^0.8.4") (f (quote ("os-poll" "os-ext"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-windows-gui") (r "^1.0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "net2") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "signal-hook") (r "^0.3.14") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "simplelog") (r "^0.8.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("wincon" "timeapi" "mmsystem"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0h8rgchd8z8c3fl7gzr93cr8b83j110qr58is37n659ymx6bk7mz") (f (quote (("cmd"))))))

(define-public crate-kanata-1.0.7 (c (n "kanata") (v "1.0.7") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "encode_unicode") (r "^0.3.6") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "evdev") (r "^0.11.6") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "heapless") (r "^0.7.15") (d #t) (k 0)) (d (n "interception") (r "^0.1.2") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "kanata-keyberon") (r "^0.2.6") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mio") (r "^0.8.4") (f (quote ("os-poll" "os-ext"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-windows-gui") (r "^1.0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "net2") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "signal-hook") (r "^0.3.14") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("wincon" "timeapi" "mmsystem"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1zkhwxcywz029811gbh7b77xlv9zi0mx87q0k0dnb5k6xzjs8k5h") (f (quote (("interception_driver" "interception") ("cmd"))))))

(define-public crate-kanata-1.0.8 (c (n "kanata") (v "1.0.8") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "encode_unicode") (r "^0.3.6") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "evdev") (r "^0.12.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "interception") (r "^0.1.2") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "kanata-keyberon") (r "^0.3.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mio") (r "^0.8.4") (f (quote ("os-poll" "os-ext"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-windows-gui") (r "^1.0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "net2") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "signal-hook") (r "^0.3.14") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("wincon" "timeapi" "mmsystem"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "06y4dysfkk06xwyc1lqqkp3szaicp11rvrhaawfr81nkl4kjq39s") (f (quote (("interception_driver" "interception") ("cmd"))))))

(define-public crate-kanata-1.1.0 (c (n "kanata") (v "1.1.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "encode_unicode") (r "^0.3.6") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "evdev") (r "^0.12.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "interception") (r "^0.1.2") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "kanata-keyberon") (r "^0.5.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mio") (r "^0.8.4") (f (quote ("os-poll" "os-ext"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-windows-gui") (r "^1.0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "net2") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "signal-hook") (r "^0.3.14") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("wincon" "timeapi" "mmsystem"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0ha894rf2sz642fc063r60xa46zdl4lw1f7i7cf1gmbmylih8xha") (f (quote (("interception_driver" "interception") ("cmd"))))))

(define-public crate-kanata-1.2.0-prerelease-1 (c (n "kanata") (v "1.2.0-prerelease-1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "encode_unicode") (r "^0.3.6") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "evdev") (r "^0.12.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "inotify") (r "^0.10.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "interception") (r "^0.1.2") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "kanata-keyberon") (r "^0.8.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "mio") (r "^0.8.4") (f (quote ("os-poll" "os-ext"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-windows-gui") (r "^1.0.12") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "net2") (r "^0.2") (d #t) (k 0)) (d (n "nix") (r "^0.26.1") (f (quote ("ioctl"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "signal-hook") (r "^0.3.14") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("wincon" "timeapi" "mmsystem"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "12q3hrjrwn4d2104m6nlma1im90nwga6w3lx7yl6w006b3rqgm7v") (f (quote (("perf_logging") ("interception_driver" "interception") ("cmd"))))))

(define-public crate-kanata-1.2.1-prerelease-3 (c (n "kanata") (v "1.2.1-prerelease-3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("std" "derive"))) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "encode_unicode") (r "^0.3.6") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "evdev") (r "^0.12.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "inotify") (r "^0.10.0") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "interception") (r "^0.1.2") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "kanata-keyberon") (r "^0.8.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "mio") (r "^0.8.4") (f (quote ("os-poll" "os-ext"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-windows-gui") (r "^1.0.12") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "nix") (r "^0.26.1") (f (quote ("ioctl"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "sd-notify") (r "^0.4.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "serial_test") (r "^1") (k 2)) (d (n "signal-hook") (r "^0.3.14") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("wincon" "timeapi" "mmsystem"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0prdfgyb3609vpa50l9r4was17cpjc4rmlygi57vrab7kiz5ziyp") (f (quote (("perf_logging") ("interception_driver" "interception") ("cmd"))))))

(define-public crate-kanata-1.3.0-prerelease-1 (c (n "kanata") (v "1.3.0-prerelease-1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.1.6") (f (quote ("std" "derive" "help" "suggestions"))) (k 0)) (d (n "encode_unicode") (r "^0.3.6") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "evdev") (r "^0.12.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "inotify") (r "^0.10.0") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "interception") (r "^0.1.2") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "kanata-keyberon") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "miette") (r "^5.5.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mio") (r "^0.8.4") (f (quote ("os-poll" "os-ext"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-windows-gui") (r "^1.0.12") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "nix") (r "^0.26.1") (f (quote ("ioctl"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "sd-notify") (r "^0.4.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "serial_test") (r "^1") (k 2)) (d (n "signal-hook") (r "^0.3.14") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("wincon" "timeapi" "mmsystem"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "03c6zrsg583by4zv0dx9p7qliv7jh637lpw41ky44i6cmb4slybi") (f (quote (("perf_logging") ("interception_driver" "interception") ("cmd"))))))

(define-public crate-kanata-1.3.0-prerelease-2 (c (n "kanata") (v "1.3.0-prerelease-2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.1.6") (f (quote ("std" "derive" "help" "suggestions"))) (k 0)) (d (n "encode_unicode") (r "^0.3.6") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "evdev") (r "^0.12.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "inotify") (r "^0.10.0") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "interception") (r "^0.1.2") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "kanata-keyberon") (r "^0.13.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "miette") (r "^5.5.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mio") (r "^0.8.4") (f (quote ("os-poll" "os-ext"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-windows-gui") (r "^1.0.12") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "nix") (r "^0.26.1") (f (quote ("ioctl"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "sd-notify") (r "^0.4.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "serial_test") (r "^1") (k 2)) (d (n "signal-hook") (r "^0.3.14") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("wincon" "timeapi" "mmsystem"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0p9l9sgm2zi3n3svl5q07bwcr8vimvgzbvgx42b7xzmbcpnzf3hn") (f (quote (("perf_logging") ("interception_driver" "interception") ("cmd"))))))

(define-public crate-kanata-1.3.0-prerelease-3 (c (n "kanata") (v "1.3.0-prerelease-3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.1.6") (f (quote ("std" "derive" "help" "suggestions"))) (k 0)) (d (n "encode_unicode") (r "^0.3.6") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "evdev") (r "^0.12.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "inotify") (r "^0.10.0") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "interception") (r "^0.1.2") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "kanata-keyberon") (r "^0.14.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "miette") (r "^5.5.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mio") (r "^0.8.4") (f (quote ("os-poll" "os-ext"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-windows-gui") (r "^1.0.12") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "nix") (r "^0.26.1") (f (quote ("ioctl"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "sd-notify") (r "^0.4.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "serial_test") (r "^1") (k 2)) (d (n "signal-hook") (r "^0.3.14") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("wincon" "timeapi" "mmsystem"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0fyzsai1p0kf7q4fypvrakji9a8209r8k7c00lvhcllggnh148h6") (f (quote (("perf_logging") ("interception_driver" "interception") ("cmd"))))))

(define-public crate-kanata-1.3.0 (c (n "kanata") (v "1.3.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.1.6") (f (quote ("std" "derive" "help" "suggestions"))) (k 0)) (d (n "encode_unicode") (r "^0.3.6") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "evdev") (r "^0.12.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "inotify") (r "^0.10.0") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "interception") (r "^0.1.2") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "kanata-keyberon") (r "^0.15.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "miette") (r "^5.5.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mio") (r "^0.8.4") (f (quote ("os-poll" "os-ext"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-windows-gui") (r "^1.0.12") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "nix") (r "^0.26.1") (f (quote ("ioctl"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "sd-notify") (r "^0.4.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "serial_test") (r "^1") (k 2)) (d (n "signal-hook") (r "^0.3.14") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("wincon" "timeapi" "mmsystem"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0cbi6pk4i9ww0bdhxswi3rsdkljj1c27kxcwn911n4yyiksac1m3") (f (quote (("perf_logging") ("interception_driver" "interception") ("cmd"))))))

(define-public crate-kanata-1.4.0-prerelease-1 (c (n "kanata") (v "1.4.0-prerelease-1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.1.6") (f (quote ("std" "derive" "help" "suggestions"))) (k 0)) (d (n "encode_unicode") (r "^0.3.6") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "evdev") (r "^0.12.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "inotify") (r "^0.10.0") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "interception") (r "^0.1.2") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "kanata-keyberon") (r "^0.16.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "miette") (r "^5.5.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mio") (r "^0.8.4") (f (quote ("os-poll" "os-ext"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-windows-gui") (r "^1.0.12") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "nix") (r "^0.26.1") (f (quote ("ioctl"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "sd-notify") (r "^0.4.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "signal-hook") (r "^0.3.14") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("wincon" "timeapi" "mmsystem"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0rf5y2w39lac9h1g3miswmxwv9sr04d0iwdbxn5bckyh0g5ra0fp") (f (quote (("perf_logging") ("interception_driver" "interception") ("cmd"))))))

(define-public crate-kanata-1.4.0-prerelease-2 (c (n "kanata") (v "1.4.0-prerelease-2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.1.6") (f (quote ("std" "derive" "help" "suggestions"))) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "encode_unicode") (r "^0.3.6") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "evdev") (r "^0.12.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "inotify") (r "^0.10.0") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "kanata-interception") (r "^0.2.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "kanata-keyberon") (r "^0.17.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "miette") (r "^5.7.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mio") (r "^0.8.4") (f (quote ("os-poll" "os-ext"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-windows-gui") (r "^1.0.12") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "nix") (r "^0.26.1") (f (quote ("ioctl"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "sd-notify") (r "^0.4.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "signal-hook") (r "^0.3.14") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("wincon" "timeapi" "mmsystem"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0r9y3avqgc4y6xashw9587pdwap6n2gi4iicanx82a97cr8w8jd1") (f (quote (("perf_logging") ("interception_driver" "kanata-interception") ("cmd"))))))

(define-public crate-kanata-1.4.0-prerelease-3 (c (n "kanata") (v "1.4.0-prerelease-3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.1.6") (f (quote ("std" "derive" "help" "suggestions"))) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "encode_unicode") (r "^0.3.6") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "evdev") (r "=0.12.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "inotify") (r "^0.10.0") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "kanata-interception") (r "^0.2.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "kanata-keyberon") (r "^0.19.0") (d #t) (k 0)) (d (n "kanata-parser") (r "^0.19.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "miette") (r "^5.7.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mio") (r "^0.8.4") (f (quote ("os-poll" "os-ext"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-windows-gui") (r "^1.0.12") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "nix") (r "^0.26.1") (f (quote ("ioctl"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "sd-notify") (r "^0.4.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "signal-hook") (r "^0.3.14") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("wincon" "timeapi" "mmsystem"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1cymilcyg93gr61y79bd1b3d7dalvc6d0ll7lm5v6n1cawgxk2xp") (f (quote (("perf_logging") ("interception_driver" "kanata-interception" "kanata-parser/interception_driver") ("cmd" "kanata-parser/cmd"))))))

(define-public crate-kanata-1.4.0 (c (n "kanata") (v "1.4.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.1.6") (f (quote ("std" "derive" "help" "suggestions"))) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "encode_unicode") (r "^0.3.6") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "evdev") (r "=0.12.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "inotify") (r "^0.10.0") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "kanata-interception") (r "^0.2.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "kanata-keyberon") (r "^0.20.0") (d #t) (k 0)) (d (n "kanata-parser") (r "^0.20.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "miette") (r "^5.7.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mio") (r "^0.8.4") (f (quote ("os-poll" "os-ext"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-windows-gui") (r "^1.0.12") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "nix") (r "^0.26.1") (f (quote ("ioctl"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "sd-notify") (r "^0.4.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "signal-hook") (r "^0.3.14") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("wincon" "timeapi" "mmsystem"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "10gnzc6fi5xk45qi7i6yb2agyabyv6n5ji2zha9v5vfx5z81m63w") (f (quote (("perf_logging") ("interception_driver" "kanata-interception" "kanata-parser/interception_driver") ("cmd" "kanata-parser/cmd"))))))

(define-public crate-kanata-1.5.0-prerelease-1 (c (n "kanata") (v "1.5.0-prerelease-1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.1.6") (f (quote ("std" "derive" "help" "suggestions"))) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "encode_unicode") (r "^0.3.6") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "evdev") (r "=0.12.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "inotify") (r "^0.10.0") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "is-terminal") (r "=0.4.7") (d #t) (k 0)) (d (n "kanata-interception") (r "^0.2.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "kanata-keyberon") (r "^0.150.0") (d #t) (k 0)) (d (n "kanata-parser") (r "^0.150.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "miette") (r "^5.7.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mio") (r "^0.8.4") (f (quote ("os-poll" "os-ext"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-windows-gui") (r "^1.0.12") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "nix") (r "^0.26.1") (f (quote ("ioctl"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "sd-notify") (r "^0.4.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_derive") (r "=1.0.171") (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "signal-hook") (r "^0.3.14") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("wincon" "timeapi" "mmsystem"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0wf9ycblgjlmdz0lys9lyj2jpy8pfxcp61y2d9s3k5l766s5xz02") (f (quote (("perf_logging") ("interception_driver" "kanata-interception" "kanata-parser/interception_driver") ("cmd" "kanata-parser/cmd"))))))

(define-public crate-kanata-1.5.0-prerelease-2 (c (n "kanata") (v "1.5.0-prerelease-2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.1.6") (f (quote ("std" "derive" "help" "suggestions"))) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "encode_unicode") (r "^0.3.6") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "evdev") (r "=0.12.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "inotify") (r "^0.10.0") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "is-terminal") (r "=0.4.7") (d #t) (k 0)) (d (n "kanata-interception") (r "^0.2.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "kanata-keyberon") (r "^0.150.2") (d #t) (k 0)) (d (n "kanata-parser") (r "^0.150.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "miette") (r "^5.7.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mio") (r "^0.8.4") (f (quote ("os-poll" "os-ext"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-windows-gui") (r "^1.0.12") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "nix") (r "^0.26.1") (f (quote ("ioctl"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "sd-notify") (r "^0.4.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_derive") (r "=1.0.171") (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "signal-hook") (r "^0.3.14") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("wincon" "timeapi" "mmsystem"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0yih7yqvhr8arq9xgsxrlj6ddgszrmfd8874054x6c4k404hhfmy") (f (quote (("perf_logging") ("interception_driver" "kanata-interception" "kanata-parser/interception_driver") ("cmd" "kanata-parser/cmd"))))))

(define-public crate-kanata-1.5.0-prerelease-3 (c (n "kanata") (v "1.5.0-prerelease-3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.1.6") (f (quote ("std" "derive" "help" "suggestions"))) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "encode_unicode") (r "^0.3.6") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "evdev") (r "=0.12.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "inotify") (r "^0.10.0") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "is-terminal") (r "=0.4.7") (d #t) (k 0)) (d (n "kanata-interception") (r "^0.2.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "kanata-keyberon") (r "^0.150.3") (d #t) (k 0)) (d (n "kanata-parser") (r "^0.150.3") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "miette") (r "^5.7.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mio") (r "^0.8.4") (f (quote ("os-poll" "os-ext"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-windows-gui") (r "^1.0.12") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "nix") (r "^0.26.1") (f (quote ("ioctl"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "sd-notify") (r "^0.4.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "signal-hook") (r "^0.3.14") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("wincon" "timeapi" "mmsystem"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1i93mwdmadx70qr154ijz3wj60z811mcjjng248h9abmp5fqadyp") (f (quote (("perf_logging") ("interception_driver" "kanata-interception" "kanata-parser/interception_driver") ("cmd" "kanata-parser/cmd"))))))

(define-public crate-kanata-1.5.0 (c (n "kanata") (v "1.5.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.1.6") (f (quote ("std" "derive" "help" "suggestions"))) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "encode_unicode") (r "^0.3.6") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "evdev") (r "=0.12.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "inotify") (r "^0.10.0") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "is-terminal") (r "=0.4.7") (d #t) (k 0)) (d (n "kanata-interception") (r "^0.2.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "kanata-keyberon") (r "^0.150.4") (d #t) (k 0)) (d (n "kanata-parser") (r "^0.150.4") (d #t) (k 0)) (d (n "karabiner-driverkit") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "miette") (r "^5.7.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mio") (r "^0.8.4") (f (quote ("os-poll" "os-ext"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-windows-gui") (r "^1.0.12") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "nix") (r "^0.26.1") (f (quote ("ioctl"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "sd-notify") (r "^0.4.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "signal-hook") (r "^0.3.14") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("wincon" "timeapi" "mmsystem"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1ax70cx1lfgrq9vzpfyny23rlfx5cvww2dm1h4jn61dvlb27fpg7") (f (quote (("perf_logging") ("interception_driver" "kanata-interception" "kanata-parser/interception_driver") ("cmd" "kanata-parser/cmd"))))))

(define-public crate-kanata-1.6.0-prerelease-1 (c (n "kanata") (v "1.6.0-prerelease-1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("std" "derive" "help" "suggestions"))) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "encode_unicode") (r "^0.3.6") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "evdev") (r "=0.12.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "inotify") (r "^0.10.0") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "kanata-interception") (r "^0.2.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "kanata-keyberon") (r "^0.160.1") (d #t) (k 0)) (d (n "kanata-parser") (r "^0.160.1") (d #t) (k 0)) (d (n "karabiner-driverkit") (r "^0.1.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "miette") (r "^5.7.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mio") (r "^0.8.4") (f (quote ("os-poll" "os-ext"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-windows-gui") (r "^1.0.12") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "nix") (r "^0.26.1") (f (quote ("ioctl"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "sd-notify") (r "^0.4.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "signal-hook") (r "^0.3.14") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("wincon" "timeapi" "mmsystem"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "09wzq1bzf7b9nh7xa44ikllg6mi9aiq3kvglnv3ynsggyycjxc5c") (f (quote (("win_sendinput_send_scancodes") ("tcp_server") ("perf_logging") ("interception_driver" "kanata-interception" "kanata-parser/interception_driver") ("default" "tcp_server") ("cmd" "kanata-parser/cmd"))))))

(define-public crate-kanata-1.6.0-prerelease-4 (c (n "kanata") (v "1.6.0-prerelease-4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("std" "derive" "help" "suggestions"))) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "encode_unicode") (r "^0.3.6") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "evdev") (r "=0.12.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "indoc") (r "^2.0.4") (o #t) (d #t) (k 0)) (d (n "inotify") (r "^0.10.0") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "instant") (r "^0.1.12") (k 0)) (d (n "kanata-interception") (r "^0.2.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "kanata-keyberon") (r "^0.160.4") (d #t) (k 0)) (d (n "kanata-parser") (r "^0.160.4") (d #t) (k 0)) (d (n "kanata-tcp-protocol") (r "^0.160.4") (d #t) (k 0)) (d (n "karabiner-driverkit") (r "^0.1.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "miette") (r "^5.7.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mio") (r "^0.8.11") (f (quote ("os-poll" "os-ext"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-windows-gui") (r "^1.0.12") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "nix") (r "^0.26.1") (f (quote ("ioctl"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "sd-notify") (r "^0.4.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "signal-hook") (r "^0.3.14") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("wincon" "timeapi" "mmsystem"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1y1ajklwmly1cvbfg9i7855jvixw1dg78gc93knrfcs9nii93ihb") (f (quote (("win_sendinput_send_scancodes") ("win_llhook_read_scancodes") ("wasm" "instant/wasm-bindgen") ("tcp_server" "serde_json") ("simulated_output" "indoc") ("perf_logging") ("interception_driver" "kanata-interception" "kanata-parser/interception_driver") ("default" "tcp_server") ("cmd" "kanata-parser/cmd"))))))

(define-public crate-kanata-1.6.0 (c (n "kanata") (v "1.6.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("std" "derive" "help" "suggestions"))) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "embed-resource") (r "^2.4.2") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 1)) (d (n "encode_unicode") (r "^0.3.6") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "evdev") (r "=0.12.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "indoc") (r "^2.0.4") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^2.0.4") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 1)) (d (n "inotify") (r "^0.10.0") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "instant") (r "^0.1.12") (k 0)) (d (n "kanata-interception") (r "^0.2.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "kanata-keyberon") (r "^0.160.5") (d #t) (k 0)) (d (n "kanata-parser") (r "^0.160.5") (d #t) (k 0)) (d (n "kanata-tcp-protocol") (r "^0.160.5") (d #t) (k 0)) (d (n "karabiner-driverkit") (r "^0.1.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "miette") (r "^5.7.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mio") (r "^0.8.11") (f (quote ("os-poll" "os-ext"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-windows-gui") (r "^1.0.12") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "nix") (r "^0.26.1") (f (quote ("ioctl"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1.10.4") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 1)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "sd-notify") (r "^0.4.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "signal-hook") (r "^0.3.14") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("wincon" "timeapi" "mmsystem"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1phdpjffzml9pjwy10l9zihx9v3y03n3i9adj76jl6irvcz94acl") (f (quote (("win_sendinput_send_scancodes") ("win_manifest" "embed-resource" "indoc" "regex") ("win_llhook_read_scancodes") ("wasm" "instant/wasm-bindgen") ("tcp_server" "serde_json") ("simulated_output" "indoc") ("perf_logging") ("interception_driver" "kanata-interception" "kanata-parser/interception_driver") ("default" "tcp_server") ("cmd" "kanata-parser/cmd"))))))

(define-public crate-kanata-1.6.1-prerelease-1 (c (n "kanata") (v "1.6.1-prerelease-1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("std" "derive" "help" "suggestions"))) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "embed-resource") (r "^2.4.2") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 1)) (d (n "encode_unicode") (r "^0.3.6") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "evdev") (r "=0.12.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "indoc") (r "^2.0.4") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^2.0.4") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 1)) (d (n "inotify") (r "^0.10.0") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "instant") (r "^0.1.12") (k 0)) (d (n "kanata-interception") (r "^0.2.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "kanata-keyberon") (r "^0.161.0") (d #t) (k 0)) (d (n "kanata-parser") (r "^0.161.0") (d #t) (k 0)) (d (n "kanata-tcp-protocol") (r "^0.161.0") (d #t) (k 0)) (d (n "karabiner-driverkit") (r "^0.1.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "miette") (r "^5.7.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mio") (r "^0.8.11") (f (quote ("os-poll" "os-ext"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-windows-gui") (r "^1.0.12") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "nix") (r "^0.26.1") (f (quote ("ioctl"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1.10.4") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 1)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "sd-notify") (r "^0.4.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "signal-hook") (r "^0.3.14") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("wincon" "timeapi" "mmsystem"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1cbbbmympv65m6cjlzmwc83qrzn3xdmyf16dndalx71mw93dfq4w") (f (quote (("win_sendinput_send_scancodes") ("win_manifest" "embed-resource" "indoc" "regex") ("win_llhook_read_scancodes") ("wasm" "instant/wasm-bindgen") ("tcp_server" "serde_json") ("simulated_output" "indoc") ("perf_logging") ("interception_driver" "kanata-interception" "kanata-parser/interception_driver") ("default" "tcp_server") ("cmd" "kanata-parser/cmd"))))))

(define-public crate-kanata-1.6.1 (c (n "kanata") (v "1.6.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("std" "derive" "help" "suggestions"))) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "embed-resource") (r "^2.4.2") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 1)) (d (n "encode_unicode") (r "^0.3.6") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "evdev") (r "=0.12.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "indoc") (r "^2.0.4") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^2.0.4") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 1)) (d (n "inotify") (r "^0.10.0") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "instant") (r "^0.1.12") (k 0)) (d (n "kanata-interception") (r "^0.2.0") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "kanata-keyberon") (r "^0.161.1") (d #t) (k 0)) (d (n "kanata-parser") (r "^0.161.1") (d #t) (k 0)) (d (n "kanata-tcp-protocol") (r "^0.161.1") (d #t) (k 0)) (d (n "karabiner-driverkit") (r "^0.1.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "miette") (r "^5.7.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mio") (r "^0.8.11") (f (quote ("os-poll" "os-ext"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "native-windows-gui") (r "^1.0.12") (t "cfg(target_os = \"windows\")") (k 0)) (d (n "nix") (r "^0.26.1") (f (quote ("ioctl"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1.10.4") (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 1)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "sd-notify") (r "^0.4.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde_json") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "signal-hook") (r "^0.3.14") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("wincon" "timeapi" "mmsystem"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "03pxjixqm4mlxj49371wc2bprp6b8sx9xqqawx34875gf9axy5jw") (f (quote (("win_sendinput_send_scancodes") ("win_manifest" "embed-resource" "indoc" "regex") ("win_llhook_read_scancodes") ("wasm" "instant/wasm-bindgen") ("tcp_server" "serde_json") ("simulated_output" "indoc") ("perf_logging") ("interception_driver" "kanata-interception" "kanata-parser/interception_driver") ("default" "tcp_server") ("cmd" "kanata-parser/cmd"))))))

