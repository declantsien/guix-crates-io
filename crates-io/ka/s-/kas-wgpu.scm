(define-module (crates-io ka s- kas-wgpu) #:use-module (crates-io))

(define-public crate-kas-wgpu-0.1.0-pre.1 (c (n "kas-wgpu") (v "0.1.0-pre.1") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clipboard") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "font-kit") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "glsl-to-spirv") (r "^0.1") (d #t) (k 0)) (d (n "kas") (r "^0.1.0-pre.1") (f (quote ("winit"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "wgpu") (r "^0.4.0") (d #t) (k 0)) (d (n "wgpu_glyph") (r "^0.6.0") (d #t) (k 0)) (d (n "winit") (r "= 0.20.0-alpha5") (d #t) (k 0)))) (h "174kvdcmk810xj68vv8bhjhqclff556djyn8v4zxz83yvk3mh0y3") (f (quote (("default" "clipboard" "font-kit"))))))

(define-public crate-kas-wgpu-0.1.0 (c (n "kas-wgpu") (v "0.1.0") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clipboard") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "font-kit") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "glsl-to-spirv") (r "^0.1") (d #t) (k 0)) (d (n "kas") (r "^0.1.0") (f (quote ("winit"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "wgpu") (r "^0.4.0") (d #t) (k 0)) (d (n "wgpu_glyph") (r "^0.6.0") (d #t) (k 0)) (d (n "winit") (r "= 0.20.0-alpha5") (d #t) (k 0)))) (h "14gq3cq17x8907a0r8z65hnhx9gbs3w7fdg3w4rp9i35gq6ibzxl") (f (quote (("default" "clipboard" "font-kit"))))))

(define-public crate-kas-wgpu-0.2.0 (c (n "kas-wgpu") (v "0.2.0") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clipboard") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "font-kit") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "kas") (r "^0.2.0") (f (quote ("winit"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "shaderc") (r "^0.6.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.1") (d #t) (k 0)) (d (n "wgpu") (r "^0.4.0") (d #t) (k 0)) (d (n "wgpu_glyph") (r "^0.6.0") (d #t) (k 0)) (d (n "winit") (r "^0.20.0") (d #t) (k 0)))) (h "1wx7rjb15b4rbfhvxbl1hw6pk7sqhd2hydi1wiq2glhajv8jvkqr") (f (quote (("default" "clipboard" "font-kit"))))))

(define-public crate-kas-wgpu-0.2.1 (c (n "kas-wgpu") (v "0.2.1") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clipboard") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "font-kit") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "kas") (r "^0.2.1") (f (quote ("winit"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "shaderc") (r "^0.6.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.1") (d #t) (k 0)) (d (n "wgpu") (r "^0.4.0") (d #t) (k 0)) (d (n "wgpu_glyph") (r "^0.6.0") (d #t) (k 0)) (d (n "winit") (r "^0.20.0") (d #t) (k 0)))) (h "00xwsj2zbdy188d9kygxp89mwx8hxwlysmjspry0lnhdm1qsdf34") (f (quote (("default" "clipboard" "font-kit"))))))

(define-public crate-kas-wgpu-0.3.0 (c (n "kas-wgpu") (v "0.3.0") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clipboard") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "kas") (r "^0.3.0") (f (quote ("winit"))) (d #t) (k 0)) (d (n "kas-theme") (r "^0.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "shaderc") (r "^0.6.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.1") (d #t) (k 0)) (d (n "wgpu") (r "^0.4.0") (d #t) (k 0)) (d (n "wgpu_glyph") (r "^0.6.0") (d #t) (k 0)) (d (n "winit") (r "^0.21.0") (d #t) (k 0)))) (h "1q3i0q1mps79xkk0wrgyspzr3dn760m4xzc18glbkv7xiscf07w9") (f (quote (("stack_dst" "kas-theme/stack_dst") ("gat" "kas-theme/gat") ("default" "clipboard" "stack_dst"))))))

(define-public crate-kas-wgpu-0.3.1 (c (n "kas-wgpu") (v "0.3.1") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clipboard") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "kas") (r "^0.3.0") (f (quote ("winit"))) (d #t) (k 0)) (d (n "kas-theme") (r "^0.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "shaderc") (r "^0.6.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.1") (d #t) (k 0)) (d (n "wgpu") (r "^0.4.0") (d #t) (k 0)) (d (n "wgpu_glyph") (r "^0.6.0") (d #t) (k 0)) (d (n "winit") (r "^0.21.0") (d #t) (k 0)))) (h "1b46h2qjqy8mm115hi089pq5biwnrsjhvvz4yfy4f3m1afc9frn8") (f (quote (("stack_dst" "kas-theme/stack_dst") ("gat" "kas-theme/gat") ("default" "clipboard" "stack_dst"))))))

(define-public crate-kas-wgpu-0.4.0 (c (n "kas-wgpu") (v "0.4.0") (d (list (d (n "bytemuck") (r "^1.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clipboard") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "kas") (r "^0.4.0") (f (quote ("winit"))) (d #t) (k 0)) (d (n "kas-theme") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "shaderc") (r "^0.6.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.1") (d #t) (k 0)) (d (n "wgpu") (r "^0.5.0") (d #t) (k 0)) (d (n "wgpu_glyph") (r "^0.8.0") (d #t) (k 0)) (d (n "winit") (r "^0.22.0") (d #t) (k 0)))) (h "1fqmf1w5h13zfgxmj3iz02ri07rjy4rqh1ddcagql2mdsm105d1g") (f (quote (("unsize" "kas-theme/unsize") ("stack_dst" "kas-theme/stack_dst") ("gat" "kas-theme/gat") ("default" "clipboard" "stack_dst"))))))

(define-public crate-kas-wgpu-0.5.0 (c (n "kas-wgpu") (v "0.5.0") (d (list (d (n "bytemuck") (r "^1.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clipboard") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "kas") (r "^0.5.0") (f (quote ("winit"))) (d #t) (k 0)) (d (n "kas-theme") (r "^0.5.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "shaderc") (r "^0.6.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.1") (d #t) (k 0)) (d (n "wgpu") (r "^0.5.0") (d #t) (k 0)) (d (n "wgpu_glyph") (r "^0.9.0") (d #t) (k 0)) (d (n "winit") (r "^0.22.0") (d #t) (k 0)))) (h "0nigf6chk6nk6nrcwrz4lhifgapdwz1m49pmmlgsyip93syb9cvy") (f (quote (("unsize" "kas-theme/unsize") ("stack_dst" "kas-theme/stack_dst") ("shaping" "kas/shaping") ("gat" "kas-theme/gat") ("default" "clipboard" "stack_dst"))))))

(define-public crate-kas-wgpu-0.6.0 (c (n "kas-wgpu") (v "0.6.0") (d (list (d (n "bytemuck") (r ">=1.2.0, <2.0.0") (d #t) (k 0)) (d (n "chrono") (r ">=0.4.0, <0.5.0") (d #t) (k 2)) (d (n "clipboard") (r ">=0.5.0, <0.6.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r ">=0.7.0, <0.8.0") (d #t) (k 2)) (d (n "futures") (r ">=0.3.0, <0.4.0") (d #t) (k 0)) (d (n "glob") (r ">=0.3.0, <0.4.0") (d #t) (k 1)) (d (n "kas") (r ">=0.6.0, <0.7.0") (f (quote ("winit"))) (d #t) (k 0)) (d (n "kas-theme") (r ">=0.6.0, <0.7.0") (d #t) (k 0)) (d (n "log") (r ">=0.4.0, <0.5.0") (d #t) (k 0)) (d (n "smallvec") (r ">=1.1.0, <2.0.0") (d #t) (k 0)) (d (n "wgpu") (r ">=0.6.0, <0.7.0") (d #t) (k 0)) (d (n "wgpu_glyph") (r ">=0.10.0, <0.11.0") (d #t) (k 0)) (d (n "winit") (r ">=0.23.0, <0.24.0") (d #t) (k 0)))) (h "167s6jjhn0rjmfbj4wx6hyqx5s22adqi6m7lg2abz4nhiv5w7l8h") (f (quote (("unsize" "kas-theme/unsize") ("stack_dst" "kas-theme/stack_dst") ("shaping" "kas/shaping") ("nightly" "unsize" "kas/nightly" "kas-theme/nightly") ("gat" "kas-theme/gat") ("default" "clipboard" "stack_dst"))))))

(define-public crate-kas-wgpu-0.7.0 (c (n "kas-wgpu") (v "0.7.0") (d (list (d (n "bytemuck") (r "^1.5.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "kas") (r "^0.7.0") (f (quote ("winit"))) (d #t) (k 0)) (d (n "kas-theme") (r "^0.7.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "wgpu") (r "^0.7.0") (d #t) (k 0)) (d (n "wgpu_glyph") (r "^0.11.0") (d #t) (k 0)) (d (n "window_clipboard") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "winit") (r "^0.24") (d #t) (k 0)))) (h "0kk5pgwskppq34i6ms3zgpg2yvlnhs4hsjjlq47mm8jj7mdfvx5j") (f (quote (("unsize" "kas-theme/unsize") ("stack_dst" "kas-theme/stack_dst") ("shaping" "kas/shaping") ("nightly" "unsize" "kas/nightly" "kas-theme/nightly") ("gat" "kas-theme/gat") ("default" "clipboard" "stack_dst") ("clipboard" "window_clipboard"))))))

(define-public crate-kas-wgpu-0.8.0 (c (n "kas-wgpu") (v "0.8.0") (d (list (d (n "bytemuck") (r "^1.7.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "guillotiere") (r "^0.6.0") (d #t) (k 0)) (d (n "image") (r "^0.23.14") (d #t) (k 0)) (d (n "kas") (r "^0.8.0") (f (quote ("config" "winit"))) (d #t) (k 0)) (d (n "kas-text") (r "^0.3.0") (d #t) (k 0)) (d (n "kas-theme") (r "^0.8.0") (f (quote ("config"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "wgpu") (r "^0.8.0") (d #t) (k 0)) (d (n "window_clipboard") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "winit") (r "^0.25") (d #t) (k 0)))) (h "07sv4c1b2ba6n8nlqy2jjppzlnpsxchh8m3y9kd8vcjfx1m6vf4n") (f (quote (("unsize" "kas-theme/unsize") ("stack_dst" "kas-theme/stack_dst") ("shaping" "kas-text/shaping") ("raster" "kas-text/raster") ("nightly" "unsize" "kas/nightly" "kas-theme/nightly") ("gat" "kas-theme/gat") ("default" "clipboard" "stack_dst" "shaping" "raster") ("clipboard" "window_clipboard"))))))

(define-public crate-kas-wgpu-0.8.1 (c (n "kas-wgpu") (v "0.8.1") (d (list (d (n "bytemuck") (r "^1.7.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "guillotiere") (r "^0.6.0") (d #t) (k 0)) (d (n "image") (r "^0.23.14") (d #t) (k 0)) (d (n "kas") (r "^0.8.0") (f (quote ("config" "winit"))) (d #t) (k 0)) (d (n "kas-text") (r "^0.3.0") (d #t) (k 0)) (d (n "kas-theme") (r "^0.8.0") (f (quote ("config"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "wgpu") (r "^0.8.0") (d #t) (k 0)) (d (n "window_clipboard") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "winit") (r "^0.25") (d #t) (k 0)))) (h "18wak2w39xldpdmsxlmhi1nw9rdrd39hk2q3g2mw7jxyg2q3paff") (f (quote (("unsize" "kas-theme/unsize") ("stack_dst" "kas-theme/stack_dst") ("shaping" "kas-text/shaping") ("raster" "kas-text/raster") ("nightly" "unsize" "kas/nightly" "kas-theme/nightly") ("gat" "kas-theme/gat") ("default" "clipboard" "stack_dst" "shaping" "raster") ("clipboard" "window_clipboard"))))))

(define-public crate-kas-wgpu-0.9.0 (c (n "kas-wgpu") (v "0.9.0") (d (list (d (n "bytemuck") (r "^1.7.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "guillotiere") (r "^0.6.0") (d #t) (k 0)) (d (n "kas") (r "^0.9.0") (f (quote ("config" "winit"))) (d #t) (k 0)) (d (n "kas-text") (r "^0.3.4") (d #t) (k 0)) (d (n "kas-theme") (r "^0.9.0") (f (quote ("config"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "wgpu") (r "^0.9.0") (d #t) (k 0)) (d (n "window_clipboard") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "winit") (r "^0.25") (d #t) (k 0)))) (h "1r5l8f79srb0k5i82win5yj16w5w40iyfw7xsv5v6v57sz0rigxy") (f (quote (("unsize" "kas-theme/unsize") ("stack_dst" "kas-theme/stack_dst") ("shaping" "kas-text/shaping") ("raster" "kas-text/raster") ("nightly" "unsize" "kas/nightly" "kas-theme/nightly") ("gat" "kas-theme/gat") ("default" "clipboard" "stack_dst" "shaping" "raster") ("clipboard" "window_clipboard"))))))

(define-public crate-kas-wgpu-0.10.0 (c (n "kas-wgpu") (v "0.10.0") (d (list (d (n "bytemuck") (r "^1.7.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "guillotiere") (r "^0.6.0") (d #t) (k 0)) (d (n "kas") (r "^0.10.0") (f (quote ("config" "winit"))) (d #t) (k 0) (p "kas-core")) (d (n "kas-text") (r "^0.4.0") (d #t) (k 0)) (d (n "kas-theme") (r "^0.10.0") (f (quote ("config"))) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "wgpu") (r "^0.10.0") (f (quote ("spirv"))) (d #t) (k 0)) (d (n "window_clipboard") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "winit") (r "^0.25") (d #t) (k 0)))) (h "1dxsj4wzc13qnhksjk97y0m2x2447d7z4fvyrcjz76zfsrzrlb7r") (f (quote (("unsize" "kas-theme/unsize") ("stack_dst" "kas-theme/stack_dst") ("shaping" "kas-text/shaping") ("raster" "kas-text/raster") ("nightly" "unsize" "kas-theme/nightly") ("harfbuzz" "kas-text/harfbuzz") ("gat" "kas-theme/gat") ("default" "clipboard" "stack_dst" "shaping" "raster") ("clipboard" "window_clipboard"))))))

(define-public crate-kas-wgpu-0.10.1 (c (n "kas-wgpu") (v "0.10.1") (d (list (d (n "bytemuck") (r "^1.7.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "guillotiere") (r "^0.6.0") (d #t) (k 0)) (d (n "kas") (r "^0.10.0") (f (quote ("config" "winit"))) (d #t) (k 0) (p "kas-core")) (d (n "kas-text") (r "^0.4.0") (d #t) (k 0)) (d (n "kas-theme") (r "^0.10.0") (f (quote ("config"))) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "wgpu") (r "^0.10.0") (f (quote ("spirv"))) (d #t) (k 0)) (d (n "window_clipboard") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "winit") (r "^0.25") (d #t) (k 0)))) (h "0f1n2xc3389khi5mhl8kf9436b0sldly116bps8aic2ih7gq1bhx") (f (quote (("unsize" "kas-theme/unsize") ("stack_dst" "kas-theme/stack_dst") ("shaping" "kas-text/shaping") ("raster" "kas-text/raster") ("nightly" "unsize" "kas-theme/nightly") ("harfbuzz" "kas-text/harfbuzz") ("gat" "kas-theme/gat") ("default" "clipboard" "stack_dst" "shaping" "raster") ("clipboard" "window_clipboard"))))))

(define-public crate-kas-wgpu-0.11.0 (c (n "kas-wgpu") (v "0.11.0") (d (list (d (n "bytemuck") (r "^1.7.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "guillotiere") (r "^0.6.0") (d #t) (k 0)) (d (n "kas") (r "^0.11.0") (f (quote ("config" "winit"))) (d #t) (k 0) (p "kas-core")) (d (n "kas-text") (r "^0.5.0") (d #t) (k 0)) (d (n "kas-theme") (r "^0.11.0") (f (quote ("config"))) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "wgpu") (r "^0.13.0") (f (quote ("spirv"))) (d #t) (k 0)) (d (n "window_clipboard") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "winit") (r "^0.27.2") (d #t) (k 0)))) (h "1f8rhfgwhywm6nvpx88z4ys5sm6kx6m2hcgchvl9xd6ajq664fw1") (f (quote (("shaping" "kas-text/shaping") ("raster" "kas-text/raster") ("nightly" "kas-theme/nightly") ("harfbuzz" "kas-text/harfbuzz") ("gat" "kas-theme/gat") ("default" "clipboard" "shaping" "raster")))) (s 2) (e (quote (("clipboard" "dep:window_clipboard"))))))

(define-public crate-kas-wgpu-0.12.0 (c (n "kas-wgpu") (v "0.12.0") (d (list (d (n "bytemuck") (r "^1.7.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "guillotiere") (r "^0.6.0") (d #t) (k 0)) (d (n "kas") (r "^0.12.0") (f (quote ("config" "winit"))) (d #t) (k 0) (p "kas-core")) (d (n "kas-text") (r "^0.6.0") (d #t) (k 0)) (d (n "kas-theme") (r "^0.12.0") (f (quote ("config"))) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "wgpu") (r "^0.14.0") (f (quote ("spirv"))) (d #t) (k 0)) (d (n "window_clipboard") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "winit") (r "^0.27.2") (d #t) (k 0)))) (h "17zvdh3sjc65ddzvkb0c0q7hmkyzfx09rfhg2z7zx3hr30i3ywmp") (f (quote (("shaping" "kas-text/shaping") ("raster" "kas-text/raster") ("nightly" "kas-theme/nightly") ("harfbuzz" "kas-text/harfbuzz") ("default" "clipboard" "shaping" "raster")))) (s 2) (e (quote (("clipboard" "dep:window_clipboard"))))))

(define-public crate-kas-wgpu-0.12.1 (c (n "kas-wgpu") (v "0.12.1") (d (list (d (n "bytemuck") (r "^1.7.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "guillotiere") (r "^0.6.0") (d #t) (k 0)) (d (n "kas") (r "^0.12.0") (f (quote ("config" "winit"))) (d #t) (k 0) (p "kas-core")) (d (n "kas-text") (r "^0.6.0") (d #t) (k 0)) (d (n "kas-theme") (r "^0.12.0") (f (quote ("config"))) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "wgpu") (r "^0.14.0") (f (quote ("spirv"))) (d #t) (k 0)) (d (n "window_clipboard") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "winit") (r "^0.27.2") (d #t) (k 0)))) (h "0mfsmaljmi61fm6805r0mgwvja519pn0164b7i3gwjcdkcxirx8x") (f (quote (("shaping" "kas-text/shaping") ("raster" "kas-text/raster") ("nightly" "kas-theme/nightly") ("harfbuzz" "kas-text/harfbuzz") ("default" "clipboard" "shaping" "raster")))) (s 2) (e (quote (("clipboard" "dep:window_clipboard"))))))

(define-public crate-kas-wgpu-0.13.0 (c (n "kas-wgpu") (v "0.13.0") (d (list (d (n "bytemuck") (r "^1.7.0") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "guillotiere") (r "^0.6.0") (d #t) (k 0)) (d (n "kas") (r "^0.13.0") (f (quote ("winit"))) (d #t) (k 0) (p "kas-core")) (d (n "kas-text") (r "^0.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "wgpu") (r "^0.15.0") (f (quote ("spirv"))) (d #t) (k 0)))) (h "0y6ms0g2qk2klr8sk7h0jz9ykkbmld2gql4p6acbvnpk3xif1nm7") (f (quote (("shaping" "kas-text/shaping") ("raster" "kas-text/raster") ("internal_doc") ("harfbuzz" "kas-text/harfbuzz") ("default" "shaping" "raster"))))))

(define-public crate-kas-wgpu-0.14.0-alpha (c (n "kas-wgpu") (v "0.14.0-alpha") (d (list (d (n "bytemuck") (r "^1.7.0") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "guillotiere") (r "^0.6.0") (d #t) (k 0)) (d (n "kas") (r "^0.14.0-alpha") (d #t) (k 0) (p "kas-core")) (d (n "kas-text") (r "^0.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "wgpu") (r "^0.17.0") (f (quote ("spirv"))) (d #t) (k 0)))) (h "0qml43w8zql843cgzmcbxpmsirla25ycq8azgbagcy7r0783fkb1") (f (quote (("shaping" "kas-text/shaping") ("raster" "kas-text/raster") ("internal_doc") ("harfbuzz" "kas-text/harfbuzz") ("default" "shaping" "raster"))))))

(define-public crate-kas-wgpu-0.14.1 (c (n "kas-wgpu") (v "0.14.1") (d (list (d (n "bytemuck") (r "^1.7.0") (d #t) (k 0)) (d (n "futures-lite") (r "^2.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "guillotiere") (r "^0.6.0") (d #t) (k 0)) (d (n "kas") (r "^0.14.1") (d #t) (k 0) (p "kas-core")) (d (n "kas-text") (r "^0.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "naga") (r "^0.14.1") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "wgpu") (r "^0.18.0") (f (quote ("spirv"))) (k 0)) (d (n "wgpu-core") (r "^0.18.1") (d #t) (k 0)))) (h "0x5s2wln7fn28crkihjsdrlpi3lnvrsq7y4n367rq8dlzp3gcn8f") (f (quote (("shaping" "kas-text/shaping") ("raster" "kas-text/raster") ("internal_doc") ("harfbuzz" "kas-text/harfbuzz") ("default" "shaping" "raster"))))))

