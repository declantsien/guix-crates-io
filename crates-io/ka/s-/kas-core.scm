(define-module (crates-io ka s- kas-core) #:use-module (crates-io))

(define-public crate-kas-core-0.10.0 (c (n "kas-core") (v "0.10.0") (d (list (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "dep_ron") (r "^0.6.4") (o #t) (d #t) (k 0) (p "ron")) (d (n "easy-cast") (r "^0.4.2") (d #t) (k 0)) (d (n "image") (r "^0.23.14") (d #t) (k 0)) (d (n "kas-macros") (r "^0.10.0") (d #t) (k 0)) (d (n "kas-text") (r "^0.4.0") (d #t) (k 0)) (d (n "linear-map") (r "^1.2.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.16") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "stack_dst") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7") (d #t) (k 0)) (d (n "winit") (r "^0.25") (f (quote ("serde"))) (o #t) (d #t) (k 0)))) (h "1ksg69qm2s3gas1v4rabyjnk2fivhqch8a89xiqr3pzqbkz7wpkv") (f (quote (("yaml" "config" "serde_yaml") ("spec") ("shaping" "kas-text/shaping") ("ron" "config" "dep_ron") ("markdown" "kas-text/markdown") ("macros_log" "kas-macros/log") ("json" "config" "serde_json") ("internal_doc") ("harfbuzz" "kas-text/harfbuzz") ("gat" "kas-text/gat") ("config" "serde" "kas-text/serde"))))))

(define-public crate-kas-core-0.10.1 (c (n "kas-core") (v "0.10.1") (d (list (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "dep_ron") (r "^0.6.4") (o #t) (d #t) (k 0) (p "ron")) (d (n "easy-cast") (r "^0.4.2") (d #t) (k 0)) (d (n "image") (r "^0.23.14") (d #t) (k 0)) (d (n "kas-macros") (r "^0.10.1") (d #t) (k 0)) (d (n "kas-text") (r "^0.4.0") (d #t) (k 0)) (d (n "linear-map") (r "^1.2.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.16") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "stack_dst") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7") (d #t) (k 0)) (d (n "winit") (r "^0.25") (f (quote ("serde"))) (o #t) (d #t) (k 0)))) (h "0mmq6dhi9cdjvxqpgbj9l104301b8qf95jwbgb6zzgp5ligdgq82") (f (quote (("yaml" "config" "serde_yaml") ("spec") ("shaping" "kas-text/shaping") ("ron" "config" "dep_ron") ("markdown" "kas-text/markdown") ("macros_log" "kas-macros/log") ("json" "config" "serde_json") ("internal_doc") ("harfbuzz" "kas-text/harfbuzz") ("gat" "kas-text/gat") ("config" "serde" "kas-text/serde"))))))

(define-public crate-kas-core-0.11.0 (c (n "kas-core") (v "0.11.0") (d (list (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "easy-cast") (r "^0.5.0") (d #t) (k 0)) (d (n "kas-macros") (r "^0.11.0") (d #t) (k 0)) (d (n "kas-text") (r "^0.5.0") (d #t) (k 0)) (d (n "linear-map") (r "^1.2.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5.6") (d #t) (k 0)) (d (n "ron") (r "^0.8.0") (o #t) (d #t) (k 0) (p "ron")) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.9") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7") (d #t) (k 0)) (d (n "winit") (r "^0.27") (o #t) (d #t) (k 0)))) (h "0qfjryhnnrp3j8m09q6fv5xwgnp2r2cdy2sipkirfhsw3cwrx44a") (f (quote (("spec") ("shaping" "kas-text/shaping") ("markdown" "kas-text/markdown") ("macros_log" "kas-macros/log") ("internal_doc") ("harfbuzz" "kas-text/harfbuzz") ("gat" "kas-text/gat")))) (s 2) (e (quote (("yaml" "config" "dep:serde_yaml") ("winit" "dep:winit") ("serde" "dep:serde") ("ron" "config" "dep:ron") ("json" "config" "dep:serde_json") ("config" "serde" "kas-text/serde" "winit?/serde"))))))

(define-public crate-kas-core-0.12.0 (c (n "kas-core") (v "0.12.0") (d (list (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "easy-cast") (r "^0.5.0") (d #t) (k 0)) (d (n "kas-macros") (r "^0.12.0") (d #t) (k 0)) (d (n "kas-text") (r "^0.6.0") (d #t) (k 0)) (d (n "linear-map") (r "^1.2.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5.6") (d #t) (k 0)) (d (n "ron") (r "^0.8.0") (o #t) (d #t) (k 0) (p "ron")) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.9") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7") (d #t) (k 0)) (d (n "winit") (r "^0.27") (o #t) (d #t) (k 0)))) (h "1mg5fpjq7g3lm9rg4mh9dd30k6ihv71v035x4g3dc8vwlpz4zwx7") (f (quote (("spec") ("shaping" "kas-text/shaping") ("markdown" "kas-text/markdown") ("macros_log" "kas-macros/log") ("internal_doc") ("harfbuzz" "kas-text/harfbuzz")))) (s 2) (e (quote (("yaml" "config" "dep:serde_yaml") ("winit" "dep:winit") ("serde" "dep:serde") ("ron" "config" "dep:ron") ("json" "config" "dep:serde_json") ("config" "serde" "kas-text/serde" "winit?/serde"))))))

(define-public crate-kas-core-0.12.1 (c (n "kas-core") (v "0.12.1") (d (list (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "easy-cast") (r "^0.5.0") (d #t) (k 0)) (d (n "kas-macros") (r "^0.12.0") (d #t) (k 0)) (d (n "kas-text") (r "^0.6.0") (d #t) (k 0)) (d (n "linear-map") (r "^1.2.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5.6") (d #t) (k 0)) (d (n "ron") (r "^0.8.0") (o #t) (d #t) (k 0) (p "ron")) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.9") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7") (d #t) (k 0)) (d (n "winit") (r "^0.27") (o #t) (d #t) (k 0)))) (h "0r36ghgjqyyif4n7q1pxpdbhgmwirncnwpsx3yrnwvh0gs7nlqfv") (f (quote (("spec") ("shaping" "kas-text/shaping") ("markdown" "kas-text/markdown") ("macros_log" "kas-macros/log") ("internal_doc") ("harfbuzz" "kas-text/harfbuzz")))) (s 2) (e (quote (("yaml" "config" "dep:serde_yaml") ("winit" "dep:winit") ("serde" "dep:serde") ("ron" "config" "dep:ron") ("json" "config" "dep:serde_json") ("config" "serde" "kas-text/serde" "winit?/serde"))))))

(define-public crate-kas-core-0.13.0 (c (n "kas-core") (v "0.13.0") (d (list (d (n "arboard") (r "^3.2.0") (o #t) (t "cfg(not(target_os = \"android\"))") (k 0)) (d (n "async-global-executor") (r "^2.3.1") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "dark-light") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "easy-cast") (r "^0.5.0") (d #t) (k 0)) (d (n "kas-macros") (r "^0.13.0") (d #t) (k 0)) (d (n "kas-text") (r "^0.6.0") (d #t) (k 0)) (d (n "linear-map") (r "^1.2.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5.6") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5.0") (d #t) (k 0)) (d (n "ron") (r "^0.8.0") (o #t) (d #t) (k 0) (p "ron")) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.9") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smithay-clipboard") (r "^0.6.6") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7") (d #t) (k 0)) (d (n "winit") (r "^0.28.1") (o #t) (k 0)))) (h "1a4j1qmx5fslcgz8r7jh15qb7d0hc6mh8585fmqlz9v59xrxsvky") (f (quote (("spec") ("shaping" "kas-text/shaping") ("markdown" "kas-text/markdown") ("macros_log" "kas-macros/log") ("internal_doc") ("harfbuzz" "kas-text/harfbuzz")))) (s 2) (e (quote (("yaml" "serde" "dep:serde_yaml") ("x11" "winit?/x11") ("winit" "dep:winit") ("wayland" "winit?/wayland" "winit?/wayland-dlopen") ("spawn" "dep:async-global-executor") ("serde" "dep:serde" "kas-text/serde" "winit?/serde") ("ron" "serde" "dep:ron") ("json" "serde" "dep:serde_json") ("dark-light" "dep:dark-light") ("clipboard" "dep:arboard" "dep:smithay-clipboard"))))))

(define-public crate-kas-core-0.14.0-alpha (c (n "kas-core") (v "0.14.0-alpha") (d (list (d (n "arboard") (r "^3.2.0") (o #t) (t "cfg(not(target_os = \"android\"))") (k 0)) (d (n "async-global-executor") (r "^2.3.1") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "dark-light") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "easy-cast") (r "^0.5.0") (d #t) (k 0)) (d (n "kas-macros") (r "^0.14.0-alpha") (d #t) (k 0)) (d (n "kas-text") (r "^0.6.0") (d #t) (k 0)) (d (n "linear-map") (r "^1.2.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.7.0") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5.0") (d #t) (k 0)) (d (n "ron") (r "^0.8.0") (o #t) (d #t) (k 0) (p "ron")) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.9") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smithay-clipboard") (r "^0.6.6") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "smol_str") (r "^0.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7") (d #t) (k 0)) (d (n "winit") (r "^0.29.1-beta") (o #t) (k 0)))) (h "0dhgki3fyy17xn152cws5kgqmj5md47rgavrq76a29h53cyxxy5x") (f (quote (("unsafe_node") ("stable" "winit" "x11" "wayland" "markdown" "yaml" "json" "ron" "shaping" "clipboard" "spawn" "dark-light" "serde") ("spec") ("shaping" "kas-text/shaping") ("markdown" "kas-text/markdown") ("macros_log" "kas-macros/log") ("internal_doc") ("harfbuzz" "kas-text/harfbuzz")))) (s 2) (e (quote (("yaml" "serde" "dep:serde_yaml") ("x11" "winit?/x11") ("winit" "dep:winit") ("wayland" "winit?/wayland" "winit?/wayland-dlopen") ("spawn" "dep:async-global-executor") ("serde" "dep:serde" "kas-text/serde" "winit?/serde") ("ron" "serde" "dep:ron") ("json" "serde" "dep:serde_json") ("dark-light" "dep:dark-light") ("clipboard" "dep:arboard" "dep:smithay-clipboard"))))))

(define-public crate-kas-core-0.14.1 (c (n "kas-core") (v "0.14.1") (d (list (d (n "arboard") (r "^3.2.0") (o #t) (t "cfg(not(target_os = \"android\"))") (k 0)) (d (n "async-global-executor") (r "^2.3.1") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.3.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "dark-light") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "easy-cast") (r "^0.5.0") (d #t) (k 0)) (d (n "kas-macros") (r "^0.14.1") (d #t) (k 0)) (d (n "kas-text") (r "^0.6.0") (d #t) (k 0)) (d (n "linear-map") (r "^1.2.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.7.0") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5.0") (d #t) (k 0)) (d (n "ron") (r "^0.8.0") (o #t) (d #t) (k 0) (p "ron")) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.9") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "smithay-clipboard") (r "^0.7.0") (o #t) (d #t) (t "cfg(any(target_os=\"linux\", target_os=\"dragonfly\", target_os=\"freebsd\", target_os=\"netbsd\", target_os=\"openbsd\"))") (k 0)) (d (n "smol_str") (r "^0.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "toml") (r "^0.8.2") (o #t) (d #t) (k 0) (p "toml")) (d (n "unicode-segmentation") (r "^1.7") (d #t) (k 0)) (d (n "winit") (r "^0.29.2") (f (quote ("rwh_05"))) (o #t) (k 0)))) (h "0hmm89ijbrcz8jcybhavsjimink6sgd2ikcwx0v5gvjs9gm153mw") (f (quote (("unsafe_node") ("stable" "winit" "x11" "wayland" "markdown" "yaml" "json" "ron" "shaping" "clipboard" "spawn" "dark-light" "serde") ("spec") ("shaping" "kas-text/shaping") ("markdown" "kas-text/markdown") ("macros_log" "kas-macros/log") ("internal_doc") ("harfbuzz" "kas-text/harfbuzz")))) (s 2) (e (quote (("yaml" "serde" "dep:serde_yaml") ("x11" "winit?/x11") ("winit" "dep:winit") ("wayland" "winit?/wayland" "winit?/wayland-dlopen") ("toml" "serde" "dep:toml") ("spawn" "dep:async-global-executor") ("serde" "dep:serde" "kas-text/serde" "winit?/serde") ("ron" "serde" "dep:ron") ("json" "serde" "dep:serde_json") ("dark-light" "dep:dark-light") ("clipboard" "dep:arboard" "dep:smithay-clipboard"))))))

