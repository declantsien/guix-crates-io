(define-module (crates-io ka yr kayrx-karx) #:use-module (crates-io))

(define-public crate-kayrx-karx-0.1.0 (c (n "kayrx-karx") (v "0.1.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4.2") (d #t) (k 0)) (d (n "crossbeam-deque") (r "^0.7.3") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.7.2") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.12.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)))) (h "0whr5gy86jjwfmxr320s7nw89pzlyij3913z2hdq5r7g1gnbcdgv") (f (quote (("tracing" "log") ("default"))))))

(define-public crate-kayrx-karx-0.1.1 (c (n "kayrx-karx") (v "0.1.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.7.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.4.2") (d #t) (k 0)) (d (n "crossbeam-deque") (r "^0.7.3") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.7.2") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.7.2") (d #t) (k 2)) (d (n "futures") (r "^0.3.4") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.12.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "simple_logger") (r "^1.6.0") (d #t) (k 2)))) (h "1m1gnr0wcjsfsj08gq67hys42d2pqha89mpd847g7hzmryywx05n") (f (quote (("tracing" "log") ("default"))))))

