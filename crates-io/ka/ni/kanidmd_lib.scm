(define-module (crates-io ka ni kanidmd_lib) #:use-module (crates-io))

(define-public crate-kanidmd_lib-1.2.0 (c (n "kanidmd_lib") (v "1.2.0") (d (list (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "base64urlsafedata") (r "^0.5.0") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.2") (d #t) (k 0)) (d (n "compact_jwt") (r "^0.4.1") (f (quote ("openssl" "hsm-crypto"))) (k 0)) (d (n "compact_jwt") (r "^0.4.1") (f (quote ("openssl" "hsm-crypto" "unsafe_release_without_verify"))) (k 2)) (d (n "concread") (r "^0.5.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dyn-clone") (r "^1.0.17") (d #t) (k 0)) (d (n "enum-iterator") (r "^1.5.0") (d #t) (k 0)) (d (n "fernet") (r "^0.2.1") (f (quote ("fernet_danger_timestamps"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 2)) (d (n "hashbrown") (r "^0.14.3") (f (quote ("serde" "inline-more" "ahash"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.3") (f (quote ("serde" "inline-more" "ahash"))) (d #t) (k 1)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "idlset") (r "^0.2.4") (d #t) (k 0)) (d (n "image") (r "^0.24.9") (f (quote ("gif" "jpeg" "webp" "gif" "jpeg" "webp"))) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "kanidm_build_profiles") (r "=1.2.0") (d #t) (k 1)) (d (n "kanidm_lib_crypto") (r "=1.2.0") (d #t) (k 0)) (d (n "kanidm_proto") (r "=1.2.0") (d #t) (k 0)) (d (n "kanidmd_lib_macros") (r "=1.2.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "ldap3_proto") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.153") (d #t) (k 0)) (d (n "libsqlite3-sys") (r "^0.25.2") (d #t) (k 0)) (d (n "lodepng") (r "^3.10.1") (d #t) (k 0)) (d (n "nonempty") (r "^0.8.1") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "num_enum") (r "^0.5.11") (d #t) (k 0)) (d (n "openssl") (r "^0.10.64") (d #t) (k 0)) (d (n "openssl-sys") (r "^0.9") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.3") (f (quote ("std" "perf" "perf-inline" "unicode" "unicode-gencat"))) (d #t) (k 0)) (d (n "regex") (r "^1.10.3") (d #t) (k 1)) (d (n "rusqlite") (r "^0.28.0") (f (quote ("array" "bundled" "array" "bundled"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.12.0-dev") (d #t) (k 0) (p "serde_cbor_2")) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "serde_with") (r "^3.7.0") (d #t) (k 0)) (d (n "sketching") (r "=1.2.0") (d #t) (k 0)) (d (n "smartstring") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smolset") (r "^1.3.1") (d #t) (k 0)) (d (n "sshkey-attest") (r "^0.5.0") (d #t) (k 0)) (d (n "svg") (r "^0.13.1") (d #t) (k 0)) (d (n "time") (r "^0.3.34") (f (quote ("formatting" "local-offset" "serde" "std"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("net" "sync" "time" "rt"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (f (quote ("codec"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (f (quote ("max_level_trace" "release_max_level_debug" "attributes"))) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.3") (d #t) (k 0)) (d (n "uuid") (r "^1.8.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "webauthn-authenticator-rs") (r "^0.5.0") (f (quote ("softpasskey" "softtoken" "mozilla"))) (d #t) (k 2)) (d (n "webauthn-rs") (r "^0.5.0") (f (quote ("preview-features" "resident-key-support" "preview-features" "danger-credential-internals"))) (d #t) (k 0)) (d (n "webauthn-rs-core") (r "^0.5.0") (d #t) (k 0)) (d (n "whoami") (r "^1.5.1") (d #t) (t "cfg(target_family = \"windows\")") (k 0)) (d (n "zxcvbn") (r "^2.2.2") (d #t) (k 0)))) (h "04v8qlvk5f5832wa94lrpfkwy7kjq2hbhrvh4l5kh6c4ap54lxal") (r "1.77")))

