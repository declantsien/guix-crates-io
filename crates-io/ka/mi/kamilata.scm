(define-module (crates-io ka mi kamilata) #:use-module (crates-io))

(define-public crate-kamilata-0.1.0 (c (n "kamilata") (v "0.1.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "asynchronous-codec") (r "^0.6") (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 2)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (f (quote ("tokio" "noise" "mplex" "kad"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "protocol") (r "^3.4") (d #t) (k 0)) (d (n "protocol-derive") (r "^3.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^1.28") (f (quote ("macros" "sync" "time"))) (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (d #t) (k 0)))) (h "15g05k6qv3v2zcxqcy6gdspi7zqgqv7dm6imamcqlria3p3mvcxj")))

(define-public crate-kamilata-0.1.1 (c (n "kamilata") (v "0.1.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "asynchronous-codec") (r "^0.6") (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 2)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (f (quote ("tokio" "noise" "mplex" "kad"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "protocol") (r "^3.4") (d #t) (k 0)) (d (n "protocol-derive") (r "^3.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^1.28") (f (quote ("macros" "sync" "time"))) (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (d #t) (k 0)))) (h "1c6vn911cqfr0jj7cd5k9gq0sf2bp30snjpr4mxdzs917n8iphxj")))

(define-public crate-kamilata-0.1.2 (c (n "kamilata") (v "0.1.2") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "asynchronous-codec") (r "^0.6") (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 2)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (f (quote ("tokio" "noise" "mplex" "kad"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "protocol") (r "^3.4") (d #t) (k 0)) (d (n "protocol-derive") (r "^3.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^1.28") (f (quote ("macros" "sync" "time"))) (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (d #t) (k 0)))) (h "0cp2wqfbzy9dmawvrgkgnlvqxlgwj3zr1ixw03s404pnbk58a1js")))

(define-public crate-kamilata-0.1.3 (c (n "kamilata") (v "0.1.3") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "asynchronous-codec") (r "^0.6") (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 2)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (f (quote ("tokio" "noise" "mplex" "kad"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "protocol") (r "^3.4") (d #t) (k 0)) (d (n "protocol-derive") (r "^3.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^1.28") (f (quote ("macros" "sync" "time"))) (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (d #t) (k 0)))) (h "0iw8gq06axzz47mgywppfnyssaq5nmjdyi1sfcz4dnpp5hn7m1zx")))

(define-public crate-kamilata-0.1.4 (c (n "kamilata") (v "0.1.4") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "asynchronous-codec") (r "^0.6") (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 2)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (f (quote ("tokio" "noise" "mplex" "kad"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "protocol") (r "^3.4") (d #t) (k 0)) (d (n "protocol-derive") (r "^3.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^1.28") (f (quote ("macros" "sync" "time"))) (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (d #t) (k 0)))) (h "1vmq0fscbhc6q30nr2dji6xg1g9hv6ji6mbb89x5lnj1laacx1pg")))

(define-public crate-kamilata-0.1.5 (c (n "kamilata") (v "0.1.5") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "asynchronous-codec") (r "^0.6") (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 2)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (f (quote ("tokio" "noise" "mplex" "kad"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "protocol") (r "^3.4") (d #t) (k 0)) (d (n "protocol-derive") (r "^3.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^1.28") (f (quote ("macros" "sync" "time"))) (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (d #t) (k 0)))) (h "1lwzz1ld775jlzxmglk0b2xwpz109diskwbypwkr5nm425zx69vw")))

(define-public crate-kamilata-0.2.0 (c (n "kamilata") (v "0.2.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "asynchronous-codec") (r "^0.6") (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 2)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (f (quote ("tokio" "yamux" "noise"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "protocol") (r "^3.4") (d #t) (k 0)) (d (n "protocol-derive") (r "^3.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^1.29") (f (quote ("macros" "sync" "time"))) (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (f (quote ("codec" "futures" "asynchronous_codec"))) (d #t) (k 0)))) (h "17fafbdyr7xgbsfbiwahsw7q6m5z0cdcbbf9faxrq0wadb7j3cz2")))

