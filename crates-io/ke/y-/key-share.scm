(define-module (crates-io ke y- key-share) #:use-module (crates-io))

(define-public crate-key-share-0.1.0 (c (n "key-share") (v "0.1.0") (d (list (d (n "generic-ec") (r "^0.1.3") (d #t) (k 0)) (d (n "generic-ec-zkp") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (o #t) (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2") (o #t) (d #t) (k 0)) (d (n "slip-10") (r "^0.1") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "udigest") (r "^0.1") (f (quote ("derive"))) (o #t) (k 0)))) (h "1yr1fvj9s177wavc29gx5ihshk4idmlvk23fqqj2bzp2hq36y2y5") (f (quote (("hd-wallets" "slip-10")))) (y #t) (s 2) (e (quote (("udigest" "dep:udigest") ("spof" "dep:rand_core") ("serde" "dep:serde" "serde_with" "hex"))))))

(define-public crate-key-share-0.2.0 (c (n "key-share") (v "0.2.0") (d (list (d (n "generic-ec") (r "^0.2") (d #t) (k 0)) (d (n "generic-ec-zkp") (r "^0.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (o #t) (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2") (o #t) (d #t) (k 0)) (d (n "slip-10") (r "^0.2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "udigest") (r "^0.1") (f (quote ("derive"))) (o #t) (k 0)))) (h "060r07x9fjlp4n05v114gp562v0anvfdjz4jygnbwrm58zc4diq5") (f (quote (("hd-wallets" "slip-10")))) (y #t) (s 2) (e (quote (("udigest" "dep:udigest") ("spof" "dep:rand_core") ("serde" "dep:serde" "serde_with" "hex"))))))

(define-public crate-key-share-0.2.1 (c (n "key-share") (v "0.2.1") (d (list (d (n "generic-ec") (r "^0.2") (d #t) (k 0)) (d (n "generic-ec-zkp") (r "^0.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (o #t) (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2") (o #t) (d #t) (k 0)) (d (n "slip-10") (r "^0.2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "udigest") (r "^0.1") (f (quote ("derive"))) (o #t) (k 0)))) (h "1n2ffcqrfiwq884v2vkdx82ydkc18jgp5l7gk13sl0in4qp30yf7") (f (quote (("hd-wallets" "slip-10")))) (s 2) (e (quote (("udigest" "dep:udigest") ("spof" "dep:rand_core") ("serde" "dep:serde" "serde_with" "hex"))))))

(define-public crate-key-share-0.2.2 (c (n "key-share") (v "0.2.2") (d (list (d (n "displaydoc") (r "^0.2") (k 0)) (d (n "generic-ec") (r "^0.2") (f (quote ("alloc"))) (k 0)) (d (n "generic-ec-zkp") (r "^0.2") (f (quote ("alloc"))) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (o #t) (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "serde_with") (r "^2") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "slip-10") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)) (d (n "udigest") (r "^0.1") (f (quote ("alloc" "derive"))) (o #t) (k 0)))) (h "0naa5dpxk8lj2aza2v31lqslsw1d9ckmsdjjnag341vmvr46lbdr") (f (quote (("hd-wallets" "slip-10") ("default" "std")))) (s 2) (e (quote (("udigest" "dep:udigest" "generic-ec/udigest") ("std" "dep:thiserror") ("spof" "dep:rand_core") ("serde" "dep:serde" "serde_with" "hex" "generic-ec/serde"))))))

(define-public crate-key-share-0.2.3 (c (n "key-share") (v "0.2.3") (d (list (d (n "displaydoc") (r "^0.2") (k 0)) (d (n "generic-ec") (r "^0.2.3") (f (quote ("alloc"))) (k 0)) (d (n "generic-ec-zkp") (r "^0.2") (f (quote ("alloc"))) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (o #t) (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "serde_with") (r "^2") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "slip-10") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)) (d (n "udigest") (r "^0.1") (f (quote ("alloc" "derive"))) (o #t) (k 0)))) (h "1k0168c9z748d3pvlvnfcy8a27n2xsnx58sachlqbcawzj9py8rh") (f (quote (("hd-wallets" "slip-10") ("default" "std")))) (s 2) (e (quote (("udigest" "dep:udigest" "generic-ec/udigest") ("std" "dep:thiserror") ("spof" "dep:rand_core") ("serde" "dep:serde" "serde_with" "hex" "generic-ec/serde"))))))

