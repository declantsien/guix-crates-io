(define-module (crates-io ke yc keycloak) #:use-module (crates-io))

(define-public crate-keycloak-0.1.0 (c (n "keycloak") (v "0.1.0") (d (list (d (n "heck") (r "^0.3") (d #t) (k 2)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (d #t) (k 0)) (d (n "scraper") (r "^0.11") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 2)))) (h "112riklrqkysrgqhsz0glanqh1hir0d90xs0z9wgqvkszzg86h2v")))

(define-public crate-keycloak-0.1.1 (c (n "keycloak") (v "0.1.1") (d (list (d (n "heck") (r "^0.3") (d #t) (k 2)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (d #t) (k 0)) (d (n "scraper") (r "^0.11") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 2)))) (h "1gz3kpfna597mi78sf8wccc4ksixsykvan4vzaynvyr55gahnymy")))

(define-public crate-keycloak-0.1.2 (c (n "keycloak") (v "0.1.2") (d (list (d (n "heck") (r "^0.3") (d #t) (k 2)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (d #t) (k 0)) (d (n "scraper") (r "^0.11") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 2)))) (h "0g8m3606vg85b966k8k4ddfharmkib45ac9j16hnn9fvfm1isvx2")))

(define-public crate-keycloak-0.1.3 (c (n "keycloak") (v "0.1.3") (d (list (d (n "heck") (r "^0.3") (d #t) (k 2)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (d #t) (k 0)) (d (n "scraper") (r "^0.11") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 2)))) (h "0q339jbxccvm4ss8h2fm2gqyp4xjshvz6q9mhc8rqkhgy5cg5pn0")))

(define-public crate-keycloak-0.1.4 (c (n "keycloak") (v "0.1.4") (d (list (d (n "heck") (r "^0.3") (d #t) (k 2)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (d #t) (k 0)) (d (n "scraper") (r "^0.11") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 2)))) (h "1n8irsxxndbskid2dd12gjjl55ypc41cw10faf4baq99i8icyq2v")))

(define-public crate-keycloak-0.2.0 (c (n "keycloak") (v "0.2.0") (d (list (d (n "heck") (r "^0.3") (d #t) (k 2)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (d #t) (k 0)) (d (n "scraper") (r "^0.11") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 2)))) (h "13m9phsvzym7lkzfszgy96q58ck4vgd4iaw6mvkxb8mkwf2cszjr")))

(define-public crate-keycloak-0.2.1 (c (n "keycloak") (v "0.2.1") (d (list (d (n "heck") (r "^0.3") (d #t) (k 2)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (d #t) (k 0)) (d (n "scraper") (r "^0.11") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 2)))) (h "1xzqq8fmm278xamq9cwml4yfvsg3d4mg3hp6rdqjv4nfa3x7vxjp")))

(define-public crate-keycloak-0.2.2 (c (n "keycloak") (v "0.2.2") (d (list (d (n "heck") (r "^0.3") (d #t) (k 2)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (d #t) (k 0)) (d (n "scraper") (r "^0.11") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 2)))) (h "1x62xprb6938wzdkr9kiffpp92vphkbwbq7a65499pmbkzfs6r25")))

(define-public crate-keycloak-9.0.0 (c (n "keycloak") (v "9.0.0") (d (list (d (n "heck") (r "^0.3") (d #t) (k 2)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (d #t) (k 0)) (d (n "scraper") (r "^0.12") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 2)))) (h "0xmfd8dnf9csbzqi822iw359hxdfr39fkl666n7c3jv770cy8j2s")))

(define-public crate-keycloak-10.0.0 (c (n "keycloak") (v "10.0.0") (d (list (d (n "heck") (r "^0.3") (d #t) (k 2)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (d #t) (k 0)) (d (n "scraper") (r "^0.12") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 2)))) (h "152x5sziiwr22plca7qb5sfbmwdzcl3c4qmykipwi6wxp85k6faq")))

(define-public crate-keycloak-11.0.0 (c (n "keycloak") (v "11.0.0") (d (list (d (n "heck") (r "^0.3") (d #t) (k 2)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (d #t) (k 0)) (d (n "scraper") (r "^0.12") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 2)))) (h "04dfbr72y585ca2dp6ya84716fmyqr32ms7khwgnqmp365pi5c49")))

(define-public crate-keycloak-11.0.1 (c (n "keycloak") (v "11.0.1") (d (list (d (n "heck") (r "^0.3") (d #t) (k 2)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (d #t) (k 0)) (d (n "scraper") (r "^0.12") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 2)))) (h "1w2swnxgshi0cjv4r92w41jhw1djvfk850scrphpm3j93vmck6nk")))

(define-public crate-keycloak-10.0.1 (c (n "keycloak") (v "10.0.1") (d (list (d (n "heck") (r "^0.3") (d #t) (k 2)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (d #t) (k 0)) (d (n "scraper") (r "^0.12") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 2)))) (h "09vnsqcrrd62z5hny0z142q2bbwicms5z06iy186z0a6b7s95lhf")))

(define-public crate-keycloak-9.0.1 (c (n "keycloak") (v "9.0.1") (d (list (d (n "heck") (r "^0.3") (d #t) (k 2)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (d #t) (k 0)) (d (n "scraper") (r "^0.12") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 2)))) (h "19hvna8jiz8a058vq4q54kbzki97bh2k95kbby0j053fb5fvz996")))

(define-public crate-keycloak-12.0.0 (c (n "keycloak") (v "12.0.0") (d (list (d (n "heck") (r "^0.3") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "scraper") (r "^0.12") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5") (d #t) (k 2)))) (h "0m4rrsflzcknm5ljy2sylcl1blicz2fp6b2r1jg97xxbdqp1n6gc")))

(define-public crate-keycloak-12.0.1 (c (n "keycloak") (v "12.0.1") (d (list (d (n "heck") (r "^0.3") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "scraper") (r "^0.12") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5") (d #t) (k 2)))) (h "0x3fc0pfkmjkn5hqicj1wr8g9a40bgyr4wld7vyjbjnv3j8mrzpl")))

(define-public crate-keycloak-13.0.100 (c (n "keycloak") (v "13.0.100") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "heck") (r "^0.3") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "scraper") (r "^0.12") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5") (d #t) (k 2)))) (h "0hfh888809q1ycjhrq2f1y7gigv28bgdk282gx3macw03y1rgcyb")))

(define-public crate-keycloak-13.0.101 (c (n "keycloak") (v "13.0.101") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "heck") (r "^0.3") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "scraper") (r "^0.12") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5") (d #t) (k 2)))) (h "1ydjycglz53syq6i6phbvzdrh3mrmsagdjjf6valjrc2ry4qfbkd")))

(define-public crate-keycloak-13.0.102 (c (n "keycloak") (v "13.0.102") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "heck") (r "^0.3") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "scraper") (r "^0.12") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_with") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5") (d #t) (k 2)))) (h "11yf0valf37bpa41l6vkikna7qf3z0dmx91bxip1vz9qs0992cvc")))

(define-public crate-keycloak-14.0.0 (c (n "keycloak") (v "14.0.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "heck") (r "^0.3") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "scraper") (r "^0.12") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_with") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5") (d #t) (k 2)))) (h "0nmcrsbap54wbf9j65ra3xjlsjsqrm5jfb8fazp37jh6gxd68yp9")))

(define-public crate-keycloak-15.0.0 (c (n "keycloak") (v "15.0.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "scraper") (r "^0.12") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_with") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5") (d #t) (k 2)))) (h "15n4mwv9vxhdm11xnn98s47cq53zafd5mqk4hj0ra95zynd3j2xa")))

(define-public crate-keycloak-15.1.0 (c (n "keycloak") (v "15.1.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "scraper") (r "^0.12") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_with") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5") (d #t) (k 2)))) (h "093q0s7q7bvp0r49pmaaxv5z8v952a7bk4qlbbxjyljivcp2c0nx")))

(define-public crate-keycloak-16.0.0 (c (n "keycloak") (v "16.0.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "scraper") (r "^0.12") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_with") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5") (d #t) (k 2)))) (h "1cz7zl9gci71a7ciihqygrydb2wy6q754m4acmlvv329ld5gy5dm")))

(define-public crate-keycloak-16.1.0 (c (n "keycloak") (v "16.1.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "scraper") (r "^0.12") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_with") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5") (d #t) (k 2)))) (h "0ya5qaqsbycz51ghvjh3m86mg9i1ip466fb50wkxp0p0n891lps0")))

(define-public crate-keycloak-17.0.0 (c (n "keycloak") (v "17.0.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "scraper") (r "^0.12") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_with") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5") (d #t) (k 2)))) (h "1ad8fw1fxnq8fl189k3hnjf4601273hf25mp4yvk32id3vnigpsg")))

(define-public crate-keycloak-17.0.1 (c (n "keycloak") (v "17.0.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "scraper") (r "^0.12") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_with") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5") (d #t) (k 2)))) (h "005ac4081lf7pzbzmahzv6655q3rjvfiba40zziwc07gs79k00k4")))

(define-public crate-keycloak-17.0.2 (c (n "keycloak") (v "17.0.2") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "scraper") (r "^0.12") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_with") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5") (d #t) (k 2)))) (h "17nfcpgr3lglwcisnjyfwvf0gv81n4bmqa9wj719f7lyqms2vwjp") (f (quote (("quarkus") ("default"))))))

(define-public crate-keycloak-18.0.0 (c (n "keycloak") (v "18.0.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "scraper") (r "^0.12") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_with") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5") (d #t) (k 2)))) (h "1spbkpss7hmba8g6s1b31n5vf0hwhqc2pbhx858nmsqli5nqzfjc")))

(define-public crate-keycloak-19.0.100 (c (n "keycloak") (v "19.0.100") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "scraper") (r "^0.13") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_with") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5") (d #t) (k 2)))) (h "1fw47gjnnnvxmdgqi208902z7k8c7fi1yi6gs8y01zb00kpijdk0")))

(define-public crate-keycloak-19.0.101 (c (n "keycloak") (v "19.0.101") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "scraper") (r "^0.13") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_with") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5") (d #t) (k 2)))) (h "0c4c880kjng09iv7z380hx80yyg7ggivqh92fhh50d7v0szhkj2s")))

(define-public crate-keycloak-19.0.102 (c (n "keycloak") (v "19.0.102") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "scraper") (r "^0.13") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_with") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5") (d #t) (k 2)))) (h "1zv1597jzcfsh9qlb8ffxpd9065pamgrlj48bjinw377krscqy7a")))

(define-public crate-keycloak-20.0.100 (c (n "keycloak") (v "20.0.100") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "scraper") (r "^0.13") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_with") (r "^2") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5") (d #t) (k 2)))) (h "176r3sz8yvz7ckdnafwymnsillf894m5l1hg40h9ym848svym85q")))

(define-public crate-keycloak-20.0.101 (c (n "keycloak") (v "20.0.101") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "schemars") (r "^0.8.11") (f (quote ("derive"))) (o #t) (k 0)) (d (n "scraper") (r "^0.13") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_with") (r "^2") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5") (d #t) (k 2)))) (h "1shb8igh8kn8vk4pzpvjmjmhfv7jfcq47lvng2jvpbpmxwcywvjv") (s 2) (e (quote (("schemars" "dep:schemars"))))))

(define-public crate-keycloak-21.0.100 (c (n "keycloak") (v "21.0.100") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "schemars") (r "^0.8.11") (f (quote ("derive"))) (o #t) (k 0)) (d (n "scraper") (r "^0.15") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_with") (r "^2") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.7") (d #t) (k 2)))) (h "048ilik2dr4dw088drhp7y0l73na0524p707zk77gixizz2cm1cz") (s 2) (e (quote (("schemars" "dep:schemars")))) (r "1.58")))

(define-public crate-keycloak-21.0.101 (c (n "keycloak") (v "21.0.101") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "schemars") (r "^0.8.11") (f (quote ("derive"))) (o #t) (k 0)) (d (n "scraper") (r "^0.15") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_with") (r "^2") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.7") (d #t) (k 2)))) (h "1w641ijqy1g11p3cfmsyl4fxvmkmf0galj82l2nq0j67xfm1mbnv") (s 2) (e (quote (("schemars" "dep:schemars")))) (r "1.58")))

(define-public crate-keycloak-21.0.102 (c (n "keycloak") (v "21.0.102") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "schemars") (r "^0.8.11") (f (quote ("derive"))) (o #t) (k 0)) (d (n "scraper") (r "^0.15") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_with") (r "^2") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.7") (d #t) (k 2)))) (h "1sfa508yy8rizijidg5zc1309wld4fh1f35biwgsp1f0h3f3aqfb") (s 2) (e (quote (("schemars" "dep:schemars")))) (r "1.58")))

(define-public crate-keycloak-22.0.300 (c (n "keycloak") (v "22.0.300") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "std"))) (k 2)) (d (n "heck") (r "^0.5") (d #t) (k 2)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 2)) (d (n "reqwest") (r "^0.12") (f (quote ("json"))) (k 0)) (d (n "schemars") (r "^0.8.11") (f (quote ("derive"))) (o #t) (k 0)) (d (n "scraper") (r "^0.19") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_with") (r "^3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.8") (d #t) (k 2)))) (h "00dx9jc5md4jpj8339aih2ab79pp6z7j5frx3b0v8zvvr06d8sa0") (f (quote (("tags-all" "tag-attack-detection" "tag-authentication-management" "tag-client-attribute-certificate" "tag-client-initial-access" "tag-client-registration-policy" "tag-client-role-mappings" "tag-client-scopes" "tag-clients" "tag-component" "tag-groups" "tag-identity-providers" "tag-key" "tag-protocol-mappers" "tag-realms-admin" "tag-role-mapper" "tag-roles" "tag-roles-by-id" "tag-scope-mappings" "tag-users") ("tag-users") ("tag-scope-mappings") ("tag-roles-by-id") ("tag-roles") ("tag-role-mapper") ("tag-realms-admin") ("tag-protocol-mappers") ("tag-key") ("tag-identity-providers") ("tag-groups") ("tag-component") ("tag-clients") ("tag-client-scopes") ("tag-client-role-mappings") ("tag-client-registration-policy") ("tag-client-initial-access") ("tag-client-attribute-certificate") ("tag-authentication-management") ("tag-attack-detection") ("rc-vec") ("rc-val") ("rc-str") ("rc-map") ("rc" "rc-map" "rc-str" "rc-val" "rc-vec") ("default" "tags-all")))) (s 2) (e (quote (("schemars" "dep:schemars")))) (r "1.58")))

(define-public crate-keycloak-22.0.301 (c (n "keycloak") (v "22.0.301") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "std"))) (k 2)) (d (n "heck") (r "^0.5") (d #t) (k 2)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 2)) (d (n "reqwest") (r "^0.12") (f (quote ("json"))) (k 0)) (d (n "schemars") (r "^0.8.11") (f (quote ("derive"))) (o #t) (k 0)) (d (n "scraper") (r "^0.19") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_with") (r "^3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.8") (d #t) (k 2)))) (h "1qzc5g7k0iaaqlvw4m1sn8qlaza71vimx9inyssdpakav8c2pcqa") (f (quote (("tags-all" "tag-attack-detection" "tag-authentication-management" "tag-client-attribute-certificate" "tag-client-initial-access" "tag-client-registration-policy" "tag-client-role-mappings" "tag-client-scopes" "tag-clients" "tag-component" "tag-groups" "tag-identity-providers" "tag-key" "tag-protocol-mappers" "tag-realms-admin" "tag-role-mapper" "tag-roles" "tag-roles-by-id" "tag-scope-mappings" "tag-users") ("tag-users") ("tag-scope-mappings") ("tag-roles-by-id") ("tag-roles") ("tag-role-mapper") ("tag-realms-admin") ("tag-protocol-mappers") ("tag-key") ("tag-identity-providers") ("tag-groups") ("tag-component") ("tag-clients") ("tag-client-scopes") ("tag-client-role-mappings") ("tag-client-registration-policy") ("tag-client-initial-access") ("tag-client-attribute-certificate") ("tag-authentication-management") ("tag-attack-detection") ("rc-vec" "serde/rc") ("rc-val" "serde/rc") ("rc-str" "serde/rc") ("rc-map" "serde/rc") ("rc" "rc-map" "rc-str" "rc-val" "rc-vec") ("default" "tags-all")))) (s 2) (e (quote (("schemars" "dep:schemars")))) (r "1.58")))

(define-public crate-keycloak-22.0.500 (c (n "keycloak") (v "22.0.500") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "std"))) (k 2)) (d (n "heck") (r "^0.5") (d #t) (k 2)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 2)) (d (n "reqwest") (r "^0.12") (f (quote ("json"))) (k 0)) (d (n "schemars") (r "^0.8.11") (f (quote ("derive"))) (o #t) (k 0)) (d (n "scraper") (r "^0.19") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_with") (r "^3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.8") (d #t) (k 2)))) (h "0x4kjjrcc1hsl8b6xdvs5bwdvzpx8hzf0sk7i0wb7ssbm72lkxd6") (f (quote (("tags-all" "tag-attack-detection" "tag-authentication-management" "tag-client-attribute-certificate" "tag-client-initial-access" "tag-client-registration-policy" "tag-client-role-mappings" "tag-client-scopes" "tag-clients" "tag-component" "tag-groups" "tag-identity-providers" "tag-key" "tag-protocol-mappers" "tag-realms-admin" "tag-role-mapper" "tag-roles" "tag-roles-by-id" "tag-scope-mappings" "tag-users") ("tag-users") ("tag-scope-mappings") ("tag-roles-by-id") ("tag-roles") ("tag-role-mapper") ("tag-realms-admin") ("tag-protocol-mappers") ("tag-key") ("tag-identity-providers") ("tag-groups") ("tag-component") ("tag-clients") ("tag-client-scopes") ("tag-client-role-mappings") ("tag-client-registration-policy") ("tag-client-initial-access") ("tag-client-attribute-certificate") ("tag-authentication-management") ("tag-attack-detection") ("rc-vec" "serde/rc") ("rc-val" "serde/rc") ("rc-str" "serde/rc") ("rc-map" "serde/rc") ("rc" "rc-map" "rc-str" "rc-val" "rc-vec") ("default" "tags-all")))) (s 2) (e (quote (("schemars" "dep:schemars")))) (r "1.58")))

(define-public crate-keycloak-22.0.501 (c (n "keycloak") (v "22.0.501") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "std"))) (k 2)) (d (n "heck") (r "^0.5") (d #t) (k 2)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 2)) (d (n "reqwest") (r "^0.12") (f (quote ("json"))) (k 0)) (d (n "schemars") (r "^0.8.11") (f (quote ("derive"))) (o #t) (k 0)) (d (n "scraper") (r "^0.19") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_with") (r "^3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.8") (d #t) (k 2)))) (h "0sdiizqv3d7a3y5ryafpry37w13y433qcc30dlks7wdlc4mb715l") (f (quote (("tags-all" "tag-attack-detection" "tag-authentication-management" "tag-client-attribute-certificate" "tag-client-initial-access" "tag-client-registration-policy" "tag-client-role-mappings" "tag-client-scopes" "tag-clients" "tag-component" "tag-groups" "tag-identity-providers" "tag-key" "tag-protocol-mappers" "tag-realms-admin" "tag-role-mapper" "tag-roles" "tag-roles-by-id" "tag-scope-mappings" "tag-users") ("tag-users") ("tag-scope-mappings") ("tag-roles-by-id") ("tag-roles") ("tag-role-mapper") ("tag-realms-admin") ("tag-protocol-mappers") ("tag-key") ("tag-identity-providers") ("tag-groups") ("tag-component") ("tag-clients") ("tag-client-scopes") ("tag-client-role-mappings") ("tag-client-registration-policy") ("tag-client-initial-access") ("tag-client-attribute-certificate") ("tag-authentication-management") ("tag-attack-detection") ("rc-vec" "serde/rc") ("rc-val" "serde/rc") ("rc-str" "serde/rc") ("rc-map" "serde/rc") ("rc" "rc-map" "rc-str" "rc-val" "rc-vec") ("default" "tags-all")))) (s 2) (e (quote (("schemars" "dep:schemars")))) (r "1.58")))

(define-public crate-keycloak-23.0.0 (c (n "keycloak") (v "23.0.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "std"))) (k 2)) (d (n "heck") (r "^0.5") (d #t) (k 2)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 2)) (d (n "reqwest") (r "^0.12") (f (quote ("json"))) (k 0)) (d (n "schemars") (r "^0.8.11") (f (quote ("derive"))) (o #t) (k 0)) (d (n "scraper") (r "^0.19") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_with") (r "^3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.8") (d #t) (k 2)))) (h "0iawnza2q05rx69qm3fszdvhsm5wql2571kc3bc55lgp1jbpwjrq") (f (quote (("tags-all" "tag-attack-detection" "tag-authentication-management" "tag-client-attribute-certificate" "tag-client-initial-access" "tag-client-registration-policy" "tag-client-role-mappings" "tag-client-scopes" "tag-clients" "tag-component" "tag-groups" "tag-identity-providers" "tag-key" "tag-protocol-mappers" "tag-realms-admin" "tag-role-mapper" "tag-roles" "tag-roles-by-id" "tag-scope-mappings" "tag-users") ("tag-users") ("tag-scope-mappings") ("tag-roles-by-id") ("tag-roles") ("tag-role-mapper") ("tag-realms-admin") ("tag-protocol-mappers") ("tag-key") ("tag-identity-providers") ("tag-groups") ("tag-component") ("tag-clients") ("tag-client-scopes") ("tag-client-role-mappings") ("tag-client-registration-policy") ("tag-client-initial-access") ("tag-client-attribute-certificate") ("tag-authentication-management") ("tag-attack-detection") ("rc-vec" "serde/rc") ("rc-val" "serde/rc") ("rc-str" "serde/rc") ("rc-map" "serde/rc") ("rc" "rc-map" "rc-str" "rc-val" "rc-vec") ("default" "tags-all")))) (s 2) (e (quote (("schemars" "dep:schemars")))) (r "1.58")))

(define-public crate-keycloak-23.0.400 (c (n "keycloak") (v "23.0.400") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "std"))) (k 2)) (d (n "heck") (r "^0.5") (d #t) (k 2)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 2)) (d (n "reqwest") (r "^0.12") (f (quote ("json"))) (k 0)) (d (n "schemars") (r "^0.8.11") (f (quote ("derive"))) (o #t) (k 0)) (d (n "scraper") (r "^0.19") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_with") (r "^3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.8") (d #t) (k 2)))) (h "0sif65lpv26h0zk6vlf582y2357nf8dpanq5vdmysnx0ymn16q2j") (f (quote (("tags-all" "tag-attack-detection" "tag-authentication-management" "tag-client-attribute-certificate" "tag-client-initial-access" "tag-client-registration-policy" "tag-client-role-mappings" "tag-client-scopes" "tag-clients" "tag-component" "tag-groups" "tag-identity-providers" "tag-key" "tag-protocol-mappers" "tag-realms-admin" "tag-role-mapper" "tag-roles" "tag-roles-by-id" "tag-scope-mappings" "tag-users") ("tag-users") ("tag-scope-mappings") ("tag-roles-by-id") ("tag-roles") ("tag-role-mapper") ("tag-realms-admin") ("tag-protocol-mappers") ("tag-key") ("tag-identity-providers") ("tag-groups") ("tag-component") ("tag-clients") ("tag-client-scopes") ("tag-client-role-mappings") ("tag-client-registration-policy") ("tag-client-initial-access") ("tag-client-attribute-certificate") ("tag-authentication-management") ("tag-attack-detection") ("rc-vec" "serde/rc") ("rc-val" "serde/rc") ("rc-str" "serde/rc") ("rc-map" "serde/rc") ("rc" "rc-map" "rc-str" "rc-val" "rc-vec") ("default" "tags-all")))) (s 2) (e (quote (("schemars" "dep:schemars")))) (r "1.58")))

(define-public crate-keycloak-24.0.0 (c (n "keycloak") (v "24.0.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "std"))) (k 2)) (d (n "heck") (r "^0.5") (d #t) (k 2)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 2)) (d (n "reqwest") (r "^0.12") (f (quote ("json"))) (k 0)) (d (n "schemars") (r "^0.8.11") (f (quote ("derive"))) (o #t) (k 0)) (d (n "scraper") (r "^0.19") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_with") (r "^3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.8") (d #t) (k 2)))) (h "0fxkj1x7qy9jabkys136jashr9shcbgj88nxr11sf7lcfyn9qjf6") (f (quote (("tags-all" "tag-attack-detection" "tag-authentication-management" "tag-client-attribute-certificate" "tag-client-initial-access" "tag-client-registration-policy" "tag-client-role-mappings" "tag-client-scopes" "tag-clients" "tag-component" "tag-groups" "tag-identity-providers" "tag-key" "tag-protocol-mappers" "tag-realms-admin" "tag-role-mapper" "tag-roles" "tag-roles-by-id" "tag-scope-mappings" "tag-users") ("tag-users") ("tag-scope-mappings") ("tag-roles-by-id") ("tag-roles") ("tag-role-mapper") ("tag-realms-admin") ("tag-protocol-mappers") ("tag-key") ("tag-identity-providers") ("tag-groups") ("tag-component") ("tag-clients") ("tag-client-scopes") ("tag-client-role-mappings") ("tag-client-registration-policy") ("tag-client-initial-access") ("tag-client-attribute-certificate") ("tag-authentication-management") ("tag-attack-detection") ("rc-vec" "serde/rc") ("rc-val" "serde/rc") ("rc-str" "serde/rc") ("rc-map" "serde/rc") ("rc" "rc-map" "rc-str" "rc-val" "rc-vec") ("default" "tags-all")))) (s 2) (e (quote (("schemars" "dep:schemars")))) (r "1.74")))

(define-public crate-keycloak-24.0.200 (c (n "keycloak") (v "24.0.200") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "std"))) (k 2)) (d (n "heck") (r "^0.5") (d #t) (k 2)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 2)) (d (n "reqwest") (r "^0.12") (f (quote ("json"))) (k 0)) (d (n "schemars") (r "^0.8.11") (f (quote ("derive"))) (o #t) (k 0)) (d (n "scraper") (r "^0.19") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_with") (r "^3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.8") (d #t) (k 2)))) (h "1kglrhrv0ag6bpzi6izqgr0baidd24gpc2dj4qc8isjlpidyl4il") (f (quote (("tags-all" "tag-attack-detection" "tag-authentication-management" "tag-client-attribute-certificate" "tag-client-initial-access" "tag-client-registration-policy" "tag-client-role-mappings" "tag-client-scopes" "tag-clients" "tag-component" "tag-groups" "tag-identity-providers" "tag-key" "tag-protocol-mappers" "tag-realms-admin" "tag-role-mapper" "tag-roles" "tag-roles-by-id" "tag-scope-mappings" "tag-users") ("tag-users") ("tag-scope-mappings") ("tag-roles-by-id") ("tag-roles") ("tag-role-mapper") ("tag-realms-admin") ("tag-protocol-mappers") ("tag-key") ("tag-identity-providers") ("tag-groups") ("tag-component") ("tag-clients") ("tag-client-scopes") ("tag-client-role-mappings") ("tag-client-registration-policy") ("tag-client-initial-access") ("tag-client-attribute-certificate") ("tag-authentication-management") ("tag-attack-detection") ("rc-vec" "serde/rc") ("rc-val" "serde/rc") ("rc-str" "serde/rc") ("rc-map" "serde/rc") ("rc" "rc-map" "rc-str" "rc-val" "rc-vec") ("default" "tags-all")))) (s 2) (e (quote (("schemars" "dep:schemars")))) (r "1.74")))

(define-public crate-keycloak-24.0.300 (c (n "keycloak") (v "24.0.300") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "std"))) (k 2)) (d (n "heck") (r "^0.5") (d #t) (k 2)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 2)) (d (n "reqwest") (r "^0.12") (f (quote ("json"))) (k 0)) (d (n "schemars") (r "^0.8.11") (f (quote ("derive"))) (o #t) (k 0)) (d (n "scraper") (r "^0.19") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_with") (r "^3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.8") (d #t) (k 2)))) (h "026y3zkfg2vky4wiz7icn2zqky4agp0lkkgmzm4j69sr4mmjds15") (f (quote (("tags-all" "tag-attack-detection" "tag-authentication-management" "tag-client-attribute-certificate" "tag-client-initial-access" "tag-client-registration-policy" "tag-client-role-mappings" "tag-client-scopes" "tag-clients" "tag-component" "tag-groups" "tag-identity-providers" "tag-key" "tag-protocol-mappers" "tag-realms-admin" "tag-role-mapper" "tag-roles" "tag-roles-by-id" "tag-scope-mappings" "tag-users") ("tag-users") ("tag-scope-mappings") ("tag-roles-by-id") ("tag-roles") ("tag-role-mapper") ("tag-realms-admin") ("tag-protocol-mappers") ("tag-key") ("tag-identity-providers") ("tag-groups") ("tag-component") ("tag-clients") ("tag-client-scopes") ("tag-client-role-mappings") ("tag-client-registration-policy") ("tag-client-initial-access") ("tag-client-attribute-certificate") ("tag-authentication-management") ("tag-attack-detection") ("rc-vec" "serde/rc") ("rc-val" "serde/rc") ("rc-str" "serde/rc") ("rc-map" "serde/rc") ("rc" "rc-map" "rc-str" "rc-val" "rc-vec") ("default" "tags-all")))) (s 2) (e (quote (("schemars" "dep:schemars")))) (r "1.74")))

(define-public crate-keycloak-24.0.301 (c (n "keycloak") (v "24.0.301") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "std"))) (k 2)) (d (n "heck") (r "^0.5") (d #t) (k 2)) (d (n "indexmap") (r "^2") (f (quote ("serde"))) (d #t) (k 2)) (d (n "reqwest") (r "^0.12") (f (quote ("json"))) (k 0)) (d (n "schemars") (r "^0.8.11") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_with") (r "^3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.8") (d #t) (k 2)))) (h "0fwsi62rcp8x3xczhxqsbarkqyablbkm2hzhapjwrja6x8c4y7p7") (f (quote (("tags-all" "tag-attack-detection" "tag-authentication-management" "tag-client-attribute-certificate" "tag-client-initial-access" "tag-client-registration-policy" "tag-client-role-mappings" "tag-client-scopes" "tag-clients" "tag-component" "tag-groups" "tag-identity-providers" "tag-key" "tag-protocol-mappers" "tag-realms-admin" "tag-role-mapper" "tag-roles" "tag-roles-by-id" "tag-scope-mappings" "tag-users") ("tag-users") ("tag-scope-mappings") ("tag-roles-by-id") ("tag-roles") ("tag-role-mapper") ("tag-realms-admin") ("tag-protocol-mappers") ("tag-key") ("tag-identity-providers") ("tag-groups") ("tag-component") ("tag-clients") ("tag-client-scopes") ("tag-client-role-mappings") ("tag-client-registration-policy") ("tag-client-initial-access") ("tag-client-attribute-certificate") ("tag-authentication-management") ("tag-attack-detection") ("rc-vec" "serde/rc") ("rc-val" "serde/rc") ("rc-str" "serde/rc") ("rc-map" "serde/rc") ("rc" "rc-map" "rc-str" "rc-val" "rc-vec") ("default" "tags-all")))) (s 2) (e (quote (("schemars" "dep:schemars")))) (r "1.74")))

