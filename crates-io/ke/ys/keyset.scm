(define-module (crates-io ke ys keyset) #:use-module (crates-io))

(define-public crate-keyset-0.1.0 (c (n "keyset") (v "0.1.0") (d (list (d (n "array-init") (r "^2.0") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "interp") (r "^1.0") (f (quote ("interp_array"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "rgb") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "svg") (r "^0.13") (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 0)) (d (n "ttf-parser") (r "^0.18") (d #t) (k 0)))) (h "0aq8rzjygnri5gmlk1ylp62jdgz4l4dvdvm3k1xcvspxk6z2nhqx") (r "1.60")))

(define-public crate-keyset-0.1.1 (c (n "keyset") (v "0.1.1") (d (list (d (n "array-init") (r "^2.0") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "interp") (r "^1.0") (f (quote ("interp_array"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "rgb") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "svg") (r "^0.13") (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 0)) (d (n "ttf-parser") (r "^0.18") (d #t) (k 0)))) (h "0wnf9s7gbbrm4dp7302c8w3m5q5m49xyw50br1h9g51nr26fb2cj") (r "1.64")))

(define-public crate-keyset-0.2.0 (c (n "keyset") (v "0.2.0") (d (list (d (n "assert_approx_eq") (r "^1.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "interp") (r "^1.0") (f (quote ("interp_array"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kle-serial") (r "^0.2") (d #t) (k 0)) (d (n "kurbo") (r "^0.9") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 2)) (d (n "miniz_oxide") (r "^0.7") (d #t) (k 0)) (d (n "pdf-writer") (r "^0.8") (d #t) (k 0)) (d (n "rgb") (r "^0.8") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "svg") (r "^0.13") (d #t) (k 0)) (d (n "tiny-skia") (r "^0.11") (d #t) (k 0)) (d (n "toml") (r "^0.7") (f (quote ("parse"))) (k 0)) (d (n "ttf-parser") (r "^0.18") (f (quote ("std"))) (k 0)) (d (n "unindent") (r "^0.2") (d #t) (k 2)))) (h "0103fysmnp6naczmikmx4k7a1khhb19phsx5akd1dg0jq54mc8h1") (r "1.65")))

(define-public crate-keyset-0.2.1 (c (n "keyset") (v "0.2.1") (d (list (d (n "assert_approx_eq") (r "^1.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "interp") (r "^1.0") (f (quote ("interp_array"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "kle-serial") (r "^0.2") (d #t) (k 0)) (d (n "kurbo") (r "^0.9") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 2)) (d (n "miniz_oxide") (r "^0.7") (d #t) (k 0)) (d (n "pdf-writer") (r "^0.8") (d #t) (k 0)) (d (n "rgb") (r "^0.8") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "svg") (r "^0.13") (d #t) (k 0)) (d (n "tiny-skia") (r "^0.11") (d #t) (k 0)) (d (n "toml") (r "^0.7") (f (quote ("parse"))) (k 0)) (d (n "ttf-parser") (r "^0.18") (f (quote ("std"))) (k 0)) (d (n "unindent") (r "^0.2") (d #t) (k 2)))) (h "11j8hbbyggannhwb13gxkns1x6qmm40xlhhiwl3hw9ia92dgaff0") (r "1.65")))

(define-public crate-keyset-0.3.0 (c (n "keyset") (v "0.3.0") (d (list (d (n "color") (r "^0.3.0") (d #t) (k 0) (p "keyset-color")) (d (n "drawing") (r "^0.3.0") (f (quote ("pdf" "png" "svg"))) (d #t) (k 0) (p "keyset-drawing")) (d (n "font") (r "^0.3.0") (d #t) (k 0) (p "keyset-font")) (d (n "fontdb") (r "^0.16") (d #t) (k 2)) (d (n "key") (r "^0.3.0") (f (quote ("kle"))) (d #t) (k 0) (p "keyset-key")) (d (n "profile") (r "^0.3.0") (f (quote ("toml"))) (d #t) (k 0) (p "keyset-profile")))) (h "0sz8fscqmpxzmjbmy1plyiz54s7rrld0idy821cmq5wh3sl2wlzx") (r "1.70")))

(define-public crate-keyset-0.3.1 (c (n "keyset") (v "0.3.1") (d (list (d (n "color") (r "^0.3.1") (d #t) (k 0) (p "keyset-color")) (d (n "drawing") (r "^0.3.1") (f (quote ("pdf" "png" "svg"))) (d #t) (k 0) (p "keyset-drawing")) (d (n "font") (r "^0.3.1") (d #t) (k 0) (p "keyset-font")) (d (n "fontdb") (r "^0.16") (d #t) (k 2)) (d (n "key") (r "^0.3.1") (f (quote ("kle"))) (d #t) (k 0) (p "keyset-key")) (d (n "profile") (r "^0.3.1") (f (quote ("toml"))) (d #t) (k 0) (p "keyset-profile")))) (h "1wn1wsnrc8mg7jm6vh0bzvia3il72h33qimnc1gml8sy346ffpcv") (r "1.70")))

(define-public crate-keyset-0.3.2 (c (n "keyset") (v "0.3.2") (d (list (d (n "color") (r "^0.3.2") (d #t) (k 0) (p "keyset-color")) (d (n "drawing") (r "^0.3.2") (f (quote ("pdf" "png" "svg"))) (d #t) (k 0) (p "keyset-drawing")) (d (n "font") (r "^0.3.2") (d #t) (k 0) (p "keyset-font")) (d (n "fontdb") (r "^0.16") (d #t) (k 2)) (d (n "key") (r "^0.3.2") (f (quote ("kle"))) (d #t) (k 0) (p "keyset-key")) (d (n "profile") (r "^0.3.2") (f (quote ("toml"))) (d #t) (k 0) (p "keyset-profile")))) (h "010pfa9a6zznpn79lcakm8wdlv4xvp8hlyqj71ngrvc4ckrlcbdw") (r "1.70")))

