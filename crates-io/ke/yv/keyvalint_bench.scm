(define-module (crates-io ke yv keyvalint_bench) #:use-module (crates-io))

(define-public crate-keyvalint_bench-0.1.0 (c (n "keyvalint_bench") (v "0.1.0") (d (list (d (n "armnod") (r "^0.5") (d #t) (k 0)) (d (n "arrrg") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "arrrg_derive") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "biometrics") (r "^0.5") (d #t) (k 0)) (d (n "getopts") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "guacamole") (r "^0.5") (d #t) (k 0)) (d (n "keyvalint") (r "^0.2") (d #t) (k 0)) (d (n "lsmtk") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rocksdb") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "sst") (r "^0.5") (d #t) (k 0)) (d (n "sync42") (r "^0.5") (d #t) (k 0)) (d (n "utilz") (r "^0.3") (d #t) (k 0)) (d (n "zerror") (r "^0.3") (d #t) (k 0)))) (h "0jw1j3yx2942hlp8rqmzqkyn2av1k4m28xfn0894nr54jvxashl2") (f (quote (("default" "binaries") ("binaries" "command_line")))) (s 2) (e (quote (("rocksdb" "dep:rocksdb" "keyvalint/rocksdb") ("command_line" "dep:arrrg" "dep:arrrg_derive" "dep:getopts"))))))

