(define-module (crates-io #{2}# b3) #:use-module (crates-io))

(define-public crate-b3-0.1.0 (c (n "b3") (v "0.1.0") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cool-bitvector") (r "^0.1.1") (d #t) (k 0)) (d (n "cranelift") (r "^0.95") (d #t) (k 2)) (d (n "cranelift-jit") (r "^0.95") (d #t) (k 2)) (d (n "cranelift-module") (r "^0.95") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "indexmap") (r "^2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "macroassembler") (r "^0.1") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1") (d #t) (k 2)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "pico-args") (r "^0.5") (d #t) (k 2)) (d (n "target-lexicon") (r "^0.12") (d #t) (k 2)) (d (n "tinyvec") (r "^1.6") (f (quote ("alloc"))) (d #t) (k 0)))) (h "1h3v9z5sjbmmnjj6w5ifqrz5wxxrpdb5a4239vd8h78i4sx9kc95")))

(define-public crate-b3-0.1.1 (c (n "b3") (v "0.1.1") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cool-bitvector") (r "^0.1.1") (d #t) (k 0)) (d (n "cranelift") (r "^0.95") (d #t) (k 2)) (d (n "cranelift-jit") (r "^0.95") (d #t) (k 2)) (d (n "cranelift-module") (r "^0.95") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "indexmap") (r "^2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "macroassembler") (r "^0.1") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1") (d #t) (k 2)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "pico-args") (r "^0.5") (d #t) (k 2)) (d (n "target-lexicon") (r "^0.12") (d #t) (k 2)) (d (n "tinyvec") (r "^1.6") (f (quote ("alloc"))) (d #t) (k 0)))) (h "02f3zvmra310sb5gyq4rdy7ilbjxsdnlaj5nzscvz843wj7ikcxm")))

(define-public crate-b3-0.1.2 (c (n "b3") (v "0.1.2") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cool-bitvector") (r "^0.1.1") (d #t) (k 0)) (d (n "cranelift") (r "^0.95") (d #t) (k 2)) (d (n "cranelift-jit") (r "^0.95") (d #t) (k 2)) (d (n "cranelift-module") (r "^0.95") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "indexmap") (r "^2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "macroassembler") (r "^0.1") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1") (d #t) (k 2)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "pico-args") (r "^0.5") (d #t) (k 2)) (d (n "target-lexicon") (r "^0.12") (d #t) (k 2)) (d (n "tinyvec") (r "^1.6") (f (quote ("alloc"))) (d #t) (k 0)))) (h "0259iwszbjamqv1k8wcmwp9dhmq2jimncrans04r785srczambk4")))

(define-public crate-b3-0.1.3 (c (n "b3") (v "0.1.3") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cool-bitvector") (r "^0.1.1") (d #t) (k 0)) (d (n "cranelift") (r "^0.95") (d #t) (k 2)) (d (n "cranelift-jit") (r "^0.95") (d #t) (k 2)) (d (n "cranelift-module") (r "^0.95") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "indexmap") (r "^2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "macroassembler") (r "^0.1.1") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1") (d #t) (k 2)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "pico-args") (r "^0.5") (d #t) (k 2)) (d (n "target-lexicon") (r "^0.12") (d #t) (k 2)) (d (n "tinyvec") (r "^1.6") (f (quote ("alloc"))) (d #t) (k 0)))) (h "11gw0hpypqrf4mnnx6lwp37500g4700y28njhbybxxkynsqjcrfn")))

(define-public crate-b3-0.1.4 (c (n "b3") (v "0.1.4") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cool-bitvector") (r "^0.1.1") (d #t) (k 0)) (d (n "cranelift") (r "^0.95") (d #t) (k 2)) (d (n "cranelift-jit") (r "^0.95") (d #t) (k 2)) (d (n "cranelift-module") (r "^0.95") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "indexmap") (r "^2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "macroassembler") (r "^0.1.1") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1") (d #t) (k 2)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "pico-args") (r "^0.5") (d #t) (k 2)) (d (n "target-lexicon") (r "^0.12") (d #t) (k 2)) (d (n "tinyvec") (r "^1.6") (f (quote ("alloc"))) (d #t) (k 0)))) (h "0liy9y0mc7fgr0dcgpph0l3cp6g5v3aqwikk0d11ry5xpw119zkn")))

(define-public crate-b3-0.1.5 (c (n "b3") (v "0.1.5") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cool-bitvector") (r "^0.1.1") (d #t) (k 0)) (d (n "cranelift") (r "^0.95") (d #t) (k 2)) (d (n "cranelift-jit") (r "^0.95") (d #t) (k 2)) (d (n "cranelift-module") (r "^0.95") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "indexmap") (r "^2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "macroassembler") (r "^1.0.1") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1") (d #t) (k 2)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "pico-args") (r "^0.5") (d #t) (k 2)) (d (n "target-lexicon") (r "^0.12") (d #t) (k 2)) (d (n "tinyvec") (r "^1.6") (f (quote ("alloc"))) (d #t) (k 0)))) (h "17ka9fa7qm3nv30g1hxzf0jz5zw39kv33sr013r88433kwxpzkv6")))

(define-public crate-b3-0.1.6 (c (n "b3") (v "0.1.6") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cool-bitvector") (r "^0.1.1") (d #t) (k 0)) (d (n "cranelift") (r "^0.95") (d #t) (k 2)) (d (n "cranelift-jit") (r "^0.95") (d #t) (k 2)) (d (n "cranelift-module") (r "^0.95") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "indexmap") (r "^2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "macroassembler") (r "^1.0.1") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1") (d #t) (k 2)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "pico-args") (r "^0.5") (d #t) (k 2)) (d (n "target-lexicon") (r "^0.12") (d #t) (k 2)) (d (n "tinyvec") (r "^1.6") (f (quote ("alloc"))) (d #t) (k 0)))) (h "1p2smbmm80qm0zrkl24l1j3akgkyy0bm7dg9idmdxhra2ywa5mql") (f (quote (("disassembly" "macroassembler/x86-disasm" "macroassembler/arm-disasm"))))))

(define-public crate-b3-0.1.7 (c (n "b3") (v "0.1.7") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cool-bitvector") (r "^0.1.1") (d #t) (k 0)) (d (n "cranelift") (r "^0.95") (d #t) (k 2)) (d (n "cranelift-jit") (r "^0.95") (d #t) (k 2)) (d (n "cranelift-module") (r "^0.95") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "indexmap") (r "^2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "macroassembler") (r "^1.0.1") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1") (d #t) (k 2)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "pico-args") (r "^0.5") (d #t) (k 2)) (d (n "target-lexicon") (r "^0.12") (d #t) (k 2)) (d (n "tinyvec") (r "^1.6") (f (quote ("alloc"))) (d #t) (k 0)))) (h "17ykkmny1bs7zjnpkv1l5pgq7pqw8rc00g3wl7nqfql5ccgr4qpc") (f (quote (("disassembly" "macroassembler/x86-disasm" "macroassembler/arm-disasm"))))))

(define-public crate-b3-0.1.8 (c (n "b3") (v "0.1.8") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cool-bitvector") (r "^0.1.1") (d #t) (k 0)) (d (n "cranelift") (r "^0.95") (d #t) (k 2)) (d (n "cranelift-jit") (r "^0.95") (d #t) (k 2)) (d (n "cranelift-module") (r "^0.95") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "indexmap") (r "^2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "macroassembler") (r "^1.0.1") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1") (d #t) (k 2)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "pico-args") (r "^0.5") (d #t) (k 2)) (d (n "target-lexicon") (r "^0.12") (d #t) (k 2)) (d (n "tinyvec") (r "^1.6") (f (quote ("alloc"))) (d #t) (k 0)))) (h "10jbxbqjfsj7s9spiwjr7ybrgs8i1fgagxiqr6dvq3cvza52rxy3") (f (quote (("disassembly" "macroassembler/x86-disasm" "macroassembler/arm-disasm"))))))

(define-public crate-b3-0.1.9 (c (n "b3") (v "0.1.9") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cool-bitvector") (r "^0.1.1") (d #t) (k 0)) (d (n "cranelift") (r "^0.95") (d #t) (k 2)) (d (n "cranelift-jit") (r "^0.95") (d #t) (k 2)) (d (n "cranelift-module") (r "^0.95") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "indexmap") (r "^2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "macroassembler") (r "^1.0.3") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1") (d #t) (k 2)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "pico-args") (r "^0.5") (d #t) (k 2)) (d (n "target-lexicon") (r "^0.12") (d #t) (k 2)) (d (n "tinyvec") (r "^1.6") (f (quote ("alloc"))) (d #t) (k 0)))) (h "1qkgpailw1jfspw0dkfw9y39dgxjxvi2k3xym4k7909qq8ss5w7x") (f (quote (("disassembly" "macroassembler/x86-disasm" "macroassembler/arm-disasm"))))))

