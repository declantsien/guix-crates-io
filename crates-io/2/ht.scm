(define-module (crates-io #{2}# ht) #:use-module (crates-io))

(define-public crate-ht-0.1.0 (c (n "ht") (v "0.1.0") (d (list (d (n "ansi_term") (r "^0.10") (d #t) (k 0)) (d (n "clap") (r "^2.30") (f (quote ("color" "suggestions" "vec_map"))) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.8") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "1cmi9l0m1gkipsr9dxrb0djkm56jy8iy2pb8ck6b5d4wdj7qw089")))

(define-public crate-ht-0.2.0 (c (n "ht") (v "0.2.0") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0") (d #t) (k 2)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "indicatif") (r "^0.15.0") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "jsonxf") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("stream" "json" "gzip" "brotli"))) (d #t) (k 0)) (d (n "rpassword") (r "^5.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "syntect") (r "^4.4") (f (quote ("parsing" "html" "yaml-load" "dump-load" "dump-create" "regex-onig"))) (k 0)) (d (n "syntect") (r "^4.4") (k 1)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.3") (f (quote ("codec"))) (d #t) (k 0)))) (h "0ldkpgf1ap1qf5jc6mp8wadcwjfngz2vaiqvd7vsav3ns3pqk905")))

(define-public crate-ht-0.3.0 (c (n "ht") (v "0.3.0") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0") (d #t) (k 2)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "indicatif") (r "^0.15.0") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "jsonxf") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("stream" "json" "gzip" "brotli"))) (d #t) (k 0)) (d (n "rpassword") (r "^5.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "syntect") (r "^4.4") (f (quote ("parsing" "html" "yaml-load" "dump-load" "dump-create" "regex-onig"))) (k 0)) (d (n "syntect") (r "^4.4") (k 1)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.3") (f (quote ("codec"))) (d #t) (k 0)))) (h "0qiq3sjsajmg4lrn1hcrzqfnscl86xpw0hbl4nsg8k0lqia4swjx")))

(define-public crate-ht-0.3.2 (c (n "ht") (v "0.3.2") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0") (d #t) (k 2)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "indicatif") (r "^0.15.0") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "jsonxf") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("rustls-tls" "stream" "json" "gzip" "brotli"))) (k 0)) (d (n "rpassword") (r "^5.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "syntect") (r "^4.4") (f (quote ("parsing" "html" "yaml-load" "dump-load" "dump-create" "regex-onig"))) (k 0)) (d (n "syntect") (r "^4.4") (k 1)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.3") (f (quote ("codec"))) (d #t) (k 0)))) (h "1m2y3km8i3i2y75q2b6dyr2pswgna2kszwzphwr9rsy6yq9zr1fz")))

(define-public crate-ht-0.3.3 (c (n "ht") (v "0.3.3") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0") (d #t) (k 2)) (d (n "assert_matches") (r "^1.4.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "indicatif") (r "^0.15.0") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "jsonxf") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("rustls-tls" "stream" "json" "gzip" "brotli"))) (k 0)) (d (n "rpassword") (r "^5.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "syntect") (r "^4.4") (f (quote ("parsing" "html" "yaml-load" "dump-load" "dump-create" "regex-onig"))) (k 0)) (d (n "syntect") (r "^4.4") (k 1)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.3") (f (quote ("codec"))) (d #t) (k 0)))) (h "11ams6kr6jyv7icqhg6klgpi566rv5jxfnzdlzfawx0dbqlxrxa6")))

(define-public crate-ht-0.3.5 (c (n "ht") (v "0.3.5") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0") (d #t) (k 2)) (d (n "assert_matches") (r "^1.4.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "indicatif") (r "^0.15.0") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "jsonxf") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "stream" "json" "gzip" "brotli" "multipart"))) (k 0)) (d (n "rpassword") (r "^5.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "syntect") (r "^4.4") (f (quote ("parsing" "html" "yaml-load" "dump-load" "dump-create" "regex-onig"))) (k 0)) (d (n "syntect") (r "^4.4") (k 1)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.6") (f (quote ("codec"))) (d #t) (k 0)))) (h "1cpya624bi5nwm96vkbxyj55djgfdp0qz07kjpvm8xgxq174iv8x")))

(define-public crate-ht-0.4.0 (c (n "ht") (v "0.4.0") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0") (d #t) (k 2)) (d (n "assert_matches") (r "^1.4.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "indicatif") (r "^0.15.0") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "jsonxf") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "stream" "json" "gzip" "brotli" "multipart"))) (k 0)) (d (n "rpassword") (r "^5.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "syntect") (r "^4.4") (f (quote ("parsing" "html" "yaml-load" "dump-load" "dump-create" "regex-onig"))) (k 0)) (d (n "syntect") (r "^4.4") (k 1)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.6") (f (quote ("codec"))) (d #t) (k 0)))) (h "1nhkw9njwik46fwqrhw0jbd3d9cmcjwwalrpsd0ml4v6cvs9nj93")))

(define-public crate-ht-0.5.0 (c (n "ht") (v "0.5.0") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0") (d #t) (k 2)) (d (n "assert_matches") (r "^1.4.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "indicatif") (r "^0.15.0") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "jsonxf") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "stream" "json" "gzip" "brotli" "multipart"))) (k 0)) (d (n "rpassword") (r "^5.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "syntect") (r "^4.4") (f (quote ("parsing" "html" "yaml-load" "dump-load" "dump-create" "regex-onig"))) (k 0)) (d (n "syntect") (r "^4.4") (k 1)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.6") (f (quote ("codec"))) (d #t) (k 0)))) (h "0pjg62vlhvjhmnjrrldxvwbamzh7a1v9gc4nz0r5a32339q1hcyc")))

(define-public crate-ht-0.6.0 (c (n "ht") (v "0.6.0") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0") (d #t) (k 2)) (d (n "assert_matches") (r "^1.4.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "indicatif") (r "^0.15.0") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "jsonxf") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "predicates") (r "^1.0.7") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "stream" "json" "gzip" "brotli" "multipart"))) (k 0)) (d (n "rpassword") (r "^5.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "syntect") (r "^4.4") (f (quote ("parsing" "html" "yaml-load" "dump-load" "dump-create" "regex-onig"))) (k 0)) (d (n "syntect") (r "^4.4") (k 1)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.6") (f (quote ("codec"))) (d #t) (k 0)))) (h "0q5n96h5f92y62c5lr13ii9wwmanpivcsk7g9nfk4cnmwcqqj74w")))

(define-public crate-ht-0.6.1 (c (n "ht") (v "0.6.1") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0") (d #t) (k 2)) (d (n "assert_matches") (r "^1.4.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "indicatif") (r "^0.15.0") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "jsonxf") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "predicates") (r "^1.0.7") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "stream" "json" "gzip" "brotli" "multipart"))) (k 0)) (d (n "rpassword") (r "^5.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "syntect") (r "^4.4") (f (quote ("parsing" "html" "yaml-load" "dump-load" "dump-create" "regex-onig"))) (k 0)) (d (n "syntect") (r "^4.4") (k 1)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.6") (f (quote ("codec"))) (d #t) (k 0)))) (h "12yfb90gig0mh7bvfdkmr8f5gs2lkwdgl2ladlg3c5jf2nkymwcl")))

