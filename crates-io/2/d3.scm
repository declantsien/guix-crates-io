(define-module (crates-io #{2}# d3) #:use-module (crates-io))

(define-public crate-d3-0.1.2 (c (n "d3") (v "0.1.2") (d (list (d (n "atomic_refcell") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "d3-components") (r "^0.1.2") (d #t) (k 0)) (d (n "d3-core") (r "^0.1.2") (d #t) (k 0)) (d (n "d3-derive") (r "^0.1.2") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "simplelog") (r "^0.8") (d #t) (k 0)) (d (n "smart-default") (r "^0.6") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (k 2)))) (h "1nq710nsxklmkx3y2pjixqp3v45knvc4r47bs2nsnfi7zk66cc6y")))

(define-public crate-d3-0.1.3 (c (n "d3") (v "0.1.3") (d (list (d (n "atomic_refcell") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "d3-components") (r "^0.1.3") (d #t) (k 0)) (d (n "d3-core") (r "^0.1.3") (d #t) (k 0)) (d (n "d3-derive") (r "^0.1.3") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "simplelog") (r "^0.8") (d #t) (k 0)) (d (n "smart-default") (r "^0.6") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (k 2)))) (h "04v8v46sfwhnihsi5k0kiwlbyqh9015hmfgcxb63m3nhwg9pss7f")))

